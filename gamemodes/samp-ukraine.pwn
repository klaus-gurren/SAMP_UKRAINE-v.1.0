#pragma disablerecursion

/* 
							Версія ігрового мода 1.0.
	Практично ідентична версія мода при відкриті Samp Ukraine 1.0.
	Ця версія мода не повнісю перекладена, багато русизму!
	Автором мода та допрацювання являється GrenX_Studio (https://t.me/GrenX_Studio).
	Основний та єдиний розробник ігрового мода зі сторони студії (Klaus_Gurren).
	При пересилці на інші форуми обов'язково вказувати автора.
	За питаннями або допомогою звертайтеся в студію".
	
*/

main() {
    print("_______________________________________________________");
    print("Мод розроблений та допрацьований студією GrenX");
    print("Посилання на студію: https://t.me/GrenX_Studio");
	print("the developer: Klaus_Gurren.						  ");
	print("Samp-ukraine v.1.0, inc. all rights reserved. 	  ");
	print("_______________________________________________________");
}

@___If_u_can_read_this_u_r_nerd();
@___If_u_can_read_this_u_r_nerd()
{
	#emit	 stack	 0x7FFFFFFF
	#emit	 inc.s	 cellmax
	static const ___[][] = {"samp-ukraine", ".ua"};
	#emit	 retn
	#emit	 load.s.pri	 ___
	#emit	 proc
	#emit	 proc
	#emit	 fill	 cellmax
	#emit	 proc
	#emit	 stack    1
	#emit	 stor.alt	 ___
	#emit	 strb.i    2
	#emit	 switch	   4
	#emit	 retn
L1:
	#emit	 jump	 L1
	#emit	 zero	 cellmin
}
/*============================================================================*/
#include <a_samp>
#include <streamer>
#include <Pawn.CMD>
#include <a_mysql>
#include <sscanf2>
#include <foreach>
#include <MD5>
#include <crashdetect>
#include <Pawn.RakNet>
#include <Pawn.Regex>
#include <mxdate>
#include <TOTP>
#include <gvar>
#include <nex-ac>
#include <weapon-config>
/*=========================СКРИПТ ІНКЛУДИ====================================*/
#include "../source/colors.inc"
#include "../source/economy.inc"
#include "../source/dialogs.inc"
#include "../source/typelog.inc"
#include "../source/fractions.inc"
/*============================================================================*/
#define ClearAnimationsEX(%0) ApplyAnimation(%0,"CARRY","null",1.0,0,0,0,0,0,0),SetTimerEx("ClearAnim", 400, 0, "d", %0)
#define PlayerToPoint(%0,%1,%2,%3,%4) IsPlayerInRangeOfPoint(%1,%0,%2,%3,%4)
#define PointToPoint(%0,%1,%2,%3,%4,%5) floatsqroot(floatpower(floatabs(floatsub(%3,%0)),2)+floatpower(floatabs(floatsub(%4,%1)),2)+floatpower(floatabs(floatsub(%5,%2)),2))
new const not_id[] = "Неправельний ID гравця";
/*============================================================================*/
#define 	CADMIN_INFO 0xAFAFAFAA
native 		IsValidVehicle(vehicleid);

#define 	HOLDING(%0) 							((newkeys & (%0)) == (%0))
#define 	PRESSED(%0) 							(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define 	RELEASED(%0) 							(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

#define 	KEY_NUM4								(8192)
#define 	KEY_NUM6 								(16384)

#define		MAX_TELEPORTS                       	56
#define 	MAX_ACTORSS 							34
#define 	MAX_ADVERT_COUNT 						35
#define 	RES_CAR_TIME    						1800

#define 	MAX_HOUSE_COUNT 						911 //кількість домов
#define 	FAMILY_COUNT 							500	//кількість сімей
#define 	HOTEL_COUNT 							4	//кількість отелей
#define 	AIR_COUNT 								3	//кількість аэроп
#define 	SHOP_OBJECTS 							11	//кількість предметов в 24/7
#define 	BINT_COUNT 								25	//кількість интерьеров бізнесов
#define 	MAX_BUSINESS_COUNT 						83	//кількість бізнесов
#define 	BUSINESS_TYPE_COUNT 					18	//кількість типов бізнесов
#define 	SHOP_COUNT 								8	//кількість 24-7
#define 	MAX_OST 								500 //кількість остановок
#define 	AUTO_CP_COUNT 							36	//кількість чекпоинтов АШ
#define	 	MAX_OBJECT_MOVED 						54	//кількість MOVED
#define 	TP_COUNT 								138	//кількість пикапов входы/выходы
#define 	PICKUPS_COUNT 							89	//кількість пикапов
#define 	MAX_FUNCBIZZ							10	//кількість функци. бізнесов
#define 	MAX_ATM 								16 //кількість ATM
#define 	MOROZ_BALLAS 							0	//ballas
#define 	MOROZ_VAGOS 							1	//vagos
#define 	MOROZ_GROVE 							2	//grove
#define 	MOROZ_RIFA 								3	//rifa
#define 	MOROZ_AZTECAS 							4	//aztec
#define 	MAX_ATTEMPT_GANG 						5	//кількість раз для капта
#define 	MAX_BILLBORDS 							50	//кількість билбордов
#define 	MAX_OGRAD 								500
/*============================================================================*/
#define 	FullServName 		"SAMP UKRAINE"
#define 	NameServer 			"SAMP UKRAINE"
#define 	NameSite 			"samp-ukraine.com"
#define 	HostName 			"SAMP UKRAINE | Server KYIV"
/*========================БАЗА ДАНИХ====================================================*/
#define     SqlHost             "127.0.0.1" //не міняти
#define     SqlUser             "gs21732" 
#define     SqlBase             "gs21732"
#define     SqlPass             "6oPbCTR4Lp"
/*=======================================================================================*/
#define 	TABLE_ACCOUNTS  	"accounts"
#define 	TABLE_ADMIN 		"admin"
#define 	TABLE_OTHERS 		"others"
#define 	TABLE_BANIP     	"banip"
#define 	TABLE_BIZZ      	"bizz"
#define 	TABLE_HOUSE     	"house"
#define 	TABLE_ATM       	"atm"
#define 	TABLE_BAN       	"ban"
#define 	TABLE_GANGZONE  	"gangzone"
#define 	TABLE_CARS      	"cars"
#define 	TABLE_GREENZONE     "greenzone"
#define 	TABLE_TICKETS     	"tickets"
#define 	TABLE_SLED	     	"tracking"
#define 	T_PROMOCODE         "promocode"
#define 	T_PROMOCODE_USED    "promocode_used"
/*============================================================================*/
#define VEHICLE_STATE_CAR   0
#define VEHICLE_STATE_BIKE  1
#define VEHICLE_STATE_VELIK 2
#define VEHICLE_STATE_PLANE 3
#define VEHICLE_STATE_BOAT  4

#define VEHICLE_TYPE_NONE 0
#define VEHICLE_TYPE_PLAYER 1
#define VEHICLE_TYPE_FRACTION 2
#define VEHICLE_TYPE_BIZZ 3
#define VEHICLE_TYPE_JOB 4
#define VEHICLE_TYPE_RENT 5
#define VEHICLE_TYPE_ADMIN 6
#define VEHICLE_TYPE_TRAILER 7
#define VEHICLE_TYPE_BUY 8
#define VEHICLE_TYPE_AIR 9
#define VEHICLE_TYPE_AUTOSCHOOL 10
#define VEHICLE_TYPE_SPAWN 11
#define VEHICLE_TYPE_RACE 12
#define VEHICLE_TYPE_INVENT 13
#define VEHICLE_TYPE_AUTOSALON 14
#define VEHICLE_TYPE_ALCATRAZ 15

#define VIP_NONE 0
#define VIP_BAZE 1
#define VIP_SILVER 2
#define VIP_GOLD 3
#define VIP_PLATINA 4
#define VIP_ECSCLUSIVE 5
#define VIP_FOREVER 6
#define VIP_KING 7

#define MINISTRE_NEWS 6
#define MINISTRE_MEDICS 7
#define MINISTRE_ARMY 8
#define MINISTRE_PD 9
#define MINISTRE_YUST 10
/*============================================================================*/
#define 	CB:%0(%1)					forward %0(%1); public %0(%1)
#define 	format:%0(		    		%0[0] = EOS,format(%0,sizeof(%0),
#define 	GivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) + %2))

#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#undef MAX_PLAYERS
#define MAX_PLAYERS (300)
#undef MAX_VEHICLES
#define MAX_VEHICLES (632)
/*============================================================================*/
#define  	DSM 			DIALOG_STYLE_MSGBOX
#define 	DSI				DIALOG_STYLE_INPUT
#define 	DSL				DIALOG_STYLE_LIST
#define 	DSP				DIALOG_STYLE_PASSWORD
#define 	DST				DIALOG_STYLE_TABLIST
#define 	DSTH			DIALOG_STYLE_TABLIST_HEADERS
/*============================================================================*/
#define dip_status_neutral 0
#define dip_status_war 1
#define dip_status_alliance 2
#define dip_status_alliance_invite 3
#define dip_status_alliance_get_invite 4
/*============================================================================*/

new 		MySQL:connects;
new 		SELECT_SERVER = 1;

// телефон
new PlayerText:PhonesSA[MAX_PLAYERS][5];
new Text:PhoneSA[40];

new PlayerTrailer[MAX_PLAYERS];
new TK_Trailer[MAX_PLAYERS];

// інвентарь(не закінчений)
new Text:inv_global[16];
new PlayerText:inv_player[60][MAX_PLAYERS];

new object_park_ls[404];

new timer_job_mower[MAX_PLAYERS];

//кількість прибраних чекпоінтів по зонам
new check_taxi_park;
new check_verona_beach;
new check_white_house;
new check_medic_ls;
new check_mayor_ls;
new check_glenpark_1;
new check_glenpark_2;


new bool: status_check_job_mower[404] = { false, ... };
new bool: status_restore_check_job_mower[404] = { false, ... };
new Float:check_job_mower[404][8]= {
	{1161.606689, -1724.153809, 12.916358, 0.000000, 0.000000, 85.465836 },//Участок №1 Таксопарк LS --33 начало
	{1153.157959, -1724.084595, 12.911668, 0.000000, 0.000000, 89.665298},
	{1141.203979, -1724.180786, 12.910445, 0.000000, 0.000000, 90.542618},
	{1131.005615, -1724.157837, 12.896638, 0.000000, 0.000000, 90.835068},
	{1118.739868, -1724.072388, 12.607371, 0.000000, 0.000000, 92.004852},
	{1105.218628, -1723.931274, 12.602836, 0.000000, 0.000000, 92.589752},
	{1091.625610, -1724.234741, 12.611656, 0.000000, 0.000000, 92.589752},
	{1079.478638, -1724.401001, 12.616489, 0.000000, 0.000000, 92.589752},
	{1066.955566, -1724.367920, 12.615527, 0.000000, 0.000000, 92.589752},
	{1053.047729, -1724.163330, 12.605296, 0.000000, 0.000000, 92.589752},
	{1049.571655, -1739.166748, 12.619127, 0.000000, 0.000000, 183.248245},
	{1049.326294, -1751.635864, 12.604512, 0.000000, 0.000000, 183.248245},
	{1049.393433, -1764.471313, 12.929540, 0.000000, 0.000000, 193.191528},
	{1051.583862, -1773.917236, 12.972979, 0.000000, 0.000000, 350.820526},
	{1052.535767, -1758.635254, 13.031508, 0.000000, 0.000000, 357.254486},
	{1052.654663, -1745.388794, 12.713317, 0.000000, 0.000000, 2.225895},
	{1055.313599, -1729.767090, 13.122073, 0.000000, 0.000000, 308.123230},
	{1073.411133, -1729.266602, 12.768188, 0.000000, 0.000000, 273.614532},
	{1084.724854, -1729.309692, 12.784665, 0.000000, 0.000000, 270.984955},
	{1099.452881, -1728.850220, 12.791674, 0.000000, 0.000000, 276.833954},
	{1112.480103, -1729.510620, 12.831130, 0.000000, 0.000000, 265.428497},
	{1126.941040, -1728.565308, 12.835237, 0.000000, 0.000000, 269.230377},
	{1136.263550, -1728.858887, 12.833879, 0.000000, 0.000000, 265.136047},
	{1146.561279, -1729.278809, 12.837194, 0.000000, 0.000000, 266.013336},
	{1157.270874, -1729.478882, 12.825368, 0.000000, 0.000000, 269.522675},
	{1137.629639, -1753.066406, 12.575413, 0.000000, 0.000000, 87.620552},
	{1125.066406, -1753.092163, 12.574987, 0.000000, 0.000000, 101.658020},
	{1113.047119, -1755.135132, 12.580907, 0.000000, 0.000000, 101.658020},
	{1108.682251, -1767.206177, 12.581818, 0.000000, 0.000000, 101.658020},
	{1109.770996, -1778.359985, 12.583146, 0.000000, 0.000000, 101.658020},
	{1116.171753, -1770.395630, 12.589938, 0.000000, 0.000000, 8.077275},
	{1120.381470, -1761.653931, 12.587656, 0.000000, 0.000000, 280.927979},
	{1132.645630, -1761.134644, 12.594887, 0.000000, 0.000000, 276.396271},
	{484.773346, -1783.324585, 5.595574, 0.000000, 0.000000, 191.964981},//Участок №2 Verona Beach -- 46 начало
	{497.478088, -1784.695557, 5.166778, 0.000000, 0.000000, 195.474335},
	{497.495911, -1794.405518, 5.395043, 0.000000, 0.000000, 165.644714},
	{550.602966, -1805.766113, 5.412500, 0.000000, 0.000000, 170.031387},
	{550.469299, -1817.875122, 5.412500, 0.000000, 0.000000, 170.031387},
	{559.160828, -1820.898560, 5.412500, 0.000000, 0.000000, 266.538940},
	{569.401733, -1821.201782, 5.412500, 0.000000, 0.000000, 278.529266},
	{578.073364, -1820.941528, 5.412500, 0.000000, 0.000000, 269.170959},
	{588.242615, -1820.504883, 5.412500, 0.000000, 0.000000, 269.170959},
	{597.190979, -1819.642456, 5.412500, 0.000000, 0.000000, 276.189667},
	{593.504150, -1812.972168, 5.412500, 0.000000, 0.000000, 90.195747},
	{584.673279, -1813.790527, 5.412500, 0.000000, 0.000000, 89.903297},
	{574.517639, -1813.869385, 5.412500, 0.000000, 0.000000, 89.903297},
	{563.561768, -1814.403564, 5.412500, 0.000000, 0.000000, 89.903297},
	{555.104370, -1811.654663, 5.412500, 0.000000, 0.000000, 89.903297},
	{559.105652, -1805.398071, 5.412500, 0.000000, 0.000000, 265.663971},
	{572.565247, -1807.502197, 5.412500, 0.000000, 0.000000, 143.713577},
	{583.393066, -1806.581299, 5.412500, 0.000000, 0.000000, 272.097870},
	{548.551208, -1830.855347, 4.810937, 0.000000, 0.000000, 282.623566},
	{587.160645, -1829.936157, 5.155915, 0.000000, 0.000000, 270.340820},
	{595.647461, -1838.733643, 4.903313, 0.000000, 0.000000, 241.096100},
	{606.198853, -1842.815552, 4.920055, 0.000000, 0.000000, 262.737183},
	{614.203796, -1840.844971, 5.006981, 0.000000, 0.000000, 272.680359},
	{624.894409, -1844.435303, 4.911686, 0.000000, 0.000000, 253.963760},
	{633.927490, -1844.206543, 4.913923, 0.000000, 0.000000, 263.029633},
	{644.041260, -1845.737671, 4.959471, 0.000000, 0.000000, 262.152283},
	{644.787170, -1838.452515, 5.197773, 0.000000, 0.000000, 3.923810},
	{634.862915, -1837.822876, 5.100921, 0.000000, 0.000000, 84.931755},
	{625.271667, -1836.613770, 5.136159, 0.000000, 0.000000, 82.299736},
	{615.906982, -1835.932617, 5.156877, 0.000000, 0.000000, 82.592186},
	{605.570862, -1835.808594, 5.126902, 0.000000, 0.000000, 82.592186},
	{597.652588, -1831.397217, 5.218519, 0.000000, 0.000000, 49.545647},
	{607.845886, -1829.898804, 5.309297, 0.000000, 0.000000, 277.651978},
	{619.620361, -1831.050903, 5.318044, 0.000000, 0.000000, 249.284592},
	{629.064026, -1829.772827, 5.342881, 0.000000, 0.000000, 275.604797},
	{640.615784, -1830.991943, 5.321196, 0.000000, 0.000000, 248.992126},
	{651.902405, -1826.121338, 5.412500, 0.000000, 0.000000, 260.397644},
	{659.078003, -1826.579712, 5.412500, 0.000000, 0.000000, 254.548706},
	{655.006470, -1833.021973, 5.412500, 0.000000, 0.000000, 155.994034},
	{663.935852, -1830.519165, 5.412500, 0.000000, 0.000000, 268.001343},
	{667.470093, -1840.939087, 5.412500, 0.000000, 0.000000, 313.986755},
	{654.341370, -1847.582642, 5.121390, 0.000000, 0.000000, 339.867279},
	{663.727905, -1851.073730, 5.184746, 0.000000, 0.000000, 266.244324},
	{674.350769, -1851.553955, 5.079543, 0.000000, 0.000000, 306.309540},
	{680.838684, -1851.281738, 5.289329, 0.000000, 0.000000, 51.516762},
	{692.251404, -1850.366821, 6.168665, 0.000000, 0.000000, 278.234528},
	{700.528748, -1851.819824, 6.697062, 0.000000, 0.000000, 258.932953},
	{1140.843628, -2078.608398, 68.357811, 0.000000, 0.000000, 274.744751},//Участок №3 Білий дім -- 58 начало
	{1151.825562, -2078.555176, 68.357811, 0.000000, 0.000000, 274.744751},
	{1164.483032, -2078.563232, 68.357811, 0.000000, 0.000000, 274.744751},
	{1174.843140, -2076.458496, 68.357811, 0.000000, 0.000000, 275.037201},
	{1189.039307, -2077.790771, 68.357811, 0.000000, 0.000000, 275.037201},
	{1200.017456, -2077.879150, 68.357811, 0.000000, 0.000000, 275.037201},
	{1207.704102, -2073.815674, 68.357811, 0.000000, 0.000000, 275.037201},
	{1184.207642, -2072.951904, 68.357811, 0.000000, 0.000000, 93.429955},
	{1168.951294, -2073.062256, 68.357811, 0.000000, 0.000000, 93.429955},
	{1149.126953, -2073.709717, 68.357811, 0.000000, 0.000000, 63.015461},
	{1140.623047, -2073.677734, 68.357811, 0.000000, 0.000000, 107.762276},
	{1144.791992, -2062.541748, 68.357811, 0.000000, 0.000000, 273.869812},
	{1159.508179, -2062.592529, 68.357811, 0.000000, 0.000000, 273.869812},
	{1162.121582, -2054.288086, 68.357811, 0.000000, 0.000000, 273.869812},
	{1161.533691, -2045.794067, 68.350609, 0.000000, 0.000000, 273.869812},
	{1150.692383, -2043.622192, 68.350609, 0.000000, 0.000000, 87.875862},
	{1143.389404, -2046.008545, 68.350609, 0.000000, 0.000000, 195.203979},
	{1155.038330, -2050.436279, 68.350609, 0.000000, 0.000000, 246.674683},
	{1154.483032, -2058.991943, 68.357811, 0.000000, 0.000000, 138.469223},
	{1144.486206, -2029.430176, 68.350609, 0.000000, 0.000000, 279.133911},
	{1153.453613, -2029.421387, 68.350609, 0.000000, 0.000000, 273.869812},
	{1162.936646, -2029.032837, 68.350609, 0.000000, 0.000000, 279.426270},
	{1163.539063, -2021.068604, 68.350609, 0.000000, 0.000000, 351.368286},
	{1163.835938, -2013.065186, 68.350609, 0.000000, 0.000000, 6.867984},
	{1155.661743, -2010.368164, 68.357811, 0.000000, 0.000000, 87.583389},
	{1145.188843, -2010.794922, 68.357811, 0.000000, 0.000000, 86.706039},
	{1144.234863, -2018.708130, 68.007813, 0.000000, 0.000000, 169.468613},
	{1151.140137, -2022.396606, 68.357811, 0.000000, 0.000000, 265.098755},
	{1158.023193, -2018.022583, 68.350609, 0.000000, 0.000000, 349.908356},
	{1152.347290, -2015.787964, 68.357811, 0.000000, 0.000000, 349.908356},
	{1188.401489, -2010.149170, 68.357811, 0.000000, 0.000000, 265.391174},
	{1187.728394, -2020.535400, 68.357811, 0.000000, 0.000000, 181.166168},
	{1187.948730, -2030.554077, 68.357811, 0.000000, 0.000000, 181.166168},
	{1197.656372, -2031.645508, 68.357811, 0.000000, 0.000000, 181.166168},
	{1206.158813, -2030.061401, 68.357811, 0.000000, 0.000000, 283.011688},
	{1205.621704, -2021.104858, 68.357811, 0.000000, 0.000000, 283.011688},
	{1203.965454, -2011.690430, 68.357811, 0.000000, 0.000000, 283.011688},
	{1195.969116, -2011.534058, 68.357811, 0.000000, 0.000000, 182.338501},
	{1195.569336, -2019.363159, 68.357811, 0.000000, 0.000000, 175.319931},
	{1189.107910, -2063.471191, 68.350609, 0.000000, 0.000000, 272.704773},
	{1195.456909, -2063.648682, 68.000610, 0.000000, 0.000000, 271.535004},
	{1204.818237, -2062.969971, 68.350609, 0.000000, 0.000000, 291.713806},
	{1205.026978, -2056.077881, 68.350609, 0.000000, 0.000000, 351.373016},
	{1204.832397, -2048.185791, 68.350609, 0.000000, 0.000000, 356.929474},
	{1203.845459, -2041.097412, 68.357811, 0.000000, 0.000000, 17.400789},
	{1197.577393, -2042.214111, 68.350609, 0.000000, 0.000000, 94.899277},
	{1187.934082, -2043.592041, 68.350609, 0.000000, 0.000000, 94.899277},
	{1186.555664, -2049.819336, 68.357811, 0.000000, 0.000000, 94.899277},
	{1187.274780, -2057.245361, 68.357811, 0.000000, 0.000000, 175.907089},
	{1194.469849, -2057.222656, 68.350609, 0.000000, 0.000000, 267.443115},
	{1195.433472, -2049.798340, 68.357811, 0.000000, 0.000000, 317.744019},
	{1204.749878, -1998.648193, 68.357811, 0.000000, 0.000000, 196.014725},
	{1197.217041, -1999.042725, 68.357811, 0.000000, 0.000000, 93.439453},
	{1189.093628, -2000.198608, 68.357811, 0.000000, 0.000000, 86.713173},
	{1178.943481, -1999.329468, 68.357811, 0.000000, 0.000000, 84.666039},
	{1169.935547, -1998.812134, 68.357811, 0.000000, 0.000000, 89.637634},
	{1161.076294, -1998.848022, 68.357811, 0.000000, 0.000000, 93.439468},
	{1152.301147, -1998.151123, 68.357811, 0.000000, 0.000000, 82.326462},
	{1142.545288, -1998.624634, 68.357811, 0.000000, 0.000000, 135.551834},
	{1220.061279, -1295.611450, 12.820630, 0.000000, 0.000000, 202.588028},//Участок №4 Лікарня ЛС -- 37 начало
	{1219.068481, -1301.858643, 12.824845, 0.000000, 0.000000, 178.607315},
	{1219.093628, -1309.453491, 12.830401, 0.000000, 0.000000, 180.946472},
	{1218.716797, -1316.750732, 12.836747, 0.000000, 0.000000, 180.654312},
	{1218.542236, -1324.906006, 12.830925, 0.000000, 0.000000, 185.333450},
	{1218.584229, -1332.729614, 12.832835, 0.000000, 0.000000, 177.144867},
	{1218.531372, -1339.101196, 12.837425, 0.000000, 0.000000, 177.144867},
	{1218.733765, -1345.730103, 12.843824, 0.000000, 0.000000, 177.144867},
	{1218.378540, -1353.291382, 12.845671, 0.000000, 0.000000, 182.993820},
	{1218.322144, -1361.223389, 12.817779, 0.000000, 0.000000, 182.993820},
	{1218.914795, -1368.568604, 12.782659, 0.000000, 0.000000, 182.993698},
	{1219.508057, -1379.898315, 12.699455, 0.000000, 0.000000, 182.993698},
	{1228.192505, -1380.120117, 12.688148, 0.000000, 0.000000, 267.218567},
	{1236.037109, -1380.532593, 12.665513, 0.000000, 0.000000, 267.218567},
	{1242.375244, -1378.805786, 12.668731, 0.000000, 0.000000, 4.603386},
	{1233.649902, -1375.019043, 12.693229, 0.000000, 0.000000, 68.356842},
	{1225.229248, -1374.031006, 12.751884, 0.000000, 0.000000, 39.112122},
	{1223.709106, -1367.236572, 12.811624, 0.000000, 0.000000, 1.386210},
	{1224.190186, -1360.600708, 12.842188, 0.000000, 0.000000, 355.537537},
	{1223.404419, -1350.503052, 12.845477, 0.000000, 0.000000, 3.433477},
	{1223.821777, -1341.374023, 12.838238, 0.000000, 0.000000, 358.754486},
	{1224.243042, -1329.755737, 12.832597, 0.000000, 0.000000, 358.754486},
	{1224.303467, -1322.539917, 12.838648, 0.000000, 0.000000, 354.660126},
	{1223.291992, -1311.622437, 12.835979, 0.000000, 0.000000, 9.282518},
	{1225.576538, -1304.833252, 12.826563, 0.000000, 0.000000, 28.293932},
	{1227.786255, -1295.909546, 12.813955, 0.000000, 0.000000, 335.365875},
	{1234.904663, -1296.221924, 12.747257, 0.000000, 0.000000, 182.123581},
	{1231.840576, -1303.273560, 12.775769, 0.000000, 0.000000, 169.840775},
	{1237.192261, -1309.080322, 12.747046, 0.000000, 0.000000, 251.433502},
	{1242.312134, -1307.244141, 12.680327, 0.000000, 0.000000, 171.157913},
	{1242.774292, -1316.437744, 12.686161, 0.000000, 0.000000, 187.097488},
	{1242.702393, -1325.303223, 12.694906, 0.000000, 0.000000, 187.097488},
	{1243.327393, -1334.560669, 12.691512, 0.000000, 0.000000, 183.880508},
	{1241.518188, -1342.948975, 12.700533, 0.000000, 0.000000, 170.720444},
	{1241.839355, -1352.318848, 12.709240, 0.000000, 0.000000, 170.720444},
	{1242.121582, -1361.418945, 12.704837, 0.000000, 0.000000, 170.720444},
	{1240.677856, -1368.625000, 12.709319, 0.000000, 0.000000, 170.135544},
	{1233.519653, -1370.330811, 12.730769, 0.000000, 0.000000, 101.702904},
	{1484.405396, -1701.025513, 12.723542, 0.000000, 0.000000, 342.674561},//Участок №5 мерія -- 49 начало
	{1484.707886, -1694.617188, 12.723542, 0.000000, 0.000000, 354.957367},
	{1491.865479, -1698.506104, 12.723542, 0.000000, 0.000000, 265.760956},
	{1492.977173, -1692.551147, 12.723542, 0.000000, 0.000000, 286.524658},
	{1501.361084, -1698.871704, 12.723542, 0.000000, 0.000000, 240.025543},
	{1503.524414, -1692.143188, 12.723542, 0.000000, 0.000000, 0.513200},
	{1497.398560, -1686.606934, 12.713545, 0.000000, 0.000000, 3.730666},
	{1504.668335, -1680.690308, 12.713545, 0.000000, 0.000000, 354.080048},
	{1504.452637, -1672.250854, 12.713545, 0.000000, 0.000000, 0.513200},
	{1504.323364, -1657.891968, 12.713545, 0.000000, 0.000000, 0.513200},
	{1504.454590, -1648.868164, 12.713545, 0.000000, 0.000000, 2.560938},
	{1504.553711, -1640.715820, 12.713545, 0.000000, 0.000000, 2.560938},
	{1504.590454, -1631.154053, 12.713545, 0.000000, 0.000000, 2.560938},
	{1500.948242, -1624.259155, 12.723542, 0.000000, 0.000000, 92.561005},
	{1493.417847, -1624.120361, 12.723542, 0.000000, 0.000000, 109.889061},
	{1483.919312, -1623.524902, 12.703545, 0.000000, 0.000000, 93.219574},
	{1484.159912, -1628.768066, 12.703545, 0.000000, 0.000000, 253.480637},
	{1491.415283, -1628.950806, 12.723542, 0.000000, 0.000000, 267.810577},
	{1497.940918, -1634.199829, 12.713545, 0.000000, 0.000000, 189.142334},
	{1497.992798, -1644.068970, 12.713545, 0.000000, 0.000000, 189.142334},
	{1497.751099, -1654.424316, 12.713545, 0.000000, 0.000000, 189.142334},
	{1497.833984, -1663.303467, 12.713545, 0.000000, 0.000000, 189.142334},
	{1498.224121, -1671.345337, 12.713545, 0.000000, 0.000000, 189.142334},
	{1497.789551, -1679.936035, 12.713545, 0.000000, 0.000000, 189.142334},
	{1473.367310, -1692.144287, 12.723542, 0.000000, 0.000000, 99.068604},
	{1474.040771, -1700.465820, 12.723542, 0.000000, 0.000000, 173.350189},
	{1466.692017, -1700.025635, 12.723542, 0.000000, 0.000000, 78.304871},
	{1465.050293, -1692.439941, 12.723542, 0.000000, 0.000000, 15.428750},
	{1458.385986, -1698.924072, 12.723542, 0.000000, 0.000000, 112.228752},
	{1454.171875, -1692.194946, 12.723542, 0.000000, 0.000000, 26.541758},
	{1460.430176, -1685.786621, 12.713545, 0.000000, 0.000000, 333.608795},
	{1461.098145, -1677.710571, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.157837, -1669.037842, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.273071, -1662.562134, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.348145, -1656.442017, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.608154, -1648.454956, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.774536, -1640.947632, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.712891, -1632.896729, 12.713545, 0.000000, 0.000000, 354.372559},
	{1465.626953, -1628.219238, 12.723542, 0.000000, 0.000000, 281.260742},
	{1473.477417, -1628.022461, 12.723542, 0.000000, 0.000000, 281.260742},
	{1476.294800, -1622.810425, 12.703545, 0.000000, 0.000000, 305.826324},
	{1471.540039, -1618.714478, 12.723542, 0.000000, 0.000000, 61.342930},
	{1467.402466, -1623.687622, 12.723542, 0.000000, 0.000000, 96.144135},
	{1457.411499, -1624.297363, 12.723542, 0.000000, 0.000000, 96.144135},
	{1455.129150, -1635.535034, 12.713545, 0.000000, 0.000000, 177.736877},
	{1455.197388, -1643.830566, 12.713545, 0.000000, 0.000000, 177.151932},
	{1454.638184, -1655.082642, 12.713545, 0.000000, 0.000000, 177.151932},
	{1454.148926, -1670.017700, 12.713545, 0.000000, 0.000000, 177.151932},
	{1454.530762, -1677.566650, 12.713545, 0.000000, 0.000000, 178.614212},
	{1454.378662, -1683.852783, 12.713545, 0.000000, 0.000000, 178.614212},
	{1867.358276, -1246.167114, 13.221643, 0.000000, 0.000000, 271.902435},//Участок № 6 Глен Парк сторона 1 -- 95 начало
	{1879.723267, -1246.921753, 13.175182, 0.000000, 0.000000, 270.437866},
	{1889.987915, -1246.639771, 13.363698, 0.000000, 0.000000, 270.437866},
	{1900.332642, -1246.652466, 13.676298, 0.000000, 0.000000, 270.437866},
	{1910.957642, -1246.144897, 14.361286, 0.000000, 0.000000, 270.437866},
	{1921.833496, -1245.892822, 16.109970, 0.000000, 0.000000, 270.437866},
	{1932.653687, -1245.594849, 17.320723, 0.000000, 0.000000, 270.437866},
	{1943.216797, -1245.196533, 18.295958, 0.000000, 0.000000, 270.437866},
	{1953.732178, -1245.090454, 19.037907, 0.000000, 0.000000, 270.437866},
	{1960.312500, -1245.495483, 19.256392, 0.000000, 0.000000, 270.437866},
	{1958.022461, -1232.280029, 19.211897, 0.000000, 0.000000, 134.086182},
	{1951.030396, -1229.105347, 19.144039, 0.000000, 0.000000, 81.519363},
	{1944.291138, -1233.323608, 18.738131, 0.000000, 0.000000, 104.915138},
	{1943.331909, -1223.625610, 19.285929, 0.000000, 0.000000, 32.388256},
	{1935.050171, -1219.605957, 19.468113, 0.000000, 0.000000, 58.416039},
	{1929.315063, -1214.761108, 19.346359, 0.000000, 0.000000, 53.444431},
	{1924.723511, -1220.001465, 18.975727, 0.000000, 0.000000, 139.423889},
	{1924.205811, -1227.302246, 18.344778, 0.000000, 0.000000, 196.743561},
	{1926.336304, -1233.042358, 17.665197, 0.000000, 0.000000, 217.799789},
	{1934.242798, -1233.444458, 17.926485, 0.000000, 0.000000, 275.704315},
	{1916.387329, -1235.239990, 16.341469, 0.000000, 0.000000, 105.790092},
	{1906.114136, -1234.314575, 15.299605, 0.000000, 0.000000, 72.158646},
	{1898.302002, -1231.738403, 14.944695, 0.000000, 0.000000, 51.979790},
	{1891.412964, -1227.149048, 15.060605, 0.000000, 0.000000, 48.177982},
	{1887.563477, -1219.410767, 16.005716, 0.000000, 0.000000, 10.452292},
	{1887.908203, -1211.488281, 17.433287, 0.000000, 0.000000, 347.641449},
	{1889.611450, -1203.114868, 19.143389, 0.000000, 0.000000, 343.547119},
	{1892.414185, -1194.862183, 20.763123, 0.000000, 0.000000, 343.547119},
	{1895.335083, -1187.858032, 21.977161, 0.000000, 0.000000, 344.132050},
	{1898.707520, -1181.456299, 22.807127, 0.000000, 0.000000, 344.132050},
	{1902.802124, -1176.290527, 23.249763, 0.000000, 0.000000, 295.293335},
	{1911.027954, -1170.306641, 23.029148, 0.000000, 0.000000, 291.491516},
	{1919.889282, -1166.064941, 22.243843, 0.000000, 0.000000, 287.689758},
	{1927.470703, -1163.716675, 21.522303, 0.000000, 0.000000, 277.161713},
	{1935.994629, -1162.692261, 20.844452, 0.000000, 0.000000, 272.482574},
	{1943.722778, -1162.527222, 20.438334, 0.000000, 0.000000, 266.633636},
	{1951.386597, -1162.415771, 20.255171, 0.000000, 0.000000, 268.973175},
	{1954.238037, -1167.605103, 19.933907, 0.000000, 0.000000, 180.361542},
	{1953.367920, -1175.664673, 19.445637, 0.000000, 0.000000, 150.532074},
	{1943.820923, -1177.764526, 19.488754, 0.000000, 0.000000, 103.740524},
	{1935.780029, -1180.525269, 19.575300, 0.000000, 0.000000, 108.712120},
	{1928.817017, -1178.982910, 20.131247, 0.000000, 0.000000, 81.806984},
	{1919.220215, -1175.869629, 21.577497, 0.000000, 0.000000, 68.061974},
	{1911.458008, -1177.654907, 22.279034, 0.000000, 0.000000, 120.117508},
	{1906.133301, -1182.346924, 22.269163, 0.000000, 0.000000, 119.825035},
	{1901.146729, -1188.850342, 21.967215, 0.000000, 0.000000, 152.286575},
	{1898.446411, -1196.203857, 20.980274, 0.000000, 0.000000, 160.475082},
	{1897.568726, -1205.405151, 18.905323, 0.000000, 0.000000, 178.314362},
	{1898.428833, -1214.339966, 17.807949, 0.000000, 0.000000, 170.420761},
	{1899.453003, -1222.291504, 16.404261, 0.000000, 0.000000, 227.155411},
	{1906.315918, -1225.115479, 16.469769, 0.000000, 0.000000, 245.869537},
	{1914.545044, -1227.512939, 16.902369, 0.000000, 0.000000, 251.426010},
	{1917.468140, -1221.014160, 18.211891, 0.000000, 0.000000, 318.688782},
	{1920.434937, -1214.422363, 18.912180, 0.000000, 0.000000, 323.075439},
	{1925.799316, -1207.512207, 19.323290, 0.000000, 0.000000, 321.905670},
	{1920.132446, -1202.961670, 19.237158, 0.000000, 0.000000, 31.800503},
	{1912.381958, -1212.841919, 18.752636, 0.000000, 0.000000, 116.317719},
	{1908.059448, -1191.620605, 21.259354, 0.000000, 0.000000, 254.935303},
	{1916.785034, -1194.246216, 20.268057, 0.000000, 0.000000, 248.209015},
	{1925.465576, -1193.818115, 19.545786, 0.000000, 0.000000, 269.265198},
	{1923.847656, -1187.694824, 20.132030, 0.000000, 0.000000, 342.082092},
	{1918.140259, -1185.196533, 20.847538, 0.000000, 0.000000, 57.533447},
	{1954.654541, -1151.323364, 20.875120, 0.000000, 0.000000, 98.183594},
	{1942.135986, -1151.113770, 21.742018, 0.000000, 0.000000, 71.278450},
	{1930.641113, -1152.326050, 22.475374, 0.000000, 0.000000, 89.995071},
	{1920.478882, -1152.254028, 23.103773, 0.000000, 0.000000, 89.995071},
	{1910.036011, -1157.119751, 22.975300, 0.000000, 0.000000, 89.995071},
	{1898.186035, -1152.625366, 23.696474, 0.000000, 0.000000, 89.995071},
	{1885.720703, -1152.850220, 23.474592, 0.000000, 0.000000, 89.995071},
	{1884.073730, -1163.561890, 23.380205, 0.000000, 0.000000, 89.995071},
	{1894.197021, -1164.241333, 23.438457, 0.000000, 0.000000, 89.995071},
	{1902.943115, -1165.435303, 23.526339, 0.000000, 0.000000, 268.899017},
	{1894.442627, -1174.762695, 23.488493, 0.000000, 0.000000, 139.713486},
	{1885.571045, -1174.393066, 23.292017, 0.000000, 0.000000, 121.581818},
	{1875.827759, -1180.716431, 23.038374, 0.000000, 0.000000, 121.289360},
	{1883.703735, -1185.085693, 22.545891, 0.000000, 0.000000, 239.730469},
	{1885.624756, -1194.326538, 20.987839, 0.000000, 0.000000, 171.005417},
	{1878.034668, -1190.441528, 21.570574, 0.000000, 0.000000, 58.413280},
	{1871.276489, -1188.160034, 22.608206, 0.000000, 0.000000, 58.120831},
	{1866.274292, -1191.862793, 22.729689, 0.000000, 0.000000, 109.006630},
	{1866.282593, -1200.074463, 21.576797, 0.000000, 0.000000, 180.656113},
	{1873.567749, -1199.659180, 20.948042, 0.000000, 0.000000, 250.258621},
	{1881.627686, -1202.204102, 19.745148, 0.000000, 0.000000, 245.579498},
	{1880.182617, -1210.648682, 18.136990, 0.000000, 0.000000, 161.647156},
	{1872.642700, -1209.538940, 18.869944, 0.000000, 0.000000, 83.271309},
	{1864.596924, -1209.499390, 19.727041, 0.000000, 0.000000, 83.271301},
	{1864.666626, -1215.465576, 18.963261, 0.000000, 0.000000, 179.194000},
	{1867.633911, -1222.829712, 17.501318, 0.000000, 0.000000, 191.476654},
	{1871.866211, -1216.548096, 17.657242, 0.000000, 0.000000, 346.473633},
	{1878.161499, -1223.409546, 16.220636, 0.000000, 0.000000, 212.825302},
	{1864.669678, -1233.362061, 15.701693, 0.000000, 0.000000, 135.619263},
	{1864.440918, -1239.464600, 14.398665, 0.000000, 0.000000, 323.077942},
	{1885.218018, -1240.321411, 13.916868, 0.000000, 0.000000, 268.682739},
	{1894.850342, -1240.158325, 14.366830, 0.000000, 0.000000, 268.682739},
	{1885.283813, -1233.227051, 14.686578, 0.000000, 0.000000, 268.682739},
	{1872.900024, -1227.628418, 15.833553, 0.000000, 0.000000, 33.850128},
	{2052.105957, -1248.333984, 23.101965, 0.000000, 0.000000, 85.138367},//Участок № 7 Глен Парк сторона 2 -- 80 начало
	{2052.648926, -1239.833618, 23.025469, 0.000000, 0.000000, 359.743591},
	{2052.682129, -1232.533691, 23.027925, 0.000000, 0.000000, 359.743591},
	{2052.736328, -1220.633789, 23.031933, 0.000000, 0.000000, 359.743591},
	{2053.768066, -1212.595459, 23.113119, 0.000000, 0.000000, 3.545526},
	{2052.881348, -1204.760254, 23.109367, 0.000000, 0.000000, 93.545670},
	{2053.242188, -1194.415894, 23.006886, 0.000000, 0.000000, 3.545526},
	{2053.067383, -1183.212036, 23.020996, 0.000000, 0.000000, 3.545526},
	{2052.440674, -1173.106445, 22.999132, 0.000000, 0.000000, 3.545526},
	{2054.451416, -1160.462524, 22.994017, 0.000000, 0.000000, 3.545526},
	{2052.638428, -1149.701904, 23.161327, 0.000000, 0.000000, 3.545526},
	{2039.835327, -1148.952515, 23.380121, 0.000000, 0.000000, 85.723320},
	{2033.174683, -1155.614136, 22.236532, 0.000000, 0.000000, 121.986778},
	{2022.169678, -1149.868408, 23.062159, 0.000000, 0.000000, 56.186131},
	{2010.697632, -1148.949951, 23.264124, 0.000000, 0.000000, 83.676140},
	{2001.049805, -1149.684814, 22.906815, 0.000000, 0.000000, 83.678513},
	{1991.516602, -1148.771240, 21.455414, 0.000000, 0.000000, 75.489990},
	{1982.714600, -1152.197510, 20.449589, 0.000000, 0.000000, 153.280945},
	{2000.686035, -1154.322754, 20.688007, 0.000000, 0.000000, 277.278442},
	{2018.766846, -1156.388550, 21.570492, 0.000000, 0.000000, 277.278442},
	{2041.546997, -1168.411377, 22.180187, 0.000000, 0.000000, 176.676620},
	{2029.834229, -1163.938843, 21.483173, 0.000000, 0.000000, 72.275475},
	{1984.586792, -1160.906250, 20.240561, 0.000000, 0.000000, 274.063965},
	{1995.976440, -1160.662964, 20.347477, 0.000000, 0.000000, 274.063965},
	{2006.716797, -1162.463257, 20.533003, 0.000000, 0.000000, 274.063965},
	{2017.682129, -1164.358398, 20.941208, 0.000000, 0.000000, 274.063965},
	{2028.624390, -1170.473633, 21.477953, 0.000000, 0.000000, 274.063965},
	{2037.281006, -1175.917236, 22.148050, 0.000000, 0.000000, 274.063965},
	{2042.541382, -1183.845581, 22.708593, 0.000000, 0.000000, 215.867081},
	{2034.899902, -1184.459839, 22.049437, 0.000000, 0.000000, 84.265892},
	{2030.172119, -1178.808960, 21.374657, 0.000000, 0.000000, 313.030792},
	{2025.353882, -1186.236206, 20.961493, 0.000000, 0.000000, 80.756500},
	{2016.943481, -1184.039551, 20.140444, 0.000000, 0.000000, 86.897896},
	{2010.556763, -1180.000610, 19.800041, 0.000000, 0.000000, 50.342007},
	{2008.480347, -1174.341919, 19.998922, 0.000000, 0.000000, 17.587986},
	{2004.515625, -1169.093384, 20.186283, 0.000000, 0.000000, 86.897957},
	{1993.883179, -1168.541138, 19.960743, 0.000000, 0.000000, 113.803101},
	{1985.223633, -1169.168945, 19.761030, 0.000000, 0.000000, 87.775314},
	{1989.339478, -1175.695435, 19.468435, 0.000000, 0.000000, 236.046021},
	{1998.127686, -1174.196777, 19.700197, 0.000000, 0.000000, 257.102173},
	{2004.564941, -1181.127075, 19.541172, 0.000000, 0.000000, 209.433350},
	{2014.237427, -1190.604126, 19.496807, 0.000000, 0.000000, 210.895584},
	{2017.603271, -1195.766968, 19.634840, 0.000000, 0.000000, 196.273224},
	{2016.462036, -1202.479614, 19.495668, 0.000000, 0.000000, 159.424866},
	{2012.954834, -1211.445313, 19.538244, 0.000000, 0.000000, 159.132416},
	{2006.520874, -1216.973877, 19.580059, 0.000000, 0.000000, 115.265366},
	{1998.958130, -1220.103882, 19.464239, 0.000000, 0.000000, 112.633369},
	{1992.229370, -1223.705933, 19.523685, 0.000000, 0.000000, 110.586235},
	{1986.307739, -1228.668335, 19.575462, 0.000000, 0.000000, 151.236389},
	{1996.842163, -1227.796265, 19.919613, 0.000000, 0.000000, 279.620697},
	{2005.931396, -1225.310913, 20.251413, 0.000000, 0.000000, 278.450897},
	{2014.167969, -1222.740601, 20.569157, 0.000000, 0.000000, 278.450897},
	{2022.712158, -1220.504639, 21.055275, 0.000000, 0.000000, 274.649109},
	{2033.537720, -1216.098267, 21.849470, 0.000000, 0.000000, 274.649109},
	{2032.582642, -1208.034912, 21.539402, 0.000000, 0.000000, 356.824371},
	{2038.923950, -1210.170044, 22.180939, 0.000000, 0.000000, 253.590469},
	{2042.105591, -1203.243164, 22.584679, 0.000000, 0.000000, 345.711273},
	{2043.261841, -1195.205688, 22.725100, 0.000000, 0.000000, 345.711273},
	{2036.342773, -1192.076172, 22.091585, 0.000000, 0.000000, 40.691353},
	{2029.458252, -1194.603394, 21.249327, 0.000000, 0.000000, 118.774757},
	{2026.916992, -1202.825806, 20.823637, 0.000000, 0.000000, 141.878082},
	{2035.867432, -1200.998047, 21.790827, 0.000000, 0.000000, 187.497345},
	{2044.054199, -1247.826660, 23.004990, 0.000000, 0.000000, 72.858070},
	{2037.057739, -1245.909180, 22.751347, 0.000000, 0.000000, 86.895531},
	{2029.271240, -1247.171021, 22.899652, 0.000000, 0.000000, 86.895531},
	{2018.975098, -1247.301758, 22.915018, 0.000000, 0.000000, 86.895531},
	{2009.635498, -1246.693726, 22.650595, 0.000000, 0.000000, 87.480438},
	{2000.731201, -1246.766968, 21.554968, 0.000000, 0.000000, 85.725746},
	{1991.578613, -1247.012451, 20.202988, 0.000000, 0.000000, 85.725746},
	{1989.787720, -1240.149780, 19.651670, 0.000000, 0.000000, 18.755314},
	{1996.230591, -1237.448120, 19.990788, 0.000000, 0.000000, 264.116058},
	{2002.186401, -1241.389282, 21.126034, 0.000000, 0.000000, 262.653809},
	{2007.249756, -1235.382324, 20.777763, 0.000000, 0.000000, 283.709991},
	{2012.688232, -1239.922363, 21.711922, 0.000000, 0.000000, 224.635666},
	{2018.154785, -1232.119995, 21.180098, 0.000000, 0.000000, 298.332336},
	{2024.679932, -1237.369751, 21.673695, 0.000000, 0.000000, 234.871353},
	{2028.964478, -1231.207031, 21.531506, 0.000000, 0.000000, 279.028473},
	{2038.563232, -1233.516846, 22.079952, 0.000000, 0.000000, 271.717316},
	{2037.481934, -1224.965088, 21.976377, 0.000000, 0.000000, 325.235107},
	{2044.973755, -1223.109375, 22.409435, 0.000000, 0.000000, 287.801849},
	{2046.857788, -1235.534180, 22.632471, 0.000000, 0.000000, 188.369812}
};

new Float:gClearCPs[3][32][4] = {
	{//маршрут №1
		{0.0,1386.8707,-1819.8137,13.0907},
		{0.0,1386.7776,-1868.3838,13.0977},
		{0.0,1316.3186,-1851.1456,13.0907},
		{0.0,1315.2659,-1625.0011,13.0907},
		{0.0,1359.6088,-1378.5940,13.1917},
		{0.0,1363.4550,-1102.8883,23.5857},
		{0.0,1371.0570,-1032.9611,25.9409},
		{0.0,1160.9144,-1036.0770,31.6240},
		{0.0,1159.9063,-1139.4188,23.3642},
		{0.0,1056.9033,-1140.9899,23.3726},
		{0.0,1055.8633,-1283.4092,13.4271},
		{0.0,1194.7260,-1283.1401,13.0360},
		{0.0,1195.9567,-1392.5038,12.8794},
		{0.0,901.4108,-1393.2153,12.9317},
		{0.0,626.9870,-1392.4143,13.0403},
		{0.0,616.2323,-1745.6138,13.0400},
		{0.0,1001.2133,-1808.8887,13.7552},
		{0.0,1044.7469,-1963.8276,12.6603},
		{0.0,1034.1226,-2273.0300,12.6546},
		{0.0,1318.7294,-2466.1479,7.3642},
		{0.0,1321.4236,-2447.4917,7.3641},
		{0.0,1075.6267,-2309.5688,12.6046},
		{0.0,1063.6611,-1855.6954,13.1064},
		{0.0,1391.0505,-1874.6238,13.0908},
		{1.0,1398.9404,-1804.5812,13.2549},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1391.9589,-1781.9507,13.0908}, // LS1
		{0.0,1392.1201,-1735.9944,13.0949}, // LS2
		{0.0,1531.5963,-1735.4170,13.0947}, // LS3
		{0.0,1532.3362,-1589.9933,13.0908}, // LS4
		{0.0,1428.1073,-1589.6709,13.0986}, // LS5
		{0.0,1426.9728,-1728.9611,13.0946}, // LS6
		{0.0,1314.9839,-1729.1403,13.0907}, // LS7
		{0.0,1359.6808,-1393.4606,13.1648}, // LS8
		{0.0,1195.4027,-1392.5393,12.8757}, // LS9
		{0.0,1193.1986,-1573.5201,13.0906}, // LS10
		{0.0,1294.8170,-1575.3953,13.0907}, // LS11
		{0.0,1295.1188,-1855.4094,13.0908}, // LS12
		{0.0,1648.7030,-1874.1086,13.0908}, // LS13
		{0.0,1690.8506,-1814.6907,13.0986}, // LS14
		{0.0,1819.0297,-1834.4786,13.1220}, // LS15
		{0.0,1819.0096,-1887.5176,13.1004}, // LS16
		{0.0,1787.5604,-1891.2620,13.1028}, // LS17
		{0.0,1784.6788,-1927.4304,13.0966}, // LS18
		{0.0,1796.6338,-1929.5077,13.0959}, // LS19
		{0.0,1797.6156,-1894.4919,13.1102}, // LS20
		{0.0,1818.1531,-1892.2823,13.1113}, // LS21
		{0.0,1957.7418,-1934.2329,13.0908}, // LS22
		{0.0,1957.9696,-2060.2686,13.0908}, // LS23
		{0.0,2029.9690,-2037.7518,13.2974}, // LS24
		{0.0,2032.4188,-1997.9026,13.2974}, // LS25
		{0.0,1964.9982,-1995.6715,13.0901}, // LS26
		{0.0,1964.5792,-1930.5961,13.0908}, // LS27
		{0.0,1824.2692,-1830.3569,13.1220}, // LS28
		{0.0,1687.6703,-1809.8795,13.0907}, // LS29
		{0.0,1392.3217,-1869.7803,13.0966}, // LS30
		{1.0,1398.9404,-1804.5812,13.2549}, // LS 31
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1392.0623,-1791.7125,13.0908}, // Ghetto1
		{0.0,1391.7612,-1735.2448,13.0968}, // Ghetto2
		{0.0,1690.5293,-1734.7238,13.1005}, // Ghetto3
		{0.0,1818.6444,-1734.6156,13.0908}, // Ghetto4
		{0.0,1818.8099,-1754.3562,13.0908},// Ghetto5
		{0.0,2091.4414,-1753.9078,13.1127}, // Ghetto6
		{0.0,2187.5518,-1735.1260,13.0829}, // Ghetto7
		{0.0,2212.4153,-1736.0732,13.0742}, // Ghetto8
		{0.0,2215.7388,-1896.6831,13.0984}, // Ghetto9
		{0.0,2309.8857,-1896.4823,13.1752}, // Ghetto10
		{0.0,2311.5947,-1973.8826,13.0918}, // Ghetto11
		{0.0,2415.4360,-1974.5627,13.1200}, // Ghetto12
		{0.0,2415.9646,-1935.3470,13.0908}, // Ghetto13
		{0.0,2517.4490,-1935.0500,13.0796}, // Ghetto14
		{0.0,2529.7197,-1735.9653,13.0907}, // Ghetto15
		{0.0,2644.0718,-1734.2902,10.4423}, // Ghetto16
		{0.0,2644.8076,-1660.5665,10.4184}, // Ghetto17
		{0.0,2739.6265,-1659.7494,12.7783}, // Ghetto18
		{0.0,2740.0049,-1510.1157,29.9892}, // Ghetto19
		{0.0,2645.6689,-1402.3347,29.9945}, // Ghetto20
		{0.0,2644.8938,-1044.6847,69.1220}, // Ghetto21
		{0.0,2562.2761,-1044.7236,69.1220}, // Ghetto22
		{0.0,2321.1631,-1150.2688,26.5124}, // Ghetto23
		{0.0,2174.7383,-1117.0276,24.8626}, // Ghetto24
		{0.0,2164.1028,-1381.2463,23.5361}, // Ghetto25
		{0.0,2111.0916,-1381.4752,23.5360}, // Ghetto26
		{0.0,2090.8074,-1749.2878,13.1132}, // Ghetto27
		{0.0,1824.8679,-1749.9146,13.0908}, // Ghetto28
		{0.0,1824.1864,-1730.2544,13.0908}, // Ghetto29
		{0.0,1387.0582,-1730.0496,13.0908}, // Ghetto30
		{1.0,1398.9404,-1804.5812,13.2549}, // Ghetto 31
		{0.0,0.0,0.0,0.0}
	}
};
new condition_of_roads[][]  = {
	{"На дорогах чисто"},
	{"На дорогах пил"},
	{"На дорогах бруд"}
};
new condition_of_roads_price[][] = {
	{3500,4500,6000},
	{3500,4500,6000},
	{4500,5500,7000}
};
new condition_of_roads_;//тут рандомне число від 0 до 2, в зп и ongamemodeinit, буде відповідати за стан дорог
new Float:race_checkpoint[][] = {
	{2761.9590,-2449.8303,13.5373}, // Порт ЛС
	{1961.2914,-2190.3118,13.5469},// В'їзд Аэро ЛС
	{1798.4791,-2303.9937,-2.7481}, // Аеропорт ЛС
	{492.7488,-1010.9299,91.3559}, // VineWood
	{2170.8821,-1007.9356,62.8047}, // Гора Ghetto
	{2270.4927,-1434.7721,23.8281}, // Ghetto
	{2213.9636,-2231.4707,13.5469}, // Дуэли
	{1663.8843,-1053.8571,23.8984}, // Стоянка
	{879.6149,-1221.6178,16.9766} // Гаражи
};

enum ROB_PL {
	AttachObj,
	RobArea,
	RobPickup,
	RobRand,
	Text3D:RobText
};
new RobPlayer[MAX_PLAYERS][ROB_PL];

//===================Назви адм рангів===========================================================
static const arank [][] = {
    "",
    "{1eacfc}(Молодший модератор)",
    "{1bb6db}(Модератор)",
    "{0df627}(Мл. Адміністратор)",
    "{1135db}(Адміністратор)",
    "{4b08b3}(Куратор)",
    "{0e7716}(Головний Адміністратор)",
    "{FF0000}(Директор)"
};
//==============================================================================
new rob_veh[MAX_PLAYERS];

new start_invent;
new invent_object[13];
new invent_area;
new invent_pickup;
new invent_car[3];
new invent_mats;
new Text3D:invent_text;
new invent_time;
new invent_time_car;
new invent_zone;
new invent_zone_id = -1;
new invent_place[5][4] = {
	{1997, -178, 2152, -44},
	{ 333, 261, 545, 408},
	{-665, 1249, -530, 1381},
	{-2166, 1404, -1992, 1508},
	{-1267, -2197, -1110, -2026}
};
enum GRF {
	gId,
	gObject,
	gFrak,
	Float: gr_x[7],
}
new GrafInfo[121][GRF],CountGraffity;
new graf_timer[MAX_PLAYERS];

enum frac_veh {
	fvehFrac,
	fvehModel,
	fvehModelNew,
	fvehTime,
	Float:fvehcCoords[4],
	fvehColor[2],
	fvehCar
}
new FracVehicle[50][frac_veh];

new gang_car[7][2] = {
	{422,1500},
	{560,2000},
	{559,1800},
	{562,1800},
	{579,1800},
	{413,2000},
	{461,800}
};

new dice_random[11] = {2,4,6,8,10,12,3,5,7,9,11};

enum track_info {
	trackGhetto[MAX_PLAYER_NAME],
	trackGoss[MAX_PLAYER_NAME],
	trackMafia[MAX_PLAYER_NAME],
	trackLeaders[MAX_PLAYER_NAME],
	trackAdmins[MAX_PLAYER_NAME]
}
new TrackInfo[track_info];

//система погоди
enum E_WEATHER_DATA
{
        weather_name[100],
        weather_id,
        weather_degrees
};

new weather[][E_WEATHER_DATA] =
{
        {"Ясна погода", 18, 22},
        {"Туман, можливі опади", 9, 15},
        {"Гроза, підвищена вологість", 8, 17},
        {"ясна, прекрасна погода", 3, 21},
        {"Сонячно, без опадів", 1, 23}
};

//угон
new theftarea[MAX_PLAYERS][2];
new theftIDveh[MAX_PLAYERS][3];
new theftCheck[MAX_PLAYERS][2];
new theftplayer[1011][2];
new const PlayerText:theft_PTD[MAX_PLAYERS][2];
new thefttime[MAX_PLAYERS];
new theftveh[MAX_PLAYERS][3]; // ид та час //угон
new	TheftSkillMax[26] = {3,7,11,15,19,23,27,31,35,39,43,47,51,55,59,63,67,71,75,79,83,87,91,95,100,100};

//тир
new BottleObject[MAX_PLAYERS][2],
	ShootingStart[MAX_PLAYERS],
	ShootingCount[MAX_PLAYERS],
	ShootingArea[MAX_PLAYERS],
	BoxID[MAX_PLAYERS] = -1,
	BoxObject[13][8],
	BoxStatus[13][8],
	BoxPlayerID[13][8];

new GUARD_TICK_C_BUG[MAX_PLAYERS];

new player_gm[MAX_PLAYERS char];

new salary_pd[11] = {3400,5400,7000,8400,10000,11000,13000,15000,17200,18000,19000};
new salary_fbi[11] = {6800,8000,9000,10000,11000,12400,15000,15000,18000,21000,26000};
new salary_medics[7] = {8000,10000,12000,14000,16000,18000,22000};
new salary_news[10] = {5000,8000,9000,9400,9800,10000,11000,13800,16200,19000};
new salary_wh[12] = {5400,7800,8400,9800,11000,24000,24000,24000,24000,24000,27000,33000};
new salary_army[15] = {3000,4000,5000,6000,7000,8200,9000,9400,11000,12200,14000,15400,17400,18800,20200};

new UseSound[MAX_PLAYERS];
new Sounds;
new Float:rads;
new Float:streampos[3];
new stream[256];
new Float:setX[MAX_PLAYERS];
new Float:setY[MAX_PLAYERS];
new Float:setZ[MAX_PLAYERS];

new anti_dm[MAX_PLAYERS char] ;

new objgolod[21] = -1;

new object[MAX_OGRAD] ={-1,...};
new objectrot[MAX_OGRAD] ={-1,...};

new PlayerText:p_mh[MAX_PLAYERS] = {PlayerText:-1,...};

new engine_name[5][44] = {
	"Нагнітач повітря",
	"Ковальні поршні двигуна",
	"Дросельна заслінка збільшеного діаметра", 
	"Повітряний фільтр нульового опору",
	"Спортивний розподільний вал"};
new engine_name_price[5] = {30000, 50000, 90000, 120000, 150000};
new Float:engine_name_boost[5] = {0.3, 0.5, 0.7, 1.0, 1.5};

new brake_name[5][44] = {
	"Гальмовий шланг",
	"Спортивні галбмові диски",
	"Модифіковані гальмівні колодки",
	"Тормозний цилиндр",
	"Вакуумний підсилювач"};
new brake_name_price[5] = {30000, 50000, 50000, 60000, 80000};
new Float:brake_name_boost[5] = {1.0, 2.0, 2.0, 3.0, 4.0};
/*============================================================================*/
enum e_HOUSE_INTERIOR {
	h_id,
	h_type,
	Float:h_pos_exit[4],
	Float:h_pos_spawn[4],	
	h_int_name[24],			// Найменування интерьера
	h_evict,				// Кількість можливо-підседених людей
	h_interior				// интерьер
}
new
	const hinterior_info[][ e_HOUSE_INTERIOR ] = {
	/*0*/	{ 0, 1, { 2233.57,-1114.97,1050.88,358.299 },{ 2230.48,-1107.75,1050.88,272.758 }, "Інтер'єр будинку №1", 0, 5 }, 		// 1
	/*1*/	{ 0, 2, { 2196.6, -1204.51, 1049.02, 91.6726 }, { 2189.2, -1219.15, 1049.02, 352.827 }, "Інтер'єр будинку №1", 0, 6}, 		// 1
	/*2*/	{ 0, 3, { 2317.82, -1026.76, 1050.22, 354.248 }, { 2325.1, -1007.82, 1054.72, 178.322 }, "Інтер'єр будинку №1", 0, 9 }, 		// 1
	/*3*/	{ 0, 0, { 2259.39, -1135.64, 1050.64, 270.298 }, { 2264.04, -1141.45, 1050.63, 359.912 }, "Інтер'єр будинку №1", 0, 10 }, 		// 1
	/*4*/	{ 1, 1, { 2365.17, -1135.58, 1050.88, 357.068 }, { 2358.98, -1131.58, 1050.88, 266.393 }, "Інтер'єр будинку №2", 0, 8 }, 		// 1
	/*5*/	{ 2, 1, { 2282.99, -1140.27, 1050.9, 356.778 }, { 2285.17, -1133.77, 1050.9, 94.9977 }, "Інтер'єр будинку №3", 0, 11 }, 		// 1
	/*6*/	{ 3, 1, { 2218.4, -1076.32, 1050.48, 72.2927 }, { 2205.11, -1071.47, 1050.48, 174.249 }, "Інтер'єр будинку №4", 0, 1 }, 		// 1
	/*7*/	{ 1, 3, { 83.014, 1322.29, 1083.87, 1.69824 }, { 79.2619, 1337.67, 1088.37, 349.96 }, "Інтер'єр будинку №2", 0, 9 }, 		// 1
	/*8*/	{ 2, 3, { 234.381, 1063.73, 1084.21, 2.01149 }, { 237.359, 1082.94, 1087.82, 170.105 }, "Інтер'єр будинку №3", 0, 6 }, 		// 1
	/*9*/	{ 1, 0, { 243.742, 304.976, 999.148, 269.891 }, { 247.015, 301.828, 999.148, 356.998 }, "Інтер'єр будинку №2", 0, 1 }, 		// 1
	/*10*/	{ 2, 0, { 266.515, 304.944, 999.148, 265.168 }, { 271.431, 308.121, 999.148, 174.637 }, "Інтер'єр будинку №3", 0, 2 }, 		// 1
	/*11*/	{ 4, 1, { 2468.45, -1698.35, 1013.51, 92.5746 }, { 2451.3003,-1699.1317,1013.5078,249.2947 }, "Інтер'єр будинку №5", 0, 2 }, 		// 1
	/*12*/	{ 1, 2, { 2496.03, -1692.42, 1014.74, 181.249 }, { 2492.64, -1703.11, 1018.34, 169.464 }, "Інтер'єр будинку №2", 0, 3 }, 		// 1
	/*13*/	{ 2, 2, { 2269.84, -1210.43, 1047.56, 92.2165 }, { 2251.72, -1209.5, 1049.02, 265.468 }, "Інтер'єр будинку №3", 0, 10 }, 		// 1
	/*14*/	{ 3, 3, { 227.344, 1114.22, 1081, 271.062 }, { 234.029, 1109.56, 1085.01, 6.60592 }, "Інтер'єр будинку №4", 0, 5 }, 		// 1
	/*15*/	{ 4, 3, { 235.405, 1186.98, 1080.26, 2.701 }, { 232.795, 1201.81, 1084.42, 207.455 }, "Інтер'єр будинку №5", 0, 3 }, 		// 1
	/*16*/	{ 5, 1, { 225.971, 1239.97, 1082.14, 91.0382 }, { 223.639, 1251.37, 1082.15, 91.1831 }, "Інтер'єр будинку №6", 0, 2 }, 		// 1
	/*17*/	{ 6, 1, { 223.217, 1287.64, 1082.14, 3.3038 }, { 231.444, 1290.18, 1082.14, 91.2065 }, "Інтер'єр будинку №7", 0, 1 }, 		// 1
	/*18*/	{ 3, 2, { 24.0069,1340.6532,1084.3750,356.8460 }, { 27.7965, 1348.01, 1088.88, 267.82 }, "Інтер'єр будинку №4", 0, 10 }, 		// 1
	/*19*/	{ 7, 1, { 295.133, 1472.56, 1080.26, 1.4707 }, { 294.194, 1487.38, 1080.26, 187.737 }, "Інтер'єр будинку №8", 0, 15 }, 		// 1
	/*20*/	{ 4, 2, { 2324.35, -1148.76, 1050.71, 354.638 }, { 2337.82, -1138.28, 1054.3, 178.566 }, "Інтер'єр будинку №5", 0, 12 }, 		// 1
	/*21*/	{ 5, 2, { -261.195, 1456.73, 1084.37, 95.1205 }, { -274.975, 1450.16, 1088.87, 1.31134 }, "Інтер'єр будинку №6", 0, 4 }, 		// 1
	/*22*/	{ 8, 1, { 328.007, 1478.36, 1084.44, 0.1398 }, { 330.764, 1489.56, 1084.44, 162.28 }, "Інтер'єр будинку №9", 0, 15 }, 		// 1
	/*23*/	{ 9, 1, { 22.9166, 1403.98, 1084.43, 357.72 }, { 20.2279, 1416.06, 1084.43, 180.249 }, "Інтер'єр будинку №10", 0, 5 }, 		// 1
	/*24*/	{ 10, 1, { 386.502, 1471.72, 1080.19, 92.5512 }, { 373.049, 1462.83, 1080.19, 331.772 }, "Інтер'єр будинку №11", 0, 15 }, 		// 1
	/*25*/	{ 11, 1, { 376.324, 1417.27, 1081.33, 86.6211 }, { 359.628, 1416.02, 1081.34, 189.54 }, "Інтер'єр будинку №12", 0, 15 }, 		// 1
	/*26*/	{ 6, 2, { 447.25, 1397.76, 1084.3, 1.3703 }, { 455.384, 1415.07, 1084.31, 161.653 }, "Інтер'єр будинку №7", 0, 2 }, 		// 1
	/*27*/	{ 5, 3, { 140.342, 1366.7, 1083.86, 356.404 }, { 137.146, 1385.06, 1088.37, 265.101 }, "Інтер'єр будинку №6", 0, 5 }, 		// 1
	/*28*/	{ 6, 3, { 491.169, 1398.91, 1080.26, 2.0439 }, { 491.162, 1420.6, 1084.37, 177.681 }, "Інтер'єр будинку №7", 0, 2 }, 		// 1
	/*29*/	{ 7, 3, { 234.149, 1064.4, 1084.21, 354.523 }, { 236.775, 1082.44, 1087.82, 87.4161 }, "Інтер'єр будинку №8", 0, 6 }, 		// 1
	/*30*/	{ 12, 1, { 261.112, 1284.91, 1080.26, 355.899 }, { 256.311, 1290.84, 1080.27, 205.811 }, "Інтер'єр будинку №13", 0, 4 }, 		// 1
	/*31*/	{ 13, 1, { -68.8663, 1351.94, 1080.21, 1.3932 }, { -70.2393, 1362.66, 1080.21, 268.188 }, "Інтер'єр будинку №14", 0, 6 }, 		// 1
	/*32*/	{ 7, 2, { 2807.55, -1174.22, 1025.57, 359.851 }, { 2816.06, -1169.01, 1029.17, 90.5266 }, "Інтер'єр будинку №8", 0, 8 }, 		// 1
	/*33*/	{ 14, 1, { 2217.45, -1076.34, 1050.48, 86.2849 }, { 2206.45, -1073.43, 1050.48, 177.176 }, "Інтер'єр будинку №15", 0, 1 }, 		// 1
	/*34*/	{ 8, 2, { 2237.53, -1081.1, 1049.02, 357.634 }, { 2243.92, -1078.82, 1049.02, 357.367 }, "Інтер'єр будинку №9", 0, 2 }, 		// 1
	/*35*/	{ 9, 2, { 2365.33, -1135.16, 1050.88, 2.7174 }, { 2360.45, -1132.71, 1050.88, 269.68 }, "Інтер'єр будинку №10", 0, 8 }, 		// 1
	/*36*/	{ 15, 1, { -42.6872, 1405.89, 1084.43, 1.4874 }, { -50.5177, 1408.57, 1084.43, 268.282 }, "Інтер'єр будинку №16", 0, 8 }, 		// 1
	/*37*/	{ 10, 2, { 82.9296, 1322.94, 1083.87, 3.1521 }, { 93.8073, 1340.1, 1088.37, 273.538 }, "Інтер'єр будинку №11", 0, 9 }, 		// 1
	/*38*/	{ 16, 1, { 260.602, 1237.93, 1084.26, 5.5135 }, { 257.968, 1254.04, 1084.26, 86.6679 }, "Інтер'єр будинку №17", 0, 9 }, 		// 1
	/*39*/	{ 3, 0, { 244.211, 305.121, 999.148, 273.123 }, { 247.029, 303.004, 999.148, 0.688418 }, "Інтер'єр будинку №4", 0, 1 }, 		// 1
	/*40*/	{ 4, 0, { 422.148, 2536.35, 10.0, 92.0123 }, { 416.287, 2539.94, 10.0, 178.719 }, "Інтер'єр будинку №5", 0, 10 }, 		// 1
	/*41*/	{ 17, 1, { 226.17, 1239.97, 1082.14, 90.3812 }, { 225.499, 1252.73, 1082.14, 91.153 }, "Інтер'єр будинку №18", 0, 2 } 		// 1
};

new VehTrailer[MAX_PLAYERS] = {INVALID_VEHICLE_ID,...};
new LastVeh[MAX_PLAYERS] = {INVALID_VEHICLE_ID,...};

#define MAX_REPORTS (50)

new TextReport[MAX_REPORTS][151];
new TextReportAdmin[MAX_REPORTS][131];
new PlayerReport[MAX_REPORTS] = {-1,...};
new ReportID[MAX_PLAYERS] = {-1,...};
new ReportSlot[MAX_REPORTS] = {-1,...};
new ReportAdmin[MAX_PLAYERS];

#define MAX_ASK (50)

new TextAsk[MAX_ASK][151];
new PlayerReportAsk[MAX_ASK] = {-1,...};
new ReportIDAsk[MAX_PLAYERS] = {-1,...};
new ReportSlotAsk[MAX_ASK] = {-1,...};

new SlotCObject[499];

new SlotObject[99];
new Army;
new SFa;

new bool:ac_1[MAX_PLAYERS char];

enum MAKEGUN_DATA {
	mgunname[24],
	mgunamount,
	mgunid
}
new stock MakeGunData[7][MAKEGUN_DATA] = {
	{"SD Pistol", 		35, 	23},
	{"Desert Eagle", 	90, 	24},
	{"MP5", 			100, 	29},
	{"Shotgun", 		140, 	25},
	{"M4", 				150, 	31},
	{"AK-47", 			190, 	30},
	{"Rifle", 			175, 	33}
};
/*============================================================================*/
#define 	Ammo_SDPISTOL           20
#define 	Ammo_DEAGLE             14
#define 	Ammo_SHOTGUN            10
#define 	Ammo_MP5				25
#define 	Ammo_AK47				35
#define 	Ammo_M4A1				35
/*============================================================================*/
/*new MaxSpeedCar[212] = { 160,160,200,120,150,165,110,170,110,180,160,240,160,160,140,230,155,200,150,160,180,180,
	165,145,170,200,200,170,170,200,190,130,80,180,200,120,160,160,160,160,160,75,150,150,110,
	165,280,200,190,150,120,240,190,190,190,140,160,160,165,160,200,190,190,190,75,75,160,160,
	190,200,170,160,190,190,160,160,200,200,150,165,200,120,150,120,190,160,100,200,200,170,170,
	160,160,190,220,170,200,200,140,140,160,75,220,220,160,170,230,165,140,120,140,200,200,200,120,
	120,165,165,160,330,330,190,190,190,110,160,160,160,170,160,60,70,140,200,160,160,160,110,110,150,
	160,230,160,165,170,160,160,160,200,160,160,165,160,200,170,180,110,110,200,200,200,200,200,200,75,
	200,160,160,170,110,110,90,60,110,60,160,160,200,110,160,165,190,160,170,120,165,190,200,140,200,110,
	120,200,200,60,190,200,200,200,160,165,110,200,200,160,165,160,160,160,140,160,160 } ; */
new MaxSpeedCar[212] = {111,103,131,77,93,115,77,104,70,111,91,155,118,77,74,135,108,80,81,105,102,108,98,69,95,135,122,116,110,141,128,91,66,77,117,0,105,111,100,118,95,53,98,89,77,115,162,80,77,0,0,136,118,44,91,110,74,67,110,95,92,113,78,100,0,0,103,98,100,78,110,77,88,75,105,121,141,131,82,98,129,68,110,86,46,70,45,116,104,98,110,105,99,125,151,124,114,114,76,86,98,0,151,151,121,98,126,116,76,73,91,87,90,111,84,100,110,110,115,190,189,112,123,106,91,113,111,105,124,105,42,49,77,117,118,111,121,0,0,70,105,142,115,106,104,103,105,100,86,108,102,110,85,95,101,111,77,77,110,125,119,108,125,85,0,116,112,121,102,0,0,65,42,77,42,111,111,190,91,111,107,106,95,60,0,107,100,116,76,114,0,0,190,100,0,77,123,123,123,111,106,77,119,120,103,106,0,0,0,76,0,0};
CB: Random(min, max) {
	new a = random(max - min) + min;
	return a;
}
new TotalObject=0;
stock CreateObjectEx(modelid, Float:X, Float:Y, Float:Z, Float:rX, Float:rY, Float:rZ, Float:DrawDistance = 0.0) {
	TotalObject++;
	if(TotalObject>490) {
		printf ("TotalObject: %d",TotalObject) ;
	}
	return CreateObject(modelid, X,  Y,  Z,  rX, rY,  rZ, DrawDistance);
}
#define CreateObject CreateObjectEx
new gCurHour,
	gCurDay,
	timers_unix = -1,
	tmphour, 
	tmpminute, 
	tmpsecond,
	unix, 
	unix_hour, 
	unix_sec, 
	unix_heal,
	unix_min,
	unix_three_sec;

new time_grandtimer,
	time_grandtimer_max,
	time_newkeys,
	time_newkeys_max,
	time_update,
	time_update_max,
	time_second,
	time_second_max;
//анти дм зз
#if !defined KEY_AIM
#define KEY_AIM KEY_HANDBRAKE
#endif

new OldDialogID[MAX_PLAYERS];
#define INVALID_DIALOG_ID   (1234)

//new RecoveryTime = 0;

new Text3D:gPlayerProdText[MAX_PLAYERS] = {Text3D:-1, ...},
	gPlayerProdCP[MAX_PLAYERS];

new Text3D:ShipText[MAX_PLAYERS],
	ObjectShip[MAX_PLAYERS] = {0x7F800000,...};

new Text:AnimDraw;

new Text3D:med_turn_text[4];

new Text3D:PlayerMehText[MAX_PLAYERS] = {Text3D:-1, ...};

new Text3D:PlayerEatText[MAX_PLAYERS] = {Text3D:-1, ...};

new ABC[20][2] 	= { "E", "R", "T", "Y", "U", "O", "A", "S", "D", "F", "G", "H", "K", "Z", "X", "C", "V", "B", "N", "M" };

enum _spectator {
	sID
}
new SERIU[MAX_PLAYERS][_spectator];
new avir[MAX_PLAYERS];
new aint[MAX_PLAYERS];
new Lastspec[MAX_PLAYERS];

new take_items[MAX_PLAYERS][2];

enum _bl {
	bool:bl_is_killed,
	bl_finder,
	bl_observe,
	bool:bl_fraction[MAX_FRACTIONS + 1],
	bl_reason[42]
}
new bl_info[MAX_PLAYERS][_bl];
new bl_name[MAX_PLAYER_NAME + 1];

new Teleport_Players[2] = 0,
	bool:Teleport,
	Teleport_text[36] = {"None"},
	Float:TeleportFloat[3],
	TeleportInfo[2],
	Teleport_Plus[MAX_PLAYERS] = 0;

enum aInfo {
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			//Model
	aCost,			//ціна
	Float:aPos_X,	//Кордината X
	Float:aPos_Y,	//Кордината Y
	Float:aPos_Z,	//Кордината Z
	Float:aPos_A,	//Угол поворота
	aColor_1,		//колір 1
	aColor_2,		//колір 2
	aBizz			//Автосалон
};

new drieltorka[MAX_PLAYERS];

new election;
new Text3D:election3D;

new ATMNames[15][24] =  {
	"ЗД Вокзал м. ЛВ", // 0
	{"ЗД Вокзал м. ЛС (1)"}, // 1
	{"ЗД Вокзал м. ЛС (2)"}, // 2
	{"ЗД Вокзал м. СФ"}, // 3
	{"Мерія"}, // 4
	{"Автошкола"}, // 5
	{"Казино"}, // 6
	{"АЗС Гетто"}, // 7
	{"Готель"}, // 8
	{"Автосалон м. ЛС"}, // 9
	{"Автосалон м. СФ"}, // 10
	{"Автосалон м. ЛВ"}, // 11
	{"Мотосалон"}, // 12
	{"Військомат"}, // 13
	{"Яблуневий сад"} // 14
};
new WeaponNames[48][40] = {
	"Unarmed (Fist)", // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Pistols"}, // 22
	{"Desert Eagle (Silencer)"}, // 23
	{"Desert Eagle"}, // 24
	{"Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Auto Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};
#define MAX_DUELS 100

enum pInfo {
	pID,
	pEmail[36],
	pLevel,
	pAdmin,
	pJail,
	pIpReg[18],
	pKeyip[5],
	Float:pHP,
	pDataReg[32],
	pHouse,
	pTempKey,
	pRoom,
	pHotel,
	pAirport,
	pBusiness,
	pMats,
	pSex,
	pArrested,
	pMute,
	pCrimes,
	pExp,
	pCash,
	pSalary,
	pJailTime,
	pDrugs,
	pLeader,
	pMember,
	pRank,
	pSkin,
	pJob,
	pFracSkin,
	pPhone,
	pZakonp,
	pAddiction,
	pWarns,
	punWarnstime,
	pFuel,
	pMarried[MAX_PLAYER_NAME],
	pDrug[MAX_PLAYER_NAME],
	pBank,
	pMobile,
	pSearch,
	pGunSkill[6],
    pPlayTime[2],
    pAccusedof[44],
    pVictim[MAX_PLAYER_NAME],
	pHospital,
	pWatch,
	pRod,
	pRopes,
	pWorms,
	Float:pFish,
	pRouble,
	pFamily,
	pProgress,
	pBook,
	pPhoneNumber[25],
	pSpawn,
	pMedCard,
	pSettings[11],
	pMedHeal,
	pAdvert,
	pArmSkin,
	bizz_work,
	bizz_status,
	bizz_cash,
	bizz_lcash,
	pGolos,
	pBlago,
	pVips,
	pVipTime,
	pVipName,
	pfWarn,
	pDisease[2],
	pSatiety,
	pFamRank,
	pDSatiety,
	pDDisease,
	pBox,
	Float:pSnow,
	pMedKit,
	pMPromo,
	pAdmMSG,
	pAdmKL,
	pMask,
	pGoogle[64],
	pGoogleSec,
	Float:pX,
	Float:pY,
	pSellNeed[5],
	pVipAdd,
	pGunLic,
	pDrugInv,
	pHelper,
	pSlotItem[8],
	pSlotItem_Use[8],
	pAsk,
	pInstrument,
	pAskmute,
	pJemmy,
	ptheftSkill, //угон
	ptheftExp, // угон
	ptheftTime, //угон
	ptheftHome, //угон
	pFMute,
	pDonateBank,
	pDonateBh,
	pBoomBox,
    pYoutube,
    Float:pSpawnPos[4],
    pPrefix
};
new PlayerInfo[MAX_PLAYERS][pInfo],
	pPhoneName[MAX_PLAYERS][25][MAX_PLAYER_NAME],
	lic[MAX_PLAYERS][64],
	start_work[MAX_PLAYERS],
	gOnlinePlayer[MAX_PLAYERS][2],
	gOnlinePlayerAFK[MAX_PLAYERS][2];
	
enum vip_info {
	vip_payday,
	vip_afk,
	vip_carlic,
	vip_lvl,
	vip_healtime,
	vip_arrest,
	vip_mute,
	vip_admins,
	vip_mask_time,
	vip_armmats,
	vip_search,
	vip_heal,
	vip_mask,
	vip_fuel,
	vip_jimmy,
	vip_mats,
	vip_drugs,
	Float:vip_satiety,
	vip_fam_point,
	vip_transfer_bank,
	vip_percent_job,
	vip_percent_pension,
	vip_percent_startjob,
	vip_flylic,
	vip_fixcar,
	vip_fine,
	vip_hotel,
	vip_chose,
	vip_buycar,
	vip_rentcar,
	vip_houseupdate,
	vip_changesex,
	vip_number,
	vip_perfonans,
	vip_tune,
	vip_rulet,
	vip_hp,
	vip_useheal,
	vip_changename,
	vip_gunlic,
	vip_radar,
	vip_report,
	vip_ad,
	vip_enterbizz,
	vip_vad,
	vip_sms,
	vip_disease,
	vip_pay,
	vip_chat,
	vip_percent_bank,
	vip_percent_atm,
	vip_call,
	vip_report_color
};
new vip_status[9][vip_info];

enum e_tube {
	you_uid,
	you_id,
	you_name[18],
	you_date,	
	you_subsctiptions,		
	you_datasub[17],				
	you_timestream		
}
new const youtube[100][e_tube];
new youtube_player[MAX_PLAYERS];
new youtube_time[MAX_PLAYERS];

enum duel_data {
	duel_type,
	duel_raund,
	duel_map,
	duel_health,
	duel_armour,
	duel_password,
	duel_owner_id,
	duel_id[6],
	duel_gun,
	duel_gun_2,
	duel_money,
	duel_cash,
	bool:duel_start,
	bool:duel_create,
	duel_point_1,
	duel_point_2,
	duel_leave[6],
	duel_vw
}
new DI[MAX_DUELS][duel_data];
new duel_id_gun[5] = {24,25,29,30,31};

enum others_data {
	start_money,
	start_level,
	show_update
}
new OthersInfo[others_data];


#define STANDART_GUN_TEXT ""W"%s\n{f6f6d9}ALT"
#define MAX_DROP_GUNS 250
new GPDIO[47]={0,331,333,334,335,336,337,338,339,341,321,322,323,324,325,326,342,343,344,0,0,0,346,347,348,349,350,351,352,353,355,356,372,357,358,359,360,361,362,363,364,365,366,367,368,368,371};
enum drop_gun_data { 
	dg_gun, 
	dg_ammo, 
	dg_object, 
	Text3D:dg_text, 
	dg_time 
}
new drop_gun[MAX_DROP_GUNS][drop_gun_data];

new bool:BanCar[MAX_VEHICLES];
new Float:VehPos[MAX_VEHICLES][4];
new velik[MAX_PLAYERS];
new RCars[MAX_VEHICLES];

new Text:HungerFon[2];
new PlayerText:HungerProgres[MAX_PLAYERS];

new Text:LoadTextures[4];
new PlayerText:LoadTexturess[MAX_PLAYERS];

new Text:skill_td[4];
new PlayerText:skill_player_td[MAX_PLAYERS][2] = {PlayerText:-1,...};

new Text:buy_skins[9];
new PlayerText:buy_player_skins[MAX_PLAYERS] = {PlayerText:-1,...};

new TOTALSTYLELIST = 0;
enum rgInfo {
	Float:rgPos1[3],
	Float:rgPos2[3],
	rgPlayer[2],
	rgTime,
	rgState,
	rgPrice
}

new RingInfo[5][rgInfo];
new RingCP[2];

enum admCMD {
	cmdName[32],
	cmdInfo[64],
	cmdLVL
};
#define MAX_ADM_CMDS 135
new AdminCommand[MAX_ADM_CMDS][admCMD] = {
	{"/alogin", "авторизуватися в адмін панель", 1},
	{"/a", "чат адміністрації", 1},
	{"/kick", "кікнути гравця", 1},
	{"/pm", "відповісти на репорт", 1},
	{"/mute", "заглушити чат гравцю", 1},
	{"/offmute", "заглушити чат гравцю в оффлайні", 1},
	{"/offunmute", "розблокувати чат гравцю в оффлайні", 1},
	{"/unmute", "розблокувати чат", 1},
	{"/weap", "подивитись зброю гравця", 1},
	{"/admins", "адміністрація онлайн", 1},
	{"/jail", "посадити в тюрьму", 1},
	{"/offjail", "посадити в тюрму в оффлайні", 1},
	{"/offunjail", "витягнути гравця з тюрми в оффлайні", 1},
	{"/unjail", "витягнути із тюрьми", 1},
	{"/prisoners", "подивитись список гравців в тюрмі", 1},
	{"/alock", "відкрити/закрити транспорт", 1},
	{"/vipchat", "прослушка vip чата", 1},
	{"/tp", "телепорт", 1},
	{"/re", "слідкувати за гравцем", 1},
	{"/getskills", "дізнатись навики володіння зброєю", 1},
	{"/skin", "змінити скін", 1},
	{"/gm", "включити/відключити ГМ", 1},
	{"/spawn [/sp]", "заспавнити гравця", 1},
	{"/m", "мегафон", 1},
	{"/gg", "побажати приємної гри", 1},
	{"/ainfo", "дізнатись свою статистику", 1},
	{"/afklist", "гравці АФК", 1},
	{"/hp", "видати собі 100 хп", 1},
	{"/mutelist", "гравці з заглушкою", 1},

	{"/aad", "відправити повідомлення в загальний чат", 2},
	{"/spcar", "заспавнити автомобіль (в якому сидите)", 2},
	{"/goto [/g]", "телепортнутись до гравця", 2},
	{"/fv", "відремонтувати автомобіль", 2},
	{"/atipster", "прослушка рації організації", 2},
	{"/astats", "подивитись статистику гравця", 2},
	{"/warn", "видати попередження", 2},
	{"/aimcheck", "перевірити на AIM", 2},
	{"/cweap", "забрати зброю у гравця", 2},
	{"/getip", "дізнатись IP адрес гравця", 2},
	{"/agetip", "дізнатись IP адрес гравця в оффлайн", 2},
	{"/gettime", "дізнатись час гравця", 2},
	{"/delfences", "видалити огородження", 2},
	{"/uncuff", "зняти наручники", 2},
    {"/get", "інформація про аккаунт гравця", 2},
    {"/satiety", "змінити стан ситості", 2},
     
	{"/tskin", "видати темчасовий скін гравцю", 3},
	{"/ban", "заблокувати аккаунт", 3},
	{"/hid", "телепорт до дому", 3},
	{"/bizz", "телепорт до бізнесу", 3},
	{"/int", "телепорт в інтер'єр", 3},
	{"/gethere", "телепортувати гравця до себе", 3},
	{"/setnick", "одобрити зміну ніка", 3},
	{"/freeze", "заморозити гравця", 3},
	{"/unfreeze", "розморозити гравця", 3},
	{"/offstats", "статистика гравця в оффлайні", 3},
	{"/getid", "дізнатись нік по ID гравця", 3},
	{"/slap", "підкинути гравця", 3},
	{"/mark", "поставити позначку для телепорта", 3},
	{"/gotomark", "телепортуватись по позначці", 3},
	{"/sethp", "видати ХП гравцю", 3},
	{"/setarm", "видати броню гравцю", 3},
	{"/gspawn", "відправити гравця на спавн", 3},
	{"/last", "дізнатись останній захід гравця", 3},
	{"/awarehouse", "стан складів організації", 3},
	{"/respv", "спавн авто в радиусі", 3},
	{"/gotocar", "телепортуватись до авто", 3},
	{"/getherecar", "телепортувати авто до себе", 3},
	{"/gsinfo", "дізнатись інформацію Game Sapport'a", 3},
	{"/delveh", "видалити адмін авто", 3},
	{"/offgettime", "подивитись статистику в оффлайні", 3},

	{"/skick", "тихий кік", 4},
	{"/rban", "заблокувати IP адресу", 4},
	{"/unrban", "розблокувати IP адресу", 4},
	{"/iban", "заблокувати до 2038 року", 4},
	{"/ioffban", "заблокувати до 2038 року в оффлайні", 4},
	{"/offban", "заблокувати аккаунт в оффлайні", 4},
	{"/offwarn", "видати попередження в оффлайні", 4},
	{"/unban", "розблокувати аккаунт", 4},
	{"/setfuel", "встановити кількість бензина в автомобілях", 4},
	{"/fin", "подивитись прибуток бізнеса", 4},
	{"/veh", "створити транспорт", 4},
	{"/alldelveh", "видалити всі адмін авто", 4},
	{"/unwarn", "зняти попередження гравцю", 4},
	{"/offunwarn", "зняти попередження гравцю в оффлайні", 4},
	{"/weather", "встановити погоду", 4},
	{"/uval", "звільнити гравця з організації", 4},
	{"/ears", "прослушка SMS", 4},
	{"/hpall", "видати хп всім в радиусі", 4},
	{"/spall", "заспавнити всіх в радиусі", 4},
	{"/gettax", "балланс казні", 4},
	{"/sban", "тихе блокування аккаунта", 4},
	{"/settime", "встановити ігровий час", 4},
	{"/givegun", "видати зброю", 4},
	{"/infoips", "пробити твінки по IP", 4},
	{"/gomp", "провести захід", 4},
	{"/amusic", "онлайн радіо", 4},
	{"/captfreeze", "заморозити стріли/капти", 4},
	{"/spcars", "заспавнити весь не зайнятий транспорт", 4},
	{"/paint", "запустити божевільні війни", 4},

	{"/tempzone", "перефарбувати ганг-зону", 5},
	{"/setbizmafia", "передати бізнес др. мафії", 5},
	{"/makeleader", "назначити лідером", 5},
	{"/vibor", "меню керування виборами", 5},
	{"/getdonate", "дізнатись поповнення(донат) гравця", 5},
	{"/setmats", "змінити мати організаціям", 5},
	{"/cc", "Очистити чат(гравцям також)", 5},
	{"/tpcor", "тп по координатам", 5},
	{"/obj", "створити об'єкт", 5},
	{"/eobject", "редагувати обьект", 5},
	{"/dobject", "видалити обьект", 5},
	{"/hbject", "створити обьект на гравцю", 5},
	{"/hbedit", "редагувати обьект на гравцю", 5},
	{"/admstats", "дізнатись статистику адміна", 5},
	{"/areferals", "перегляд рефералів", 5},
	{"/givelic", "видати всі ліцензії", 5},
	{"/makegs", "добавити Game Sapport'a", 5},
	{"/makedj", "добавити DJ", 5},
	{"/fakename", "Фейк нік", 5},
    {"/race", "запустити божевільні гонки", 5},
    {"/golod", "запустити голодні ігри", 5},
    {"/setyt", "видати ютуб адмінку", 5},
    
	{"/reloadbans", "перезавантажити блокування гравцю", 6},
	{"/restartservera", "перезапустити сервер", 6},
	{"/delacc", "видалити аккаунт гравця", 6},
	{"/asettax", "добавити грошей в казну", 6},
	{"/addzone", "керування ЗЗ зонами", 6},
	{"/makeadmin", "добавити модератора", 6},
	{"/saveall", "сохронити дані сервера", 6},
	{"/setskin", "видати скін гравцю", 6},
	{"/agiverank", "змінити ранг організації гравцю", 6},
	{"/createatm", "створення банкомата", 6},
	{"/editatm", "редагування банкомата", 6},
	{"/timestat", "нагрузка мода", 6},
	{"/setacc", "змінити аккаунт", 6},
	{"/sistema", "писати від імені системи", 6}
};

new ArendInfo[][aInfo] =
{//ID, Ціна, Координаты X, Y, Z, Колір 1, Колір 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 1800 ,2137.3403, -1135.8445, 25.1808, 100.0000,-1,-1,71 }, // Моторынок1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 5500 ,2136.8276, -1133.4684, 25.2229, 100.0000,-1,-1,71 }, // Моторынок2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 220 ,2136.8013, -1130.9340, 25.1831, 100.0000,-1,-1,71 }, // Моторынок3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 510, 130 ,2137.0405, -1128.2262, 25.2155, 100.000,-1,-1,71 }, // Моторынок4

	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 401, 1500 ,546.2834, -1267.1354, 17.0241, 220.0000,-1,-1,68 }, // Авторынок ЛС 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 585, 1600 ,542.8993, -1270.2717, 16.8330, 220.0000,-1,-1,68 }, // Авторынок ЛС 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 518, 1200 ,539.4501, -1273.0795, 16.9120, 220.0000,-1,-1,68 }, // Авторынок ЛС 3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 466, 1800 ,536.1959, -1275.8226, 16.9862, 220.0000,-1,-1,68 }, // Авторынок ЛС 4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 491, 2100 ,533.1170, -1278.3557, 17.0001, 220.0000,-1,-1,68 }, // Авторынок ЛС 5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 410, 1000 ,529.7689, -1280.4216, 16.9001, 220.0000,-1,-1,68 }, // Авторынок ЛС 6

	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 496, 3100 ,-1974.8362, 304.6295, 34.8882, 180.0000,-1,-1,69 }, // Авторынок СФ 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 9100 ,-1969.8870, 304.8717, 35.0099, 180.0000,-1,-1,69 }, // Авторынок СФ 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 405, 4200 ,-1990.2765, 268.6406, 35.0523, 302.6477,-1,-1,69 }, // Авторынок СФ 3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 533, 5200 ,-1990.7843, 261.6671, 34.8903, 305.8713,-1,-1,69 }, // Авторынок СФ 4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 558, 7100 ,-1991.5657, 255.2777, 34.8033, 303.7885,-1,-1,69 }, // Авторынок СФ 5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 566, 4900 ,-1990.5830, 248.7883, 34.9516, 297.9163,-1,-1,69 }, // Авторынок СФ 6
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 589, 8200 ,-1984.7192, 242.3710, 34.8346, 0.0000,-1,-1,69 }, // Авторынок СФ 7
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 579, 7600 ,-1978.6296, 242.8808, 35.0709, 0.0000,-1,-1,69 }, // Авторынок СФ 8
	
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 17300 ,2113.7048, 1398.2725, 10.5959, 180.0000,-1,-1,70 }, // Авторынок ЛВ 1
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 434, 22000 ,2119.8660, 1398.3364, 10.7829, 180.0000,-1,-1,70 }, // Авторынок ЛВ 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 35000 ,2126.3828, 1398.0538, 10.4396, 180.0000,-1,-1,70 }, // Авторынок ЛВ 3
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 18800 ,2132.8091, 1398.4464, 10.4771, 180.0000,-1,-1,70 }, // Авторынок ЛВ 4
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 8000 ,2139.0806, 1398.1453, 10.6202, 180.0000,-1,-1,70 }, // Авторынок ЛВ 5
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 22200 ,2145.6101, 1398.2130, 10.5196, 180.0000,-1,-1,70 } // Авторынок ЛВ 6
};

new Float:med_heal[12][4]={
	{1560.5155,496.3742,1070.9421,272.3593}, // кровать 1
	{1563.1982,496.3743,1070.9421,270.4559}, // кровать 2
	{1565.7197,496.4349,1070.9421,268.5757}, // кровать 3
	{1561.0460,508.9258,1070.9421,88.0939}, // кровать 4
	{1563.6310,509.0753,1070.9421,90.2871}, // кровать 5
	{1566.2164,508.8936,1070.9421,91.8540}, // кровать 6
	{1542.9122,508.9595,1070.9421,88.0470}, // кровать 7
	{1545.4645,509.0333,1070.9421,91.1570}, // кровать 8
	{1548.0690,508.9948,1070.9421,91.7836}, // кровать 9
	{1547.6119,496.5009,1070.9421,272.2653}, // кровать 10
	{1545.0653,496.4404,1070.9421,269.4219}, // кровать 11
	{1542.4304,496.4236,1070.9421,271.6151} // кровать 12
};

new Text3D:Horses3D,
	Text:Horse[4], 
	Text:BG[2], 
	Text:Start, 
	Text:Finish, 
	Text:Start2, 
	Text:Finish2, 
	HorseCD, 
	Text:HorseNum[4], 
	HorseAnimCount,
	Float:HorsePosX[4], 
	HorseStop,
	RaceStarted;

enum ticlist {
	tID,
	tName[MAX_PLAYER_NAME],
	tPrice,
	tDate[32],
	tReason[30],
}
new TL[MAX_PLAYERS][15][ticlist], TOTALTICKETS[MAX_PLAYERS];
new SALLROWS[MAX_PLAYERS];

#define WD::                    WoodsInfo
#define MAX_WOODS               15
enum woodsInfo {
	woodObject,
	woodZone,
	bool:woodUse
};
new WD::[MAX_WOODS][woodsInfo];
new Float:Woods[MAX_WOODS][6] = {
	{-495.984649, -1603.825073, 4.579759, -0.000022, -0.000018, -28.599811}, 
	{-499.378234, -1609.924194, 5.349759, -0.000022, -0.000018, -28.599811}, 
	{-504.325317, -1602.181762, 5.069756, -0.000022, -0.000018, -28.599811}, 
	{-511.276000, -1614.929931, 6.579750, -0.000022, -0.000018, -28.599811}, 
	{-503.816925, -1615.955566, 6.289748, -0.000022, -0.000018, -28.599811}, 
	{-508.378845, -1624.322509, 7.429743, -0.000022, -0.000018, -28.599811}, 
	{-526.272216, -1614.567138, 9.079734, -0.000022, -0.000018, -28.599811}, 
	{-522.710998, -1608.035278, 7.379727, -0.000022, -0.000018, -28.599811}, 
	{-527.820922, -1604.748291, 7.489733, -0.000022, -0.000018, -28.599811}, 
	{-533.318420, -1607.082519, 9.099727, -0.000022, -0.000018, -28.599811}, 
	{-528.321228, -1597.916748, 5.879716, -0.000022, -0.000018, -28.599811}, 
	{-521.210449, -1594.755126, 5.479712, -0.000022, -0.000018, -28.599811}, 
	{-516.609863, -1597.262939, 5.479712, -0.000022, -0.000018, -28.599811}, 
	{-512.211425, -1595.902099, 5.149709, -0.000022, -0.000018, -28.599811}, 
	{-498.067321, -1597.075073, 4.579759, -0.000022, -0.000018, -28.599811}
};

new Text3D:wood_3dtext;
new woodsklad;
new casino;
new rep_system;
new duels;
new anti_tk;
new tk_unloading[4];

new invite_frac[8];

enum fraction_weapon_data {
	fwID,
	fwName[32],
	fwGunID,
	fwGunAmmo,
	fwArmor,
	fwRank
}
new FW[9][MAX_FRACTIONS + 1][fraction_weapon_data];
new GunTickGet[MAX_PLAYERS][9];

new bool:zahvat = false;
new CaptureAttempt[6]={0,...};
new CountOnZone[23];
new capture_kd[23];
new Text:Capture[10];
new Text:inFigh;
new bool:infight[MAX_PLAYERS];

new fracmoroz [8]={0,...};
new const stock fracmorozName [8][32]={"The Ballas","The Vagos","The Grove","The Rifa","The Aztecas", "La Cosa Nostra", "Yakuza","Української мафії"};

new BizWarTime[2] = 0,
	BizHourTime = 0,
	Text:Bizwar[3],
	biz_war_gangzone = - 1,
	war_gangzone = - 1;

#define MOROZ_LCN 5
#define MOROZ_YAKUZA 6
#define MOROZ_RM 7
new gBankMafia[3][MAX_BUSINESS_COUNT];

enum MzoneInfo {
	bFrakVlad,
	bNapad,
	bBiz,
	bCountDead[18]
}
new Float:mafia_zone[7][4] = {
	{-413.7659, 1504.788, -278.7655, 1635.785},//Метеостанція 0
	{-461.2375, 2190.1268, -339.2005, 2278.1268},//СВ-ВВС 1
	{-1355.469, 2478.460, -1267.469, 2561.465},//Камінне село 2
	{-1752.000, -66.000, -1652.00, 34.0000},//Порт СФ 3
	{-1473.5905, -1588.8917, -1408.590, -1445.8917},//Вестоун 4
	{-1933.913, -1717.885, -1751.9138, -1592.8852},//Угольна шахта 5
	{2373.1386, -2667.0048, 2527.1386, -2507.0048}//Камінне село 6
};
new MZInfo[MzoneInfo];

new IDGZ[MAX_PLAYERS] = {-1,...};
enum GzoneInfo {
	gID,
	gZone,
	Float:gCoords[4],
	gFrakVlad,
	gNapad,
	gTime,
	ZoneOnBattle,
	gzTimer
}
new GZInfo[125][GzoneInfo];
new TOTALGZ = 0;
new VladGzone[MAX_FRACTIONS]={0,...};
new gz_area;
stock GetIDGZ(playerid) {
	for(new i = 0; i < TOTALGZ; i++)
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) return i;
	return -1;
}
stock GetGangZoneColor(fractionid) return (GZInfo[fractionid][gFrakVlad] == fBALLAS) ? (0xCC00FFAA) : (GZInfo[fractionid][gFrakVlad] == fRIFA) ? (0x6666FFAA) : (GZInfo[fractionid][gFrakVlad] == fVAGOS) ? (0xffff00AA) : (GZInfo[fractionid][gFrakVlad] == fGROVE) ? (0x009900AA) : (0x00CCFFAA);
stock GetGangColor(g) {
	new zx;
	switch(g) {
		case fGROVE: zx = 0x009900AA;
		case fBALLAS: zx = 0xCC00FFAA;
		case fRIFA: zx = 0x6666FFAA;
		case fAZTEC: zx = 0x00CCFFAA;
		case fVAGOS: zx = 0xffff00AA;
		default: zx = 0xC0C0C0AA;
	}
	return zx;
}
stock gang_name(frac) {
	new namegang[20];
	switch(frac) {
		case fGROVE: namegang = "Grove";
		case fAZTEC: namegang = "Aztecas";
		case fBALLAS: namegang = "Ballas";
		case fRIFA: namegang = "Rifa";
		case fVAGOS: namegang = "Vagos";
	}
	return namegang;
}
stock gang_color(frac) {
	new namegang;
	switch(frac) {
		case fGROVE: namegang = 1017789500;
		case fAZTEC: namegang = 531556863;
		case fBALLAS: namegang = -16711681;
		case fRIFA: namegang = -1378294017;
		case fVAGOS: namegang = -5963521;
	}
	return namegang;
}
stock GFrac(frac) {
	new namegang[20];
	switch(frac) {
		case fGROVE: namegang = "Grove Street";
		case fAZTEC: namegang = "Varrios Los Aztecas";
		case fBALLAS: namegang = "East Side Ballas";
		case fRIFA: namegang = "Rifa";
		case fVAGOS: namegang = "Los Santos Vagos";
	}
	return namegang;
}

enum _ATMData {
	Float:ATM_Pos[6],
	atm_VW,
	atm_INT,
	Text3D:atm_Label,
	atm_Object,
	atm_Taken,
	atm_Bank,
	atm_BankTime
}
new ATMData[MAX_ATM + 1][_ATMData];
new EdittingATM[MAX_PLAYERS];

new PlayerText:Captcha[29], 
	TextArray[11] = "1234567890";
new Text:func_bcolor[22];
new med_mskin[] = {50,15,35},
	med_gskin[] = {55,90,192};

new Signal[MAX_VEHICLES];
new Float:SignalAngle[MAX_VEHICLES];
new SignalTick[MAX_VEHICLES][2];
new LightsObject[MAX_VEHICLES][2];
//new perf_object_engine[MAX_VEHICLES];

new Float:LightsPos[212][6] =
{
	{ 0.8766, 2.0272, -0.1000, 0.8766, -2.2272, -0.1000 },
	{ 0.9566, 2.4500, 0.0000, 0.9566, -2.3500, 0.0000 },
	{ 0.8033, 2.5363, 0.0000, 0.9033, -2.6363, 0.0000 },
	{ 1.1500, 4.1909, -0.2000, 0.3499, -4.1909, -0.7000 },
	{ 0.7333, 2.2409, 0.2000, 0.8333, -2.6409, 0.0000 },
	{ 0.9833, 2.2272, -0.1000, 0.8833, -2.7272, -0.1000 },
	{ 1.0566, 5.2681, 0.0000, 2.2566, -5.1681, 0.4000 },
	{ 0.8499, 4.0727, 0.1000, 1.0499, -3.4727, 0.2000 },
	{ 0.9399, 4.8590, -0.4000, 0.8399, -4.0590, -0.5000 },
	{ 0.8899, 3.6181, 0.0000, 0.8899, -3.9181, 0.0000 },
	{ 0.8533, 2.1772, 0.0000, 0.8533, -2.1772, 0.0000 },
	{ 0.9966, 2.6272, -0.2000, 0.8966, -2.4272, 0.0000 },
	{ 0.9166, 2.6227, -0.1000, 0.8166, -3.6227, -0.2000 },
	{ 0.9600, 2.6727, -0.1000, 0.9600, -2.6727, 0.0000 },
	{ 0.7399, 2.8136, -0.1000, 1.0399, -3.2136, 0.0000 },
	{ 0.8733, 2.5045, -0.3000, 0.7733, -2.5045, 0.0000 },
	{ 0.9099, 2.9409, 0.0000, 1.1100, -3.7409, -0.5000 },
	{ 1.8166, 10.5772, 0.0000, 1.8166, -10.5772, 0.0000 },
	{ 0.9566, 2.4772, -0.2000, 1.0566, -2.5772, -0.2000 },
	{ 0.8000, 2.7272, -0.4000, 0.8000, -2.9272, -0.2000 },
	{ 0.9033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8500, 2.6045, -0.2000, 0.8500, -2.9045, -0.2000 },
	{ 0.7566, 2.2454, -0.3000, 0.8566, -2.4454, -0.3000 },
	{ 0.7733, 2.2999, 0.0000, 0.8733, -2.2000, 0.0000 },
	{ 0.7199, 1.5545, 0.2000, 0.6199, -1.6545, 0.3000 },
	{ 1.7199, 8.4681, 0.0000, 1.7199, -8.4681, 0.0000 },
	{ 1.0033, 2.3863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 0.8800, 3.3272, -0.1000, 0.9800, -3.7272, 0.3000 },
	{ 0.9100, 2.5545, 0.2000, 0.9100, -2.9545, 0.2000 },
	{ 0.7366, 2.2545, -0.3000, 0.8366, -2.4545, 0.0000 },
	{ 1.5900, 7.6818, 0.0000, 1.5900, -7.6818, 0.0000 },
	{ 1.0033, 5.9499, 0.4000, 1.0033, -5.8499, 0.0000 },
	{ 1.4333, 4.1681, 0.0000, 1.4333, -4.1681, 0.0000 },
	{ 1.2333, 3.7454, -0.1000, 1.3333, -4.7454, -0.1000 },
	{ 0.5633, 1.9772, -0.1000, 0.4633, -1.9772, -0.1000 },
	{ 1.0533, 6.1499, 0.0000, 1.0533, -3.9500, -1.1000 },
	{ 0.8600, 2.3045, 0.0000, 0.8600, -2.5045, 0.0000 },
	{ 1.2133, 5.5454, -0.2000, 1.1133, -5.2454, 0.4000 },
	{ 0.9033, 2.6454, 0.0000, 0.9033, -2.7454, -0.1000 },
	{ 0.8400, 2.4045, -0.5000, 0.8400, -2.7045, -0.1000 },
	{ 0.9700, 2.6272, -0.3000, 0.8700, -2.6272, 0.1000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9699, 2.8363, -0.2000, 1.0699, -3.0363, 0.0000 },
	{ 1.0866, 5.8136, -1.0000, 1.2866, -7.1136, -0.9000 },
	{ 1.1200, 2.7363, 0.7000, 1.1200, -3.0363, 0.7000 },
	{ 0.9666, 2.3636, 0.0000, 0.9666, -2.7636, -0.2000 },
	{ 1.5900, 7.7363, 0.0000, 1.5900, -7.7363, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 1.0099, 4.1045, 0.0000, 1.0099, -4.1045, 0.0000 },
	{ 1.0233, 6.1409, 0.0000, 1.0233, -3.9409, -1.2000 },
	{ 0.7733, 2.0863, -0.2000, 0.8733, -2.4863, -0.2000 },
	{ 1.2033, 6.6227, 0.0000, 1.2033, -6.6227, 0.0000 },
	{ 1.7133, 6.2590, 0.0000, 1.7133, -6.2590, 0.0000 },
	{ 2.2066, 8.6590, 0.0000, 2.2066, -8.6590, 0.0000 },
	{ 1.2066, 3.7090, -0.1000, 1.3066, -4.7090, -0.1000 },
	{ 0.8766, 3.3272, -0.1000, 0.8766, -4.6272, -0.5000 },
	{ 0.4099, 1.1863, 0.0000, 0.5099, -1.2863, 0.0000 },
	{ 0.9033, 2.4909, -0.2000, 0.9033, -2.7909, 0.0000 },
	{ 0.9666, 2.5999, -0.1000, 0.8666, -2.5999, 0.1000 },
	{ 3.6166, 6.1590, 0.0000, 3.6166, -6.1590, 0.0000 },
	{ 0.2333, 0.8181, 0.5000, 0.2333, -1.1181, 0.3000 },
	{ 0.2366, 0.9954, 0.0000, 0.2366, -0.9954, 0.0000 },
	{ 0.2333, 1.1000, 0.0000, 0.2333, -1.1000, 0.0000 },
	{ 0.5266, 0.5045, 0.0000, 0.5266, -0.7045, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.9433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.6433, 2.8909, -0.1000, 0.9433, -3.0909, 0.0000 },
	{ 0.2366, 1.0136, 0.0000, 0.2366, -1.0136, 0.0000 },
	{ 0.8066, 6.7272, 0.0000, 0.8066, -6.7272, 0.0000 },
	{ 1.0866, 2.0909, 0.2000, 1.0866, -2.6909, -0.2000 },
	{ 0.4733, 0.9090, 0.0000, 0.4733, -0.9090, 0.0000 },
	{ 0.8900, 4.2454, 0.0000, 0.8900, -4.2454, 0.0000 },
	{ 0.9666, 2.4545, 0.0000, 0.9666, -2.4545, 0.0000 },
	{ 0.9100, 2.7409, 0.0000, 1.0099, -2.7409, -0.1000 },
	{ 0.9166, 2.5272, -0.3000, 0.8166, -2.8272, -0.3000 },
	{ 3.6766, 5.1318, 0.0000, 3.6766, -5.1318, 0.0000 },
	{ 0.7900, 2.6954, -0.2000, 1.0900, -2.5954, 0.1000 },
	{ 0.9166, 2.2318, 0.0000, 1.0166, -2.5318, -0.3000 },
	{ 0.9500, 2.4954, 0.0000, 0.9500, -2.7954, 0.0000 },
	{ 0.8566, 1.7909, 0.0000, 0.8566, -2.2909, -0.2000 },
	{ 0.2366, 0.8545, 0.0000, 0.2366, -0.8545, 0.0000 },
	{ 0.8799, 2.3909, -0.4000, 0.8799, -2.5909, 0.0000 },
	{ 0.7833, 2.6136, 0.0000, 0.6833, -2.8136, -0.3000 },
	{ 1.7833, 11.9090, 0.0000, 1.7833, -11.9090, 0.0000 },
	{ 0.6566, 1.7500, 0.0000, 0.6566, -1.3499, 0.0000 },
	{ 0.8466, 1.5636, 1.0000, 0.5466, -3.2636, 1.1000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.7766, 5.7318, 0.0000, 0.7766, -5.7318, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.2000 },
	{ 0.9733, 3.1499, 0.0000, 1.1733, -3.1499, 0.1000 },
	{ 0.8700, 2.5772, -0.1000, 0.8700, -2.8772, 0.0000 },
	{ 0.7833, 2.6090, 0.0000, 0.7833, -2.8090, 0.0000 },
	{ 1.5900, 8.1045, 0.0000, 1.5900, -8.1045, 0.0000 },
	{ 0.8500, 2.3500, -0.2000, 0.8500, -2.8499, 0.1000 },
	{ 1.1266, 2.3772, 0.0000, 1.1266, -2.0772, 0.0000 },
	{ 0.9600, 2.2590, 0.0000, 0.9600, -2.0590, 0.0000 },
	{ 0.7766, 6.8363, 0.0000, 0.7766, -6.8363, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.7799, 2.5727, -0.2000, 1.0800, -3.4727, 0.1000 },
	{ 0.4633, 2.0772, -0.2000, 0.7633, -1.9772, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.8833, 2.6136, -0.2000, 0.7833, -2.7136, 0.0000 },
	{ 0.8366, 2.3909, 0.0000, 0.8366, -2.8909, 0.0000 },
	{ 0.9433, 2.6454, 0.1000, 1.0433, -2.8454, 0.0000 },
	{ 1.0466, 2.5909, 0.0000, 1.1466, -2.6909, 0.1000 },
	{ 0.7500, 2.2727, -0.3000, 0.8500, -2.3727, 0.0000 },
	{ 1.0566, 2.5954, -0.1000, 1.1566, -2.8954, -0.1000 },
	{ 0.6866, 2.9590, -0.7000, 0.9866, -3.7590, 0.0000 },
	{ 0.2366, 0.8636, 0.0000, 0.2366, -0.8636, 0.0000 },
	{ 0.2400, 0.7909, 0.0000, 0.2400, -0.7909, 0.0000 },
	{ 7.0733, 9.6318, 0.0000, 7.0733, -9.6318, 0.0000 },
	{ 3.7200, 2.7999, 0.0000, 3.7200, -2.7999, 0.0000 },
	{ 2.8999, 4.0909, 0.0000, 2.8999, -4.0909, 0.0000 },
	{ 1.2633, 4.2772, 0.1000, 0.3633, -5.0772, -0.4000 },
	{ 1.2833, 4.4227, -0.5000, 0.3833, -4.6227, -1.3000 },
	{ 0.9666, 2.7363, 0.0000, 0.9666, -2.8363, 0.0000 },
	{ 0.9433, 2.7772, 0.0000, 0.9433, -2.7772, -0.1000 },
	{ 0.8100, 2.7272, 0.0000, 1.0099, -2.8272, -0.2000 },
	{ 6.7699, 8.7681, 0.0000, 6.7699, -8.7681, 0.0000 },
	{ 2.9166, 6.5090, 0.0000, 2.9166, -6.5090, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.2333, 1.1227, 0.0000, 0.2333, -1.1227, 0.0000 },
	{ 0.8966, 3.7181, 0.0000, 1.1966, -3.9181, -1.1000 },
	{ 0.8166, 3.0409, 0.1000, 0.9166, -3.1409, -0.1000 },
	{ 0.9333, 2.3545, -0.2000, 0.8333, -2.3545, 0.0000 },
	{ 0.9099, 2.5000, 0.0000, 0.9099, -2.3000, 0.0000 },
	{ 0.8499, 2.5227, -0.2000, 0.8499, -2.6227, -0.3000 },
	{ 0.9933, 2.5590, 0.0000, 0.9933, -2.5590, 0.1000 },
	{ 0.5266, -0.6772, 1.3000, 0.5266, -1.9227, 0.8000 },
	{ 0.2533, 1.5818, -0.2000, 0.2533, -1.1818, -0.1000 },
	{ 0.4733, 4.0772, 1.3000, 0.3733, -1.0772, 0.0000 },
	{ 0.9933, 2.4636, 0.0000, 0.8933, -2.5636, 0.0000 },
	{ 1.0266, 2.9499, -0.2000, 0.7266, -2.8499, -0.1000 },
	{ 0.8899, 2.4909, -0.1000, 0.8900, -2.5909, -0.1000 },
	{ 0.8199, 2.4181, -0.2000, 0.8199, -3.1181, -0.2000 },
	{ 0.7766, 2.3272, 0.0000, 1.1100, -7.9772, 0.0000 },
	{ 1.0900, 7.6409, 0.0000, 1.0900, -7.5409, 0.0000 },
	{ 0.8333, 2.0590, 0.0000, 0.8333, -1.7590, 0.0000 },
	{ 0.9633, 2.6590, -0.1000, 1.0633, -2.7590, -0.1000 },
	{ 0.6566, 2.2499, -0.2000, 0.7566, -2.2499, 0.1000 },
	{ 0.9266, 2.6090, -0.1000, 0.7266, -3.0090, -0.1000 },
	{ 0.7933, 2.3045, 0.1000, 0.9933, -2.7045, 0.0000 },
	{ 0.7366, 3.6454, -0.2000, 0.9366, -4.2454, -0.8000 },
	{ 0.5299, 1.7863, 0.0000, 0.8300, -2.0863, -0.4000 },
	{ 0.9566, 2.5636, 0.0000, 1.0566, -2.6636, 0.0000 },
	{ 0.9299, 2.5545, 0.0000, 0.9299, -2.6545, 0.1000 },
	{ 1.3933, 11.0999, 0.0000, 1.3933, -11.0999, 0.0000 },
	{ 0.9000, 2.5136, 0.0000, 0.9000, -2.5136, 0.0000 },
	{ 0.9466, 2.5772, -0.2000, 0.9466, -2.6772, -0.2000 },
	{ 0.9866, 2.5545, -0.1000, 0.9866, -3.0545, 0.0000 },
	{ 0.9833, 3.0545, 0.3000, 1.1833, -2.8545, 0.3000 },
	{ 9.5799, 10.6772, 0.0000, 9.5799, -10.6772, 0.0000 },
	{ 1.0933, 2.5045, 0.1000, 1.0933, -2.9045, 0.1000 },
	{ 0.7666, 2.2318, 0.0000, 0.6666, -2.4318, -0.2000 },
	{ 1.0199, 2.5954, 0.5000, 1.1200, -2.8954, 0.6000 },
	{ 1.1200, 2.4454, 0.7000, 1.1200, -2.7454, 0.7000 },
	{ 0.9433, 2.0863, 0.0000, 0.9433, -2.3863, 0.2000 },
	{ 0.7599, 2.3909, 0.0000, 0.8600, -2.2909, 0.2000 },
	{ 0.9733, 2.3545, -0.0000, 0.8733, -2.1545, 0.1000 },
	{ 0.8333, 2.6363, -0.1000, 0.9333, -2.6363, 0.0000 },
	{ 0.8533, 2.4136, 0.0000, 0.8533, -2.3136, 0.1000 },
	{ 1.1299, 8.4636, 0.0000, 1.1299, -8.4636, 0.0000 },
	{ 0.2899, 0.6409, 0.0000, 0.2899, -0.6409, 0.0000 },
	{ 0.7766, 2.0909, 0.0000, 0.8766, -1.8909, 0.0000 },
	{ 0.9366, 2.7363, 0.0000, 0.9366, -2.9363, 0.0000 },
	{ 1.0033, 2.9136, -0.2000, 1.0033, -3.0136, -0.2000 },
	{ 0.4033, 2.1954, 0.0000, 0.2033, -1.4954, 0.0000 },
	{ 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 0.7766, 2.3272, 0.0000, 1.1566, -9.5772, 0.0000 },
	{ 0.5233, 1.0590, 0.0000, 0.5233, -1.0590, 0.0000 },
	{ 0.3533, 0.8681, -0.1000, 0.3533, -1.0681, -0.1000 },
	{ 0.8766, 3.1545, -0.4000, 0.8766, -3.3545, -0.4000 },
	{ 0.5400, 1.7499, -0.2000, 0.5400, -1.2499, -0.2000 },
	{ 0.9300, 2.3500, 0.1000, 0.8299, -2.7499, 0.0000 },
	{ 1.0066, 2.3909, -0.2000, 1.0066, -3.1909, 0.0000 },
	{ 20.8299, 27.9272, 0.0000, 0.0000, 0.0000, 0.0000 },
	{ 1.1500, 4.3590, -0.2000, 1.1500, -5.4590, -0.5000 },
	{ 0.9233, 2.3227, 0.0000, 1.0233, -2.8227, 0.1000 },
	{ 0.7866, 2.6227, -0.2000, 1.0866, -2.8227, 0.0000 },
	{ 0.2333, 1.1181, 0.0000, 0.2333, -1.1181, 0.0000 },
	{ 0.9133, 2.5818, -0.1000, 0.9133, -3.3818, 0.1000 },
	{ 0.6566, 1.4636, 0.3000, 0.5566, -1.6636, 0.4000 },
	{ 1.1833, 7.2318, 0.0000, 1.1833, -7.2318, 0.0000 },
	{ 1.0133, 2.8681, 0.1000, 0.9133, -3.0681, 0.2000 },
	{ 0.2333, 1.2727, 0.0000, 0.2333, -1.2727, 0.0000 },
	{ 0.9699, 2.1181, -0.3000, 1.0699, -2.5181, 0.1000 },
	{ 1.0266, 3.4181, 0.4000, 1.0266, -4.0181, -0.3000 },
	{ 0.7533, 2.4136, 0.1000, 0.8533, -2.3136, 0.4000 },
	{ 1.1466, 8.3636, 0.0000, 1.1466, -8.3636, 0.0000 },
	{ 1.0600, 6.1954, 0.0000, 1.0600, -6.1954, 0.0000 },
	{ 14.8166, 26.1681, 0.0000, 14.8166, -26.1681, 0.0000 },
	{ 4.1966, 6.1590, 0.0000, 4.1966, -6.1590, 0.0000 },
	{ 0.1666, 0.4181, 0.0000, 0.1666, -0.4181, 0.0000 },
	{ 0.9499, 6.1227, 0.0000, 0.9499, -6.1227, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.2863, 0.0000, 0.9033, -2.6863, 0.0000 },
	{ 1.0033, 2.3318, 0.0000, 0.9033, -2.7318, 0.0000 },
	{ 1.0733, 2.6000, 0.0000, 1.1733, -2.6000, 0.1000 },
	{ 0.8000, 2.7545, -0.1000, 1.0000, -2.7545, 0.1000 },
	{ 0.8266, 3.1636, 0.5000, 1.0266, -3.0636, 0.9000 },
	{ 0.8733, 2.1181, 0.0000, 0.8733, -2.6181, -0.3000 },
	{ 0.8800, 2.5590, -0.2000, 0.8800, -2.6590, -0.1000 },
	{ 0.8433, 2.6045, 0.1000, 1.0433, -2.8045, 0.0000 },
	{ 0.7933, 2.3045, 0.0000, 0.9933, -2.7045, 0.0000 },
	{ 0.9766, 1.5363, 0.0000, 0.9766, -1.5363, 0.0000 },
	{ 1.0066, 1.4818, 0.0000, 1.0066, -1.4818, 0.0000 },
	{ 0.4833, 2.1136, 0.0000, 0.4833, -2.1136, 0.0000 },
	{ 0.8666, 3.0999, 0.2000, 0.9666, -3.0999, 0.3000 },
	{ 0.8266, 0.6499, 0.0000, 0.8266, -0.6499, 0.0000 },
	{ 0.7100, 1.4363, 0.0000, 0.7100, -1.4363, 0.0000 }
};
new g_sign_up_timer,
	g_game_status = 0,
	g_default_colors[4] = {0xFFE61400,0xFF0066CC,0xFF319A31,0xFFFF7F00};
new p_has_color[MAX_PLAYERS],
	g_start_pos[4] = {0, 7, 56, 63};
new b_gobjectid[4],
	b_button[64],
	b_pickupid[64],
	b_objectid[64],
	b_has_color[64],
	b_unique_id[64],
	g_arena_created = false;

new Float:DmArenaSpawns[13][3] = {
	{-15.2709,2522.6272,16.4844},//3
	{0.8387,2480.1719,16.4844},//4
	{10.4950,2515.0256,16.4844},//5
	{8.7762,2528.0828,16.4922},//6
	{34.5469,2523.9570,16.4844},//7
	{48.4432,2478.2725,16.4844},//8
	{54.4565,2481.7009,16.4844},//9
	{52.2536,2509.2185,16.4844},//10
	{56.1235,2517.0713,16.4844},//11
	{89.3234,2481.9392,16.4844},//14
	{107.6609,2493.5183,16.4844},//15
	{92.4067,2522.1169,16.5540},//16
	{112.5036,2519.1624,16.6917}//17
};
new Text3D:DMSTATUS[MAX_PLAYERS];
new PlayerText:DmArenaTextDraw[MAX_PLAYERS];
new PaintGun[] = {24,31,25,30};
new ArenaGun[] = {23,24,25,29,30,31};

new Float:DMPositions[16][3] = {
	{595.2228,918.2593,6002.3262},
	{589.9407,928.0914,6002.0322},
	{586.6329,902.3514,6018.1548},
	{584.7057,878.4374,6000.9780},
	{599.7452,885.2993,6002.5005},
	{601.0707,905.4709,6003.0117},
	{628.3613,919.1977,6000.4570},
	{629.3442,911.0972,5999.9858},
	{639.1546,921.4785,6015.9800},
	{663.1718,913.4455,5998.5186},
	{696.9830,891.0146,5997.5513},
	{681.8344,857.3040,5999.6289},
	{688.3863,843.8834,6000.3115},
	{655.5336,836.2385,6001.7065},
	{619.6937,840.1102,6000.2534},
	{647.0892,856.9950,6000.9971}
};
/*============== [ Казіно кості ] ===============*/
#define MIN_IGROKOV (2)
#define MIN_STAVKA 1000
#define MAX_STAVKA 5000000
#define MAX_TABLES_DICE 4
enum Casino_TD_Data {
	Text:Casino_TD_Set_Bet,
	Text:Casino_TD_Dice,
	Text:Casino_TD_Exit,
	Text:Casino_TD_TableNicks[MAX_TABLES_DICE],
	Text:Casino_TD_TableScore[MAX_TABLES_DICE],
	Text:Casino_TD_TableName[MAX_TABLES_DICE],
	Text:Casino_TD_Box,
	Text:Casino_TD_Enum,
	Text:Casino_TD_Lines[5],
	Text:Casino_TD_Modeled[2]
}
new Casino_TD[Casino_TD_Data],
	PlayerText:PTD_DiceStat[MAX_PLAYERS] = {PlayerText:-1,...};

#define CASINO_TEXT_STRING ""ORANGE"Стіл №%d\n\n"W"Крупье: "YELLOW"   %s\n\n"W"Гравець 1:{f6f6d9}   %s\n"W"Гравець 2:{f6f6d9}   %s\n"W"Гравець 3:{f6f6d9}   %s\n"W"Гравець 4:{f6f6d9}   %s\n"W"Гравець 5:{f6f6d9}   %s\n\n"W"Ставка: "ORANGE"$%d\n"W"Банк: "ORANGE"$%d\n\n"W"Статус: {EB3F36}%s\n{f6f6d9}Для початку гри натисніть "W"'F'\n"
enum InfoDice_ {
	dice_gamer[5],
	dice_score[5],
	dice_stavka,
	dice_bank,
	dice_crup,
	bool:dice_game_start,
	dice_area,
	Text3D:dice_text,
	dice_game_start_time,
	dice_game_start_timer
}
new InfoDice[MAX_TABLES_DICE][InfoDice_];
new Casino_Flag[MAX_PLAYERS][6];

#define show_casino_td 0
#define select_casino_table 1
#define casino_crup 2
#define casino_bet_cash 3

//////////////////////////////////////////////////////////////////
new legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

new Float:spawn_ls[][] = {
	{1996.6039,-2026.8654,13.5708,178.7523}, // ЖД ЛС 1
	{2004.2115,-2026.9178,13.5708,179.3790}, // ЖД ЛС 2
	{2011.5526,-2026.9365,13.5708,180.0057}, // ЖД ЛС 3
	{2011.3553,-2009.2456,13.5708,359.8607}, // ЖД ЛС 4
	{2003.9650,-2009.1975,13.5708,359.8606}, // ЖД ЛС 5
	{1996.4050,-2009.2184,13.5708,358.2938}, // ЖД ЛС 6

	{1756.1792,-1893.1260,13.5565,268.4334}, // spawn 1
	{1756.0985,-1894.9492,13.5565,269.0366}, // spawn 2
	{1755.9591,-1901.9570,13.5633,269.9765}, // spawn 3
	{1755.8163,-1904.0504,13.5643,269.9530} // spawn 4
};
new Float:spawn_sf[][] = {
	{-1977.4750,123.1160,27.7047,270.2929}, // ЖД СФ 1
	{-1977.4535,137.6149,27.7047,270.2929}, // ЖД СФ 2
	{-1977.4214,152.9397,27.7047,270.2928}, // ЖД СФ 3
	{-1977.4877,164.1166,27.7047,269.0396}, // ЖД СФ 4
	{-1963.0514,164.0291,27.7087,89.4980}, // ЖД СФ 5
	{-1963.0869,145.2251,27.7087,88.5580}, // ЖД СФ 6
	{-1963.0641,134.3678,27.7087,90.4380}, // ЖД СФ 7
	{-1963.0579,123.5178,27.7087,91.0647} // ЖД СФ 8
};
new Float:spawn_lv[][] = {
	{2856.6641,1302.9756,11.3937,359.4539}, // spawn LV 1
	{2856.6882,1300.3547,11.3937,179.2388}, // spawn LV 2
	{2856.5376,1284.9554,11.3937,359.6737}, // spawn LV 3
	{2856.6653,1282.2377,11.3937,179.1685}, // spawn LV 4
	{2856.5779,1268.9857,11.3937,359.9402}, // spawn LV 5
	{2856.6326,1266.2780,11.3937,179.7486}, // spawn LV 6
	{2856.5842,1251.0560,11.3937,0.2069}, // spawn LV 7
	{2856.6763,1248.3767,11.3937,179.1219} // spawn LV 8
};

new actorereg[MAX_PLAYERS][2];
new Talk[][] = {
	{"IDLE_chat"},
	{"prtial_gngtlkA"},
	{"prtial_gngtlkB"},
	{"prtial_gngtlkD"},
	{"prtial_gngtlkE"},
	{"prtial_gngtlkF"},
	{"prtial_gngtlkG"}
};

new PlayerTrailerTime[MAX_PLAYERS];

new Float:car_fuels[6][3] = {
	{-231.2285, -195.9663, 2.4525},
	{-224.4868, -197.6987, 2.4525},
	{-217.5300, -199.7619, 2.4525},
	{-210.7354, -201.3426, 2.4525},
	{-203.3658, -202.8208, 2.4525},
	{-195.6543, -204.4956, 2.4525}
};

enum fracspawn {
	fracInt,
	fracWorld,
	fracColor,
	Float:fracCoordsX,
	Float:fracCoordsY,
	Float:fracCoordsZ,
	Float:fracCoordsA
}
new Float:gFractionSpawn[MAX_FRACTIONS][fracspawn] = {//saneka
	{0,0,TEAM_HIT_COLOR,0.0,0.0,0.0,0.0},
	{99,40,0x110CE7FF,1376.2949,1061.4469,1626.4896,27.7764}, //LSPD
	{99,41,0x110CE7FF,1376.2949,1061.4469,1626.4896,27.7764}, //SFPD
	{99,42,0x110CE7FF,1376.2949,1061.4469,1626.4896,27.7764}, //LVPD
	{75,43,0x313131AA,1473.0166,249.0210,1013.5359,315.8087}, //FBI
	{77,44,0x114D71FF,-1333.0955,1929.1984,1087.7546,89.6277}, //mayor
	{87,59,0x5aa652FF,250.4903,108.3510,1024.3394,200.4394}, //ArmySf
	{87,60,0x5aa652FF,250.4903,108.3510,1024.3394,200.4394}, //ArmyLV
	{93,20,0xA52A2AFF,2174.6411,578.7777,1080.4542,270.2591}, //Medics Ls
	{93,21,0xA52A2AFF,2174.6411,578.7777,1080.4542,270.2591}, //Medics Sf
	{93,22,0xA52A2AFF,2174.6411,578.7777,1080.4542,270.2591}, //Medics Lv
	{74,10,0x40848BAA,759.5918,-1505.2585,1417.8119,207.1667}, // LSn
	{74,11,0x40848BAA,759.5918,-1505.2585,1417.8119,207.1667},//SFn
	{74,12,0x40848BAA,759.5918,-1505.2585,1417.8119,207.1667},//LVn
	{76,45,0x139BECFF,-1228.5905,1564.6755,1114.0768,356.5507},//Instructors
	{73,49,0xDDA701FF,-1786.3325,-642.9802,1001.0900,115.2369},//LCN
	{73,50,COLOR_REDD,-1786.3325,-642.9802,1001.0900,115.2369},//Yakuza
	{73,51,COLOR_GRAD1,-1786.3325,-642.9802,1001.0900,115.2369},//RM
	{95,52,0xB313E7FF,1795.0190,735.8157,1072.5573,46.0240},//Ballas
	{98,53,0xDBD604AA,2708.0117,1746.2433,1215.7015,38.0406},//Vagos
	{94,54,0x009F00AA,1957.0736,1334.8208,966.4043,117.0578},//Grove
	{96,55,TEAM_AZTECAS_COLOR,1568.2350,905.4245,924.2636,90.5644},//Aztec
	{97,56,0x2A9170FF,1560.5941,708.0313,915.6061,24.5535},//Rifa
	{83,57,0x3B9619FA,1731.4105,1367.0096,1095.3182,292.9517}//WhiteHouse
};

new gpss[MAX_PLAYERS];

enum suspect_data {
	suspect_name_folder[31],
	suspect_name_reason[90],
	suspect_level[4]
}
static const stock suspect_player[13][suspect_data] = {
	{"Напад",							"Напад на людину\nНапад на спів. госс.организації", 												{2,4,-1,-1}},
	{"Напад з використанням зброї",		"Напад на людину\nНапад на спів. госс.организації",												{3,3,-1,-1}},
	{"Хуліганство",							"Пограбування\nМілке хуліганство\nУгон",																		{2,1,3,-1}},
	{"Зброя",								"Зберігання без ліцензії\nКража металу\nЗберігання металлу\nТорговля зброєю",									{1,2,3,3}},
	{"Взятка",								"Спроба дачі взятки",																						{2,-1,-1,-1}},
	{"Наркотичні препарати",				"Використання наркотичних засобів\nРеклама/Продажа/Зберігання наркотиків",									{2,3,-1,-1}},
	{"Транспортний засіб",				"Порча т/с або гос. майна\nПорушення ПДД\nУгон часткового т/с\nСпроба угона т/с",						{2,1,2,2}},
	{"Непослухання",						"Непослухання співробітника ПД/ФБР\nНепослухання співробітника госс. структур",									{1,2,-1,-1}},
	{"Співучасть",							"Співучасть в порушенні",																					{1,-1,-1,-1}},
	{"Проникнення",						"На об'єкті част. власності\nНа охран. території\nВ сховищу банка",									{1,2,3,-1}},
	{"Викрадання",							"Спроба викрадення\nВикрадення\nВикрадення госс.співробітника",													{2,3,4,-1}},
	{"Теракт",								"Планування/Проведення теракту",																			{6,-1,-1,-1}},
	{"Мітинг",								"Организація нелегального мітинга\nОрганизація революції\nЗакликання в терр.организацію",					{2,4,4,-1}}
};
new Float:camExit[5][4] = {
	{1545.9545,-1675.5330,13.5614,89.0782},
	{-1604.9307,719.3295,11.8571,0.0674},
	{2335.9099,2454.5857,14.9688,123.8118},
	{-1604.9307,719.3295,11.8571,0.0674},
	{-1604.9307,719.3295,11.8571,0.0674}
};
enum autosalon {
	autoCars,
	autoClass,
	autoWorld,
	Float:autoPosX,
	Float:autoPosY,
	Float:autoPosZ
}

new autosaloncar[78][autosalon] = {
	{419,0,1,1445.2085,705.7338,1087.9011},//1
	{404,0,1,1445.2091,710.9103,1087.9011},//1
	{401,0,1,1445.2209,716.5020,1087.9011},//3
	{410,0,1,1445.2075,721.8635,1087.9011},//4
	{412,0,1,1445.2218,727.5889,1087.9011},//5
	{413,0,1,1445.2330,733.3967,1087.9011},//6
	{422,0,1,1440.6002,735.0201,1087.9011},//7
	{439,0,1,1429.7894,740.1119,1087.9241},//8
	{467,0,1,1429.7721,735.5907,1087.9241},//9
	{466,0,1,1429.7736,731.3618,1087.9241},//10
	{474,0,1,1429.8004,726.9999,1087.9241},//11
	{479,0,1,1429.8016,723.1078,1087.9241},//12
	{492,0,1,1429.7720,718.8213,1087.9241},//13
	{491,0,1,1429.7936,714.4084,1087.9241},//14
	{517,0,1,1429.7799,709.7604,1087.9241},//15
	{518,0,1,1429.7854,705.0353,1087.9241},//16
	{542,0,1,1429.7755,699.8195,1087.9241},//17
	{543,0,1,1441.5001,712.2757,1087.9011},//18
	{545,0,1,1441.5013,725.3693,1087.9011},//19

	{549,0,2,1445.2085,705.7338,1087.9011},//1
	{575,0,2,1445.2091,710.9103,1087.9011},//1
	{576,0,2,1445.2209,716.5020,1087.9011},//3
	{600,0,2,1445.2075,721.8635,1087.9011},//4
	{585,0,2,1445.2218,727.5889,1087.9011},//5
	///////////////////////////////////////
	{603,1,3,1445.2085,705.7338,1087.9011},//1
	{579,1,3,1445.2091,710.9103,1087.9011},//1
	{589,1,3,1445.2209,716.5020,1087.9011},//3
	{580,1,3,1445.2075,721.8635,1087.9011},//4
	{567,1,3,1445.2218,727.5889,1087.9011},//5
	{566,1,3,1445.2330,733.3967,1087.9011},//6
	{561,1,3,1440.6002,735.0201,1087.9011},//7
	{558,1,3,1429.7894,740.1119,1087.9241},//8
	{555,1,3,1429.7721,735.5907,1087.9241},//9
	{554,1,3,1429.7736,731.3618,1087.9241},//10
	{551,1,3,1429.8004,726.9999,1087.9241},//11
	{534,1,3,1429.8016,723.1078,1087.9241},//12
	{527,1,3,1429.7720,718.8213,1087.9241},//13
	{535,1,3,1429.7936,714.4084,1087.9241},//14
	{507,1,3,1429.7799,709.7604,1087.9241},//15
	{505,1,3,1429.7854,705.0353,1087.9241},//16
	{526,1,3,1429.7755,699.8195,1087.9241},//17
	{533,1,3,1441.5001,712.2757,1087.9011},//18
	{500,1,3,1441.5013,725.3693,1087.9011},//19

	{496,1,4,1445.2085,705.7338,1087.9011},//1
	{475,1,4,1445.2091,710.9103,1087.9011},//1
	{445,1,4,1445.2209,716.5020,1087.9011},//3
	{426,1,4,1445.2075,721.8635,1087.9011},//4
	{421,1,4,1445.2218,727.5889,1087.9011},//5
	{405,1,4,1445.2330,733.3967,1087.9011},//6
	{400,1,4,1440.6002,735.0201,1087.9011},//7
	//////////////////////////////////////
	{602,2,5,1445.2085,705.7338,1087.9011},//1
	{587,2,5,1445.2091,710.9103,1087.9011},//1
	{559,2,5,1445.2209,716.5020,1087.9011},//3
	{560,2,5,1445.2075,721.8635,1087.9011},//4
	{562,2,5,1445.2218,727.5889,1087.9011},//5
	{541,2,5,1445.2330,733.3967,1087.9011},//6
	{506,2,5,1440.6002,735.0201,1087.9011},//7
	{480,2,5,1429.7894,740.1119,1087.9241},//8
	{434,2,5,1429.7721,735.5907,1087.9241},//9
	{477,2,5,1429.7736,731.3618,1087.9241},//10
	{415,2,5,1429.8004,726.9999,1087.9241},//11
	{429,2,5,1429.8016,723.1078,1087.9241},//12
	{402,2,5,1429.7720,718.8213,1087.9241},//13
	{451,2,5,1429.7936,714.4084,1087.9241},//14
	{411,2,5,1429.7799,709.7604,1087.9241},//15
	{495,2,5,1429.7854,705.0353,1087.9241},//15
	{494,2,5,1429.7755,699.8195,1087.9241},//15
	///////////////////////////////////////
	{481,3,6,1445.2085,705.7338,1087.9011},//1
	{509,3,6,1445.2091,710.9103,1087.9011},//1
	{510,3,6,1445.2209,716.5020,1087.9011},//3
	{462,3,6,1445.2075,721.8635,1087.9011},//4
	{461,3,6,1445.2218,727.5889,1087.9011},//5
	{521,3,6,1445.2330,733.3967,1087.9011},//6
	{463,3,6,1440.6002,735.0201,1087.9011},//7
	{586,3,6,1429.7894,740.1119,1087.9241},//8
	{471,3,6,1429.7721,735.5907,1087.9241},//9
	{468,3,6,1429.7736,731.3618,1087.9241},//10
	{522,3,6,1429.8004,726.9999,1087.9241}//11
};
new aSellCar[7],
	car_pickup[78];

new donate_car[22][2] = {
	{409,200},//0
	{424,400},//1
	{444,1000},//2
	{459,200},//3
	{470,600},//4
	{478,250},//5
	{482,180},//6
	{490,600},//7
	{502,1000},//8
	{503,1000},//9
	{504,1000},//10
	{528,600},//11
	{531,300},//12
	{539,1200},//13
	{556,1000},//14
	{557,1000},//15
	{568,800},//16
	{571,700},//17
	{573,900},//18
	{578,900},//19
	{599,600},//20
	{601,1200}//21
};

new Float:hotel_spawncar[34][4] = {
	//ЛВ
	{1900.8213, 1988.9442, 7.2995, 180.0000},
	{1897.3031, 1988.9442, 7.2995, 180.0000},
	{1893.6305, 1988.9442, 7.2995, 180.0000},
	{1890.0723, 1988.9442, 7.2995, 180.0000},
	{1886.3447, 1988.9442, 7.2995, 180.0000},
	{1882.7974, 1988.9442, 7.2995, 180.0000},
	{1879.2885, 1988.9442, 7.2995, 180.0000},
	{1875.6777, 1988.9442, 7.2995, 180.0000},
	{1871.9949, 1988.9442, 7.2995, 180.0000},
	{1868.5052, 1988.9442, 7.2995, 180.0000},
	//ЛС
	{279.2335, -1536.3569, 24.2992, 234.8225},
	{282.6563, -1532.0404, 24.2992, 234.8225},
	{286.0143, -1527.7018, 24.2992, 234.8225},
	{289.2401, -1523.2544, 24.2992, 234.8225},
	{292.5214, -1518.8168, 24.2992, 234.8225},
	{295.7639, -1514.4993, 24.2992, 234.8225},
	{298.8854, -1509.8937, 24.2992, 234.8225},
	{302.0367, -1505.2727, 24.2992, 234.8225},
	{304.5532, -1501.3510, 24.2992, 234.8225},
	//LV ROCK
	{2610.9695, 2279.4922, 10.5251, 90.0000},
	{2610.9695, 2275.3081, 10.5251, 90.0000},
	{2610.9695, 2271.1663, 10.5251, 90.0000},
	{2610.9695, 2266.9214, 10.5251, 90.0000},
	{2610.9695, 2262.7231, 10.5251, 90.0000},
	//СФ
	{-2493.8018, 284.6566, 34.8714, 162.6043},
	{-2490.5122, 283.7906, 34.8714, 162.6043},
	{-2487.1584, 282.7819, 34.8714, 162.6043},
	{-2484.0061, 281.8705, 34.8714, 162.6043},
	{-2480.6489, 280.8499, 34.8714, 162.6043},
	{-2477.3955, 279.9110, 34.8714, 162.6043},
	{-2474.2861, 278.9149, 34.8714, 162.6043},
	{-2470.8843, 278.0006, 34.8714, 162.6043},
	{-2467.7415, 276.9304, 34.8714, 162.6043},
	{-2464.1814, 275.9180, 34.8714, 162.6043}
};
new Float:hotel_spawnscar[60][4] = {
	{1639.2523, 681.8748, 589.2706, 270.0000},
	{1639.2523, 685.3676, 589.2634, 270.0000},
	{1639.2523, 689.1181, 589.2706, 270.0000},
	{1639.2523, 692.9104, 589.2707, 270.0000},
	{1639.2523, 696.7643, 589.2707, 270.0000},
	{1639.2523, 700.5690, 589.2707, 270.0000},
	{1639.2523, 704.2307, 589.2706, 270.0000},
	{1639.2523, 707.8220, 589.2714, 270.0000},
	{1639.2523, 711.6429, 589.2697, 270.0000},
	{1661.5199, 708.4477, 589.2723, 0.0000},
	{1665.6879, 708.4477, 589.2725, 0.0000},
	{1669.7159, 708.4477, 589.2707, 0.0000},
	{1690.4121, 708.4477, 589.2707, 0.0000},
	{1694.5243, 708.4477, 589.2725, 0.0000},
	{1698.7091, 708.4477, 589.2682, 0.0000},
	{1698.7136, 692.3749, 589.2707, 180.0000},
	{1694.6134, 692.3749, 589.2707, 180.0000},
	{1690.3038, 692.3749, 589.2707, 180.0000},
	{1686.2885, 692.3749, 589.2706, 180.0000},
	{1673.9747, 692.3749, 589.2707, 180.0000},
	{1669.7694, 692.3749, 589.2725, 180.0000},
	{1665.6481, 692.3749, 589.2722, 180.0000},
	{1661.4946, 692.3749, 589.2725, 180.0000},
	{1645.2010, 675.7460, 589.2640, 0.0000},
	{1649.1854, 675.7460, 589.2623, 0.0000},
	{1653.5624, 675.7460, 589.2503, 0.0000},
	{1657.5077, 675.7460, 589.2647, 0.0000},
	{1661.5767, 675.7460, 589.2480, 0.0000},
	{1665.5404, 675.7460, 589.2515, 0.0000},
	{1669.8055, 675.7460, 589.2491, 0.0000},
	{1673.8234, 675.7460, 589.2576, 0.0000},
	{1678.0140, 675.7460, 589.2639, 0.0000},
	{1682.2246, 675.7460, 589.2675, 0.0000},
	{1686.1377, 675.7460, 589.2593, 0.0000},
	{1690.4374, 675.7460, 589.2601, 0.0000},
	{1694.4039, 675.7460, 589.2617, 0.0000},
	{1698.6069, 675.7460, 589.2545, 0.0000},
	{1702.7660, 675.7460, 589.2673, 0.0000},
	{1706.8040, 675.7460, 589.2642, 0.0000},
	{1710.9709, 675.7460, 589.2601, 0.0000},
	{1715.1213, 675.7460, 589.2668, 0.0000},
	{1721.3688, 682.6960, 589.2549, 90.0000},
	{1721.3688, 688.2509, 589.2630, 90.0000},
	{1721.3688, 693.4296, 589.2612, 90.0000},
	{1721.3688, 698.6730, 589.2632, 90.0000},
	{1721.3688, 702.4772, 589.2640, 90.0000},
	{1723.1814, 724.6450, 589.2619, 180.0000},
	{1719.1642, 724.6450, 589.2607, 180.0000},
	{1714.9835, 724.6450, 589.2621, 180.0000},
	{1710.7709, 724.6450, 589.2488, 180.0000},
	{1706.9706, 724.6450, 589.2467, 180.0000},
	{1702.7843, 724.6450, 589.2603, 180.5041},
	{1698.5903, 724.6450, 589.2646, 180.0000},
	{1694.5520, 724.6450, 589.2487, 180.0000},
	{1690.4575, 724.6450, 589.2648, 180.0000},
	{1686.3148, 724.6450, 589.2678, 180.0000},
	{1682.1447, 724.6450, 589.2514, 180.0000},
	{1678.0258, 724.6450, 589.2576, 180.0000},
	{1673.8429, 724.6450, 589.2629, 180.0000},
	{1669.6791, 724.6450, 589.2625, 180.0000}
};

new Float:exitgarage[4][4] = {
	{1111.7349,-1772.8270,894.0478,181.6883},//N
	{1045.7454,-1781.7330,894.0495,180.3648},//D
	{1113.7714,-1858.3667,894.0478,269.9092},//B
	{1052.1896,-1852.6293,894.0478,147.5578}//A
};
new Float:cargarage[8][4] = {
	{1111.6594, -1785.9598, 893.7748, 37.4031},//N
	{1111.8777, -1778.5665, 893.7748, 140.4031},//N
	{1043.5570, -1783.2856, 893.7767, 270.0000},//D
	{1043.5570, -1787.0009, 893.7767, 270.0000},//D
	{1116.3336, -1853.8832, 893.7759, 310.0000},//B
	{1116.3298, -1862.6064, 893.7759, -135.0000},//B
	{1050.6737, -1862.6144, 893.8024, -230.0000},//A
	{1050.1293, -1856.7645, 893.8024, -230.0000}//A
};

enum TRANSPORT_DATA {
	trID,
	trModel,
	trName[35],
	trPrice,
	trTank,
	trConsumption,
	trClass,
	trFuelable,
	trSellable,
	trProds
}
new gTransport[220][TRANSPORT_DATA];

#define BUS_PRICE_CHECKPOINT 50
#define BUS_PRICE_RENT 500

new Text3D:gPlayerBusText[MAX_PLAYERS] = {Text3D:INVALID_3DTEXT_ID,...},
	gRouteName[7][32];
new Float:gBusCPs[7][111][4] = {
	{
		{0.0,1214.2271,-1841.6237,13.4829}, // Автобус ЛС - яблуневий сад 1
		{0.0,1337.0187,-1858.6047,13.4910}, // Автобус ЛС - яблуневий сад 2
		{0.0,1556.0479,-1874.5721,13.4841}, // Автобус ЛС - яблуневий сад 3
		{0.0,1691.2279,-1830.6217,13.4858}, // Автобус ЛС - яблуневий сад 4
		{0.0,1801.5131,-1834.5245,13.4789}, // Автобус ЛС - яблуневий сад 5
		{0.0,1819.7594,-1875.0637,13.4980}, // Автобус ЛС - яблуневий сад 6
		{1.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7 ОСТ
		{0.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7 
		{0.0,1804.4498,-1894.3840,13.5065}, // Автобус ЛС - яблуневий сад 8
		{0.0,1855.0417,-1935.1912,13.4802}, // Автобус ЛС - яблуневий сад 9
		{0.0,1944.5377,-1933.8118,13.4847}, // Автобус ЛС - яблуневий сад 10
		{0.0,1959.1832,-2039.9878,13.4835}, // Автобус ЛС - яблуневий сад 11
		{1.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12 ОСТ
		{0.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12
		{0.0,1976.0389,-1995.5121,13.6902}, // Автобус ЛС - яблуневий сад 13
		{0.0,1964.3901,-1864.1176,13.4833}, // Автобус ЛС - яблуневий сад 14
		{0.0,1964.5205,-1767.0066,13.4870}, // Автобус ЛС - яблуневий сад 15
		{0.0,1805.2716,-1729.8383,13.4948}, // Автобус ЛС - яблуневий сад 16
		{0.0,1544.3309,-1730.2870,13.4771}, // Автобус ЛС - яблуневий сад 17
		{1.0,1535.7860,-1674.1608,13.4879}, // Автобус ЛС - яблуневий сад 18 ОСТ
		{0.0,1535.7860,-1674.1608,13.4879}, // Автобус ЛС - яблуневий сад 18
		{0.0,1531.6091,-1611.0477,13.4792}, // Автобус ЛС - яблуневий сад 19
		{0.0,1328.5776,-1571.1885,13.4637}, // Автобус ЛС - яблуневий сад 20
		{0.0,1354.8143,-1425.8323,13.4881}, // Автобус ЛС - яблуневий сад 21
		{0.0,1281.6537,-1392.6047,13.3373}, // Автобус ЛС - яблуневий сад 22
		{0.0,1259.8846,-1300.3331,13.2508}, // Автобус ЛС - яблуневий сад 23
		{0.0,1212.6843,-1278.1226,13.4864}, // Автобус ЛС - яблуневий сад 24
		{1.0,1192.5950,-1357.1691,13.4869}, // Автобус ЛС - яблуневий сад 25 ОСТ
		{0.0,1192.5950,-1357.1691,13.4869}, // Автобус ЛС - яблуневий сад 25
		{0.0,1193.4930,-1380.9880,13.3259}, // Автобус ЛС - яблуневий сад 
		{0.0,1192.7594,-1377.8389,13.4397}, // Автобус ЛС - яблуневий сад 26
		{0.0,901.3838,-1395.2395,13.3022}, // Автобус ЛС - яблуневий сад 27
		{1.0,735.4214,-1390.9387,13.6672}, // Автобус ЛС - яблуневий сад 28 ОСТ АШ
		{0.0,735.4214,-1390.9387,13.6672}, // Автобус ЛС - яблуневий сад 28
		{0.0,545.0849,-1406.2698,15.6582}, // Автобус ЛС - яблуневий сад 29
		{1.0,342.6032,-1525.6768,33.4036}, // Автобус ЛС - яблуневий сад 30 ОСТ отель
		{0.0,342.6032,-1525.6768,33.4036}, // Автобус ЛС - яблуневий сад 30
		{0.0,322.9697,-1569.4362,33.1997}, // Автобус ЛС - яблуневий сад 31
		{0.0,260.9909,-1572.1434,33.0791}, // Автобус ЛС - яблуневий сад 32
		{0.0,281.2208,-1508.2583,32.5755}, // Автобус ЛС - яблуневий сад 33
		{0.0,157.5408,-1539.8556,11.2695}, // Автобус ЛС - яблуневий сад 34
		{0.0,53.4258,-1524.0197,5.1330}, // Автобус ЛС - яблуневий сад 35
		{0.0,-119.8915,-1187.7773,2.7961}, // Автобус ЛС - яблуневий сад 36
		{0.0,-113.7326,-995.2748,24.9790}, // Автобус ЛС - яблуневий сад 37
		{0.0,52.6536,-558.9227,9.2004}, // Автобус ЛС - яблуневий сад 38
		{0.0,-298.3496,-172.8055,1.1759}, // Автобус ЛС - яблуневий сад 39
		{0.0,-146.7536,-188.9806,1.9985}, // Автобус ЛС - яблуневий сад 40
		{0.0,-118.3879,-138.2790,3.2170}, // Автобус ЛС - яблуневий сад 41
		{1.0,-163.2506,-113.0578,3.2167}, // Автобус ЛС - яблуневий сад 42 ОСТ ЯБЛ
		{0.0,-163.2506,-113.0578,3.2167}, // Автобус ЛС - яблуневий сад 42
		{0.0,-288.9584,-78.0612,2.3629}, // Автобус ЛС - яблуневий сад 43
		{0.0,-312.8886,-132.4520,1.1855}, // Автобус ЛС - яблуневий сад 44
		{0.0,53.1651,-213.1240,1.5581}, // Автобус ЛС - яблуневий сад 45
		{0.0,308.4373,-214.6019,1.5046}, // Автобус ЛС - яблуневий сад 46
		{0.0,335.2500,-160.6235,1.3314}, // Автобус ЛС - яблуневий сад 47
		{0.0,586.5766,-150.1363,32.9785}, // Автобус ЛС - яблуневий сад 48
		{0.0,812.3875,-170.6930,18.6473}, // Автобус ЛС - яблуневий сад 49
		{0.0,1163.3831,-174.9190,41.1304}, // Автобус ЛС - яблуневий сад 50
		{0.0,1256.2535,-435.2551,5.3327}, // Автобус ЛС - яблуневий сад 51
		{0.0,1172.4113,-695.1100,62.2461}, // Автобус ЛС - яблуневий сад 52
		{0.0,1156.0012,-921.0430,42.9780}, // Автобус ЛС - яблуневий сад 53
		{0.0,1341.7106,-940.4310,35.3839}, // Автобус ЛС - яблуневий сад 54
		{0.0,1340.8616,-1150.4279,23.7666}, // Автобус ЛС - яблуневий сад 55
		{0.0,1320.9132,-1493.5867,13.4783}, // Автобус ЛС - яблуневий сад 56
		{0.0,1294.9742,-1738.9154,13.4877}, // Автобус ЛС - яблуневий сад 57
		{0.0,1295.0835,-1833.2035,13.4806}, // Автобус ЛС - яблуневий сад 58
		{1.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{//оружейка
		{0.0,1214.2271,-1841.6237,13.4829}, // Автобус ЛС - яблуневий сад 1
		{0.0,1337.0187,-1858.6047,13.4910}, // Автобус ЛС - яблуневий сад 2
		{0.0,1556.0479,-1874.5721,13.4841}, // Автобус ЛС - яблуневий сад 3
		{0.0,1691.2279,-1830.6217,13.4858}, // Автобус ЛС - яблуневий сад 4
		{0.0,1801.5131,-1834.5245,13.4789}, // Автобус ЛС - яблуневий сад 5
		{0.0,1819.7594,-1875.0637,13.4980}, // Автобус ЛС - яблуневий сад 6
		{1.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7 ОСТ
		{0.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7
		{0.0,1804.4498,-1894.3840,13.5065}, // Автобус ЛС - яблуневий сад 8
		{0.0,1855.0417,-1935.1912,13.4802}, // Автобус ЛС - яблуневий сад 9
		{0.0,1944.5377,-1933.8118,13.4847}, // Автобус ЛС - яблуневий сад 10
		{0.0,1959.1832,-2039.9878,13.4835}, // Автобус ЛС - яблуневий сад 11
		{1.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12 ОСТ
		{0.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12
		{0.0,1976.0389,-1995.5121,13.6902}, // Автобус ЛС - яблуневий сад 13
		{0.0,1963.3302,-1942.5835,13.5776}, // Оружейка 1
		{0.0,1963.6166,-1765.9930,13.4837}, // Оружейка 2
		{0.0,1741.3721,-1729.4889,13.4913}, // Оружейка 3
		{0.0,1540.4053,-1730.5059,13.4791}, // Оружейка 4
		{1.0,1536.3052,-1673.5221,13.4833}, // Оружейка 5 остановка ЛСПД
		{0.0,1536.3052,-1673.5221,13.4833}, // Оружейка 5 остановка ЛСПД
		{0.0,1531.4255,-1602.0299,13.4795}, // Оружейка 6
		{0.0,1448.0746,-1590.0293,13.4835}, // Оружейка 7
		{0.0,1427.0520,-1718.3151,13.4776}, // Оружейка 8
		{0.0,1399.7667,-1731.2450,13.4879}, // Оружейка 9
		{0.0,1386.8468,-1858.1704,13.4841}, // Оружейка 10
		{0.0,1521.1714,-1875.1702,13.4859}, // Оружейка 11
		{0.0,1828.2681,-2167.7881,13.4836}, // Оружейка 12
		{0.0,1953.3475,-2168.1384,13.4809}, // Оружейка 13
		{0.0,1963.6655,-2124.0908,13.4773}, // Оружейка 14
		{0.0,2188.5161,-2158.4248,13.4849}, // Оружейка 15
		{0.0,2273.5181,-2092.4167,13.5962}, // Оружейка 16
		{0.0,2551.2319,-2351.6409,19.4098}, // Оружейка 17
		{1.0,2648.9653,-2410.4834,13.6335}, // Оружейка 18 Оружейный завод остановка
		{0.0,2648.9653,-2410.4834,13.6335}, // Оружейка 18 Оружейный завод остановка
		{0.0,2614.3113,-2401.7566,13.6075}, // Оружейка 19
		{0.0,2290.5583,-2086.0999,13.4534}, // Оружейка 20
		{0.0,2221.3511,-1903.6588,13.4772}, // Оружейка 21
		{0.0,2096.2139,-1891.4275,13.4691}, // Оружейка 22
		{0.0,2071.1812,-1929.7961,13.4589}, // Оружейка 23
		{0.0,1833.7593,-1929.3501,13.4755}, // Оружейка 24
		{0.0,1822.6019,-1743.0156,13.4838}, // Оружейка 25
		{1.0,1481.3580,-1725.4241,13.4710}, // Оружейка 26 Остановка мерія
		{0.0,1481.3580,-1725.4241,13.4710}, // Оружейка 26 Остановка мерія
		{0.0,1326.9724,-1729.1134,13.4685}, // Оружейка 27
		{0.0,1353.4050,-1408.6917,13.4451}, // Оружейка 28
		{0.0,1272.6542,-1398.1283,13.1364}, // Оружейка 29
		{0.0,1262.1517,-1288.5327,13.4005}, // Оружейка 30
		{0.0,1209.7455,-1277.6670,13.4763}, // Оружейка 31
		{1.0,1190.4352,-1336.4911,13.5762}, // Оружейка 32 остановка мчс
		{0.0,1190.4352,-1336.4911,13.5762}, // Оружейка 32 остановка мчс
		{0.0,1192.9000,-1544.1130,13.4843}, // Оружейка 33
		{0.0,1160.1768,-1571.0173,13.3792}, // Оружейка 34
		{0.0,1146.9352,-1698.9518,13.9472}, // Оружейка 35
		{0.0,1171.5535,-1730.2413,13.6339}, // Оружейка 36
		{0.0,1172.3817,-1836.5792,13.4998}, // Оружейка 37
		{0.0,1251.5541,-1854.7930,13.4835}, // Оружейка 38
		{1.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1214.2271,-1841.6237,13.4829}, // Автобус ЛС - яблуневий сад 1
		{0.0,1337.0187,-1858.6047,13.4910}, // Автобус ЛС - яблуневий сад 2
		{0.0,1556.0479,-1874.5721,13.4841}, // Автобус ЛС - яблуневий сад 3
		{0.0,1691.2279,-1830.6217,13.4858}, // Автобус ЛС - яблуневий сад 4
		{0.0,1801.5131,-1834.5245,13.4789}, // Автобус ЛС - яблуневий сад 5
		{0.0,1819.7594,-1875.0637,13.4980}, // Автобус ЛС - яблуневий сад 6
		{1.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7 ОСТ
		{0.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7
		{0.0,1804.4498,-1894.3840,13.5065}, // Автобус ЛС - яблуневий сад 8
		{0.0,1855.0417,-1935.1912,13.4802}, // Автобус ЛС - яблуневий сад 9
		{0.0,1944.5377,-1933.8118,13.4847}, // Автобус ЛС - яблуневий сад 10
		{0.0,1959.1832,-2039.9878,13.4835}, // Автобус ЛС - яблуневий сад 11
		{1.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12 ОСТ
		{0.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12
		{0.0,1976.0389,-1995.5121,13.6902}, // Автобус ЛС - яблуневий сад 13
		{0.0,1963.0328,-1978.8793,13.4917}, // АвтобусЛС - Нефтезавод 1
		{0.0,1963.7924,-1766.7512,13.5188}, // АвтобусЛС - Нефтезавод 2
		{0.0,1843.8573,-1750.1359,13.4836}, // АвтобусЛС - Нефтезавод 3
		{0.0,1788.9052,-1730.1495,13.4833}, // АвтобусЛС - Нефтезавод 4
		{0.0,1541.3855,-1730.0957,13.4783}, // АвтобусЛС - Нефтезавод 5
		{1.0,1535.3049,-1674.4214,13.4848}, // АвтобусЛС - Нефтезавод 6 ОСТ ЛСПД
		{0.0,1535.3049,-1674.4214,13.4848}, // АвтобусЛС - Нефтезавод 6 ОСТ ЛСПД
		{0.0,1532.6956,-1608.1808,13.4816}, // АвтобусЛС - Нефтезавод 7
		{0.0,1439.6666,-1590.5693,13.4873}, // АвтобусЛС - Нефтезавод 8
		{0.0,1456.3632,-1453.6963,13.4584}, // АвтобусЛС - Нефтезавод 9
		{0.0,1430.9341,-1438.4152,13.4865}, // АвтобусЛС - Нефтезавод 10
		{0.0,1374.4532,-1395.8250,13.4969}, // АвтобусЛС - Нефтезавод 11
		{1.0,1210.4618,-1323.7418,13.5760}, // АвтобусЛС - Нефтезавод 12 Лікарня ЛС
		{0.0,1210.4618,-1323.7418,13.5760}, // АвтобусЛС - Нефтезавод 12 Лікарня ЛС
		{0.0,1205.2424,-1290.5332,13.4836}, // АвтобусЛС - Нефтезавод 13
		{0.0,1079.3782,-1278.3528,13.4934}, // АвтобусЛС - Нефтезавод 14
		{0.0,1056.1313,-1379.2722,13.5650}, // АвтобусЛС - Нефтезавод 15
		{1.0,742.2429,-1390.5920,13.6654}, // АвтобусЛС - Нефтезавод 16 Автошкола ЛС
		{0.0,742.2429,-1390.5920,13.6654}, // АвтобусЛС - Нефтезавод 16 Автошкола ЛС
		{0.0,649.5396,-1396.0400,13.5171}, // АвтобусЛС - Нефтезавод 17
		{0.0,628.0599,-1223.6124,18.1729}, // АвтобусЛС - Нефтезавод 18
		{0.0,554.3544,-1236.8094,17.1235}, // АвтобусЛС - Нефтезавод 19
		{0.0,299.5295,-1399.9049,13.9805}, // АвтобусЛС - Нефтезавод 20
		{0.0,158.4846,-1540.7407,11.3579}, // АвтобусЛС - Нефтезавод 21
		{0.0,105.5371,-1531.4368,6.4888}, // АвтобусЛС - Нефтезавод 22
		{0.0,165.2634,-1414.2917,44.5608}, // АвтобусЛС - Нефтезавод 23
		{0.0,145.1400,-1366.9550,50.0345}, // АвтобусЛС - Нефтезавод 24
		{0.0,188.5456,-1146.1903,60.2137}, // АвтобусЛС - Нефтезавод 25
		{0.0,286.5631,-958.2195,40.6255}, // АвтобусЛС - Нефтезавод 26
		{0.0,418.1149,-600.1732,35.5377}, // АвтобусЛС - Нефтезавод 27
		{0.0,469.4636,-418.1744,28.7455}, // АвтобусЛС - Нефтезавод 28
		{0.0,527.8354,-150.6377,37.9239}, // АвтобусЛС - Нефтезавод 29
		{0.0,516.0957,218.1131,14.1550}, // АвтобусЛС - Нефтезавод 30
		{0.0,607.9367,303.9923,19.6420}, // АвтобусЛС - Нефтезавод 31
		{0.0,553.1782,428.8676,19.0303}, // АвтобусЛС - Нефтезавод 32
		{0.0,318.8514,768.3904,12.3128}, // АвтобусЛС - Нефтезавод 33
		{0.0,193.5854,1079.4230,18.5035}, // АвтобусЛС - Нефтезавод 34
		{1.0,351.8507,1396.4845,7.0182}, // АвтобусЛС - Нефтезавод 35 ОСТ Нефтезавод
		{0.0,351.8507,1396.4845,7.0182}, // АвтобусЛС - Нефтезавод 35 ОСТ Нефтезавод
		{0.0,388.7699,1538.4469,13.7434}, // АвтобусЛС - Нефтезавод 37
		{0.0,657.1676,1839.8582,5.5735}, // АвтобусЛС - Нефтезавод 38
		{0.0,795.8563,1819.3867,4.5521}, // АвтобусЛС - Нефтезавод 39
		{0.0,829.8419,1539.0870,17.9067}, // АвтобусЛС - Нефтезавод 40
		{0.0,809.4116,1267.4512,25.8389}, // АвтобусЛС - Нефтезавод 41
		{0.0,672.6898,1096.5126,28.4358}, // АвтобусЛС - Нефтезавод 42
		{0.0,248.0561,982.5639,28.2891}, // АвтобусЛС - Нефтезавод 43
		{0.0,279.3735,843.4335,18.8742}, // АвтобусЛС - Нефтезавод 44
		{0.0,427.3322,598.7987,18.9978}, // АвтобусЛС - Нефтезавод 45
		{0.0,605.9601,345.6794,19.0318}, // АвтобусЛС - Нефтезавод 46
		{0.0,525.7582,250.0852,14.8112}, // АвтобусЛС - Нефтезавод 47
		{0.0,528.0024,-33.1806,30.1174}, // АвтобусЛС - Нефтезавод 48
		{0.0,523.5165,-124.1270,37.7924}, // АвтобусЛС - Нефтезавод 49
		{0.0,793.8564,-167.4526,18.6081}, // АвтобусЛС - Нефтезавод 50
		{0.0,1050.8088,-188.7111,32.9994}, // АвтобусЛС - Нефтезавод 51
		{0.0,1158.5375,-177.8556,41.3960}, // АвтобусЛС - Нефтезавод 52
		{0.0,1253.3308,-368.3256,2.8819}, // АвтобусЛС - Нефтезавод 53
		{0.0,1194.4186,-646.9192,59.7953}, // АвтобусЛС - Нефтезавод 54
		{0.0,1156.5133,-931.7866,43.1468}, // АвтобусЛС - Нефтезавод 55
		{0.0,1190.5186,-949.5859,42.7763}, // АвтобусЛС - Нефтезавод 56
		{0.0,1349.7976,-941.7606,34.6926}, // АвтобусЛС - Нефтезавод 57
		{0.0,1353.4818,-1040.0150,26.2441}, // АвтобусЛС - Нефтезавод 58
		{0.0,1343.6632,-1207.9521,17.3990}, // АвтобусЛС - Нефтезавод 59
		{0.0,1336.0908,-1460.1149,13.4853}, // АвтобусЛС - Нефтезавод 60
		{0.0,1298.3976,-1724.9344,13.4899}, // АвтобусЛС - Нефтезавод 61
		{0.0,1299.7802,-1830.5485,13.4906}, // АвтобусЛС - Нефтезавод 62
		{0.0,1278.4308,-1849.6223,13.4839}, // АвтобусЛС - Нефтезавод 63
		{1.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1214.2271,-1841.6237,13.4829}, // Автобус ЛС - яблуневий сад 1
		{0.0,1337.0187,-1858.6047,13.4910}, // Автобус ЛС - яблуневий сад 2
		{0.0,1556.0479,-1874.5721,13.4841}, // Автобус ЛС - яблуневий сад 3
		{0.0,1691.2279,-1830.6217,13.4858}, // Автобус ЛС - яблуневий сад 4
		{0.0,1801.5131,-1834.5245,13.4789}, // Автобус ЛС - яблуневий сад 5
		{0.0,1819.7594,-1875.0637,13.4980}, // Автобус ЛС - яблуневий сад 6
		{1.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7 ОСТ
		{0.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7
		{0.0,1804.4498,-1894.3840,13.5065}, // Автобус ЛС - яблуневий сад 8
		{0.0,1855.0417,-1935.1912,13.4802}, // Автобус ЛС - яблуневий сад 9
		{0.0,1944.5377,-1933.8118,13.4847}, // Автобус ЛС - яблуневий сад 10
		{0.0,1959.1832,-2039.9878,13.4835}, // Автобус ЛС - яблуневий сад 11
		{1.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12 ОСТ
		{0.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12
		{0.0,1964.7046,-1991.4974,13.4861}, // АВЛС - ЖДСФ 1
		{0.0,1964.1012,-1763.8149,13.4924}, // АВЛС - ЖДСФ 2
		{0.0,1841.7656,-1750.2228,13.4833}, // АВЛС - ЖДСФ 3
		{0.0,1790.8025,-1730.4607,13.4846}, // АВЛС - ЖДСФ 4
		{0.0,1548.8041,-1729.8701,13.4841}, // АВЛС - ЖДСФ 5
		{1.0,1535.3271,-1673.9270,13.4891}, // АВЛС - ЖДСФ 6 ОСТ ЛСПД
		{0.0,1535.3271,-1673.9270,13.4891}, // АВЛС - ЖДСФ 6 ОСТ ЛСПД
		{0.0,1532.5133,-1605.6156,13.5001}, // АВЛС - ЖДСФ 7
		{0.0,1445.8591,-1589.5212,13.4835}, // АВЛС - ЖДСФ 8
		{0.0,1327.0753,-1571.0421,13.4675}, // АВЛС - ЖДСФ 9
		{0.0,1354.9215,-1405.3069,13.4160}, // АВЛС - ЖДСФ 10
		{0.0,1280.8184,-1395.7087,13.2048}, // АВЛС - ЖДСФ 11
		{0.0,1260.5604,-1300.0964,13.2579}, // АВЛС - ЖДСФ 12
		{0.0,1225.2194,-1277.8857,13.5096}, // АВЛС - ЖДСФ 13
		{1.0,1189.4410,-1340.2562,13.5792}, // АВЛС - ЖДСФ 14 ОСТ Лікарня
		{0.0,1189.4410,-1340.2562,13.5792}, // АВЛС - ЖДСФ 14 ОСТ Лікарня
		{0.0,1195.2321,-1377.6731,13.4091}, // АВЛС - ЖДСФ 15
		{0.0,1142.4996,-1396.3303,13.6249}, // АВЛС - ЖДСФ 16
		{0.0,920.6032,-1397.2067,13.3422}, // АВЛС - ЖДСФ 17
		{1.0,741.4285,-1391.5300,13.5780}, // АВЛС - ЖДСФ 18 ОСТ АШ
		{0.0,741.4285,-1391.5300,13.5780}, // АВЛС - ЖДСФ 18 ОСТ АШ
		{0.0,650.0319,-1396.4429,13.5278}, // АВЛС - ЖДСФ 19
		{0.0,633.7971,-1260.5646,17.0576}, // АВЛС - ЖДСФ 20
		{0.0,627.3437,-1187.3578,18.8196}, // АВЛС - ЖДСФ 21
		{0.0,463.0310,-1113.4683,27.9686}, // АВЛС - ЖДСФ 22
		{0.0,4.6530,-1318.7405,11.5244}, // АВЛС - ЖДСФ 23
		{0.0,-320.5933,-1762.5314,16.3806}, // АВЛС - ЖДСФ 24
		{0.0,-320.5703,-2207.8826,28.5968}, // АВЛС - ЖДСФ 25
		{0.0,-43.7109,-2747.7300,41.4230}, // АВЛС - ЖДСФ 26
		{0.0,-279.0562,-2810.0627,53.3196}, // АВЛС - ЖДСФ 27
		{0.0,-782.1933,-2775.6616,74.1486}, // АВЛС - ЖДСФ 28
		{0.0,-1031.6819,-2850.2493,67.9472}, // АВЛС - ЖДСФ 29
		{0.0,-1562.5157,-2776.0818,47.9199}, // АВЛС - ЖДСФ 30
		{0.0,-1750.7065,-2589.7268,51.0123}, // АВЛС - ЖДСФ 31
		{0.0,-1948.2964,-2550.9741,38.9697}, // АВЛС - ЖДСФ 32
		{0.0,-2046.6895,-2486.2827,30.6258}, // АВЛС - ЖДСФ 33
		{0.0,-2174.7241,-2385.1775,30.5734}, // АВЛС - ЖДСФ 34
		{0.0,-2160.1440,-2325.6897,30.5686}, // АВЛС - ЖДСФ 35
		{0.0,-2259.2068,-2226.9380,30.1915}, // АВЛС - ЖДСФ 36
		{1.0,-2200.9778,-2179.0984,43.7746}, // АВЛС - ЖДСФ 37 ОСТ Города Чиллиад
		{0.0,-2200.9778,-2179.0984,43.7746}, // АВЛС - ЖДСФ 37 ОСТ Города Чиллиад
		{0.0,-2123.1187,-2107.8169,59.7788}, // АВЛС - ЖДСФ 38
		{0.0,-2032.3018,-1921.7090,50.3591}, // АВЛС - ЖДСФ 39
		{0.0,-1796.9850,-1707.7631,29.8124}, // АВЛС - ЖДСФ 40
		{0.0,-1558.4453,-1605.8856,37.7545}, // АВЛС - ЖДСФ 41
		{0.0,-1641.7303,-1502.5426,36.5871}, // АВЛС - ЖДСФ 42
		{0.0,-2136.3093,-1043.4182,31.4800}, // АВЛС - ЖДСФ 43
		{0.0,-2211.7026,-902.8359,47.8051}, // АВЛС - ЖДСФ 44
		{0.0,-2208.1526,-749.1548,63.3719}, // АВЛС - ЖДСФ 45
		{0.0,-2184.7329,-532.8647,48.2160}, // АВЛС - ЖДСФ 46
		{0.0,-2241.3594,-388.0588,50.9692}, // АВЛС - ЖДСФ 47
		{0.0,-2251.6299,-201.7406,35.3341}, // АВЛС - ЖДСФ 48
		{0.0,-2250.2859,155.8972,35.2729}, // АВЛС - ЖДСФ 49
		{0.0,-2290.1865,402.6272,35.1054}, // АВЛС - ЖДСФ 50
		{1.0,-2358.1506,484.3576,30.8095}, // АВЛС - ЖДСФ 51 ОСТ БАНК СФ
		{0.0,-2358.1506,484.3576,30.8095}, // АВЛС - ЖДСФ 51 ОСТ БАНК СФ
		{0.0,-2365.1399,493.5286,30.4416}, // АВЛС - ЖДСФ 52
		{0.0,-2295.8711,506.8802,34.9690}, // АВЛС - ЖДСФ 53
		{0.0,-2084.5737,501.9756,35.1164}, // АВЛС - ЖДСФ 54
		{0.0,-2025.5344,501.8260,35.1153}, // АВЛС - ЖДСФ 55
		{1.0,-2011.5411,470.9115,35.1920}, // АВЛС - ЖДСФ 56 ОСТ УНИВЕР
		{0.0,-2011.5411,470.9115,35.1920}, // АВЛС - ЖДСФ 56 ОСТ УНИВЕР
		{0.0,-2007.3442,285.0027,33.8154}, // АВЛС - ЖДСФ 57
		{0.0,-2008.4031,132.7381,27.63981}, // АВЛС - ЖДСФ 58
		{1.0,-1984.6376,154.8171,27.8089}, // АВЛС - ЖДСФ 59 ОСТ ЖДСФ
		{0.0,-1984.6376,154.8171,27.8089}, // АВЛС - ЖДСФ 59 ОСТ ЖДСФ
		{0.0,-1994.0704,181.9314,27.6403}, // АВЛС - ЖДСФ 60
		{0.0,-1998.6086,329.6880,35.1166}, // АВЛС - ЖДСФ 61ф
		{0.0,-1920.7955,339.3335,30.9872}, // АВЛС - ЖДСФ 62
		{0.0,-1867.2281,404.1663,17.1198}, // АВЛС - ЖДСФ 63
		{0.0,-1762.5792,319.6498,7.2834}, // АВЛС - ЖДСФ 64
		{0.0,-1808.4950,105.6276,15.0623}, // АВЛС - ЖДСФ 65
		{0.0,-1800.1647,-182.2119,12.3371}, // АВЛС - ЖДСФ 66
		{0.0,-1802.0424,-282.8228,23.2056}, // АВЛС - ЖДСФ 67
		{0.0,-1820.0985,-568.2142,16.4264}, // АВЛС - ЖДСФ 6
		{0.0,-1769.2061,-583.6187,16.4367}, // АВЛС - ЖДСФ 68
		{0.0,-1615.4719,-796.1270,47.2867}, // АВЛС - ЖДСФ 69
		{0.0,-1235.0642,-777.1043,64.4914}, // АВЛС - ЖДСФ 70
		{0.0,-1012.4896,-443.4344,36.3507}, // АВЛС - ЖДСФ 71
		{0.0,-879.2217,-462.5110,23.2752}, // АВЛС - ЖДСФ 72
		{1.0,-428.8405,-449.6632,17.5722}, // АВЛС - ЖДСФ 73 Рыбалка
		{0.0,-428.8405,-449.6632,17.5722}, // АВЛС - ЖДСФ 73 Рыбалка
		{0.0,-416.2287,-635.3752,11.8140}, // АВЛС - ЖДСФ 74
		{0.0,-356.5605,-764.6705,29.8075}, // АВЛС - ЖДСФ 75
		{0.0,-294.9551,-854.6519,46.2089}, // АВЛС - ЖДСФ 76
		{0.0,-127.4551,-984.8000,26.0111}, // АВЛС - ЖДСФ 77
		{0.0,-152.6284,-1302.5249,2.7958}, // АВЛС - ЖДСФ 78
		{0.0,32.7749,-1536.8119,5.5575}, // АВЛС - ЖДСФ 79
		{0.0,131.6335,-1567.7102,9.9812}, // АВЛС - ЖДСФ 80
		{0.0,351.1815,-1714.8959,6.7842}, // АВЛС - ЖДСФ 81
		{0.0,685.1577,-1759.8953,13.3447}, // АВЛС - ЖДСФ 82
		{0.0,1043.8145,-1844.4503,13.5171}, // АВЛС - ЖДСФ 83
		{0.0,1108.3501,-1854.9894,13.4824}, // АВЛС - ЖДСФ 84
		{0.0,1246.7698,-1855.2886,13.4840}, // АВЛС - ЖДСФ 85
		{1.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,1214.2271,-1841.6237,13.4829}, // Автобус ЛС - яблуневий сад 1
		{0.0,1337.0187,-1858.6047,13.4910}, // Автобус ЛС - яблуневий сад 2
		{0.0,1556.0479,-1874.5721,13.4841}, // Автобус ЛС - яблуневий сад 3
		{0.0,1691.2279,-1830.6217,13.4858}, // Автобус ЛС - яблуневий сад 4
		{0.0,1801.5131,-1834.5245,13.4789}, // Автобус ЛС - яблуневий сад 5
		{0.0,1819.7594,-1875.0637,13.4980}, // Автобус ЛС - яблуневий сад 6
		{1.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7 ОСТ
		{0.0,1777.3118,-1917.5198,13.5080}, // Автобус ЛС - яблуневий сад 7
		{0.0,1804.4498,-1894.3840,13.5065}, // Автобус ЛС - яблуневий сад 8
		{0.0,1855.0417,-1935.1912,13.4802}, // Автобус ЛС - яблуневий сад 9
		{0.0,1944.5377,-1933.8118,13.4847}, // Автобус ЛС - яблуневий сад 10
		{0.0,1959.1832,-2039.9878,13.4835}, // Автобус ЛС - яблуневий сад 11
		{1.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12 ОСТ
		{0.0,2025.6941,-2022.0990,13.6752}, // Автобус ЛС - яблуневий сад 12
		{0.0,1976.0389,-1995.5121,13.6902}, // Автобус ЛС - яблуневий сад 13
		{0.0,1964.3895,-1986.8088,13.4881}, // АВЛС - ЖДЛВ
		{0.0,1964.2737,-1779.0786,13.4838}, // АВЛС - ЖДЛВ
		{0.0,1841.3989,-1749.0479,13.4838}, // АВЛС - ЖДЛВ
		{0.0,1768.5527,-1729.8423,13.4840}, // АВЛС - ЖДЛВ
		{0.0,1571.9257,-1729.1656,13.4838}, // АВЛС - ЖДЛВ
		{1.0,1535.6764,-1674.0948,13.4848}, // АВЛС - ЖДЛВ ОСТ ЛСПД
		{0.0,1535.6764,-1674.0948,13.4848}, // АВЛС - ЖДЛВ ОСТ ЛСПД
		{0.0,1532.4268,-1607.3379,13.4823}, // АВЛС - ЖДЛВ
		{0.0,1419.6753,-1590.2869,13.4705}, // АВЛС - ЖДЛВ
		{0.0,1325.3134,-1571.1428,13.4636}, // АВЛС - ЖДЛВ
		{0.0,1355.1908,-1425.0554,13.4918}, // АВЛС - ЖДЛВ
		{0.0,1307.0311,-1398.9163,13.3520}, // АВЛС - ЖДЛВ
		{0.0,1231.1937,-1397.5558,13.2136}, // АВЛС - ЖДЛВ
		{1.0,1211.2694,-1335.3163,13.5800}, // АВЛС - ЖДЛВ ОСТ Лікарня ЛС
		{0.0,1211.2694,-1335.3163,13.5800}, // АВЛС - ЖДЛВ ОСТ Лікарня ЛС
		{0.0,1218.1603,-1167.0958,23.0242}, // АВЛС - ЖДЛВ
		{0.0,1312.0769,-1147.6741,23.7577}, // АВЛС - ЖДЛВ
		{0.0,1375.0165,-965.0331,33.8391}, // АВЛС - ЖДЛВ
		{0.0,1451.0409,-960.9687,36.1465}, // АВЛС - ЖДЛВ
		{0.0,1541.9932,-993.3146,43.2385}, // АВЛС - ЖДЛВ
		{0.0,1714.9706,-863.3711,58.4345}, // АВЛС - ЖДЛВ
		{0.0,1717.2285,-552.4230,35.8195}, // АВЛС - ЖДЛВ
		{0.0,1678.0281,-243.9397,42.9094}, // АВЛС - ЖДЛВ
		{0.0,1639.5632,-5.3570,36.7284}, // АВЛС - ЖДЛВ
		{0.0,1681.5200,341.1547,30.2688}, // АВЛС - ЖДЛВ
		{0.0,1773.4552,609.8650,21.7300}, // АВЛС - ЖДЛВ
		{0.0,1808.3149,824.0667,10.8020}, // АВЛС - ЖДЛВ
		{0.0,2047.3458,840.9211,6.8250}, // АВЛС - ЖДЛВ
		{0.0,2068.7295,1136.6163,10.7852}, // АВЛС - ЖДЛВ
		{1.0,2076.8447,1395.0903,10.8394}, // АВЛС - ЖДЛВ ОСТ автосалон ЛВ
		{0.0,2076.8447,1395.0903,10.8394}, // АВЛС - ЖДЛВ ОСТ автосалон ЛВ
		{0.0,2150.0464,1880.3892,10.7784}, // АВЛС - ЖДЛВ
		{0.0,2150.0901,2106.5635,10.7764}, // АВЛС - ЖДЛВ
		{1.0,2190.6689,2132.9546,10.7711}, // АВЛС - ЖДЛВ ОСТ Казино
		{0.0,2190.6689,2132.9546,10.7711}, // АВЛС - ЖДЛВ ОСТ Казино
		{0.0,2339.8977,2134.8503,10.7833}, // АВЛС - ЖДЛВ
		{0.0,2494.4424,2134.8115,10.7727}, // АВЛС - ЖДЛВ
		{0.0,2614.4578,2111.2222,10.7726}, // АВЛС - ЖДЛВ
		{0.0,2698.8152,1980.1976,6.8446}, // АВЛС - ЖДЛВ
		{0.0,2706.7600,1654.6088,6.8352}, // АВЛС - ЖДЛВ
		{0.0,2637.7083,1490.6335,10.7568}, // АВЛС - ЖДЛВ
		{0.0,2731.0884,1472.1692,13.6653}, // АВЛС - ЖДЛВ
		{0.0,2808.8750,1471.8922,10.8651}, // АВЛС - ЖДЛВ
		{0.0,2825.0698,1370.6274,10.8506}, // АВЛС - ЖДЛВ
		{0.0,2812.2595,1306.3754,10.8515}, // АВЛС - ЖДЛВ
		{1.0,2838.8772,1278.6033,10.9514}, // АВЛС - ЖДЛВ ОСТ ЖДЛВ
		{0.0,2838.8772,1278.6033,10.9514}, // АВЛС - ЖДЛВ ОСТ ЖДЛВ
		{0.0,2829.7717,1364.4343,10.8502}, // АВЛС - ЖДЛВ
		{0.0,2738.9294,1593.7034,6.8228}, // АВЛС - ЖДЛВ
		{0.0,2721.9519,1612.3257,6.8247}, // АВЛС - ЖДЛВ
		{0.0,2704.9534,1566.8306,6.8366}, // АВЛС - ЖДЛВ
		{0.0,2691.4341,1032.9639,6.8414}, // АВЛС - ЖДЛВ
		{0.0,2452.2925,852.0750,6.8385}, // АВЛС - ЖДЛВ
		{0.0,2263.2485,855.4351,6.8354}, // АВЛС - ЖДЛВ
		{0.0,2008.8618,853.6462,6.8357}, // АВЛС - ЖДЛВ
		{0.0,1817.3739,851.6034,10.7433}, // АВЛС - ЖДЛВ
		{0.0,1785.2819,815.5065,10.9304}, // АВЛС - ЖДЛВ
		{0.0,1726.0603,515.6217,28.6511}, // АВЛС - ЖДЛВ
		{0.0,1620.2179,168.5696,34.6889}, // АВЛС - ЖДЛВ
		{0.0,1661.9821,-242.1901,38.3402}, // АВЛС - ЖДЛВ
		{0.0,1687.5999,-740.8577,51.1203}, // АВЛС - ЖДЛВ
		{0.0,1482.0156,-937.6389,36.5790}, // АВЛС - ЖДЛВ
		{0.0,1383.4220,-938.9413,34.2691}, // АВЛС - ЖДЛВ
		{0.0,1352.5049,-1013.6958,26.7127}, // АВЛС - ЖДЛВ
		{0.0,1345.9933,-1129.7567,23.7602}, // АВЛС - ЖДЛВ
		{0.0,1343.7898,-1314.3254,13.4755}, // АВЛС - ЖДЛВ
		{0.0,1321.3065,-1495.8490,13.4834}, // АВЛС - ЖДЛВ
		{0.0,1295.1565,-1713.8878,13.4843}, // АВЛС - ЖДЛВ
		{0.0,1295.1361,-1817.7592,13.4837}, // АВЛС - ЖДЛВ
		{0.0,1277.6897,-1848.3373,13.4848}, // АВЛС - ЖДЛВ
		{1.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,1228.7788,-1827.2336,13.5090}, // Автобус ЛС - яблуневий сад 59 ОСТ конечная
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,2811.6599,1264.9022,10.8839}, // ЖДЛВ - АВЛС
		{1.0,2839.3447,1293.5128,10.9767}, // ЖДЛВ - АВЛС ОСТ ЖДЛВ
		{0.0,2839.3447,1293.5128,10.9767}, // ЖДЛВ - АВЛС ОСТ ЖДЛВ
		{0.0,2830.0520,1382.6539,10.8852}, // ЖДЛВ - АВЛС
		{0.0,2800.3811,1488.0938,10.7947}, // ЖДЛВ - АВЛС
		{0.0,2730.8894,1769.9720,6.8679}, // ЖДЛВ - АВЛС
		{0.0,2764.8594,2030.2826,8.4789}, // ЖДЛВ - АВЛС
		{0.0,2798.1301,2097.5002,10.7904}, // ЖДЛВ - АВЛС
		{0.0,2677.1587,2115.5266,12.1905}, // ЖДЛВ - АВЛС
		{0.0,2542.9248,2115.5112,10.8049}, // ЖДЛВ - АВЛС
		{0.0,2507.1006,2148.8538,10.8056}, // ЖДЛВ - АВЛС
		{0.0,2354.8066,2151.6348,10.8948}, // ЖДЛВ - АВЛС
		{1.0,2189.1946,2153.8804,10.8769}, // ЖДЛВ - АВЛС ОСТ КАЗИНО ЛВ
		{0.0,2189.1946,2153.8804,10.8769}, // ЖДЛВ - АВЛС ОСТ КАЗИНО ЛВ
		{0.0,2138.1609,2151.6978,10.8052}, // ЖДЛВ - АВЛС
		{1.0,2117.9849,1937.6003,10.8765}, // ЖДЛВ - АВЛС ОСТ Отель ЛВ
		{0.0,2117.9849,1937.6003,10.8765}, // ЖДЛВ - АВЛС ОСТ Отель ЛВ
		{0.0,2105.0200,1822.4395,10.8057}, // ЖДЛВ - АВЛС
		{0.0,2055.6917,1725.1305,10.8069}, // ЖДЛВ - АВЛС
		{0.0,1888.5416,1715.0933,10.8304}, // ЖДЛВ - АВЛС
		{0.0,1669.4302,1715.7327,10.8039}, // ЖДЛВ - АВЛС
		{1.0,1652.5247,1828.5485,10.9016}, // ЖДЛВ - АВЛС ОСТ Лікарня ЛВ
		{0.0,1652.5247,1828.5485,10.9016}, // ЖДЛВ - АВЛС ОСТ Лікарня ЛВ
		{0.0,1649.5107,1858.9519,10.7941}, // ЖДЛВ - АВЛС
		{0.0,1586.0669,1875.8157,10.8031}, // ЖДЛВ - АВЛС
		{0.0,1565.1235,1829.7086,10.8970}, // ЖДЛВ - АВЛС
		{0.0,1605.4042,1710.9758,10.8080}, // ЖДЛВ - АВЛС
		{0.0,1698.8910,1710.9238,10.8060}, // ЖДЛВ - АВЛС
		{0.0,1783.7328,1554.8937,6.8780}, // ЖДЛВ - АВЛС
		{0.0,1784.9916,1213.9532,6.8763}, // ЖДЛВ - АВЛС
		{0.0,1784.5745,926.7280,8.7216}, // ЖДЛВ - АВЛС
		{0.0,1785.0264,814.5547,10.9753}, // ЖДЛВ - АВЛС
		{0.0,1764.0336,650.4240,19.0520}, // ЖДЛВ - АВЛС
		{0.0,1664.1935,341.3025,30.3802}, // ЖДЛВ - АВЛС
		{0.0,1658.0754,-264.2254,38.8548}, // ЖДЛВ - АВЛС
		{0.0,1698.9503,-538.2750,35.2457}, // ЖДЛВ - АВЛС
		{0.0,1676.9587,-774.2608,54.1092}, // ЖДЛВ - АВЛС
		{0.0,1380.7175,-938.5894,34.3202}, // ЖДЛВ - АВЛС
		{0.0,1354.0558,-1021.8506,26.6601}, // ЖДЛВ - АВЛС
		{0.0,1474.8035,-1036.4746,23.7860}, // ЖДЛВ - АВЛС
		{0.0,1574.8267,-1139.8116,23.7458}, // ЖДЛВ - АВЛС
		{0.0,1693.6605,-1163.3075,23.7857}, // ЖДЛВ - АВЛС
		{1.0,1709.3661,-1339.0776,13.5966}, // ЖДЛВ - АВЛС ОСТ БАнк ЛС
		{0.0,1709.3661,-1339.0776,13.5966}, // ЖДЛВ - АВЛС ОСТ БАнк ЛС
		{0.0,1712.4839,-1428.4733,13.5162}, // ЖДЛВ - АВЛС
		{0.0,1471.2365,-1438.9060,13.5161}, // ЖДЛВ - АВЛС
		{0.0,1427.1078,-1603.3900,13.5158}, // ЖДЛВ - АВЛС
		{0.0,1426.9940,-1705.4247,13.5158}, // ЖДЛВ - АВЛС
		{1.0,1493.9652,-1738.9160,13.6800}, // ЖДЛВ - АВЛС ОСТ мерія
		{0.0,1493.9652,-1738.9160,13.6800}, // ЖДЛВ - АВЛС ОСТ мерія
		{0.0,1551.0874,-1735.2466,13.5147}, // ЖДЛВ - АВЛС
		{0.0,1567.7570,-1846.1224,13.5416}, // ЖДЛВ - АВЛС
		{0.0,1436.4189,-1870.3555,13.5197}, // ЖДЛВ - АВЛС
		{0.0,1292.2882,-1849.4534,13.5161},// ЖДЛВ - АВЛС
		{1.0,1228.2168,-1826.2201,13.6270}, // ЖДЛВ - АВЛС ОСТ АВЛС
		{0.0,1228.2168,-1826.2201,13.6270}, // ЖДЛВ - АВЛС ОСТ АВЛС
		{0.0,1216.1584,-1838.8870,13.5187}, // ЖДЛВ - АВЛС
		{0.0,1296.9298,-1854.9777,13.5168}, // ЖДЛВ - АВЛС
		{0.0,1311.9849,-1659.5074,13.5162}, // ЖДЛВ - АВЛС
		{0.0,1358.6890,-1300.9633,13.4257}, // ЖДЛВ - АВЛС
		{0.0,1376.9252,-964.4139,33.8415}, // ЖДЛВ - АВЛС
		{0.0,1477.3091,-969.6825,36.6038}, // ЖДЛВ - АВЛС
		{0.0,1703.4259,-909.2404,53.5434}, // ЖДЛВ - АВЛС
		{0.0,1714.0291,-641.4417,41.4720}, // ЖДЛВ - АВЛС
		{0.0,1682.7441,-331.3966,45.1686}, // ЖДЛВ - АВЛС
		{0.0,1624.7516,122.8967,36.8080}, // ЖДЛВ - АВЛС
		{0.0,1730.0817,475.3436,30.2632}, // ЖДЛВ - АВЛС
		{0.0,1807.5977,801.7347,11.2282}, // ЖДЛВ - АВЛС
		{0.0,2037.1251,833.1800,6.8596}, // ЖДЛВ - АВЛС
		{0.0,2446.5486,832.4109,6.8679}, // ЖДЛВ - АВЛС
		{0.0,2697.4641,990.9603,6.8673}, // ЖДЛВ - АВЛС
		{0.0,2728.5237,1295.2372,6.8678}, // ЖДЛВ - АВЛС
		{0.0,2797.4832,1455.0337,10.7988}, // ЖДЛВ - АВЛС
		{0.0,2825.5657,1371.6364,10.8826}, // ЖДЛВ - АВЛС
		{0.0,2819.3682,1267.0796,10.8893}, // ЖДЛВ - АВЛС
		{1.0,2840.2212,1276.3347,10.9786}, // ЖДЛВ - АВЛС ОСТ ЖДЛВ
		{0.0,2840.2212,1276.3347,10.9786}, // ЖДЛВ - АВЛС ОСТ ЖДЛВ
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},
	{
		{0.0,-1990.0763,193.2773,27.7563}, // ЖДСФ - АВЛС
		{0.0,-2009.9574,142.6636,27.6721}, // ЖДСФ - АВЛС
		{1.0,-1984.6704,146.6337,27.8411}, // ЖДСФ - АВЛС ОСТ ЖДСФ
		{0.0,-1984.6704,146.6337,27.8411}, // ЖДСФ - АВЛС ОСТ ЖДСФ
		{0.0,-2003.1953,229.4114,28.3929}, // ЖДСФ - АВЛС
		{0.0,-2001.5217,426.2427,35.1485}, // ЖДСФ - АВЛС
		{1.0,-2024.8417,508.7587,35.2226}, // ЖДСФ - АВЛС ОСТ Универ
		{0.0,-2024.8417,508.7587,35.2226}, // ЖДСФ - АВЛС ОСТ Универ
		{0.0,-2105.2141,506.6866,35.1489}, // ЖДСФ - АВЛС
		{0.0,-2268.7148,510.0154,35.1490}, // ЖДСФ - АВЛС
		{1.0,-2351.0842,513.4455,29.2837}, // ЖДСФ - АВЛС ОСТ БАнк СФ
		{0.0,-2351.0842,513.4455,29.2837}, // ЖДСФ - АВЛС ОСТ БАнк СФ
		{0.0,-2353.0430,466.1475,31.4117}, // ЖДСФ - АВЛС
		{0.0,-2321.3728,429.8806,34.9647}, // ЖДСФ - АВЛС
		{0.0,-2368.7786,362.2540,35.1489}, // ЖДСФ - АВЛС
		{1.0,-2402.1843,326.4380,35.3161}, // ЖДСФ - АВЛС Ост Отель СФ
		{0.0,-2402.1843,326.4380,35.3161}, // ЖДСФ - АВЛС Ост Отель СФ
		{0.0,-2423.1782,-46.7613,35.3056}, // ЖДСФ - АВЛС
		{0.0,-2386.2158,-71.6138,35.2968}, // ЖДСФ - АВЛС
		{0.0,-2284.5950,-192.5336,35.3054}, // ЖДСФ - АВЛС
		{0.0,-2183.4895,-472.7820,47.9329}, // ЖДСФ - АВЛС
		{0.0,-1905.9290,-583.3749,24.5796}, // ЖДСФ - АВЛС
		{0.0,-1781.9854,-584.0237,16.4509}, // ЖДСФ - АВЛС
		{0.0,-1701.2969,-757.5758,39.2007}, // ЖДСФ - АВЛС
		{0.0,-1451.9558,-823.6375,74.4962}, // ЖДСФ - АВЛС
		{0.0,-1229.0071,-771.9417,64.0624}, // ЖДСФ - АВЛС
		{0.0,-1157.0313,-612.7076,38.2038}, // ЖДСФ - АВЛС
		{0.0,-969.8114,-445.1295,34.8067}, // ЖДСФ - АВЛС
		{0.0,-709.3467,-425.5027,16.7009}, // ЖДСФ - АВЛС
		{1.0,-440.0122,-437.6913,16.7004}, // ЖДСФ - АВЛС ОСТ Рыбалка
		{0.0,-440.0122,-437.6913,16.7004}, // ЖДСФ - АВЛС ОСТ Рыбалка
		{0.0,-413.7339,-645.8948,12.8715}, // ЖДСФ - АВЛС
		{0.0,-357.1746,-770.1766,30.0917}, // ЖДСФ - АВЛС
		{0.0,-317.8934,-794.7083,33.8689}, // ЖДСФ - АВЛС
		{0.0,-296.1505,-856.9515,46.3829}, // ЖДСФ - АВЛС
		{0.0,-147.7730,-970.1813,27.6242}, // ЖДСФ - АВЛС
		{0.0,-69.3727,-884.8249,15.4131}, // ЖДСФ - АВЛС
		{0.0,49.1451,-598.0204,4.7461}, // ЖДСФ - АВЛС
		{0.0,-94.9533,-414.4091,1.2135}, // ЖДСФ - АВЛС
		{0.0,-301.2192,-163.6344,1.2109}, // ЖДСФ - АВЛС
		{0.0,-214.9978,-174.7631,2.2938}, // ЖДСФ - АВЛС
		{0.0,-150.1478,-188.9800,2.0520}, // ЖДСФ - АВЛС
		{0.0,-119.1314,-137.9158,3.2545}, // ЖДСФ - АВЛС
		{1.0,-158.1488,-113.0416,3.2489}, // ЖДСФ - АВЛС ОСТ яблуневий сад
		{0.0,-158.1488,-113.0416,3.2489}, // ЖДСФ - АВЛС ОСТ яблуневий сад
		{0.0,-271.4798,-93.4918,3.0950}, // ЖДСФ - АВЛС
		{0.0,-314.8729,-128.6022,1.2111}, // ЖДСФ - АВЛС
		{0.0,20.8937,-210.1649,1.6201}, // ЖДСФ - АВЛС
		{0.0,284.9167,-215.0063,1.5629}, // ЖДСФ - АВЛС
		{0.0,334.9539,-164.5363,1.3148}, // ЖДСФ - АВЛС
		{0.0,543.6616,-146.0867,37.3337}, // ЖДСФ - АВЛС
		{0.0,904.6948,-177.7319,11.1655}, // ЖДСФ - АВЛС
		{0.0,1158.7584,-177.0398,41.3979}, // ЖДСФ - АВЛС
		{0.0,1237.9901,-308.5961,10.4510}, // ЖДСФ - АВЛС
		{0.0,1232.3737,-544.3182,37.8160}, // ЖДСФ - АВЛС
		{0.0,1156.4321,-923.8820,43.0874}, // ЖДСФ - АВЛС
		{0.0,973.0387,-963.6682,39.5489}, // ЖДСФ - АВЛС
		{0.0,960.1107,-1114.3121,23.8347}, // ЖДСФ - АВЛС
		{0.0,940.6979,-1294.4608,14.2958}, // ЖДСФ - АВЛС
		{0.0,737.5104,-1318.1848,13.5246}, // ЖДСФ - АВЛС
		{0.0,660.8900,-1317.1246,13.5552}, // ЖДСФ - АВЛС
		{0.0,629.4893,-1374.7257,13.6372}, // ЖДСФ - АВЛС
		{1.0,733.4760,-1412.3254,13.6597}, // ЖДСФ - АВЛС ОСТ Автошкола
		{0.0,733.4760,-1412.3254,13.6597}, // ЖДСФ - АВЛС ОСТ Автошкола
		{0.0,968.2913,-1403.1016,13.2832}, // ЖДСФ - АВЛС
		{0.0,1363.2635,-1403.7415,13.5083}, // ЖДСФ - АВЛС
		{0.0,1445.7882,-1444.0598,13.5252}, // ЖДСФ - АВЛС
		{0.0,1427.6233,-1573.8146,13.4912}, // ЖДСФ - АВЛС
		{0.0,1516.8811,-1594.5140,13.5150}, // ЖДСФ - АВЛС
		{0.0,1527.7831,-1701.5503,13.5166}, // ЖДСФ - АВЛС
		{1.0,1495.9943,-1726.6743,13.5070}, // ЖДСФ - АВЛС ОСТ мерія ЛС
		{0.0,1495.9943,-1726.6743,13.5070}, // ЖДСФ - АВЛС ОСТ мерія ЛС
		{0.0,1415.5389,-1729.8356,13.5190}, // ЖДСФ - АВЛС
		{0.0,1387.0298,-1854.5844,13.5189}, // ЖДСФ - АВЛС
		{0.0,1284.4939,-1849.5759,13.5204}, // ЖДСФ - АВЛС
		{1.0,1229.3988,-1826.2620,13.6493}, // ЖДСФ - АВЛС ОСТ АВЛС
		{0.0,1229.3988,-1826.2620,13.6493}, // ЖДСФ - АВЛС ОСТ АВЛС
		{0.0,1214.6980,-1839.8639,13.5158}, // ЖДСФ - АВЛС
		{0.0,1080.9991,-1850.6726,13.5231}, // ЖДСФ - АВЛС
		{0.0,993.9035,-1789.8778,14.1936}, // ЖДСФ - АВЛС
		{0.0,437.2980,-1706.3000,10.2182}, // ЖДСФ - АВЛС
		{0.0,170.3689,-1582.6938,13.1495}, // ЖДСФ - АВЛС
		{0.0,59.0949,-1524.6427,5.1106}, // ЖДСФ - АВЛС
		{0.0,-148.8886,-1379.9684,2.8304}, // ЖДСФ - АВЛС
		{0.0,-87.2297,-1113.2678,1.6921}, // ЖДСФ - АВЛС
		{0.0,-194.1466,-929.8817,35.8891}, // ЖДСФ - АВЛС
		{0.0,-382.6331,-833.9890,47.0683}, // ЖДСФ - АВЛС
		{0.0,-569.3133,-939.5194,59.9852}, // ЖДСФ - АВЛС
		{0.0,-747.7856,-1002.4215,76.8045}, // ЖДСФ - АВЛС
		{0.0,-882.9417,-1102.5907,98.1532}, // ЖДСФ - АВЛС
		{0.0,-991.7566,-1009.1080,94.5069}, // ЖДСФ - АВЛС
		{0.0,-1201.5936,-794.0877,64.7511}, // ЖДСФ - АВЛС
		{0.0,-1438.6663,-817.7955,77.6791}, // ЖДСФ - АВЛС
		{0.0,-1680.7272,-760.0618,41.1703}, // ЖДСФ - АВЛС
		{0.0,-1759.1168,-600.2720,16.3815}, // ЖДСФ - АВЛС
		{0.0,-1804.0962,-574.5425,16.3300}, // ЖДСФ - АВЛС
		{0.0,-1956.4969,-574.8124,24.5895}, // ЖДСФ - АВЛС
		{0.0,-2170.7822,-474.0224,46.2689}, // ЖДСФ - АВЛС
		{0.0,-2254.0413,-240.7402,37.9920}, // ЖДСФ - АВЛС
		{0.0,-2253.0745,-108.7386,35.3116}, // ЖДСФ - АВЛС
		{0.0,-2162.0483,-72.3071,35.3085}, // ЖДСФ - АВЛС
		{0.0,-2027.5092,-72.6452,35.3058}, // ЖДСФ - АВЛС
		{0.0,-2003.8905,22.9682,32.9707}, // ЖДСФ - АВЛС
		{1.0,-1984.5515,146.5591,27.8430}, // ЖДСФ - АВЛС ОСТ ЖДСФ
		{0.0,-1984.5515,146.5591,27.8430}, // ЖДСФ - АВЛС ОСТ ЖДСФ
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	}
};

#define SP_TYPE_NONE 0
#define SP_TYPE_PLAYER 1
#define SP_TYPE_VEHICLE 2

new PlayerText:RECON[MAX_PLAYERS];
new Menu:specmenu;

new gAdmin[MAX_PLAYERS][9],
	gAdminTime[MAX_PLAYERS];
new gDaysOfWeek[][10] = {
	"thursday",
	"friday",
	"saturday",
	"sunday",
	"monday",
	"tuesday",
	"wednesday"
};
#define ADMIN_KICK 0
#define ADMIN_BAN 1
#define ADMIN_MUTE 2
#define ADMIN_PM 3
#define ADMIN_WARN 4
#define ADMIN_JAIL 5

#define LOG_MUTE 0
#define LOG_KICK 1
#define LOG_WARN 2
#define LOG_BAN 3
#define LOG_JAIL 4
#define LOG_CHANGENAME 5
#define LOG_UNBAN 6
#define LOG_BANIP 7
#define LOG_UNBANIP 8
#define LOG_SKICK 9
#define LOG_SBAN 10
#define LOG_UNMUTE 11
#define LOG_UNJAIL 12
#define LOG_UVAL 12
#define LOG_DELACC 13
#define LOG_GUN 14

#define LOGS_INVITE 0
#define LOGS_UNINVITE 1
#define LOGS_RANK 2
#define LOGS_LEAVE 3
#define LOGS_FWARN 4
#define LOGS_FUNWARN 5

#define MAX_VOTES 7
new vote_name[MAX_VOTES][MAX_PLAYER_NAME + 1];
new vote_count[MAX_VOTES]={0,...};

enum sInfo {
	bankID,
	bankNumber,
	bankBalance,
	bankPassword,
	bankOwner[MAX_PLAYER_NAME],
	bankTowner[MAX_PLAYER_NAME]
};
new gBanks[MAX_PLAYERS][sInfo][3],
	score_number[MAX_PLAYERS],
	score_name[MAX_PLAYERS][3][12];


enum dInfo {
    dDialog,
	dQuestion[500],
	dAnswers[300],
	dSuccesQwe
}
new QueInfo[7][dInfo] = {
		{2,"Що робити при виникненні ДТП?",										"Скритись з місця ДТП\nНегайно зупинитись і викликати поліцію\nВикликати співробітників швидкої допомоги\nВикликати таксі",1},
		{2,"Максимальна швидкість в місті?",											"60 км/ч\n90 км/ч\n100 км/ч\n120 км/ч",0},
		{2,"Максимальна швидкість за містом?",											"90 км/ч\n100 км/ч\n110 км/ч\n120 км/ч",2},
		{2,"Зі скільки років можна получити вод.посвітчення?",							"14 років\n16 років\n18 років\n20 років",2},
		{2,"Коли потрібно включати ближнє світло фар?",		 							"В світлий час доби\nВ темний час доби\nНе потрібно включати\nПотрібно включати в любий час доби",3},
		{2,"В якому випадку дозволена зупинка на автомагістралі?",		 				"В любих місцях за межею проїзної частини\nПравої лінії розмітки, позначає край проїжджої частини/nтільки на спец. площадках для стоянки\nЗаборонено",2},
		{2,"Чи повинній бути видні госс. номера автомобіля?",		 						"Не повинні\nПовинні тільки попереду\nПовинні тільки ззаду\nПовинні бути з переду і ззаду",3}
	},
	TestASKMassive[MAX_PLAYERS][7],

	Float:AutoCP[AUTO_CP_COUNT][3] = {
		{755.3670,-1384.6025,13.4884},
		{700.3007,-1398.0461,13.1277},
		{575.5903,-1403.0707,13.9221},
		{437.9193,-1455.8839,30.0043},
		{441.0297,-1567.0763,25.6315},
		{364.6404,-1581.6982,31.5695},
		{286.9628,-1578.0764,32.6093},
		{250.2619,-1553.3973,32.5158},
		{288.9933,-1500.5862,32.3837},
		{249.2024,-1486.8457,24.7952},
		{195.6266,-1519.4504,12.6958},
		{231.2215,-1453.9695,12.9398},
		{542.7179,-1254.8896,16.3298},
		{714.2112,-1115.7946,17.9695},
		{972.1258,-969.4096,39.0140},
		{939.3583,-947.4601,39.8580},
		{850.5970,-949.2670,47.8565},
		{866.3403,-906.7839,62.9575},
		{839.4601,-878.0489,67.6076},
		{853.7355,-870.9977,73.9505},
		{1004.3528,-798.1430,100.3358},
		{1239.5371,-738.2597,95.3458},
		{1455.6936,-741.6370,94.2632},
		{1513.4185,-800.0946,73.1712},
		{1487.7499,-868.3635,59.1517},
		{1410.6387,-855.0829,46.3532},
		{1366.7683,-942.9249,33.9291},
		{1355.8163,-1020.7109,26.2858},
		{1270.5109,-1038.1844,31.3581},
		{1260.9176,-1128.5621,23.5209},
		{1153.6888,-1142.0510,23.3979},
		{1067.9299,-1141.0582,23.4345},
		{1055.8682,-1326.5745,13.1243},
		{1055.0371,-1383.4893,13.2430},
		{889.5665,-1398.4459,12.8825},
		{755.1671,-1385.8916,13.4615}
	},
	Float:AutoCPMav[16][3] = {
		{-2237.0500,2268.0081,83.6208},
		{-2375.0461,2113.6812,127.8150},
		{-2578.3135,1876.7322,127.8150},
		{-2775.0762,1720.8237,127.8150},
		{-2774.0469,1437.7941,127.8150},
		{-2508.0786,1122.9218,196.0580},
		{-2354.1763,1014.5866,196.0580},
		{-2025.0238,1001.5494,196.0580},
		{-1797.6589,1070.4943,196.0580},
		{-1709.8640,1288.2534,104.2660},
		{-1666.0533,1514.0822,104.2660},
		{-1760.7709,1795.3632,104.2660},
		{-1842.9213,2034.1228,104.2660},
		{-2057.4817,2263.4072,104.2660},
		{-2178.4324,2308.7937,56.7514},
		{-2226.2112,2326.8320,7.5469}
	},
	Float:AutoCPBoat[17][3] = {
		{-2183.6353,2452.7236,1.5673},
		{-2149.7393,2290.8181,1.5673},
		{-2038.6492,2111.3970,1.5673},
		{-1931.0121,1946.3879,1.5673},
		{-1914.0162,1688.6759,1.5673},
		{-2124.9104,1578.5792,1.5673},
		{-2347.3064,1499.0609,1.5673},
		{-2539.6792,1527.0002,1.5673},
		{-2734.9744,1561.1744,1.5673},
		{-2685.3503,1710.8802,1.5673},
		{-2641.0125,1872.9221,1.5673},
		{-2556.4885,2007.4111,1.5673},
		{-2432.7034,2073.5146,1.5673},
		{-2301.9253,2132.1987,1.5673},
		{-2193.7424,2278.9890,1.5673},
		{-2170.6936,2432.3828,1.5673},
		{-2210.7000,2410.0308,1.5673}
	};
enum SADinfo {
	sad_object[9],
	Text3D:sad_3dtext,
	sad_fermer[24],
	sad_temp,
	sad_time,
	bool:sad_use
};
new sad_area[119],
	SI[119][SADinfo],
	Float:sad_objects[119][6] = {
		{ -226.486404, 93.764694, -0.948091, -0.000003, 0.000006, -19.899995 },
		{ -216.287322, 89.569213, -0.948091, -0.000006, 0.000013, -19.899990 },
		{ -206.333007, 85.554542, -0.948091, -0.000006, 0.000013, -19.899990 },
		{ -196.133911, 81.359062, -0.948091, -0.000009, 0.000020, -19.899990 },
		{ -185.723388, 78.033241, -0.948091, -0.000009, 0.000020, -19.899990 },
		{ -175.524307, 73.837753, -0.948091, -0.000012, 0.000027, -19.899990 },
		{ -164.655883, 70.929939, -0.948090, -0.000012, 0.000027, -19.899990 },
		{ -154.456802, 66.734458, -0.948090, -0.000015, 0.000034, -19.899990 },
		{ -143.513366, 63.020080, -0.948090, -0.000015, 0.000034, -19.899990 },
		{ -133.314285, 58.824600, -0.948090, -0.000018, 0.000041, -19.899990 },
		{ -229.546340, 80.324729, -0.948090, -0.000005, 0.000014, -19.899995 },
		{ -219.347259, 76.129249, -0.948090, -0.000008, 0.000021, -19.899988 },
		{ -209.392944, 72.114578, -0.948090, -0.000008, 0.000021, -19.899988 },
		{ -199.193847, 67.919097, -0.948090, -0.000012, 0.000028, -19.899988 },
		{ -188.783325, 64.593276, -0.948090, -0.000012, 0.000028, -19.899988 },
		{ -178.584243, 60.397789, -0.948090, -0.000015, 0.000034, -19.899988 },
		{ -167.715820, 57.489974, -0.948090, -0.000015, 0.000034, -19.899988 },
		{ -157.516738, 53.294494, -0.948090, -0.000018, 0.000041, -19.899988 },
		{ -146.573303, 49.580116, -0.948090, -0.000018, 0.000041, -19.899988 },
		{ -136.374221, 45.384635, -0.948090, -0.000021, 0.000048, -19.899988 },
		{ -233.266418, 66.574691, -0.948090, -0.000005, 0.000014, -19.899995 },
		{ -223.067337, 62.379207, -0.948090, -0.000008, 0.000021, -19.899988 },
		{ -213.113021, 58.364536, -0.948090, -0.000008, 0.000021, -19.899988 },
		{ -202.913925, 54.169055, -0.948090, -0.000012, 0.000028, -19.899988 },
		{ -192.503402, 50.843235, -0.948090, -0.000012, 0.000028, -19.899988 },
		{ -182.304321, 46.647747, -0.948090, -0.000015, 0.000034, -19.899988 },
		{ -171.435897, 43.739933, -0.948090, -0.000015, 0.000034, -19.899988 },
		{ -161.236816, 39.544452, -0.948090, -0.000018, 0.000041, -19.899988 },
		{ -150.293380, 35.830074, -0.948090, -0.000018, 0.000041, -19.899988 },
		{ -140.094299, 31.634593, -0.948090, -0.000021, 0.000048, -19.899988 },
		{ -236.326354, 53.134723, -0.948090, -0.000008, 0.000021, -19.899995 },
		{ -226.127273, 48.939243, -0.948090, -0.000011, 0.000028, -19.899988 },
		{ -216.172958, 44.924571, -0.948090, -0.000011, 0.000028, -19.899988 },
		{ -205.973861, 40.729091, -0.948090, -0.000014, 0.000035, -19.899988 },
		{ -195.563339, 37.403270, -0.948090, -0.000014, 0.000035, -19.899988 },
		{ -185.364257, 33.207782, -0.948090, -0.000017, 0.000042, -19.899988 },
		{ -174.495834, 30.299968, -0.948090, -0.000017, 0.000042, -19.899988 },
		{ -164.296752, 26.104488, -0.948090, -0.000021, 0.000049, -19.899988 },
		{ -153.353317, 22.390110, -0.948090, -0.000021, 0.000049, -19.899988 },
		{ -143.154235, 18.194629, -0.948090, -0.000024, 0.000056, -19.899988 },
		{ -242.345413, 43.200313, -0.948090, -0.000010, 0.000028, -23.600004 },
		{ -232.438323, 38.355407, -0.948090, -0.000014, 0.000035, -23.600000 },
		{ -222.763839, 33.706722, -0.948090, -0.000014, 0.000035, -23.600000 },
		{ -212.856750, 28.861812, -0.948090, -0.000017, 0.000042, -23.600000 },
		{ -202.682540, 24.871109, -0.948090, -0.000017, 0.000042, -23.600000 },
		{ -192.775466, 20.026193, -0.948090, -0.000020, 0.000049, -23.600000 },
		{ -182.117355, 16.423072, -0.948090, -0.000020, 0.000049, -23.600000 },
		{ -172.210266, 11.578165, -0.948090, -0.000023, 0.000056, -23.600000 },
		{ -161.529342, 7.165320, -0.948090, -0.000023, 0.000056, -23.600000 },
		{ -151.622253, 2.320413, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -246.266281, 29.985826, -0.948090, -0.000013, 0.000035, -23.600004 },
		{ -236.359207, 25.140918, -0.948090, -0.000016, 0.000042, -23.600000 },
		{ -226.684707, 20.492237, -0.948090, -0.000016, 0.000042, -23.600000 },
		{ -216.777618, 15.647329, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -206.603424, 11.656623, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -196.696334, 6.811707, -0.948090, -0.000023, 0.000056, -23.600000 },
		{ -186.038223, 3.208588, -0.948090, -0.000023, 0.000056, -23.600000 },
		{ -176.131134, -1.636319, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -165.450210, -6.049163, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -155.543136, -10.894070, -0.948090, -0.000029, 0.000070, -23.600000 },
		{ -250.865936, 16.504512, -0.948090, -0.000013, 0.000035, -23.600004 },
		{ -240.958847, 11.659602, -0.948090, -0.000016, 0.000042, -23.600000 },
		{ -231.284362, 7.010922, -0.948090, -0.000016, 0.000042, -23.600000 },
		{ -221.377273, 2.166013, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -211.203063, -1.824692, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -201.295989, -6.669608, -0.948090, -0.000023, 0.000056, -23.600000 },
		{ -190.637878, -10.272727, -0.948090, -0.000023, 0.000056, -23.600000 },
		{ -180.730789, -15.117635, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -170.049865, -19.530479, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -160.142791, -24.375387, -0.948090, -0.000029, 0.000070, -23.600000 },
		{ -254.786804, 3.290025, -0.948090, -0.000016, 0.000042, -23.600004 },
		{ -244.879730, -1.554882, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -235.205245, -6.203562, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -225.298141, -11.048471, -0.948090, -0.000022, 0.000056, -23.600000 },
		{ -215.123947, -15.039176, -0.948090, -0.000022, 0.000056, -23.600000 },
		{ -205.216857, -19.884092, -0.948090, -0.000025, 0.000063, -23.600000 },
		{ -194.558746, -23.487211, -0.948090, -0.000025, 0.000063, -23.600000 },
		{ -184.651657, -28.332120, -0.948090, -0.000028, 0.000070, -23.600000 },
		{ -173.970733, -32.744968, -0.948090, -0.000028, 0.000070, -23.600000 },
		{ -164.063659, -37.589874, -0.948090, -0.000031, 0.000077, -23.600000 },
		{ -258.745483, -6.849704, -0.948090, -0.000014, 0.000035, -23.600004 },
		{ -248.838378, -11.694610, -0.948090, -0.000017, 0.000042, -23.600000 },
		{ -239.163894, -16.343296, -0.948090, -0.000017, 0.000042, -23.600000 },
		{ -229.256805, -21.188205, -0.948090, -0.000020, 0.000049, -23.600000 },
		{ -219.082595, -25.178909, -0.948090, -0.000020, 0.000049, -23.600000 },
		{ -209.175521, -30.023824, -0.948090, -0.000023, 0.000056, -23.600000 },
		{ -198.517410, -33.626945, -0.948090, -0.000023, 0.000056, -23.600000 },
		{ -188.610321, -38.471855, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -177.929397, -42.884696, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -168.022308, -47.729606, -0.948090, -0.000029, 0.000070, -23.600000 },
		{ -262.666320, -20.064191, -0.948090, -0.000016, 0.000042, -23.600004 },
		{ -252.759262, -24.909099, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -243.084762, -29.557781, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -233.177673, -34.402687, -0.948090, -0.000022, 0.000056, -23.600000 },
		{ -223.003479, -38.393394, -0.948090, -0.000022, 0.000056, -23.600000 },
		{ -213.096389, -43.238311, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -202.438278, -46.841430, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -192.531188, -51.686336, -0.948090, -0.000029, 0.000070, -23.600000 },
		{ -181.850265, -56.099182, -0.948090, -0.000029, 0.000070, -23.600000 },
		{ -171.943191, -60.944087, -0.948090, -0.000032, 0.000077, -23.600000 },
		{ -267.265991, -33.545505, -0.948090, -0.000016, 0.000042, -23.600004 },
		{ -257.358886, -38.390415, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -247.684417, -43.039096, -0.948090, -0.000019, 0.000049, -23.600000 },
		{ -237.777328, -47.884006, -0.948090, -0.000022, 0.000056, -23.600000 },
		{ -227.603118, -51.874710, -0.948090, -0.000022, 0.000056, -23.600000 },
		{ -217.696044, -56.719627, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -207.037933, -60.322746, -0.948090, -0.000026, 0.000063, -23.600000 },
		{ -197.130844, -65.167655, -0.948090, -0.000029, 0.000070, -23.600000 },
		{ -186.449920, -69.580497, -0.948090, -0.000029, 0.000070, -23.600000 },
		{ -176.542846, -74.425407, -0.948090, -0.000032, 0.000077, -23.600000 },
		{ -271.186859, -46.759994, -0.948090, -0.000019, 0.000049, -23.600004 },
		{ -261.279785, -51.604900, -0.948090, -0.000022, 0.000056, -23.600000 },
		{ -251.605300, -56.253582, -0.948090, -0.000022, 0.000056, -23.600000 },
		{ -241.698196, -61.098487, -0.948090, -0.000025, 0.000063, -23.600000 },
		{ -231.524002, -65.089195, -0.948090, -0.000025, 0.000063, -23.600000 },
		{ -221.616912, -69.934112, -0.948090, -0.000028, 0.000070, -23.600000 },
		{ -210.958801, -73.537231, -0.948090, -0.000028, 0.000070, -23.600000 },
		{ -201.051712, -78.382141, -0.948090, -0.000031, 0.000077, -23.600000 },
		{ -190.370788, -82.794982, -0.948090, -0.000031, 0.000077, -23.600000 }
	},
	Float:sad_stairs[119][6] = {
		{ -226.001708, 93.735031, 2.619222, 0.000007, 0.000001, 84.199958 },
		{ -215.802612, 89.539550, 2.619222, 0.000015, 0.000002, 84.199935 },
		{ -205.848312, 85.524879, 2.619222, 0.000015, 0.000002, 84.199935 },
		{ -195.649230, 81.329399, 2.619222, 0.000022, 0.000004, 84.199913 },
		{ -185.238677, 78.003570, 2.619222, 0.000022, 0.000004, 84.199913 },
		{ -175.039596, 73.808090, 2.619222, 0.000030, 0.000005, 84.199890 },
		{ -164.171188, 70.900276, 2.619222, 0.000030, 0.000005, 84.199890 },
		{ -153.972106, 66.704788, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -143.028671, 62.990413, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -132.829589, 58.794933, 2.619222, 0.000045, 0.000008, 84.199844 },
		{ -229.061645, 80.295066, 2.619222, 0.000015, 0.000002, 84.199935 },
		{ -218.862548, 76.099586, 2.619222, 0.000022, 0.000003, 84.199913 },
		{ -208.908248, 72.084915, 2.619222, 0.000022, 0.000003, 84.199913 },
		{ -198.709167, 67.889434, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -188.298614, 64.563606, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -178.099533, 60.368125, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -167.231124, 57.460311, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -157.032043, 53.264823, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -146.088607, 49.550449, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -135.889526, 45.354969, 2.619222, 0.000052, 0.000009, 84.199821 },
		{ -232.781723, 66.545028, 2.619222, 0.000015, 0.000002, 84.199935 },
		{ -222.582626, 62.349544, 2.619222, 0.000022, 0.000003, 84.199913 },
		{ -212.628326, 58.334873, 2.619222, 0.000022, 0.000003, 84.199913 },
		{ -202.429244, 54.139392, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -192.018692, 50.813564, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -181.819610, 46.618083, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -170.951202, 43.710269, 2.619222, 0.000037, 0.000006, 84.199867 },
		{ -160.752120, 39.514781, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -149.808685, 35.800407, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -139.609603, 31.604927, 2.619222, 0.000052, 0.000009, 84.199821 },
		{ -235.841659, 53.105060, 2.619222, 0.000022, 0.000002, 84.199913 },
		{ -225.642562, 48.909580, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -215.688262, 44.894908, 2.619222, 0.000030, 0.000004, 84.199890 },
		{ -205.489181, 40.699428, 2.619222, 0.000037, 0.000005, 84.199867 },
		{ -195.078628, 37.373600, 2.619222, 0.000037, 0.000005, 84.199867 },
		{ -184.879547, 33.178119, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -174.011138, 30.270305, 2.619222, 0.000045, 0.000007, 84.199844 },
		{ -163.812057, 26.074817, 2.619222, 0.000052, 0.000008, 84.199821 },
		{ -152.868621, 22.360443, 2.619222, 0.000052, 0.000008, 84.199821 },
		{ -142.669540, 18.164962, 2.619222, 0.000060, 0.000009, 84.199798 },
		{ -241.863632, 43.139434, 2.619222, 0.000030, 0.000003, 80.499885 },
		{ -231.956542, 38.294525, 2.619222, 0.000037, 0.000005, 80.499855 },
		{ -222.282073, 33.645843, 2.619222, 0.000037, 0.000005, 80.499855 },
		{ -212.374984, 28.800935, 2.619222, 0.000045, 0.000006, 80.499839 },
		{ -202.200759, 24.810218, 2.619222, 0.000045, 0.000006, 80.499839 },
		{ -192.293685, 19.965311, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -181.635574, 16.362194, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -171.728500, 11.517277, 2.619222, 0.000060, 0.000009, 80.499786 },
		{ -161.047561, 7.104437, 2.619222, 0.000060, 0.000009, 80.499786 },
		{ -151.140487, 2.259530, 2.619222, 0.000067, 0.000010, 80.499763 },
		{ -245.784515, 29.924945, 2.619222, 0.000037, 0.000004, 80.499855 },
		{ -235.877410, 25.080036, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -226.202941, 20.431358, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -216.295852, 15.586450, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -206.121627, 11.595735, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -196.214569, 6.750826, 2.619222, 0.000060, 0.000008, 80.499786 },
		{ -185.556442, 3.147708, 2.619222, 0.000060, 0.000008, 80.499786 },
		{ -175.649368, -1.697207, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -164.968444, -6.110047, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -155.061355, -10.954955, 2.619222, 0.000075, 0.000011, 80.499748 },
		{ -250.384155, 16.443634, 2.619222, 0.000037, 0.000004, 80.499855 },
		{ -240.477066, 11.598720, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -230.802597, 6.950041, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -220.895507, 2.105134, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -210.721282, -1.885581, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -200.814193, -6.730488, 2.619222, 0.000060, 0.000008, 80.499786 },
		{ -190.156097, -10.333607, 2.619222, 0.000060, 0.000008, 80.499786 },
		{ -180.249023, -15.178524, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -169.568084, -19.591361, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -159.661010, -24.436271, 2.619222, 0.000075, 0.000011, 80.499748 },
		{ -254.305038, 3.229145, 2.619222, 0.000045, 0.000005, 80.499839 },
		{ -244.397933, -1.615763, 2.619222, 0.000052, 0.000006, 80.499816 },
		{ -234.723464, -6.264442, 2.619222, 0.000052, 0.000006, 80.499816 },
		{ -224.816375, -11.109350, 2.619222, 0.000060, 0.000007, 80.499786 },
		{ -214.642150, -15.100067, 2.619222, 0.000060, 0.000007, 80.499786 },
		{ -204.735076, -19.944974, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -194.076965, -23.548091, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -184.169891, -28.393007, 2.619222, 0.000075, 0.000010, 80.499748 },
		{ -173.488967, -32.805850, 2.619222, 0.000075, 0.000010, 80.499748 },
		{ -163.581878, -37.650753, 2.619222, 0.000082, 0.000012, 80.499725 },
		{ -258.263671, -6.910583, 2.619222, 0.000037, 0.000004, 80.499862 },
		{ -248.356597, -11.755493, 2.619222, 0.000045, 0.000006, 80.499832 },
		{ -238.682128, -16.404174, 2.619222, 0.000045, 0.000006, 80.499832 },
		{ -228.775039, -21.249082, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -218.600814, -25.239799, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -208.693740, -30.084707, 2.619222, 0.000060, 0.000009, 80.499794 },
		{ -198.035629, -33.687824, 2.619222, 0.000060, 0.000009, 80.499794 },
		{ -188.128555, -38.532741, 2.619222, 0.000067, 0.000010, 80.499763 },
		{ -177.447616, -42.945579, 2.619222, 0.000067, 0.000010, 80.499763 },
		{ -167.540542, -47.790489, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -262.184570, -20.125072, 2.619222, 0.000045, 0.000005, 80.499832 },
		{ -252.277465, -24.969982, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -242.602996, -29.618659, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -232.695907, -34.463569, 2.619222, 0.000060, 0.000008, 80.499794 },
		{ -222.521682, -38.454284, 2.619222, 0.000060, 0.000008, 80.499794 },
		{ -212.614624, -43.299190, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -201.956497, -46.902309, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -192.049423, -51.747226, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -181.368499, -56.160064, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -171.461410, -61.004974, 2.619222, 0.000082, 0.000012, 80.499725 },
		{ -266.784210, -33.606384, 2.619222, 0.000045, 0.000005, 80.499832 },
		{ -256.877136, -38.451297, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -247.202651, -43.099975, 2.619222, 0.000052, 0.000007, 80.499816 },
		{ -237.295562, -47.944885, 2.619222, 0.000060, 0.000008, 80.499794 },
		{ -227.121337, -51.935600, 2.619222, 0.000060, 0.000008, 80.499794 },
		{ -217.214248, -56.780506, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -206.556152, -60.383625, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -196.649078, -65.228546, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -185.968139, -69.641380, 2.619222, 0.000075, 0.000011, 80.499740 },
		{ -176.061065, -74.486289, 2.619222, 0.000082, 0.000012, 80.499725 },
		{ -270.705078, -46.820873, 2.619222, 0.000052, 0.000006, 80.499816 },
		{ -260.797973, -51.665782, 2.619222, 0.000060, 0.000007, 80.499794 },
		{ -251.123519, -56.314460, 2.619222, 0.000060, 0.000007, 80.499794 },
		{ -241.216430, -61.159370, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -231.042205, -65.150085, 2.619222, 0.000067, 0.000009, 80.499763 },
		{ -221.135131, -69.994995, 2.619222, 0.000075, 0.000010, 80.499740 },
		{ -210.477020, -73.598114, 2.619222, 0.000075, 0.000010, 80.499740 },
		{ -200.569946, -78.443023, 2.619222, 0.000082, 0.000012, 80.499725 },
		{ -189.889022, -82.855865, 2.619222, 0.000082, 0.000012, 80.499725 }
	};

enum s_apple {
	a_ID,
	Float:a_coordsX,
	Float:a_coordsY,
	Float:a_coordsZ,
	Float:a_coordsAX,
	Float:a_coordsAY,
	Float:a_coordsAZ
}
new sad_apple[833][s_apple] = {
	{ 0, -225.258819, 92.767127, 5.712926, 0.000000, 0.000007, 4.599997 },
	{ 0, -226.205520, 91.567390, 7.042929, 0.000000, 0.000007, 4.599997 },
	{ 0, -227.997024, 92.771568, 5.900618, 0.000000, 0.000007, 4.599997 },
	{ 0, -228.189788, 94.717208, 6.156506, 0.000000, 0.000007, 4.599997 },
	{ 0, -225.719497, 91.557861, 7.075955, 0.000000, 0.000007, 4.599997 },
	{ 0, -225.961410, 96.371261, 7.306849, 0.000000, 0.000007, 4.599997 },
	{ 0, -227.136718, 94.948760, 5.651482, 0.000000, 0.000007, 4.599997 },
	{ 1,  -215.059738, 88.571647, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 1,  -216.006439, 87.371910, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 1,  -217.797943, 88.576080, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 1,  -217.990692, 90.521728, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 1,  -215.520401, 87.362380, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 1,  -215.762329, 92.175781, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 1,  -216.937637, 90.753280, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.105422, 84.556983, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 2,  -206.052108, 83.357238, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 2,  -207.843627, 84.561416, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 2,  -208.036392, 86.507064, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.566085, 83.347724, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 2,  -205.808013, 88.161117, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 2,  -206.983322, 86.738624, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 3,  -194.906341, 80.361503, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.853027, 79.161758, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 3,  -197.644546, 80.365936, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 3,  -197.837310, 82.311584, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.367004, 79.152236, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 3,  -195.608932, 83.965629, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 3,  -196.784240, 82.543136, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 4,  -184.495788, 77.035675, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 4,  -185.442504, 75.835937, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 4,  -187.234008, 77.040107, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 4,  -187.426757, 78.985763, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 4,  -184.956466, 75.826416, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 4,  -185.198394, 80.639808, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 4,  -186.373703, 79.217315, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 5,  -174.296707, 72.840194, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 5,  -175.243423, 71.640457, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 5,  -177.034927, 72.844627, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 5,  -177.227676, 74.790275, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 5,  -174.757385, 71.630935, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 5,  -174.999298, 76.444328, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 5,  -176.174606, 75.021835, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 6,  -163.428298, 69.932373, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 6,  -164.375000, 68.732635, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 6,  -166.166503, 69.936805, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 6,  -166.359268, 71.882461, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 6,  -163.888961, 68.723114, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 6,  -164.130889, 73.536506, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 6,  -165.306198, 72.114013, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 7,  -153.229217, 65.736885, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 7,  -154.175903, 64.537147, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 7,  -155.967422, 65.741325, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 7,  -156.160186, 67.686981, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 7,  -153.689880, 64.527633, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 7,  -153.931808, 69.341026, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 7,  -155.107116, 67.918533, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.285766, 62.022514, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 8,  -143.232482, 60.822776, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 8,  -145.023986, 62.026950, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 8,  -145.216751, 63.972595, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.746444, 60.813255, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 8,  -142.988388, 65.626647, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 8,  -144.163681, 64.204154, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 9,  -132.086685, 57.827033, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 9,  -133.033401, 56.627296, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 9,  -134.824905, 57.831470, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 9,  -135.017669, 59.777114, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 9,  -132.547363, 56.617767, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 9,  -132.789291, 61.431163, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 9,  -133.964599, 60.008666, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 10,  -228.318756, 79.327163, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 10,  -229.265457, 78.127426, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 10,  -231.056961, 79.331604, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 10,  -231.249725, 81.277244, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 10,  -228.779434, 78.117897, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 10,  -229.021347, 82.931297, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 10,  -230.196655, 81.508796, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 11,  -218.119674, 75.131683, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 11,  -219.066375, 73.931945, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 11,  -220.857879, 75.136116, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 11,  -221.050628, 77.081764, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 11,  -218.580337, 73.922416, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 11,  -218.822265, 78.735816, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 11,  -219.997573, 77.313316, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.165359, 71.117019, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 12,  -209.112045, 69.917274, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 12,  -210.903564, 71.121452, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 12,  -211.096328, 73.067100, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.626022, 69.907760, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 12,  -208.867950, 74.721153, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 12,  -210.043258, 73.298660, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 13,  -197.966278, 66.921539, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.912963, 65.721794, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 13,  -200.704483, 66.925971, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 13,  -200.897247, 68.871620, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.426940, 65.712272, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 13,  -198.668869, 70.525665, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 13,  -199.844177, 69.103172, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 14,  -187.555725, 63.595710, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.502441, 62.395973, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 14,  -190.293945, 63.600143, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 14,  -190.486694, 65.545799, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.016403, 62.386451, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 14,  -188.258331, 67.199844, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 14,  -189.433639, 65.777351, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 15,  -177.356643, 59.400230, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 15,  -178.303359, 58.200492, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 15,  -180.094863, 59.404663, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 15,  -180.287612, 61.350311, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 15,  -177.817321, 58.190971, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 15,  -178.059234, 63.004364, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 15,  -179.234542, 61.581871, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 16,  -166.488235, 56.492408, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 16,  -167.434936, 55.292671, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 16,  -169.226440, 56.496841, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 16,  -169.419204, 58.442497, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 16,  -166.948898, 55.283149, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 16,  -167.190826, 60.096542, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 16,  -168.366134, 58.674049, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 17,  -156.289154, 52.296920, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 17,  -157.235839, 51.097183, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 17,  -159.027359, 52.301361, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 17,  -159.220123, 54.247016, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 17,  -156.749816, 51.087669, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 17,  -156.991744, 55.901062, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 17,  -158.167053, 54.478569, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 18,  -145.345703, 48.582550, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 18,  -146.292419, 47.382812, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 18,  -148.083923, 48.586986, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 18,  -148.276687, 50.532630, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 18,  -145.806381, 47.373291, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 18,  -146.048324, 52.186683, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 18,  -147.223617, 50.764190, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 19,  -135.146621, 44.387069, 5.712926, 0.000000, 0.000053, 4.599997 },
	{ 19,  -136.093338, 43.187332, 7.042929, 0.000000, 0.000053, 4.599997 },
	{ 19,  -137.884841, 44.391506, 5.900618, 0.000000, 0.000053, 4.599997 },
	{ 19,  -138.077606, 46.337150, 6.156506, 0.000000, 0.000053, 4.599997 },
	{ 19,  -135.607299, 43.177803, 7.075955, 0.000000, 0.000053, 4.599997 },
	{ 19,  -135.849227, 47.991199, 7.306849, 0.000000, 0.000053, 4.599997 },
	{ 19,  -137.024536, 46.568702, 5.651482, 0.000000, 0.000053, 4.599997 },
	{ 20,  -232.038833, 65.577117, 5.712926, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.985534, 64.377380, 7.042929, 0.000000, 0.000015, 4.599997 },
	{ 20,  -234.777038, 65.581558, 5.900618, 0.000000, 0.000015, 4.599997 },
	{ 20,  -234.969802, 67.527206, 6.156506, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.499511, 64.367858, 7.075955, 0.000000, 0.000015, 4.599997 },
	{ 20,  -232.741424, 69.181259, 7.306849, 0.000000, 0.000015, 4.599997 },
	{ 20,  -233.916732, 67.758758, 5.651482, 0.000000, 0.000015, 4.599997 },
	{ 21,  -221.839752, 61.381641, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.786453, 60.181903, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 21,  -224.577957, 61.386074, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 21,  -224.770706, 63.331722, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.300415, 60.172374, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 21,  -222.542343, 64.985778, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 21,  -223.717651, 63.563274, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 22,  -211.885437, 57.366977, 5.712926, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.832122, 56.167232, 7.042929, 0.000000, 0.000022, 4.599997 },
	{ 22,  -214.623641, 57.371410, 5.900618, 0.000000, 0.000022, 4.599997 },
	{ 22,  -214.816406, 59.317058, 6.156506, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.346099, 56.157718, 7.075955, 0.000000, 0.000022, 4.599997 },
	{ 22,  -212.588027, 60.971111, 7.306849, 0.000000, 0.000022, 4.599997 },
	{ 22,  -213.763336, 59.548618, 5.651482, 0.000000, 0.000022, 4.599997 },
	{ 23,  -201.686355, 53.171497, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.633041, 51.971752, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 23,  -204.424560, 53.175930, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 23,  -204.617324, 55.121578, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.147018, 51.962230, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 23,  -202.388946, 56.775623, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 23,  -203.564254, 55.353130, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.275802, 49.845668, 5.712926, 0.000000, 0.000030, 4.599997 },
	{ 24,  -192.222518, 48.645931, 7.042929, 0.000000, 0.000030, 4.599997 },
	{ 24,  -194.014022, 49.850101, 5.900618, 0.000000, 0.000030, 4.599997 },
	{ 24,  -194.206771, 51.795757, 6.156506, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.736480, 48.636409, 7.075955, 0.000000, 0.000030, 4.599997 },
	{ 24,  -191.978408, 53.449802, 7.306849, 0.000000, 0.000030, 4.599997 },
	{ 24,  -193.153717, 52.027309, 5.651482, 0.000000, 0.000030, 4.599997 },
	{ 25,  -181.076721, 45.650188, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 25,  -182.023437, 44.450450, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 25,  -183.814941, 45.654621, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 25,  -184.007690, 47.600269, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 25,  -181.537399, 44.440929, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 25,  -181.779312, 49.254322, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 25,  -182.954620, 47.831829, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.208312, 42.742366, 5.712926, 0.000000, 0.000038, 4.599997 },
	{ 26,  -171.155014, 41.542629, 7.042929, 0.000000, 0.000038, 4.599997 },
	{ 26,  -172.946517, 42.746799, 5.900618, 0.000000, 0.000038, 4.599997 },
	{ 26,  -173.139282, 44.692455, 6.156506, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.668975, 41.533107, 7.075955, 0.000000, 0.000038, 4.599997 },
	{ 26,  -170.910903, 46.346500, 7.306849, 0.000000, 0.000038, 4.599997 },
	{ 26,  -172.086212, 44.924007, 5.651482, 0.000000, 0.000038, 4.599997 },
	{ 27,  -160.009231, 38.546878, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.955917, 37.347141, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 27,  -162.747436, 38.551319, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 27,  -162.940200, 40.496974, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.469894, 37.337627, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 27,  -160.711822, 42.151020, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 27,  -161.887130, 40.728527, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.065780, 34.832508, 5.712926, 0.000000, 0.000045, 4.599997 },
	{ 28,  -150.012496, 33.632770, 7.042929, 0.000000, 0.000045, 4.599997 },
	{ 28,  -151.804000, 34.836944, 5.900618, 0.000000, 0.000045, 4.599997 },
	{ 28,  -151.996765, 36.782588, 6.156506, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.526458, 33.623249, 7.075955, 0.000000, 0.000045, 4.599997 },
	{ 28,  -149.768402, 38.436641, 7.306849, 0.000000, 0.000045, 4.599997 },
	{ 28,  -150.943695, 37.014148, 5.651482, 0.000000, 0.000045, 4.599997 },
	{ 29,  -138.866699, 30.637027, 5.712926, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.813415, 29.437290, 7.042929, 0.000000, 0.000053, 4.599997 },
	{ 29,  -141.604919, 30.641464, 5.900618, 0.000000, 0.000053, 4.599997 },
	{ 29,  -141.797683, 32.587108, 6.156506, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.327377, 29.427761, 7.075955, 0.000000, 0.000053, 4.599997 },
	{ 29,  -139.569305, 34.241157, 7.306849, 0.000000, 0.000053, 4.599997 },
	{ 29,  -140.744613, 32.818660, 5.651482, 0.000000, 0.000053, 4.599997 },
	{ 30,  -235.098770, 52.137157, 5.712926, 0.000001, 0.000022, 4.599997 },
	{ 30,  -236.045471, 50.937419, 7.042929, 0.000001, 0.000022, 4.599997 },
	{ 30,  -237.836975, 52.141597, 5.900618, 0.000001, 0.000022, 4.599997 },
	{ 30,  -238.029739, 54.087238, 6.156506, 0.000001, 0.000022, 4.599997 },
	{ 30,  -235.559448, 50.927890, 7.075955, 0.000001, 0.000022, 4.599997 },
	{ 30,  -235.801361, 55.741291, 7.306849, 0.000001, 0.000022, 4.599997 },
	{ 30,  -236.976669, 54.318790, 5.651482, 0.000001, 0.000022, 4.599997 },
	{ 31,  -224.899688, 47.941677, 5.712926, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.846389, 46.741939, 7.042929, 0.000001, 0.000030, 4.599997 },
	{ 31,  -227.637893, 47.946109, 5.900618, 0.000001, 0.000030, 4.599997 },
	{ 31,  -227.830642, 49.891757, 6.156506, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.360351, 46.732410, 7.075955, 0.000001, 0.000030, 4.599997 },
	{ 31,  -225.602279, 51.545810, 7.306849, 0.000001, 0.000030, 4.599997 },
	{ 31,  -226.777587, 50.123310, 5.651482, 0.000001, 0.000030, 4.599997 },
	{ 32,  -214.945373, 43.927013, 5.712926, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.892059, 42.727268, 7.042929, 0.000001, 0.000030, 4.599997 },
	{ 32,  -217.683578, 43.931446, 5.900618, 0.000001, 0.000030, 4.599997 },
	{ 32,  -217.876342, 45.877094, 6.156506, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.406036, 42.717754, 7.075955, 0.000001, 0.000030, 4.599997 },
	{ 32,  -215.647964, 47.531147, 7.306849, 0.000001, 0.000030, 4.599997 },
	{ 32,  -216.823272, 46.108654, 5.651482, 0.000001, 0.000030, 4.599997 },
	{ 33,  -204.746292, 39.731533, 5.712926, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.692977, 38.531787, 7.042929, 0.000001, 0.000038, 4.599997 },
	{ 33,  -207.484497, 39.735965, 5.900618, 0.000001, 0.000038, 4.599997 },
	{ 33,  -207.677261, 41.681613, 6.156506, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.206954, 38.522266, 7.075955, 0.000001, 0.000038, 4.599997 },
	{ 33,  -205.448883, 43.335659, 7.306849, 0.000001, 0.000038, 4.599997 },
	{ 33,  -206.624191, 41.913166, 5.651482, 0.000001, 0.000038, 4.599997 },
	{ 34,  -194.335739, 36.405704, 5.712926, 0.000001, 0.000038, 4.599997 },
	{ 34,  -195.282455, 35.205966, 7.042929, 0.000001, 0.000038, 4.599997 },
	{ 34,  -197.073959, 36.410137, 5.900618, 0.000001, 0.000038, 4.599997 },
	{ 34,  -197.266708, 38.355792, 6.156506, 0.000001, 0.000038, 4.599997 },
	{ 34,  -194.796417, 35.196445, 7.075955, 0.000001, 0.000038, 4.599997 },
	{ 34,  -195.038345, 40.009838, 7.306849, 0.000001, 0.000038, 4.599997 },
	{ 34,  -196.213653, 38.587345, 5.651482, 0.000001, 0.000038, 4.599997 },
	{ 35,  -184.136657, 32.210224, 5.712926, 0.000001, 0.000045, 4.599997 },
	{ 35,  -185.083374, 31.010486, 7.042929, 0.000001, 0.000045, 4.599997 },
	{ 35,  -186.874877, 32.214656, 5.900618, 0.000001, 0.000045, 4.599997 },
	{ 35,  -187.067626, 34.160305, 6.156506, 0.000001, 0.000045, 4.599997 },
	{ 35,  -184.597335, 31.000965, 7.075955, 0.000001, 0.000045, 4.599997 },
	{ 35,  -184.839248, 35.814357, 7.306849, 0.000001, 0.000045, 4.599997 },
	{ 35,  -186.014556, 34.391864, 5.651482, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.268249, 29.302402, 5.712926, 0.000001, 0.000045, 4.599997 },
	{ 36,  -174.214950, 28.102664, 7.042929, 0.000001, 0.000045, 4.599997 },
	{ 36,  -176.006454, 29.306835, 5.900618, 0.000001, 0.000045, 4.599997 },
	{ 36,  -176.199218, 31.252490, 6.156506, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.728912, 28.093143, 7.075955, 0.000001, 0.000045, 4.599997 },
	{ 36,  -173.970840, 32.906536, 7.306849, 0.000001, 0.000045, 4.599997 },
	{ 36,  -175.146148, 31.484043, 5.651482, 0.000001, 0.000045, 4.599997 },
	{ 37,  -163.069168, 25.106914, 5.712926, 0.000001, 0.000053, 4.599997 },
	{ 37,  -164.015853, 23.907176, 7.042929, 0.000001, 0.000053, 4.599997 },
	{ 37,  -165.807373, 25.111354, 5.900618, 0.000001, 0.000053, 4.599997 },
	{ 37,  -166.000137, 27.057010, 6.156506, 0.000001, 0.000053, 4.599997 },
	{ 37,  -163.529830, 23.897663, 7.075955, 0.000001, 0.000053, 4.599997 },
	{ 37,  -163.771759, 28.711055, 7.306849, 0.000001, 0.000053, 4.599997 },
	{ 37,  -164.947067, 27.288562, 5.651482, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.125717, 21.392543, 5.712926, 0.000001, 0.000053, 4.599997 },
	{ 38,  -153.072433, 20.192806, 7.042929, 0.000001, 0.000053, 4.599997 },
	{ 38,  -154.863937, 21.396980, 5.900618, 0.000001, 0.000053, 4.599997 },
	{ 38,  -155.056701, 23.342624, 6.156506, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.586395, 20.183284, 7.075955, 0.000001, 0.000053, 4.599997 },
	{ 38,  -152.828338, 24.996677, 7.306849, 0.000001, 0.000053, 4.599997 },
	{ 38,  -154.003631, 23.574184, 5.651482, 0.000001, 0.000053, 4.599997 },
	{ 39,  -141.926635, 17.197063, 5.712926, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.873352, 15.997325, 7.042929, 0.000001, 0.000060, 4.599997 },
	{ 39,  -144.664855, 17.201499, 5.900618, 0.000001, 0.000060, 4.599997 },
	{ 39,  -144.857620, 19.147144, 6.156506, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.387313, 15.987796, 7.075955, 0.000001, 0.000060, 4.599997 },
	{ 39,  -142.629241, 20.801193, 7.306849, 0.000001, 0.000060, 4.599997 },
	{ 39,  -143.804550, 19.378696, 5.651482, 0.000001, 0.000060, 4.599997 },
	{ 40,  -241.184753, 42.125606, 5.712926, 0.000001, 0.000030, 0.899986 },
	{ 40,  -242.206909, 40.989463, 7.042929, 0.000001, 0.000030, 0.899986 },
	{ 40,  -243.916976, 42.306743, 5.900618, 0.000001, 0.000030, 0.899986 },
	{ 40,  -243.983764, 44.260768, 6.156506, 0.000001, 0.000030, 0.899986 },
	{ 40,  -241.722503, 40.948593, 7.075955, 0.000001, 0.000030, 0.899986 },
	{ 40,  -241.653305, 45.767570, 7.306849, 0.000001, 0.000030, 0.899986 },
	{ 40,  -242.917953, 44.423877, 5.651482, 0.000001, 0.000030, 0.899986 },
	{ 41,  -231.277679, 37.280700, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 41,  -232.299819, 36.144554, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 41,  -234.009887, 37.461826, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 41,  -234.076675, 39.415859, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 41,  -231.815414, 36.103679, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 41,  -231.746231, 40.922660, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 41,  -233.010879, 39.578971, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 42,  -221.603179, 32.632026, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.625320, 31.495872, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 42,  -224.335403, 32.813152, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 42,  -224.402206, 34.767185, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.140930, 31.455013, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 42,  -222.071731, 36.273986, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 42,  -223.336380, 34.930305, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 43,  -211.696121, 27.787117, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.718231, 26.650964, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 43,  -214.428329, 27.968242, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 43,  -214.495117, 29.922275, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.233856, 26.610097, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 43,  -212.164657, 31.429069, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 43,  -213.429306, 30.085388, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 44,  -201.521881, 23.796400, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 44,  -202.544052, 22.660257, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 44,  -204.254104, 23.977527, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 44,  -204.320892, 25.931568, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 44,  -202.059631, 22.619392, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 44,  -201.990447, 27.438364, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 44,  -203.255096, 26.094680, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 45,  -191.614807, 18.951492, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.636978, 17.815349, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 45,  -194.347030, 19.132621, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 45,  -194.413818, 21.086652, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.152557, 17.774482, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 45,  -192.083343, 22.593454, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 45,  -193.347991, 21.249773, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 46,  -180.956695, 15.348366, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.978836, 14.212223, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 46,  -183.688919, 15.529493, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 46,  -183.755706, 17.483533, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.494445, 14.171356, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 46,  -181.425247, 18.990327, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 46,  -182.689895, 17.646644, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 47,  -171.049621, 10.503451, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 47,  -172.071762, 9.367306, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 47,  -173.781829, 10.684586, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 47,  -173.848648, 12.638626, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 47,  -171.587356, 9.326448, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 47,  -171.518157, 14.145420, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 47,  -172.782806, 12.801737, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.368682, 6.090614, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 48,  -161.390853, 4.954471, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 48,  -163.100906, 6.271745, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 48,  -163.167724, 8.225774, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.906433, 4.913604, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 48,  -160.837249, 9.732577, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 48,  -162.101882, 8.388894, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 49,  -150.461593, 1.245706, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 49,  -151.483764, 0.109563, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 49,  -153.193832, 1.426838, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 49,  -153.260635, 3.380866, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 49,  -150.999359, 0.068689, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 49,  -150.930160, 4.887664, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 49,  -152.194824, 3.543978, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 50,  -245.105621, 28.911119, 5.712926, 0.000002, 0.000038, 0.899986 },
	{ 50,  -246.127777, 27.774974, 7.042929, 0.000002, 0.000038, 0.899986 },
	{ 50,  -247.837844, 29.092254, 5.900618, 0.000002, 0.000038, 0.899986 },
	{ 50,  -247.904647, 31.046279, 6.156506, 0.000002, 0.000038, 0.899986 },
	{ 50,  -245.643371, 27.734100, 7.075955, 0.000002, 0.000038, 0.899986 },
	{ 50,  -245.574172, 32.553081, 7.306849, 0.000002, 0.000038, 0.899986 },
	{ 50,  -246.838821, 31.209392, 5.651482, 0.000002, 0.000038, 0.899986 },
	{ 51,  -235.198547, 24.066211, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 51,  -236.220687, 22.930068, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 51,  -237.930770, 24.247339, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 51,  -237.997558, 26.201370, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 51,  -235.736297, 22.889192, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 51,  -235.667098, 27.708171, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 51,  -236.931747, 26.364482, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 52,  -225.524047, 19.417539, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 52,  -226.546188, 18.281387, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 52,  -228.256286, 19.598667, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 52,  -228.323074, 21.552698, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 52,  -226.061813, 18.240528, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 52,  -225.992614, 23.059499, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 52,  -227.257263, 21.715818, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 53,  -215.616989, 14.572631, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.639114, 13.436479, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 53,  -218.349197, 14.753757, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 53,  -218.416000, 16.707790, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.154724, 13.395612, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 53,  -216.085525, 18.214586, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 53,  -217.350173, 16.870903, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.442749, 10.581915, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 54,  -206.464920, 9.445772, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 54,  -208.174987, 10.763043, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 54,  -208.241760, 12.717082, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.980514, 9.404906, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 54,  -205.911315, 14.223878, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 54,  -207.175964, 12.880195, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 55,  -195.535675, 5.737008, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.557846, 4.600865, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 55,  -198.267898, 5.918136, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 55,  -198.334701, 7.872166, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.073425, 4.559998, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 55,  -196.004211, 9.378969, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 55,  -197.268875, 8.035286, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 56,  -184.877578, 2.133882, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.899719, 0.997738, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 56,  -187.609786, 2.315008, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 56,  -187.676574, 4.269048, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.415313, 0.956871, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 56,  -185.346115, 5.775843, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 56,  -186.610763, 4.432160, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 57,  -174.970489, -2.711033, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.992630, -3.847178, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 57,  -177.702713, -2.529899, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 57,  -177.769515, -0.575859, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.508239, -3.888036, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 57,  -175.439041, 0.930935, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 57,  -176.703689, -0.412747, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.289550, -7.123870, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 58,  -165.311721, -8.260013, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 58,  -167.021774, -6.942739, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 58,  -167.088592, -4.988710, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.827301, -8.300880, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 58,  -164.758132, -3.481907, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 58,  -166.022766, -4.825590, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 59,  -154.382476, -11.968778, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 59,  -155.404647, -13.104921, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 59,  -157.114700, -11.787647, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 59,  -157.181503, -9.833618, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 59,  -154.920227, -13.145795, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 59,  -154.851028, -8.326819, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 59,  -156.115692, -9.670505, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 60,  -249.705276, 15.429800, 5.712926, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.727432, 14.293657, 7.042929, 0.000002, 0.000038, 0.899986 },
	{ 60,  -252.437484, 15.610935, 5.900618, 0.000002, 0.000038, 0.899986 },
	{ 60,  -252.504287, 17.564966, 6.156506, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.243041, 14.252790, 7.075955, 0.000002, 0.000038, 0.899986 },
	{ 60,  -250.173812, 19.071769, 7.306849, 0.000002, 0.000038, 0.899986 },
	{ 60,  -251.438476, 17.728078, 5.651482, 0.000002, 0.000038, 0.899986 },
	{ 61,  -239.798202, 10.584896, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.820343, 9.448752, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 61,  -242.530395, 10.766022, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 61,  -242.597198, 12.720054, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.335937, 9.407877, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 61,  -240.266738, 14.226861, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 61,  -241.531402, 12.883167, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.123703, 5.936223, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 62,  -231.145843, 4.800071, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 62,  -232.855911, 6.117350, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 62,  -232.922729, 8.071382, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.661437, 4.759212, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 62,  -230.592239, 9.578185, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 62,  -231.856903, 8.234502, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 63,  -220.216644, 1.091315, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 63,  -221.238769, -0.044836, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 63,  -222.948837, 1.272442, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 63,  -223.015640, 3.226475, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 63,  -220.754379, -0.085702, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 63,  -220.685180, 4.733269, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 63,  -221.949829, 3.389587, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.042404, -2.899399, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 64,  -211.064559, -4.035542, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 64,  -212.774627, -2.718271, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 64,  -212.841415, -0.764232, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.580154, -4.076409, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 64,  -210.510971, 0.742562, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 64,  -211.775619, -0.601119, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 65,  -200.135330, -7.744307, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 65,  -201.157501, -8.880450, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 65,  -202.867553, -7.563179, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 65,  -202.934341, -5.609148, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 65,  -200.673080, -8.921317, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 65,  -200.603866, -4.102346, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 65,  -201.868515, -5.446028, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 66,  -189.477203, -11.347433, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 66,  -190.499359, -12.483577, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 66,  -192.209442, -11.166307, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 66,  -192.276229, -9.212267, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 66,  -190.014968, -12.524444, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 66,  -189.945770, -7.705472, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 66,  -191.210418, -9.049155, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 67,  -179.570144, -16.192350, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.592269, -17.328495, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 67,  -182.302352, -16.011215, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 67,  -182.369155, -14.057174, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.107879, -17.369352, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 67,  -180.038681, -12.550380, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 67,  -181.303329, -13.894062, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 68,  -168.889205, -20.605186, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.911361, -21.741329, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 68,  -171.621429, -20.424055, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 68,  -171.688232, -18.470026, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.426956, -21.782196, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 68,  -169.357772, -16.963222, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 68,  -170.622406, -18.306907, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 69,  -158.982116, -25.450094, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 69,  -160.004272, -26.586236, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 69,  -161.714355, -25.268962, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 69,  -161.781143, -23.314933, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 69,  -159.519882, -26.627111, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 69,  -159.450683, -21.808134, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 69,  -160.715332, -23.151821, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 70,  -253.626159, 2.215319, 5.712926, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.648300, 1.079175, 7.042929, 0.000003, 0.000045, 0.899986 },
	{ 70,  -256.358367, 2.396453, 5.900618, 0.000003, 0.000045, 0.899986 },
	{ 70,  -256.425170, 4.350479, 6.156506, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.163909, 1.038301, 7.075955, 0.000003, 0.000045, 0.899986 },
	{ 70,  -254.094680, 5.857280, 7.306849, 0.000003, 0.000045, 0.899986 },
	{ 70,  -255.359344, 4.513590, 5.651482, 0.000003, 0.000045, 0.899986 },
	{ 71,  -243.719085, -2.629588, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.741210, -3.765732, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 71,  -246.451278, -2.448462, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 71,  -246.518066, -0.494431, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.256820, -3.806606, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 71,  -244.187606, 1.012372, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 71,  -245.452270, -0.331317, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.044570, -7.278261, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 72,  -235.066711, -8.414413, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 72,  -236.776794, -7.097134, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 72,  -236.843597, -5.143102, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.582321, -8.455272, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 72,  -234.513122, -3.636300, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 72,  -235.777786, -4.979982, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 73,  -224.137512, -12.123167, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 73,  -225.159637, -13.259321, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 73,  -226.869705, -11.942041, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 73,  -226.936523, -9.988010, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 73,  -224.675247, -13.300188, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 73,  -224.606048, -8.481215, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 73,  -225.870697, -9.824897, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 74,  -213.963287, -16.113883, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.985427, -17.250026, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 74,  -216.695510, -15.932757, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 74,  -216.762283, -13.978717, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.501037, -17.290893, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 74,  -214.431838, -12.471922, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 74,  -215.696487, -13.815605, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 75,  -204.056198, -20.958791, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 75,  -205.078369, -22.094934, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 75,  -206.788421, -20.777664, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 75,  -206.855224, -18.823633, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 75,  -204.593948, -22.135803, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 75,  -204.524734, -17.316831, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 75,  -205.789382, -18.660512, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.398086, -24.561918, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 76,  -194.420242, -25.698062, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 76,  -196.130310, -24.380790, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 76,  -196.197113, -22.426752, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.935836, -25.738929, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 76,  -193.866638, -20.919958, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 76,  -195.131286, -22.263639, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 77,  -183.491012, -29.406833, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 77,  -184.513137, -30.542982, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 77,  -186.223236, -29.225698, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 77,  -186.290023, -27.271659, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 77,  -184.028762, -30.583841, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 77,  -183.959564, -25.764865, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 77,  -185.224212, -27.108549, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 78,  -172.810073, -33.819675, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.832229, -34.955814, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 78,  -175.542297, -33.638545, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 78,  -175.609100, -31.684516, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.347824, -34.996681, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 78,  -173.278656, -30.177707, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 78,  -174.543289, -31.521394, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 79,  -162.902999, -38.664581, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.925155, -39.800720, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 79,  -165.635223, -38.483444, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 79,  -165.702011, -36.529418, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.440750, -39.841594, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 79,  -163.371551, -35.022621, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 79,  -164.636199, -36.366306, 5.651482, 0.000003, 0.000083, 0.899986 },
	{ 80,  -257.584808, -7.924411, 5.712926, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.606964, -9.060554, 7.042929, 0.000001, 0.000038, 0.899986 },
	{ 80,  -260.317016, -7.743274, 5.900618, 0.000001, 0.000038, 0.899986 },
	{ 80,  -260.383819, -5.789249, 6.156506, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.122558, -9.101425, 7.075955, 0.000001, 0.000038, 0.899986 },
	{ 80,  -258.053344, -4.282447, 7.306849, 0.000001, 0.000038, 0.899986 },
	{ 80,  -259.317993, -5.626140, 5.651482, 0.000001, 0.000038, 0.899986 },
	{ 81,  -247.677734, -12.769317, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.699874, -13.905464, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 81,  -250.409942, -12.588191, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 81,  -250.476730, -10.634159, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.215469, -13.946338, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 81,  -248.146286, -9.127357, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 81,  -249.410934, -10.471046, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.003234, -17.417991, 5.712926, 0.000001, 0.000045, 0.899986 },
	{ 82,  -239.025375, -18.554145, 7.042929, 0.000001, 0.000045, 0.899986 },
	{ 82,  -240.735458, -17.236865, 5.900618, 0.000001, 0.000045, 0.899986 },
	{ 82,  -240.802261, -15.282833, 6.156506, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.540985, -18.595005, 7.075955, 0.000001, 0.000045, 0.899986 },
	{ 82,  -238.471786, -13.776031, 7.306849, 0.000001, 0.000045, 0.899986 },
	{ 82,  -239.736434, -15.119712, 5.651482, 0.000001, 0.000045, 0.899986 },
	{ 83,  -228.096176, -22.262901, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 83,  -229.118286, -23.399053, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 83,  -230.828384, -22.081775, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 83,  -230.895172, -20.127742, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 83,  -228.633911, -23.439920, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 83,  -228.564712, -18.620948, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 83,  -229.829360, -19.964630, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 84,  -217.921936, -26.253618, 5.712926, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.944107, -27.389760, 7.042929, 0.000001, 0.000053, 0.899986 },
	{ 84,  -220.654159, -26.072490, 5.900618, 0.000001, 0.000053, 0.899986 },
	{ 84,  -220.720947, -24.118450, 6.156506, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.459686, -27.430625, 7.075955, 0.000001, 0.000053, 0.899986 },
	{ 84,  -218.390502, -22.611654, 7.306849, 0.000001, 0.000053, 0.899986 },
	{ 84,  -219.655151, -23.955337, 5.651482, 0.000001, 0.000053, 0.899986 },
	{ 85,  -208.014862, -31.098526, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 85,  -209.037033, -32.234668, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 85,  -210.747085, -30.917396, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 85,  -210.813873, -28.963365, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 85,  -208.552612, -32.275535, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 85,  -208.483398, -27.456563, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 85,  -209.748046, -28.800245, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.356750, -34.701652, 5.712926, 0.000001, 0.000060, 0.899986 },
	{ 86,  -198.378890, -35.837795, 7.042929, 0.000001, 0.000060, 0.899986 },
	{ 86,  -200.088973, -34.520523, 5.900618, 0.000001, 0.000060, 0.899986 },
	{ 86,  -200.155761, -32.566482, 6.156506, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.894500, -35.878662, 7.075955, 0.000001, 0.000060, 0.899986 },
	{ 86,  -197.825302, -31.059690, 7.306849, 0.000001, 0.000060, 0.899986 },
	{ 86,  -199.089950, -32.403373, 5.651482, 0.000001, 0.000060, 0.899986 },
	{ 87,  -187.449676, -39.546566, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 87,  -188.471817, -40.682712, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 87,  -190.181884, -39.365432, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 87,  -190.248703, -37.411392, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 87,  -187.987411, -40.723571, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 87,  -187.918212, -35.904598, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 87,  -189.182861, -37.248279, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 88,  -176.768737, -43.959403, 5.712926, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.790908, -45.095546, 7.042929, 0.000001, 0.000068, 0.899986 },
	{ 88,  -179.500961, -43.778274, 5.900618, 0.000001, 0.000068, 0.899986 },
	{ 88,  -179.567779, -41.824241, 6.156506, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.306488, -45.136413, 7.075955, 0.000001, 0.000068, 0.899986 },
	{ 88,  -177.237304, -40.317440, 7.306849, 0.000001, 0.000068, 0.899986 },
	{ 88,  -178.501937, -41.661125, 5.651482, 0.000001, 0.000068, 0.899986 },
	{ 89,  -166.861648, -48.804309, 5.712926, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.883819, -49.940456, 7.042929, 0.000001, 0.000076, 0.899986 },
	{ 89,  -169.593887, -48.623180, 5.900618, 0.000001, 0.000076, 0.899986 },
	{ 89,  -169.660690, -46.669151, 6.156506, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.399414, -49.981330, 7.075955, 0.000001, 0.000076, 0.899986 },
	{ 89,  -167.330215, -45.162353, 7.306849, 0.000001, 0.000076, 0.899986 },
	{ 89,  -168.594879, -46.506038, 5.651482, 0.000001, 0.000076, 0.899986 },
	{ 90,  -261.505676, -21.138898, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 90,  -262.527832, -22.275043, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 90,  -264.237915, -20.957763, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 90,  -264.304687, -19.003738, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 90,  -262.043426, -22.315917, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 90,  -261.974243, -17.496936, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 90,  -263.238891, -18.840625, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 91,  -251.598602, -25.983806, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.620742, -27.119949, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 91,  -254.330825, -25.802679, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 91,  -254.397613, -23.848648, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.136352, -27.160825, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 91,  -252.067153, -22.341846, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 91,  -253.331802, -23.685535, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 92,  -241.924102, -30.632478, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.946243, -31.768630, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 92,  -244.656341, -30.451351, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 92,  -244.723129, -28.497320, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.461868, -31.809490, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 92,  -242.392669, -26.990518, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 92,  -243.657318, -28.334199, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 93,  -232.017044, -35.477386, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 93,  -233.039169, -36.613540, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 93,  -234.749252, -35.296260, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 93,  -234.816055, -33.342227, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 93,  -232.554779, -36.654403, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 93,  -232.485580, -31.835432, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 93,  -233.750228, -33.179115, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 94,  -221.842803, -39.468101, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.864974, -40.604248, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 94,  -224.575042, -39.286975, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 94,  -224.641815, -37.332935, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.380569, -40.645111, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 94,  -222.311370, -35.826141, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 94,  -223.576019, -37.169822, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 95,  -211.935729, -44.313011, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.957901, -45.449153, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 95,  -214.667953, -44.131881, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 95,  -214.734756, -42.177852, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.473480, -45.490020, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 95,  -212.404266, -40.671051, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 95,  -213.668930, -42.014732, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.277633, -47.916137, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 96,  -202.299774, -49.052280, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 96,  -204.009841, -47.735008, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 96,  -204.076629, -45.780967, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.815368, -49.093147, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 96,  -201.746170, -44.274173, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 96,  -203.010818, -45.617858, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 97,  -191.370544, -52.761051, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 97,  -192.392684, -53.897197, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 97,  -194.102767, -52.579917, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 97,  -194.169570, -50.625877, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 97,  -191.908294, -53.938053, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 97,  -191.839096, -49.119083, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 97,  -193.103744, -50.462764, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 98,  -180.689605, -57.173889, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.711776, -58.310031, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 98,  -183.421829, -56.992755, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 98,  -183.488647, -55.038726, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.227355, -58.350898, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 98,  -181.158187, -53.531925, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 98,  -182.422821, -54.875610, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 99,  -170.782531, -62.018798, 5.712926, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.804702, -63.154937, 7.042929, 0.000002, 0.000083, 0.899986 },
	{ 99,  -173.514755, -61.837665, 5.900618, 0.000002, 0.000083, 0.899986 },
	{ 99,  -173.581558, -59.883636, 6.156506, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.320281, -63.195816, 7.075955, 0.000002, 0.000083, 0.899986 },
	{ 99,  -171.251083, -58.376838, 7.306849, 0.000002, 0.000083, 0.899986 },
	{ 99,  -172.515747, -59.720523, 5.651482, 0.000002, 0.000083, 0.899986 },
	{ 100,  -266.105346, -34.620216, 5.712926, 0.000002, 0.000045, 0.899986 },
	{ 100,  -267.127502, -35.756362, 7.042929, 0.000002, 0.000045, 0.899986 },
	{ 100,  -268.837524, -34.439083, 5.900618, 0.000002, 0.000045, 0.899986 },
	{ 100,  -268.904357, -32.485054, 6.156506, 0.000002, 0.000045, 0.899986 },
	{ 100,  -266.643096, -35.797225, 7.075955, 0.000002, 0.000045, 0.899986 },
	{ 100,  -266.573852, -30.978248, 7.306849, 0.000002, 0.000045, 0.899986 },
	{ 100,  -267.838531, -32.321937, 5.651482, 0.000002, 0.000045, 0.899986 },
	{ 101,  -256.198242, -39.465122, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 101,  -257.220397, -40.601264, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 101,  -258.930450, -39.283996, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 101,  -258.997253, -37.329963, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 101,  -256.735992, -40.642139, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 101,  -256.666809, -35.823158, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 101,  -257.931457, -37.166851, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 102,  -246.523757, -44.113796, 5.712926, 0.000002, 0.000053, 0.899986 },
	{ 102,  -247.545898, -45.249946, 7.042929, 0.000002, 0.000053, 0.899986 },
	{ 102,  -249.255966, -43.932666, 5.900618, 0.000002, 0.000053, 0.899986 },
	{ 102,  -249.322784, -41.978637, 6.156506, 0.000002, 0.000053, 0.899986 },
	{ 102,  -247.061492, -45.290805, 7.075955, 0.000002, 0.000053, 0.899986 },
	{ 102,  -246.992294, -40.471832, 7.306849, 0.000002, 0.000053, 0.899986 },
	{ 102,  -248.256958, -41.815513, 5.651482, 0.000002, 0.000053, 0.899986 },
	{ 103,  -236.616699, -48.958702, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.638824, -50.094856, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 103,  -239.348892, -48.777576, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 103,  -239.415695, -46.823543, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.154434, -50.135719, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 103,  -237.085235, -45.316749, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 103,  -238.349884, -46.660430, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.442459, -52.949417, 5.712926, 0.000002, 0.000060, 0.899986 },
	{ 104,  -227.464614, -54.085559, 7.042929, 0.000002, 0.000060, 0.899986 },
	{ 104,  -229.174682, -52.768291, 5.900618, 0.000002, 0.000060, 0.899986 },
	{ 104,  -229.241470, -50.814250, 6.156506, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.980209, -54.126426, 7.075955, 0.000002, 0.000060, 0.899986 },
	{ 104,  -226.911026, -49.307456, 7.306849, 0.000002, 0.000060, 0.899986 },
	{ 104,  -228.175674, -50.651138, 5.651482, 0.000002, 0.000060, 0.899986 },
	{ 105,  -216.535385, -57.794326, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.557556, -58.930469, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 105,  -219.267608, -57.613197, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 105,  -219.334396, -55.659168, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.073135, -58.971336, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 105,  -217.003921, -54.152366, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 105,  -218.268569, -55.496047, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 106,  -205.877258, -61.397453, 5.712926, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.899414, -62.533596, 7.042929, 0.000002, 0.000068, 0.899986 },
	{ 106,  -208.609497, -61.216323, 5.900618, 0.000002, 0.000068, 0.899986 },
	{ 106,  -208.676284, -59.262287, 6.156506, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.415023, -62.574462, 7.075955, 0.000002, 0.000068, 0.899986 },
	{ 106,  -206.345825, -57.755493, 7.306849, 0.000002, 0.000068, 0.899986 },
	{ 106,  -207.610473, -59.099174, 5.651482, 0.000002, 0.000068, 0.899986 },
	{ 107,  -195.970199, -66.242370, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.992324, -67.378509, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 107,  -198.702407, -66.061233, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 107,  -198.769210, -64.107192, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.507934, -67.419372, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 107,  -196.438735, -62.600399, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 107,  -197.703384, -63.944080, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.289260, -70.655204, 5.712926, 0.000002, 0.000076, 0.899986 },
	{ 108,  -186.311416, -71.791351, 7.042929, 0.000002, 0.000076, 0.899986 },
	{ 108,  -188.021484, -70.474075, 5.900618, 0.000002, 0.000076, 0.899986 },
	{ 108,  -188.088287, -68.520042, 6.156506, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.827011, -71.832214, 7.075955, 0.000002, 0.000076, 0.899986 },
	{ 108,  -185.757827, -67.013244, 7.306849, 0.000002, 0.000076, 0.899986 },
	{ 108,  -187.022460, -68.356925, 5.651482, 0.000002, 0.000076, 0.899986 },
	{ 109,  -175.382171, -75.500114, 5.712926, 0.000002, 0.000083, 0.899986 },
	{ 109,  -176.404327, -76.636253, 7.042929, 0.000002, 0.000083, 0.899986 },
	{ 109,  -178.114410, -75.318984, 5.900618, 0.000002, 0.000083, 0.899986 },
	{ 109,  -178.181198, -73.364952, 6.156506, 0.000002, 0.000083, 0.899986 },
	{ 109,  -175.919937, -76.677131, 7.075955, 0.000002, 0.000083, 0.899986 },
	{ 109,  -175.850738, -71.858154, 7.306849, 0.000002, 0.000083, 0.899986 },
	{ 109,  -177.115386, -73.201843, 5.651482, 0.000002, 0.000083, 0.899986 },
	{ 110,  -270.026214, -47.834697, 5.712926, 0.000003, 0.000053, 0.899986 },
	{ 110,  -271.048339, -48.970844, 7.042929, 0.000003, 0.000053, 0.899986 },
	{ 110,  -272.758422, -47.653564, 5.900618, 0.000003, 0.000053, 0.899986 },
	{ 110,  -272.825225, -45.699539, 6.156506, 0.000003, 0.000053, 0.899986 },
	{ 110,  -270.563964, -49.011718, 7.075955, 0.000003, 0.000053, 0.899986 },
	{ 110,  -270.494750, -44.192737, 7.306849, 0.000003, 0.000053, 0.899986 },
	{ 110,  -271.759399, -45.536426, 5.651482, 0.000003, 0.000053, 0.899986 },
	{ 111,  -260.119140, -52.679607, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 111,  -261.141265, -53.815750, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 111,  -262.851318, -52.498481, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 111,  -262.918121, -50.544448, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 111,  -260.656860, -53.856624, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 111,  -260.587646, -49.037647, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 111,  -261.852325, -50.381336, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.444625, -57.328281, 5.712926, 0.000003, 0.000060, 0.899986 },
	{ 112,  -251.466766, -58.464431, 7.042929, 0.000003, 0.000060, 0.899986 },
	{ 112,  -253.176849, -57.147151, 5.900618, 0.000003, 0.000060, 0.899986 },
	{ 112,  -253.243652, -55.193122, 6.156506, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.982376, -58.505290, 7.075955, 0.000003, 0.000060, 0.899986 },
	{ 112,  -250.913177, -53.686317, 7.306849, 0.000003, 0.000060, 0.899986 },
	{ 112,  -252.177841, -55.029998, 5.651482, 0.000003, 0.000060, 0.899986 },
	{ 113,  -240.537567, -62.173187, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.559692, -63.309341, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 113,  -243.269760, -61.992057, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 113,  -243.336578, -60.038028, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.075302, -63.350204, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 113,  -241.006103, -58.531234, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 113,  -242.270751, -59.874916, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.363342, -66.163902, 5.712926, 0.000003, 0.000068, 0.899986 },
	{ 114,  -231.385482, -67.300048, 7.042929, 0.000003, 0.000068, 0.899986 },
	{ 114,  -233.095565, -65.982772, 5.900618, 0.000003, 0.000068, 0.899986 },
	{ 114,  -233.162338, -64.028732, 6.156506, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.901092, -67.340911, 7.075955, 0.000003, 0.000068, 0.899986 },
	{ 114,  -230.831893, -62.521942, 7.306849, 0.000003, 0.000068, 0.899986 },
	{ 114,  -232.096542, -63.865623, 5.651482, 0.000003, 0.000068, 0.899986 },
	{ 115,  -220.456253, -71.008811, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 115,  -221.478424, -72.144950, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 115,  -223.188476, -70.827682, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 115,  -223.255279, -68.873649, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 115,  -220.994003, -72.185821, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 115,  -220.924789, -67.366851, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 115,  -222.189437, -68.710533, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 116,  -209.798141, -74.611938, 5.712926, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.820297, -75.748077, 7.042929, 0.000003, 0.000076, 0.899986 },
	{ 116,  -212.530364, -74.430809, 5.900618, 0.000003, 0.000076, 0.899986 },
	{ 116,  -212.597167, -72.476768, 6.156506, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.335891, -75.788948, 7.075955, 0.000003, 0.000076, 0.899986 },
	{ 116,  -210.266693, -70.969978, 7.306849, 0.000003, 0.000076, 0.899986 },
	{ 116,  -211.531341, -72.313659, 5.651482, 0.000003, 0.000076, 0.899986 },
	{ 117,  -199.891067, -79.456848, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.913192, -80.593002, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 117,  -202.623291, -79.275718, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 117,  -202.690078, -77.321678, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.428817, -80.633857, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 117,  -200.359619, -75.814880, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 117,  -201.624267, -77.158569, 5.651482, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.210128, -83.869689, 5.712926, 0.000003, 0.000083, 0.899986 },
	{ 118,  -190.232284, -85.005828, 7.042929, 0.000003, 0.000083, 0.899986 },
	{ 118,  -191.942352, -83.688568, 5.900618, 0.000003, 0.000083, 0.899986 },
	{ 118,  -192.009155, -81.734535, 6.156506, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.747879, -85.046699, 7.075955, 0.000003, 0.000083, 0.899986 },
	{ 118,  -189.678710, -80.227722, 7.306849, 0.000003, 0.000083, 0.899986 },
	{ 118,  -190.943344, -81.571411, 5.651482, 0.000003, 0.000083, 0.899986 }
};
new PlayerText:YandNsysTDPlayer[MAX_PLAYERS][2];
new Text:YandNsysTD[3];
new JobTempProcess[MAX_PLAYERS];

new PlayerText:work_td[MAX_PLAYERS][4];

new second_timerlog;

new patrul_id[MAX_PLAYERS],
	tick_wanted[MAX_PLAYERS char],
	time_wanted[MAX_PLAYERS];

new spaned[MAX_PLAYERS];

enum TPList {
	tName[46],
	Float:tPos[3],
	tList
}
new TPLIST[MAX_TELEPORTS][TPList] = {
 	{""YELLOW"[POLICE]"W" Поліція LS", 				{1540.0491,-1676.1680,13.2146},0},
	{""YELLOW"[POLICE]"W" Поліція SF", 				{-1629.0847,726.1740,14.1306},0},
	{""YELLOW"[POLICE]"W" Поліція LV", 				{2285.9685,2420.4519,10.4922},0},
	{""YELLOW"[POLICE]"W" ФБР",						{-1978.8849,-1012.8095,32.1719},0},
	{""YELLOW"[ARMY]"W" Армія ЛВ", 				{308.7944,1896.6123,17.6406},0},
	{""YELLOW"[ARMY]"W" Армія СФ", 				{-1533.1841,488.2717,7.1797},0},
	{""YELLOW"[MAYOR]"W" Мерія ЛС",				{1481.2506,-1739.8961,13.5469},0},
	{""YELLOW"[MAYOR]"W" Білий дім",				{1136.0038,-2037.0396,69.0078},0},
	{""YELLOW"[AUTOSCHOOL]"W" Автошкола",				{747.1070,-1385.3630,13.7700},0},
	{""YELLOW"[MEDICS]"W" Лікарня ЛС", 			{1177.6864,-1323.2448,14.0830},0},
	{""YELLOW"[MEDICS]"W" Лікарня СФ", 			{-2666.6680,580.7857,14.4609},0},
	{""YELLOW"[MEDICS]"W" Лікарня ЛВ", 			{1641.8849,1833.5286,10.8508},0},
	{""YELLOW"[СМИ]"W" Радіоцентр ЛС", 			{1578.6501,-1326.6104,16.4844},0},
	{""YELLOW"[СМИ]"W" Радіоцентр СФ", 			{-2522.5120,-613.8146,132.5625},0},
	{""YELLOW"[СМИ]"W" Радіоцентр ЛВ", 			{2642.6973,1172.9144,10.8203},0},
	{""YELLOW"[MAFIA]"W" Італійська мафія", 		{1450.4951,750.6007,11.0234},0},
	{""YELLOW"[MAFIA]"W" Японська мафія",			{2630.8684,1824.2241,11.0234},0},
	{""YELLOW"[MAFIA]"W" Українська мафія",			{943.2179,1732.5566,8.8516},0},
	{""YELLOW"[GANG]"W" Ballas Gang",				{1939.0865,-1120.5308,26.4909},0},
	{""YELLOW"[GANG]"W" Vagos Gang",				{2756.3188,-1180.4659,69.3984},0},
	{""YELLOW"[GANG]"W" Grove Street Gang",		{2495.8179,-1679.6707,13.3391},0},
	{""YELLOW"[GANG]"W" Aztecas Gang",			{1677.8265,-2117.4241,13.5469},0},
	{""YELLOW"[GANG]"W" Rifa Gang",				{2730.9592,-1952.6282,13.5394},0},
	{"Зброяний завод",			{2680.7827,-2405.3203,13.4907},1},
	{"Нефтезавод",				{273.7452,1417.4165,10.4462},1},
	{"Яблочний сад",			{-116.4320,-0.3284,3.1094},1},
	{"Рибалка",					{-403.6830,-433.3349,16.2312},1},
	{"Лісопилка",				{-502.3524,-1571.3837,10.3160},1},
	{"Розвізник продуктов",	{1144.7769,1975.1379,10.8203},1},
	{"Розвізник топлива",		{-21.2761,-352.0749,5.4297},1},
	{"ЖД Los Santos", 			{1805.0404,-1908.3304,13.3983},2},
	{"ЖД San Fierro", 			{-1994.0475,100.2056,27.5391},2},
	{"ЖД Las-Venturas", 		{2827.3931,1255.9264,10.7685},2},
	{"Банк ЛС",					{1689.6176,-1343.5171,17.4297},3},
	{"Банк СФ",					{-2354.6326,493.4315,30.9022},3},
	{"Банк ЛВ",					{2577.5327,1322.0800,10.8203},3},
	{"Транспортна компанія 1",	{-60.0147,-1124.5425,1.0781},4},
	{"Транспортна компанія 2",	{-488.5891,-524.2830,25.5178},4},
	{"Транспортна компанія 3",	{136.0157,-247.9421,1.5781},4},
	{"Загрузка Зброяного заводу",{2653.8486,-2387.8660,13.6328},4},
	{"Загрузка Нефтезаводу",		{253.3007,1396.0299,10.5859},4},
	{"Розвантаження Порт СФ",		{-1744.4447,149.4602,3.5496},4},
	{"Розвантаження Порт ЛС",		{2616.7119,-2226.7627,13.381},4},
	{"Розвантаження Збройний завод",{2687.9753,-2480.1912,13.5008},4},
	{"Таксопарк ЛС",			{1072.7596,-1768.8920,13.3602},5},
	{"Таксопарк СФ",			{-2182.2236,291.4850,35.1291},5},
	{"Таксопарк ЛВ",			{2490.6318,1346.1738,10.8276},5},
	{"Гетто", 					{2201.2886,-1703.4170,13.5396},6},
	{"Форт карсон", 			{91.6006,1182.4490,21.1174},6},
	{"ЛС-СФ Шосе",				{-110.4161,-1140.6246,1.6458},6},
	{"Казино",					{2163.6824,2160.8635,10.8203},6},
	{"Комп'ютерний клуб",		{1022.6423,-1129.9634,23.8705},6},
	{"Поєдинки",					{2194.3650,-2278.3823,13.5469},6},
	{"Центр Розваг",		{2221.6672,1837.3550,10.8203},6},
	{"Чорний ринок",			{2310.7986,-1218.1053,24.0008},6},
	{"Військомат",				{-316.6047,1060.1151,19.7422},6}
};
enum INTlist {
	iID,
	iName[70],
	Float:iEnterx,
	Float:iEntery,
	Float:iEnterz,
	Float:iEntera,
	Float:iExitx,
	Float:iExity,
	Float:iExitz
};
new edit_int[MAX_PLAYERS];
new bool:Fishing[MAX_PLAYERS],
	fish_zone[3],
	Float:fish_place[3][4] = {
		{-310.00006103515625, -505.0000762939453, -200.00006103515625, -415.0000762939453},
		{-350.00006103515625, -640.0000610351562, -240.00006103515625, -540.0000610351562},
		{-246.00006103515625, -763.0000610351562, -136.00006103515625, -673.0000610351562}
	},
	FishName[8][22] = {
		"Карп",
		"Карась",
		"Щука",
		"Червонопірка",
		"Окунь",
		"Тунець",
		"Лещ",
		"Язь"
	},
	Float:fish_sklad,
	Text3D:fish_text;

new Float:HospitalSpawns[12][4] = {
	{1561.8345,496.7100,1070.4226,359.1996}, // spawn 1
	{1564.4565,496.6277,1070.4226,357.2962}, // spawn 2
	{1567.0247,496.6094,1070.4226,1.0329}, // spawn 3
	{1559.8263,508.7991,1070.4226,178.6712}, // spawn 4
	{1562.3278,508.4033,1070.4226,179.9247}, // spawn 5
	{1564.7817,508.7976,1070.4226,180.5748}, // spawn 6
	{1546.6906,508.6857,1070.4226,180.2381}, // spawn 7
	{1544.1390,508.6756,1070.4226,180.2147}, // spawn 8
	{1541.6169,508.6804,1070.4226,180.1914}, // spawn 9
	{1548.8851,496.6806,1070.4226,1.2764}, // spawn 10
	{1546.3250,496.6836,1070.4226,1.9031}, // spawn 11
	{1543.7367,496.6739,1070.4226,359.0831} // spawn 12
};

new Float:HospitalArmSpawns[4][4] = {
	{309.4100,2067.1343,1014.3731,274.7489},
	{309.4100,2067.1343,1014.3731,274.7489},
	{312.5431,2063.4282,1014.3731,177.6381},
	{310.5005,2054.7236,1014.3731,358.0731}
};

new Float:PoliceSpawn[10][4] = {
	{1366.2506,1061.8446,1626.4896,265.4858},
	{1366.5651,1060.1194,1626.4896,270.1859},
	{1366.8134,1061.0466,1626.4896,267.3658},
	{1364.9451,1059.8419,1626.4896,270.4759},
	{1365.0205,1061.1891,1626.4896,265.1491},
	{1366.5056,1056.0862,1626.4896,268.5959},
	{1366.4434,1057.2314,1626.4896,269.2226},
	{1366.6952,1058.2623,1626.4896,268.2826},
	{1364.8705,1056.2211,1626.4896,268.2592},
	{1364.8931,1057.9684,1626.4896,266.0659}
};

new FirstFire[MAX_PLAYERS],
	SecondFire[MAX_PLAYERS];

enum chetinfo {
	cheatid1
}
new Float:ChetInfo[10][chetinfo],
	Cheat1,
	Text:CheatText[10],
	Text:CheatPanel[3];

new Text:reg_td[19],
	PlayerText:reg_tds[MAX_PLAYERS][3],
	Text:select_skins[21];

new actor[MAX_ACTORSS];
new Text3D:tActor[MAX_ACTORSS];
new actortime[MAX_ACTORSS];

enum ADVERT_DATA {
	adID,
	adSender[24],
	adCheker[24],
	adNews[3],
	adPhone,
	adText[100],
	adTime,
	adVIP,
	adMoney,
	bool:adCheked,
	bool:adBusy,
	bool:adCheking
}
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA],
	gAdvertCount,
	gAdvertTime;

new calls_news[3],
	calls_ether[3],
	Text3D:advert_turn_text[3];

enum object_moved_data {
	moved_id,
	moved_vw,
	moved_modelid,
	Float:movedPosX,
	Float:movedPosY,
	Float:movedPosZ,
	Float:movedPosRotationX,
	Float:movedPosRotationY,
	Float:movedPosRotationZ,
	bool:status_moved
}
new moved_info[MAX_OBJECT_MOVED][object_moved_data] = {
	{-1,-1,986,-1530.303344, 483.000000, 7.910076, 0.000000, 0.000000, 0.000000,false},//0
	{-1,-1,1495,-1448.309692, 481.617034, 6.151350, 0.000000, 0.000000, 0.000000,false},//1
	{-1,-1,1495,-1318.928100, 481.617034, 6.151350, 0.000000, 0.000000, 0.000000,false},//2
	{-1,-1,2949,-1520.944091, 489.061187, 5.801178, 0.000000, 0.000000, -90.099952,false},//3
	{-1,-1,989,120.331481, 2070.349121, 17.936050, 0.000000, 0.000000, 176.819915,false},//4

	{-1,-1,968,36.051998, -1518.188964, 4.782000, 0.000000, 270.000000, 87.995002,false},//блок пост ЛС 5
	{-1,-1,968,35.923999, -1534.245971, 4.794000, 0.000000, 270.000000, 87.989997,false},//блок пост ЛС 6
	{-1,-1,968,66.999000, -1538.291015, 4.724998, 0.000000, 270.000000, 87.989997,false},//блок пост ЛС 7
	{-1,-1,968,67.121002, -1522.211059, 4.782000, 0.000000, 270.000000, 87.989997,false},//блок пост ЛС 8

	{-1,-1,968,-1444.939941, 785.088989, 46.647998, 0.000000, 270.000000, 316.000000,false},//блок пост СФ 9
	{-1,-1,968,-1438.353027, 778.713012, 46.647998, 0.000000, 270.000000, 136.000000,false},//блок пост СФ 10
	{-1,-1,968,-1388.014038, 845.619018, 46.984001, 0.000000, 270.000000, 316.000000,false},//блок пост СФ 11
	{-1,-1,968,-1381.303955, 839.392028, 46.984001, 0.000000, 270.000000, 135.994003,false},//блок пост СФ 12

	{-1,-1,968,1789.296997, 822.682006, 10.480999, 0.000000, 270.000000, 0.000000,false},//блок пост ЛВ 13
	{-1,-1,968,1811.623046, 822.682006, 10.480999, 0.000000, 270.000000, 0.000000,false},//блок пост ЛВ 14
	{-1,-1,968,1811.676025, 793.505004, 10.982999, 0.000000, 270.000000, 0.000000,false},//блок пост ЛВ 15
	{-1,-1,968,1789.364990, 793.500000, 10.982999, 0.000000, 270.000000, 0.000000,false},//блок пост ЛВ 16

	{-1,40,1495,1365.661376, 1066.767333, 1625.481933, 0.000022, 0.000000, 89.999931,false},//[ПД] дверь в помещению копов 17
	{-1,40,1495,1369.071411, 1064.577392, 1625.481933, 0.000000, 0.000022, 0.000000,false},//[ПД] дверь к камерам 18
	{-1,40,1495,1289.777709, -6.756979, 999.859863,  0.000000, 0.000000, -90.599975,false},//[ПД] дверь к камерам 19
	{-1,-1,2990, 1589.65820, -1637.95203, 15.00631,  0.00000, 0.00000, 180.00000,false},//[ПД] Ворота в гараж LSPD 20
	{-1,-1,968,1544.69006348,-1630.90002441,13.13999939,0.00000000,90.00000000,90.00000000,false},//[ПД] шлагбаум в гараж LSPD 21
	{-1,-1,1495,1582.60718, -1637.91467, 12.29627,   0.00000, 0.00000, 0.00000,false},//[ПД] дверь в гараж LSPD 22

	{-1,-1,968, 198.439071, -323.986236, 1.242653, -0.000007, -90.000007, -86.599952,false},//[ТК] у ябл.сада 23

	{-1,-1,1500,764.733154, 6.474230, 1150.968750, 0.000000, 0.000000, 0.000000,false},//[LVa] штаб дверь собеседований 24

	{-1,-1,968, 1101.9063, -1744.5302, 13.1907, 0.000000, 90.000000, 90.000000,false},//[TAXI] шлагбаум LS 25
	{-1,-1,2920, -2201.914062, 309.752960, 35.281238, -90.000000, 0.000000, -270.000000,false},//[TAXI] шлагбаум SF 1 26
	{-1,-1,2920, -2197.043945, 309.662933, 35.281238, 90.000000, 0.000000, -270.000000,false},//[TAXI] шлагбаум SF 2 27
	{-1,-1,968, 2469.932861, 1323.640991, 10.427176, 0.000000, -90.000000, 0.000000,false},//[TAXI] шлагбаум LV 28

	{-1,-1,19859, 500.865386, 2041.307128, 1015.148132, 0.000000, 0.000000, -90.000000,false},//[ARMY] военкомат 29

	{-1,-1,10184,660.0380249,-1227.0469971,17.6669998,0.0000000,0.0000000,332.0000000,false}, //[особняк] 30
	{-1,-1,10184,665.3027344,-1309.4492188,14.9829998,0.0000000,0.0000000,270.0000000,false}, //[особняк] 31
	{-1,-1,10184,785.4316406,-1153.4423828,25.0900002,0.0000000,0.0000000,1.9995117,false}, //[особняк] 32

	{-1,-1,1569, 59.928001, -1533.542968, 4.499000, 0.000000, 0.000000, 82.000000,false}, //[блок пост] ЛС дверь 33
	{-1,-1,1569, -1401.375976, 823.627990, 46.742000, 0.000000, 0.000000, 136.427993,false}, //[блок пост] СФ дверь 34
	{-1,-1,1569, 1796.286010, 816.505004, 11.206999, 0.000000, 0.000000, 0.000000,false}, //[блок пост] ЛВ дверь 35

	{-1,-1,2949, -1522.477172, 482.676055, 5.801178, 0.000000, 0.000000, 90.600036,false}, //[SFa] дверь в армию 36

	{-1,-1,988, 211.929382, 1796.644409, 17.745433, 0.000000, 0.000000, 0.000000,false}, //[lVa] ворота 37

	{-1,-1,19857,1473.731,278.971,1013.751,0.000,0.000,45.099,false}, //[FBI] дверь допроса 38

	{-1,-1,968, -87.517776, -1126.890502, 0.890990, 0.000000, -90.000007, 68.599983,false}, //[ТК] у АЗС 39
	{-1,-1,968, -486.344726, -562.425537, 25.272714, 0.000000, -90.000007, 0.000000,false}, //[ТК] у рыбалки 40

	{-1,-1,968, 2238.17749, 2450.42896, 10.63530,   0.00000, 90.00000, 90.00000,false}, //[LVPD] шлагбаум 41
	{-1,-1,968, -1572.19250, 658.78668, 6.78400,   0.00000, 89.00000, 89.87980,false}, //[SFPD] шлагбаум 42
	{-1,-1,968, -1701.42175, 687.79688, 24.53650,   0.00000, 89.00000, 269.86310,false}, //[SFPD] шлагбаум 43

	{-1,41,1495,1365.661376, 1066.767333, 1625.481933, 0.000022, 0.000000, 89.999931,false},//[ПД] дверь в помещению копов 44
	{-1,41,1495,1369.071411, 1064.577392, 1625.481933, 0.000000, 0.000022, 0.000000,false},//[ПД] дверь к камерам 45
	{-1,41,1495,1289.777709, -6.756979, 999.859863,  0.000000, 0.000000, -90.599975,false},//[ПД] дверь к камерам 46

	{-1,42,1495,1365.661376, 1066.767333, 1625.481933, 0.000022, 0.000000, 89.999931,false},//[ПД] дверь в помещению копов 47
	{-1,42,1495,1369.071411, 1064.577392, 1625.481933, 0.000000, 0.000022, 0.000000,false},//[ПД] дверь к камерам 48
	{-1,42,1495,1289.777709, -6.756979, 999.859863,  0.000000, 0.000000, -90.599975,false},//[ПД] дверь к камерам 49

	{-1,-1,989,118.631767, 2065.167724, 17.936050, 0.000000, 0.000000, 176.819915,false},//[LVa] ворота часть №2 | 50

	{-1,-1,9625,651.7225, -1487.5088, 14.6100, 0.0000, 0.0000, 0.0000,false},//[Perfomanse] ворота №1 | 51
	{-1,-1,9625,651.7225, -1477.1748, 14.6100, 0.000000, 0.000000, 0.0000,false},//[Perfomanse] ворота №2 | 52

	{-1,-1,968,2337.54028, 2446.61133, 5.6151,   0.00000, -90.00000, 60.00000,false}//[LVPD] шлагбаум | 53
},
Float:moved_pos_object[MAX_OBJECT_MOVED][6]={
	{-1537.7033, 483.0000, 7.9101,0.0,0.0,0.0},
	{-1448.309692, 481.617034, 6.151350,0.0,0.0,120.0000},
	{-1318.928100, 481.617034, 6.151350,0.0,0.0,120.0000},
	{-1520.944091, 489.061187, 5.801178,0.0,0.0,170.1000},
	{122.1715, 2075.6492, 18.0561, -3.9000, 0.0, 176.819915},

	{36.051998, -1518.188964, 4.782000, 0.000000, 0.000000, 87.995002},//блок пост ЛС
	{35.923999, -1534.245971, 4.794000, 0.000000, 0.000000, 87.989997},//блок пост ЛС
	{66.999000, -1538.291015, 4.724998, 0.000000, 0.000000, 87.989997},//блок пост ЛС
	{67.121002, -1522.211059, 4.782000, 0.000000, 0.000000, 87.989997},//блок пост ЛС

	{-1444.939941, 785.088989, 46.647998, 0.000000, 0.000000, 316.000000},//блок пост СФ
	{-1438.353027, 778.713012, 46.647998, 0.000000, 0.000000, 136.000000},//блок пост СФ
	{-1388.014038, 845.619018, 46.984001, 0.000000, 0.000000, 316.000000},//блок пост СФ
	{-1381.303955, 839.392028, 46.984001, 0.000000, 0.000000, 135.994003},//блок пост СФ

	{1789.296997, 822.682006, 10.480999, 0.000000, 0.000000, 0.000000},//блок пост ЛВ
	{1811.623046, 822.682006, 10.480999, 0.000000, 0.000000, 0.000000},//блок пост ЛВ
	{1811.676025, 793.505004, 10.982999, 0.000000, 0.000000, 0.000000},//блок пост ЛВ
	{1789.364990, 793.500000, 10.982999, 0.000000, 0.000000, 0.000000},//блок пост ЛВ

	{1365.661376, 1066.767333, 1625.481933, 0.000022, 0.000000, 10.9999},//[ПД] двері в приміщення копів
	{1369.071411, 1064.577392, 1625.481933, 0.000000, 0.000022, -80.0000},//[ПД] двері к камерам
	{1289.777709, -6.756979, 999.859863,  0.000000, 0.000000, -10.599975},//[ПД] двері к камерам
	{1597.39136, -1637.95203, 15.00631,   0.00000, 0.00000, 180.00000},//[ПД] Ворота в гараж LSPD
	{1544.69006348,-1630.90002441,13.13999939, 0.00000000,0.00000000,90.00000000},//[ПД] шлагбаум в гараж LSPD
	{1582.60718, -1637.91467, 12.29627,   0.00000, 0.00000, 92.63997},//[ПД] двері в гараж LSPD

	{198.439071, -323.986236, 1.242653, -0.000007, 0.000007, -86.599952},//[ТК] у ябл.сада

	{764.733154, 6.474230, 1150.968750, 0.000000, 0.000000, -80.000000},//[LVa] штаб двері співбесіди

	{1101.9063, -1744.5302, 13.1907, 0.000000, 0.000000, 90.000000},//[TAXI] шлагбаум LS
	{-2201.914062, 309.752960, 35.281238, 0.000000, 0.000000, -270.000000},//[TAXI] шлагбаум SF 1
	{-2197.043945, 309.662933, 35.281238, 0.000000, 0.000000, -270.000000},//[TAXI] шлагбаум SF 2
	{2469.932861, 1323.640991, 10.427176, 0.000000, 0.000000, 0.000000},//[TAXI] шлагбаум LV

	{500.865386, 2041.307128, 1015.148132, 0.000000, 0.000000, -143.499984},//[ARMY] воєнкомат

	{660.0380249,-1227.0469971,12.4070,0.0000000,0.0000000,332.0000000}, //[особняк]
	{665.3027344,-1309.4492188,9.9230,0.0000000,0.0000000,270.0000000}, //[особняк]
	{785.4316406,-1153.4423828,20.0300,0.0000000,0.0000000,1.9995117}, //[особняк]

	{59.928001, -1533.542968, 4.499000, 0.000000, 0.000000, 0.000000}, //[блок пост] ЛС двері
	{-1401.375976, 823.627990, 46.742000, 0.000000, 0.000000, 50.000000}, //[блок пост] СФ двері
	{1796.286010, 816.505004, 11.206999, 0.000000, 0.000000, 90.000000}, //[блок пост] ЛВ двері

	{-1522.477172, 482.676055, 5.801178, 0.000000, 0.000000, 0.600036}, //[SFa] двері в армію

	{206.000000, 1796.644409, 17.745433, 0.000000, 0.000000, 0.000000}, //[lVa] ворота

	{1472.7091, 277.9277, 1013.7510,0.000,0.000,45.099}, //[FBI] дверь допроса

	{-87.517776, -1126.890502, 0.890990, 0.000000, 0.000007, 68.599983}, //[ТК] у АЗС
	{-486.344726, -562.425537, 25.272714, 0.000000, 0.000007, 0.000000}, //[ТК] у рибалки

	{ 2238.17749, 2450.42896, 10.63530,   0.00000, 0.00000, 90.00000}, //[LVPD] шлагбаум
	{-1572.19250, 658.78668, 6.78400,   0.00000, 0.00000, 89.87980}, //[SFPD] шлагбаум
	{-1701.42175, 687.79688, 24.53650,   0.00000, 0.00000, 269.86310}, //[SFPD] шлагбаум

	{1365.661376, 1066.767333, 1625.481933, 0.000022, 0.000000, 10.9999},//[ПД] двері в приміщення копів
	{1369.071411, 1064.577392, 1625.481933, 0.000000, 0.000022, -80.0000},//[ПД] двері до камери
	{1289.777709, -6.756979, 999.859863,  0.000000, 0.000000, -10.599975},//[ПД] двері до камери

	{1365.661376, 1066.767333, 1625.481933, 0.000022, 0.000000, 10.9999},//[ПД] двері в приміщення копів
	{1369.071411, 1064.577392, 1625.481933, 0.000000, 0.000022, -80.0000},//[ПД] двері до камерам
	{1289.777709, -6.756979, 999.859863,  0.000000, 0.000000, -10.599975},//[ПД] двері до камерам

	{117.6936, 2059.8333, 18.0361,  2.0000, 0.000000, 200.2399},//[LVa] ворота часть №2 | 50

	{651.7225, -1487.5088, 10.9653,  0.0000, 0.000000, 0.0000},//[Perfomanse] ворота №1 | 51
	{651.7225, -1477.1748, 10.9653,  0.0000, 0.000000, 0.0000},//[Perfomanse] ворота №2 | 52

	{2337.54028, 2446.61133, 5.6151,   0.00000, 0.00000, 60.00000}//[LVPD] шлагбаум | 53
};

enum alcatraz_object {
	alc_id,
	Float:alc_posX,
	Float:alc_posY,
	Float:alc_posZ,
	Float:alc_posRX,
	Float:alc_posRY,
	Float:alc_posRZ
}
new alcatraz[18][alcatraz_object] = {
	{-1,757.297851, 586.495361, 1063.594970, 0.000000, 0.000000, 180.000000},
	{-1,755.526367, 586.515380, 1063.594970, 0.000000, 0.000000, 0.000000},
	{-1,762.678710, 586.495361, 1063.594970, 0.000000, 0.000000, 0.000000},
	{-1,773.070312, 586.495361, 1063.594970, 0.000000, 0.000000, 0.000000},
	{-1,774.821289, 586.495361, 1063.594970, 0.000000, 0.000000, 180.000000},
	{-1,778.353271, 586.495361, 1063.594970, 0.000000, 0.000000, 0.000000},
	{-1,757.297851, 586.495361, 1067.225708, 0.000000, -0.000014, 180.000000},
	{-1,755.526367, 586.515380, 1067.225708, 0.000000, 0.000014, 0.000000},
	{-1,762.678710, 586.495361, 1067.225708, 0.000000, 0.000014, 0.000000},
	{-1,773.070312, 586.495361, 1067.225708, 0.000000, 0.000014, 0.000000},
	{-1,774.821289, 586.495361, 1067.225708, 0.000000, -0.000014, 180.000000},
	{-1,778.363281, 586.495361, 1067.225708, 0.000000, -0.000014, 180.000000},
	{-1,757.297851, 586.495361, 1070.856689, 0.000000, -0.000029, 180.000000},
	{-1,755.526367, 586.515380, 1070.856689, 0.000000, 0.000029, 0.000000},
	{-1,762.678710, 586.495361, 1070.856689, 0.000000, 0.000029, 0.000000},
	{-1,773.070312, 586.495361, 1070.856689, 0.000000, 0.000029, 0.000000},
	{-1,774.821289, 586.495361, 1070.856689, 0.000000, -0.000029, 180.000000},
	{-1,778.363281, 586.495361, 1070.856689, 0.000000, -0.000029, 180.000000}
};

new speed_timer[MAX_PLAYERS]={-1,...},
	PlayerText:speedometr[MAX_PLAYERS][16];

new addchet[MAX_PLAYERS];

new FirstBL[MAX_PLAYERS],
	UnbanName[MAX_PLAYERS][24];

new FirstReferal[MAX_PLAYERS];
new FirstFamily[MAX_PLAYERS];

new prod_id[MAX_PLAYERS];

new idaofcar[MAX_PLAYERS],
	nedded[MAX_PLAYERS];

new shotTime[MAX_PLAYERS],
	shot[MAX_PLAYERS];

new Text3D:gMenu[5],
	Text3D:mMenu[3],
	Text3D:gHealth[5];

new engine,
	lights,
	alarm,
	doors,
	bonnet,
	boot,
	objective;

new gPlaneCount;

new Float:PickupX[MAX_PLAYERS],
	Float:PickupY[MAX_PLAYERS],
	oldpickup[MAX_PLAYERS],
	timepickup[MAX_PLAYERS];

enum grzone {
	grid,
	Float:grX,
	Float:grY,
	Float:grZ,
	Float:grD,
	grName[50],
	grVirt
};
new GREENZONE[100][grzone], 
	TOTALZONE = 0;

new CountFloodForPlayer[MAX_PLAYERS];

new advertise_price,
	action_server[3];

new car_spawn[MAX_PLAYERS];

new house_car[MAX_PLAYERS][2],
	car_autoschool[MAX_PLAYERS];

new WantNickChange[MAX_PLAYERS][MAX_PLAYER_NAME];


new HealOffer[MAX_PLAYERS],
	HealPrice[MAX_PLAYERS];

new dostup[MAX_PLAYERS];
new jdostup[MAX_PLAYERS];

enum enter_info {
	tpName[50],
Float:tpEnterPos_X,
Float:tpEnterPos_Y,
Float:tpEnterPos_Z,
	tpEnterInt,
	tpEnterWorld,
Float:tpExitPos_X,
Float:tpExitPos_Y,
Float:tpExitPos_Z,
Float:tpExitPos_A,
	tpExitInt,
	tpExitWorld
}
new gTeleportsToD[TP_COUNT][enter_info] = { //saneka
	/*0*/{"Окружний завод",2688.7493,-2399.4126,13.6328,0,0,2692.4006,-2401.0337,13.4674,215.4410,0,0},//оружейный завод
	/*1*/{"Вихід на вулицю",2690.6274,-2399.3911,13.6328,0,0,2687.2502,-2399.4639,13.6328,91.9586,0,0},//оружейный завод
	/*2*/{"Лікарня м.ЛС",1172.5408,-1325.2740,15.4040,0,0,2187.5295,586.6940,1080.4542,177.1751,93,20},//МЧС ЛС
	/*3*/{"Вихід на вулицю",2187.6035,588.1922,1080.4542,93,20,1174.0408,-1325.2740,14.9922,270.0000,0,0},//МЧС ЛС
	/*4*/{"Лікарня м.СФ",-2655.1638,639.8657,14.4545,0,0,2187.5295,586.6940,1080.4542,177.1751,93,21},//МЧС СФ
	/*5*/{"Вихід на вулицю",2187.6035,588.1922,1080.4542,93,21,-2655.1638,638.3657,14.4531,180.0000,0,0},//МЧС СФ
	/*6*/{"Лікарня м.ЛВ",1607.3760,1815.9340,10.8203,0,0,2187.5295,586.6940,1080.4542,177.1751,93,22},//МЧС ЛВ
	/*7*/{"Вихід на вулицю",2187.6035,588.1922,1080.4542,93,22,1607.3848,1817.4340,10.8203,359.6633,0,0},//МЧС ЛВ
	/*8*/{"Ліфт",1477.4441,269.6796,1020.4249,75,43,-1959.8893,-1041.7974,53.3498,172.2229,0,0},//ФБР лифт и крыша
	/*9*/{"Вихід в офіс",-1959.7502,-1039.8644,53.3498,0,0,1478.5532,270.6894,1020.4249,312.3149,75,43},//ФБР лифт и крыша 3
	/*10*/{"Вхід на дах",1556.2736,489.0876,1070.4316,92,20,1161.5529,-1328.3661,31.4985,358.4099,0,0},//МЧС ЛС крыша
	/*11*/{"Спуск с даху",1161.5112,-1329.8655,31.4943,0,0,1556.3342,490.5883,1070.4316,359.5603,92,20},//МЧС ЛС крыша
	/*12*/{"Вхід на дах",1556.2736,489.0876,1070.4316,92,21,-2714.2036,629.6984,34.4028,180.1581,0,0},//МЧС СФ крыша
	/*13*/{"Спуск с даху",-2714.2078,631.1984,34.4028,0,0,1556.3342,490.5883,1070.4316,359.5603,92,21},//МЧС СФ крыша
	/*14*/{"Вхід на дах",1556.2736,489.0876,1070.4316,92,22,1608.4158,1787.6586,30.4688,1.2818,0,0},//МЧС ЛВ крыша
	/*15*/{"Спуск с даху",1608.4493,1786.1589,30.4688,0,0,1556.3342,490.5883,1070.4316,359.5603,92,22},//МЧС ЛВ крыша
	/*16*/{"Склад армії",273.9112,1817.0668,17.6709,0,0,316.4524,-168.3621,999.5938,2.1932,6,30},//ЛВА склад
	/*17*/{"Вихід на вулицю",316.3708,-169.8620,999.6010,6,30,273.6051,1818.5159,17.6709,4.8765,0,0},//ЛВА склад
	/*18*/{"Радіоцентр м.ЛС",1569.6614,-1334.6711,16.4844,0,0,715.5413,-1522.5265,1415.4099,269.5203,74,10},//LS News
	/*19*/{"Вихід на вулицю",714.0413,-1522.5139,1415.4099,74,10,1570.6003,-1333.5015,16.4844,321.2440,0,0},//LS News
	/*20*/{"Радіоцентр м.СФ",-2521.1753,-624.5951,132.7827,0,0,715.5413,-1522.5265,1415.4099,269.5203,74,11},//SF News
	/*21*/{"Вихід на вулицю",714.0413,-1522.5139,1415.4099,74,11,-2521.1445,-623.0954,132.7646,358.8209,0,0},//SF News
	/*22*/{"Радіоцентр м.ЛВ",2645.2136,1185.2959,10.8203,0,0,715.5413,-1522.5265,1415.4099,269.5203,74,12},//LV News
	/*23*/{"Вихід на вулицю",714.0413,-1522.5139,1415.4099,74,12,2645.1785,1183.7963,10.8203,178.6527,0,0},//LV News
	/*24*/{"Вхід в офіс",1548.6804,-1363.7773,326.2183,0,0,715.2758,-1518.7681,1415.4099,269.5436,74,10},//LS News крыша
	/*25*/{"Вихід на дах",713.7759,-1518.7561,1415.4099,74,10,1547.8295,-1365.0126,326.2109,145.4391,0,0},//LS News крыша
	/*26*/{"Поліцейський відділок м.ЛС",1555.1647,-1675.6324,16.1953,0,0,1360.5880,1075.1031,1626.4896,182.1617,99,40},//LSPD 1
	/*27*/{"Вихід на вулицю",1360.5315,1076.6021,1626.4896,99,40,1553.6647,-1675.6243,16.1953,89.6884,0,0},//LSPD 1
	/*28*/{"Поліцейський відідок м.ЛС",1568.6637,-1689.9839,6.2188,0,0,1368.6409,1079.4608,1626.4896,268.6192,99,40},//LSPD 2
	/*29*/{"Вихід на парковку",1367.1414,1079.4969,1626.4896,99,40,1568.6019,-1691.4827,5.8906,177.6423,0,0},//LSPD 2
	/*30*/{"Поліцейський відділок м.СФ",-1605.5975,710.3373,13.8672,0,0,1360.5880,1075.1031,1626.4896,182.1617,99,41},//SFPD 1
	/*31*/{"Вихід на вулицю",1360.5315,1076.6021,1626.4896,99,41,-1605.5238,711.8354,13.8672,357.1840,0,0},//SFPD 1
	/*32*/{"Поліцейський відділок м.СФ",-1594.1570,716.2018,-4.9063,0,0,1368.6409,1079.4608,1626.4896,268.6192,99,41},//SFPD 2
	/*33*/{"Вихід на парковку",1367.1414,1079.4969,1626.4896,99,41,-1592.6570,716.2032,-5.2422,270.0532,0,0},//SFPD 2
	/*34*/{"Поліцейський відділок м.ЛВ",2337.1853,2459.2725,14.9742,0,0,1360.5880,1075.1031,1626.4896,182.1617,99,42},//LVPD 1
	/*35*/{"Вихід на вулицю",1360.5315,1076.6021,1626.4896,99,42,2337.1318,2457.7734,14.9688,177.9557,0,0},//LVPD 1
	/*36*/{"Поліцейський відділок м.ЛВ",2297.0679,2451.4919,10.8203,0,0,1368.6409,1079.4608,1626.4896,268.6192,99,42},//LVPD 2
	/*37*/{"Вихід на парковку",1367.1414,1079.4969,1626.4896,99,42,2295.5681,2451.5195,10.8203,88.9447,0,0},//LVPD 2
	/*38*/{"FBI",-1972.5879,-1020.2689,32.1719,0,0,1473.1871,256.1753,1000.9760,1.2900,75,43},//FBI
	/*39*/{"Вихід на вулицю",1473.2209,254.6757,1000.9760,75,43,-1973.9132,-1019.5665,32.1767,62.0773,0,0},//FBI
	/*40*/{"Ліфт",1476.8506,269.2462,1000.9760,75,43,1475.5696,267.8936,1000.9760,163.5987,75,43},//FBI лифт 1
	/*41*/{"Ліфт",1479.9080,269.9504,1013.6290,75,43,1478.6017,268.4855,1013.6290,129.4297,75,43},//FBI лифт 2
	/*42*/{"Мерія",1481.0220,-1772.2487,18.7958,0,0,-1352.6627,1935.4337,1083.5835,182.0616,77,44},//мерія
	/*43*/{"Вихід на вулицю",-1352.7167,1936.9327,1083.5835,77,44,1481.0292,-1770.7487,18.7958,359.7233,0,0},//мерія
	/*44*/{"Автошкола",747.3283,-1379.0117,14.1992,0,0,-1229.4410,1589.0923,1112.6555,180.4347,76,45},//АШ
	/*45*/{"Вихід на вулицю",-1229.4524,1590.5923,1112.6555,76,45,747.2728,-1380.5107,14.2039,177.8809,0,0},//АШ
	/*46*/{"Банк м.ЛС",1684.5287,-1343.3507,17.4368,0,0,190.0802,-262.0420,1000.9766,182.5581,78,46},//БАНК ЛС
	/*47*/{"Вихід на вулицю",190.0132,-260.5435,1000.9766,78,46,1686.0278,-1343.3999,17.4316,268.1222,0,0},//БАНК ЛС
	/*48*/{"Банк м.СФ",-2351.1323,492.5963,30.8144,0,0,190.0802,-262.0420,1000.9766,182.5581,78,47},//БАНК СФ
	/*49*/{"Вихід на вулицю",190.0132,-260.5435,1000.9766,78,47,-2352.5913,492.9442,30.8510,76.5903,0,0},//БАНК СФ
	/*50*/{"Банк м.ЛВ",2577.4541,1325.8289,10.8203,0,0,190.0802,-262.0420,1000.9766,182.5581,78,48},//БАНК ЛВ
	/*51*/{"Вихід на вулицю",190.0132,-260.5435,1000.9766,78,48,2577.4856,1324.3292,10.8203,181.1994,0,0},//БАНК ЛВ
	/*52*/{"Італійська мафія",1455.8739,751.0579,11.0234,0,0,-1814.9398,-646.3951,1001.0999,269.3521,73,49},//LCN
	/*53*/{"Вихід на вулицю",-1816.4397,-646.3781,1001.0999,73,49,1454.3873,750.8578,11.0234,97.6668,0,0},//LCN
	/*54*/{"Японська мафія",2634.7048,1824.2144,11.0161,0,0,-1814.9398,-646.3951,1001.0999,269.3521,73,50},//Yakuza
	/*55*/{"Вихід на вулицю",-1816.4397,-646.3781,1001.0999,73,50,2633.2048,1824.2188,11.0234,89.8335,0,0},//Yakuza
	/*56*/{"Українська мафія",937.1491,1732.5082,8.8516,0,0,-1814.9398,-646.3951,1001.0999,269.3521,73,51},//RM
	/*57*/{"Вихід на вулицю",-1816.4397,-646.3781,1001.0999,73,51,938.6489,1732.5316,8.8516,270.8951,0,0},//RM
	/*58*/{"Ballas",1939.1348,-1114.5219,27.4523,0,0,1796.1089,722.6656,1072.5573,88.6611,95,52},//Ballas
	/*59*/{"Вихід на вулицю",1797.6085,722.6306,1072.5573,95,52,1939.1057,-1116.0216,27.2563,178.8924,0,0},//Ballas
	/*60*/{"Vagos",2756.3184,-1182.7939,69.4034,0,0,2687.8591,1760.5887,1215.7155,249.2060,98,53},//Vagos
	/*61*/{"Вихід на вулицю",2686.4568,1761.1212,1215.7155,98,53,2756.3188,-1181.2939,69.3966,359.9770,0,0},//Vagos
	/*62*/{"Grove",2495.4343,-1691.0961,14.7656,0,0,1965.1907,1321.8658,966.3950,88.7639,94,54},//Grove
	/*63*/{"Вихід на вулицю",1966.6903,1321.8335,966.3950,94,54,2495.4336,-1689.5961,14.5297,0.0239,0,0},//Grove
	/*64*/{"Aztecas",1673.6831,-2122.4465,14.1460,0,0,1555.3221,912.0717,924.0762,269.5025,96,55},//Aztec
	/*65*/{"Вихід на вулицю",1553.8221,912.0847,924.0762,96,55,1674.6377,-2121.2896,13.9337,320.4736,0,0},//Aztec
	/*66*/{"Rifa",2736.6187,-1952.5796,13.5469,0,0,1556.3812,734.0337,915.6003,181.1748,97,56},//Rifa
	/*67*/{"Вихід на вулицю",1556.3505,735.5334,915.6003,97,56,2735.1187,-1952.5778,13.5394,89.9284,0,0},//Rifa
	/*68*/{"Фабрика",783.4079,590.4982,1063.3656,85,203,1296.5531,2461.9744,1011.8739,266.0278,88,200},//алько на фабрику
	/*69*/{"Вихід з тюрьми",1295.0568,2462.0784,1011.8739,88,200,783.3878,588.9984,1063.3656,179.2337,85,203},//алько на фабрику
	/*70*/{"Столова",749.3672,590.5065,1063.3656,85,203,1201.7505,2285.2493,1008.9139,271.9579,87,201},//алько в столовку
	/*71*/{"Вихід з тюрми",1200.2513,2285.1980,1008.9139,87,201,749.4456,589.0085,1063.3656,182.9937,85,203},//алько в столовку
	/*72*/{"Білий дім",1123.0260,-2036.9426,69.8938,0,0,1749.4689,1381.5963,1095.3185,179.9072,83,57},//Білий дім
	/*73*/{"Вихід на вулицю",1749.4713,1383.0963,1095.3185,83,57,1124.5255,-2036.9797,69.8839,268.5813,0,0},//Білий дім
	/*74*/{"Центр розваг",2227.2017,1837.1248,10.8203,0,0,833.0818,7.3694,1004.1797,92.8519,3,200},//Центр розваг
	/*75*/{"Вихід на вулицю",834.6312,7.3997,1004.1870,3,200,2225.7490,1837.1133,10.8203,93.2120,0,0},//Центр розваг
	/*76*/{"Казино",2166.0955,2165.0505,10.8203,0,0,2058.7952,1713.0632,1113.7751,264.9474,88,58},//казино
	/*77*/{"Вихід на вулицю",2057.3010,1713.1953,1113.7751,88,58,2165.5325,2163.6602,10.8203,157.9600,0,0},//казино
	/*78*/{"Казарма",-1373.0016,498.9899,11.1953,0,0,252.6794,103.3473,1024.3394,358.6109,87,59},//казарма Армія сф
	/*79*/{"Вихід на вулицю",252.6430,101.8477,1024.3394,87,59,-1371.5020,499.0244,11.1953,271.3166,0,0},//казарма Армія сф
	/*80*/{"Казарма",220.0600,1826.5244,18.3659,0,0,252.6794,103.3473,1024.3394,358.6109,87,60},//казарма Армія лв
	/*81*/{"Вихід на вулицю",252.6430,101.8477,1024.3394,87,60,223.6162,1826.3533,17.6790,268.2764,0,0},//казарма Армія лв
	/*82*/{"Штаб",284.5887,1988.8895,17.8456,0,0,758.8699,-2.7475,1151.9795,270.5926,89,61},//штаб Армія лв
	/*83*/{"Вихід на вулицю",757.3700,-2.7630,1151.9795,89,61,286.0011,1988.3844,17.8456,250.3196,0,0},//штаб Армія лв
	/*84*/{"Лабораторія",-1797.6656,-643.4174,1001.0859,73,49,1634.6228,995.3404,1475.6283,86.9213,100,49},//лаборатория LCN
	/*85*/{"Вихід з дому",1636.1206,995.2598,1475.6283,100,49,-1797.7463,-644.9152,1001.0959,176.9179,73,49},//лаборатория LCN
	/*86*/{"Військомат",-319.5402,1048.2900,20.3403,0,0,2464.2158,1343.0038,3015.3784,270.0906,84,63},//Военкомат
	/*87*/{"Вихід на вулицю",2462.7158,1343.0015,3015.3784,84,63,-319.4800,1049.7888,20.3403,357.7003,0,0},//Военкомат
	/*88*/{"Склад",-1297.0609,386.1711,6.9661,0,0,316.4528,-168.3600,999.5938,359.9998,6,31},//СФ склад
	/*89*/{"Вихід на вулицю",316.3708,-169.8620,999.6010,6,31,-1298.2955,387.0706,6.9661,54.4037,0,0},//СФ склад
	/*90*/{"Наркопритон",2165.9673,-1671.2290,15.0732,21,21,318.6192,1116.0261,1083.8828,359.4771,5,32},//наркопритон
	/*91*/{"Вихід на вулицю",318.6055,1114.5262,1083.8828,5,32,2167.0911,-1672.2224,15.0753,228.5259,0,0},//наркопритон
	/*92*/{"Воєнний госпіталь",127.5178,1859.4353,17.7644,0,0,311.2815,2059.5583,1014.3731,86.4105,90,33},//госпиталь ЛВа
	/*93*/{"Вихід на вулицю",312.7786,2059.4644,1014.3731,90,33,128.9837,1859.1173,17.7625,257.7589,0,0},//госпиталь ЛВа
	/*94*/{"Воєнний госпіталь",-1297.0643,402.0823,6.9661,0,0,311.2815,2059.5583,1014.3731,86.4105,90,34},//госпиталь СФа
	/*95*/{"Вихід на вулицю",312.7786,2059.4644,1014.3731,90,34,-1298.3687,402.8231,6.9661,60.4037,0,0},//госпиталь СФа
	/*96*/{"Вертолітна площадка",1524.5486,-1677.9193,6.2188,0,0,1565.1028,-1665.4083,28.3956,355.3339,0,0},//верт LSPD
	/*97*/{"Вихід в гараж",1564.9807,-1666.9033,28.3956,0,0,1526.0479,-1677.9672,5.8906,268.1730,0,0},//верт LSPD
	/*98*/{"Вертолітна площадка",2297.0544,2468.7280,10.8203,0,0,2278.1699,2459.6155,38.6837,358.3989,0,0},//верт LVPD
	/*99*/{"Вихід в гараж",2278.1279,2458.1160,38.6837,0,0,2295.5579,2468.8276,10.8203,86.1956,0,0},//верт LVPD
	/*100*/{"Склад",2714.1404,-2445.1436,13.6400,1,15,316.4528,-168.3642,999.5938,356.8665,6,35},//склад оружейный завод
	/*101*/{"Вихід на вулицю",316.3708,-169.8620,999.6010,6,35,2712.6416,-2445.0813,13.6399,87.6178,0,0},//склад оружейный завод
	/*102*/{"Ліфт",2185.3337,568.6909,1080.4542,93,20,1552.2980,490.5710,1070.4316,359.2470,92,20},//МЧС ЛС 2 этаж
	/*103*/{"Ліфт",1552.2783,489.0711,1070.4316,92,20,2185.3396,570.1909,1080.4542,359.7798,93,20},//МЧС ЛС 2 этаж
	/*104*/{"Ліфт",2185.3337,568.6909,1080.4542,93,21,1552.2980,490.5710,1070.4316,359.2470,92,21},//МЧС СФ 2 этаж
	/*105*/{"Ліфт",1552.2783,489.0711,1070.4316,92,21,2185.3396,570.1909,1080.4542,359.7798,93,21},//МЧС СФ 2 этаж
	/*106*/{"Ліфт",2185.3337,568.6909,1080.4542,93,22,1552.2980,490.5710,1070.4316,359.2470,92,22},//МЧС ЛВ 2 этаж
	/*107*/{"Ліфт",1552.2783,489.0711,1070.4316,92,22,2185.3396,570.1909,1080.4542,359.7798,93,22},//МЧС ЛВ 2 этаж
	/*108*/{"Лабораторія",-1797.6656,-643.4174,1001.0859,73,50,1634.6228,995.3404,1475.6283,86.9213,100,50},//лаборатория Yakuza
	/*109*/{"Вихід з дому",1636.1206,995.2598,1475.6283,100,50,-1797.7463,-644.9152,1001.0959,176.9179,73,50},//лаборатория Yakuza
	/*110*/{"Лабораторія",-1797.6656,-643.4174,1001.0859,73,51,1634.6228,995.3404,1475.6283,86.9213,100,51},//лаборатория RM
	/*111*/{"Вихід з дому",1636.1206,995.2598,1475.6283,100,51,-1797.7463,-644.9152,1001.0959,176.9179,73,51},//лаборатория RM
	/*112*/{"Тир",305.3506,-141.8417,1004.0625,7,66,302.9281,-141.8477,1004.0625,15.1908,7,500},//ТИР ЛС
	/*113*/{"Вихід",304.5872,-141.9285,1004.0625,7,500,307.0656,-141.2360,1004.0625,293.4333,7,66},//ТИР ЛС выход
	/*114*/{"Тир",286.1431,-29.8190,1001.5156,1,67,286.1431,-27.2179,1001.5156,279.9366,1,500},//ТИР СФ
	/*115*/{"Вихід",286.0357,-29.1079,1001.5156,1,500,286.1418,-31.4886,1001.5156,179.6914,1,67},//ТИР СФ выход
	/*116*/{"Тир",301.7687,-76.5397,1001.5156,4,68,301.6959,-73.8680,1001.5156,357.5736,4,500},//ТИР ЛВ
	/*117*/{"Вихід",301.7337,-75.6934,1001.5156,4,500,301.6580,-78.1741,1001.5156,116.3515,4,68},//ТИР ЛВ выход
	/*118*/{"Тир",306.3994,-159.1899,999.5938,6,31,303.5488,-159.0396,999.5938,88.3483,6,31},//ТИР CФа вход
	/*119*/{"Вихід",305.6983,-159.1528,999.5938,6,31,307.9801,-159.6936,999.5938,262.3747,6,31},//ТИР CФа выход
	/*120*/{"Тир",1760.3450,724.2971,1071.0692,95,52,336.0217,-29.9183,997.8625,88.1146,95,52},//ТИР Ballas вход
	/*121*/{"Вихід",337.4296,-29.7989,997.8625,95,52,1760.3148,726.3054,1071.0692,358.7480,95,52},//ТИР Ballas вход
	/*122*/{"Тир",1569.0374,897.9334,924.2578,96,55,336.0217,-29.9183,997.8625,88.1146,96,55},//ТИР Aztec вход
	/*123*/{"Вихід",337.4296,-29.7989,997.8625,96,55,1567.3612,897.7423,924.2578,89.6479,96,55},//ТИР Aztec выход
	/*124*/{"Тир",1954.3213,1341.0316,966.4043,94,54,336.0217,-29.9183,997.8625,88.1146,94,54},//ТИР Grove вход
	/*125*/{"Вихід",337.4296,-29.7989,997.8625,94,54,1952.7927,1341.0491,966.4043,88.2306,94,54},//ТИР Grove выход
	/*126*/{"Тир",2714.0208,1756.1503,1215.7363,98,53,336.0217,-29.9183,997.8625,88.1146,98,53},//ТИР Vagos вход
	/*127*/{"Вихід",337.4296,-29.7989,997.8625,98,53,2712.5549,1756.0474,1215.7363,87.2578,98,53},//ТИР Vagos выход
	/*128*/{"Тир",1548.9573,716.2450,915.6003,97,56,336.0217,-29.9183,997.8625,88.1146,97,56},//ТИР Rifa вход
	/*129*/{"Вихід",337.4296,-29.7989,997.8625,97,56,1550.2424,716.2040,915.6003,269.8958,97,56},//ТИР Rifa выход
	/*130*/{"Тир",1578.3342,-1690.6177,6.2188,0,0,259.8334,-29.5117,1001.1633,93.7385,1,12},//ТИР LSPD вход
	/*131*/{"Вихід",261.1749,-29.6252,1001.1633,1,12,1578.2947,-1692.4899,6.2188,181.1595,0,0},//ТИР LSPD выход
	/*132*/{"Тир",-1606.3071,672.0612,-4.9063,0,0,259.8334,-29.5117,1001.1633,93.7385,1,13},//ТИР LSPD вход
	/*133*/{"Вихід",261.1749,-29.6252,1001.1633,1,13,-1606.8217,673.8746,-5.2422,359.3306,0,0},//ТИР LSPD выход
	/*134*/{"Тир",306.3991,-159.1039,999.5938,6,30,259.8334,-29.5117,1001.1633,93.7385,6,30},//ТИР LSPD вход
	/*135*/{"Вихід",261.1749,-29.6252,1001.1633,6,30,308.1745,-160.1824,999.5938,269.1558,6,30},//ТИР LSPD выход
	/*136*/{"Лотарея SAMP UKRAINE",-2027.9096,-41.4249,38.8046,0,0,2306.5451,-15.4280,26.7495,269.5188,0,0},//Лотарея
	/*137*/{"Вихід",2304.6735,-16.0450,26.7421,0,0,-2027.4450,-44.2704,38.6244,182.1308,0,0}//Лотарея вихід
};
new TeleportPickup[sizeof(gTeleportsToD)] = {-1, ...};
// ПІКАПИ
new Float:gPickup[PICKUPS_COUNT][3] ={//saneka
	/*0*/{-1230.9048,1562.7113,1114.0768},//автошкола ПДД
	/*1*/{-1345.7128,1923.3552,1083.5632},//мерія працевлаштування
	/*2*/{-1231.1458,1578.9156,1112.6555},//АШ покупка ліцензій
	/*3*/{1406.7494,-15.8215,1000.9215},//готель вихід
	/*4*/{1398.1952,-6.5419,1000.9082},//готель ресепшн
	/*5*/{1393.9543,-16.6323,1000.9181},//готель ліфт 1
	/*6*/{159.7930,-16.2426,1002.1111},//готель ліфт 2
	/*7*/{1555.9406,517.9673,1070.4316},//медкарта
	/*8*/{1552.5643,517.7847,1070.4458},//зміна статі
	/*9*/{2093.6831,1702.3396,1115.9095},//казино роздягальня
	/*10*/{1991.0575,-2019.8975,13.5708},//допомога по грі спавн ЛС
	/*11*/{1755.7896,-1906.6122,13.5655},//допомога по грі спавн ЖД ЛС
	/*12*/{1991.0269,-2016.5814,13.5708},//бесплатна їда спавн ЛС
	/*13*/{1764.2025,-1888.0032,13.5545},//бесплатна їда спавн ЖД ЛС
	/*14*/{1356.6272,1072.1150,1626.4896},//здача із повинною, ПД
	/*15*/{2409.4675,-40.0383,1029.6404},//Інформація ПО бізнесу таксопарку
	/*16*/{1611.4082,997.8234,1475.6283},//лабораторія аренда робочих
	/*17*/{822.1746,1.8579,1004.1797},//божевільні війни 
	/*18*/{1749.4655,1335.9310,1099.2771},//економіка Білий дім
	/*19*/{2692.3264,-2413.4194,13.6328},//[оружейный завод] роздягальня
	/*20*/{2696.0183,-2413.3420,13.6328},//[оружейный завод] заготовка
	/*21*/{277.5458,1435.3368,10.6189},//[нефтезавод] раздевалка
	/*22*/{-111.1846,-4.5949,3.1172},//[Ферма] ящик
	/*23*/{-109.3539,0.2345,3.1172},//[Ферма] лійка
	/*24*/{-105.3219,1.0389,3.1172},//[Ферма] роздягальня
	/*25*/{-1352.7748,1927.4169,1083.5835},//[мерія] инфо о штаті
	/*26*/{1373.1304,1056.9905,1626.4896},//[ПД] видача зброї
	/*27*/{1466.5757,254.6239,1013.5259},//[ФБР] видача зброї
	/*28*/{312.4538,-168.7225,999.5938},//[Армии] видача зброї
	/*29*/{1358.4679,1072.0204,1626.4896},//[ПД] отримання номерів на машини
	/*30*/{1297.9482,2464.1494,1011.8739},//[Alcotraz] заготовка
	/*31*/{1296.6395,2441.2144,1011.8739},//[Alcotraz] склад
	/*32*/{1376.0228,1057.0640,1626.4896},//[Роздягальня] Поліція
	/*33*/{1475.4526,246.3277,1013.5359},//[Роздягальня] ФБР
	/*34*/{2172.9651,571.7098,1080.4542},//[Роздягальня] МЧС
	/*35*/{255.6401,108.7532,1024.3394},//[Роздягальня] Армії
	/*36*/{766.9981,-1504.1729,1417.8119},//[Роздягальня] NEWS
	/*37*/{1734.7340,1366.4283,1095.3182},//[Роздягальня] Білий дім
	/*38*/{-1343.7766,1924.0858,1083.5632},//Покупка сім'ї
	/*39*/{765.9391,11.4027,1000.7066},//[Спорт-зал] Інфо
	/*40*/{1731.3005,1372.8398,1095.3182},//[Білий дім] Видача зброї
	/*41*/{-511.7016,-1571.1439,10.3160},//[лісопилка] Роздягальня 
	/*42*/{822.0084,6.3995,1004.1797},//[МЧС] Лікування
	/*43*/{1469.0585,258.9203,1013.5259},//[FBI] Маскування
	/*44*/{1758.4182,728.0562,1071.0692},//[Ballas] склад
	/*45*/{2707.5825,1761.0266,1215.7363},//[Vagos] склад
	/*46*/{1951.9347,1342.9095,966.4043},//[Grove] склад
	/*47*/{1559.0104,889.8791,922.4379},//[Aztec] склад
	/*48*/{1553.2108,707.3284,915.6003},//[Rifa] склад
	/*49*/{-1793.8373,-671.8163,991.4554},//[Мафія] склад
	/*50*/{187.8701,-274.7375,1000.9766},//[Банк] послуги
	/*51*/{187.2302,-272.9705,1000.9766},//[Банк] послуги
	/*52*/{185.9120,-269.3565,1000.9766},//[Банк] оплата нерухомості
	/*53*/{186.5228,-271.0347,1000.9766},//[Банк] оплата штрафів

	/*54*/{1111.7571,-1771.2794,894.0478},//[вихід с гаража] N
	/*55*/{1045.7643,-1780.6997,894.0478},//[вихід с гаража] D
	/*56*/{1112.3341,-1858.3147,894.0478},//[вихід с гаража] B
	/*57*/{1052.9872,-1851.4395,894.0478},//[вихід с гаража] A
	/*58*/{1451.0068,702.5929,1087.9011},//[автосалон] вихід

	/*59*/{822.0088,4.1138,1004.1797},//[гонки] реєстрація

	/*60*/{1405.1508,-30.1729,1000.8589},//[готель] вхід на парковку
	/*61*/{1680.0447,696.4232,589.8863},//[гонки] вихід із парковки в готель

	/*62*/{1779.6661,715.8765,1072.5573},//[Ballas] аптечка
	/*63*/{2687.0530,1750.3890,1215.7085},//[Vagos] аптечка
	/*64*/{1940.9451,1324.0303,966.4050},//[Grove] аптечка
	/*65*/{1552.7271,921.2464,924.0771},//[Aztec] аптечка
	/*66*/{1570.2238,723.8939,915.6011},//[Rifa] аптечка

	/*67*/{-1346.5437,364.5526,7.1875},//СФА тир
	/*68*/{303.3796,-127.7514,1004.0},//аммо тир лс
	/*69*/{297.9763,-27.7321,1001.5156},//аммо тир сф 
	/*70*/{294.4863,-59.0796,1001.5156},//аммо тир лв
	/*71*/{336.5639,-18.4006,997.8625},//аммо тир ballas
	/*72*/{336.5639,-18.4006,997.8625},//аммо тир aztec
	/*73*/{336.5639,-18.4006,997.8625},//аммо тир grove
	/*74*/{336.5639,-18.4006,997.8625},//аммо тир vagos
	/*75*/{336.5639,-18.4006,997.8625},//аммо тир rifa
	/*76*/{260.2811,-17.7656,1001.1633},//аммо тир lspd
	/*77*/{260.2811,-17.7656,1001.1633},//аммо тир sfpd
	/*78*/{260.2811,-17.7656,1001.1633},//аммо тир Lva

	/*79*/{1937.6501,-1124.6125,26.6159},//ballas top
	/*80*/{2748.9026,-1175.2101,69.4068},//vagos top
	/*81*/{2492.4402,-1687.0853,13.5132},//grove top
	/*82*/{1677.6838,-2124.1843,13.5469},//aztec top
	/*83*/{2731.1826,-1956.2351,13.5469},//rifa top

	/*84*/{-539.6769,-1585.4095,10.3110},//лісопилка unload 1
	/*85*/{-531.6503,-1585.4089,10.3110},//лісопилка unload 2
	
	/*86*/{-1983.9254,115.2340,27.1047},//Оренда скутерів СФ
	/*87*/{1792.5720,-1902.5563,12.6985},//Оренда скутерів ЛС 1
	/*88*/{1976.3082,-2015.0521,12.6894}//Оренда скутерів ЛС 2
};
new gPickupData[PICKUPS_COUNT][3] ={	//int | svit || id
	{76,45,1239},//0
	{77,44,1239},//1
	{76,45,1239},//2
	{79,-1,1318},//3
	{79,-1,1239},//4
	{-1,-1,19130},//5
	{-1,-1,19130},//6
	{92,-1,11736},//7
	{92,-1,1314},//8
	{88,58,1275},//9
	{0,0,18631},//10
	{0,0,18631},//11
	{0,0,2663},//12
	{0,0,19811},//13
	{99,-1,1247},//14
	{-1,-1,1239},//15
	{100,-1,1239},//16
	{3,200,1314},//17
	{83,57,1239},//18
	{0,0,1275},//19
	{0,0,1239},//20
	{0,0,1275},//21
	{0,0,19639},//22
	{0,0,19621},//23
	{0,0,1275},//24
	{77,44,1239},//25
	{99,-1,2044},//26
	{75,43,2044},//27
	{6,-1,2044},//28
	{99,-1,1239},//29
	{88,200,1239},//30
	{88,200,2386},//31

	{99,-1,1275},//32
	{75,43,1275},//33
	{93,-1,1275},//34
	{87,-1,1275},//35
	{74,-1,1275},//36
	{83,57,1275},//37
	{77,44,1314},//38 покупка сім'ї
	{-1,-1,1239},//39
	{83,57,2044},//40
	{0,0,1275},//41
	{3,200,1314},//42
	{75,43,1275},//43
	{95,52,11745},//44
	{98,53,11745},//45
	{94,54,11745},//46
	{96,55,11745},//47
	{97,56,11745},//48
	{73,-1,11745},//49

	{78,-1,1274},//50
	{78,-1,1274},//51
	{78,-1,1274},//52
	{78,-1,1274},//53

	{-1,-1,1318},//54
	{-1,-1,1318},//55
	{-1,-1,1318},//56
	{-1,-1,1318},//57
	{-1,-1,1318},//58

	{3,200,1314},//59

	{79,-1,1318},//60
	{101,-1,1318},//61

	{95,52,1240},//62
	{98,53,1240},//63
	{94,54,1240},//64
	{96,55,1240},//65
	{97,56,1240},//66

	{0,0,2061},//67
	{7,500,2061},//68
	{1,500,2061},//69
	{4,500,2061},//63
	{95,52,2061},//70
	{96,55,2061},//71
	{94,54,2061},//72
	{98,53,2061},//73
	{97,56,2061},//74
	{1,12,2061},//75
	{1,13,2061},//76
	{6,30,2061},//77

	{0,0,1239},//78
	{0,0,1239},//79
	{0,0,1239},//80
	{0,0,1239},//81
	{0,0,1239},//82

	{0,0,19198},//83
	{0,0,19198},//84
	{0,0,18696},//85
	{0,0,18696},//86
	{0,0,18696}//87
};
enum pick3dtext {
	picName[64],
	picColor[36]
}
new gPickupDataName[PICKUPS_COUNT][pick3dtext] ={//3dText || color
	{"Правила Дорожнього Руху",CGOLD},//0
	{"Працевлаштування",CGOLD},//1
	{"Покупка ліцензій",CGOLD},//2
	{"Вихід на вулицю",CGOLD},//3
	{"Ресепшн",CGOLD},//4
	{"Ліфт",CGOLD},//5
	{"Ліфт",CGOLD},//6
	{"Получення мед карти",CGOLD},//7
	{"Зміна статі",CGOLD},//8
	{"Роздягальня",CGOLD},//9
	{"FAQ",CGOLD},//10
	{"FAQ",CGOLD},//11
	{"Безплатна їжа",CGOLD},//12
	{"Безплатна їжа",CGOLD},//13
	{"Здача з повинною",CGOLD},//14
	{"Інформація",CGOLD},//15
	{"Найм робочих",CGOLD},//16
	{"Божевільні війни",CGOLD},//17
	{"Керування штатом",CGOLD},//18
	{"Роздягальня",CGOLD},//19
	{"Заготовка",CGOLD},//20
	{"Роздягальня",CGOLD},//21
	{"Ящик для збору яблук",CGOLD},//22
	{"Лійка",CGOLD},//23
	{"Роздягальня",CGOLD},//24
	{"Інформація про штат",CGOLD},//25
	{"Зброя",CGOLD},//26
	{"Зброя",CGOLD},//27
	{"Зброя",CGOLD},//28
	{"Отримання номерів на Т/С",CGOLD},//29
	{"Заготовка",CGOLD},//30
	{"Склад",CGOLD},//31

	{"Роздягальня",CGOLD},//32
	{"Роздягальня",CGOLD},//33
	{"Роздягальня",CGOLD},//34
	{"Роздягальня",CGOLD},//35
	{"Роздягальня",CGOLD},//36
	{"Роздягальня",CGOLD},//37
	{"Сім'я",CGOLD},//38
	{"Інформація",CGOLD},//39
	{"Зброя",CGOLD},//40
	{"Роздягальня",CGOLD},//41
	{"Голодні ігри",CGOLD},//42
	{"Маскіровка",CGOLD},//43
	{"None",CGOLD},//44
	{"None",CGOLD},//45
	{"None",CGOLD},//46
	{"None",CGOLD},//47
	{"None",CGOLD},//48
	{"None",CGOLD},//49

	{"Банківські послуги",CGOLD},//50
	{"Банківські послуги",CGOLD},//51
	{"Оплата нерухомості",CGOLD},//52
	{"Оплата штрафів",CGOLD},//53

	{"None",CGOLD},//54
	{"None",CGOLD},//55
	{"None",CGOLD},//56
	{"None",CGOLD},//57
	{"None",CGOLD},//58

	{"Божевільні гонки",CGOLD},//59

	{"Вхід на парковку",CGOLD},//60
	{"Вхід в отель",CGOLD},//61

	{"None",CGOLD},//62
	{"None",CGOLD},//63
	{"None",CGOLD},//64
	{"None",CGOLD},//65
	{"None",CGOLD},//66

	{"Почати тренування",CGOLD},//67
	{"Почати тренування",CGOLD},//68
	{"Почати тренування",CGOLD},//69
	{"Почати тренування",CGOLD},//70
	{"Почати тренування",CGOLD},//71
	{"Почати тренування",CGOLD},//72
	{"Почати тренування",CGOLD},//73
	{"Почати тренування",CGOLD},//74
	{"Почати тренування",CGOLD},//75
	{"Почати тренування",CGOLD},//76
	{"Почати тренування",CGOLD},//77
	{"Почати тренування",CGOLD},//78

	{"Інформація",CGOLD},//79
	{"Інформація",CGOLD},//80
	{"Інформація",CGOLD},//81
	{"Інформація",CGOLD},//82
	{"Інформація",CGOLD},//83

	{"None",CGOLD},//84
	{"None",CGOLD},//85
	
	{""W"ОРЕНДА\n\
	"YELLOW"СКУТЕРІВ",YELLOW},//86
	
	{""W"ОРЕНДА\n\
	"YELLOW"СКУТЕРІВ",YELLOW},//87
	
	{""W"ОРЕНДА\n\
	"YELLOW"СКУТЕРІВ",YELLOW}//88
};

new gPickID[sizeof(gPickup)] = {-1, ...};
CB: Float:GetDistanceBetweenPlayers(p1,p2) {
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

enum carInfo {
	carID[2],
	carModel[2],
	carOwner[2],
	carColor_one[2],
	carColor_two[2],
	Float:carDrived[2],
	Float:carFuel[2],
	carVehcom_1[2],
	carVehcom_2[2],
	carVehcom_3[2],
	carVehcom_4[2],
	carVehcom_5[2],
	carVehcom_6[2],
	carVehcom_7[2],
	carVehcom_8[2],
	carVehcom_9[2],
	carVehcom_10[2],
	carVehcom_11[2],
	carVehcom_12[2],
	carVehcom_13[2],
	carVehcom_14[2],
	carOpen[2],
	carNarko[2],
	carDeagle[2],
	carM4[2],
	carAK47[2],
	carShot[2],
	carKanistra[2],
	carMats[2],
	carPaintJob[2],
	carPEngine_1[2],
	carPEngine_2[2],
	carPEngine_3[2],
	carPEngine_4[2],
	carPEngine_5[2],
	carPBrake_1[2],
	carPBrake_2[2],
	carPBrake_3[2],
	carPBrake_4[2],
	carPBrake_5[2]
};
new gPlayerCars[MAX_PLAYERS][carInfo],
	NumberVehicle[MAX_PLAYERS][2][10],
	OwnerVehicle[MAX_PLAYERS][2][MAX_PLAYER_NAME];

enum trunkInfo {
	tGun[4],
	tDrugs,
	tMats,
	tNarko,
	tKanistra,
	tOpen
};
new TrunkInfo[MAX_VEHICLES][trunkInfo];

new player_ip[MAX_PLAYERS][16],
	player_ip_check[MAX_PLAYERS][16],
	player_name[MAX_PLAYERS][24],
	player_pass[MAX_PLAYERS][64];

/*enum full_info
{
	fLevel,
	fDay,
	fMonth,
	fYear,
	fAppoint
};
new FullInfo[MAX_PLAYERS][full_info];*/

//Радіоведущі//DJ
new DJlvl[MAX_PLAYERS];
new DJname[MAX_PLAYERS][25];
new DJmsg;

enum tInfo {
	tAFK,
	tSelectHouse,
	bool:tInHouse,
	bool:tTPpick,
	bool:tLogin,
	bool:tJoined,
	bool:tPhone,
	bool:tSpawn,
	bool:tSpectate,

	tSelectedBusinessID,

	tStoreGun,

	tArendaCar,
	tTaxiPrice,
	tTaxiTurn,
	bool:tTaxiGoing,
	Float:tTaxiStart,
	tTaxiPass,
	tSalonInfo[2],
	tKubik,
	tSpectr,
	preOrg,
	preOrgg,
	Float:Admin_X,
	Float:Admin_Y,
	Float:Admin_Z,
	pOldSkin,
	bool:tDialog,
	tPhoneCalled,
	tPhoneCaller,
	bool:tPhoneNews,
	bool:tTazer,
	tCuffedTime,
	tCuffed,
	bool:tTied,
	bool:tGag,
	tGagTime,
	tSpcarTime,
	bool:tEther,
	bool:tJobOil[2],//0 - робота, 1 - объект
	tJobSalary,
	tGunArea[4],// 0 - gungs_arena, 1 - KillsGun, 2 - KillsAll, 3 - NextGun
	tDMArea[3], // 0 - dm_arena, 1 - KillsPlayer, 2 - DeathsPlayer
	tJobSad[4], // 0 - sad_work, 1 - use_sad, sad_kg,sad_all
	tJobGun[3], // 0 - job_gun, 1 - gun_blank, 2 - gun_collected
	tJobWood[4], // 0 - wood_work, 1 - WoodCheckpointTop, 2 - WoodDrop, 3 - PlayerUseBox
	bool:tBlockWars,
	tMaskTime,
	tMask,
	tLoginTime,
	tAlcotraz[3], // 0 - alcatraz_time,1 - alcatraz_maniken, 2 - alcatraz_knife
	tTrucker[4], // 0 - quantity_tk, 1 - tk_unload, 2 - tk_unload_price, 3 - attach_trailer_2
	tOilObject,
	tTazers[3], // 0 - tazertime, 1 - tazershot, 2 - player
	bool:tPhoneOnline,
	tFight,
	bool:tGym,
	tClothesWork[2],// 0 - робота, 1 - заготовка
	tProcess[2],// 0 - виконано, 2 - максимум
	tDuel,
	tDuelLobby,
	tArendKey,
	bool:tShowKeys,
	tAntiDM,
	tMasked,
	tFakePass,
	Float:tGyms,
	tGymSkill,
	tNewYear[2],
	bool:tHeal,
	bool:tEnter[MAX_FRACTIONS+1],
	tAutoSchool,
	loadingMode,
	loadingModelPlayer,
	tACflood,
	bool:tHelperDuty,
	bool:tSelectSkin,
	tUpdate,
	Float:tArmour,
	tCashDM,
	tCashRace,
	tDiceID,
	tDiceIDs,
	tDiceMoney,
	bool:tDiceClosed,
	tDiceTime,
	bool:tTir,
	tSLimit,
	tVirtualWorld,
	tInterior,
	tRaceID,
	tRaceMoney,
	tRaceRandom,
	tRaceCP,
	tLastSpawn,
	tYoutubcar
}
new TI[MAX_PLAYERS][tInfo];

enum action_info {
	act_skill,
	act_exp,
	act_sport,
	act_mp,
	act_gun,
	act_fish,
	act_renthotel,
	act_buyskin,
	act_buycar,
	act_rentcar,
	act_buylic,
	act_buyimprove,
	act_disease,
	act_changesex,
	act_medcard,
	act_buynubmbercar,
	act_perfomance,
	act_tune,
	act_timerullet,
	act_promocode,
	act_payday,
	act_donate,
	act_level,
	act_time,
	act_select
}
new BonusInfo[action_info];

stock D(playerid, dialogid, style, caption[], info[], button1[], button2[]) {
	if(!TI[playerid][tLogin]) {
		if(dialogid != 0 && dialogid != 1 && dialogid != 2 && dialogid != 3 && dialogid != 4 && dialogid != 402 && dialogid != 463) Kick(playerid);
	}
	//if(TI[playerid][tHeal]) TI[playerid][tHeal] = false;
	TI[playerid][tDialog] = true;
	if(OldDialogID[playerid] == INVALID_DIALOG_ID) PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	OldDialogID[playerid] = dialogid;
	return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}
stock IsVehicleOccupied(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	}
	return 0;
}
stock SendMedic(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
		if(IsAMedic(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendMafia(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
		if(IsAMafia(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendArmy(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
		if(IsAArm(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendCop(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
		if(IsACop(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendNews(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
		if(IsANews(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock SendBand(color,const str[]) {
	foreach(new x:Player) {
		if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
		if(IsAGang(x)) SendClientMessage(x,color,str);
	}
	return 1;
}
stock IsVehicleOccupiedTaxi(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPlayerVehicleSeat(vehicleid) == 0) continue;
		if(IsPlayerInVehicle(i, vehicleid))
		return true;
	}
	return false;
}
/*============================================================================*/
new GunPlayer[MAX_PLAYERS][13][2];
new AC_GunCheattime[MAX_PLAYERS]={0,...};
stock GetWeaponSlot(weaponid) {
	switch(weaponid) {
		case 0,1:return 0;
		case 2..9:return 1;
		case 22..24:return 2;
		case 25..27:return 3;
		case 28,29,32:return 4;
		case 30,31:return 5;
		case 33,34:return 6;
		case 35..38:return 7;
		case 16..18,39:return 8;
		case 41..43:return 9;
		case 10..15:return 10;
		case 44..46:return 11;
		case 40:return 12;
	}
	return -1;
}
stock IsValidWeaponID(weaponid) {                                               // Проверка на существующее зброю
	if((weaponid > 0 && weaponid < 19) || (weaponid > 21 && weaponid < 47)) {
		return true;
	}
	return false;
}
stock AC_GivePlayerWeapon(playerid, weaponid, ammo) {
	if(IsPlayerConnected(playerid) && IsValidWeaponID(weaponid)) {
		new slot = GetWeaponSlot(weaponid);
		GunPlayer[playerid][slot][0] = weaponid;
		GunPlayer[playerid][slot][1] += ammo;
		GivePlayerWeapon(playerid, weaponid, ammo);
		SetPlayerArmedWeapon(playerid, weaponid);
		return 1;
	}
	return 0;
}
stock AC_SetPlayerAmmo(playerid, weaponid, ammo) {                           
    if(IsPlayerConnected(playerid) && IsValidWeaponID(weaponid) && ammo > 0) {
		new slot = GetWeaponSlot(weaponid);
		GunPlayer[playerid][slot][0] = weaponid;
		GunPlayer[playerid][slot][1] = ammo;
		SetPlayerAmmo(playerid, weaponid, ammo);
		SetPlayerArmedWeapon(playerid, weaponid); // Выбираем зброю в руки
		return 1;
	}
	return 0;
}
enum gtInfo {
	gtID,
	gtGoID,
	Float:gtX,
	Float:gtY,
	Float:gtZ,
	Float:gtTPX,
	Float:gtTPY,
	Float:gtTPZ,
	gtState,
	gtStayed
}
new GotoInfo[MAX_PLAYERS][gtInfo];
new RankName[MAX_FRACTIONS][15][24];

#define house_rent 	0.001
#define hotel_rent 	0.003
#define bizz_rent 	0.002
#define airport_rent 0.003

new FracSalary[10][15];
new WorkSalary[5];
new Nalog[8];

enum _fInfo {
    fID,
	fName[24],
	fLeader[MAX_PLAYER_NAME],
	fAdmin[24],
	fTime[53],
	fBank,
	fBankCash,
	fDrugs,
	fMats,
	fHealth,
	fSklad,
	fPrice,
	fSkin,
	fMaxRang,
	fInviteRang,
	fUninviteRang,
	fGiveRang,
	fUseStock,
	fColor,
	fVw,
	fInt,
	fMessage[71],
	fDrugsBuy,
	fDrugsPrice,
	fAntiTK,
	fPoints,
	fRating
}
new FI[MAX_FRACTIONS + 1][_fInfo],
	gFractionSkin[MAX_FRACTIONS][10] = {
		{0,0,0,0,0,0,0,0,0,0}, //Defence
		{281,280,284,282,285,303,288,283,306,309}, //LSPD
		{281,280,284,282,285,303,288,283,306,309}, //SFPD
		{281,280,284,282,285,303,288,283,306,309}, //LVPD
		{286,163,164,165,166,141,0,0,0,0}, //FBI
		{255,57,71,187,147,150,0,0,0,0}, //MAYOR
		{287,179,311,61,255,191,0,0,0,0}, //ARMY
		{287,179,311,61,255,191,0,0,0,0}, //ARMY
		{276,275,274,70,219,308,0,0,0,0}, //MEDICS LS
		{276,275,274,70,219,308,0,0,0,0}, //MEDICS SF
		{276,275,274,70,219,308,0,0,0,0}, //MEDICS LV
		{188,170,217,261,211,0,0,0,0,0}, //LS News
		{188,170,217,261,211,0,0,0,0,0}, //SF News
		{188,170,217,261,211,0,0,0,0,0}, //LV News
		{59,185,240,148,0,0,0,0,0,0}, //Instructors
		{124,223,127,113,214,0,0,0,0,0}, //LCN
		{117,118,123,186,120,169,0,0,0,0}, //Yakuza
		{112,111,126,125,272,216,0,0,0,0}, //RM
		{103,102,104,195,0,0,0,0,0,0}, //Ballas
		{108,109,110,56,0,0,0,0,0,0}, //Vagos
		{105,106,107,269,271,270,65,0,0,0}, //Grove
		{48,114,116,115,41,0,0,0,0,0}, //Aztec
		{175,174,173,273,226,0,0,0,0,0}, //Rifa
		{255,98,57,163,228,305,304,17,76,0} //WH
	};
new f_diplomacy[8][8] ;
enum Vacancy {
	VacancyCreator,
	bool: VacancyStatus,
	VacancyText[120],
	VacancyFraction,
	VacancyTime[6],
};
new VacancyInfo[14][Vacancy];
//=================================================
CB: kick(giveplayerid) {
	return Kick(giveplayerid);
}
#define Kick(%0) SetTimerEx("kick",250,false,"d",%0)
//бізнесы

enum BINT_DATA {
	bintID,
	bintInterior,
	Float:bintX,
	Float:bintY,
	Float:bintZ,
	Float:bintR,
	Float:bintXB,
	Float:bintYB,
	Float:bintZB,
	bintName[32]
}

enum BUSINESS_DATA {
	bizzID,
	bizzName[64],
	bizzType,
	bizzBint,
	bizzOwnerID,
	bizzSellPrice,
	bizzBank,
	bizzBankDay,
	bizzPrice,
	bizzEnter,
	bizzProduct,
	bizzProdOrder,
	bizzProdOrderPrice,
	bizzStatus,
	Float:bizzX,
	Float:bizzY,
	Float:bizzZ,
	Float:bizzR,
	bizzDay,
	bizzMafia,
	bizzOwner[48],
	bizzVisitors,
	bizzUpgrade[3]
}

//БІЗНЕСИ
new gBints[BINT_COUNT][BINT_DATA],
	gBintEnterArea[BINT_COUNT],
	gBintBuyArea[BINT_COUNT],
	gBusiness[MAX_BUSINESS_COUNT][BUSINESS_DATA],
	b_area[MAX_BUSINESS_COUNT],
	Text3D: gBusinessText[MAX_BUSINESS_COUNT],
	gBusinessIcon[MAX_BUSINESS_COUNT],
	gBusinessTypeName[BUSINESS_TYPE_COUNT][28] = {"Закусочна","24/7","Бар","Клуб","Магазин одягу","АММО","АЗС","Автосалон","Риболовний бізнес","Комп'ютерний клуб","Таксопарк","Риелторське агенство","Спорт-зал","Транспортна компанія","Банк","Рекламне агенство","Магазин Аксесуарів","Perfomance Tune"},
	gBusinessCount,
	gBarCosts[] = {5, 10, 13, 16, 24, 31},
	gCompCosts[] = {100, 150, 230, 260},
	gTavernNames[][] = {{"Салат"}, {"Нагетси"}, {"Бургер"}, {"Піцца"}}, 
	gTavernCosts[] = {5, 10, 13, 25},
	gShopProduct[SHOP_OBJECTS] = {66,84,24,72,38,28,16,12,25,30,25},
	gShopPrice[SHOP_OBJECTS] = 	 {660,840,240,720,380,280,90,120,250,300,250},
	gShopObject[SHOP_OBJECTS][24] = {"Телефон","Камера","Годинник","Телефона книга","SIM-карта","Маска","Аптечка","Квіти","Ремкомплект","Балончик з краскою","Відмички"},
	gFishCosts[] = {520, 340, 100, 400};
//лопата, бита, катана, кастет, газ балон, парашут
new stock gSellGun [15] = { 6, 5, 8, 1, 17, 46, 23, 24, 25, 29, 30, 31, 33 };
new stock gSellGunPrice [15] = { 50, 100, 100, 100, 300, 1000, 16, 27, 32, 14, 27, 27, 1000 , 500 };
new stock gSellGunProds [15] = { 10, 10, 10, 10, 15, 20, 3, 4, 5, 3, 4, 4, 70, 50 };

new type_acces[MAX_PLAYERS];

new acces_name_all[][] = {
	{""YELLOW"1."W" Очки"},
	{""YELLOW"2."W" Шапки"},
	{""YELLOW"3."W" Шляпи"},
	{""YELLOW"4."W" Кепки"},
	{""YELLOW"5."W" Берети"},
	{""YELLOW"6."W" Бандани"},
	{""YELLOW"7."W" Панамки"},
	{""YELLOW"8."W" Спорт-шлем"},
	{""YELLOW"9."W" Каски"},
	{""YELLOW"10."W" Маски"},
	{""YELLOW"11."W" Навушники"},
	{""YELLOW"12."W" Годинник"},
	{""YELLOW"13."W" Рюкзаки"}
	//{""YELLOW"14."W" Різне"}
};
//очки
new acces_id_glass[][] = {
	{19035,2500},
	{19034,2500},
	{19033,2500},
	{19032,2500},
	{19031,2500},
	{19030,2500},
	{19029,2500},
	{19028,2500},
	{19027,2500},
	{19026,2500},
	{19025,2500},
	{19024,2500},
	{19023,2500},
	{19022,2500},
	{19021,2500},
	{19020,2500},
	{19019,2500},
	{19018,2500},
	{19017,2500},
	{19016,2500},
	{19015,2500},
	{19014,2500},
	{19013,2500},
	{19012,2500},
	{19011,2500},
	{19010,2500},
	{19009,2500},
	{19008,2500},
	{19007,2500},
	{19006,2500}
};
//шапки
new acces_id_hat[][] = {
	{19069,5000},
	{19067,5000},
	{19068,6000},
	{18953,8000},
	{18954,10000},
	{19554,13000}
};
//шляпи
new acces_id_bonnet[][] = {
	{18947,10000},
	{18948,10000},
	{18949,10000},
	{18950,10000},
	{18951,10000}
};
//кепки
new acces_id_cap[][] = {
	{18933,3000},
	{18932,3000},
	{18928,4000},
	{18942,5000},
	{18943,6000},
	{18940,6000},
	{18929,7000},
	{18926,7000},
	{18955,7000},
	{18956,7000},
	{18957,7000},
	{18959,7000}
};
//берети
new acces_id_beret[][] = {
	{18924,3000},
	{18925,3000},
	{18921,3000},
	{18923,3000},
	{18922,3000}
};
//бандани
new acces_id_bandanas[][] = {
	{18906,4000},
	{18906,4000},
	{18906,4000},
	{18906,4000},
	{18910,4000},
	{18911,4000},
	{18912,4000},
	{18913,4000},
	{18914,4000},
	{18915,4000},
	{18916,4000},
	{18917,4000},
	{18918,4000},
	{18919,4000}
};
//панамки
new acces_id_panam[][] = {
	{18968,4000},
	{18967,4000},
	{18969,4000}
};
//спорт шолом
new acces_id_sporthat[][] = {
	{18976,15000},
	{18977,20000},
	{18978,20000},
	{18979,20000},
	{18645,20000}
};
//каски
new acces_id_kask[][] = {
	{19101,5000},
	{19102,5000},
	{19103,5000},
	{19104,5000},
	{19105,5000},
	{19106,7000},
	{19107,7000},
	{19108,7000},
	{19109,7000},
	{19110,7000},
	{19111,7000},
	{19112,7000},
	{19113,7000},
	{19114,7000},
	{19115,7000},
	{19116,7000},
	{19117,7000},
	{19118,7000},
	{19119,7000},
	{19120,7000}
};
//маски
new acces_id_mask[][] = {
	{19036,8000},
	{19037,8000},
	{19038,8000}
};
//наушники
new acces_id_headphones[][] = {
	{19421,6000},
	{19422,6000},
	{19423,6000},
	{19424,6000}
};
//годинники
new acces_id_watch[][] = {
	{19042,7000},
	{19041,7000},
	{19040,7000},
	{19039,7000},
	{19043,7000},
	{19044,10000},
	{19045,10000},
	{19046,10000},
	{19048,10000},
	{19049,15000},
	{19050,15000},
	{19051,15000},
	{19053,15000}
};
//рюкзаки
new acces_id_backpack[][] = {
	{3026,4000},
	{371,8000},
	{19559,15000}
};

new open_game = 0; // якщо 0 - реєстраця закрита, 1 - відкрита
new time_registr_game; // час на реєстрацію
new time_play_game;
new players_in_game; // кількість гравців зареєстрованих
new money_in_game; // бюджет реєстрації
new game_start; // гра почалась чи ні
new player_to_game[MAX_PLAYERS];
new kills_player_game[MAX_PLAYERS];
new weapon_id_game[] ={22,23,24,25,28,29,30,31,33,34};
new Text:td_game[6];
new Text3D:gamedm_text;
new Text3D:gamerace_text;
new Text3D:golod_text;

new Text3D:labrary_text;
new Text3D:army_text[2];
new bool:army_chs[2];

new Float:pickup_game_dm[][14] = {
	{-1131.3823,1057.6615,1346.4155},
	{-1101.3960,1019.7981,1342.0938},
	{-1054.7520,1061.1354,1341.3516},
	{-1008.6476,1022.1013,1341.0078},
	{-975.6393,1089.7686,1344.9706},
	{-973.3884,1024.7118,1345.0496},
	{-1131.5729,1029.1079,1345.7302},
	{-1090.5127,1047.7528,1343.7136},
	{-1057.1874,1024.8693,1343.5397},
	{-1010.1868,1082.6458,1341.0432},
	{-974.7061,1061.1276,1345.6770},
	{-1132.5320,1095.6166,1345.7961}
};
new pickups_game_dm[14];
new Float:spawns_pos_game[][19] = {
	{-971.9037,1088.3547,1344.9967,129.8470},
	{-972.0953,1073.0126,1345.0067,176.5341},
	{-969.6308,1048.2323,1345.0522,178.4141},
	{-979.3818,1024.2477,1345.0090,109.4801},
	{-1010.3306,1031.4248,1341.0078,86.6066},
	{-1026.0189,1030.3739,1342.3063,86.6066},
	{-1032.7190,1063.5831,1344.2081,2.0058},
	{-1025.6360,1076.7162,1347.0292,308.7386},
	{-1018.4744,1097.9198,1342.2784,347.9056},
	{-1002.1757,1097.6473,1342.7841,271.4515},
	{-1133.9045,1096.3629,1345.8059,82.8970},
	{-1136.0276,1021.7136,1345.7485,155.5910},
	{-1067.0563,1019.8869,1343.1606,236.1185},
	{-1114.4014,1098.4094,1341.8438,65.3736},
	{-1027.1936,1050.3809,1342.3127,323.8293},
	{-972.6334,1097.3291,1344.9896,278.7089},
	{-1046.6215,1065.1182,1344.2026,287.5548},
	{-1090.9199,1062.1122,1341.3516,341.3527},
	{-1132.3114,1062.6431,1345.7616,249.7135}
};
new Float:spawns_pos_game_end[][6] ={
	{829.7211,0.6873,1004.1797,41.4414},
	{832.6205,1.1667,1004.1797,37.3680},
	{832.2601,10.5252,1004.1797,133.5622},
	{829.1796,10.6138,1004.1797,162.7025},
	{826.5115,0.0795,1004.1797,353.5243},
	{828.8213,2.8872,1004.1797,36.1380}
};
new game_info[][] = {
	{""W"Божевільні війни, в цьому заході кожен учасник - сам за себе.\n"},
	{"Мінімальний взнос для участі в заході "ORANGE"$1000$"W".\n"},
	{"Максимальний взнос для участі в заході "ORANGE"$10000$"W".\n\n"},
	{"Доступні види зброї: \n\t"YELLOW"9mm Pistol, Silenced Pistol, Desert Eagle, Shotgun\n"},
	{"\tMP5, AK - 47, M4, Country Rifle, Sniper Rifle\n"},
	{""W"Зброя видається рандомно після смерті Гравця.\n\n"},
	{"{f6f6d9}Призовий фонт складає:\n\n"},
	{"\t"ORANGE"1 місце - 50% від бюджету заходу\n"},
	{"\t2 место - 30% від бюджету заходу\n"},
	{"\t3 место - 20% від бюджету заходу\n"}
};

new golod_info[][] = {
	{""W"Голодні ігри, суть данного заходу - залишитися в живих.\n"},
	{"Мінімальний взнос для участия в заході складає "ORANGE"$1000$"W".\n"},
	{"Максимальний взнос для участия в заході складає "ORANGE"$10000$"W".\n\n"},
	{"Доступні види зброї: \n\t"YELLOW"9mm Pistol, Silenced Pistol, Desert Eagle, Shotgun\n"},
	{"\tMP5, AK - 47, M4, Country Rifle, Sniper Rifle\n"},
	{""W"Зброю можна добути, підібрав її після приземлення повітряної посидки.\n\n"},
	{"{f6f6d9}Призовий фонд складає:\n\n"},
	{"\t"ORANGE"1 місце - 100% від бюджету заходу\n"}
};

new Float:spawns_pos_golod[][21] = {
	{511.1205,3411.7109,1.7684,99.0891}, // 1
	{509.9627,3396.8550,1.7684,72.1423}, // 2
	{504.6795,3382.9170,1.7684,57.1023}, // 3
	{495.4037,3371.1836,1.7684,33.2888}, // 4
	{482.9640,3362.9731,1.7684,18.5619}, // 5
	{468.7217,3358.4131,1.7684,9.7884}, // 6
	{453.8185,3358.3726,1.7684,359.4482}, // 7
	{439.4697,3362.7666,1.7684,334.0680}, // 8
	{426.9885,3371.1084,1.7684,315.2679}, // 9
	{417.8222,3382.8037,1.7684,291.1411}, // 10
	{412.2269,3396.7642,1.7684,283.3079}, // 11
	{411.1539,3411.7212,1.7684,273.5945}, // 12
	{414.4911,3426.2949,1.7684,247.2741}, // 13
	{421.9019,3439.3760,1.7684,229.4139}, // 14
	{433.0515,3449.2075,1.7684,217.5071}, // 15
	{446.3200,3455.8037,1.7684,202.7803}, // 16
	{461.1968,3458.0762,1.7684,194.9469}, // 17
	{475.9952,3455.8101,1.7684,177.0867}, // 18
	{489.4095,3449.4893,1.7684,159.5399}, // 19
	{500.4183,3439.2100,1.7684,133.8463}, // 20
	{507.6727,3426.1934,1.7684,103.4528} // 21
};
new Float:pickup_game_golod[][21] = {
	{477.4199,3420.0537,2.5208}, // сумка 1
	{483.0627,3407.4302,2.5208}, // сумка 2
	{485.4454,3397.5142,2.5208}, // сумка 3
	{484.5856,3392.6943,2.5208}, // сумка 4
	{481.7088,3391.8286,2.5208}, // сумка 5
	{478.2400,3390.9438,2.5208}, // сумка 6
	{463.9134,3387.8848,2.5208}, // сумка 7
	{451.6201,3385.4824,2.5208}, // сумка 8
	{448.5182,3388.5239,2.5208}, // сумка 9
	{448.0757,3391.3525,2.5208}, // сумка 10
	{447.4832,3394.5737,2.5208}, // сумка 11
	{446.5945,3401.0376,2.5208}, // сумка 12
	{444.3455,3413.2827,2.5208}, // сумка 13
	{442.8724,3418.9351,2.5208}, // сумка 14
	{445.3425,3423.0034,2.5208}, // сумка 15
	{448.0399,3423.3066,2.5208}, // сумка 16
	{451.7747,3424.2412,2.5208}, // сумка 17
	{466.9659,3427.0801,2.5208}, // сумка 18
	{476.5350,3428.8726,2.5208}, // сумка 19
	{481.1384,3426.8359,2.5208}, // сумка 20
	{481.2592,3423.7212,2.5208} // сумка 21
};
new pickups_game_golod[21] = -1;

new Float:pickup_game_golod_2[][21] = {
	{583.48,3429.419,7.0},
	{563.262,3481.784,13.5},
	{521.769,3504.372,9.0},
	{574.850,3373.640,13.5},
	{426.755,3497.690,12.0},
	{480.709,3288.237,9.963},
	{384.965,3510.70,11.958},
	{347.324,3369.504,11.3},
	{376.239,3316.323,12.3},
	{528.836,3595.626,49.0},
	{329.494,3417.427,17.2},
	{605.253,3251.989,47.0},
	{672.387,3300.246,63.0},
	{306.292,3520.320,48.9},
	{543.147,3205.829,50.8},
	{328.103,3560.866,45.7},
	{275.63,3453.482,45.4},
	{467.36,3657.813,43.4},
	{409.763,3658.840,68.9},
	{371.728,3185.230,71.1},
	{240.421,3495.499,76.3}
};
new Float:pickup_game_objmoved[][21] = {
	{583.48,3429.419,14.667,4.0},
	{563.262,3481.784,20.909,4.0},
	{521.769,3504.372,16.520,4.0},
	{574.850,3373.640,20.903,4.0},
	{426.755,3497.690,19.446,4.0},
	{480.709,3288.237,17.363,4.0},
	{384.965,3510.70,19.258,4.0},
	{347.324,3369.504,18.869,4.0},
	{376.239,3316.323,19.763,4.0},
	{528.836,3595.626,56.527,4.0},
	{329.494,3417.427,24.715,4.0},
	{605.253,3251.989,54.549,4.0},
	{672.387,3300.246,70.55,4.0},
	{306.292,3520.320,56.196,4.0},
	{543.147,3205.829,58.158,4.0},
	{328.103,3560.866,53.172,4.0},
	{275.63,3453.482,51.841,4.0},
	{467.36,3657.813,50.704,4.0},
	{409.763,3658.840,76.13,4.0},
	{371.728,3185.230,78.460,4.0},
	{240.421,3495.499,83.751,4.0}
};
new game_players[3];
new pickups_game_golod_2[21] = -1;
new area_golod[21];
new time_gamegolod = 0;
new player_to_golod[MAX_PLAYERS];
new open_gamegolod = 0;
new players_in_golod = 0;
new player_to_golod_id[MAX_PLAYERS];
new golod_use_pickup[MAX_PLAYERS];
new money_in_golod = 0;
new golod_start = 0;
new time_golod;

new Float:pickup_game_obj[][21] = {
	{607.48,3369.419,62.667,4.000,13.000,-32.860},
	{587.262,3421.784,68.909,0.000,0.000,0.000},
	{545.769,3444.372,64.520,11.000,0.000,0.000},
	{598.850,3313.640,68.903,0.000,0.000,-90.120},
	{450.755,3437.690,67.446,10.000,0.000,13.380},
	{504.709,3228.237,65.363,10.000,3.000,129.311},
	{408.965,3450.70,67.258,10.000,0.000,0.000},
	{371.324,3309.504,66.869,10.000,3.000,166.391},
	{400.239,3256.323,67.763,10.000,3.000,129.312},
	{552.836,3535.626,104.527,18.000,0.000,-16.000},
	{353.494,3357.427,72.715,10.000,3.000,0.079},
	{629.253,3191.989,102.549,0.000,0.000,48.720},
	{696.387,3240.246,118.55,-7.000,-10.000,2.000},
	{330.292,3460.320,104.196,20.000,0.000,17.000},
	{567.147,3145.829,106.158,0.000,0.000,0.000},
	{352.103,3500.866,101.172,15.000,0.000,53.000},
	{299.63,3393.482,100.841,11.000,0.000,69.480},
	{491.36,3597.813,98.704,-19.000,0.000,-69.419},
	{433.763,3598.840,124.13,0.000,0.000,0.000},
	{395.728,3125.230,126.460,-19.000,0.000,-2.000},
	{264.421,3435.499,131.751,-30.000,0.000,-67.000}
};

new random_car_race_lv = INVALID_VEHICLE_ID;
new car_id_race_lv[] ={495,502,506,559,560,562,568,587,603,451,411};

new open_race_lv = 0; // якщо 0 - реєстрація закрита, 1 - відкрита
new time_registr_race_lv; // час на реєстрацію
new players_in_race_lv; // кількість гравців зареєстрованих
new money_in_race_lv; // бюджет реєстрації
new time_race_lv; // гра почалася чи ні
new race_lv_start = 0;
new player_to_race_lv[MAX_PLAYERS];
new player_to_race_lv_id[MAX_PLAYERS];
new player_car_race_lv_id[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new race_lead_lv = 0;
new race_type = 0;

new Float:gRaceCPs[3][49][4] = {
	{// місто
		{0.0,-1593.1674,995.8550,6.7661},
		{0.0,-1559.2784,713.1943,6.7661},
		{0.0,-1731.9357,321.2237,6.7583},
		{0.0,-1760.4103,325.8777,7.1245},
		{0.0,-1820.8859,380.7706,16.7357},
		{0.0,-1848.5409,365.2331,17.4409},
		{0.0,-1897.2014,95.6595,37.8657},
		{0.0,-1910.8467,-262.3996,37.9693},
		{0.0,-1910.7738,-577.5660,37.9615},
		{0.0,-1910.9318,-963.2586,42.4246},
		{0.0,-1907.5707,-1217.4100,39.2115},
		{0.0,-1911.0490,-1354.6622,40.1021},
		{0.0,-1956.8323,-1341.4967,40.1605},
		{0.0,-2093.4607,-1124.2417,30.1528},
		{0.0,-2219.6184,-921.2327,43.4467},
		{0.0,-2221.3218,-747.5360,63.7629},
		{0.0,-2349.4438,-724.1194,105.8035},
		{0.0,-2422.8469,-609.0765,132.2896},
		{0.0,-2506.4609,-482.6401,91.8960},
		{0.0,-2623.9351,-500.7565,70.6256},
		{0.0,-2489.5293,-443.8438,77.3281},
		{0.0,-2353.6812,-459.1245,79.9845},
		{0.0,-2336.3044,-421.2580,79.2547},
		{0.0,-2443.2471,-368.6861,70.0947},
		{0.0,-2675.7188,-425.3551,31.5907},
		{0.0,-2681.5325,-523.8073,16.5806},
		{0.0,-2774.8213,-495.3371,6.9114},
		{0.0,-2734.9756,-431.2374,6.9789},
		{0.0,-2557.7732,-345.0942,24.4528},
		{0.0,-2272.2705,-347.4919,39.2546},
		{0.0,-2075.9956,-350.9016,35.0318},
		{0.0,-2037.8602,-335.3759,35.0317},
		{0.0,-2005.3221,-137.4541,35.4380},
		{0.0,-2006.3556,138.6625,27.2661},
		{0.0,-2003.4937,384.4902,34.7427},
		{0.0,-2004.1002,542.3316,34.7427},
		{0.0,-2099.6802,565.8253,34.7431},
		{0.0,-2226.9331,565.7338,34.7483},
		{0.0,-2256.5208,591.7636,37.7843},
		{0.0,-2256.2234,905.8365,66.2233},
		{0.0,-2258.5522,1085.7393,79.5879},
		{0.0,-2260.9167,1251.9984,43.2102},
		{0.0,-2059.8630,1275.2407,8.0363},
		{0.0,-1863.7690,1337.6692,6.7739},
		{1.0,-1618.1641,1199.9156,6.7661},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},//
	{// бездорожжя
		{0.0,-1864.4503,-2381.2229,31.5846},
		{0.0,-1718.3188,-2294.7283,45.2318},
		{0.0,-1678.9152,-2176.0771,36.4075},
		{0.0,-1708.6892,-2106.5313,40.5838},
		{0.0,-1832.3588,-2087.7468,56.0560},
		{0.0,-1952.9957,-2060.5771,69.7296},
		{0.0,-1945.8071,-1954.0258,78.5620},
		{0.0,-1857.0730,-1927.6558,88.4337},
		{0.0,-1691.0414,-1912.4009,98.2297},
		{0.0,-1581.9554,-1891.6198,84.9697},
		{0.0,-1518.2130,-1839.8138,67.3244},
		{0.0,-1475.8656,-1782.2496,50.6363},
		{0.0,-1430.3173,-1873.5522,33.5106},
		{0.0,-1411.3867,-2034.2435,1.0000},
		{0.0,-1350.2726,-2042.8008,9.2772},
		{0.0,-1306.4934,-2118.4250,25.2313},
		{0.0,-1264.5914,-2263.1064,22.2187},
		{0.0,-1189.5835,-2355.5100,19.3239},
		{0.0,-1055.4319,-2373.8184,49.7934},
		{0.0,-967.9534,-2357.7893,63.5209},
		{0.0,-954.4967,-2319.0549,58.7685},
		{0.0,-954.9092,-2214.7622,40.3016},
		{0.0,-895.7296,-2182.9709,29.5663},
		{0.0,-798.3245,-2157.1934,22.2218},
		{0.0,-814.7314,-2059.7971,24.9278},
		{0.0,-857.7783,-1976.6576,16.9916},
		{0.0,-735.8377,-1860.4415,12.9406},
		{0.0,-670.8856,-1925.7917,10.9450},
		{0.0,-676.0182,-2090.8599,24.7597},
		{0.0,-783.4732,-2136.5078,25.4185},
		{0.0,-888.4941,-2181.9814,28.5519},
		{0.0,-948.7108,-2195.7961,38.2576},
		{0.0,-936.2672,-2352.7488,58.5742},
		{0.0,-786.4156,-2465.2830,75.9324},
		{0.0,-709.3486,-2352.2390,40.8819},
		{0.0,-592.4052,-2384.5251,27.7612},
		{0.0,-658.4496,-2479.5637,34.5280},
		{0.0,-710.3221,-2609.6077,72.9349},
		{0.0,-777.1717,-2687.0247,83.4813},
		{0.0,-917.7076,-2668.3259,86.0870},
		{0.0,-1091.5773,-2669.1135,25.7622},
		{0.0,-1230.5806,-2637.0510,9.0866},
		{0.0,-1367.1473,-2632.0386,26.7262},
		{0.0,-1512.8129,-2634.5842,48.5268},
		{0.0,-1644.1321,-2622.4631,47.2647},
		{0.0,-1771.0397,-2502.6235,9.2780},
		{1.0,-1880.7358,-2432.5237,32.6747},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	},//
	{// картинг
		{0.0,-1423.0721,-133.5238,1044.2628},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{0.0,-1404.6044,-155.3698,1043.1080},
		{0.0,-1530.3483,-221.1989,1049.9586},
		{0.0,-1381.4954,-140.8468,1050.4185},
		{0.0,-1265.7865,-222.4202,1050.0526},
		{1.0,-1404.6044,-155.3698,1043.1080},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0},
		{0.0,0.0,0.0,0.0}
	}
};

new Float:spawns_car_race_kart[][25] = {
	{-1402.4996, -207.0603, 1042.3719, 0.0000},
	{-1400.2638, -207.0603, 1042.3754, 0.0000},
	{-1397.8931, -207.0603, 1042.3781, 0.0000},
	{-1395.7288, -207.0603, 1042.3805, 0.0000},
	{-1393.3668, -207.0603, 1042.3831, 0.0000},
	{-1402.4996, -210.0510, 1042.3781, 0.0000},
	{-1400.2638, -210.0510, 1042.3818, 0.0000},
	{-1397.8931, -210.0510, 1042.3859, 0.0000},
	{-1395.7288, -210.0510, 1042.3884, 0.0000},
	{-1393.3668, -210.0510, 1042.3910, 0.0000},
	{-1402.4996, -213.1461, 1042.3794, 0.0000},
	{-1400.2638, -213.1461, 1042.3892, 0.0000},
	{-1397.8931, -213.1461, 1042.3923, 0.0000},
	{-1395.7288, -213.1461, 1042.3956, 0.0000},
	{-1393.3668, -213.1461, 1042.3932, 0.0000},
	{-1402.4996, -216.1665, 1042.4006, 0.0000},
	{-1400.2638, -216.1665, 1042.3590, 0.0000},
	{-1397.8931, -216.1665, 1042.3999, 0.0000},
	{-1395.7288, -216.1665, 1042.4026, 0.0000},
	{-1393.3668, -216.1665, 1042.4080, 0.0000},
	{-1402.4996, -219.2523, 1042.4167, 0.0000},
	{-1400.2638, -219.2523, 1042.4226, 0.0000},
	{-1397.8931, -219.2523, 1042.4073, 0.0000},
	{-1395.7288, -219.2523, 1042.4249, 0.0000},
	{-1393.3668, -219.2523, 1042.4327, 0.0000}
};
new Float:spawns_car_race_sity[][25] = {
	{-1626.8721, 1216.4556, 6.7722, 225.0000},
	{-1632.9271, 1210.5011, 6.7533, 225.0000},
	{-1632.3458, 1221.9630, 6.7671, 225.0000},
	{-1638.5345, 1215.9559, 6.7662, 225.0000},
	{-1638.4059, 1227.9788, 6.7671, 225.0000},
	{-1644.5020, 1221.8387, 6.7661, 225.0000},
	{-1644.3997, 1233.8173, 6.7671, 225.0000},
	{-1650.5052, 1227.5979, 6.7672, 225.0000},
	{-1650.2097, 1239.5116, 6.7671, 225.0000},
	{-1656.4216, 1233.3439, 6.7671, 225.0000},
	{-1656.1857, 1245.1952, 6.7709, 225.0000},
	{-1662.3087, 1238.9772, 6.7669, 225.0000},
	{-1662.2899, 1251.0956, 6.7772, 225.0000},
	{-1668.2368, 1244.9404, 6.7671, 225.0000},
	{-1667.9672, 1256.5748, 6.7777, 225.0000},
	{-1673.7991, 1250.6311, 6.7670, 225.0000},
	{-1673.7429, 1262.3813, 6.7592, 225.0000},
	{-1679.5250, 1256.4894, 6.7950, 225.0000},
	{-1679.6475, 1268.3621, 6.7671, 225.0000},
	{-1685.3892, 1262.6636, 6.7660, 225.0000},
	{-1685.3733, 1274.2111, 6.7672, 225.0000},
	{-1691.0829, 1268.3452, 6.7671, 225.0000},
	{-1690.8152, 1279.7847, 6.7661, 225.0000},
	{-1696.7572, 1274.0592, 6.7663, 225.0000},
	{-1696.3383, 1285.2871, 6.7662, 225.0000}
};
new Float:spawns_car_race_desert[][25] = {
	{-1928.6108, -2434.7722, 30.3596, 315.0000},
	{-1926.0165, -2437.4097, 30.3584, 315.0000},
	{-1923.4214, -2440.0471, 30.3579, 315.0000},
	{-1920.8254, -2442.6819, 30.3619, 315.0000},
	{-1918.2297, -2445.3201, 30.3607, 315.0000},
	{-1923.8497, -2450.6912, 30.3573, 315.0000},
	{-1926.2788, -2448.1880, 30.3531, 315.0000},
	{-1928.9128, -2445.5024, 30.3588, 315.0000},
	{-1931.5558, -2443.0854, 30.3528, 315.0000},
	{-1934.2892, -2440.4890, 30.3499, 315.0000},
	{-1939.2938, -2445.7158, 30.3620, 315.0000},
	{-1936.7200, -2448.2480, 30.3638, 315.0000},
	{-1934.1202, -2450.8022, 30.3679, 315.0000},
	{-1931.5591, -2453.3091, 30.4019, 315.0000},
	{-1928.9017, -2455.8230, 30.4710, 315.0000},
	{-1933.9561, -2460.9844, 30.6104, 315.0000},
	{-1936.4891, -2458.2773, 30.5352, 315.0000},
	{-1938.9983, -2455.6040, 30.4634, 315.0000},
	{-1941.4366, -2453.0049, 30.3984, 315.0000},
	{-1944.0645, -2450.2112, 30.3717, 315.0000},
	{-1949.2622, -2455.4006, 30.3631, 315.0000},
	{-1946.6733, -2457.9849, 30.4673, 315.0000},
	{-1944.1763, -2460.4136, 30.5923, 315.0000},
	{-1941.3196, -2463.2275, 30.6701, 315.0000},
	{-1938.7661, -2465.7358, 30.7351, 315.0000}
};
new game_info_race_lv[][] = {
	{"{FFFFFF} Божевільні гонки, виграє той - хто перший доїде до фіналу.\n"},
	{"Мінімальний взнос для участия в заході складає "ORANGE"$1000"W".\n"},
	{"Максимальний взнос для участия в заході складає "ORANGE"$10000$"W".\n\n"},
	{"Можливі автомобілі: \n\t"YELLOW"Sandking, Hotring Racer, Super GT, Jester, Sultan\n"},
	{"\tElegy, Bandito, Euros, Phoenix, Infernus, Turismo\n\n"},
	{"{f6f6d9}Призовий фонд складає:\n\n"},
	{""ORANGE"\t1 місце - 50% від бюджету заходу\n"},
	{"\t2 місце - 30% від бюджету заходу\n"},
	{"\t3 місце - 20% від бюджету заходу\n"}
};

new ped_buyclothes[79][2] ={
	{95,5000},
	{50,10000},
	{15,10000},
	{35,10000},
	{25,10000},
	{36,10000},
	{96,10000},
	{155,10000},
	{143,10000},
	{44,20000},
	{24,30000},
	{37,40000},
	{2,45000},
	{3,45000},//
	{6,50000},
	{7,50000},//
	{14,50000},
	{47,50000},
	{67,50000},
	{142,50000},//
	{23,65000},//
	{72,70000},
	{22,80000},//
	{68,80000},
	{220,100000},
	{18,125000},
	{45,125000},
	{97,125000},
	{21,125000},
	{60,125000},//
	{182,150000},
	{262,150000},//
	{250,150000},
	{121,150000},
	{183,150000},
	{184,150000},//
	{30,175000},//
	{19,175000},
	{20,175000},//
	{4,225000},
	{5,225000},
	{259,250000},//
	{17,250000},
	{180,250000},//
	{208,250000},//
	{185,300000},
	{289,300000},
	{28,325000},
	{29,325000},
	{119,350000},
	{290,350000},
	{291,350000},
	{292,350000},
	{293,350000},
	{82,380000},
	{83,380000},//
	{84,380000},
	{101,400000},//
	{241,400000},
	{242,400000},
	{295,400000},
	{297,400000},
	{296,450000},//
	{249,500000},
	{299,500000},
	{46,700000},
	{294,700000},//67
	{55, 10000},//жіночі
	{90, 10000},
	{13, 10000},
	{192, 10000},
	{193, 10000},
	{224, 50000},
	{12, 100000},
	{190, 100000},
	{40, 100000},
	{298, 300000},
	{93, 600000},
	{233, 600000} // 79
};
enum fun_bizz {
	funcbSlot,
	funcbID,
	funcbName[20],
	funcbNameCar[12],
	funcbNum,
	funcbTarif[4],
	funcbCar[20],
	funcbBank[15],
	funcbColor,
	funcbShash,
	funcbPercent,
	Float:funcbPercent2,
	funcbPercent3,
	funcbCarID[20],
	funcbCars[20]

}
new FuncBizz[MAX_BUSINESS_COUNT][fun_bizz];
enum col_td {
	col_id,
	col_rgb[16],
	col_shash[16],
	col_car,
}
new taxi_class[6][24] = {"Економ","Комфорт","Мікроавтобус","Бізнес","Керуючий","Руководець"};
new tk_class[3][24] = {"Водій","Управляющий","Руководець"};
enum  {
	iconTaxi
}
new static color_td[22][col_td] = {
	{-1,"ffffff",0xFFFFFFFF, 1},
	{930150143,"3770f6",0xFF3770F6, 2},
	{945198335,"385694",0xFF385694, 108},
	{-1554021121,"a35f84",0xFFA35F84, 232},
	{-328487169,"ec6bae",0xFFEC6BAE, 126},
	{831820287,"319491",0xFF319491, 240},
	{-1521069569,"a55651",0xFFA55651, 161},
	{1160383999,"452a0d",0xFF452A0D, 131},
	{-1433256961,"aa923b",0xFFAA923B, 228},
	{-1553384961,"a36939",0xFFA36939, 219},
	{-1674829569,"9c2c20",0xFF9C2C20, 158},
	{513427199,"1e9a46",0xFF1E9A46, 154},
	{444537343,"1a7f19",0xFF1A7F19, 229},
	{-1886631937,"8f8c47",0xFF8F8C47, 65},
	{-1365606401,"ae9a7f",0xFFAE9A7F, 99},
	{2084470783,"7c3e7f",0xFF7C3E7F, 178},
	{-1726078465,"991e21",0xFF991E21, 175},
	{-1701305857,"9a9821",0xFF9A9821, 194},
	{-712109825,"d58e10",0xFFD58E10, 6},
	{-2061554177,"042023",0xFF042023, 237},
	{623127039,"000000",0x000000AA, 0},
	{-1,"ffffff",0xFFFFFFFF, 1}
};
new biz_text[MAX_FUNCBIZZ];
new select_member[MAX_PLAYERS][36];
new taxi_car[7][2] = {
	{426,0},//економ premier
	{438,0},//економ cabbie
	{540,1},//комфорт vincent
	{550,1},//комфорт sunrise
	{560,3},//елітний sultan
	{580,3},//елітний stafford
	{483,2}//мікроавтобус camper
};
new tk_car[3][2] = {
	{403,10000},
	{514,12000},
	{515,15000}
};
new Float:tk_wood[5][4] = {
	{260.9107, 1359.6311, 11.5590, 0.0000},
	{266.4707, 1359.6311, 11.5590, 0.0000},
	{272.0701, 1359.6311, 11.5590, 0.0000},
	{277.6099, 1359.6311, 11.5590, 0.0000},
	{283.4688, 1359.6311, 11.5590, 0.0000}
};
new Float:tk_gun[5][4] = {
	{2638.3792,-2377.5378,14.6545,179.6357},// 1
	{2632.4897,-2377.5396,14.6645,179.6178},// 2
	{2626.2043,-2377.6802,14.6628,181.1803},// 3
	{2619.8586,-2377.6594,14.6693,181.0333},// 4
	{2613.2920,-2377.6545,14.6742,180.4115}// 5
};
new tuningtaxi_text[4][20];
new tuningtaxi_text_1[4][20];
new tuningtaxi[4][20];
new tuningtaxi_1[4][20];
new tuningtaxi_shash[4][20];
new Float:car_bizz[7][20][4] = {
	{
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000}
	},
	{//ls
		{1084.9131, -1767.5701, 13.0683, 270.0000},
		{1084.9131, -1764.3806, 13.0743, 270.0000},
		{1084.9131, -1761.1133, 13.0802, 270.0000},
		{1084.9131, -1757.9333, 13.0877, 270.0000},
		{1084.9131, -1754.7515, 13.0960, 270.0000},
		{1098.6677, -1755.0851, 13.0609, 90.0000},
		{1098.6677, -1758.7825, 13.0618, 90.0000},
		{1098.6677, -1762.3461, 13.0597, 90.0000},
		{1098.6677, -1765.8761, 13.0589, 90.0000},
		{1098.6677, -1769.6969, 13.0578, 90.0000},
		{1098.6677, -1773.5542, 13.0553, 90.0000},
		{1062.4872, -1747.8126, 13.1559, 270.0000},
		{1062.4872, -1751.2001, 13.1532, 270.0000},
		{1062.4872, -1744.5979, 13.1682, 270.0000},
		{1062.4872, -1741.3923, 13.1746, 270.0000},
		{1062.4872, -1738.0553, 13.1835, 270.0000},
		{1084.9131, -1770.5269, 13.0600, 270.0000},
		{1084.9131, -1773.6429, 13.0543, 270.0000},
		{1076.3751, -1746.8152, 13.1523, 270.0000},
		{1084.5719, -1746.8152, 13.1360, 270.0000}

	},
	{//sf
		{-2189.3442, 293.3513, 34.8283, 0.0000},
		{-2193.0112, 293.3513, 34.8241, 0.0000},
		{-2197.1506, 293.3513, 34.8221, 0.0000},
		{-2201.3896, 293.3513, 34.8225, 0.0000},
		{-2205.5735, 293.3513, 34.8245, 0.0000},
		{-2209.9639, 293.3513, 34.8242, 0.0000},
		{-2214.1077, 293.3513, 34.8242, 0.0000},
		{-2218.3374, 293.3513, 34.8241, 0.0000},
		{-2222.8630, 293.3513, 34.8219, 0.0000},
		{-2227.0833, 293.3513, 34.8222, 0.0000},
		{-2231.4631, 293.3513, 34.8238, 0.0000},
		{-2235.1509, 293.3513, 34.8247, 0.0000},
		{-2239.0037, 293.3513, 34.8244, 0.0000},
		{-2239.5796, 306.2199, 34.8247, 180.0000},
		{-2235.3774, 306.2199, 34.8258, 180.0000},
		{-2231.4170, 306.2199, 34.8241, 180.0000},
		{-2227.0754, 306.2199, 34.8242, 180.0000},
		{-2222.9646, 306.2199, 34.8221, 180.0000},
		{-2218.5408, 306.2199, 34.8244, 180.0000},
		{-2214.1565, 306.2199, 34.8190, 180.0000}
	},
	{//lv
		{2441.4143, 1354.3888, 10.6409, 270.0000},
		{2441.4143, 1350.4005, 10.6409, 270.0000},
		{2441.4143, 1346.7572, 10.6410, 270.0000},
		{2441.4143, 1343.0005, 10.6412, 270.0000},
		{2441.4143, 1339.1304, 10.6408, 270.0000},
		{2441.4143, 1335.6786, 10.6409, 270.0000},
		{2441.4143, 1332.0668, 10.6409, 270.0000},
		{2450.9836, 1327.2745, 10.6409, 0.0000},
		{2454.6257, 1327.2745, 10.6410, 0.0000},
		{2458.1453, 1327.2745, 10.6407, 0.0000},
		{2453.1067, 1345.0856, 10.6185, 0.0000},
		{2457.2837, 1345.0856, 10.6187, 0.0000},
		{2461.6689, 1345.0856, 10.6223, 0.0000},
		{2451.9392, 1357.6162, 10.6409, 180.0000},
		{2455.8706, 1357.6162, 10.6409, 180.0000},
		{2459.4697, 1357.6162, 10.6409, 180.0000},
		{2463.4968, 1357.6162, 10.6409, 180.0000},
		{2467.0620, 1357.6162, 10.6409, 180.0000},
		{2470.8596, 1357.6162, 10.6409, 180.0000},
		{2474.5889, 1357.6162, 10.6408, 180.0000}
	},//ТРАНСПОРТНА КОМПАНИЯ
	{//ls
		{-73.0662, -1138.3992, 2.0934, 334.0000},
		{-67.4416, -1141.0468, 2.0954, 334.0000},
		{-62.3113, -1143.5752, 2.0944, 334.0000},
		{-56.9763, -1146.1246, 2.0992, 334.0000},
		{-51.5848, -1148.6465, 2.0983, 334.0000},
		{-46.3469, -1151.1414, 2.1150, 334.0000},
		{-40.8276, -1153.6548, 2.0963, 334.0000},
		{-39.2590, -1145.0032, 2.0984, 65.0000},
		{-36.5911, -1139.6930, 2.0958, 65.0000},
		{-34.0856, -1134.5540, 2.0980, 65.0000},
		{-26.9305, -1125.6454, 2.0971, 160.0000},
		{-32.3384, -1123.7498, 2.0917, 160.0000},
		{-37.8672, -1121.5237, 2.0917, 160.0000},
		{-43.1510, -1119.5389, 2.0917, 160.0000},
		{-48.5604, -1117.5288, 2.0864, 160.0000},
		{-53.9550, -1115.4786, 2.0917, 159.8837},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000}

	},
	{//sf
		{-469.1691, -473.7513, 26.5467, 180.0000},
		{-474.1685, -473.7513, 26.5467, 180.0000},
		{-479.3889, -473.7513, 26.5467, 180.0000},
		{-484.5038, -473.7513, 26.5467, 180.0000},
		{-489.6243, -473.7513, 26.5467, 180.0000},
		{-494.6654, -473.7513, 26.5467, 180.0000},
		{-499.7348, -473.7513, 26.5467, 180.0000},
		{-504.6826, -473.7513, 26.5467, 180.0000},
		{-509.7936, -473.7513, 26.5467, 180.0000},
		{-514.7168, -473.7513, 26.5467, 180.0000},
		{-519.9040, -473.7513, 26.5467, 180.0000},
		{-524.6349, -473.7513, 26.5467, 180.0000},
		{-529.7674, -473.7513, 26.5467, 180.0000},
		{-534.8320, -473.7513, 26.5467, 180.0000},
		{-539.7120, -473.7513, 26.5467, 180.0000},
		{-544.7651, -473.7513, 26.5467, 180.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000}
	},
	{//lv
		{196.0370, -338.7674, 2.5944, 0.0000},
		{189.9101, -338.7674, 2.5944, 0.0000},
		{183.8461, -338.7674, 2.5944, 0.0000},
		{177.9124, -338.7674, 2.5944, 0.0000},
		{172.0277, -338.7674, 2.5944, 0.0000},
		{166.0319, -338.7674, 2.5944, 0.0000},
		{159.9279, -338.7674, 2.5944, 0.0000},
		{153.8436, -338.7674, 2.5944, 0.0000},
		{147.9041, -338.7674, 2.5944, 0.0000},
		{141.9637, -338.7674, 2.5944, 0.0000},
		{135.8837, -338.7674, 2.5944, 0.0000},
		{130.0420, -338.7674, 2.5944, 0.0000},
		{123.7230, -338.7674, 2.5944, 0.0000},
		{118.0001, -338.7674, 2.5944, 0.0000},
		{112.0287, -338.7674, 2.5944, 0.0000},
		{105.9255, -338.7674, 2.5944, 0.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000},
		{-1.00, -1.00, -1.00, 270.0000}
	}
};
enum HOUSE_DATA {
	houseID,	
	houseClass,
	houseApartmentCount,
	housePrice,
	houseHint,
	houseImprove[6],
	houseGun[9],
	houseSkin[3],
	houseSafeCode,
	houseSafeMoney,
	houseHealth,
	houseDrugs,
	houseProducts,
	houseClose,
	Float:houseX,
	Float:houseY,
	Float:houseZ,
	Float:houseR,
	Float:houseParkX,
	Float:houseParkY,
	Float:houseParkZ,
	Float:houseParkR,	
	houseOwnerID,
	houseOwner[MAX_PLAYER_NAME],
	houseHabitID[3],
	houseDay,
	bool:houseRob,
	/*hWall				[ 10 ],	// Стіни
	hFloor				[ 10 ],	// Підголи
	hRoof				[ 7 ],	// Стелі
	hStairs,
	hCountFurn,*/
	houseFamily
}
//бумбокс
enum BumBooxx
{
	bbBox
}
new BoxBum[BumBooxx];
new bumboxx[MAX_PLAYERS];
new RadioID[MAX_PLAYERS];
new Float:BumBoxPos[MAX_PLAYERS][3];
new Text3D:bumboxtext[MAX_PLAYERS];
new bumreader[MAX_PLAYERS];
//

new gHouses[MAX_HOUSE_COUNT][HOUSE_DATA],
	gHouseArendator[MAX_HOUSE_COUNT][3][MAX_PLAYER_NAME],
	gHouseArea[MAX_HOUSE_COUNT],
	gHousePickup[MAX_HOUSE_COUNT],
	gHouseIcon[MAX_HOUSE_COUNT],
	gHouseCount;

new gHouseImprovePriceN[3] = {10000,20000,25000},
	gHouseImprovePriceD[3] = {25000,60000,65000},
	gHouseImprovePriceB[3] = {75000,110000,115000},
	gHouseImprovePriceA[3] = {125000,160000,165000},
	gHouseImproveName[3][36] = {"Автоматичні двері ","Зменшення субсидії","Гараж"};

enum hotelInfo{
	hotelID,
	hotelName[64],
	hotelOwnerID,
	hotelOwner[MAX_PLAYER_NAME],
	hotelPrice,
	hotelCoast,
	hotelBank,
	hotelBankDay,
	hotelVisitors,
	Float:hotelAreaX,
	Float:hotelAreaY,
	Float:hotelAreaZ,
    hotelLevel,
    hotelVW[8],
	hotelDay,
	Float:carX,
	Float:carY,
	Float:carZ,
	Float:carC
};
new Text3D: gHotelText[HOTEL_COUNT],
	gHotelArea[HOTEL_COUNT],
	gHotelCount,
	gHotels[HOTEL_COUNT][hotelInfo];

enum roomInfo {
	roomsID,
    roomsOwner[MAX_PLAYER_NAME],
	Float:roomsEnterX,
	Float:roomsEnterY,
	Float:roomsEnterZ,
	Float:roomsEnterR,
    roomsDoors,
    roomsWorld,
    roomsDay,
    roomsHotel
};
new gRooms[240][roomInfo],
	gRoomsCount,
	Text3D:gRoomText[MAX_PLAYERS][11];

enum ac_info {
	acID,
    acName[64],
	acValue
};
new AntiCheat[53][ac_info];

enum airportInfo {
	airID,
	airName[64],
	airOwnerID,
	airOwner[MAX_PLAYER_NAME],
	airPrice,
	airCoast,
	airBank,
	Float:airAreaX,
	Float:airAreaY,
	Float:airAreaZ,
	airDay
};
new Text3D:gAirText[AIR_COUNT],
	gAirArea[AIR_COUNT],
	gAirCount,
	gAirs[AIR_COUNT][airportInfo];

new TotalFamily = 0;
enum family_data {
	famID,
	famColor,
	famCName[32],
	famName[32],
	famDate[32],
	famCOwner[MAX_PLAYER_NAME],
	famOwner[MAX_PLAYER_NAME],
	famDrugs,
	famMats,
	famInvRang,
	famUninvRang,
	famGiveRang,
	famSklad,
	famMessage[71],
	famExp,
	famLvl,
	famPoint,
	famDrugsMax,
	famMatsMax,
	famFuel,
	famFuelMax,
	famRemp,
	famRempMax,
	famArmour,
	famArmourMax,
	famHealth,
	famHealthMax,
	famMask,
	famMaskMax,
	famMoney,
	famMoneyMax,
	famHouse,
	famType
}
new gFamily[FAMILY_COUNT][family_data];
new FamRanks[FAMILY_COUNT][9][24];
new Text3D:fam_lable[MAX_PLAYERS] = {Text3D:-1, ...};
new FamilyColor[13][7] ={"FFFFFF","AFAFAF","33AA33","FF0000","FFFF00","FFD700","dc6a26","2C8BDE","98F5FF","DD90FF","63cb00","54FF9F","6B8E23"};
new FamilyColorG[13] ={COLOR_WHITE,0xAFAFAFAA,0x33AA33AA,0xFF0000AA,0xFFFF00FF,0xFFD700FF,0xdc6a26AA,0x2C8BDEAA,0x98F5FFFF,0xDD90FFFF,0x63cb00FF,0x54FF9FFF,0x6B8E23FF};

new fam_point_upgrade[21] = {3000,4500,6000,8500,10000,11800,13600,15400,17200,19000,20800,22600,24400,26200,28000,29800,31600,33400,35200,37000,99999999999999};

new FamilyMoneyUpdate[20] = {10000,50000,100000,200000,300000,400000,500000,1000000,2000000,3000000,5000000,8000000,10000000,15000000,20000000,25000000,30000000,35000000,40000000,50000000};
new FamilyDrugsUpdate[20] = {500,800,1100,1400,1700,2000,2300,2600,2900,3200,3500,3800,4100,4400,4700,5000,5300,5600,5900,6200};
new FamilyMatsUpdate[20] = {10000,20000,30000,40000,50000,60000,70000,80000,90000,100000,110000,120000,130000,140000,150000,160000,170000,180000,190000,200000};
new FamilyFuelUpdate[20] = {5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
new FamilyRempUpdate[20] = {5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
new FamilyArmourUpdate[20] = {3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60};
new FamilyMaskUpdate[20] = {5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100};
new FamilyHealthUpdate[20] = {10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200};

#define MAX_QUESTS 10
enum QuestInfo {
	QuestName[64],
	QuestText[1024],
	LastProgress
}
new QI[MAX_QUESTS][QuestInfo] = {
	{"","",70},
	{"Збір яблук","{f6f6d9}Привіт! Ми раді бачити тебе в нашому Штаті,\nдля того щоб заробити перші гроші тобі потрібно відправитись\nв Яблочний сад і зібрати 40кг яблук, за кожен кілограм тобі добре заплатять.\n\n"ORANGE"Задача: Зібрати 40кг яблук\n"YELLOW"Нагорода: "GREEN"$8000",40},
	{"Збір Зброї","{f6f6d9}Чув про наш завод по виробництву зброї?\nПотрібна твоя допомога в виробництві зброї,\nробота легальна і добре оплачується. Відправляйся на завод і зготуй 15 одиниць зброї.\n\n"ORANGE"Задача: Зібрати 15 од. зброї\n"YELLOW"Нагорода: "GREEN"$8000",15},
	{"Грущик","{f6f6d9} Поважні люди платять не погані гроші за кожну бочку нафти,\nвникни в суть діла та допоможи перенести 10 бочок з нафтою, можливо ти наступний нафтовий магнат.\n\n"ORANGE"Задача: Перенести 10 бочок з нафтою\n"YELLOW"Нагорода: "GREEN"$8000",10},
	{"Лісоруб","{f6f6d9}Ну ти прям трудоголік, друже, остання задача для тебе.\nСрочно потрібна робоча сила на заводі по переробці дерева, \nзруби та перенеси 20 одиниць древесини та получи від мене нагороду.\n\n"ORANGE"Задача: Зрубити та перенести 20 од древесини\n"YELLOW"Нагорода: "GREEN"$10000",20},

	{"Злодій","{f6f6d9}Перше завдання для тебе!\nПроберись на склад армій,\nта укради 500 одиниць боєприпасів.\n\n"ORANGE"Задача: Викрасти 500 од боєприпасів.\n"YELLOW"Нагорода: "GREEN"$5000",500},
	{"Грабувальник","{f6f6d9}На наших районах появились богаті жильці.\nНе хочеш викрасти у них гроші?\nСтупай та пограбуй 15 будинків.\n\n"ORANGE"Задача: Пограбувати 15 будинків (/robhouse)\n"YELLOW"Нагорода: "GREEN"$7000",15},
	{"Продавець","{f6f6d9}Зароби на продажі зброї.\nНайди 10 людей, які хочуть пострілятись, та продай їм любу зброю.\n\n"ORANGE"Задача: Продати зброю 10 гравцям\n"YELLOW"Нагорода: "GREEN"$7000",10},
	{"Тащер","{f6f6d9}Здається ти уже досвідчений бандит.\nТак ось, вбий 20 гравців під час війни (капта),\nя тобі за це гарно заплачу. Да і авторитет свій піднімеш\n\n"ORANGE"Задача: Убити 20 гравців під час капта\n"YELLOW"Нагорода: "GREEN"$10000",20},
	{"Провокатор","{f6f6d9}Час останнього завдання!\nСпровокуй війну за територію з другою бандою.\nСтань кращим провокатором своєї банди!\n\n"ORANGE"Задача: Спровокувати війну за територію\n"YELLOW"Нагорода: "GREEN"$20000",1}
};
new QuestProgress[MAX_PLAYERS][MAX_QUESTS];
new QuestShow[MAX_PLAYERS][MAX_QUESTS];
new AcceptQuest[MAX_PLAYERS][MAX_QUESTS];
new QuestClick[MAX_PLAYERS];

enum AIRPLANE_DATA {
	aID,
	aAirport,
	aPlane,
    aOwner[24],
	aTime,
    aPrice,
    aCar,
    Float:aFuel,
    Float:aPos[4],
    Text3D:aText
}
new gAirplanes[34][AIRPLANE_DATA];

enum B_INFO {
    bObjectID,
	bObjectModel,
	Float:bPos[4],
    bPosText[32],
	bText[144],
	bOwner[MAX_PLAYER_NAME],
	bOwned,
	bBackColor,
	bFontFace,
	bAligment,
	bFontSize,
	bDay
};
new BildInfo[MAX_BILLBORDS][B_INFO];
new Colors_BIG[100] = { 0x000000,0xFFFFFF,0x20B2AA,0xDC143C,0x6495ED,0xf0e68c,0x778899,0xFF1493,0xF4A460,0xEE82EE,0xFFD720, 0x8b4513,0x4949A0,0x148b8b,0x14ff7f,0x556b2f,0x0FD9FA,0x10DC29,0x534081,0x0495CD,0xEF6CE8,0xBD34DA,
0x247C1B,0x0C8E5D,0x635B03,0xCB7ED3,0x65ADEB,0x5C1ACC,0xF2F853,0x11F891,0x7B39AA,0x53EB10,0x54137D, 0x275222,0xF09F5B,0x3D0A4F,0x22F767,0xD63034,0x9A6980,0xDFB935,0x3793FA,0x90239D,0xE9AB2F,0xAF2FF3,
0x057F94,0xB98519,0x388EEA,0x028151,0xA55043,0x0DE018,0x93AB1C,0x95BAF0,0x369976,0x18F71F,0x4B8987, 0x491B9E,0x829DC7,0xBCE635,0xCEA6DF,0x20D4AD,0x2D74FD,0x3C1C0D,0x12D6D4,0x48C000,0x2A51E2,0xE3AC12,
0xFC42A8,0x2FC827,0x1A30BF,0xB740C2,0x42ACF5,0x2FD9DE,0xFAFB71,0x05D1CD,0xC471BD,0x94436E,0xC1F7EC, 0xCE79EE,0xBD1EF2,0x93B7E4,0x3214AA,0x184D3B,0xAE4B99,0x7E49D7,0x4C436E,0xFA24CC,0xCE76BE,0xA04E0A,
0x9F945C,0xDCDE3D,0x10C9C5,0x70524D,0x0BE472,0x8A2CD7,0x6152C2,0xCF72A9,0xE59338,0xEEDC2D,0xD8C762, 0x3FE65C };

new Colors_LOW[][12] = { "000000","FFFFFF","20B2AA","DC143C","6495ED","f0e68c","778899","FF1493","F4A460","EE82EE","FFD720", "8b4513","4949A0","148b8b","14ff7f","556b2f","0FD9FA","10DC29","534081","0495CD","EF6CE8","BD34DA",
"247C1B","0C8E5D","635B03","CB7ED3","65ADEB","5C1ACC","F2F853","11F891","7B39AA","53EB10","54137D", "275222","F09F5B","3D0A4F","22F767","D63034","9A6980","DFB935","3793FA","90239D","E9AB2F","AF2FF3",
"057F94","B98519","388EEA","028151","A55043","0DE018","93AB1C","95BAF0","369976","18F71F","4B8987", "491B9E","829DC7","BCE635","CEA6DF","20D4AD","2D74FD","3C1C0D","12D6D4","48C000","2A51E2","E3AC12",
"FC42A8","2FC827","1A30BF","B740C2","42ACF5","2FD9DE","FAFB71","05D1CD","C471BD","94436E","C1F7EC", "CE79EE","BD1EF2","93B7E4","3214AA","184D3B","AE4B99","7E49D7","4C436E","FA24CC","CE76BE","A04E0A",
"9F945C","DCDE3D","10C9C5","70524D","0BE472","8A2CD7","6152C2","CF72A9","E59338","EEDC2D","D8C762","3FE65C" };

new skin_register[14][1] = {
	{137}, {136}, {135}, {134}, {79}, {78}, {230}, {212},
	
	{12}, {13}, {12}, {12}, {12}, {13}
};
stock SendDead(ids,whoids,killerid,playerid,reason) {
	foreach(new m:Player) {
		if(!TI[m][tLogin] ||  AntiCheatIsKickedWithDesync(m)) continue;
		if(PlayerInfo[m][pMember] == ids || PlayerInfo[m][pMember] == whoids) SendDeathMessageToPlayer(m, killerid, playerid, reason);
	}
	return 1;
}
stock IsAMafia(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fLCN,fYAKUZA,fRM: return 1;
	}
	return 0;
}
stock IsAGang(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: return 1;
	}
	return 0;
}
stock IsANews(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fLSNEWS,fSFNEWS,fLVNEWS: return 1;
	}
	return 0;
}
stock DollahScoreUpdate(playerid) return SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);

stock IsAMedic(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fMEDICLS,fMEDICSF,fMEDICLV: return 1;
	}
	return 0;
}
stock IsAMayor(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fMAYOR: return 1;
	}
	return 0;
}
stock IsAPD(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fLSPD,fSFPD,fLVPD: return 1;
	}
	return 0;
}
stock IsACop(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fLSPD,fSFPD,fLVPD,fFBI: return 1;
	}
	return 0;
}
stock IsAArm(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(GetTeamID(playerid)) {
		case fARMYSF,fARMYLV: return 1;
	}
	return 0;
}
stock IsATaxi(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PlayerInfo[playerid][bizz_work]) {
		case 2..4: return 1;
	}
	return 0;
}
stock IsATK(playerid) {
	if(!IsPlayerConnected(playerid)) return 0;
	switch(PlayerInfo[playerid][bizz_work]) {
		case 5..7: return 1;
	}
	return 0;
}

stock SetPlayerToFacePlayer(playerid,targetid) {
    new Float:angle;
    GetPlayerFacingAngle(playerid, angle);
    SetPlayerFacingAngle(targetid,angle);
}

enum v_car {
	vSpawn,
	vOwner[MAX_PLAYER_NAME],
	vColor[2],
	vPaintJob,
	vTuneList[13],
	vTeam,
	vRank,
	vJob,
	vBus,
	vBizz,
	vLights,
	vAlarm,
	vType,
	Float:vFuel,
	Float:vDrived,
	Float:vAkum,
	vPlayer,
	Float:veX,
	Float:veY,
	Float:veZ,
	Float:veA,
	Float:vEngineBoost,
	Float:vBrakeBoost,
	Float:vStabilityBoost,
	Float:vzAngle,
	vPEngine[5],
	vPBrake[5],
	vPerfStatus,
	bool:vRobHouse,
	vKey,
	vLock,
	vEngine
}
new VehicleInfo[MAX_VEHICLES][v_car];
new VehicleState[MAX_VEHICLES];

enum v_gun {
	vgID,
	vgAmount[2],
	Text3D:vgText,
	bool:vgLoading,
	bool:vgUnloading,
	vgPickup,
	vgArea,
	vgDrugs,
	bool:vgRobHouse
}
new VG[MAX_VEHICLES][v_gun];

enum ARs {
	arZavod,
	arZavodSklad,
	arArmySFSklad,
	arArmyLVSklad,
	arOil[6],
	arLoadProds[2],
	arSad,
	arJob[6],
	arClothes[9],
	arPobeg[2],
	arManiken[18],
	arNews[2],
	arGripp[3],
	arPerfomans[2]
}
new gAreas[ARs];

new Text3D:gun_3dtext[3],
	gun_pickup[24],
	Float:gun_checkpoints[24][3] = {
		{2708.8772,-2411.6133,13.6328}, // місце оружейки 1
		{2710.6575,-2411.6133,13.6328}, // місце оружейки 2
		{2708.9011,-2415.6052,13.6328}, // місце оружейки 3
		{2710.8159,-2415.6047,13.6328}, // місце оружейки 4
		{2708.8315,-2417.0789,13.6328}, // місце оружейки 5
		{2710.6995,-2417.0791,13.6328}, // місце оружейки 6
		{2715.2690,-2411.6135,13.6328}, // місце оружейки 7
		{2716.9167,-2411.6111,13.6328}, // місце оружейки 8
		{2715.3184,-2415.6064,13.6328}, // місце оружейки 9
		{2717.1924,-2415.6052,13.6328}, // місце оружейки 10
		{2715.2151,-2417.0791,13.6328}, // місце оружейки 11
		{2717.1125,-2417.0774,13.6328}, // місце оружейки 12
		{2710.7349,-2399.6270,13.6328}, // місце оружейки 13
		{2708.9243,-2399.6238,13.6328}, // місце оружейки 14
		{2708.8003,-2395.5623,13.6328}, // місце оружейки 15
		{2710.7014,-2395.5630,13.6328}, // місце оружейки 16
		{2710.7378,-2393.6458,13.6328}, // місце оружейки 17
		{2708.9084,-2393.6472,13.6328}, // місце оружейки 18
		{2715.3267,-2399.6262,13.6328}, // місце оружейки 19
		{2717.1904,-2399.6257,13.6328}, // місце оружейки 20
		{2717.0771,-2395.5630,13.6328}, // місце оружейки 21
		{2715.2449,-2395.5635,13.6328}, // місце оружейки 22
		{2717.2051,-2393.6475,13.6328}, // місце оружейки 23
		{2715.3521,-2393.6460,13.6328} // місце оружейки 24
	},
	GunWorkWeapon[6] = {348,353,355,356,346,349},
	zavodsklad;

new oilsklad,
	Text3D:oil_3dtext;

new pricedrugs;
new disease;

new Float:clothes_checkpoints[9][3] = {
		{1302.2273,2450.8921,1011.8739},
		{1302.2482,2453.2739,1011.8739},
		{1302.2648,2455.7158,1011.8739},
		{1298.9824,2455.7158,1011.8739},
		{1298.9872,2453.2739,1011.8739},
		{1299.0380,2450.8921,1011.8739},
		{1295.6338,2450.8921,1011.8739},
		{1295.6832,2453.2734,1011.8739},
		{1295.7318,2455.7158,1011.8739}
	},
	Float:clothes_works[9][3] = {
		{1302.33557, 2451.59131, 1011.60541},
		{1302.35229, 2453.98755, 1011.60541},
		{1302.24475, 2456.43945, 1011.60541},
		{1299.07898, 2456.44971, 1011.60541},
		{1298.96863, 2454.02734, 1011.60541},
		{1298.98938, 2451.65430, 1011.60541},
		{1295.62463, 2451.61255, 1011.60541},
		{1295.77319, 2454.06006, 1011.60541},
		{1295.81433, 2456.51196, 1011.60541}
	};

new fork_pickup,
	fork_pickups,
	Float:fork_allpickups[11][3] = {
		{1214.8530,2306.4580,1008.9139}, // вилка 1
		{1203.8088,2301.6340,1008.9139}, // вилка 2
		{1203.7101,2295.4634,1008.9139}, // вилка 3
		{1203.7124,2292.0486,1008.9139}, // вилка 4
		{1203.6594,2288.8381,1008.9139}, // вилка 5
		{1211.5032,2287.3240,1008.9139}, // вилка 6
		{1214.4635,2287.8840,1008.9139}, // вилка 7
		{1217.6741,2292.7222,1008.9139}, // вилка 8
		{1214.4635,2292.8457,1008.9139}, // вилка 9
		{1214.4635,2298.5601,1008.9139}, // вилка 10
		{1217.6741,2298.5061,1008.9139} // вилка 11
	};

new maniken[MAX_PLAYERS],
	Float:alcatraz_maniken[18][3] = {
		{753.66687, 588.01678, 1063.15625},
		{759.23547, 588.01678, 1063.15625},
		{760.66748, 588.01678, 1063.15625},
		{771.20062, 588.01678, 1063.15625},
		{776.71661, 588.01678, 1063.15625},
		{780.18860, 588.01678, 1063.15625},
		{780.22607, 588.01678, 1066.81628},
		{776.72803, 588.01678, 1066.79639},
		{771.18481, 588.01678, 1066.79639},
		{760.60321, 588.01678, 1066.79639},
		{759.21057, 588.03638, 1066.79639},
		{753.57727, 588.27856, 1066.79639},
		{753.55029, 588.15723, 1070.43628},
		{759.25525, 587.98145, 1070.43628},
		{760.63263, 588.07227, 1070.43628},
		{771.15869, 588.27612, 1070.43628},
		{776.71460, 588.00989, 1070.43628},
		{780.19446, 587.92993, 1070.43628}
	},
	Float:AlcatrazSpawns[18][4] = {
		{755.0739,589.0833,1063.3656,181.6186},
		{757.9329,589.1299,1063.3656,179.1118},
		{762.0038,589.0305,1063.3656,179.4253},
		{772.6663,589.0371,1063.3656,177.5454}, 
		{775.3486,588.9456,1063.3656,180.0523},
		{778.8930,588.8256,1063.3656,179.4256}, 
		{778.7370,588.8964,1067.0107,179.7387},
		{775.4164,588.8442,1067.0107,177.5455},
		{772.7256,588.9982,1067.0107,178.1488},
		{762.1152,588.9001,1067.0107,179.6921},
		{757.7969,588.7919,1067.0107,179.9820},
		{755.0713,589.0401,1067.0107,180.2721},
		{754.9739,589.1035,1070.6417,180.2487},
		{757.8131,589.0568,1070.6417,180.8754},
		{762.1030,588.8369,1070.6417,180.2488},
		{772.7346,589.0098,1070.6417,180.2493},
		{775.2703,589.1150,1070.6417,181.8159},
		{778.8127,588.7805,1070.6417,178.9958}
	};

stock IsAAlca(playerid) {
	if(!IsPlayerConnected(playerid)) return false;
	if(PlayerToPoint(1.0,playerid,755.134033, 590.941406, 1062.480224) ||
			PlayerToPoint(1.0,playerid,757.677246, 590.941406, 1062.480224) ||
			PlayerToPoint(1.0,playerid,762.199951, 590.941406, 1062.480224) ||
			PlayerToPoint(1.0,playerid,772.745361, 590.941406, 1062.480224) ||
			PlayerToPoint(1.0,playerid,775.189208, 590.941406, 1062.480224) ||
			PlayerToPoint(1.0,playerid,778.672119, 590.941406, 1062.480224) ||
			PlayerToPoint(1.0,playerid,755.134033, 590.941406, 1066.110961) ||
			PlayerToPoint(1.0,playerid,757.677246, 590.941406, 1066.110961) ||
			PlayerToPoint(1.0,playerid,762.199951, 590.941406, 1066.110961) ||
			PlayerToPoint(1.0,playerid,772.745361, 590.941406, 1066.110961) ||
			PlayerToPoint(1.0,playerid,775.189208, 590.941406, 1066.110961) ||
			PlayerToPoint(1.0,playerid,778.672119, 590.941406, 1066.110961) ||
			PlayerToPoint(1.0,playerid,755.134033, 590.941406, 1069.741943) ||
			PlayerToPoint(1.0,playerid,757.677246, 590.941406, 1069.741943) ||
			PlayerToPoint(1.0,playerid,762.199951, 590.941406, 1069.741943) ||
			PlayerToPoint(1.0,playerid,772.745361, 590.941406, 1069.741943) ||
			PlayerToPoint(1.0,playerid,775.189208, 590.941406, 1069.741943) ||
			PlayerToPoint(1.0,playerid,778.672119, 590.941406, 1069.741943))
	{
		return true;
	}
	return false;
}
#include "../source/mast_func.inc"
new object_oil[MAX_PLAYERS];

new Text3D:sklad_armysf[3],
	Text3D:sklad_armylv[2],
	Text3D:sklad_cops[4];

new l_actor[3][8],
	l_actort[3][8],
	l_actors[3][8],
	Float:l_actor_pos[8][4] = {
		{1620.3792,998.7274,1475.6283,180.9220}, // актор робочий за столом
		{1621.3796,990.7556,1475.6283,272.4163}, // актор робочий за столом
		{1627.0360,998.4398,1475.6283,1.7172}, // актор у куста
		{1626.9094,992.0641,1475.6283,179.0421}, // актор у куста
		{1630.2444,998.4404,1475.6283,358.5839}, // актор у куста
		{1630.0763,992.0634,1475.6283,180.2955}, // актор у куста
		{1633.3794,998.4421,1475.6283,1.4039}, // актор у куста
		{1633.1389,992.0649,1475.6283,181.5488} // актор у куста
	};

new Float:news_edit[8][3] = {
 	{766.6069,-1531.0240,1417.8180},
	{766.7095,-1533.7859,1417.8180},
	{766.6608,-1536.2832,1417.8180},
	{766.5391,-1539.0297,1417.8180},
	{759.7090,-1539.0297,1417.8180},
	{759.6584,-1536.2838,1417.8180},
	{759.6487,-1533.7859,1417.8180},
	{759.6533,-1531.2749,1417.8180}
};

new Float:comp_club[15][3] = {
	{840.469,-221.190,1000.190},
	{840.489,-219.210,1000.190},
	{840.500,-217.229,1000.190},
	{840.520,-215.240,1000.190},
	{840.530,-213.250,1000.190},
	{840.549,-211.270,1000.190},
	{840.559,-209.279,1000.190},
	{840.580,-207.289,1000.190},
	{840.590,-205.300,1000.190},
	{847.179,-204.389,1000.190},
	{845.190,-204.389,1000.190},
	{847.200,-207.250,1000.190},
	{845.210,-207.240,1000.190},
	{847.200,-210.169,1000.190},
	{845.210,-210.169,1000.190}
};

new Float:auto_exam[12][3] = {
	{-1223.340209, 1577.941650, 1112.405273},
	{-1223.340209, 1576.360107, 1112.405273},
	{-1223.340209, 1574.818603, 1112.405273},
	{-1220.148193, 1577.941650, 1112.405273},
	{-1220.148193, 1576.360107, 1112.405273},
	{-1220.148193, 1574.818603, 1112.405273},
	{-1216.725219, 1577.941650, 1112.405273},
	{-1216.725219, 1576.360107, 1112.405273},
	{-1216.725219, 1574.818603, 1112.405273},

	{-1226.6626,1564.0245,1114.0768},
	{-1226.6938,1566.5065,1114.0768},
	{-1226.6665,1568.6997,1114.0768}
};

new Float:tuning_enter[3][3] = {
	{1153.4031,-1208.7499,19.0252},//LS
	{-1786.8206,1206.0835,25.1250},//SF
	{1643.8298,2197.1387,10.8203}//LV
};
new Float:tuning_exit_1[3][4] = {
	{1146.8389,-1218.7427,17.7843,180.1412},//1
	{1151.7120,-1219.6622,17.6905,179.8527},//2
	{1156.8915,-1219.8698,17.6866,179.4841}//3
};
new Float:tuning_exit_2[3][4] = {
	{-1779.4021, 1204.3573, 24.8605, 180.0000},//1
	{-1775.1401, 1204.3573, 24.8605, 180.0000},//2
	{-1770.8749, 1204.3573, 24.8605, 180.0000}//3
};
new Float:tuning_exit_3[3][4] = {
	{1638.3571, 2195.1743, 10.5474, 180.0000},//1
	{1632.6182, 2195.1743, 10.5474, 180.0000},//2
	{1626.9589, 2195.1743, 10.5474, 180.0000}//3
};

new TotalGZ[5],
	Text3D:black_market,
	black_prods[10];

stock IsPlayerInBandOnline(bandid) {
	new count_band_online = 1;
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pMember] == bandid) {
			count_band_online++;
			if(count_band_online >= 3) return true;
		}
	}
	return false;
}
stock Float:PointToPoint2D(Float:x1,Float:y1,Float:x2,Float:y2) return floatsqroot(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)));
stock Float:GetPlayerDistanceToPlayer(playerid, targetid) {
    new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerPos(targetid, x2, y2, z2);
    return PointToPoint2D(x, y, x2, y2);
}

stock CreateTextDraws(playerid) {
    PhonesSA[playerid][0] = CreatePlayerTextDraw(playerid, 538.3168, 153.8333, "12:00"); // ?????
	PlayerTextDrawLetterSize(playerid, PhonesSA[playerid][0], 0.1680, 0.7600);
	PlayerTextDrawAlignment(playerid, PhonesSA[playerid][0], 2);
	PlayerTextDrawColor(playerid, PhonesSA[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, PhonesSA[playerid][0], 255);
	PlayerTextDrawFont(playerid, PhonesSA[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, PhonesSA[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, PhonesSA[playerid][0], 0);

	PhonesSA[playerid][1] = CreatePlayerTextDraw(playerid, 599.6934, 153.8333, "3G"); // ?????
	PlayerTextDrawLetterSize(playerid, PhonesSA[playerid][1], 0.1680, 0.7600);
	PlayerTextDrawAlignment(playerid, PhonesSA[playerid][1], 2);
	PlayerTextDrawColor(playerid, PhonesSA[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, PhonesSA[playerid][1], 255);
	PlayerTextDrawFont(playerid, PhonesSA[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, PhonesSA[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, PhonesSA[playerid][1], 0);

	PhonesSA[playerid][2] = CreatePlayerTextDraw(playerid, 606.0841, 156.1667, "LD_SPAC:white"); // ?????
	PlayerTextDrawTextSize(playerid, PhonesSA[playerid][2], 7.0000, 3.0000);
	PlayerTextDrawAlignment(playerid, PhonesSA[playerid][2], 1);
	PlayerTextDrawColor(playerid, PhonesSA[playerid][2], 8388863);
	PlayerTextDrawBackgroundColor(playerid, PhonesSA[playerid][2], 255);
	PlayerTextDrawFont(playerid, PhonesSA[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, PhonesSA[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, PhonesSA[playerid][2], 0);

	PhonesSA[playerid][3] = CreatePlayerTextDraw(playerid, 573.9244, 163.7500, "12:00"); // ?????
	PlayerTextDrawLetterSize(playerid, PhonesSA[playerid][3], 0.5667, 3.7933);
	PlayerTextDrawAlignment(playerid, PhonesSA[playerid][3], 2);
	PlayerTextDrawColor(playerid, PhonesSA[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, PhonesSA[playerid][3], 255);
	PlayerTextDrawFont(playerid, PhonesSA[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, PhonesSA[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, PhonesSA[playerid][3], 0);

	PhonesSA[playerid][4] = CreatePlayerTextDraw(playerid, 573.4561, 193.5000, "24.03.2019"); // ?????
	PlayerTextDrawLetterSize(playerid, PhonesSA[playerid][4], 0.1437, 0.6083);
	PlayerTextDrawAlignment(playerid, PhonesSA[playerid][4], 2);
	PlayerTextDrawColor(playerid, PhonesSA[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, PhonesSA[playerid][4], 255);
	PlayerTextDrawFont(playerid, PhonesSA[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, PhonesSA[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, PhonesSA[playerid][4], 0);

 	//----------------------------------------------------------------------------//

	PhoneSA[0] = TextDrawCreate(533.9317, 135.7499, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[0], 78.0000, 203.0000);
	TextDrawAlignment(PhoneSA[0], 1);
	TextDrawColor(PhoneSA[0], 255);
	TextDrawBackgroundColor(PhoneSA[0], 255);
	TextDrawFont(PhoneSA[0], 4);
	TextDrawSetProportional(PhoneSA[0], 0);
	TextDrawSetShadow(PhoneSA[0], 0);

	PhoneSA[1] = TextDrawCreate(525.0296, 147.4165, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[1], 96.0000, 180.0000);
	TextDrawAlignment(PhoneSA[1], 1);
	TextDrawColor(PhoneSA[1], 255);
	TextDrawBackgroundColor(PhoneSA[1], 255);
	TextDrawFont(PhoneSA[1], 4);
	TextDrawSetProportional(PhoneSA[1], 0);
	TextDrawSetShadow(PhoneSA[1], 0);

	PhoneSA[2] = TextDrawCreate(520.8128, 311.9169, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[2], 27.0000, 32.0000);
	TextDrawAlignment(PhoneSA[2], 1);
	TextDrawColor(PhoneSA[2], 255);
	TextDrawBackgroundColor(PhoneSA[2], 255);
	TextDrawFont(PhoneSA[2], 4);
	TextDrawSetProportional(PhoneSA[2], 0);
	TextDrawSetShadow(PhoneSA[2], 0);

	PhoneSA[3] = TextDrawCreate(598.1187, 311.9169, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[3], 27.0000, 32.0000);
	TextDrawAlignment(PhoneSA[3], 1);
	TextDrawColor(PhoneSA[3], 255);
	TextDrawBackgroundColor(PhoneSA[3], 255);
	TextDrawFont(PhoneSA[3], 4);
	TextDrawSetProportional(PhoneSA[3], 0);
	TextDrawSetShadow(PhoneSA[3], 0);

	PhoneSA[4] = TextDrawCreate(520.8128, 130.5000, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[4], 27.0000, 32.0000);
	TextDrawAlignment(PhoneSA[4], 1);
	TextDrawColor(PhoneSA[4], 255);
	TextDrawBackgroundColor(PhoneSA[4], 255);
	TextDrawFont(PhoneSA[4], 4);
	TextDrawSetProportional(PhoneSA[4], 0);
	TextDrawSetShadow(PhoneSA[4], 0);

	PhoneSA[5] = TextDrawCreate(598.1189, 130.4999, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[5], 27.0000, 32.0000);
	TextDrawAlignment(PhoneSA[5], 1);
	TextDrawColor(PhoneSA[5], 255);
	TextDrawBackgroundColor(PhoneSA[5], 255);
	TextDrawFont(PhoneSA[5], 4);
	TextDrawSetProportional(PhoneSA[5], 0);
	TextDrawSetShadow(PhoneSA[5], 0);

	PhoneSA[6] = TextDrawCreate(526.4351, 153.8331, "LD_SPAC:backgnd"); // ?????
	TextDrawTextSize(PhoneSA[6], 93.0000, 167.0000);
	TextDrawAlignment(PhoneSA[6], 1);
	TextDrawColor(PhoneSA[6], -1);
	TextDrawBackgroundColor(PhoneSA[6], 255);
	TextDrawFont(PhoneSA[6], 4);
	TextDrawSetProportional(PhoneSA[6], 0);
	TextDrawSetShadow(PhoneSA[6], 0);

	PhoneSA[7] = TextDrawCreate(566.2600, 323.0002, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[7], 14.0000, 11.0000);
	TextDrawAlignment(PhoneSA[7], 1);
	TextDrawColor(PhoneSA[7], -2139062017);
	TextDrawBackgroundColor(PhoneSA[7], 255);
	TextDrawFont(PhoneSA[7], 4);
	TextDrawSetProportional(PhoneSA[7], 0);
	TextDrawSetShadow(PhoneSA[7], 0);
	TextDrawSetSelectable(PhoneSA[7], true);

	PhoneSA[8] = TextDrawCreate(559.7004, 320.0832, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[8], 14.0000, 17.0000);
	TextDrawAlignment(PhoneSA[8], 1);
	TextDrawColor(PhoneSA[8], -2139062017);
	TextDrawBackgroundColor(PhoneSA[8], 255);
	TextDrawFont(PhoneSA[8], 4);
	TextDrawSetProportional(PhoneSA[8], 0);
	TextDrawSetShadow(PhoneSA[8], 0);

	PhoneSA[9] = TextDrawCreate(572.3504, 320.0832, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[9], 14.0000, 17.0000);
	TextDrawAlignment(PhoneSA[9], 1);
	TextDrawColor(PhoneSA[9], -2139062017);
	TextDrawBackgroundColor(PhoneSA[9], 255);
	TextDrawFont(PhoneSA[9], 4);
	TextDrawSetProportional(PhoneSA[9], 0);
	TextDrawSetShadow(PhoneSA[9], 0);

	PhoneSA[10] = TextDrawCreate(566.7289, 323.5835, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[10], 13.0000, 10.0000);
	TextDrawAlignment(PhoneSA[10], 1);
	TextDrawColor(PhoneSA[10], 255);
	TextDrawBackgroundColor(PhoneSA[10], 255);
	TextDrawFont(PhoneSA[10], 4);
	TextDrawSetProportional(PhoneSA[10], 0);
	TextDrawSetShadow(PhoneSA[10], 0);

	PhoneSA[11] = TextDrawCreate(560.1687, 321.2498, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[11], 13.0000, 15.0000);
	TextDrawAlignment(PhoneSA[11], 1);
	TextDrawColor(PhoneSA[11], 255);
	TextDrawBackgroundColor(PhoneSA[11], 255);
	TextDrawFont(PhoneSA[11], 4);
	TextDrawSetProportional(PhoneSA[11], 0);
	TextDrawSetShadow(PhoneSA[11], 0);

	PhoneSA[12] = TextDrawCreate(572.8186, 321.2498, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[12], 13.0000, 15.0000);
	TextDrawAlignment(PhoneSA[12], 1);
	TextDrawColor(PhoneSA[12], 255);
	TextDrawBackgroundColor(PhoneSA[12], 255);
	TextDrawFont(PhoneSA[12], 4);
	TextDrawSetProportional(PhoneSA[12], 0);
	TextDrawSetShadow(PhoneSA[12], 0);

	PhoneSA[13] = TextDrawCreate(620.6078, 166.0833, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[13], 1.0000, 32.0000);
	TextDrawAlignment(PhoneSA[13], 1);
	TextDrawColor(PhoneSA[13], 255);
	TextDrawBackgroundColor(PhoneSA[13], 255);
	TextDrawFont(PhoneSA[13], 4);
	TextDrawSetProportional(PhoneSA[13], 0);
	TextDrawSetShadow(PhoneSA[13], 0);

	PhoneSA[14] = TextDrawCreate(620.6077, 201.0833, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[14], 1.0000, 13.0000);
	TextDrawAlignment(PhoneSA[14], 1);
	TextDrawColor(PhoneSA[14], 255);
	TextDrawBackgroundColor(PhoneSA[14], 255);
	TextDrawFont(PhoneSA[14], 4);
	TextDrawSetProportional(PhoneSA[14], 0);
	TextDrawSetShadow(PhoneSA[14], 0);
	TextDrawSetSelectable(PhoneSA[14], true);

	PhoneSA[15] = TextDrawCreate(564.8543, 143.9166, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[15], 17.0000, 1.0000);
	TextDrawAlignment(PhoneSA[15], 1);
	TextDrawColor(PhoneSA[15], 454761471);
	TextDrawBackgroundColor(PhoneSA[15], 255);
	TextDrawFont(PhoneSA[15], 4);
	TextDrawSetProportional(PhoneSA[15], 0);
	TextDrawSetShadow(PhoneSA[15], 0);

	PhoneSA[16] = TextDrawCreate(584.0636, 141.5833, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[16], 5.0000, 6.0000);
	TextDrawAlignment(PhoneSA[16], 1);
	TextDrawColor(PhoneSA[16], 454761471);
	TextDrawBackgroundColor(PhoneSA[16], 255);
	TextDrawFont(PhoneSA[16], 4);
	TextDrawSetProportional(PhoneSA[16], 0);
	TextDrawSetShadow(PhoneSA[16], 0);

	PhoneSA[17] = TextDrawCreate(526.4354, 153.8333, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[17], 93.0000, 8.0000);
	TextDrawAlignment(PhoneSA[17], 1);
	TextDrawColor(PhoneSA[17], 170);
	TextDrawBackgroundColor(PhoneSA[17], 255);
	TextDrawFont(PhoneSA[17], 4);
	TextDrawSetProportional(PhoneSA[17], 0);
	TextDrawSetShadow(PhoneSA[17], 0);

	PhoneSA[18] = TextDrawCreate(593.4343, 155.5832, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[18], 1.0000, 4.0000);
	TextDrawAlignment(PhoneSA[18], 1);
	TextDrawColor(PhoneSA[18], -1);
	TextDrawBackgroundColor(PhoneSA[18], 255);
	TextDrawFont(PhoneSA[18], 4);
	TextDrawSetProportional(PhoneSA[18], 0);
	TextDrawSetShadow(PhoneSA[18], 0);

	PhoneSA[19] = TextDrawCreate(592.0286, 156.7499, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[19], 1.0000, 3.0000);
	TextDrawAlignment(PhoneSA[19], 1);
	TextDrawColor(PhoneSA[19], -1);
	TextDrawBackgroundColor(PhoneSA[19], 255);
	TextDrawFont(PhoneSA[19], 4);
	TextDrawSetProportional(PhoneSA[19], 0);
	TextDrawSetShadow(PhoneSA[19], 0);

	PhoneSA[20] = TextDrawCreate(590.6231, 158.4999, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[20], 1.0000, 1.0000);
	TextDrawAlignment(PhoneSA[20], 1);
	TextDrawColor(PhoneSA[20], -1);
	TextDrawBackgroundColor(PhoneSA[20], 255);
	TextDrawFont(PhoneSA[20], 4);
	TextDrawSetProportional(PhoneSA[20], 0);
	TextDrawSetShadow(PhoneSA[20], 0);

	PhoneSA[21] = TextDrawCreate(590.6231, 157.9166, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[21], 1.0000, 1.0000);
	TextDrawAlignment(PhoneSA[21], 1);
	TextDrawColor(PhoneSA[21], -1);
	TextDrawBackgroundColor(PhoneSA[21], 255);
	TextDrawFont(PhoneSA[21], 4);
	TextDrawSetProportional(PhoneSA[21], 0);
	TextDrawSetShadow(PhoneSA[21], 0);

	PhoneSA[22] = TextDrawCreate(605.6154, 155.5833, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[22], 8.0000, 4.0000);
	TextDrawAlignment(PhoneSA[22], 1);
	TextDrawColor(PhoneSA[22], -1);
	TextDrawBackgroundColor(PhoneSA[22], 255);
	TextDrawFont(PhoneSA[22], 4);
	TextDrawSetProportional(PhoneSA[22], 0);
	TextDrawSetShadow(PhoneSA[22], 0);

	PhoneSA[23] = TextDrawCreate(612.6432, 156.1666, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[23], 2.0000, 2.0000);
	TextDrawAlignment(PhoneSA[23], 1);
	TextDrawColor(PhoneSA[23], -1);
	TextDrawBackgroundColor(PhoneSA[23], 255);
	TextDrawFont(PhoneSA[23], 4);
	TextDrawSetProportional(PhoneSA[23], 0);
	TextDrawSetShadow(PhoneSA[23], 0);

	PhoneSA[24] = TextDrawCreate(526.9034, 286.8334, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[24], 33.0000, 37.0000);
	TextDrawAlignment(PhoneSA[24], 1);
	TextDrawColor(PhoneSA[24], 8388863);
	TextDrawBackgroundColor(PhoneSA[24], 255);
	TextDrawFont(PhoneSA[24], 4);
	TextDrawSetProportional(PhoneSA[24], 0);
	TextDrawSetShadow(PhoneSA[24], 0);
	TextDrawSetSelectable(PhoneSA[24], true);

	PhoneSA[25] = TextDrawCreate(538.1484, 296.7500, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[25], 7.0000, 8.0000);
	TextDrawAlignment(PhoneSA[25], 1);
	TextDrawColor(PhoneSA[25], -1);
	TextDrawBackgroundColor(PhoneSA[25], 255);
	TextDrawFont(PhoneSA[25], 4);
	TextDrawSetProportional(PhoneSA[25], 0);
	TextDrawSetShadow(PhoneSA[25], 0);

	PhoneSA[26] = TextDrawCreate(541.4281, 304.9167, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[26], 7.0000, 8.0000);
	TextDrawAlignment(PhoneSA[26], 1);
	TextDrawColor(PhoneSA[26], -1);
	TextDrawBackgroundColor(PhoneSA[26], 255);
	TextDrawFont(PhoneSA[26], 4);
	TextDrawSetProportional(PhoneSA[26], 0);
	TextDrawSetShadow(PhoneSA[26], 0);

	PhoneSA[27] = TextDrawCreate(544.8760, 297.3332, "/"); // ?????
	TextDrawLetterSize(PhoneSA[27], -0.5004, 1.6175);
	TextDrawAlignment(PhoneSA[27], 1);
	TextDrawColor(PhoneSA[27], -1);
	TextDrawBackgroundColor(PhoneSA[27], 255);
	TextDrawFont(PhoneSA[27], 1);
	TextDrawSetProportional(PhoneSA[27], 1);
	TextDrawSetShadow(PhoneSA[27], 0);

	PhoneSA[28] = TextDrawCreate(586.8747, 286.8334, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[28], 33.0000, 37.0000);
	TextDrawAlignment(PhoneSA[28], 1);
	TextDrawColor(PhoneSA[28], 594603519);
	TextDrawBackgroundColor(PhoneSA[28], 255);
	TextDrawFont(PhoneSA[28], 4);
	TextDrawSetProportional(PhoneSA[28], 0);
	TextDrawSetShadow(PhoneSA[28], 0);
	TextDrawSetSelectable(PhoneSA[28], true);

	PhoneSA[29] = TextDrawCreate(598.7562, 286.2500, "e"); // ?????
	TextDrawLetterSize(PhoneSA[29], 0.5443, 3.2975);
	TextDrawAlignment(PhoneSA[29], 1);
	TextDrawColor(PhoneSA[29], -1);
	TextDrawBackgroundColor(PhoneSA[29], 255);
	TextDrawFont(PhoneSA[29], 1);
	TextDrawSetProportional(PhoneSA[29], 1);
	TextDrawSetShadow(PhoneSA[29], 0);

	PhoneSA[30] = TextDrawCreate(556.8890, 286.8334, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[30], 33.0000, 37.0000);
	TextDrawAlignment(PhoneSA[30], 1);
	TextDrawColor(PhoneSA[30], -5963521);
	TextDrawBackgroundColor(PhoneSA[30], 255);
	TextDrawFont(PhoneSA[30], 4);
	TextDrawSetProportional(PhoneSA[30], 0);
	TextDrawSetShadow(PhoneSA[30], 0);
	TextDrawSetSelectable(PhoneSA[30], true);

	PhoneSA[31] = TextDrawCreate(568.1339, 300.8334, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[31], 11.0000, 8.0000);
	TextDrawAlignment(PhoneSA[31], 1);
	TextDrawColor(PhoneSA[31], -1);
	TextDrawBackgroundColor(PhoneSA[31], 255);
	TextDrawFont(PhoneSA[31], 4);
	TextDrawSetProportional(PhoneSA[31], 0);
	TextDrawSetShadow(PhoneSA[31], 0);

	PhoneSA[32] = TextDrawCreate(569.2396, 304.3333, "/"); // ?????
	TextDrawLetterSize(PhoneSA[32], 0.4229, 0.8649);
	TextDrawAlignment(PhoneSA[32], 1);
	TextDrawColor(PhoneSA[32], -1);
	TextDrawBackgroundColor(PhoneSA[32], 255);
	TextDrawFont(PhoneSA[32], 1);
	TextDrawSetProportional(PhoneSA[32], 1);
	TextDrawSetShadow(PhoneSA[32], 0);

	PhoneSA[33] = TextDrawCreate(569.5394, 304.9166, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[33], 2.0000, 6.0000);
	TextDrawAlignment(PhoneSA[33], 1);
	TextDrawColor(PhoneSA[33], -1);
	TextDrawBackgroundColor(PhoneSA[33], 255);
	TextDrawFont(PhoneSA[33], 4);
	TextDrawSetProportional(PhoneSA[33], 0);
	TextDrawSetShadow(PhoneSA[33], 0);

	PhoneSA[34] = TextDrawCreate(527.3720, 208.6667, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[34], 33.0000, 37.0000);
	TextDrawAlignment(PhoneSA[34], 1);
	TextDrawColor(PhoneSA[34], 993737727);
	TextDrawBackgroundColor(PhoneSA[34], 255);
	TextDrawFont(PhoneSA[34], 4);
	TextDrawSetProportional(PhoneSA[34], 0);
	TextDrawSetShadow(PhoneSA[34], 0);
	TextDrawSetSelectable(PhoneSA[34], true);

	PhoneSA[35] = TextDrawCreate(539.0855, 224.9999, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[35], 8.0000, 4.0000);
	TextDrawAlignment(PhoneSA[35], 1);
	TextDrawColor(PhoneSA[35], -1);
	TextDrawBackgroundColor(PhoneSA[35], 255);
	TextDrawFont(PhoneSA[35], 4);
	TextDrawSetProportional(PhoneSA[35], 0);
	TextDrawSetShadow(PhoneSA[35], 0);

	PhoneSA[36] = TextDrawCreate(543.3022, 220.3333, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[36], 10.0000, 13.0000);
	TextDrawAlignment(PhoneSA[36], 1);
	TextDrawColor(PhoneSA[36], -1);
	TextDrawBackgroundColor(PhoneSA[36], 255);
	TextDrawFont(PhoneSA[36], 4);
	TextDrawSetProportional(PhoneSA[36], 0);
	TextDrawSetShadow(PhoneSA[36], 0);

	PhoneSA[37] = TextDrawCreate(533.9317, 220.3333, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[37], 10.0000, 13.0000);
	TextDrawAlignment(PhoneSA[37], 1);
	TextDrawColor(PhoneSA[37], -1);
	TextDrawBackgroundColor(PhoneSA[37], 255);
	TextDrawFont(PhoneSA[37], 4);
	TextDrawSetProportional(PhoneSA[37], 0);
	TextDrawSetShadow(PhoneSA[37], 0);

	PhoneSA[38] = TextDrawCreate(535.3373, 222.0833, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(PhoneSA[38], 7.0000, 9.0000);
	TextDrawAlignment(PhoneSA[38], 1);
	TextDrawColor(PhoneSA[38], 993737727);
	TextDrawBackgroundColor(PhoneSA[38], 255);
	TextDrawFont(PhoneSA[38], 4);
	TextDrawSetProportional(PhoneSA[38], 0);
	TextDrawSetShadow(PhoneSA[38], 0);

	PhoneSA[39] = TextDrawCreate(547.9873, 224.4166, "LD_SPAC:white"); // ?????
	TextDrawTextSize(PhoneSA[39], 4.0000, 5.0000);
	TextDrawAlignment(PhoneSA[39], 1);
	TextDrawColor(PhoneSA[39], 993737727);
	TextDrawBackgroundColor(PhoneSA[39], 255);
	TextDrawFont(PhoneSA[39], 4);
	TextDrawSetProportional(PhoneSA[39], 0);
	TextDrawSetShadow(PhoneSA[39], 0);

	//-----------------------------------------------------//

	theft_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 583.7628, 297.9164, "00:00"); // угон
	PlayerTextDrawLetterSize(playerid, theft_PTD[playerid][0], 0.4000, 1.6000);
	PlayerTextDrawAlignment(playerid, theft_PTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, theft_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, theft_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, theft_PTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, theft_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, theft_PTD[playerid][0], 0);

	theft_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 583.7627, 286.8330, "00:00"); // угон
	PlayerTextDrawLetterSize(playerid, theft_PTD[playerid][1], 0.4000, 1.6000);
	PlayerTextDrawAlignment(playerid, theft_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, theft_PTD[playerid][1], -16776961);
	PlayerTextDrawBackgroundColor(playerid, theft_PTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, theft_PTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, theft_PTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, theft_PTD[playerid][1], 0);	

	buy_player_skins[playerid] = CreatePlayerTextDraw(playerid, 294.555664, 404.706756, "10000$");
	PlayerTextDrawLetterSize(playerid, buy_player_skins[playerid], 0.217999, 1.316264);
	PlayerTextDrawAlignment(playerid, buy_player_skins[playerid], 1);
	PlayerTextDrawColor(playerid, buy_player_skins[playerid], -1);
	PlayerTextDrawSetShadow(playerid, buy_player_skins[playerid], 0);
	PlayerTextDrawSetOutline(playerid, buy_player_skins[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, buy_player_skins[playerid], 255);
	PlayerTextDrawFont(playerid, buy_player_skins[playerid], 2);
	PlayerTextDrawSetProportional(playerid, buy_player_skins[playerid], 1);

	skill_player_td[playerid][0] = CreatePlayerTextDraw(playerid,484.000091, 363.875549, "Desert Eagle");
	PlayerTextDrawLetterSize(playerid,skill_player_td[playerid][0], 0.186000, 1.077332);
	PlayerTextDrawAlignment(playerid,skill_player_td[playerid][0], 1);
	PlayerTextDrawColor(playerid,skill_player_td[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid,skill_player_td[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid,skill_player_td[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid,skill_player_td[playerid][0], 51);
	PlayerTextDrawFont(playerid,skill_player_td[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid,skill_player_td[playerid][0], 1);

	skill_player_td[playerid][1] = CreatePlayerTextDraw(playerid,497.444732, 372.342224, "0/0");
	PlayerTextDrawLetterSize(playerid,skill_player_td[playerid][1], 0.198444, 1.127111);
	PlayerTextDrawAlignment(playerid,skill_player_td[playerid][1], 1);
	PlayerTextDrawColor(playerid,skill_player_td[playerid][1], -668447489);
	PlayerTextDrawSetShadow(playerid,skill_player_td[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid,skill_player_td[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid,skill_player_td[playerid][1], 51);
	PlayerTextDrawFont(playerid,skill_player_td[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid,skill_player_td[playerid][1], 1);

	RECON[playerid] = CreatePlayerTextDraw(playerid, 457.7958, 241.8333, "_");
	PlayerTextDrawFont(playerid, RECON[playerid], 2);
	PlayerTextDrawColor(playerid, RECON[playerid],-1);
	PlayerTextDrawSetOutline(playerid, RECON[playerid], 0);
	PlayerTextDrawLetterSize(playerid, RECON[playerid], 0.410000, 1.000000);
	PlayerTextDrawSetOutline(playerid, RECON[playerid],1);
	PlayerTextDrawSetProportional(playerid, RECON[playerid], 1);
	PlayerTextDrawAlignment(playerid, RECON[playerid], 1);
	PlayerTextDrawSetShadow(playerid, RECON[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, RECON[playerid], 51);
	//PlayerTextDrawUseBox(playerid,RECON[playerid], 1);
	//PlayerTextDrawBoxColor(playerid,RECON[playerid], 100);

	load_tunes(playerid);

	LoadTexturess[playerid] = CreatePlayerTextDraw(playerid,394.110778, 221.522186, "usebox");
	PlayerTextDrawLetterSize(playerid,LoadTexturess[playerid], 0.000000, 0.091233);
	PlayerTextDrawTextSize(playerid,LoadTexturess[playerid], 211.777893, 0.000000);
	PlayerTextDrawAlignment(playerid,LoadTexturess[playerid], 1);
	PlayerTextDrawColor(playerid,LoadTexturess[playerid], 0);
	PlayerTextDrawUseBox(playerid,LoadTexturess[playerid], true);
	PlayerTextDrawBoxColor(playerid,LoadTexturess[playerid], 255);
	PlayerTextDrawSetShadow(playerid,LoadTexturess[playerid], 0);
	PlayerTextDrawSetOutline(playerid,LoadTexturess[playerid], 0);
	PlayerTextDrawFont(playerid,LoadTexturess[playerid], 0);

	HungerProgres[playerid] = CreatePlayerTextDraw(playerid,549.500000, 60.000000, "____");PlayerTextDrawBackgroundColor(playerid,HungerProgres[playerid], 255);PlayerTextDrawFont(playerid,HungerProgres[playerid], 1);PlayerTextDrawLetterSize(playerid,HungerProgres[playerid], 0.490000, -0.000000);
	PlayerTextDrawColor(playerid,HungerProgres[playerid], -1);PlayerTextDrawSetOutline(playerid,HungerProgres[playerid], 0);PlayerTextDrawSetProportional(playerid,HungerProgres[playerid], 1);PlayerTextDrawSetShadow(playerid,HungerProgres[playerid], 1);
	PlayerTextDrawUseBox(playerid,HungerProgres[playerid], 1);PlayerTextDrawBoxColor(playerid,HungerProgres[playerid], CGOLD);PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 604.000000, 40.000000);PlayerTextDrawSetSelectable(playerid,HungerProgres[playerid], 0);

	work_td[playerid][0] = CreatePlayerTextDraw(playerid, 508.799560, 157.333328, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][0], 0.000000, 4.143486);
	PlayerTextDrawTextSize(playerid, work_td[playerid][0], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][0], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][0], CGOLD);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][0], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][0], 0);

	work_td[playerid][1] = CreatePlayerTextDraw(playerid, 511.142517, 168.416656, "MONEY:_$0");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][1], 0.377979, 1.389998);
	PlayerTextDrawAlignment(playerid, work_td[playerid][1], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][1], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][1], 0);

	work_td[playerid][2] = CreatePlayerTextDraw(playerid, 509.267150, 165.500045, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][2], 0.000000, -0.494873);
	PlayerTextDrawTextSize(playerid, work_td[playerid][2], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][2], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][2], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][2], 0);

	work_td[playerid][3] = CreatePlayerTextDraw(playerid, 509.267150, 190.583328, "box");
	PlayerTextDrawLetterSize(playerid, work_td[playerid][3], 0.000000, -0.494873);
	PlayerTextDrawTextSize(playerid, work_td[playerid][3], 607.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, work_td[playerid][3], 1);
	PlayerTextDrawColor(playerid, work_td[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, work_td[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, work_td[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, work_td[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, work_td[playerid][3], 255);
	PlayerTextDrawFont(playerid, work_td[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, work_td[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, work_td[playerid][3], 0);

	YandNsysTDPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 287.288482, 318.583343, "PRESS Y");
	PlayerTextDrawLetterSize(playerid, YandNsysTDPlayer[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, YandNsysTDPlayer[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, YandNsysTDPlayer[playerid][0], 51);
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, YandNsysTDPlayer[playerid][0], 1);

	YandNsysTDPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 294.472076, 332.583099, "IIIIIIIIII");
	PlayerTextDrawLetterSize(playerid, YandNsysTDPlayer[playerid][1], 0.402498, 1.553333);
	PlayerTextDrawAlignment(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, YandNsysTDPlayer[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, YandNsysTDPlayer[playerid][1], 51);
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, YandNsysTDPlayer[playerid][1], 1);

	DmArenaTextDraw[playerid] = CreatePlayerTextDraw(playerid, 520.00, 100.00, "~b~Kills: ~g~0~n~~b~Deatch: ~g~Kills~n~~b~Deatch:~g~ 0 km");
	PlayerTextDrawAlignment(playerid, DmArenaTextDraw[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, DmArenaTextDraw[playerid], 0x000000ff);
	PlayerTextDrawFont(playerid, DmArenaTextDraw[playerid], 3);
	PlayerTextDrawLetterSize(playerid, DmArenaTextDraw[playerid], 0.399999, 1.00);
	PlayerTextDrawColor(playerid, DmArenaTextDraw[playerid], 0x0054c6ff);
	PlayerTextDrawSetOutline(playerid, DmArenaTextDraw[playerid], 1);
	PlayerTextDrawSetProportional(playerid, DmArenaTextDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid, DmArenaTextDraw[playerid], 1);

     
	reg_tds[playerid][1] = CreatePlayerTextDraw(playerid,532.300537, 191.918548, "");
	PlayerTextDrawLetterSize(playerid,reg_tds[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid,reg_tds[playerid][1], 122.000000, 128.000000);
	PlayerTextDrawAlignment(playerid,reg_tds[playerid][1], 1);
	PlayerTextDrawColor(playerid,reg_tds[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawFont(playerid,reg_tds[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][1], 0);
	PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][1], 100);
	PlayerTextDrawSetPreviewRot(playerid,reg_tds[playerid][1], 352.000000, 0.000000, 0.000000, 1.000000);

	reg_tds[playerid][2] = CreatePlayerTextDraw(playerid,592.967041, 178.800140, "Kody_Landino");
	PlayerTextDrawLetterSize(playerid,reg_tds[playerid][2], 0.179000, 0.874073);
	PlayerTextDrawAlignment(playerid,reg_tds[playerid][2], 2);
	PlayerTextDrawColor(playerid,reg_tds[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][2], 1);
	PlayerTextDrawSetOutline(playerid,reg_tds[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid,reg_tds[playerid][2], 255);
	PlayerTextDrawFont(playerid,reg_tds[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid,reg_tds[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid,reg_tds[playerid][2], 1);

	//спидометр
	speedometr[playerid][0] = CreatePlayerTextDraw(playerid, 636.666503, 367.864532, "usebox");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][0], 0.000000, 5.759377);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][0], 490.444458, 0.000000);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][0], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][0], 0);
	PlayerTextDrawUseBox(playerid, speedometr[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, speedometr[playerid][0], 471604424);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][0], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][0], 0);

	speedometr[playerid][1] = CreatePlayerTextDraw(playerid, 636.666687, 367.864624, "usebox");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][1], 0.000000, -0.095430);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][1], 490.444458, 0.000000);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][1], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][1], 0);
	PlayerTextDrawUseBox(playerid, speedometr[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, speedometr[playerid][1], CGOLD);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][1], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][1], 0);

	speedometr[playerid][2] = CreatePlayerTextDraw(playerid, 495.999877, 375.822235, "hud:radar_girlfriend");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][2], 9.777785, 9.955574);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][2], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][2], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][2], 4);

	speedometr[playerid][3] = CreatePlayerTextDraw(playerid, 495.666595, 389.266540, "hud:radar_impound");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][3], 10.222229, 11.946682);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][3], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][3], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][3], 4);

	speedometr[playerid][4] = CreatePlayerTextDraw(playerid, 495.333160, 407.688781, "hud:radar_centre");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][4], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][4], 10.666670, 10.951128);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][4], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][4], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][4], 4);

	speedometr[playerid][5] = CreatePlayerTextDraw(playerid, 510.555450, 374.342285, "1000 hp");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][5], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][5], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][5], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][5], 1);

	speedometr[playerid][6] = CreatePlayerTextDraw(playerid, 595.888366, 374.840026, "120");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][6], 0.495332, 3.013686);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][6], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][6], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][6], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][6], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][6], 1);

	speedometr[playerid][7] = CreatePlayerTextDraw(playerid, 510.444305, 390.266632, "9999 km");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][7], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][7], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][7], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][7], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][7], 1);

	speedometr[playerid][8] = CreatePlayerTextDraw(playerid, 511.333312, 406.693237, "79 %");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][8], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][8], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][8], -1);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][8], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][8], 1);

	speedometr[playerid][9] = CreatePlayerTextDraw(playerid, 598.222167, 395.751190, "KM/H");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][9], 0.284665, 1.649775);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][9], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][9], CGOLD);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][9], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][9], 1);

	speedometr[playerid][10] = CreatePlayerTextDraw(playerid, 576.888793, 371.857727, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][10], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][10], 15.111118, 17.422237);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][10], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][10], 780799999);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][10], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][10], 4);

	speedometr[playerid][11] = CreatePlayerTextDraw(playerid, 576.777954, 403.711090, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][11], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][11], 15.111118, 17.422237);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][11], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][11], 780799999);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][11], 0);
	PlayerTextDrawFont(playerid, speedometr[playerid][11], 4);

	speedometr[playerid][12] = CreatePlayerTextDraw(playerid, 555.111022, 406.204498, "LIGHT");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][12], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][12], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][12], -2139062017);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][12], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][12], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][12], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][12], 1);

	speedometr[playerid][13] = CreatePlayerTextDraw(playerid, 549.888671, 374.351287, "ENGINE");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][13], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][13], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][13], -2139062017);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][13], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][13], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][13], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][13], 1);

	speedometr[playerid][14] = CreatePlayerTextDraw(playerid, 555.333251, 390.284637, "door");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][14], 0.191777, 1.216709);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][14], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][14], -2139062017);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][14], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][14], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][14], 51);
	PlayerTextDrawFont(playerid, speedometr[playerid][14], 2);
	PlayerTextDrawSetProportional(playerid, speedometr[playerid][14], 1);

	speedometr[playerid][15] = CreatePlayerTextDraw(playerid, 576.889038, 387.786651, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, speedometr[playerid][15], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedometr[playerid][15], 15.111118, 17.422237);
	PlayerTextDrawAlignment(playerid, speedometr[playerid][15], 1);
	PlayerTextDrawColor(playerid, speedometr[playerid][15], -1523963137);
	PlayerTextDrawSetShadow(playerid, speedometr[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, speedometr[playerid][15], 0);
	PlayerTextDrawBackgroundColor(playerid, speedometr[playerid][15], -1523963137);
	PlayerTextDrawFont(playerid, speedometr[playerid][15], 4);
	
	/* ----------------- Инвентарь ----------------- */
	inv_player[playerid][59] = CreatePlayerTextDraw(playerid, 28.952316, 178.333298, "skin_model"); // эмиль
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][59], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][59], 127.000000, 160.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][59], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][59], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][59], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][59], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][59], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][59], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][59], 0x00000000);
	PlayerTextDrawFont(playerid, inv_player[playerid][59], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][59], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][59], 0);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][59], 7);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][59], 0.000000, 0.000000, 20.000000, 1.000000);

	inv_player[playerid][58] = CreatePlayerTextDraw(playerid, 33.000000, 351.500000, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][58], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][58], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][58], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][58], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][58], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][58], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][58], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][58], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][58], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][58], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][58], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][58], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][58], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][58], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][57] = CreatePlayerTextDraw(playerid, 60.893127, 373.749908, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][57], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][57], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][57], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][57], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][57], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][57], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][57], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][57], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][57], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][57], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][57], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][57], 0);

	inv_player[playerid][56] = CreatePlayerTextDraw(playerid, 162.341766, 325.933136, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][56], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][56], 9.000000, 9.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][56], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][56], 0xEA363FFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][56], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][56], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][56], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][56], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][56], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][56], 4);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][56], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][56], 1);

	inv_player[playerid][55] = CreatePlayerTextDraw(playerid, 62.599998, 351.500000, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][55], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][55], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][55], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][55], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][55], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][55], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][55], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][55], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][55], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][55], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][55], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][55], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][55], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][55], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][54] = CreatePlayerTextDraw(playerid, 90.409958, 373.749786, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][54], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][54], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][54], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][54], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][54], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][54], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][54], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][54], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][54], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][54], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][54], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][54], 0);

	inv_player[playerid][53] = CreatePlayerTextDraw(playerid, 170.775146, 325.933136, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][53], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][53], 9.000000, 9.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][53], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][53], 0x252A2FFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][53], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][53], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][53], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][53], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][53], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][53], 4);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][53], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][53], 1);

	inv_player[playerid][52] = CreatePlayerTextDraw(playerid, 92.199997, 351.500000, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][52], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][52], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][52], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][52], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][52], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][52], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][52], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][52], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][52], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][52], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][52], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][52], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][52], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][52], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][51] = CreatePlayerTextDraw(playerid, 119.926788, 373.749725, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][51], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][51], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][51], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][51], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][51], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][51], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][51], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][51], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][51], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][51], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][51], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][51], 0);

	inv_player[playerid][50] = CreatePlayerTextDraw(playerid, 179.208527, 325.933136, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][50], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][50], 9.000000, 9.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][50], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][50], 0x252A2FFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][50], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][50], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][50], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][50], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][50], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][50], 4);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][50], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][50], 0);

	inv_player[playerid][49] = CreatePlayerTextDraw(playerid, 121.599998, 351.500000, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][49], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][49], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][49], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][49], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][49], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][49], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][49], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][49], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][49], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][49], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][49], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][49], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][49], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][49], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][48] = CreatePlayerTextDraw(playerid, 149.443619, 373.749756, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][48], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][48], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][48], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][48], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][48], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][48], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][48], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][48], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][48], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][48], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][48], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][48], 0);

	inv_player[playerid][47] = CreatePlayerTextDraw(playerid, 107.295090, 416.916565, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][47], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][47], 9.000000, 9.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][47], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][47], 0xEA363FFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][47], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][47], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][47], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][47], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][47], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][47], 4);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][47], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][47], 1);

	inv_player[playerid][46] = CreatePlayerTextDraw(playerid, 151.099960, 351.500000, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][46], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][46], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][46], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][46], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][46], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][46], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][46], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][46], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][46], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][46], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][46], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][46], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][46], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][46], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][45] = CreatePlayerTextDraw(playerid, 178.491928, 373.749817, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][45], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][45], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][45], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][45], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][45], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][45], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][45], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][45], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][45], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][45], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][45], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][45], 0);

	inv_player[playerid][44] = CreatePlayerTextDraw(playerid, 115.728462, 416.916565, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][44], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][44], 9.000000, 9.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][44], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][44], 0x252A2FFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][44], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][44], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][44], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][44], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][44], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][44], 4);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][44], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][44], 1);

	inv_player[playerid][43] = CreatePlayerTextDraw(playerid, 180.699997, 351.500000, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][43], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][43], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][43], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][43], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][43], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][43], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][43], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][43], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][43], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][43], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][43], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][43], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][43], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][43], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][42] = CreatePlayerTextDraw(playerid, 207.541931, 373.749817, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][42], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][42], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][42], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][42], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][42], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][42], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][42], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][42], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][42], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][42], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][42], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][42], 0);

	inv_player[playerid][41] = CreatePlayerTextDraw(playerid, 124.161842, 416.916565, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][41], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][41], 9.000000, 9.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][41], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][41], 0x252A2FFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][41], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][41], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][41], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][41], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][41], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][41], 4);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][41], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][41], 1);

	inv_player[playerid][40] = CreatePlayerTextDraw(playerid, 33.000000, 382.049988, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][40], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][40], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][40], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][40], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][40], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][40], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][40], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][40], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][40], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][40], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][40], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][40], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][40], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][40], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][39] = CreatePlayerTextDraw(playerid, 60.893127, 404.666565, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][39], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][39], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][39], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][39], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][39], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][39], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][39], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][39], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][39], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][39], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][39], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][39], 0);

	inv_player[playerid][38] = CreatePlayerTextDraw(playerid, 42.099998, 203.416687, "100"); // эмиль - хп
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][38], 0.199937, 1.015830);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][38], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][38], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][38], 0xA52A2AFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][38], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][38], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][38], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][38], 1);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][38], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][38], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][38], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][38], 0);

	inv_player[playerid][37] = CreatePlayerTextDraw(playerid, 62.599998, 382.049988, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][37], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][37], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][37], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][37], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][37], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][37], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][37], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][37], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][37], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][37], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][37], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][37], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][37], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][37], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][36] = CreatePlayerTextDraw(playerid, 90.409958, 404.666443, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][36], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][36], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][36], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][36], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][36], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][36], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][36], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][36], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][36], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][36], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][36], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][36], 0);

	inv_player[playerid][35] = CreatePlayerTextDraw(playerid, 42.099998, 232.000000, "100"); // эмиль - голод
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][35], 0.199937, 1.015830);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][35], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][35], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][35], 0xFFFFFF9D);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][35], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][35], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][35], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][35], 1);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][35], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][35], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][35], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][35], 0);

	inv_player[playerid][34] = CreatePlayerTextDraw(playerid, 92.199997, 382.049988, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][34], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][34], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][34], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][34], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][34], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][34], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][34], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][34], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][34], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][34], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][34], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][34], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][34], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][34], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][33] = CreatePlayerTextDraw(playerid, 119.926788, 404.666382, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][33], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][33], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][33], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][33], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][33], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][33], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][33], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][33], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][33], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][33], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][33], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][33], 0);

	inv_player[playerid][32] = CreatePlayerTextDraw(playerid, 140.300476, 180.833359, "click_weapon1");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][32], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][32], 69.609917, 29.429985);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][32], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][32], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][32], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][32], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][32], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][32], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][32], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][32], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][32], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][32], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][32], 21);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][32], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][31] = CreatePlayerTextDraw(playerid, 121.599998, 382.049988, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][31], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][31], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][31], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][31], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][31], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][31], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][31], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][31], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][31], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][31], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][31], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][31], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][31], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][31], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][30] = CreatePlayerTextDraw(playerid, 149.443619, 404.666443, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][30], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][30], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][30], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][30], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][30], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][30], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][30], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][30], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][30], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][30], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][30], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][30], 0);

	inv_player[playerid][29] = CreatePlayerTextDraw(playerid, 140.300476, 214.766678, "click_weapon2");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][29], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][29], 69.609917, 29.429985);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][29], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][29], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][29], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][29], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][29], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][29], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][29], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][29], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][29], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][29], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][29], 21);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][29], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][28] = CreatePlayerTextDraw(playerid, 151.099899, 382.049988, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][28], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][28], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][28], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][28], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][28], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][28], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][28], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][28], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][28], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][28], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][28], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][28], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][28], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][28], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][27] = CreatePlayerTextDraw(playerid, 178.960434, 404.666534, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][27], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][27], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][27], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][27], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][27], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][27], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][27], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][27], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][27], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][27], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][27], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][27], 0);

	inv_player[playerid][26] = CreatePlayerTextDraw(playerid, 143.131317, 151.400024, "view_weapon1");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][26], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][26], 90.000000, 90.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][26], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][26], 0x00000098);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][26], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][26], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][26], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][26], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][26], 0x00000000);
	PlayerTextDrawFont(playerid, inv_player[playerid][26], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][26], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][26], 0);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][26], 355);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][26], 0.000000, 0.000000, 0.000000, 2.851906);

	inv_player[playerid][25] = CreatePlayerTextDraw(playerid, 180.699997, 382.049988, "slot");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][25], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][25], 29.000000, 30.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][25], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][25], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][25], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][25], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][25], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][25], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][25], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][25], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][25], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][25], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][25], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][25], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][24] = CreatePlayerTextDraw(playerid, 207.541916, 404.666534, " ");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][24], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][24], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][24], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][24], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][24], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][24], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][24], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][24], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][24], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][24], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][24], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][24], 0);

	inv_player[playerid][23] = CreatePlayerTextDraw(playerid, 117.361496, 163.066788, "view_weapon2");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][23], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][23], 144.000000, 131.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][23], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][23], 0x00000098);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][23], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][23], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][23], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][23], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][23], 0x00000000);
	PlayerTextDrawFont(playerid, inv_player[playerid][23], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][23], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][23], 0);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][23], 346);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][23], 0.000000, 0.000000, 0.000000, 2.851906);

	inv_player[playerid][22] = CreatePlayerTextDraw(playerid, 140.500488, 259.899994, "slot_use");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][22], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][22], 35.000000, 31.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][22], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][22], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][22], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][22], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][22], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][22], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][22], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][22], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][22], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][22], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][22], 1212);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][22], 339.000000, 0.000000, 211.000000, 0.989736);

	inv_player[playerid][21] = CreatePlayerTextDraw(playerid, 173.754684, 282.750092, "~g~~h~$200"); // эмиль
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][21], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][21], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][21], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][21], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][21], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][21], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][21], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][21], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][21], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][21], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][21], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][21], 0);

	inv_player[playerid][20] = CreatePlayerTextDraw(playerid, 209.000000, 201.949997, "~r~0");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][20], 0.141376, 0.882498);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][20], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][20], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][20], 0xC0C0C0C2);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][20], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][20], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][20], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][20], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][20], 0x000000A5);
	PlayerTextDrawFont(playerid, inv_player[playerid][20], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][20], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][20], 0);

	inv_player[playerid][19] = CreatePlayerTextDraw(playerid, 176.401886, 259.899994, "slot_use");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][19], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][19], 33.619896, 31.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][19], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][19], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][19], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][19], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][19], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][19], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][19], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][19], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][19], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][19], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][19], 330);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][19], 0.000000, 0.000000, 37.000000, 0.718473);

	inv_player[playerid][18] = CreatePlayerTextDraw(playerid, 209.362183, 282.750122, "_");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][18], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][18], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][18], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][18], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][18], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][18], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][18], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][18], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][18], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][18], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][18], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][18], 0);

	inv_player[playerid][17] = CreatePlayerTextDraw(playerid, 209.000000, 236.466660, "~r~0");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][17], 0.141376, 0.882498);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][17], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][17], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][17], 0xC0C0C0C2);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][17], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][17], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][17], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][17], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][17], 0x000000A5);
	PlayerTextDrawFont(playerid, inv_player[playerid][17], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][17], 0);

	inv_player[playerid][16] = CreatePlayerTextDraw(playerid, 140.500488, 291.899994, "slot_use");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][16], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][16], 35.000000, 31.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][16], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][16], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][16], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][16], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][16], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][16], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][16], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][16], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][16], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][16], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][16], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][16], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][15] = CreatePlayerTextDraw(playerid, 173.286148, 314.866791, "_");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][15], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][15], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][15], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][15], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][15], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][15], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][15], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][15], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][15], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][15], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][15], 0);

	inv_player[playerid][14] = CreatePlayerTextDraw(playerid, 175.201874, 249.983337, "FAST ACCESS");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][14], 0.144187, 0.719165);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][14], 0.000000, 67.540283);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][14], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][14], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][14], 1);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][14], 0x000000CD);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][14], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][14], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][14], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][14], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][14], 0);

	inv_player[playerid][13] = CreatePlayerTextDraw(playerid, 176.401886, 291.899994, "slot_use");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][13], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][13], 33.619896, 31.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][13], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][13], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][13], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][13], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][13], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][13], 0x141414FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][13], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][13], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][13], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][13], 0);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][13], 0.000000, 0.000000, 0.000000, 100.000000);

	inv_player[playerid][12] = CreatePlayerTextDraw(playerid, 209.362274, 314.866699, "_");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][12], 0.140907, 0.777499);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][12], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][12], 3);
	PlayerTextDrawColor(playerid, inv_player[playerid][12], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][12], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][12], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][12], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][12], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][12], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][12], 0);

	inv_player[playerid][11] = CreatePlayerTextDraw(playerid, 141.399994, 260.000000, "MONEY");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][11], 0.115607, 0.684166);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][11], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][11], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][11], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][11], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][11], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][11], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][11], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][11], 0);

	inv_player[playerid][10] = CreatePlayerTextDraw(playerid, 177.399994, 260.000000, "PHONE");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][10], 0.115607, 0.684166);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][10], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][10], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][10], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][10], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][10], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][10], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][10], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][10], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][10], 0);

	inv_player[playerid][9] = CreatePlayerTextDraw(playerid, 141.399994, 292.000000, "BACKPACK");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][9], 0.115607, 0.684166);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][9], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][9], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][9], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][9], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][9], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][9], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][9], 0);

	inv_player[playerid][8] = CreatePlayerTextDraw(playerid, 177.399994, 292.000000, "ARMOUR");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][8], 0.115607, 0.684166);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][8], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][8], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][8], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][8], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][8], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][8], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][8], 0);

	inv_player[playerid][7] = CreatePlayerTextDraw(playerid, 120.899986, 434.299866, "0.00 / 30.00KG");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][7], 0.156044, 0.824163);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][7], 0.000000, 198.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][7], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][7], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][7], 0x00000098);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][7], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][7], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][7], 0);

	inv_player[playerid][6] = CreatePlayerTextDraw(playerid, 140.399994, 195.500000, "ammo1");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][6], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][6], 15.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][6], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][6], 0x000000FF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][6], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][6], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][6], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][6], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][6], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][6], 2061);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][6], 0.000000, 0.000000, 0.000000, 1.000000);

	inv_player[playerid][5] = CreatePlayerTextDraw(playerid, 140.399994, 228.899963, "ammo2");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][5], 0.480000, 1.120000);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][5], 15.000000, 15.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][5], 1);
	PlayerTextDrawColor(playerid, inv_player[playerid][5], 0x000000FF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][5], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][5], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][5], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][5], 1);
	PlayerTextDrawSetPreviewModel(playerid, inv_player[playerid][5], 2061);
	PlayerTextDrawSetPreviewRot(playerid, inv_player[playerid][5], 0.000000, 0.000000, 0.000000, 1.000000);

	inv_player[playerid][4] = CreatePlayerTextDraw(playerid, 152.670837, 180.566833, "H.WEAPON");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][4], 0.115607, 0.684166);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][4], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][4], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][4], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][4], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][4], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][4], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][4], 0);

	inv_player[playerid][3] = CreatePlayerTextDraw(playerid, 152.670837, 214.400162, "L.WEAPON");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][3], 0.115607, 0.684166);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][3], 1280.000000, 1280.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][3], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][3], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][3], 0);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][3], 0x80808080);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][3], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][3], 0);

	inv_player[playerid][2] = CreatePlayerTextDraw(playerid, 55.657249, 434.299866, "ENG");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][2], 0.186969, 0.824163);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][2], 10.000000, 20.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][2], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][2], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][2], 0x0080007C);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][2], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][2], 1);

	inv_player[playerid][1] = CreatePlayerTextDraw(playerid, 32.255810, 434.299866, "RUS");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][1], 0.186969, 0.810833);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][1], 10.000000, 20.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][1], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][1], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][1], 0x000000FF);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][1], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][1], 1);

	inv_player[playerid][0] = CreatePlayerTextDraw(playerid, 120.999985, 157.849747, "YOUR CHARACTER");
	PlayerTextDrawLetterSize(playerid, inv_player[playerid][0], 0.260378, 1.500830);
	PlayerTextDrawTextSize(playerid, inv_player[playerid][0], -0.289999, 198.000000);
	PlayerTextDrawAlignment(playerid, inv_player[playerid][0], 2);
	PlayerTextDrawColor(playerid, inv_player[playerid][0], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, inv_player[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, inv_player[playerid][0], 0xA52A43B8);
	PlayerTextDrawSetShadow(playerid, inv_player[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, inv_player[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, inv_player[playerid][0], 0x000000FF);
	PlayerTextDrawFont(playerid, inv_player[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, inv_player[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, inv_player[playerid][0], 0);
	/* -------------------------------------------- */
}
stock to_default(playerid) {
	for(new a = 0; a < 3; a++) {
		gBanks[playerid][bankNumber][a] = 0;
		gBanks[playerid][bankBalance][a] = 0;
		gBanks[playerid][bankID][a] = 0;
		gBanks[playerid][bankPassword][a] = 0;
	}
    ShowPlayerDialog(playerid, -1, 0, "", "", "", "");
    SetPlayerColor(playerid, TEAM_HIT_COLOR);
	DelGun(playerid);

	SetPVarInt(playerid, "taxist",-1);
	SetPVarInt(playerid, "invstat",-1);

	PlayerInfo[playerid][pID]							=
	score_number[playerid]						=
  	FirstFire[playerid]							=
    SecondFire[playerid]						=
	PlayerInfo[playerid][pAdmin] 						=
	addchet[playerid]							= 
	dostup[playerid] 							=
	PlayerInfo[playerid][pMember] 						=
	PlayerInfo[playerid][pLeader] 						=
	PlayerInfo[playerid][pRouble] 						=
	nedded[playerid]							=
	TI[playerid][preOrg]						=
    TI[playerid][preOrgg]						=
	TI[playerid][pOldSkin] 						=
	TI[playerid][tCuffedTime] 					=
	TI[playerid][tCuffed] 						=
	TI[playerid][tGagTime] 						=
	TI[playerid][tSpcarTime] 					=
	TI[playerid][tJobSalary] 					=
	TI[playerid][tGunArea][0]					=
	TI[playerid][tGunArea][1]					=
	TI[playerid][tGunArea][2]					=
	TI[playerid][tGunArea][3]					=
	TI[playerid][tDMArea][0]					=
	TI[playerid][tDMArea][1]					=
	TI[playerid][tDMArea][2]					=
	TI[playerid][tJobSad][0]					=
	TI[playerid][tJobSad][1]					=
	TI[playerid][tJobSad][2]					=
	TI[playerid][tJobSad][3]					=
	TI[playerid][tJobGun][0]					=
	TI[playerid][tJobGun][1]					=
	TI[playerid][tJobGun][2]					=
	TI[playerid][tJobWood][0]					=
	TI[playerid][tJobWood][1]					=
	TI[playerid][tJobWood][3]					=
	TI[playerid][tMaskTime]						=
	TI[playerid][tAlcotraz][0]					=
	TI[playerid][tAlcotraz][1]					=
	TI[playerid][tAlcotraz][2]					=
	TI[playerid][tTrucker][0]					=
	TI[playerid][tTrucker][1]					=
	TI[playerid][tTrucker][2]					=
	TI[playerid][tTrucker][3]					=
	TI[playerid][tTazers][0] 					=
	TI[playerid][tTazers][1] 					=
	TI[playerid][tClothesWork][0] 				=
	TI[playerid][tClothesWork][1] 				=
	TI[playerid][tAntiDM]						=
	TI[playerid][tMasked]						=
	TI[playerid][tFakePass]						=
	TI[playerid][tGymSkill] 					=
	TI[playerid][tAutoSchool] 					=
	GotoInfo[playerid][gtState]                 =
	gAdmin[playerid][0]							=
	gAdmin[playerid][1]							=
	gAdmin[playerid][2]							=
	gAdmin[playerid][3]							=
	gAdmin[playerid][4]							=
	gAdmin[playerid][5]							=
	gAdmin[playerid][6]							=
	gAdmin[playerid][7]							=
	gAdmin[playerid][8]							= 
	EdittingATM[playerid] 						=
	gAdminTime[playerid]						=
	gOnlinePlayer[playerid][0] 					=
	gOnlinePlayer[playerid][1] 					=
 	gOnlinePlayerAFK[playerid][0] 				=
	gOnlinePlayerAFK[playerid][1] 				= 
	Casino_Flag[playerid][casino_crup] 			=
	Casino_Flag[playerid][casino_bet_cash] 		= 
	gpss[playerid] 								=
	VinylJob[playerid] 							=
	RepaintValue[playerid] 						= 
	TI[playerid][loadingMode] 					= 
	TI[playerid][loadingModelPlayer] 			= 
	TI[playerid][tACflood]						= 
	PlayerInfo[playerid][pHelper]						=
	PlayerInfo[playerid][ptheftSkill]					= //угон
	PlayerInfo[playerid][ptheftExp]						= //угон
	PlayerInfo[playerid][ptheftTime]					= //угон
	PlayerInfo[playerid][ptheftHome]					= //угон
	PlayerInfo[playerid][pAsk]							=
	PlayerInfo[playerid][pAskmute]						=
	TI[playerid][tCashDM]						=
	TI[playerid][tCashRace]						=
	TI[playerid][tAFK] 							= 
	TI[playerid][tDiceMoney]					=
	TI[playerid][tDiceTime]						=
	TI[playerid][tVirtualWorld]					=
	TI[playerid][tInterior]						=
	anti_dm{playerid} 							=
	TI[playerid][tSLimit]						=
	player_to_golod[playerid]					=
	player_to_game[playerid] 					=
	player_to_race_lv[playerid]					=
    kills_player_game[playerid]				 	= 
    player_gm{playerid}							=
    TI[playerid][tRaceMoney]					=
    PlayerInfo[playerid][pFMute]						=
    TI[playerid][tRaceRandom]					=
    timer_job_mower[playerid] 					=
    PlayerInfo[playerid][pTempKey]						= 0;

	youtube_player[playerid]  					= 0; //youtube
	youtube_time[playerid]  					= gettime(); //youtube

    PlayerInfo[playerid][pHP]							= 100;

	maniken[playerid]							=
	idaofcar[playerid]							=
	gPlayerProdCP[playerid]						=
	PlayerTrailerTime[playerid] 				=
	avir[playerid]								=
	aint[playerid]								=
	Lastspec[playerid]							=
	TI[playerid][tTazers][2] 					=
	TI[playerid][tFight]						=
	TI[playerid][tArendKey]						=
	TI[playerid][tNewYear][0] 					=
	IDGZ[playerid] 								=
	edit_int[playerid] 							= 
	TI[playerid][tArendaCar] 					=
	TI[playerid][tJobWood][2]					=
	TI[playerid][tDuel] 						=
	 TI[playerid][tDuelLobby] 					=
	Casino_Flag[playerid][select_casino_table] 	= -1;

	PlayerInfo[playerid][pSlotItem_Use][0] 				=
    PlayerInfo[playerid][pSlotItem_Use][1] 				=
    PlayerInfo[playerid][pSlotItem_Use][2] 				=
    PlayerInfo[playerid][pSlotItem_Use][3] 				=
    PlayerInfo[playerid][pSlotItem_Use][4] 				=
    PlayerInfo[playerid][pSlotItem_Use][5] 				=
    PlayerInfo[playerid][pSlotItem_Use][7] 				=
    PlayerInfo[playerid][pSlotItem_Use][6] 				= 1;

	PlayerInfo[playerid][pSlotItem][0] 					=
    PlayerInfo[playerid][pSlotItem][1] 					=
    PlayerInfo[playerid][pSlotItem][2] 					=
    PlayerInfo[playerid][pSlotItem][3] 					=
    PlayerInfo[playerid][pSlotItem][4] 					=
    PlayerInfo[playerid][pSlotItem][5] 					=
    PlayerInfo[playerid][pSlotItem][6] 					=
    PlayerInfo[playerid][pSlotItem][7] 					= 0;

	TI[playerid][tPhoneCaller] 					=
	TI[playerid][tPhoneCalled] 					=
	ReportAdmin[playerid] 						=
	GotoInfo[playerid][gtID]                    =
	GotoInfo[playerid][gtGoID]					=
	OldDialogID[playerid]                       =
	TI[playerid][tTaxiPass] 					=
	HealOffer[playerid] 						=
	SERIU[playerid][sID] 						= 
	TI[playerid][tSpectr]						=
	TI[playerid][tRaceID]						=
	TI[playerid][tDiceID]						=
	TI[playerid][tDiceIDs]						= INVALID_PLAYER_ID;

	PlayerTrailer[playerid] 					=
	TK_Trailer[playerid] 						=
	house_car[playerid][0] 						=
	house_car[playerid][1] 						=
	car_spawn[playerid]							=
	LastVeh[playerid] 							=
	VehTrailer[playerid]						=
	rob_veh[playerid]							=
	car_autoschool[playerid] 					=
	theftveh[playerid][0]						=
	player_car_race_lv_id[playerid] 			= INVALID_VEHICLE_ID;

	TI[playerid][tLoginTime]					= 180;

	TI[playerid][tPhone] 						=
	TI[playerid][tPhoneNews] 					=
	TI[playerid][tTazer] 						=
	TI[playerid][tTied] 						=
	TI[playerid][tGag] 							=
	TI[playerid][tEther] 						=
	TI[playerid][tJobOil][0] 					=
	TI[playerid][tJobOil][1] 					=
	TI[playerid][tBlockWars] 					=
	TI[playerid][tPhoneOnline] 					=
	TI[playerid][tGym]							=
	TI[playerid][tShowKeys]						=
	TI[playerid][tInHouse] 						=
	TI[playerid][tHeal]							=
	ChangedPrimaryColor[playerid] 				=
	ChangedSecondaryColor[playerid] 			=
	ChangedVinylJob[playerid] 					=
	TI[playerid][tDialog] 						=
	TI[playerid][tTaxiGoing] 					=
	TI[playerid][tLogin] 						=
	TI[playerid][tJoined] 						=
	TI[playerid][tTPpick] 						=
	Fishing[playerid] 							= 
	TI[playerid][tHelperDuty] 					=
	TI[playerid][tSelectSkin] 					= 
	TI[playerid][tDiceClosed]					=
	infight[playerid] 							=
	TI[playerid][tTir]							= false;

	TI[playerid][tGyms] 						=
	TI[playerid][tTaxiStart] 					=
	GotoInfo[playerid][gtX]                     = 
	GotoInfo[playerid][gtY]                     = 
	GotoInfo[playerid][gtZ]                     = 
	GotoInfo[playerid][gtTPX]                   = 
	GotoInfo[playerid][gtTPY]                   = 
	GotoInfo[playerid][gtTPZ]                   =
	TI[playerid][tArmour]                   	= 0.0;
	DJlvl[playerid] 							= 0;
	ObjectShip[playerid] 						= 0x7F800000;
	gPlayerProdText[playerid]					= Text3D:-1;
	DMSTATUS[playerid] 							= Text3D:(0xFFFF);

	theftCheck[playerid][1]				     	= 0; //угон
	theftplayer[playerid][0] 					= 1010; //угон
	theftplayer[playerid][1] 					= 0; //угон
	theftIDveh[playerid][0] 					= INVALID_VEHICLE_ID; //угон
	theftIDveh[playerid][2] 					= 3; //угон

	for(new i = 0; i < 4; i++) 					lic[playerid][i] = 0;
	for(new i=0;i<10;i++) {
		GunPlayer[playerid][i][0]=0;
		GunPlayer[playerid][i][1]=0;
	}

	for(new i = 0; i <= MAX_FRACTIONS; i ++) {
		bl_info[playerid][bl_fraction][i] = false;
	}

	for(new i = 0; i < TOTALGZ; i++) 			GangZoneShowForPlayer(playerid,GZInfo[i][gZone],GetGangZoneColor(i));
	
	ResetPlayerMoney(playerid);
 	CreateTextDraws(playerid);
}
stock RemoveBuildings(playerid) {
	//perfomanse
	RemoveBuildingForPlayer(playerid, 6140, 657.570, -1498.328, 19.328, 0.250);
	RemoveBuildingForPlayer(playerid, 6193, 717.195, -1490.984, 15.757, 0.250);
	RemoveBuildingForPlayer(playerid, 6138, 657.570, -1498.328, 19.328, 0.250);
	//острів
	//RemoveBuildingForPlayer(playerid, 706, 2838.449, -292.000, 6.492, 0.250);
	//TRUCK
	RemoveBuildingForPlayer(playerid, 13191, 65.257, -303.984, 14.453, 0.250);
	RemoveBuildingForPlayer(playerid, 13192, 164.710, -234.187, 0.476, 0.250);
	RemoveBuildingForPlayer(playerid, 13193, 173.515, -323.820, 0.515, 0.250);
	RemoveBuildingForPlayer(playerid, 13194, 140.593, -305.390, 5.593, 0.250);
	RemoveBuildingForPlayer(playerid, 13195, 36.828, -256.226, 0.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1426, 29.171, -292.273, 1.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1431, 36.429, -291.062, 1.570, 0.250);
	RemoveBuildingForPlayer(playerid, 1426, 24.593, -291.757, 1.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 29.234, -286.054, 1.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 32.406, -289.218, 1.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 33.601, -279.351, 1.117, 0.250);
	RemoveBuildingForPlayer(playerid, 12861, 36.828, -256.226, 0.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1450, 43.484, -252.570, 1.203, 0.250);
	RemoveBuildingForPlayer(playerid, 1449, 43.109, -254.960, 1.218, 0.250);
	RemoveBuildingForPlayer(playerid, 12859, 173.515, -323.820, 0.515, 0.250);
	RemoveBuildingForPlayer(playerid, 12805, 65.257, -303.984, 14.453, 0.250);
	RemoveBuildingForPlayer(playerid, 13198, 140.593, -305.390, 5.593, 0.250);
	RemoveBuildingForPlayer(playerid, 12956, 96.328, -261.195, 3.859, 0.250);
	RemoveBuildingForPlayer(playerid, 12860, 164.710, -234.187, 0.476, 0.250);
	RemoveBuildingForPlayer(playerid, 17350, -54.992, -1130.726, 4.578, 0.250);
	RemoveBuildingForPlayer(playerid, 1447, -89.929, -1133.750, 1.390, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, -87.054, -1132.679, 0.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1462, -79.250, -1137.718, 0.054, 0.250);
	RemoveBuildingForPlayer(playerid, 3285, -73.804, -1141.421, 1.984, 0.250);
	RemoveBuildingForPlayer(playerid, 17072, -54.992, -1130.726, 4.578, 0.250);
	RemoveBuildingForPlayer(playerid, 17073, -56.125, -1130.171, 4.492, 0.250);
	RemoveBuildingForPlayer(playerid, 1462, -84.375, -1116.093, 0.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1447, -84.054, -1117.218, 1.390, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -68.351, -1104.992, 0.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1462, -60.359, -1116.937, 0.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, -63.671, -1125.695, 0.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, -63.414, -1115.414, 0.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -63.812, -1106.421, 0.218, 0.250);
	RemoveBuildingForPlayer(playerid, 17019, -606.031, -528.820, 30.523, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -513.757, -561.007, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -503.617, -540.531, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -502.609, -528.648, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -502.117, -521.031, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -502.406, -513.015, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -620.414, -490.507, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -619.625, -473.453, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -553.687, -481.632, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -554.453, -496.179, 25.164, 0.250);
	RemoveBuildingForPlayer(playerid, 1441, -537.039, -469.117, 25.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -516.945, -496.648, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, -503.125, -509.000, 25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 17020, -475.976, -544.851, 28.117, 0.250);
	RemoveBuildingForPlayer(playerid, 17301, -49.390, -1140.869, 5.203, 0.250);
	RemoveBuildingForPlayer(playerid, 17421, -49.390, -1140.869, 5.203, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, -541.429, -561.226, 24.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -471.554, -479.921, 38.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -491.859, -479.921, 38.585, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -512.164, -479.921, 38.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -532.468, -479.921, 38.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -552.765, -479.921, 38.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, -573.054, -479.921, 38.578, 0.250);
	RemoveBuildingForPlayer(playerid, 17012, -542.007, -522.843, 29.593, 0.250);
	RemoveBuildingForPlayer(playerid, 17349, -542.007, -522.843, 29.593, 0.250);
	RemoveBuildingForPlayer(playerid, 12908, 125.438, -358.265, -7.859, 0.250);
	RemoveBuildingForPlayer(playerid, 13032, 125.438, -358.265, -7.859, 0.250);
	//airport ls
	RemoveBuildingForPlayer(playerid, 3769, 1961.4453, -2216.1719, 14.9844, 0.250);
	RemoveBuildingForPlayer(playerid, 3664, 1960.6953, -2236.4297, 19.2813, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1959.8984, -2227.4453, 13.7266, 0.250);
	RemoveBuildingForPlayer(playerid, 3625, 1961.4453, -2216.1719, 14.9844, 0.250);
	//taxi
	RemoveBuildingForPlayer(playerid, 647, 1077.367, -1750.398, 14.312, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1080.843, -1750.179, 18.578, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 1083.515, -1750.398, 14.312, 0.250);
	RemoveBuildingForPlayer(playerid, 8939, 2497.390, 1343.226, 12.484, 0.250);
	RemoveBuildingForPlayer(playerid, 8406, 2463.125, 1318.828, 15.289, 0.250);
	RemoveBuildingForPlayer(playerid, 8407, 2458.351, 1324.921, 11.281, 0.250);
	RemoveBuildingForPlayer(playerid, 8408, 2473.171, 1325.265, 17.015, 0.250);
	RemoveBuildingForPlayer(playerid, 8401, 2497.390, 1343.226, 12.484, 0.250);
	//спавн жд лс
	RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
	//RemoveBuildingForPlayer(playerid, 4821, 1745.199, -1882.849, 26.140, 0.250);
	RemoveBuildingForPlayer(playerid, 4961, 1745.199, -1882.849, 26.140, 0.250);
	RemoveBuildingForPlayer(playerid, 5033, 1745.199, -1882.849, 26.140, 0.250);
	RemoveBuildingForPlayer(playerid, 5055, 1745.199, -1882.849, 26.140, 0.250);
	//огорожа у риболова
	RemoveBuildingForPlayer(playerid, 1410, -417.3125, -434.6328, 16.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -421.8594, -437.2422, 17.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -424.6641, -435.0156, 16.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -421.0703, -432.3828, 16.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -416.6719, -430.9766, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -399.1719, -437.0156, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -394.6797, -438.4297, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -390.2422, -439.8906, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -403.7500, -435.6641, 15.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -408.3281, -434.6328, 16.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, -412.8594, -433.7813, 16.2891, 0.25);
	//STO LS
	//RemoveBuildingForPlayer(playerid, 5767, 1160.9609, -1180.5781, 70.4141, 0.25);
	//RemoveBuildingForPlayer(playerid, 5964, 1160.9609, -1180.5781, 70.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 5822, 1123.8203, -1198.8516, 25.7188, 0.25);
	//парк мерія
	RemoveBuildingForPlayer(playerid, 4057, 1479.554, -1693.140, 19.578, 0.250);
	RemoveBuildingForPlayer(playerid, 4210, 1479.562, -1631.453, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 713, 1457.937, -1620.695, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 713, 1496.867, -1707.820, 13.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 1430.171, -1719.468, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1451.625, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1467.984, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1485.171, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1713.507, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.695, -1716.703, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1505.179, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1713.703, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1289, 1504.750, -1711.882, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1445.007, -1704.765, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1702.359, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1676.687, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1445.007, -1692.234, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1656.250, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1636.234, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1445.812, -1650.023, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1619.054, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1457.726, -1710.062, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.656, -1707.687, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1704.640, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.062, -1701.570, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.695, -1702.531, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1457.554, -1697.289, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1694.046, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.382, -1692.390, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 4186, 1479.554, -1693.140, 19.578, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.125, -1687.562, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.062, -1690.648, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 641, 1458.617, -1684.132, 11.101, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1457.273, -1666.296, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1682.718, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1471.406, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.382, -1682.312, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1458.257, -1659.257, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1449.851, -1655.937, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1477.937, -1652.726, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1479.609, -1653.250, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1457.351, -1650.570, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1454.421, -1642.492, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1467.851, -1646.593, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1472.898, -1651.507, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1465.937, -1639.820, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1466.468, -1637.960, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1449.593, -1635.046, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1467.710, -1632.890, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1465.890, -1629.976, 15.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1472.664, -1627.882, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1479.468, -1626.023, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 3985, 1479.562, -1631.453, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 4206, 1479.554, -1639.609, 13.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1465.835, -1608.375, 15.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1466.484, -1598.093, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1704.593, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1494.210, -1694.437, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1693.734, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1496.976, -1686.851, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 641, 1494.140, -1689.234, 11.101, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1682.671, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1480.609, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1488.226, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1486.406, -1651.390, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1491.367, -1646.382, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1493.132, -1639.453, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1486.179, -1627.765, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1491.218, -1632.679, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1494.414, -1629.976, 15.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1494.359, -1608.375, 15.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1498.054, -1598.093, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1288, 1504.750, -1705.406, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1287, 1504.750, -1704.468, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1286, 1504.750, -1695.054, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1285, 1504.750, -1694.039, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1498.960, -1684.609, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1504.164, -1662.015, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1504.718, -1670.921, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1503.187, -1621.125, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1501.281, -1624.578, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1498.359, -1616.968, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1508.445, -1668.742, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1505.695, -1654.835, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1508.515, -1647.859, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1513.273, -1642.492, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1510.890, -1607.312, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1721.632, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1705.273, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1524.218, -1693.968, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1688.085, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1524.218, -1673.710, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1668.078, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1647.640, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1621.960, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1525.382, -1611.156, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 1528.953, -1605.859, 15.625, 0.250);
	//ЖДЛВ
	RemoveBuildingForPlayer(playerid, 8577, 2809.320, 1303.187, 10.546, 0.250);
	RemoveBuildingForPlayer(playerid, 8740, 2798.632, 1246.664, 17.109, 0.250);
	RemoveBuildingForPlayer(playerid, 8741, 2842.578, 1290.789, 16.140, 0.250);
	RemoveBuildingForPlayer(playerid, 8743, 2809.320, 1303.187, 10.546, 0.250);
	RemoveBuildingForPlayer(playerid, 710, 2819.710, 1299.000, 25.421, 0.250);
	RemoveBuildingForPlayer(playerid, 710, 2819.710, 1281.156, 25.421, 0.250);
	RemoveBuildingForPlayer(playerid, 8578, 2798.632, 1246.664, 17.109, 0.250);
	RemoveBuildingForPlayer(playerid, 963, 2842.000, 1252.546, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 963, 2855.812, 1267.039, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 963, 2842.000, 1276.304, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1284.812, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1277.617, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 8575, 2842.578, 1290.789, 16.140, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1291.476, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 956, 2845.726, 1295.046, 10.789, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1300.304, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1296.390, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 647, 2819.218, 1304.781, 11.335, 0.250);
	RemoveBuildingForPlayer(playerid, 962, 2855.812, 1314.625, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 962, 2842.000, 1324.039, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 962, 2842.000, 1303.976, 11.445, 0.250);
	//ЖДСФ
	RemoveBuildingForPlayer(playerid, 11311, -1968.562, 139.109, 31.867, 0.250);
	RemoveBuildingForPlayer(playerid, 11352, -1972.484, 136.375, 30.828, 0.250);
	RemoveBuildingForPlayer(playerid, 625, -1961.757, 114.195, 27.523, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 129.460, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 129.460, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 123.875, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 123.875, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 11305, -1968.562, 139.109, 31.867, 0.250);
	RemoveBuildingForPlayer(playerid, 11324, -1969.671, 137.859, 34.460, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 140.640, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 140.640, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 135.046, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 135.046, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -1980.914, 149.562, 27.039, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -1980.914, 148.078, 27.039, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -1981.437, 148.921, 27.039, 0.250);
	RemoveBuildingForPlayer(playerid, 955, -1980.789, 142.664, 27.070, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 151.812, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 151.812, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1970.445, 146.226, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, -1967.984, 146.226, 27.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1264, -1977.320, 162.570, 27.039, 0.250);
	RemoveBuildingForPlayer(playerid, 10932, -1941.460, 138.000, 32.640, 0.250);
	RemoveBuildingForPlayer(playerid, 11217, -1941.460, 138.000, 32.640, 0.250);
	RemoveBuildingForPlayer(playerid, 11354, -1921.890, 137.882, 29.757, 0.250);
	RemoveBuildingForPlayer(playerid, 11353, -1921.890, 137.882, 29.757, 0.250);
	//ЖДЛС
	RemoveBuildingForPlayer(playerid, 5199, 1982.640, -2038.164, 14.789, 0.250);
	RemoveBuildingForPlayer(playerid, 5201, 1988.140, -2003.421, 15.773, 0.250);
	RemoveBuildingForPlayer(playerid, 5313, 2043.992, -2016.867, 25.054, 0.250);
	RemoveBuildingForPlayer(playerid, 5316, 2043.992, -2016.867, 25.054, 0.250);
	RemoveBuildingForPlayer(playerid, 5346, 2016.312, -1968.921, 17.625, 0.250);
	RemoveBuildingForPlayer(playerid, 5337, 1995.437, -2066.148, 18.531, 0.250);
	RemoveBuildingForPlayer(playerid, 5375, 1995.437, -2066.148, 18.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1532, 1977.054, -2035.890, 12.539, 0.250);
	RemoveBuildingForPlayer(playerid, 5140, 1982.640, -2038.164, 14.789, 0.250);
	RemoveBuildingForPlayer(playerid, 1306, 2001.023, -2024.289, 19.750, 0.250);
	RemoveBuildingForPlayer(playerid, 5136, 1988.140, -2003.421, 15.773, 0.250);
	RemoveBuildingForPlayer(playerid, 5312, 2068.960, -2013.476, 24.156, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1989.085, -1982.476, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1983.812, -1982.476, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1978.531, -1982.476, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3567, 1986.570, -1974.492, 13.257, 0.250);
	RemoveBuildingForPlayer(playerid, 5153, 1975.710, -1974.507, 13.117, 0.250);
	RemoveBuildingForPlayer(playerid, 3567, 2004.492, -1974.492, 13.257, 0.250);
	RemoveBuildingForPlayer(playerid, 3567, 2008.625, -1974.546, 15.023, 0.250);
	RemoveBuildingForPlayer(playerid, 5152, 1997.765, -1974.468, 14.875, 0.250);
	RemoveBuildingForPlayer(playerid, 3286, 2042.195, -1986.085, 38.328, 0.250);
	RemoveBuildingForPlayer(playerid, 5169, 2016.312, -1968.921, 17.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 1971.460, -1980.609, 12.640, 0.250);
	RemoveBuildingForPlayer(playerid, 3744, 2072.546, -1967.601, 15.117, 0.250);
	RemoveBuildingForPlayer(playerid, 3574, 2072.546, -1967.601, 15.117, 0.250);
	//удаленки в интах
	RemoveBuildingForPlayer(playerid, 1264, 933.0313, 2111.4141, 1011.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 934.8828, 2112.0703, 1012.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1265, 935.3359, 2113.1406, 1010.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1264, 939.4844, 2113.1641, 1010.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 961.4453, 2097.3594, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 2008, 960.4609, 2098.1094, 1009.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 963.1094, 2099.2813, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1722, 963.1094, 2100.2891, 1010.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 14613, 942.1406, 2142.2578, 1012.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 14585, 939.5938, 2144.1406, 1016.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 14584, 942.3203, 2145.5156, 1011.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 14615, 932.7969, 2145.6406, 1015.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 14589, 945.6094, 2139.4766, 1013.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 14586, 946.1953, 2141.1875, 1016.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 14587, 948.7969, 2146.4688, 1015.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 14588, 948.9844, 2137.0938, 1013.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1497, 965.7422, 2161.5781, 1010.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1497, 965.7578, 2158.5703, 1010.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 14612, 961.1719, 2166.5781, 1012.7344, 0.25);

	RemoveBuildingForPlayer(playerid, 14784, 1281.1406, -30.0938, 1009.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 14795, 1388.8828, -20.8828, 1005.2031, 0.25);	
	//розвідники
	RemoveBuildingForPlayer(playerid, 7833, 1064.8359, 1869.7813, 13.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 7834, 1064.8359, 1869.7813, 13.9219, 0.25);
	//АШ
	RemoveBuildingForPlayer(playerid, 6491, 717.484, -1357.304, 20.296, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 650.835, -1377.664, 21.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 650.835, -1356.585, 21.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 650.835, -1338.242, 21.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 677.195, -1328.875, 25.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 745.585, -1381.109, 25.875, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 751.335, -1368.031, 25.875, 0.250);
	RemoveBuildingForPlayer(playerid, 6490, 717.484, -1357.304, 20.296, 0.250);
	RemoveBuildingForPlayer(playerid, 6516, 717.687, -1357.281, 18.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 696.195, -1328.875, 25.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 702.234, -1328.875, 25.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 721.210, -1328.875, 25.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1415, 732.851, -1332.898, 12.687, 0.250);
	RemoveBuildingForPlayer(playerid, 1439, 732.726, -1341.773, 12.632, 0.250);
	//farm
	RemoveBuildingForPlayer(playerid, 3376, -96.0859, 3.1953, 6.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3375, -96.0859, 3.1953, 6.6953, 0.25);
	//post
	RemoveBuildingForPlayer(playerid, 17002, 52.890, -1532.031, 7.742, 0.250);

	RemoveBuildingForPlayer(playerid, 3516, 1776.992, 828.968, 12.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1290, 1796.351, 789.234, 16.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3516, 1811.742, 822.929, 12.921, 0.250);
	//fish
	RemoveBuildingForPlayer(playerid, 1458, -401.2188, -429.5938, 15.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1463, -392.2188, -430.1641, 15.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3284, -393.2188, -422.8203, 17.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 727, -400.6094, -410.2656, 13.9844, 0.25);
	//нефть
	RemoveBuildingForPlayer(playerid, 16279, 648.937, 1471.382, 8.367, 0.250);
	RemoveBuildingForPlayer(playerid, 3428, 628.148, 1354.406, 11.382, 0.250);
	RemoveBuildingForPlayer(playerid, 16089, 342.125, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16090, 315.773, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16091, 289.742, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16087, 358.679, 1430.453, 11.617, 0.250);
	RemoveBuildingForPlayer(playerid, 16088, 368.429, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16535, 409.625, 1320.500, 12.335, 0.250);
	RemoveBuildingForPlayer(playerid, 3426, 628.148, 1354.406, 11.382, 0.250);
	RemoveBuildingForPlayer(playerid, 16092, 394.156, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16766, 498.039, 1428.078, 7.164, 0.250);
	RemoveBuildingForPlayer(playerid, 16530, 414.289, 1496.226, 11.625, 0.250);
	RemoveBuildingForPlayer(playerid, 16532, 497.500, 1507.601, 5.250, 0.250);
	RemoveBuildingForPlayer(playerid, 16531, 465.492, 1552.093, 9.640, 0.250);
	RemoveBuildingForPlayer(playerid, 16534, 566.335, 1372.890, 12.179, 0.250);
	RemoveBuildingForPlayer(playerid, 16267, 638.601, 1404.992, 11.937, 0.250);
	RemoveBuildingForPlayer(playerid, 16533, 588.640, 1483.937, 8.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3427, 648.937, 1471.382, 8.367, 0.250);
	//lva
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 2023.757, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 1989.546, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3366, 276.656, 1955.765, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16619, 199.335, 1943.875, 18.203, 0.250);
	RemoveBuildingForPlayer(playerid, 16093, 211.648, 1810.156, 20.734, 0.250);
	RemoveBuildingForPlayer(playerid, 16638, 211.726, 1809.187, 18.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 262.093, 1807.671, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1411, 347.195, 1799.265, 18.757, 0.250);
	RemoveBuildingForPlayer(playerid, 1411, 342.937, 1796.289, 18.757, 0.250);
	RemoveBuildingForPlayer(playerid, 16670, 330.789, 1813.218, 17.828, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 113.382, 1814.453, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 165.953, 1849.992, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1697, 220.382, 1835.343, 23.234, 0.250);
	RemoveBuildingForPlayer(playerid, 1697, 228.796, 1835.343, 23.234, 0.250);
	RemoveBuildingForPlayer(playerid, 1697, 236.992, 1835.343, 23.234, 0.250);
	RemoveBuildingForPlayer(playerid, 16095, 279.132, 1829.781, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16094, 191.140, 1870.039, 21.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 103.890, 1901.101, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 161.906, 1933.093, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 16323, 199.335, 1943.875, 18.203, 0.250);
	RemoveBuildingForPlayer(playerid, 16671, 193.953, 2051.796, 20.179, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 233.429, 1934.843, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 267.062, 1895.296, 16.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 2023.757, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 1989.546, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3268, 276.656, 1955.765, 16.632, 0.250);
	RemoveBuildingForPlayer(playerid, 16669, 380.257, 1914.959, 17.429, 0.250);
	RemoveBuildingForPlayer(playerid, 16668, 357.937, 2049.419, 16.843, 0.250);
	RemoveBuildingForPlayer(playerid, 3279, 161.906, 1933.089, 16.820, 0.250);
	//sfa
    RemoveBuildingForPlayer(playerid, 968, -1526.437, 481.382, 6.906, 0.250);
	RemoveBuildingForPlayer(playerid, 966, -1526.390, 481.382, 6.179, 0.250);
	RemoveBuildingForPlayer(playerid, 10829, -1523.257, 486.796, 6.156, 0.250);
	RemoveBuildingForPlayer(playerid, 10825, -1412.290, 351.445, 13.710, 0.250);
	RemoveBuildingForPlayer(playerid, 10826, -1407.000, 390.960, 13.101, 0.250);
	RemoveBuildingForPlayer(playerid, 10898, -1407.000, 390.960, 13.101, 0.250);
	RemoveBuildingForPlayer(playerid, 10824, -1409.900, 389.476, 8.179, 0.250);
	RemoveBuildingForPlayer(playerid, 10900, -1409.900, 389.476, 8.179, 0.250);
	//
    RemoveBuildingForPlayer(playerid, 705, -2491.5859, -670.7188, 138.4297, 0.25);//[SF NEWS] дерево
	RemoveBuildingForPlayer(playerid, 1684, -2508.4063, -669.0938, 139.8516, 0.25);//[SF NEWS] здание для тока
    RemoveBuildingForPlayer(playerid, 1245, 2675.5234, 1172.9297, 11.1563, 0.25);//[LV NEWS] трамплин
	//work guns
	RemoveBuildingForPlayer(playerid, 1278, 2626.2344, -2391.5234, 26.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 2637.1719, -2385.8672, 16.4141, 0.25);

	RemoveBuildingForPlayer(playerid, 3689, 2685.382, -2366.054, 19.953, 0.250);
	RemoveBuildingForPlayer(playerid, 3707, 2716.234, -2452.593, 20.203, 0.250);
	RemoveBuildingForPlayer(playerid, 3690, 2685.382, -2366.054, 19.953, 0.250);
	RemoveBuildingForPlayer(playerid, 3708, 2716.234, -2452.593, 20.203, 0.250);
	RemoveBuildingForPlayer(playerid, 3770, 2746.406, -2453.484, 14.078, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2672.593, -2506.859, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2680.859, -2493.078, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 2704.367, -2487.867, 20.562, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2686.757, -2416.625, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 1315, 2672.593, -2408.250, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2639.195, -2392.820, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2663.835, -2392.820, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3578, 2747.007, -2480.242, 13.171, 0.250);
	RemoveBuildingForPlayer(playerid, 3626, 2746.406, -2453.484, 14.078, 0.250);
	RemoveBuildingForPlayer(playerid, 3577, 2744.570, -2436.187, 13.343, 0.250);
	RemoveBuildingForPlayer(playerid, 3577, 2744.570, -2427.320, 13.351, 0.250);

    RemoveBuildingForPlayer(playerid, 1250, 997.4141, 1707.5234, 10.8516, 0.25);//[RM mafia] шлагбаум
    RemoveBuildingForPlayer(playerid, 1251, 997.0469, 1710.9531, 11.2656, 0.25);//[RM mafia] шлагбаум
    RemoveBuildingForPlayer(playerid, 1251, 998.0938, 1755.6875, 11.2656, 0.25);//[RM mafia] шлагбаум
    RemoveBuildingForPlayer(playerid, 1250, 997.7266, 1759.1250, 10.8516, 0.25);//[RM mafia] шлагбаум
}
public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ) {
	if(hittype > 4) return false;
	if((hittype == BULLET_HIT_TYPE_PLAYER && ! IsPlayerConnected(hitid)) || (hittype == BULLET_HIT_TYPE_VEHICLE && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_OBJECT && !IsValidVehicle(hitid)) || (hittype == BULLET_HIT_TYPE_PLAYER_OBJECT && !IsValidPlayerObject(playerid, hitid))) return false;
    return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid) {
	if(newinteriorid > 0 && oldinteriorid == 0) SetPlayerWeather(playerid, 1);
	else if(newinteriorid == 0 && oldinteriorid > 0) SetPlayerWeather(playerid,2);
	return 1;
}
public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
    if(result == -1)
        {
                SendClientMessage(playerid, -1, ""NO"* {f6f6d9}[Помилка] Невідома команда! Введіть {1b892a}/mm >> Команди серверу {f6f6d9}для перегляду команд.");
                return 0;
        }
    return 1;
}
public OnPlayerCommandReceived(playerid, cmd[], params[], flags) {
    if(TI[playerid][tDialog]) {
		ErrorMessage(playerid,"Не можна використовувати команди при відкритому діалозі");
		return 0;
	}
	if(!TI[playerid][tLogin]) {
		ErrorMessage(playerid,"Необхідно авторизуватися");
		return 0;
	}
	return 1;
}

public OnPlayerConnect(playerid) {
	if(playerid == 65535) return Kick(playerid);
	TI[playerid][tLogin] = false;
	TI[playerid][tSpawn] = false;
	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 850, playerid);
	SetPlayerVirtualWorld(playerid,playerid+1);
	GetPlayerIp(playerid,player_ip_check[playerid],16);
	
	TI[playerid][tYoutubcar] = INVALID_VEHICLE_ID;
	
	for(new i; i<MAX_QUESTS; i++) {
		AcceptQuest[playerid][i]=0;
		QuestShow[playerid][i]=0;
		QuestProgress[playerid][i]=0;
	}
	GetPlayerName(playerid,player_name[playerid],MAX_PLAYER_NAME);
    PlayerInfo[playerid][pYoutube] = 0;
	ac_1{playerid} = false;
	to_default(playerid);

    shotTime[playerid] = 0;
	shot[playerid] = 0;
	
	spaned[playerid]=0;
	
	//if(strcmp(player_name[playerid],"None",true) == 0) return Kick(playerid);
	
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `"TABLE_BANIP"` WHERE `IP` = '%s' LIMIT 1", player_ip_check[playerid]);
	mysql_tquery(connects, query, "check_ip_ban", "i", playerid);

	GangZoneShowForPlayer(playerid, SFa, COLOR_YELLOW2);
	GangZoneShowForPlayer(playerid, Army, COLOR_YELLOW2);

	RemoveBuildings(playerid);
	return true;
}
stock IsVehicleOccupiedEx(vehicleid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	}
	return 0;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) {
	new arend_id = INVALID_PLAYER_ID;
	if(GetArendCarID(vehicleid, arend_id) != -1) {
		new string[200];
		if(arend_id == INVALID_PLAYER_ID || !IsPlayerConnected(arend_id)) {
			if(!ispassenger) {
				new rc = GetArendCarID(vehicleid);

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(ArendInfo[rc][aCost]/100*vip_status[PlayerInfo[playerid][pVips]][vip_rentcar]);
					price = (ArendInfo[rc][aCost]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(ArendInfo[rc][aCost]/100*BonusInfo[act_rentcar]);
						price = (ArendInfo[rc][aCost]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(ArendInfo[rc][aCost]/100*BonusInfo[act_rentcar]);
						price = (ArendInfo[rc][aCost]-seller);
					}
				    else price = ArendInfo[rc][aCost];
				}

				format(string,sizeof(string),""YELLOW"Транспорт для оренди\n\n"W"- Модель: "YELLOW"%s"W"\n- Вартість: "GREEN"$%i"W"\n\nДля оренди Т/С нажміть "ORANGE"'Аренда'", gTransport[GetVehicleModel(vehicleid)-400][trName], price);
				D(playerid, dRentCar, DSM, ""YELLOW"Аренда", string, "Аренда", "Скасувати");
				SetPVarInt(playerid, "rent_carid", vehicleid);
				ClearAnimations(playerid, 1);
			}
			else ClearAnimations(playerid, 1);
		}
		else if(arend_id != playerid) {
			ErrorMessage(playerid,"Цей транспорт уже арендований");
			if(!ispassenger) ClearAnimations(playerid, 1);
		}
	}
	if(VehicleInfo[vehicleid][vBizz] > 0) {
		if(IsVehicleOccupiedEx(vehicleid) && VehicleInfo[vehicleid][vBizz] > 0 && !ispassenger) return ClearAnimations(playerid);
		switch(VehicleInfo[vehicleid][vBizz]) {
			case 2..4: {
				if(VehicleInfo[vehicleid][vBizz] != PlayerInfo[playerid][bizz_work] && !ispassenger) return ErrorMessage(playerid,"Ви не водій таксі"),ClearAnimations(playerid);
				switch(GetVehicleModel(vehicleid)) {
					case 540,550: if(PlayerInfo[playerid][bizz_status] < 2 && !ispassenger) return ErrorMessage(playerid,"У Вас немає доступу до цього класу таксі"),ClearAnimations(playerid);
					case 483: if(PlayerInfo[playerid][bizz_status] < 3 && !ispassenger) return ErrorMessage(playerid,"У Вас немає доступу до цього класу таксі"),ClearAnimations(playerid);
					case 560,580: if(PlayerInfo[playerid][bizz_status] < 4 && !ispassenger) return ErrorMessage(playerid,"У Вас немає доступу дл цього класу таксі"),ClearAnimations(playerid);
				}
				if(!ispassenger) SendOk(playerid,"Для ввімкнення лічильника введіть "W"/count{f6f6d9} та виберіть оплачуючого пасажира");
			}
			case 5..7: {
				if(VehicleInfo[vehicleid][vBizz] != PlayerInfo[playerid][bizz_work] && !ispassenger) return ErrorMessage(playerid,"Ви не співробітник транспортної компанії"),ClearAnimations(playerid);
			}
		}
	}
	if(VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_AUTOSALON) ClearAnimations(playerid, 1);
	if(VehicleInfo[vehicleid][vBizz] && !ispassenger) {
		for(new i = 0; i < 20; i++) {
			if(vehicleid == FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i]) FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCarID][i] = playerid;
		}
	}
	if(VehicleInfo[vehicleid][vRobHouse]) {
		if(vehicleid != rob_veh[playerid]) ClearAnimations(playerid, 1);
	}
	SetPlayerArmedWeapon(playerid,0);
	
	if(VehicleInfo[vehicleid][vLock])
	{
		if(PlayerInfo[playerid][pAdmin] < 1)
		{
			ClearAnimations(playerid);
			SendClientMessage(playerid,COLOR_GREY, !"[ Думки ]: {FFFFFF}Цей транспорт закритий!");
		}
		if(!VehicleInfo[vehicleid][vAlarm])
		{
			SetAlarmStatus(vehicleid,true);
			foreach(Player,i)
			{
				if(IsPlayerHaveCar(i, vehicleid))
				{
				    new string[200];
					new Float:X,Float:Y,Float:Z,car_id = GetPVarInt(i, "cars_enter");
					GetVehiclePos(vehicleid, X,Y,Z);
					format(string,sizeof(string),"[Інформація] {FFFFFF}На вашому транспорті [%s] запрацювала сигналізація", gTransport[gPlayerCars[i][carModel][car_id]-400][trName]);
					SendClientMessage(i,COLOR_YELLOW,string);
					SendClientMessage(i,COLOR_RED, !"[Інформація] {FFFFFF} Місцезнаходження транспорту указано на карті!");
					EnableGPSForPlayer(i,X,Y,Z);
					break;
				}
			}
		}
	}
	return true;
}
CB: PlayerSpawn(playerid) {
    if(IsPlayerNPC(playerid)) return true;
    if(IsPlayerInAnyVehicle(playerid)) {
	    new Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,X,Y,Z);
		SetPlayerPosAC(playerid, X,Y,Z, TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	    SetTimerEx("PlayerSpawn", 50, false, "i", playerid);
	    return true;
	}
	SettingSpawn(playerid);
	if(TI[playerid][tSpectate] == true) SpecPl(playerid, false);
	else SpawnPlayer(playerid);
	return true;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {
	for(new guard_iterator = strlen(inputtext) - 1; guard_iterator > -1; --guard_iterator) {
		if(inputtext[guard_iterator]=='%') inputtext[guard_iterator]='#';
	}
	TI[playerid][tDialog] = false;
	new bool:olddialog=true;
	if(dialogid != OldDialogID[playerid]) olddialog=false;
	new text_length = strlen(inputtext);
	for(new i = 0; i < text_length; i ++) {
		if(inputtext[i] == '{') {
			inputtext[i] = ' ';
		}
		if(inputtext[i] == '}') {
			inputtext[i] = ' ';
		}
		if(inputtext[i] == '%') {
            inputtext[i] = ' ';
        }
	}
	if(!olddialog) return 1;
	OldDialogID[playerid]                       = INVALID_DIALOG_ID;
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	switch(dialogid) {
	    case D_BOOMBOX:
	    {
			if(!response) return true;
			RadioID[playerid] = listitem;
			switch(listitem)
			{
				case 0:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
						{
							StopAudioStreamForPlayerFix(i);
						}
					}
					return true;
				}
				case 1:
				{
				    foreach(Player,i)
					{
					    if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Eminem-untouchable.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 2:
				{
					foreach(Player,i)
					{
					    if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Eldzhey-rvanye_dzhinsy.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}

				}
				case 3:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Maks_korzh-malinovyy_zakat.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 4:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/T-fest-uleti.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 5:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/FACE-MOI_KALASHNIKOV.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 6:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Egor_Creed-Krutoi.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 7:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Time_Belorusskih-Vitaminka.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 8:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://http://music.arizona-rp.com/bombox/Lil_Pump-I_Love_It.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 9:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/monetochka-kazhdyy_raz.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 10:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Vremya_i_steklo-trollj.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 11:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/matrang-meduza.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 12:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/skriptonit-tsepi.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
 				case 13:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/PHARAOH-Na_Lune.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 14:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/MORGENSHTERN-Zelenoglasie_defki.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 15:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/LIZER-KORABLI.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 16:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Big_Baby_Tape-Hokage.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 17:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/DELORENZY-ZAPRETITE_ANIME.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 18:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Eldzhey-minimal.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 19:
				{
					foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Face-ya_ronyayu_zapad.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				case 20:
				{
				    foreach(Player,i)
					{
						if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
					    {
						    StopAudioStreamForPlayerFix(i);
							PlayAudioStreamForPlayerFix(i, "http://d.zaix.ru/coBt.mp3", BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 30.0, 1);
						}
					}
				}
				default:
			    {
			        RadioID[playerid] = 0;
			    }
			}
			return 1;
	    }
		case D_LOTARRY_UKRAINE_MONEY: 
			{
				if(!response) return 1;
				if(PlayerInfo[playerid][pCash] < 5000) return ErrorMessage(playerid, "У Вас недостаточно коштів");
				switch(random(5))
					{
						case 0:
							{									
								new win = Random(27000, 32000); //від 27 до 32 макс виграш
								GiveMoney(playerid, win, "Виграв в миттєвій лотареї");
								
								new text[28];
								format(text, sizeof(text), "Вітаємо. Ви виграли: %d", win);
								SendUse(playerid, text);
							}
							case 1..5:
							{
								ErrorMessage(playerid, "На жаль, Ви нічого не виграли");
								GiveMoney(playerid, -5000, "Програв в миттєвій лотареї");
							}
						}
					}	
		case D_LOTARRY_UKRAINE_DONAT:
			{
				if(!response) return 1;
				if(PlayerInfo[playerid][pRouble] < 20) return ErrorMessage(playerid, "У Вас недостаточно B-Coin");
			 	switch(random(5))
					{
						case 0:
							{									
								new win = Random(50, 80); //від 50 до 80 макс виграш донат
								PlayerInfo[playerid][pRouble] += win;
								UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
								
								new text[28];
								format(text, sizeof(text), "Вітаємо. Ви виграли: %d B-Coin", win);
								SendUse(playerid, text);
							}
							case 1..5:
							{
								PlayerInfo[playerid][pRouble] -= 20;
								UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
								ErrorMessage(playerid, "На жаль, Ви нічого не виграли");
							}
						}
					}	
		 case D_SPAWN_POSITION: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pSpawnPos][0] == 0 && PlayerInfo[playerid][pSpawnPos][1] == 0) return ErrorMessage(playerid, "Не можливо відновитися на позицію в інтерєрі");
			SetPlayerPosAC(playerid, PlayerInfo[playerid][pSpawnPos][0], PlayerInfo[playerid][pSpawnPos][1], PlayerInfo[playerid][pSpawnPos][2], 0, 0);
			SetPlayerFacingAngle(playerid, PlayerInfo[playerid][pSpawnPos][3]);
			SetCameraBehindPlayer(playerid);
			return true;
		}
		case D_ALOGIN: {
			if(!response) return 1;
			new query[300];
			switch(GetPVarInt(playerid,"aLogin")) {
				case 1: {
					if(!strlen(inputtext)|| !strcmp(inputtext, "qwerty", true) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || strfind(inputtext, "=",true) != -1 || strfind(inputtext, "'",true) != -1) return D(playerid, D_ALOGIN, DSP, ""YELLOW"Авторизація", ""W"Для доступу до адмін привелегій, Вам необхідно авторизуватися:", "Вхід", "Скасувати");
					SetPVarString(playerid,"inputtext",inputtext);
					format(query, sizeof(query), "SELECT * FROM `admin` WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
					mysql_pquery(connects, query, "alogin", "ds",playerid,player_name[playerid]);
				}
				case 0: {
					if(!strlen(inputtext)) return D(playerid, D_ALOGIN, DSP, ""YELLOW"Авторизація", ""W"Для доступу до адмін привелегій, Вам необхідно авторизуватися:", "Вхід", "Скасувати");
					format(query, sizeof(query), "SELECT * FROM `admin` WHERE `Name` = '%s' AND `password` = '%s' LIMIT 1", player_name[playerid], MD5_Hash(inputtext));
					mysql_pquery(connects, query, "password_adm","ds", playerid, inputtext);
				}
			}
			return 1;
		}
		case D_YOUTUBE_CAR: {
		  if(!response) return true;
		  new carid;
		  switch(listitem) {
		  case 0: carid = 560;
		  case 1: carid = 522;
		  case 2: carid = 481;
		  case 3: carid = 539;
		  case 4: carid = 601;
		  case 5: carid = 444;
		  case 6: carid = 411;
		  case 7: carid = 487;
		  }
		  if(TI[playerid][tYoutubcar] != INVALID_VEHICLE_ID) A_DestroyVehicle(TI[playerid][tYoutubcar]);
		  new Float:a_x, Float:a_y, Float:a_z, Float:z;
	      GetPlayerPos(playerid, a_x, a_y, a_z);
	      GetPlayerFacingAngle(playerid, z);
	      TI[playerid][tYoutubcar] = A_CreateVehicle(carid,a_x, a_y, a_z, z, 11, 1, 1500, VEHICLE_TYPE_PLAYER); // spawn
		  PutPlayerInVehicle(playerid, TI[playerid][tYoutubcar], 0);
		  new vehicleid = GetPlayerVehicleID(playerid);
		  VehicleInfo[vehicleid][vFuel] = 50;
		  VehicleInfo[vehicleid][vAkum] = 50;
		  GetVehicleParamsEx(TI[playerid][tYoutubcar],engine,lights,alarm,doors,bonnet,boot,objective);
		  ToggleEngine(TI[playerid][tYoutubcar],playerid);
	}
		case D_CARS:
		{
			if(!response) return DeletePVar(playerid, "cars_enter");
		    if(gPlayerCars[playerid][carModel][0] == 481 || gPlayerCars[playerid][carModel][1] == 481)
			{
				if(response)
				{
				    new str[50];
				    new string[500];
				    new cars_id = GetPVarInt(playerid, "cars_enter");
                    if(VehicleInfo[house_car[playerid][cars_id]][vLock]) strcat(string,"{ff6347}Відкрити\n");
					else strcat(string,"{ff6347} Закрити\n");
					if(VehicleInfo[house_car[playerid][cars_id]][vKey]) strcat(string,"{ff6347} Витягнути ключі\n");
					else strcat(string,"{ff6347}Вставити ключі\n");
					strcat(string,"Знайти\n");
					if(VehicleInfo[house_car[playerid][cars_id]][vAlarm])
					strcat(string,"{ff6347} Відключити сигналізацію\n");
					else strcat(string,"{ff6347} Включити сигналізацію\n");
					strcat(string,"{73B461} Інформація про авто (Паспорт)\n");
					if(VehicleInfo[house_car[playerid][cars_id]][vPerfStatus]) strcat(string,"{FFFFFF}Режим їзди [{73B461}Comfort{FFFFFF}]\n");
					else strcat(string,"{FFFFFF}Режим їзди [{e4a72b}Sport{FFFFFF}] \n");
					strcat(string,"Заспавнити автомобіль [ {9ACD32}500${ffffff} ]\n");
					format(str,sizeof(str),"Інструменти для %s (%d)",gTransport[gPlayerCars[playerid][carModel][cars_id]-400][trName],gPlayerCars[playerid][carModel][cars_id]);
					D(playerid,D_CARS_2,DSL,str,string,"Вибрати","Скасувати");
				}
			}
			else if(gPlayerCars[playerid][carModel][0] != 481 && gPlayerCars[playerid][carModel][1] != 481)
			{
				switch(listitem)
				{
					case 0:
					{
					    new str[50];
					    new string[500];
						SetPVarInt(playerid, "cars_enter", 0);
						if(VehicleInfo[house_car[playerid][0]][vLock]) strcat(string,"{ff6347}Відкрити\n");
						else strcat(string,"{ff6347}Закрити\n");
						if(VehicleInfo[house_car[playerid][0]][vKey]) strcat(string,"{ff6347}Витягнути ключі\n");
						else strcat(string,"{ff6347} Вставити ключі\n");
						strcat(string,"Знайти\n");
						if(VehicleInfo[house_car[playerid][0]][vAlarm])
						strcat(string,"{ff6347} Відключити сигналізацію\n");
						else strcat(string,"{ff6347} Включити сигналізацію\n");
						strcat(string,"{73B461} Інформація про авто (Паспорт)\n");
						if(VehicleInfo[house_car[playerid][0]][vPerfStatus]) strcat(string,"{FFFFFF}Режим їзди [{73B461}Comfort{FFFFFF}]\n");
						else strcat(string,"{FFFFFF}Режим їзди [{e4a72b}Sport{FFFFFF}] \n");
						strcat(string,"Заспавнити автомобіль [ {9ACD32}500${ffffff} ]\n");
						format(str,sizeof(str),"Інструменти для %s (%d)",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gPlayerCars[playerid][carModel][0]);
						D(playerid,D_CARS_2,DSL,str,string,"Вибрати","Скасувати");
					}
					case 1:
					{
					    new str[50];
					    new string[500];
					    SetPVarInt(playerid, "cars_enter", 1);
                        if(VehicleInfo[house_car[playerid][1]][vLock]) strcat(string,"{ff6347}Відкрити\n");
						else strcat(string,"{ff6347}Закрити\n");
						if(VehicleInfo[house_car[playerid][1]][vKey]) strcat(string,"{ff6347}Витягнути ключі\n");
						else strcat(string,"{ff6347}Вставити ключі\n");
						strcat(string,"Знайти\n");
						if(VehicleInfo[house_car[playerid][1]][vAlarm])
						strcat(string,"{ff6347} Відключити сигналізацію\n");
						else strcat(string,"{ff6347} Включити сигналізацію\n");
						strcat(string,"{73B461} Інформація про авто (Паспорт)\n");
						if(VehicleInfo[house_car[playerid][1]][vPerfStatus]) strcat(string,"{FFFFFF}Режим їзди [{73B461}Comfort{FFFFFF}]\n");
						else strcat(string,"{FFFFFF}Режим їзди [{e4a72b}Sport{FFFFFF}] \n");
						strcat(string,"Заспавнити автомобіль [ {9ACD32}500${ffffff} ]\n");
						format(str,sizeof(str),"Інструменти для %s (%d)",gTransport[gPlayerCars[playerid][carModel][1]-400][trName],gPlayerCars[playerid][carModel][1]);
						D(playerid,D_CARS_2,DSL,str,string,"Вибрати","Скасувати");
					}
				}
			}
			return 1;
		}
		case D_CARS_2:
		{
		    if(!response) return DeletePVar(playerid, "cars_enter");
		    new car_id = GetPVarInt(playerid, "cars_enter");
            if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						doors_lc(house_car[playerid][car_id], car_id, playerid);
						DeletePVar(playerid, "cars_enter");
					}
				case 1:
					{
					    if(!GetString(OwnerVehicle[playerid][car_id],player_name[playerid])) {
							DeletePVar(playerid, "cars_enter");
							return ErrorMessage(playerid, "Ви не в своєму автомобілі");
						}
						pc_cmd_key(playerid,"");
						DeletePVar(playerid, "cars_enter");
						
					}
				case 2:
				    {
				        new string[2];
                        format(string,sizeof(string),"%d", car_id);
						pc_cmd_findcar(playerid,string);
						DeletePVar(playerid, "cars_enter");
					}

				case 3:
				    {
				        new string[2];
                        format(string,sizeof(string),"%d", car_id);
						pc_cmd_alarm(playerid,string);
                        DeletePVar(playerid, "cars_enter");
					}
				case 4:
				    {
				        new string[300];
				    	format(string, 80, "%s дивиться тех. паспорт.", player_name[playerid]);
						ProxDetector(25.0, playerid, string, COLOR_PURPLE);
						
						new numbere[124],twinturbo[30];
						if(!GetString(NumberVehicle[playerid][car_id],"TRANSIT")) format(numbere,sizeof(numbere),"{E53737}[%s] ->> Є дозволи на: [%s]{FFFFFF}",NumberVehicle[playerid][car_id],NumberVehicle[playerid][car_id]);
						else format(numbere,sizeof(numbere),"{A63737}%s",NumberVehicle[playerid][car_id]);
						
					    if(VehicleInfo[house_car[playerid][car_id]][vEngineBoost] > 0) twinturbo = "{FFD848}[TT]{FFFFFF}";
						format(string,sizeof(string),"{FFFFFF}Транспорт:{73b461} %s%s{FFFFFF}\nВласник: {73B461}%s{FFFFFF}\nПробіг: {73B461}%.0f км.{FFFFFF}",gTransport[gPlayerCars[playerid][carModel][car_id]-400][trName],twinturbo,OwnerVehicle[playerid][car_id],gPlayerCars[playerid][carDrived][car_id]);
						format(string,sizeof(string),"%s\n\n{FFFFFF}Номер автомобіля: %s{FFFFFF}",string,numbere);
						
						D(playerid,0000,DIALOG_STYLE_MSGBOX,"Інформація",string,"Прийняти","");
                        DeletePVar(playerid, "cars_enter");
					}
				case 5: 
					{
						if(!VehicleInfo[GetPlayerVehicleID(playerid)][vEngineBoost] && !VehicleInfo[GetPlayerVehicleID(playerid)][vBrakeBoost]) return ErrorMessage(playerid, "Помилка! У вас немає Perfomance.");
						pc_cmd_mode(playerid);
						DeletePVar(playerid, "cars_enter");
					}
				case 6:
					{
					    if(GetPlayerMoneyEx(playerid) < 500) return ErrorMessage(playerid,"У Вас недостатньо коштів");
						GiveMoney(playerid,-500,"Доставка ТС до дому");
						loading_cars(playerid, car_id);
						ErrorMessage(playerid, "Машина була зареспавнена");
						DeletePVar(playerid, "cars_enter");
					}
				}
			}
			return 1;
		}
	    case D_GREENZONE: {
		    if(!response) return true;
			switch(listitem) {
			    case 0: D(playerid, D_GREENZONE_ADD, DSI, ""YELLOW"Створити зеленую зону", "Введіть назву зони та дистанцію через знак ','", "Дальше", "Закрити");
			    default: {
			 		SetPVarInt(playerid,"ZONEID",listitem);
				  	D(playerid,D_GREENZONE_EDIT,DSL,""YELLOW"Редагування зони","{59DE00}1."W" Змінити назву\n{59DE00}2."W" Змінити положення\n{59DE00}3."W" Змінити дистанцію", "Дальше", "Закрити");
				}
			}
		}
  		case D_GREENZONE_ADD: {
		    if(!response) return true;
		    new price,name[32];
  			if(sscanf(inputtext,"p<,>s[32]i",name,price)) return D(playerid, D_GREENZONE_ADD, DSI, ""YELLOW"Створити зелену зону", "Ведіть назву зони та дистанцію через знак ','", "Дальше", "Закрити");
		    TOTALZONE++;
		    GetPlayerPos(playerid, GREENZONE[TOTALZONE][grX],GREENZONE[TOTALZONE][grY],GREENZONE[TOTALZONE][grZ]);
		    GREENZONE[TOTALZONE][grVirt] = GetPlayerVirtualWorld(playerid);
		    new query[512];
		    mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_GREENZONE"` (`grx`,`gry`,`grz`,`grd`,`grname`,`grvirt`) VALUES\
			 ('%f','%f','%f','%i','%s','%i')",GREENZONE[TOTALZONE][grX],GREENZONE[TOTALZONE][grY],GREENZONE[TOTALZONE][grZ],price,name,GREENZONE[TOTALZONE][grVirt]);
    		mysql_tquery(connects, query, "", "");
 			strmid(GREENZONE[TOTALZONE][grName],name, 0, strlen(name), 32);
 			GREENZONE[TOTALZONE][grid] = TOTALZONE;
 			GREENZONE[TOTALZONE][grD] = float(price);

 			static const f_str[] = "Зелена зона під номером "ORANGE"%i{f6f6d9} створена";
			new string[sizeof(f_str) +1 + (-2 + 3)];

 			format(string,sizeof(string),f_str,TOTALZONE);
			SendOk(playerid,string);
			return 1;
		}
		case D_GREENZONE_EDIT: {
		    if(!response) return true;
		    switch(listitem) {
		        case 0: D(playerid, D_GREENZONE_EDIT_NAME, DSI, ""YELLOW"Змінити назву", "Ведіть назву зони:", "Дальше", "Закрити");
		        case 1: {
		            GetPlayerPos(playerid, GREENZONE[GetPVarInt(playerid,"ZONEID")][grX],GREENZONE[GetPVarInt(playerid,"ZONEID")][grY],GREENZONE[GetPVarInt(playerid,"ZONEID")][grZ]);
		    		GREENZONE[GetPVarInt(playerid,"ZONEID")][grVirt] = GetPlayerVirtualWorld(playerid);
		    		new query[128];
		    		mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grx` = '%f', `gry` = '%f', `grz` = '%f', `grvirt` = '%i'\
	 				WHERE `id` = '%i'",GREENZONE[GetPVarInt(playerid,"ZONEID")][grX],GREENZONE[GetPVarInt(playerid,"ZONEID")][grY],GREENZONE[GetPVarInt(playerid,"ZONEID")][grZ],
	 				GREENZONE[GetPVarInt(playerid,"ZONEID")][grVirt],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
     				mysql_tquery(connects, query, "", "");
					SendOk(playerid,"Позиция изменена");
				}
				case 2: D(playerid, D_GREENZONE_EDIT_DIST, DSI, ""YELLOW"Змінити дистанцію", "Введіть дистанцію для зони:", "Дальше", "Закрити");
			}
			return true;
		}
		case D_GREENZONE_EDIT_NAME: {
		    if(!response) return true;
		    strmid(GREENZONE[GetPVarInt(playerid,"ZONEID")][grName],inputtext, 0, strlen(inputtext), 32);
		    new query[128];
		    mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grname` = '%s' WHERE `id` = '%i'",
			GREENZONE[GetPVarInt(playerid,"ZONEID")][grName],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
   			mysql_tquery(connects, query, "", "");
			SendOk(playerid,"Назву змінено");
		}
		case D_GREENZONE_EDIT_DIST: {
		    if(!response) return true;
		    GREENZONE[GetPVarInt(playerid,"ZONEID")][grD] = float(strval(inputtext));
		    new query[128];
		    mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_GREENZONE"` SET `grd` = '%f' WHERE `id` = '%i'",
			GREENZONE[GetPVarInt(playerid,"ZONEID")][grD],GREENZONE[GetPVarInt(playerid,"ZONEID")][grid]);
   			mysql_tquery(connects, query, "", "");
			SendOk(playerid,"Дистанцію змінено");
		}
		case D_THEFT: { //угон
			if(!response) return true;
			theftveh[playerid][0] = INVALID_VEHICLE_ID;
			theftveh[playerid][2] = 0;
			if(PlayerInfo[playerid][ptheftSkill] < 25) {
				if(!PlayerInfo[playerid][pJemmy]) return ErrorMessage(playerid,"У вас немає відмичок");
			}
			FindNearestHouseCar(playerid);
		}
		case D_THEFT_LIST: { //угон
			if(!response) return true;
			switch(listitem){
				case 0: {
					if(thefttime[playerid] > 0) return ErrorMessage(playerid, "Ви уже почали завдання, для скасування ведіть команду /theftcancel");
					D(playerid,D_THEFT,DSM, ""YELLOW"Угон транспорта",""W"Здоров, я Klaus Gurren, наш общий знайомий сказав,\nщо ти не проти заробити на нелегальній роботці.\nСуть мого завдання в тому, что я передаю на GPS координати тачки, яка мені потрібна.\nПеред тим, як берешься за роботу, потрібно купити в магазині відмички.\nНічого складного немає, крадеш тачку і получаєш - легкі гроші.\nБудеш братись за діло?","Так","Ні");
				}
				case 1: {
					if(thefttime[playerid] == 0) return ErrorMessage(playerid, "Потрібно спочатку взяти завдання!");
					new car;
					theftveh[playerid][1] = 120;
					PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
					switch(PlayerInfo[playerid][ptheftSkill]){
						case 1: car = 462; 
						case 2: car = 481; 
						case 3..25: car = 461; 
					}

					switch (random(5)){
						case 0: theftveh[playerid][0] = A_CreateVehicle(car, 2516.0000,-1456.4834,23.5250,181.6838, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
						case 1: theftveh[playerid][0] = A_CreateVehicle(car, 2514.4329,-1456.4664,23.5371,179.9724, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
						case 2: theftveh[playerid][0] = A_CreateVehicle(car, 2512.7175,-1456.5023,23.5253,180.0509, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
						case 3: theftveh[playerid][0] = A_CreateVehicle(car, 2511.2451,-1456.7246,23.5299,182.7245, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
						case 4: theftveh[playerid][0] = A_CreateVehicle(car, 2509.6570,-1456.8005,23.5466,181.3288, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					}
					if(car == 461) VehicleInfo[theftveh[playerid][0]][vFuel] = 50.0;

				}
			}
		}
		case D_BAND_STOCK: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""YELLOW"Введіть суму платежу","\n\n"W"Поповнення банківського рахунку банди:\n\n","Поповнити","Закрити");
				case 1: {
					if(!PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна ця функція");
					D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""YELLOW"Введіть сумму","\n\n"W"Зняття коштів із рахунку банди:\n\n","Зняти","Закрити");
				}
				case 2: D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Покласти боєприпаси на склад:\n\n","Покласти","Закрити");
				case 3: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив доступ до складу");
					if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
						ErrorMessage(playerid,str);
						return 1;
					}
					D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Взяти боєприпаси зі складу:\n\n","Взяти","Закрити");
				}
				case 4: D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Покласти наркотики в склад:\n\n","Покласти","Закрити");
				case 5: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив доступ до складу");
					if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
						ErrorMessage(playerid,str);
						return 1;
					}
					D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Взяти наркотики зі складу:\n\n","Взяти","Закрити");
				}
				case 6: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив доступ до складу");
					if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
						new str[128];
						format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
						ErrorMessage(playerid,str);
						return 1;
					}
					D(playerid, D_BAND_GUN, DSL, ""YELLOW"Склад зброї",""YELLOW"1."W" SD Pistol\n"YELLOW"2."W" Desert Eagle\n"YELLOW"3."W" MP5\n"YELLOW"4."W" Shotgun\n"YELLOW"5."W" M4\n"YELLOW"6."W" AK-47\n"YELLOW"7."W" Rifle", "Вибрати", "Назад");
				}
				case 7: {
					if(!PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна ця функція");
					if(FI[GetTeamID(playerid)][fDrugsBuy]) return ErrorMessage(playerid,"Ви уже зробили заказ. Чекайте, коли мафії привезут наркотики");
					new string[156];
					format(string,sizeof(string),""W"\n\n ведіть кількість наркотиків, які бажаєте заказати у мафії:\nДоступно наркотиків на складі: "YELLOW"%d\n\n",FI[GetTeamID(playerid)][fDrugs]);
					D(playerid,D_BAND_DRUGS,DSI,""YELLOW"Заказ наркотиків",string,"Дальше","Назад");
				}
			}
		}
		case D_BAND_DRUGS: {
			if(!response) return 1;
			new drugs = strval(inputtext);
			if(drugs < 500 || drugs > 10000) {
				new string[156];
				format(string,sizeof(string),""W"\n\nВедіть кількість наркотиків, яку бажаєте заказати у мафії:\nДоступно наркотиків на складі: "YELLOW"%d\n"NO"*{f6f6d9} Від 500 і до 10000\n\n",FI[GetTeamID(playerid)][fDrugs]);
				return D(playerid,D_BAND_DRUGS,DSI,""YELLOW"Заказ наркотиків",string,"Дальше","Назад");
			}
			if(FI[GetTeamID(playerid)][fDrugs]+drugs > 10000) {
				new string[156];
				format(string,sizeof(string),""W"\n\nВедіть кількість наркотиків, яку бажаєте заказати у мафії:\nДоступно наркотиків на складі: "YELLOW"%d\n"NO"*{f6f6d9} На Ваш склад не поміститься стільки наркотиків\n\n",FI[GetTeamID(playerid)][fDrugs]);
				return D(playerid,D_BAND_DRUGS,DSI,""YELLOW"Заказ наркотиків",string,"Дальше","Назад");
			}
			SetPVarInt(playerid,"buy_gdrugs",drugs);
			D(playerid,D_BAND_DRUGS_2,DSI,""YELLOW"Заказ наркотиків",""W"\n\nВведіть ціну за "YELLOW"1г"W" наркотиків:\n"NO"*{f6f6d9} От $30 до $50\n\n","Дальше","Назад");
		}
		case D_BAND_DRUGS_2: {
			if(!response) return DeletePVar(playerid,"buy_gdrugs");
			new price = strval(inputtext);
			if(price < 15 || price > 30) {
				new string[156];
				format(string,sizeof(string),""W"\n\nВедіть ціну за "YELLOW"1г"W" наркотиків:\nЗаказ на "YELLOW"%dг\n\n"NO"*{f6f6d9} От $15 до $30\n\n",GetPVarInt(playerid,"buy_gdrugs"));
				return D(playerid,D_BAND_DRUGS,DSI,""YELLOW"Заказ наркотиків",string,"Далі","Назад");
			}
			if(FI[GetTeamID(playerid)][fBank]-(price*GetPVarInt(playerid,"buy_gdrugs")) < 0) {
				new string[156];
				format(string,sizeof(string),""W"\n\nВедіть ціну за "YELLOW"1г"W" наркотиків:\nЗаказ на "YELLOW"%dг\n\n"NO"*{f6f6d9} Недостатньо коштів в общаку банди\n\n",GetPVarInt(playerid,"buy_gdrugs"));
				return D(playerid,D_BAND_DRUGS,DSI,""YELLOW"Заказ наркотиків",string,"Дальше","Назад");
			}
			FI[GetTeamID(playerid)][fBank]-=(price*GetPVarInt(playerid,"buy_gdrugs"));
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			FI[GetTeamID(playerid)][fDrugsBuy] = GetPVarInt(playerid,"buy_gdrugs");
			UpdateFraction(GetTeamID(playerid),"DrugsBuy",FI[GetTeamID(playerid)][fDrugsBuy]);
			FI[GetTeamID(playerid)][fDrugsPrice] = price;
			UpdateFraction(GetTeamID(playerid),"DrugsPrice",FI[GetTeamID(playerid)][fDrugsPrice]);
			DeletePVar(playerid,"buy_gdrugs");
			SendOk(playerid,"Наркотики успішно заказані. Чекайте, поки одна із мафій їх доставить");
		}
		case D_BAND_GUN: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_BAND_GUN_1, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"SD Pistol"W", яке бажаєте взяти зі складу\n\n", "Взяти", "Скасувати");
				case 1: D(playerid, D_BAND_GUN_2, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Desert Eagle"W", яке бажаєте взяти зі складу\n\n", "Взяти", "Скасувати");
				case 2: D(playerid, D_BAND_GUN_3, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"MP5"W", яке бажаєте взяти зі складу\n\n", "Взяти", "Скасувати");
				case 3: D(playerid, D_BAND_GUN_4, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Shotgun"W", яке бажаєте взяти зі складу\n\n", "Взяти", "Скасувати");
				case 4: D(playerid, D_BAND_GUN_5, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"M4"W", яке бажаєте взяти зі складу\n\n", "Взяти", "Скасувати");
				case 5: D(playerid, D_BAND_GUN_6, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"AK-47"W", яке бажаєте взяти зі складу\n\n", "Взяти", "Скасувати");
				case 6: D(playerid, D_BAND_GUN_7, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Rifle"W", яке бажаєте взяти зі складу\n\n", "Взяти", "Скасувати");
			}
		}
		case D_BAND_GUN_1: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив склад");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_1, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"SD Pistol"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} від 10 и до 200\n\n", "Взяти", "Скасувати");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 23) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[0][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_1, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"SD Pistol"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_1, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"SD Pistol"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");

			MeAction(playerid,"взяв(а) зброю зі склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[0][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[0][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взяв(а) зброю зі складу [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_2: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив склад");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_2, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Desert Eagle"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} Від 10 и до 200\n\n", "Взяти", "Скасувати");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 24) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[1][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_2, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патрон "ORANGE"Desert Eagle"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостаточно боєприпасів\n\n", "Взяти", "Скасувати");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_2, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патрон "ORANGE"Desert Eagle"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");

			MeAction(playerid,"взяв(ла) зброю зі склада");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[1][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[1][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взяв(а) зброю зі склада [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_3: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив склад");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_3, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"MP5"W", яку бажаєте взяти зі складу\n\n"NO"*{f6f6d9} Від 10 и до 200\n\n", "Взяти", "Скасувати");
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 29) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[2][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_3, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"MP5"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостаточно боєприпасів\n\n", "Взяти", "Відміна");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_3, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"MP5"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");

			MeAction(playerid,"взяв(ла) зброю зі складу");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[2][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[2][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взял(ла) зброю зі складу [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_4: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив склад");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_4, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Shotgun"W", якк бажаєте взяти зі складу\n\n"NO"*{f6f6d9} Від 10 и до 200\n\n", "Взяти", "Скасувати");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 25) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[3][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_4, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Shotgun"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_4, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Shotgun"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");

			MeAction(playerid,"взяв(ла) зброю зі складу");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[3][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[3][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взяв(ла) зброю зі складу [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_5: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив склад");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_5, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"M4"W", яке бажаєте взяти зі складу\n\n"NO"*{f6f6d9} Від 10 и до 200\n\n", "Взяти", "Скасувати");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 31) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[4][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_5, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"M4"W", які бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_5, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"M4"W", які бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");

			MeAction(playerid,"взяв(ла) зброю зі складу");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[4][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[4][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взяв(ла) зброю зі складу [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_6: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив доступ до складу");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_6, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"AK-47"W", які бажаєте взяти зі складу\n\n"NO"*{f6f6d9} Від 10 и до 200\n\n", "Взяти", "Скасувати");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 30) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[5][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_6, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"AK-47"W", які бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_6, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"AK-47"W", які бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");

			MeAction(playerid,"взяв(ла) зброю зі складу");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[5][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[5][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взяв(ла) зброю зі складу [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_GUN_7: {
			if(!response) return 1;
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив склад");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			new gun = strval(inputtext);
			if(gun < 10 || gun > 200) return D(playerid, D_BAND_GUN_7, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Rifle"W", які бажаєте взяти зі складу\n\n"NO"*{f6f6d9} Від 10 и до 200\n\n", "Взяти", "Скасувати");
			DeletePVar(playerid,"noneedgun");
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == 33) {
					SetPVarInt(playerid,"noneedgun",1); 
					break;
				}
			}
			if(FI[GetTeamID(playerid)][fMats]<(gun+MakeGunData[6][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_7, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Rifle"W", які бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");
			if(FI[GetTeamID(playerid)][fMats]<gun && GetPVarInt(playerid,"noneedgun")) return D(playerid, D_BAND_GUN_7, DSI, ""YELLOW"Склад зброї","\n\n"W"Введіть кількість патронів "ORANGE"Rifle"W", які бажаєте взяти зі складу\n\n"NO"*{f6f6d9} На складі недостатньо боєприпасів\n\n", "Взяти", "Скасувати");

			MeAction(playerid,"взяв(ла) зброя зі складу");
			if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[6][mgunamount];
			DeletePVar(playerid,"noneedgun");
		
			FI[GetTeamID(playerid)][fMats] -= gun;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

			AC_GivePlayerWeapon(playerid,MakeGunData[6][mgunid],gun);
			static const f_str[] = "[F] %s[%d] взяв(ла) зброю зі складу [%d пт]";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,gun);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
		}
		case D_BAND_STOCK_PUT_MONEY: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""YELLOW"Введіть суму платежу","\n\n"W"Поповнення банківського рахунку банди:\n\n","Поповнити","Закрити");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 500000) return D(playerid,D_BAND_STOCK_PUT_MONEY,DSI, ""YELLOW"Введіть суму платежу","\n\n"W"Поповнення банківського рахунку банди:\n\n"NO"*{f6f6d9} От $1 и до $500.000\n\n","Поповнити","Закрити");
			if(PlayerInfo[playerid][pCash] < dengi) return ErrorMessage(playerid,"У Вас немає стільки коштів");
			if(FI[GetTeamID(playerid)][fBank]+dengi > 3000000) return ErrorMessage(playerid,"Не можна зберігати більше $3.000.000");
			FI[GetTeamID(playerid)][fBank] += dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			GiveMoney(playerid, -dengi,"поклав кошти на рахунок банди");
			
			static const f_str[] = "[F] %s[%d] поклав(ла) в банк банди: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
		
			format(string,sizeof(string),f_str,player_name[playerid],playerid,strval(inputtext));
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"поклав(ла) гроші на склад");
		}
		case D_BAND_STOCK_INPUT_MONEY: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна ця функція");
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""YELLOW"Введіть суму","\n\n"W"Знімання коштів з рахунку банди:\n\n","Зняти","Закрити");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 200000) return D(playerid,D_BAND_STOCK_INPUT_MONEY,DSI, ""YELLOW"Введіть суму","\n\n"W"Знімання коштів з рахунку банди:\n\n"NO"*{f6f6d9} Від $1 и до $200.000\n\n","Зняти","Закрити");
			if(FI[GetTeamID(playerid)][fBankCash] + dengi > 200000) {
				new string[128];
				format(string,sizeof(string),"Щоденний ліміт на перевод/зняття коштів з общака - $200.000. Доступний ліміт: $%d",200000-FI[GetTeamID(playerid)][fBankCash]);
				ErrorMessage(playerid,string);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fBank] < dengi) return ErrorMessage(playerid,"В банку банди немає такої суми"); 
			FI[GetTeamID(playerid)][fBank] -= dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			FI[GetTeamID(playerid)][fBankCash] += dengi;
			UpdateFraction(GetTeamID(playerid),"BankCash",FI[GetTeamID(playerid)][fBankCash]);
			GiveMoney(playerid, dengi,"зняв кошти з рахунку банди");
			
			static const f_str[] = "[F] %s[%d] зняв(ла) з банка банди: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 6)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,dengi);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взяв(ла) гроші зі складу");
			return 1;
		}
		case D_BAND_STOCK_PUT_MATS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Покласти боєприпаси на склад:\n\n","Покласти","Закрити");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_BAND_STOCK_PUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Покласти боєприпаси на склад:\n\n"NO"*{f6f6d9} Від 1 і до 500\n\n","Покласти","Закрити");
			if(PlayerInfo[playerid][pMats] < mats) return ErrorMessage(playerid,"У Вас немає стільки боєприпасів");
			if(FI[GetTeamID(playerid)][fMats] +mats > 300000) return ErrorMessage(playerid,"Склад заповнений"); 
			FI[GetTeamID(playerid)][fMats] += mats;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			PlayerInfo[playerid][pMats] -= mats;
			UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] поклав(ла) %d боєприпаси на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"положил(а) боєприпаси на склад");
			return  1;
		}
		case D_BAND_STOCK_INPUT_MATS: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно з 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Взяти боєприпаси зі складу:\n\n","Взяти","Закрити");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_BAND_STOCK_INPUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Взяти боєприпаси зі складу:\n\n"NO"*{f6f6d9} Від 1 і до 500\n\n","Взяти","Закрити");
			if(PlayerInfo[playerid][pMats]+mats > vip_status[PlayerInfo[playerid][pVips]][vip_mats]) {
				new string[128];
				format(string,sizeof(string),"В кишені не влізе більше %d боєприпасів",vip_status[PlayerInfo[playerid][pVips]][vip_mats]);
				ErrorMessage(playerid, string);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fSklad] == 0) return ErrorMessage(playerid,"Лідер вашої банди закрив склад");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fMats] < mats) return ErrorMessage(playerid, "На складі немає боєприпасів");
			FI[GetTeamID(playerid)][fMats] -= mats;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			PlayerInfo[playerid][pMats] += mats;
			UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] взяв(ла) %d боеприпас(и) зі складу";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взяв(ла) боєприпаси зі складу");
			return true;
		}
		case D_BAND_STOCK_PUT_DRUGS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Покласти наркотики на склад:\n\n","Покласти","Закрити");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 500) return D(playerid,D_BAND_STOCK_PUT_DRUGS,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Покласти наркотики на склад:\n\n"NO"*{f6f6d9} Від 1 і до 500\n\n","Покласти","Закрити");
			if(PlayerInfo[playerid][pDrugs] < drugs) return ErrorMessage(playerid,"У Вас немає стільки наркотиків");
			if(FI[GetTeamID(playerid)][fDrugs]+drugs > 10000) return ErrorMessage(playerid,"Склад заповнений"); 
			FI[GetTeamID(playerid)][fDrugs] += drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[GetTeamID(playerid)][fDrugs]);
			PlayerInfo[playerid][pDrugs] -= drugs;
			UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
			
			static const f_str[] = "[F] %s[%d] поклав(ла) %d наркотик(и) на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"поклав(ла) наркотики на склад");
			return  1;
		}
		case D_BAND_STOCK_INPUT_DRUGS: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно з 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Взяти наркотики зі склада:\n\n","Взяти","Закрити");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 50) return D(playerid,D_BAND_STOCK_INPUT_DRUGS,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Взяти наркотики зі склада :\n\n"NO"*{f6f6d9} Від 1 і до 50\n\n","Взяти","Закрити");
			if(PlayerInfo[playerid][pDrugs]+drugs > vip_status[PlayerInfo[playerid][pVips]][vip_drugs]) {
				new string[128];
				format(string,sizeof(string),"В кишеню не поміститься більше %d наркотиків",vip_status[PlayerInfo[playerid][pVips]][vip_drugs]);
				ErrorMessage(playerid, string);
				return 1;
			}
			if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив склад");
			if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
				new str[128];
				format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
				ErrorMessage(playerid,str);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fDrugs] < drugs) return ErrorMessage(playerid, "На складі немає наркотиків");
			FI[GetTeamID(playerid)][fDrugs] -= drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[GetTeamID(playerid)][fDrugs]);
			PlayerInfo[playerid][pDrugs] += drugs;
			UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
			
			static const f_str[] = "[F] %s[%d] взяв(ла) %d наркотик(и) зі склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взяв(ла) наркотики зі склада");
			return true;
		}
		case D_MAFIA_STOCK: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""YELLOW"Введіть суму платежу","\n\n"W"Поповнення банківського рахунку мафії:\n\n","Поповнити","Закрити");
				case 1: {
					if(!PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна ця функція");
					D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""YELLOW"Введіть суму","\n\n"W"зняття коштів зі рахунку мафії:\n\n","Зняти","Закрити");
				}
				case 2: D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"покласти боєприпаси на склад:\n\n","Покласти","Закрити");
				case 3: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої мафії закрив склад");
					D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Взяти боєприпаси зі складу:\n\n","Взяти","Закрити");
				}
				case 4: D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Покласти наркотики на склад:\n\n","Покласти","Закрити");
				case 5: {
					if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої мафії закрив склад");
					D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Взяти наркотики зі складу:\n\n","Взяти","Закрити");
				}
			}
		}
		case D_MAFIA_STOCK_PUT_MONEY: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""YELLOW"Введіть суму платежу","\n\n"W"Поповнення банківського рахунку мафії:\n\n","Поповнити","Закрити");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 100000) return D(playerid,D_MAFIA_STOCK_PUT_MONEY,DSI, ""YELLOW"Введіть суму платежу","\n\n"W"Поповнення банківського рахунку мафії:\n\n"NO"*{f6f6d9} Від $1 і до $100000\n\n","Поповнити","Закрити");
			if(PlayerInfo[playerid][pCash] < dengi) return ErrorMessage(playerid,"У Вас немає стільки грошей");
			if(FI[GetTeamID(playerid)][fBank]+dengi > 4000000) return ErrorMessage(playerid,"Не можна зберігати більше $4.000.000");
			FI[GetTeamID(playerid)][fBank] += dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			GiveMoney(playerid, -dengi,"поклав на рахунок мафії");
			
			static const f_str[] = "[F] %s[%d] поклав(ла) в банк мафії: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
		
			format(string,sizeof(string),f_str,player_name[playerid],playerid,strval(inputtext));
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"поклав(ла) гроші на склад");
		}
		case D_MAFIA_STOCK_INPUT_MONEY: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна ця функція");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""YELLOW"Введіть суму","\n\n"W"Зняття грошей з рахунку мафії:\n\n","Зняти","Закрити");
			new dengi = strval(inputtext);
			if(dengi < 1 || dengi > 300000) return D(playerid,D_MAFIA_STOCK_INPUT_MONEY,DSI, ""YELLOW"Введіть суму","\n\n"W"Зняття грошей з рахунку мафії:\n\n"NO"*{f6f6d9} Від $1 і до $300.000\n\n","Зняти","Закрити");
			if(FI[GetTeamID(playerid)][fBank] < dengi) return ErrorMessage(playerid,"В банку мафії немає такої суми"); 
			if(FI[GetTeamID(playerid)][fBankCash] + dengi > 300000) {
				new string[128];
				format(string,sizeof(string),"Щоденний ліміт на перевод/зняття коштів зі склада - $300.000. Доступний ліміт: $%d",300000-FI[GetTeamID(playerid)][fBankCash]);
				ErrorMessage(playerid,string);
				return 1;
			}
			FI[GetTeamID(playerid)][fBank] -= dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			FI[GetTeamID(playerid)][fBankCash] += dengi;
			UpdateFraction(GetTeamID(playerid),"BankCash",FI[GetTeamID(playerid)][fBankCash]);
			GiveMoney(playerid, dengi,"зняв з рахунку мафії");
			
			static const f_str[] = "[F] %s[%d] зняв(ла) з банку фракції: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 6)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,dengi);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"зняв(а) гроші зі складу");
			return 1;
		}
		case D_MAFIA_STOCK_PUT_NARKO: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Покласти наркотики на склад:\n\n","Покласти","Закрити");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 500) return D(playerid,D_MAFIA_STOCK_PUT_NARKO,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Покласти наркотики на склад:\n\n"NO"*{f6f6d9} Від 1 і до 500\n\n","Покласти","Закрити");
			if(PlayerInfo[playerid][pDrugs] < drugs) return ErrorMessage(playerid,"У Вас немає стільки наркотиків");
			if(FI[GetTeamID(playerid)][fDrugs]+drugs > 20000) return ErrorMessage(playerid,"Склад заповнений"); 
			FI[GetTeamID(playerid)][fDrugs] += drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[GetTeamID(playerid)][fDrugs]);
			PlayerInfo[playerid][pDrugs] -= drugs;
			UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
			
			static const f_str[] = "[F] %s[%d] поклав(ла) %d наркотик(и) на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"поклав(ла) наркотики на склад");
			return  1;
		}
		case D_MAFIA_STOCK_INPUT_NARKO: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно з 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Взяти наркотики зі складу:\n\n","Взяти","Закрити");
			new drugs = strval(inputtext);
			if(drugs < 1 || drugs > 50) return D(playerid,D_MAFIA_STOCK_INPUT_NARKO,DSI, ""YELLOW"Введіть кількість наркотиків","\n\n"W"Взяти наркотики зі складу:\n\n"NO"*{f6f6d9} Від 1 і до 50\n\n","Взяти","Закрити");
			if(PlayerInfo[playerid][pDrugs]+drugs > vip_status[PlayerInfo[playerid][pVips]][vip_drugs]) {
				new string[128];
				format(string,sizeof(string),"В кишені не вміститься більше %d наркотиків",vip_status[PlayerInfo[playerid][pVips]][vip_drugs]);
				ErrorMessage(playerid, string);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fSklad] == 0) return ErrorMessage(playerid,"Лідер вашої мафії закрив склад");
			if(FI[GetTeamID(playerid)][fDrugs] < drugs) return ErrorMessage(playerid, "На складі немає наркотиків");
			FI[GetTeamID(playerid)][fDrugs] -= drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[GetTeamID(playerid)][fDrugs]);
			PlayerInfo[playerid][pDrugs] += drugs;
			UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
			
			static const f_str[] = "[F] %s[%d] взяв(ла) %d наркотик(и) зі складу";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,drugs);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взяв(ла) наркотики зі склада");
			return true;
		}
		case D_MAFIA_STOCK_PUT_MATS: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Покласти боєприпаси на склад:\n\n","Покласти","Закрити");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_MAFIA_STOCK_PUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Покласти боєприпаси на склад:\n\n"NO"*{f6f6d9} Від 1 і до 500\n\n","Покласти","Закрити");
			if(PlayerInfo[playerid][pMats] < mats) return ErrorMessage(playerid,"У Вас немає стільки боєприпасів");
			if(FI[GetTeamID(playerid)][fMats] +mats > 300000) return ErrorMessage(playerid,"Склад заповнений"); 
			FI[GetTeamID(playerid)][fMats] += mats;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			PlayerInfo[playerid][pMats] -= mats;
			UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] поклав(ла) %d боєприпасів на склад";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 +3)];
			
         	format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"поклав(ла) боєприпаси на склада");
			return  1;
		}
		case D_MAFIA_STOCK_INPUT_MATS: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно з 3 ранга");
			if(!strlen(inputtext)) return D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Взяти боєприпаси зі складу:\n\n","Взяти","Закрити");
			new mats = strval(inputtext);
			if(mats < 1 || mats > 500) return D(playerid,D_MAFIA_STOCK_INPUT_MATS,DSI, ""YELLOW"Введіть кількість боєприпасів","\n\n"W"Взяти боєприпаси зі складу:\n\n"NO"*{f6f6d9} Від 1 і до 500\n\n","Взяти","Закрити");
			if(PlayerInfo[playerid][pMats]+mats > vip_status[PlayerInfo[playerid][pVips]][vip_mats]) {
				new string[128];
				format(string,sizeof(string),"В кишені не поместится більше %d боєприпасів",vip_status[PlayerInfo[playerid][pVips]][vip_mats]);
				ErrorMessage(playerid, string);
				return 1;
			}
			if(FI[GetTeamID(playerid)][fSklad] == 0) return ErrorMessage(playerid,"Лідер вашої мафії закрив склад");
			if(FI[GetTeamID(playerid)][fMats] < mats) return ErrorMessage(playerid, "На складі немає боєприпасів");
			FI[GetTeamID(playerid)][fMats] -= mats;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			PlayerInfo[playerid][pMats] += mats;
			UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
			
			static const f_str[] = "[F] %s[%d] взяв(ла) %d боеприпас(и) зі склада";
			new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 3)];
			
      		format(string,sizeof(string),f_str,player_name[playerid],playerid,mats);
			SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
			MeAction(playerid,"взяв(ла) боєприпаси зі складу");
			return true;
		}
		case D_REPORT: {
			if(!response) return 1;
			if(!strlen(inputtext)) return ErrorMessage(playerid,"Ви нічого не ввели");
			if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
			if(GetPVarInt(playerid,"AntiReport") > gettime()) return ErrorMessage(playerid,"Подати жалобу можно 1 раз в хвилину");
			if(!rep_system) {
				static const f_str[] = "[PM] %s[%i]: %s";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 128)];
				
				format(string, sizeof(string), f_str, player_name[playerid], playerid, (inputtext));
				SendAdminMessage(0x008e8cff,string);

				new string_1[128];
				format(string_1, sizeof(string_1), "Скарга: %s", inputtext);
				SendClientMessage(playerid,COLOR_YELLOW,string_1);

				SendClientMessage(playerid, COLOR_LIGHTRED, "Наберіться терпіння та чекайте відповідь від адміністратора");
			}
			else {
				new bool:report = false,reps = 0;
				for(new i;i<MAX_REPORTS;i++) {
					if(PlayerReport[i] != -1) reps++;
				}
				for(new i;i<MAX_REPORTS;i++) {
					if(PlayerReport[reps] != -1) {
						reps++;
						continue;
					} 
					PlayerReport[reps] = playerid;
					strmid(TextReport[reps], (inputtext),0,strlen(inputtext),150);
					new string[143];
					if(PlayerInfo[playerid][pVips] == VIP_FOREVER) {
						format(string, sizeof(string), "[PM] %s[%i]: %s."W" [%d] (/reps)", player_name[playerid], playerid, inputtext, reps+1);
						SendAdminMessage(COLOR_RRED,string);
					}
					else {
						format(string, sizeof(string), "[PM] %s[%i]: %s."W" [%d] (/reps)", player_name[playerid], playerid, inputtext, reps+1);
						SendAdminMessage(0x008e8cff,string);
					}
					format(string, sizeof string, "Ваше звернення: {f6f6d9}%s"YELLOW" — успішно отправлено.", inputtext);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "Найближчим чамом вам відповість адміністратор. Ви в черзі репортів: "YELLOW"%d", reps+1);
					SendOk(playerid, string);
					//mysql_tquery(connects, "SELECT * FROM `reports`", "mysql_ReportShow", "i", playerid);
					report = true;
					break;
				}
				if(!report) return ErrorMessage(playerid,"Спробуйте пізніше");
			}
			SetPVarInt(playerid,"AntiReport",gettime()+60);
			return true;
		}
		case D_ASK: {
			if(!response) return 1;
			if(!strlen(inputtext)) return ErrorMessage(playerid,"Ви нічого не ввели");
			if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
			if(GetPVarInt(playerid,"AntiAsk") > gettime()) return ErrorMessage(playerid,"Задавати питання можна 1 раз в 30 секунд");
			new bool:online = false;
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(!PlayerInfo[i][pHelper] || !TI[i][tHelperDuty]) continue;
				online = true;
			}
			if(!online) return ErrorMessage(playerid,"Game Support's немає в мережі. Задавайте питання через /mm >> зв'язок із адміністрацією");
			if(PlayerInfo[playerid][pHelper]) return ErrorMessage(playerid,"Вам заборонено задавати питання");
			new bool:report = false,reps = 0;
			for(new i;i<MAX_ASK;i++) {
				if(PlayerReportAsk[i] != -1) reps++;
			}
			for(new i;i<MAX_ASK;i++) {
				if(PlayerReportAsk[reps] != -1) {
					reps++;
					continue;
				} 
				PlayerReportAsk[reps] = playerid;
				strmid(TextAsk[reps], (inputtext),0,strlen(inputtext),150);
				new string[143];
				format(string, sizeof(string), "[ASK] %s[%i]: %s."W" [%d] (/asks)", player_name[playerid], playerid, inputtext, reps+1);
				SendGSMessage(0x008e8cff,string);
				format(string, sizeof string, "Ваше звернення: {f6f6d9}%s"YELLOW" — успішно відправлено.", inputtext);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "Найближчий часом вам відповість Game Support. Ви в черзі питань: "YELLOW"%d", reps+1);
				SendOk(playerid, string);
				report = true;
				break;
			}
			if(!report) return ErrorMessage(playerid,"Спробуйте пізніше");
			SetPVarInt(playerid,"AntiAsk",gettime()+30);
			return true;
		}
		case D_LOGIN: {
			if(!response) return Kick(playerid);
			if(TI[playerid][tLogin]) return true;
			else if(!strlen(inputtext) || !CheckPassword(inputtext)) {
				if(!CheckPassword(inputtext)) ErrorMessage(playerid,"Змініть розкладку клавіатури");
			   	static const f_str[] = "\
"W"З поверненням на сервер "YELLOW""FullServName"!"W"\n\n\
Аккаунт "YELLOW"%s"W" успішно знайдений.\n\
Для авторизації, будь-ласка, введіть пароль від аккаунта.\n\n\
Відновити пароль можна на сайті: "YELLOW""NameSite"";
				new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME)];

				format(string, sizeof(string), f_str, player_name[playerid]);
				D(playerid,D_LOGIN,DSP, ""YELLOW"Авторизація",string, "Увійти", "Скасувати");
				return true;
			}
			else {
				if(strcmp(player_pass[playerid],MD5_Hash(inputtext),true)) {
           			if(GetPVarInt(playerid, "wrongPass") == 2) return ErrorMessage(playerid,"Неправильний пароль. Використовуйте /q для вихода[PC]"), Kick(playerid);
					SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);

					static const f_str_1[] = "Увага! Ви ввели неправильний пароль. У Вас залишилось "NO"%d спроби";
					new string_1[sizeof(f_str_1) + 3];
					format(string_1,sizeof(string_1), f_str_1,3-GetPVarInt(playerid, "wrongPass"));
					ErrorMessage(playerid,string_1);

	     			static const f_str[] = "\
"W"З поверненням на сервер "YELLOW""FullServName"!"W"\n\n\
Аккаунт "YELLOW"%s"W" успішно знайдено.\n\
Для авторизації, будь-ласка, введіть пароль від аккаунта.\n\n\
Відновити пароль можно на сайті: "YELLOW""NameSite"";
					new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME)];

					format(string, sizeof(string), f_str, player_name[playerid]);
					D(playerid,D_LOGIN,DSP, ""YELLOW"Авторизація",string, "Увійти", "Скасувати");
			    }
			    else {
					if(PlayerInfo[playerid][pGoogleSec] && strcmp(player_ip_check[playerid], player_ip[playerid]) != 0) {
						TI[playerid][tLoginTime] = 90;
						D(playerid, D_GOOGLE_2, DSI, ""YELLOW"Google Authenticator", "\n\n"W"Введіть код Google Authenticator:\n\n","Далі","Скасувати");
						return 1;
					}
					else if(!GetString(PlayerInfo[playerid][pKeyip], "-")) load_captcha(playerid);
              		else load_load(playerid);
				}
			}
		}
		case D_GOOGLE_2: {
			if(!response) return Kick(playerid);
			if(strlen(inputtext) != 6 || isNumeric(inputtext)) return D(playerid, D_GOOGLE_2, DSI, ""YELLOW"Google Authenticator", "\n\n"W"Введіть код Google Authenticator:\n\n"NO"*{f6f6d9} Ключ повинен містити 6 цифр\n\n","Дальше","Скасувати");
			new colvo = strval(inputtext);
			new heh = GoogleAuthenticatorCode(PlayerInfo[playerid][pGoogle], gettime());
			if(heh == colvo) return load_load(playerid);
			else {
				if(GetPVarInt(playerid, "wrongGoogle") == 2) return ErrorMessage(playerid,"Не пральний код. Використовуйте /q для выхода[PC]"), Kick(playerid);
				SetPVarInt(playerid, "wrongGoogle", GetPVarInt(playerid, "wrongGoogle")+1);
				static const f_str_1[] = "\n\n"W"Введіть код Google Authenticator:\n\n"NO"*{f6f6d9} Ви ввели неправильний код, залишилось спроб: %d\n\n";
				new string_1[sizeof(f_str_1) + 3];
				format(string_1,sizeof(string_1), f_str_1,3-GetPVarInt(playerid, "wrongGoogle"));
				D(playerid, D_GOOGLE_2, DSI, ""YELLOW"Google Authenticator",string_1,"Дальше","Скасувати");
				return 1;
			}
		}
		case D_REG: {
			if(!response) return Kick(playerid);
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 20 || !CheckPassword(inputtext)) {
    			static const f_str[] = "\
{f6f6d9}Ласкаво просимо на {1a9fe9}SAMP "YELLOW"UKRAINE{f6f6d9}\n\
"ORANGE"Реєстрації нового персонажа{f6f6d9}\n\n\
Логин: "YELLOW"%s{f6f6d9}\n\
Введіть пароль:\n\n\
"YELLOW"Примітка:\n\t\
"NO"*{f6f6d9} Пароль чутливий до регістру\n\t\
"NO"*{f6f6d9} Пароль повинен містити від 6 до 20 символів\n\t\
"NO"*{f6f6d9} Пароль повинен містити Латинські символи та цифри(aA-zZ,0-9)";
				new string[sizeof(f_str) +1 + MAX_PLAYER_NAME];
				format(string,sizeof(string),f_str,player_name[playerid]);
				D(playerid,D_REG,DSI, ""YELLOW"Реєстрація",string, "Готово", "Відміна");
				return true;
			}
			mysql_escape_string(inputtext,player_pass[playerid]);
			D(playerid,D_REG_MAIL,DSI, ""YELLOW"Реєстрація","\
{f6f6d9}Вкажіть вашу "ORANGE"пошту{f6f6d9}\n\n\
Вкажіть ваш реальний "YELLOW"Email{f6f6d9}. За допомогою нього ви зможете відновити пароль","Далі","Пропуск");
			return true;
		}
		case D_REG_MAIL: {
			if(response) {
				if(strfind(inputtext,"|") != -1) {
					ErrorMessage(playerid,"У Вас в пошті присутні заборонені символи");
					D(playerid,D_REG_MAIL,DSI, ""YELLOW"Реєстрація","\
{f6f6d9}Вкажіть Вашу "ORANGE"пошту{f6f6d9}\n\n\
Вкажіть ваш реальний "YELLOW"Email{f6f6d9}. За допомогою нього ви зможете відновити пароль","Далі","Пропуск");
					return 1;
				}
				if(!IsValidEmail(inputtext)) {
					ErrorMessage(playerid,"E-Mail не правильний. Повторіть введення");
					D(playerid,D_REG_MAIL,DSI, ""YELLOW"Реєстрація","\
{f6f6d9}Вкажіть Вашу "ORANGE"пошту{f6f6d9}\n\n\
Вкажіть ваш реальний "YELLOW"Email{f6f6d9}. За допомогою нього ви зможете відновити пароль","Далі","Пропуск");
					return 1;
				}
				else {
					strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
					D(playerid,D_REG_FRIEND,DSI, ""YELLOW"Реєстрація", "\
{f6f6d9}Введіть "ORANGE"нік{f6f6d9} гравця, який запросив Вас на сервер.\n\n\
При досягненні 4 рівня ви отримаєте "YELLOW"нагороду", "Далі", "Пропуск");
				}
			}
			else strmid(PlayerInfo[playerid][pEmail], "no", 0, strlen("no"), strlen("-")+5);
			D(playerid,D_REG_FRIEND,DSI, ""YELLOW"Реєстрація", "\
{f6f6d9}Введіть "ORANGE"нік{f6f6d9} гравця, який запросив Вас на сервер.\n\n\
При досягненні 4 рівня ви отримаєте "YELLOW"нагороду", "Далі", "Пропуск");
		}
  		case D_REG_FRIEND: {
		    if(response) {
				if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 25) {
					D(playerid,D_REG_FRIEND,DSI, ""YELLOW"Реєстрація", "\
{f6f6d9}Введіть "ORANGE"нік{f6f6d9} гравця, який запросив Вас на сервер.\n\n\
При досягненні 4 рівня ви отримаєте "YELLOW"нагороду", "Далі", "Пропуск");
					return 1;
				}
		        new query[128];
		        mysql_format(connects, query, sizeof(query), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%e'", inputtext);
				mysql_tquery(connects, query, "friend_detectd","is", playerid,inputtext);
			}
			else strmid(PlayerInfo[playerid][pDrug], "-", 0, strlen("-"), strlen("-")+5);
			D(playerid,D_REG_SEX,DSM, ""YELLOW"Реєстрація", "\n{f6f6d9}Виберіть стать "ORANGE"Вашого{f6f6d9} персонажа:\n", "Чоловічий", "Жіночий");
		}
  		case D_REG_SEX: {
			if(response) PlayerInfo[playerid][pSex] = 1;
			else PlayerInfo[playerid][pSex] = 2;
			ChosePlayerSkin(playerid);
		}
		case D_CLIST: {
			if(response == 1) {
				switch(listitem) {
					case 0: SetPlayerColor(playerid, TEAM_HIT_COLOR);
					case 1: SetPlayerColor(playerid,0x089401FF);
					case 2: SetPlayerColor(playerid,0x56FB4EFF);
					case 3: SetPlayerColor(playerid,0x49E789FF);
					case 4: SetPlayerColor(playerid,0x2A9170FF);
					case 5: SetPlayerColor(playerid,0x9ED201FF);
					case 6: SetPlayerColor(playerid,0x279B1EFF);
					case 7: SetPlayerColor(playerid,0x003366FF);
					case 8: SetPlayerColor(playerid,0xFF0606FF);
					case 9: SetPlayerColor(playerid,0xFF6600FF);
					case 10: SetPlayerColor(playerid,0xF45000FF);
					case 11: SetPlayerColor(playerid,0xBE8A01FF);
					case 12: SetPlayerColor(playerid,0xB30000FF);
					case 13: SetPlayerColor(playerid,0x954F4FFF);
					case 14: SetPlayerColor(playerid,0xE7961DFF);
					case 15: SetPlayerColor(playerid,0xE6284EFF);
					case 16: SetPlayerColor(playerid,0xFF9DB6FF);
					case 17: SetPlayerColor(playerid,0x110CE7FF);
					case 18: SetPlayerColor(playerid,0x0CD7E7FF);
					case 19: SetPlayerColor(playerid,0x139BECFF);
					case 20: SetPlayerColor(playerid,0x2C9197FF);
					case 21: SetPlayerColor(playerid,0x114D71FF);
					case 22: SetPlayerColor(playerid,0x8813E7FF);
					case 23: SetPlayerColor(playerid,0xB313E7FF);
					case 24: SetPlayerColor(playerid,0x758C9DFF);
					case 25: SetPlayerColor(playerid,0xFFDE24FF);
					case 26: SetPlayerColor(playerid,0xFFEE8AFF);
					case 27: SetPlayerColor(playerid,0xDDB201FF);
					case 28: SetPlayerColor(playerid,0xDDA701FF);
					case 29: SetPlayerColor(playerid,0xB0B000FF);
					case 30: SetPlayerColor(playerid,0x868484FF);
					case 31: SetPlayerColor(playerid,0xB8B6B6FF);
					case 32: SetPlayerColor(playerid,0x333333FF);
					case 33: SetPlayerColor(playerid,0xFAFAFAFF);
				}
			}
			else return true;
		}
		case D_CHANGE_PASS_SELECT: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return D(playerid,D_CHANGE_PASS_SELECT,DSI, ""YELLOW"Зміна пароля","\n\n"W"Введіть свій старий пароль:\n\n"NO"*{f6f6d9} Від 6 до 20 символів\n\n", "Ввід", "Назад");
			if(!CheckPassword(inputtext)) return D(playerid,D_CHANGE_PASS_SELECT,DSP,"Зміна пароля","\n\n"W"Введіть свій старий пароль:\n\n", "Ввід", "Назад");
			new query[200];
			format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `pID` = '%d' AND `pKey` = MD5('%s') LIMIT 1",PlayerInfo[playerid][pID],inputtext);
			mysql_tquery(connects, query, "OnPlayerSelectPassword", "is",playerid, inputtext);
			return 1;
		}
		case D_CHANGE_PASS: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return D(playerid,D_CHANGE_PASS_SELECT,DSI, ""YELLOW"Зміна пароля", "\n\n"W"Введіть свій старий пароль:\n\n"NO"*{f6f6d9} Від 6 до 20 символів\n\n", "Ввід", "Назад");
			if(!CheckPassword(inputtext)) return D(playerid,D_CHANGE_PASS_SELECT,DSI, ""YELLOW"Зміна пароля","\n\n"W"Введіть свій старый пароль:\n\n", "Ввід", "Назад");
			new query[200],string[100];
			format(query, sizeof(query), "UPDATE `accounts` SET `pKey` = MD5('%s') WHERE `pID` = '%d' LIMIT 1",inputtext,PlayerInfo[playerid][pID]);
			mysql_tquery(connects,query);
			format(string, sizeof(string), "Ваш новий пароль: "W"%s", inputtext);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SendClientMessage(playerid, COLOR_YELLOW, "{f6f6d9}[Порада]"YELLOW" Ми рекомендуємо Вам зробити скріншот. Клавиша "W"F8");
			return 1;
		}
		case D_CONTROL_EDIT: {
			if(!response) return pc_cmd_menu(playerid,"");
			switch(listitem) {
			    case 0: D(playerid,D_CHANGE_PASS_SELECT,DSP,"Зміна пароля","\n\n"W"Введіть свій старий пароль:\n\n", "Ввід", "Назад");
				case 1: {
					if(GetString(PlayerInfo[playerid][pKeyip],"-")) {
						D(playerid, dCode, DSI, ""YELLOW"Захисний ключ", "\n\n"W"Придумайте новий захисних ключ:\n{f6f6d9}Захисний ключ буде вводити після кожного заходу в гру\n\n","Далі","Відміна");
					}
					else D(playerid, dChangeCode, DSL, ""YELLOW"Захисний ключ",""YELLOW"1."W" Змінити ключ\n"YELLOW"2."W" Відключити ключ\n"YELLOW"3."W" Історія входів","Вибрати", "Назад");
				}
				case 2: {
					if(!GetString(PlayerInfo[playerid][pEmail],"no")) {
						new query[128],control;
						format(query, sizeof(query), "SELECT * FROM `email_success` WHERE BINARY `Account` = '%s' LIMIT 1", player_name[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name_int(0, "Type", control);
							if(control == 1) D(playerid, DIALOG_NONE, DSM, ""YELLOW"E-Mail", "\n\n"W"E-Mail адреса на Вашому аккаунті уже підтверджена. Змінити його не можливо\n\n","Закрити","");
							else D(playerid,D_MAIL_CONTROL,DSI, ""YELLOW"E-Mail",""W"Вкажіть Вашу "GREEN"пошту"W"\n\nВкажіть ваш реальний "YELLOW"Email"W". З його допомогою ви зможете відновити пароль","Далі","Закрити");
						}
						else D(playerid, DIALOG_NONE, DSM, ""YELLOW"E-Mail", "\n\n"W"Підтвердити Ваш E-Mail адресу можна на сайті "YELLOW""NameSite"\n\n","Закрити","");
						cache_delete(result);
					}
					else D(playerid,D_MAIL_CONTROL,DSI, ""YELLOW"E-Mail",""W"Вкажіть Вашу "GREEN"пошту"W"\n\nВкажіть ваш реальний "YELLOW"Email"W". З його допомогою ви зможете відновити пароль","Далі","Закрити");
				}
				case 3: {
					if(GetString(PlayerInfo[playerid][pGoogle],"NULL")) {
						D(playerid, DIALOG_NONE, DSM, ""YELLOW"Google Authenticator", "\n\n"W"Підключіть захист в особистому кабінеті на нашому сайті - "ORANGE""NameSite"\n\n","Закрити","");
						return 1;
					}
					D(playerid, D_GOOGLE, DSL, ""YELLOW"Google Authenticator", ""YELLOW"1."W" Запрошує пароль при кожній зміні IP адреси\n"YELLOW"2."W" Відключити Google Authenticator","Вибрати","Скасувати");
				}
			}
		}
		case D_GOOGLE: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pGoogleSec]) return ErrorMessage(playerid,"У Вас уже підключена ця опція");
					if(!GetString(PlayerInfo[playerid][pKeyip], "-")) return ErrorMessage(playerid,"Для захисту Google Authenticator відключіть захисний ключ");
					PlayerInfo[playerid][pGoogleSec] = 1;
					UpdatePlayerData(playerid,"pGoogle",1);
					SendOk(playerid,"Одноразовий пароль буде запрошуватись при кожній зміні IP адреса");
				}
				case 1: {
					if(PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Лідерам заборонено відключати захист");
					if(PlayerInfo[playerid][pAdmin]) return ErrorMessage(playerid,"Адміністраторам заборонено відключати захист");
					new query[156];
					format(query,sizeof(query),"UPDATE accounts SET pGoogle = '0' WHERE BINARY `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pID]);
					mysql_tquery(connects,query);
					SendOk(playerid,"Захист Google Authenticator була відключена");
				}
			}
		}
		case D_MAIL_CONTROL: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(strfind(inputtext,"|") != -1) {
				ErrorMessage(playerid,"У Вас в пошті присутні заборонені символи");
				D(playerid,D_MAIL_CONTROL,DSI, ""YELLOW"E-Mail",""W"Вкажіть Вашу "GREEN"пошту"W"\n\nУкажіть ваш реальний "YELLOW"Email"W". З його допомогою ви зможете відновити пароль","Далі","Закрити");
				return 1;
			}
			if(!IsValidEmail(inputtext)) {
				ErrorMessage(playerid,"E-Mail не правельний. Повторіть ввод");
				D(playerid,D_MAIL_CONTROL,DSI, ""YELLOW"E-Mail",""W"Вкажіть Вашу "GREEN"пошту"W"\n\nВкажіть ваш реальний "YELLOW"Email"W". З його допомогою ви зможете відновити пароль","Далі","Закрити");
				return 1;
			}
			else {
				strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
				new query[156];
				format(query,sizeof(query),"UPDATE accounts SET pEmail = '%s' WHERE `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pEmail],PlayerInfo[playerid][pID]);
				mysql_tquery(connects,query);
				new string[128];
				format(string,sizeof(string),"Ваш E-Mail адрес: "W"%s. "YELLOW"Підтвердіть його на сайті "NameSite" в особистому кабінеті",PlayerInfo[playerid][pEmail]);
				SendClientMessage(playerid,COLOR_YELLOW,string);
			}
		}
		case dChangeCode: {
			if(!response) return pc_cmd_menu(playerid,"");
			switch(listitem) {
				case 0: {
					if(GetString(PlayerInfo[playerid][pKeyip],"-")) D(playerid,dCode,DSI, ""YELLOW"Захисний ключ", "\n\n"W"Придумайте новий захисний ключ:\n{f6f6d9}Захисний ключ буде потрібно вводити після кожного заходу в гру\n\n","Далі","Відміна");
					else D(playerid,dCodeChange1,3,"Захисний ключ","\n\n"W"Введіть Ваш старий ключ безпеки:\n\n","Ввід","Назад");
				}
				case 1: {
					SetString(PlayerInfo[playerid][pKeyip],"-");
					new query[156];
					format(query,sizeof(query),"UPDATE `accounts` SET `pKeyip` = '-' WHERE `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pID]);
					mysql_tquery(connects,query);
					SendOk(playerid,"Ключ безпеки відключено");
				}
				case 2: {
					new string[164];
					format(string, sizeof(string), "SELECT * FROM `captchalog` WHERE `clName` = '%s' ORDER BY `captchalog`.`clID` DESC LIMIT 10", player_name[playerid]);
					mysql_tquery(connects, string, "OnPlayerCaptchaLoaded", "i", playerid);
				}
			}
		}
		case dCodeChange1: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(!strcmp(inputtext,PlayerInfo[playerid][pKeyip],false) && strlen(inputtext)) {
				D(playerid,dCode,DSI, ""YELLOW"Захисний ключ", "\n\n"W"Придумайте новий захисний ключ:\n{f6f6d9}Захисний ключ буде потрібно вводити після кожного заходу в гру\n\n","Далі","Скасувати");
			}
			else D(playerid,dCodeChange1,DSI, ""YELLOW"Захисний ключ","\n\n"W"Введіть Ваш старий ключ безпеки:\n\n"NO"*{f6f6d9} Ключ введено не правильно\n\n","Ввід","Назад");
		}
		case dCode: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(strlen(inputtext) != 4 || isNumeric(inputtext)) return D(playerid, dCode, DSI, ""YELLOW"Захисний код:", "\n\n"W"Придумайте новий захисний ключ:\n{f6f6d9}Захисний ключ буде потрібно вводити після кожного заходу в гру\n\n"NO"*{f6f6d9} Ключ повинен містити 4 цифри\n\n","Далі","Скасувати");
			new string[200];
			format(string,sizeof(string),"Ваш новий захисний ключ: "W"%s."YELLOW" Він будет потрібен при заході в гру",(inputtext));
			SendClientMessage(playerid, COLOR_YELLOW,string);
			SendClientMessage(playerid, COLOR_YELLOW, "{f6f6d9}[Порада]"YELLOW" Ми рекомендуємо Вам зробити скріншот, відновити ключ неможливо. Клавиша "W"F8");
			SetString(PlayerInfo[playerid][pKeyip],inputtext);
			new query[156];
			format(query,sizeof(query),"UPDATE `accounts` SET `pKeyip` = '%s' WHERE `pID` = '%d' LIMIT 1",(inputtext),PlayerInfo[playerid][pID]);
			mysql_pquery(connects,query);
			return 1;
		}
		case D_CHANGE_NAME: {
			if(!response) return pc_cmd_menu(playerid,"");
			if(!strlen(inputtext)) return D(playerid,D_CHANGE_NAME,DSI, ""YELLOW"Заявка на зміну ніка", "Напишіть новий нік (по формі Ім'я_Прізвище)", "Відправити", "Назад");
			if(strlen(inputtext) < 5 || strlen(inputtext) > 20) return ErrorMessage(playerid,"Довжина ніка повинна бути від 5 до 20 символів");
			if(strfind(inputtext, " ") != -1) return ErrorMessage(playerid,"В Вашому ніку присутній пропуск(пробел)");
			if(IsIP(inputtext) || CheckString(inputtext) || strcmp(inputtext, "_",true) == -1) return ErrorMessage(playerid,"Введіть новий нік по формі: Ім'я_Прізвище (Приклад: Klaus_Gurren)");
			SetPVarString(playerid,"WantNickChange", inputtext);
			new query[128];
			format(query, sizeof(query), "SELECT `Name` FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s' LIMIT 1", inputtext);
			mysql_pquery(connects, query,  "CallChangeName", "d", playerid);
			return true;
		}
		case D_MENU: {
			if(!response) return 1;
			switch(listitem) {
				case 0: ShowStats(playerid,playerid,0);
				case 1: ShowSettings(playerid);
				case 2: D(playerid,D_MENU_COMMANDS,DSL, ""YELLOW"Команди", ""YELLOW"1."W" Загальні команди\n"YELLOW"2."W" Чати\n"YELLOW"3."W" По роботі\n"YELLOW"4."W" Фракційні\n"YELLOW"5."W" Дім\n"YELLOW"6."W" Бізнес\n"YELLOW"7."W" Автомобіль\n"YELLOW"8."W" Сім'я\n"YELLOW"9."W" Лідер", "Вибрати", "Назад");
				case 3: {
						if(PlayerInfo[playerid][pAskmute]) return ErrorMessage(playerid,"У вас закритий доступ до подачі питань");
						D(playerid,D_ASK,DSI, ""YELLOW"Зв'язок з Game Support", "\
{fff744}В{DCDCDC}и збираєтесь поставити питання Game Support.\n\
{fff744}Б{DCDCDC}удь ласка, чітко та грамотно сформулюйте питання.\n\n\
{008800}» Заборонено оффтоп, вик. CapsLock, образи та нецензурна лайка.", "Задать", "Назад");
				}
				case 4: {
					D(playerid,D_REPORT,DSI, ""YELLOW"Зв'язок з адміністрацією", "\
{fff744}В{DCDCDC}и збираєтесь надіслати запрос адміністрації.\n\
{fff744}Б{DCDCDC}удь Ласка, чітко та грамотно сформулюйте запит.\n\
{fff744}Т{DCDCDC}акож, при подачі скарги на гравця, вкажіть його ID.\n\n\
{008800}» Заборонено оффтоп, CapsLock, образи та нецензурна лайка.", "Відправити", "Назад");
				}
				case 5: D(playerid, D_CONTROL_EDIT, DSL, ""YELLOW"Безпека", ""YELLOW"1."W" Змінити пароль\n"YELLOW"2."W" Захисний ключ\n"YELLOW"3."W" E-Mail адрес\n"YELLOW"4."W" Google Authenticator", "Вибрати", "Назад");
				case 6: {
					new plane = -1;
					for(new i=1;i<=gPlaneCount;i++) {
						if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
					}
					if(plane != -1) return ErrorMessage(playerid,"Для зміни ніка, необхідно відказатись від оренди повітряного транспорта");
					if(PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Лідерам заборонено міняти нік");
					D(playerid,D_CHANGE_NAME,DSI, ""YELLOW"Заявка на зміну ніка", "Напишіть новий нік (по формі Ім'я_Прізвище)", "Відправити", "Назад");
				}
                case 7: return pc_cmd_donate(playerid);
				case 8: return D(playerid, D_USE_PROMO, DSI, ""YELLOW"Промокод", "\n\n"W"Введіть "ORANGE"промокод"W" ютубера:\n\n", "Ввід", "Назад");
				case 9: {
					new string[50], str[300];
					string = ""W"Предмет\t"W"Наявність\n";
				 	if(PlayerInfo[playerid][pBoomBox] == 1 || PlayerInfo[playerid][pBoomBox] == 2) {
                        format(str, sizeof(str), "%s"YELLOW"1. "W"Бумбокс\t[Є]",string);
					} else {
                        format(str, sizeof(str), "%s"YELLOW"1. "W"Бумбокс\t[Нет]",string);
					}
					D(playerid, D_INVENTORY, DIALOG_STYLE_TABLIST_HEADERS, ""YELLOW"Інвентар", str, "Вибрати", "Назад");
				}
			}
		}
		case D_INVENTORY: {
			if(!response) return pc_cmd_menu(playerid,"");
			switch(listitem) {
				case 0: {
				    if(PlayerInfo[playerid][pBoomBox] == 0) return ErrorMessage(playerid, "У Вас немає БумБокса");
				    if(!bumboxx[playerid]) {
						PlayerInfo[playerid][pBoomBox] = 2;
						pc_cmd_boom(playerid, "");
						PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					}
					else {
                        pc_cmd_boom(playerid, "");
						PlayerPlaySound(playerid, 6801, 0.0, 0.0, 0.0);
					}
				}
			}
		}
		case D_MENU_SETTING: {
			if(!response) return pc_cmd_menu(playerid,"");
		    switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pSettings][0]) {
						foreach(new i:Player) {
							if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
							ShowPlayerNameTagForPlayer(playerid,i,0);
						}
						SendOk(playerid,"Ви відключили показ ніків гравців");
						PlayerInfo[playerid][pSettings][listitem] = 0;
					}
					else {
						foreach(new i:Player) {
							if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
							ShowPlayerNameTagForPlayer(playerid,i,1);
						}
						SendOk(playerid,"Ви включили показ ніків гравців");
						PlayerInfo[playerid][pSettings][listitem] = 1;
					}
				}
				case 1: {
					if(PlayerInfo[playerid][pSettings][listitem] == 0) {
						PlayerInfo[playerid][pSettings][listitem] = 1;
						SendOk(playerid,"Ви включили чат організації");
					}
					else if(PlayerInfo[playerid][pSettings][listitem] == 1) {
						PlayerInfo[playerid][pSettings][listitem] = 0;
						SendOk(playerid,"Ви відключили чат організації");
					}
				}
				case 2: {
					if(PlayerInfo[playerid][pSettings][3] == 0) {
						PlayerInfo[playerid][pSettings][3] = 1;
						SendOk(playerid,"Ви включили чат компанії");
					}
					else if(PlayerInfo[playerid][pSettings][3] == 1) {
						PlayerInfo[playerid][pSettings][3] = 0;
						SendOk(playerid,"Ви відключили чат компанії");
					}
				}
				case 3: return D(playerid, D_NEWS_SELECT, DSL, ""YELLOW"Ефіри", ""YELLOW"1."W" Радіоцентр LS\n"YELLOW"2."W" Радіоцентр SF\n"YELLOW"3."W" Радіоцентр LV\n"YELLOW"-"W" Відключити", "Вибрати", "Назад");
				case 4: return D(playerid, D_CHAT, DSL, ""YELLOW"Стиль розмови", ""YELLOW"1."W" стандартний\n"YELLOW"2."W" Стиль 1\n"YELLOW"3."W" Стиль 2\n"YELLOW"4."W" Стиль 3\n"YELLOW"5."W" Стиль 4\n"YELLOW"6."W" Стиль 5\n"YELLOW"7."W" Стиль 6", "Вибрати", "Назад");
				case 5: return D(playerid, D_BOX, DSL, ""YELLOW"Стиль бійки", ""YELLOW"1."W" Стандартний\n"YELLOW"2."W" Бокс\n"YELLOW"3."W" Кунг-Фу\n"YELLOW"4."W" Кік-Бокс", "Вибрати", "Назад");
				case 6: {
					if(PlayerInfo[playerid][pSettings][6]) {
						SendOk(playerid,"Ви приховали стан голоду");
						PlayerInfo[playerid][pSettings][6] = 0;
						Hunger(playerid,1);
					}
					else {
						SendOk(playerid,"Ви включили стан голоду");
						PlayerInfo[playerid][pSettings][6] = 1;
						Hunger(playerid,0);
					}
				}
				case 7: {
					if(PlayerInfo[playerid][pSettings][7]) {
						SendOk(playerid,"Ви прибрали демонстрацію кейса в руках");
						PlayerInfo[playerid][pSettings][7] = 0;
					}
					else {
						SendOk(playerid,"Ви включили показ демонстрації кейса в руках");
						PlayerInfo[playerid][pSettings][7] = 1;
					}
				}
				case 8: {
					if(PlayerInfo[playerid][pSettings][8]) {
						SendOk(playerid,"Ви прибрали вікно прогрузки текстур");
						PlayerInfo[playerid][pSettings][8] = 0;
					}
					else {
						SendOk(playerid,"Ви включили вікно прогрузки текстур");
						PlayerInfo[playerid][pSettings][8] = 1;
					}
				}
				case 9: {
					if(!PlayerInfo[playerid][pSettings][9]) {
						SendOk(playerid,"Ви включили назву сім'ї над головой");
						PlayerInfo[playerid][pSettings][9] = 1;
					}
					else {
						SendOk(playerid,"Ви прибрали назву сім'ї над головой");
						PlayerInfo[playerid][pSettings][9] = 0;
					}
				}
				case 10: {
					if(!PlayerInfo[playerid][pSettings][10]) {
						SendOk(playerid,"Ви включили дамаг інформер");
						PlayerInfo[playerid][pSettings][10] = 1;
					}
					else {
						SendOk(playerid,"Ви вимкнули дамаг інформер");
						PlayerInfo[playerid][pSettings][10] = 0;
					}
				}
				case 11: return D(playerid, D_SPAWN, DSL, ""YELLOW"Вибір спавна", ""YELLOW"1."W" Вокзал\n"YELLOW"2."W" Дім/Отель\n"YELLOW"3."W" Організація", "Вибрати", "Скасувати");
				case 12: return D(playerid, D_BUYACS_4, DSL,""YELLOW"Керування аксесурами",""YELLOW"1."W" Головні убори\n"YELLOW"2."W" Очки\n"YELLOW"3."W" Бандани\n"YELLOW"4."W" Навушники\n"YELLOW"5."W" Годинник\n"YELLOW"6."W" Рюкзаки" , "Вибрати", "Скасувати");
			}
			save_settings(playerid);
			ShowSettings(playerid);
		}
		case D_MENU_COMMANDS: {
			if(!response) return pc_cmd_menu(playerid,"");
			new string[1512];
			switch(listitem) {
				case 0: {
					strcat(string,""YELLOW"/id"W" - дізнатись id гравця по ніку\n");
					strcat(string,""YELLOW"/ad"W" - подать оголошення\n");
					strcat(string,""YELLOW"/radio"W" - вибрати радіостанцію\n");
					strcat(string,""YELLOW"/leaders"W" - керівники організацій (online)\n");
					strcat(string,""YELLOW"/subleaders"W" - Заступники організації (online)\n");
					strcat(string,""YELLOW"/anim"W" - список анімацій\n");
					strcat(string,""YELLOW"/number"W" - дізнатись номер гравця\n");
					strcat(string,""YELLOW"/с(/call)"W" - здійснити виклик\n");
					strcat(string,""YELLOW"/sms"W" - написати СМС\n");
					strcat(string,""YELLOW"/book"W" - адресна книга\n");
					strcat(string,""YELLOW"/time"W" - подивитись час(час на сервері,заключення, бан чата)\n");
					strcat(string,""YELLOW"/pass"W" - показати паспорт\n");
					strcat(string,""YELLOW"/lic"W" - показати ліцензії\n");
					strcat(string,""YELLOW"/togphone"W" - відключити/включити телефон\n");
					strcat(string,""YELLOW"/pay"W" - передати гроші\n");
					strcat(string,""YELLOW"/hi"W" - пожати руку\n");
					strcat(string,""YELLOW"/namestore"W" - дізнатись минулі ніки гравця\n");
					strcat(string,""YELLOW"/buyfuel"W" - купити каністру з бензином\n");
					strcat(string,""YELLOW"/fillcar"W" - використати канистру з бензином\n");
					strcat(string,""YELLOW"/propose"W" - зробити пропозицію\n");
					strcat(string,""YELLOW"/divorce"W" - розвестись\n");
					strcat(string,""YELLOW"/medcard"W" - показати мед. карту\n");
					strcat(string,""YELLOW"/play"W" - онлайн радіо\n");
					strcat(string,""YELLOW"/referals"W" - список рефералів\n");
					strcat(string,""YELLOW"/leave"W" - звільнитись із организації\n");
					strcat(string,""YELLOW"/give"W" - передати предмет\n");
					strcat(string,""YELLOW"/wbook"W" - показати трудову книжку\n");
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
				case 1: {
					strcat(string,""YELLOW"/b"W" - ООС чат\n");
					strcat(string,""YELLOW"/me"W" - чат дій від 1-го лиця\n");
					strcat(string,""YELLOW"/ame"W" - дія над головою\n");
					strcat(string,""YELLOW"/do"W" - чат від 3-го лиця\n");
					strcat(string,""YELLOW"/ado"W" - чат від 3-го лиця над головою\n");
					strcat(string,""YELLOW"/try"W" - спроба дії (Удачно, Неудачно)\n");
					strcat(string,""YELLOW"/todo"W" - розмова поєднана з дією\n");
					strcat(string,""YELLOW"/s"W" - кричати\n");
					strcat(string,""YELLOW"/w"W" - шепотом\n");
					strcat(string,""YELLOW"/flip"W" - підкинути монетку\n");
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
				case 2: {
					switch(PlayerInfo[playerid][pJob]) {
						case 1: {
							strcat(string,""GREEN"Щоб почати роботу автобусника, необхідно арендувати автобус.\n");
							strcat(string,""GREEN"Місце оренди авьобусів Ви можете знайти в GPS.\n");
							strcat(string,"\t\t\t"YELLOW"/gps >> роботи\n");
						}
						case 2: {
							strcat(string,""YELLOW"/repairs"W" - список викликів\n");
							strcat(string,""YELLOW"/repair"W" - зремонтовати автомобіль\n");
							strcat(string,""YELLOW"/refill"W" - заправити автомобіль\n");
							strcat(string,""YELLOW"/contract"W" - купити топливо у АЗС\n");
							strcat(string,""YELLOW"/tow"W" - буксовати автомобіль\n");
							strcat(string,""YELLOW"/untow"W" - відцепити автомобіль\n");
						}
						case 3: {
							strcat(string,""YELLOW"/prods"W" - список замовлень продуктів/топлива\n");
							strcat(string,""GREEN"Місце оренди розвозчиків продуктів/топлива Ви можете знайти в GPS.\n");
							strcat(string,"\t\t\t"YELLOW"/gps >> роботи\n");
						}
						case 4: {
							strcat(string,""YELLOW"/bhd"W" - купити хот-доги у закусочної\n");
							strcat(string,""YELLOW"/shd"W" - продати хот-дог гравцю\n");
						}
						case 5: {
							strcat(string,""GREEN"Місце оренди Т/С для скошування трави Ви можете знайти в GPS.\n");
						}
						case 6: {
							strcat(string,""YELLOW"/zonestatus"W" - список зон для скошування трави\n");
							strcat(string,""GREEN"Місце оренди Т/С для скошування трави Ви можете знайти в GPS.\n");
						}
						default: return ErrorMessage(playerid,"Ви не працевлаштуванні"),pc_cmd_menu(playerid,"");
					}
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
				case 3: {
					switch(GetTeamID(playerid)) {
						case fLSPD,fSFPD,fLVPD,fFBI: {
							strcat(string,""YELLOW"/r"W" - рація\n");
							strcat(string,""YELLOW"/rb"W" - НонРП рація\n");
							strcat(string,""YELLOW"/d"W" - рація гос. департамента\n");
							strcat(string,""YELLOW"/db"W" - НонРП рація гос. департамента\n");
							strcat(string,""YELLOW"/rr"W" - рация підфракції\n");
							strcat(string,""YELLOW"/m"W" - мегафон\n");
							strcat(string,""YELLOW"/members"W" - подивитись онлайн фракції\n");
							strcat(string,""YELLOW"/gnews"W" - гос. новини\n");
							strcat(string,""YELLOW"/su"W" - видати розшук\n");
							strcat(string,""YELLOW"/clear"W" - зняти розшук\n");
							strcat(string,""YELLOW"/ud"W" - показати посвідчення\n");
							strcat(string,""YELLOW"/gotome"W" - тягнути за собою\n");
							strcat(string,""YELLOW"/tazer"W" - поразити електрошокером\n");
							strcat(string,""YELLOW"/cuff"W" - одягнути наручники\n");
							strcat(string,""YELLOW"/uncuff"W" - зняти наручники\n");
							strcat(string,""YELLOW"/obc"W" - бортовой компьютер\n");
							strcat(string,""YELLOW"/arrest"W" - посадити в КПЗ\n");
							strcat(string,""YELLOW"/push"W" - заштовхати в автомобіль\n");
							strcat(string,""YELLOW"/unmask"W" - зняти маску\n");
							strcat(string,""YELLOW"/look"W" - обшукати гравця\n");
							strcat(string,""YELLOW"/take"W" - вилучити ліцензії/речі\n");
							strcat(string,""YELLOW"/ticket"W" - виписати штраф\n");
							strcat(string,""YELLOW"/spikes"W" - викинути шипи\n");
							strcat(string,""YELLOW"/hack"W" - виламати двері дому\n");
							strcat(string,""YELLOW"/fences"W" - встановити огорожу\n");
							if(GetTeamID(playerid) == fFBI) {
								strcat(string,""YELLOW"/demote"W" - понизити/звільнити гос.робітника\n");
								strcat(string,""YELLOW"/fakepass"W" - показати підробний паспорт\n");
								strcat(string,""YELLOW"/givekey"W" - видати/забрати пропуск\n");
							}
						}
						case fMEDICLS,fMEDICSF,fMEDICLV: {
							strcat(string,""YELLOW"/r"W" - рація\n");
							strcat(string,""YELLOW"/rb"W" - НонРП рація\n");
							strcat(string,""YELLOW"/d"W" - рація гос. департамента\n");
							strcat(string,""YELLOW"/db"W" - НонРП рація гос. департамента\n");
							strcat(string,""YELLOW"/rr"W" - рація підфракций\n");
							strcat(string,""YELLOW"/members"W" - подивитись онлайн фракції\n");
							strcat(string,""YELLOW"/gnews"W" - гос. новини\n");
							strcat(string,""YELLOW"/heal"W" - вилікувати гравця\n");
							strcat(string,""YELLOW"/medics"W" - список викликів\n");
							strcat(string,""YELLOW"/bheal"W" - вилікувати від захворювання\n");
							strcat(string,""YELLOW"/gmed"W" - поставити печатку в ліцензіях на зброю\n");
						}
						case fLSNEWS,fSFNEWS,fLVNEWS: {
							strcat(string,""YELLOW"/r"W" - рація\n");
							strcat(string,""YELLOW"/rb"W" - НонРП рація\n");
							strcat(string,""YELLOW"/d"W" - рація гос. департамента\n");
							strcat(string,""YELLOW"/db"W" - НонРП рація гос. департамента\n");
							strcat(string,""YELLOW"/rr"W" - рація підфракций\n");
							strcat(string,""YELLOW"/members"W" - подивитись онлайн фракції\n");
							strcat(string,""YELLOW"/gnews"W" - гос. новини\n");
							strcat(string,""YELLOW"/ether"W" - прямий ефір\n");
							strcat(string,""YELLOW"/edit"W" - оголошення\n");
							strcat(string,""YELLOW"/skip"W" - покласти трубку\n");
							strcat(string,""YELLOW"/udjur"W" - показать посвідчення журналіста\n");
							strcat(string,""YELLOW"/audience"W" - рейтинг слухачів\n");
						}
						case fARMYLV,fARMYSF: {
							strcat(string,""YELLOW"/r"W" - рація\n");
							strcat(string,""YELLOW"/rb"W" - НонРП рація\n");
							strcat(string,""YELLOW"/d"W" - рація гос. департамента\n");
							strcat(string,""YELLOW"/db"W" - НонРП рація гос. департамента\n");
							strcat(string,""YELLOW"/rr"W" - рація підфракцій\n");
							strcat(string,""YELLOW"/members"W" - подивитись онлайн фракції\n");
							strcat(string,""YELLOW"/gnews"W" - гос. новини\n");
							strcat(string,""YELLOW"/load"W" - почати загрузку боєприпасів\n");
							strcat(string,""YELLOW"/unload"W" - почати разгрузку боєприпасів\n");
							strcat(string,""YELLOW"/carm"W" - почати перевозку боєприпасів\n");
						}
						case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
							strcat(string,""YELLOW"/f"W" - рація\n");
							strcat(string,""YELLOW"/fb"W" - НонРП рація\n");
							strcat(string,""YELLOW"/bc"W" - чат банд\n");
							strcat(string,""YELLOW"/members"W" - подивитись онлайн фракції\n");
							strcat(string,""YELLOW"/capture"W" - почати війну за территорію\n");
							strcat(string,""YELLOW"/kd"W" - дізнатись час до початку капта\n");
							strcat(string,""YELLOW"/zone"W" - дізнатись кількість територій\n");
							strcat(string,""YELLOW"/makegun"W" - зробити зброю\n");
							strcat(string,""YELLOW"/getgun"W" - взяти зброю зі склада\n");
							strcat(string,""YELLOW"/sellgun"W" - продати зброю\n");
							strcat(string,""YELLOW"/load"W" - почати загрузку материалів\n");
							strcat(string,""YELLOW"/unload"W" - почати розгрузку материалів\n");
							strcat(string,""YELLOW"/mask"W" - одягнути маску\n");
							strcat(string,""YELLOW"/maskoff"W" - зняти маску\n");
							strcat(string,""YELLOW"/dress"W" - переодягнутися в воєнну форму\n");
							strcat(string,""YELLOW"/givekey"W" - видати/забрати пропуск\n");
							strcat(string,""YELLOW"/robhouse"W" - пограбувати будинок\n");
							strcat(string,""YELLOW"/srace"W" - вуличні гонки\n");
							strcat(string,""YELLOW"/sellzone"W" - продати територію\n");
							strcat(string,""YELLOW"/sklad"W" - відкрити/закрити склад\n");
							strcat(string,""YELLOW"/bmarket"W" - керування чорним ринком\n");
							strcat(string,""YELLOW"/gspcars"W" - заспавнити не зайнятий транспорт\n");
							strcat(string,""YELLOW"/gpay"W" - видати премію\n");
						}
						case fRM,fLCN,fYAKUZA: {
							strcat(string,""YELLOW"/f"W" - рація\n");
							strcat(string,""YELLOW"/fb"W" - НонРП рація\n");
							strcat(string,""YELLOW"/rr"W" - рація підфракцій\n");
							strcat(string,""YELLOW"/members"W" - подивитись онлайн фракції\n");
							strcat(string,""YELLOW"/bizwar"W" - почати війну за бізнес\n");
							strcat(string,""YELLOW"/bizlist"W" - подивитись список бізнесів під контролем\n");
							strcat(string,""YELLOW"/tie"W" - зв'язати гравця\n");
							strcat(string,""YELLOW"/untie"W" - розв'язати гравця\n");
							strcat(string,""YELLOW"/takephone"W" - забрати телефон\n");
							strcat(string,""YELLOW"/givephone"W" - повернути телефон\n");
							strcat(string,""YELLOW"/gag"W" - вставити/достати кляп\n");
							strcat(string,""YELLOW"/bag"W" - одягнути/зняти мішок з голови\n");
							strcat(string,""YELLOW"/sklad"W" - відкрити/закрити склад\n");
							strcat(string,""YELLOW"/makegun"W" - зробити зброю\n");
							strcat(string,""YELLOW"/load"W" - почати загрузку боєприпасів\n");
							strcat(string,""YELLOW"/unload"W" - почати розгрузку боєприпасів\n");
						}
						case fMAYOR: {
							strcat(string,""YELLOW"/r"W" - рація\n");
							strcat(string,""YELLOW"/rb"W" - НонРП рація\n");
							strcat(string,""YELLOW"/d"W" - рація гос. департамента\n");
							strcat(string,""YELLOW"/db"W" - НонРП раціч гос. департамента\n");
							strcat(string,""YELLOW"/members"W" - подивитись онлайн фракції\n");
							strcat(string,""YELLOW"/gnews"W" - гос. новини\n");
						}
						case fWHITEHOUSE: {
							strcat(string,""YELLOW"/r"W" - рація\n");
							strcat(string,""YELLOW"/rb"W" - НонРП рація\n");
							strcat(string,""YELLOW"/d"W" - рація гос. департамента\n");
							strcat(string,""YELLOW"/db"W" - НонРП рація гос. департамента\n");
							strcat(string,""YELLOW"/members"W" - посмотреть онлайн фракції\n");
							strcat(string,""YELLOW"/gnews"W" - гос. новости\n");
							//strcat(string,""YELLOW"/giveleader"W" - призначити лідером\n");
							strcat(string,""YELLOW"/free"W" - випустити із тюрьми\n");
						}
						default: return ErrorMessage(playerid,"Ви не перебуваєте в организації");
					}
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
				case 4: {
					strcat(string,""YELLOW"/house"W" - меню керування будинком\n");
					strcat(string,""YELLOW"/safe"W" - сейф\n");
					strcat(string,""YELLOW"/hhealme"W" - використати аптечку\n");
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
				case 5: {
					strcat(string,""YELLOW"/bpanel"W" - меню керування бізнесом\n");
					strcat(string,""YELLOW"/tinvite"W" - прийняти в таксопарк\n");
					strcat(string,""YELLOW"/trinvite"W" - прийняти в транспортну компанію\n");
					strcat(string,""YELLOW"/tr"W" - чат таксопарка/транспортної компанії\n");
					strcat(string,""YELLOW"/trspcar"W" - спавн автомобілів транспортної компанії\n");
					strcat(string,""YELLOW"/taxispcar"W" - спавн автомобілів таксопарка\n");
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
				case 6: {
					strcat(string,""YELLOW"/lock"W" - відкрити/закрити Т/С\n");
					strcat(string,""YELLOW"/changecar"W" - продати/обміняти Т/С\n");
					strcat(string,""YELLOW"/trunk"W" - багажник\n");
					strcat(string,""YELLOW"/slimit"W" - встановити обмеження швидкості Т/С\n");
					strcat(string,""YELLOW"/remp"W" - зремонтовати Т/С\n");
					strcat(string,""YELLOW"/mode"W" - переключити режим їзди (perfomance)\n");
					strcat(string,""YELLOW"/fixcar"W" - заспавнити авто\n");
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
				case 7: {
					if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитись в сім'ї");
					strcat(string,""YELLOW"/fmenu"W" - меню сім'ї\n");
					strcat(string,""YELLOW"/fam"W" - чат сім'ї\n");
					strcat(string,""YELLOW"/finvite"W" - прийняти в сім'ю\n");
					strcat(string,""YELLOW"/funinvite"W" - вигнати з сім'ї\n");
					strcat(string,""YELLOW"/foffuninvite"W" - вигнати з сім'ї в оффлайн\n");
					strcat(string,""YELLOW"/frang"W" - підвищити/понизити члена сім'ї\n");
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
				case 8: {
					if(!PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Ви не лідер");
					strcat(string,""YELLOW"/invite"W" - прийняти гравця в организацію\n");
					strcat(string,""YELLOW"/uninvite"W" - вигнати гравця із організації\n");
					strcat(string,""YELLOW"/rang"W" - підвищити/понизити ранг\n");
					strcat(string,""YELLOW"/changeskin"W" - змінити скін гравцю\n");
					strcat(string,""YELLOW"/lmenu"W" - меню лідера\n");
					strcat(string,""YELLOW"/fwarn"W" - видати догану\n");
					strcat(string,""YELLOW"/funwarn"W" - зняти догану\n");
					strcat(string,""YELLOW"/showall"W" - члени фракції оффлайн\n");
					strcat(string,""YELLOW"/bl"W" - керування чорним списком\n");
					strcat(string,""YELLOW"/fmute"W" - видати заглушку\n");
					strcat(string,""YELLOW"/funmute"W" - зняти заглушку\n");
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди",string,"Закрити","");
				}
			}
		}
		case D_CHAT: {
			if(!response) return ShowSettings(playerid);
			PlayerInfo[playerid][pSettings][4] = listitem;
			SendOk(playerid, "Ви вибрали новий стиль розмови для свого персонажа");
			save_settings(playerid);
			ShowSettings(playerid);
		}
		case D_BOX: {
			if(!response) return ShowSettings(playerid);
			if(PlayerInfo[playerid][pBox] < listitem) return ErrorMessage(playerid,"Вибраний стиль ще не вивчений. Відправляйтесь в Спорт-зал"),ShowSettings(playerid);
			PlayerInfo[playerid][pSettings][5] = listitem;
			SendOk(playerid, "Ви вибрали новий стиль бійки для свого персонажа");
			switch(listitem) {
				case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			}
			save_settings(playerid);
			ShowSettings(playerid);
		}
		case D_NEWS_SELECT: {
			if(!response) return ShowSettings(playerid);
			switch(listitem) {
				case 0: PlayerInfo[playerid][pSettings][2] = fLSNEWS;
				case 1: PlayerInfo[playerid][pSettings][2] = fSFNEWS;
				case 2: PlayerInfo[playerid][pSettings][2] = fLVNEWS;
				case 3: PlayerInfo[playerid][pSettings][2] = 0;
			}
			SendOk(playerid, "Радіостанція успішно встановлена");
			save_settings(playerid);
			ShowSettings(playerid);
		}
		case D_NEWS_SELECT_2: {
			if(!response) return 1;
			switch(listitem) {
				case 0: PlayerInfo[playerid][pSettings][2] = fLSNEWS;
				case 1: PlayerInfo[playerid][pSettings][2] = fSFNEWS;
				case 2: PlayerInfo[playerid][pSettings][2] = fLVNEWS;
				case 3: PlayerInfo[playerid][pSettings][2] = 0;
			}
			SendOk(playerid, "Радіостанція успішно встановлена");
			save_settings(playerid);
		}
  		case D_BAN_LIST: {
			if(response) {
			    if(listitem == 20 || listitem == 21) CheckBanned(playerid,listitem);
       			else {
			        strmid(UnbanName[playerid], inputtext, 0, strlen(inputtext) );
			        if(GetString(inputtext, "<<< Назад")) return CheckBanned(playerid,21);
					new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA = 0,query[128],string[220];
				    format(query, sizeof(query), "SELECT * FROM `ban` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
   					new Cache:result = mysql_query(connects, query);
   					new rows = cache_num_rows();
					if(rows > 0) {
						cache_get_value_index(0,1,NAME_PLAYER,24);
						cache_get_value_index(0,2,NAME_ADMIN,24);
						cache_get_value_index(0,3,BAN_REASON,24);
						cache_get_value_index_int(0,4,UNBAN_DATA);
						if(UNBAN_DATA > unix) {
							new date_ban[6];
							timestamp_to_date(UNBAN_DATA,date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);

							format(string,sizeof(string),"\
							"W"Заблокирован:\t"NO"%s\n\
							"W"Заблокировал:\t"ORANGE"%s\n\
							"W"Причина:\t\t"ORANGE"%s\n\
							"W"Разблокировка:\t"ORANGE"%02d/%02d/%02d %02d:%02d:%02d",
							NAME_PLAYER,NAME_ADMIN, BAN_REASON ,date_ban[2],date_ban[1],date_ban[0],date_ban[3],date_ban[4],date_ban[5]);
							D(playerid,D_UNBAN,DSM, ""YELLOW"Розблокувати",string,"Розбанити","Відхилити");
						}
						else {
							static const f_str[] = "Гравець %s не заблокований";
							new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
							
							format(str, sizeof(str), f_str, UnbanName[playerid]);
							ErrorMessage(playerid, str);
						}
					}
				    cache_delete(result);
			    }
			}
		}
  		case D_TRUNK_LIST: {
		    if(response) {
		        new idofcar = idaofcar[playerid];
				switch(listitem) {
				    case 0: {
						if(idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Машина не принадлежит Вам"),trunk_close(playerid);
				        if(!TrunkInfo[idofcar][tOpen]) {
							TrunkInfo[idofcar][tOpen] = 1;
							pc_cmd_trunk(playerid);
						}
				        else TrunkInfo[idofcar][tOpen] = 0;
				        pc_cmd_trunk(playerid);
				    }
				    case 1: {
                        nedded[playerid] = 1;
						new string[128];
                        format(string,sizeof(string),""W"Дістати каністру\nПокласти каністру\nДоступно: "YELLOW"[%d/2]",TrunkInfo[idofcar][tKanistra]);
                        D(playerid,D_TRUNK_SELECT,DSL,""YELLOW"Багажник",string,"Прийняти","Скасувати");
				    }
        			case 2: {
                        nedded[playerid] = 2;
						new string[128];
                        format(string,sizeof(string),""W"Достати наркотики\nПокласти наркотики\nДоступно: "YELLOW"[%d/200]",TrunkInfo[idofcar][tNarko]);
                        D(playerid,D_TRUNK_SELECT,DSL,""YELLOW"Багажник",string,"Прийняти","Скасувати");
				    }
                	case 3: {
                        nedded[playerid] = 3;
                        new string[128];
                        format(string,sizeof(string),""W"Дістати боєприпаси\nПокласти боєприпаси\nДоступно: "YELLOW"[%d/1000]",TrunkInfo[idofcar][tMats]);
                        D(playerid,D_TRUNK_SELECT,DSL,""YELLOW"Багажник",string,"Прийняти","Скасувати");
				    }
        			case 4: {
                        nedded[playerid] = 4;
                        new string[128];
                        format(string,sizeof(string),""W"Дістати Deagle\nПокласти Deagle\nДоступно: "YELLOW"[%d/50]",TrunkInfo[idofcar][tGun][0]);
                        D(playerid,D_TRUNK_SELECT,DSL,""YELLOW"Багажник",string,"Прийняти","Скасувати");
				    }
                	case 5: {
                        nedded[playerid] = 5;
                        new string[128];
                        format(string,sizeof(string),""W"Дістати AK-47\nПокласти AK-47\nДоступно: "YELLOW"[%d/50]",TrunkInfo[idofcar][tGun][1]);
                        D(playerid,D_TRUNK_SELECT,DSL,""YELLOW"Багажник",string,"Прийняти","Скасувати");
				    }
                    case 6: {
                        nedded[playerid] = 6;
						new string[128];
                        format(string,sizeof(string),""W"Дістати M4\nПокласти M4\nДоступно: "YELLOW"[%d/50]",TrunkInfo[idofcar][tGun][2]);
                        D(playerid,D_TRUNK_SELECT,DSL,""YELLOW"Багажник",string,"Прийняти","Скасувати");
				    }
                    case 7: {
                        nedded[playerid] = 7;
                        new string[128];
                        format(string,sizeof(string),""W"Дістати ShotGun\nПокласти ShotGun\nДоступно: "YELLOW"[%d/50]",TrunkInfo[idofcar][tGun][3]);
                        D(playerid,D_TRUNK_SELECT,DSL,""YELLOW"Багажник",string,"Прийняти","Скасувати");
				    }
				}
				SaveTrunk(idofcar);
		    }
			else trunk_close(playerid);
		}
  		case D_TRUNK_SELECT: {
		    if(response) {
		        new item[30];
		        switch(nedded[playerid]) {
		            case 1: item = "каністр";
		            case 2: item = "наркотиків";
		            case 3: item = "боєприпасів";
		            case 4: item = "патронів Deagle";
		            case 5: item = "патронів AK47";
		            case 6: item = "патронів M4";
		            case 7: item = "патронів ShotGun";
		            default: return false;
		        }
				new string[128];
		        switch(listitem) {
		            case 0: {
		                format(string,sizeof(string),""W"Введіть кількість %s, яку бажаєте дістати із багажника:",item);
		                D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",string,"Прийняти","Скасувати");
		            }
		            case 1: {
					    format(string,sizeof(string),""W"Введіть кількість %s, яку бажаєте покласти в багажник:",item);
		                D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",string,"Прийняти","Скасувати");
					}
		        }
		    }
		    else pc_cmd_trunk(playerid);
		}
		case D_TRUNK_INPUT: {
		    if(response) {
		        if(!strlen(inputtext)) return pc_cmd_trunk(playerid);
		        new bitem = strval(inputtext),idofcar=idaofcar[playerid],string[156];
		        if(bitem<1) return pc_cmd_trunk(playerid),SendClientMessage(playerid,COLOR_RED,"Помилка");
		        switch(nedded[playerid]) {
                    case 1: {
						if(bitem>TrunkInfo[idofcar][tKanistra]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість канистр, яку бажаєте дістати із багажника:\n\n"NO"*{f6f6d9} В багажнику немає такої кількості канистр","Прийняти","Скасувати");
						}
						if((PlayerInfo[playerid][pFuel]+bitem)>vip_status[PlayerInfo[playerid][pVips]][vip_fuel]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість канистр, яку бажаєте дістати із багажника:\n\n"NO"*{f6f6d9} Ви не можете взяти з собой так багато канистр","Прийняти","Скасувати");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PlayerInfo[playerid][pFuel] +=bitem;
						UpdatePlayerData(playerid,"pFuel",PlayerInfo[playerid][pFuel]);
						TrunkInfo[idofcar][tKanistra] -= bitem;
						pc_cmd_trunk(playerid),SendUse(playerid,"Ви взяли "ORANGE"1 {f6f6d9}канистру с багажника");
		            }
                    case 2: {
						if(bitem>TrunkInfo[idofcar][tNarko]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість наркотиків, которое хочете достать с багажника:\n\n"NO"*{f6f6d9} В багажнике нет такого кол-ва наркотиків","Прийняти","Відміна");
						}
						if((PlayerInfo[playerid][pDrugs]+bitem)>vip_status[PlayerInfo[playerid][pVips]][vip_drugs]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість наркотиків, которое хочете достать с багажника:\n\n"NO"*{f6f6d9} Вы не можете взяти с собой так много наркотиків","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PlayerInfo[playerid][pDrugs] += bitem;
						TrunkInfo[idofcar][tNarko] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви взяли "ORANGE"%d {f6f6d9}наркотиків с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 3: {
						if(bitem>TrunkInfo[idofcar][tMats]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість боєприпасів, которое хочете достать с багажника:\n\n"NO"*{f6f6d9} В багажнике нет такого кол-ва боєприпасів","Прийняти","Відміна");
		                }
						if((PlayerInfo[playerid][pMats]+bitem)>vip_status[PlayerInfo[playerid][pVips]][vip_mats]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість боєприпасів, которое хочете достать с багажника:\n\n"NO"*{f6f6d9} Вы не можете взяти с собой так много боєприпасів","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PlayerInfo[playerid][pMats] += bitem;
						TrunkInfo[idofcar][tMats] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви взяли "ORANGE"%d {f6f6d9}боєприпасів с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 4: {
						if(bitem>TrunkInfo[idofcar][tGun][0]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів Deagle, которое хочете достать с багажника:\n\n"NO"*{f6f6d9} В багажнике нет такого кол-ва патронів Deagle","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 24, bitem);
						TrunkInfo[idofcar][tGun][0] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви взяли "ORANGE"%d {f6f6d9}патронів Deagle с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 5: {
						if(bitem>TrunkInfo[idofcar][tGun][1]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів AK-47, которое хочете достать с багажника:\n\n"NO"*{f6f6d9} В багажнике нет такого кол-ва патронів AK-47","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 30, bitem);
						TrunkInfo[idofcar][tGun][1] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви взяли "ORANGE"%d {f6f6d9}патронів AK-47 с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 6: {
						if(bitem>TrunkInfo[idofcar][tGun][2]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів M4, которое хочете достать с багажника:\n\n"NO"*{f6f6d9} В багажнике нет такого кол-ва патронів M4","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 31, bitem);
						TrunkInfo[idofcar][tGun][2] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви взяли "ORANGE"%d {f6f6d9}патронів M4 с багажника",bitem);
						SendUse(playerid,string);
		            }
                    case 7: {
						if(bitem>TrunkInfo[idofcar][tGun][3]) {
		                	return D(playerid,D_TRUNK_INPUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів ShotGun, которое хочете достать с багажника:\n\n"NO"*{f6f6d9} В багажнике нет такого кол-ва патронів ShotGun","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 25, bitem);
						TrunkInfo[idofcar][tGun][3] -= bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви взяли "ORANGE"%d {f6f6d9}патронів ShotGun с багажника",bitem);
						SendUse(playerid,string);
		            }
		            default: return true;
		        }
		        ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
				SaveTrunk(idofcar);
		    }
		    else pc_cmd_trunk(playerid);
		}
		case D_TRUNK_PUT: {
		    if(response) {
		        if(!strlen(inputtext)) return pc_cmd_trunk(playerid);
		        new bitem = strval(inputtext),idofcar=idaofcar[playerid],string[156];
		        if(bitem<1)return pc_cmd_trunk(playerid),SendClientMessage(playerid,COLOR_RED,"Помилка");
		        switch(nedded[playerid]) {
              		case 1: {
		                if((TrunkInfo[idofcar][tKanistra]+bitem)>2) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість канистр, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} В багажнике нет места для хранения канистр","Прийняти","Відміна");
						}
						if(bitem>PlayerInfo[playerid][pFuel]) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість канистр, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} У вас немає столько канистр","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PlayerInfo[playerid][pFuel]-=1;
						UpdatePlayerData(playerid,"pFuel",PlayerInfo[playerid][pFuel]);
						TrunkInfo[idofcar][tKanistra]+=bitem;
						pc_cmd_trunk(playerid),SendUse(playerid,"Ви положили "ORANGE"1 {f6f6d9}канистру в багажник");
		            }
              		case 2: {
		                if((TrunkInfo[idofcar][tDrugs]+bitem)>200) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість наркотиків, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} В багажнике нет места для хранения наркотиків","Прийняти","Відміна");
						}
						if(bitem>PlayerInfo[playerid][pDrugs]) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість наркотиків, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} У вас немає столько наркотиків","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PlayerInfo[playerid][pDrugs]-=bitem;
						TrunkInfo[idofcar][tNarko]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви положили "ORANGE"%d {f6f6d9}наркотиків в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 3: {
		                if((TrunkInfo[idofcar][tMats]+bitem)>1000) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість боєприпасів, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} В багажнике нет места для хранения боєприпасів","Прийняти","Відміна");
						}
						if(bitem>PlayerInfo[playerid][pMats]) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість боєприпасів, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} У вас немає столько боєприпасів","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						PlayerInfo[playerid][pMats]-=bitem;
						TrunkInfo[idofcar][tMats]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви положили "ORANGE"%d {f6f6d9}боєприпасів в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 4: {
						if((TrunkInfo[idofcar][tGun][0]+bitem)>50) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів Deagle, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} В багажнике нет места для хранения патронів Deagle","Прийняти","Відміна");
						}
						if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < bitem) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів Deagle, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} У вас немає столько патронів Deagle","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 24, -bitem);
						TrunkInfo[idofcar][tGun][0]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви положили "ORANGE"%d {f6f6d9}патронів Deagle в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 5: {
		                if((TrunkInfo[idofcar][tGun][1]+bitem)>50) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів AK-47, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} В багажнике нет места для хранения патронів AK-47","Прийняти","Відміна");
						}
						if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < bitem) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів AK-47, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} У вас немає столько патронів AK-47","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 30, -bitem);
						TrunkInfo[idofcar][tGun][1]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви положили "ORANGE"%d {f6f6d9}патронів AK-47 в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 6: {
		                if((TrunkInfo[idofcar][tGun][2]+bitem)>50) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів M4, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} В багажнике нет места для хранения патронів M4","Прийняти","Відміна");
						}
						if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < bitem) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів M4, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} У вас немає столько патронів M4","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 31, -bitem);
						TrunkInfo[idofcar][tGun][2]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви положили "ORANGE"%d {f6f6d9}патронів M4 в багажник",bitem);
						SendUse(playerid,string);
		            }
                    case 7: {
		                if((TrunkInfo[idofcar][tGun][3]+bitem)>50) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів ShotGun, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} В багажнике нет места для хранения патронів ShotGun","Прийняти","Відміна");
						}
						if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < bitem) {
		                	return D(playerid,D_TRUNK_PUT,DSI, ""YELLOW"Багажник",""W"Введіть кількість патронів ShotGun, яке бажаєте покласти в багажник:\n\n"NO"*{f6f6d9} У вас немає столько патронів ShotGun","Прийняти","Відміна");
						}
						if(!TrunkInfo[idofcar][tOpen] && idaofcar[playerid] != house_car[playerid][0] && idaofcar[playerid] != house_car[playerid][1]) return ErrorMessage(playerid, "Багажник закрыт"),trunk_close(playerid);
						AC_GivePlayerWeapon(playerid, 25, -bitem);
						TrunkInfo[idofcar][tGun][3]+=bitem;
						pc_cmd_trunk(playerid),format(string,sizeof(string),"Ви положили "ORANGE"%d {f6f6d9}патронів ShotGun в багажник",bitem);
						SendUse(playerid,string);
		            }
		            default: return true;
		        }
				SaveTrunk(idofcar);
		        ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
		    }
		    else pc_cmd_trunk(playerid);
		}
		case D_NEWS: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(!TI[playerid][tEther]) {
						TI[playerid][tEther] = true;
						SendOk(playerid,"Ви в прямому ефірі");
						PlayerInfo[playerid][pSettings][2] = PlayerInfo[playerid][pMember];
						save_settings(playerid);
					}
					else {
						ether_closed(playerid);
						TI[playerid][tEther] = false;
						SendOk(playerid,"Ви вийшли із прямого ефіру");
					}
				}
				case 1: {
					new str[64];
					switch(PlayerInfo[playerid][pMember]) {
						case fLSNEWS: {
							if(calls_news[0] == INVALID_PLAYER_ID) str = "Прийом дзвінків - ["GREEN"Відсутній"W"]";
							else format(str,sizeof(str),"Прийом звінків - ["YELLOW"%s]",player_name[calls_news[0]]);
						}
						case fSFNEWS: {
							if(calls_news[1] == INVALID_PLAYER_ID) str = "Приём дзвінків - ["GREEN"Відсутній"W"]";
							else format(str,sizeof(str),"Прийом звінків - ["YELLOW"%s]",player_name[calls_news[1]]);
						}
						case fLVNEWS: {
							if(calls_news[2] == INVALID_PLAYER_ID) str = "Приём дзвінків - ["GREEN"Відсутній"W"]";
							else format(str,sizeof(str),"Прийом звінків - ["YELLOW"%s]",player_name[calls_news[2]]);
						}
					}
					new string[128];
					format(string,sizeof(string),""W"1. %s\n"W"2. Ціна за дзвінок - ["GREEN"%d"W"]",str,FI[PlayerInfo[playerid][pMember]][fPrice]);
					D(playerid,D_NEWS_ETHER, DSL, ""YELLOW"Меню ефіра", string, "Далі", "Відміна");
				}
			}
		}
		case D_NEWS_ETHER: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(!TI[playerid][tEther]) return ErrorMessage(playerid,"Для прийома дзвінків необхідно находиться в прямому ефірі");
					switch(PlayerInfo[playerid][pMember]) {
						case fLSNEWS: {
							if(calls_news[0] == INVALID_PLAYER_ID) {
								calls_news[0] = playerid;
								new string[128];
								format(string,sizeof(string),"%s почав(ла) прийом дзвінків",player_name[playerid]);
								SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
							}
							else {
								if(calls_news[0] == playerid) {
									ether_closed(playerid);
								}
								else ErrorMessage(playerid,"Хтось із співробітників уже приймає дзвінки");
							}
						}
						case fSFNEWS: {
							if(calls_news[1] == INVALID_PLAYER_ID) {
								calls_news[1] = playerid;
								new string[128];
								format(string,sizeof(string),"%s почав(ла) прийом дзвінків",player_name[playerid]);
								SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
							}
							else {
								if(calls_news[1] == playerid) {
									ether_closed(playerid);
								}
								else ErrorMessage(playerid,"Хтось із співробітників уже приймає дзвінки");
							}
						}
						case fLVNEWS: {
							if(calls_news[2] == INVALID_PLAYER_ID) {
								calls_news[2] = playerid;
								new string[128];
								format(string,sizeof(string),"%s почав(ла) прийом дзвінків",player_name[playerid]);
								SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
							}
							else {
								if(calls_news[2] == playerid) {
									ether_closed(playerid);
								}
								else ErrorMessage(playerid,"Хтось із співробітників уже приймає дзвінки");
							}
						}
					}
				}
				case 1: {
					if(PlayerInfo[playerid][pMember] < 9) return ErrorMessage(playerid,"Ця функція Вам недоступна");
					D(playerid,D_NEWS_ETHER_PRICE, DSI, ""YELLOW"Ціна за дзвінки", ""W"Введіть вартість за дзвінки:", "Далі", "Відміна");
				}
			}
		}
		case D_NEWS_ETHER_PRICE: {
			if(!response) return 1;
			new price = strval(inputtext);
			if(price < 10 || price > 50) return D(playerid,D_NEWS_ETHER_PRICE,DSI, ""YELLOW"Ціна за дзвінки",""W"Введіть вартість за дзвінки:\n\n"NO"*{f6f6d9} От $10 до $50","Далі","Відміна");
			FI[PlayerInfo[playerid][pMember]][fPrice] = price;
			new string[128];
			format(string,sizeof(string),"%s встановив(ла) ціну дзвінків - %d",player_name[playerid],price);
			SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
		}
	 	case D_ADVERT_LIST: {
			if(!response) return 1;
		    SetPVarInt(playerid,"editadvert",listitem);
			new id = GetPVarInt(playerid,"editadvert");
			if(!gAdvert[listitem][adBusy] || gAdvert[listitem][adCheked] || gAdvert[listitem][adCheking]) return ShowAdvertList(playerid);
			gAdvert[listitem][adCheking] = true;
			SetPVarInt(playerid,"adchecking_fix",listitem+1);
			static const f_str[] = "\
"W"Отправитель: {33AA33}%s"W"\n\
Текст: {FFD700}%s"W"\n\n\
Для публикации оголошення, натисніть: {73B461}'ВІДПРАВИТИ'"W"\n\
Щоб отклонить или отправить сообщение адміністрації, натисніть: {E11C1C}'РЕДАКТОР'";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
			
		    format(string,sizeof(string), f_str ,gAdvert[id][adSender],gAdvert[id][adText],gAdvert[id][adText]);
			D(playerid,D_ADVERT_LIST_EDIT,DSI, ""YELLOW"Редагування",string,"Відправити","Редактор");
		}
		case D_ADVERT_LIST_2: {
			if(!response) {
				if(GetPVarInt(playerid,"adchecking_fix")) {
					gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
					DeletePVar(playerid,"adchecking_fix");
				}
				return 1;
			}
			DeletePVar(playerid,"adchecking_fix");
		    new id = GetPVarInt(playerid,"editadvert");
		    new player = GetCheckID(gAdvert[id][adSender]);

		    if(listitem == 1) {
				new string[143];
				format(string, sizeof(string), "[NEWS] %s[%d]: %s", gAdvert[id][adSender],gAdvert[id][adID], gAdvert[id][adText]);
				SendAdminMessage(0x008e8cff,string);
			}
			
		    static const f_str[] = "Ваше оголошення було відхилене редактором: {33AA33}%s{f6f6d9}";
		    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
		    format(string,sizeof(string),f_str,player_name[playerid]);
			SendOk(player,string);
			
			strdel(gAdvert[id][adSender],0,24);
			gAdvert[id][adPhone] = 0;
			strdel(gAdvert[id][adText],0,100);
			gAdvert[id][adBusy] = false;
			gAdvert[id][adCheked] = false;
			gAdvert[id][adCheking] = false;
			if(gAdvertCount > 0) gAdvertCount--;
			return ShowAdvertList(playerid);
		}
		case D_ADVERT_LIST_EDIT: {
			if(!response) return D(playerid,D_ADVERT_LIST_2,DSL, ""YELLOW"Редагування",""YELLOW"1."W" Відхилити оголошення\n"YELLOW"2."W" Відхилити та відправити адміністрації","Вибрати","Відміна");
			new id = GetPVarInt(playerid,"editadvert");
            switch(PlayerInfo[playerid][pMember]) {
                case fLSNEWS: gAdvert[id][adNews] = "LS";
                case fSFNEWS: gAdvert[id][adNews] = "SF";
                case fLVNEWS: gAdvert[id][adNews] = "LV";
            }
			if(strlen(inputtext)) format(gAdvert[id][adText],100,"%s",inputtext);
			format(gAdvert[id][adCheker],24,"%s",player_name[playerid]);

			FI[PlayerInfo[playerid][pMember]][fBank] += gAdvert[id][adMoney];
			UpdateFraction(PlayerInfo[playerid][pMember],"Bank",FI[PlayerInfo[playerid][pMember]][fBank]);
			PlayerInfo[playerid][pSalary] += 50;
			
            gAdvert[id][adTime] = gAdvertTime;
			gAdvertTime += 30;
			
			gAdvert[id][adCheking] = false;
			gAdvert[id][adCheked] = true;

			PlayerInfo[playerid][pAdvert] ++;
			ShowAdvertList(playerid);
		}
	 	case D_ADVERT_START: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, черга на оголошення зайнята, спробуйте пізніше");
			new text[100];
			GetPVarString(playerid,"advert",text,100);
			DeletePVar(playerid,"advert");
			new price = GetPVarInt(playerid,"ad_price");
			DeletePVar(playerid,"ad_price");
			if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			gAdvertCount ++;
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, черга на оголошення зайнята, спробуйте пізніше");
			GiveMoney(playerid,-price,"подача оголошення");
			gAdvert[slot][adMoney] = price;
			format(gAdvert[slot][adSender],24,"%s",player_name[playerid]);
			gAdvert[slot][adID] = playerid;
			gAdvert[slot][adPhone] = PlayerInfo[playerid][pPhone];
			format(gAdvert[slot][adText],100,"%s",text);
			gAdvert[slot][adBusy] = true;
			gAdvert[slot][adTime] = gAdvertTime;
			if(PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				gAdvert[slot][adVIP] = true;
			}
			gAdvertTime += 30;
			SetPVarInt(playerid, #pAdvertTime, gettime()+60);
			new mes[90];
			format(mes, sizeof mes, "[ ! ] Поступило нове оголошення від %s | Відредагуйте: /edit", gAdvert[slot][adSender]);
			SendFamilyMessage(fLSNEWS, 0x139BECFF, mes);
			SendFamilyMessage(fSFNEWS, 0x139BECFF, mes);
			SendFamilyMessage(fLVNEWS, 0x139BECFF, mes);
			SendOk(playerid,"Оголошення подано в редакцию. Очікуйте перевірку");
		}
		case D_DJMSG: {
			if(response) {
				if(DJlvl[playerid] < 1 ) return 1;
				new string[144];
				switch(listitem) 
				{
					case 0: {
						format(string, sizeof(string), "[DJ] Насолоджуйтеся прямим ефіром від rDJ %s прямо зараз! ", DJname[playerid]);
						SendClientMessageToAll(0xFFCD00AA,string);
						format(string, sizeof(string), "[DJ] Для прослуховування радіо введіть /play та підключіться до Samp Ukraine RADIO");
						SendClientMessageToAll(0xFFCD00AA,string);

					} 
					case 1:{
				
						format(string, sizeof(string), "[DJ] Проводіть час із задоволенням з нашою музикою! Підключайтесь до нас /play > 1.Samp Ukraine RADIO");
						SendClientMessageToAll(0xFFCD00AA,string);
					}
					case 2:
					{
				
						format(string, sizeof(string), "[DJ] Більше новин та музикальних постів, яких немає ніде! ТГ: Samp Ukraine");
						SendClientMessageToAll(0xFFCD00AA,string);
					}
					case 3:
					{
				
						format(string, sizeof(string), "[DJ] На форумв є інформація про стажування на радіо Samp Ukraine FM. Встигни подати свою заявку!");
						SendClientMessageToAll(0xFFCD00AA,string);
					}
					case 4:
					{
				
						format(string, sizeof(string), "[DJ] Хочеш стати радіоведущим? Пиши генеральному директору в телеграм - посилання");
						SendClientMessageToAll(0xFFCD00AA,string);
					}
				}
				DJmsg = gettime()+600;
			}
		}
		case D_ADMIN_PANEL: {
			if(response) {
				if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return 1;
				switch(listitem) {
                	case 0: pc_cmd_admins(playerid);
					case 1: pc_cmd_spawn(playerid,"");
					case 2: D(playerid,D_JOB,DSL,""YELLOW"Працевлаштування",""W"1. Автобусник\t\t\t\t| "YELLOW"2 лвл\n"W"2. Механік\t\t\t\t| "YELLOW"3 лвл\n"W"3. Развозчик їжі\t\t\t| "YELLOW"3 лвл\n"W"4. Розвізник продуктів/пального\t| "YELLOW"4 лвл\n"W"5. Мойщик доріг\t\t\t| "YELLOW"4 лвл\n"W"6. Газонокосильщик\t\t\t| "YELLOW"5 лвл", "Вибрати", "Закрити");
					case 3: pc_cmd_prisoners(playerid,"");
					case 4: pc_cmd_mutelist(playerid,"");
					case 5: PlayerInfo[playerid][pAdmMSG] = (!PlayerInfo[playerid][pAdmMSG])?(1):(0),UpdatePlayerData(playerid,"pAdmMSG",PlayerInfo[playerid][pAdmMSG]),pc_cmd_apanel(playerid,"");
					case 6: {
						PlayerInfo[playerid][pAdmKL] = (!PlayerInfo[playerid][pAdmKL])?(1):(0),UpdatePlayerData(playerid,"pAdmKL",PlayerInfo[playerid][pAdmKL]),pc_cmd_apanel(playerid,"");
						//for(new num; num < 10; num++) SendDeathMessageToPlayer(playerid,6000,5005, 255);
					}
					case 7: {
						if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
						new frac_online[MAX_FRACTIONS+1];
						foreach(new i:Player) {
							if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
							if(!PlayerInfo[i][pMember]) continue;
							switch(PlayerInfo[i][pMember]) {
								case fLSPD: frac_online[fLSPD] ++;
								case fSFPD: frac_online[fSFPD] ++;
								case fLVPD: frac_online[fLVPD] ++;
								case fFBI: frac_online[fFBI] ++;
								case fMAYOR: frac_online[fMAYOR] ++;
								case fARMYSF: frac_online[fARMYSF] ++;
								case fARMYLV: frac_online[fARMYLV] ++;
								case fMEDICLS: frac_online[fMEDICLS] ++;
								case fMEDICSF: frac_online[fMEDICSF] ++;
								case fMEDICLV: frac_online[fMEDICLV] ++;
								case fLSNEWS: frac_online[fLSNEWS] ++;
								case fSFNEWS: frac_online[fSFNEWS] ++;
								case fLVNEWS: frac_online[fLVNEWS] ++;
								case fINSTRUCTORS: frac_online[fINSTRUCTORS] ++;
								case fLCN: frac_online[fLCN] ++;
								case fYAKUZA: frac_online[fYAKUZA] ++;
								case fRM: frac_online[fRM] ++;
								case fBALLAS: frac_online[fBALLAS] ++;
								case fVAGOS: frac_online[fVAGOS] ++;
								case fGROVE: frac_online[fGROVE] ++;
								case fAZTEC: frac_online[fAZTEC] ++;
								case fRIFA: frac_online[fRIFA] ++;
								case fWHITEHOUSE: frac_online[fWHITEHOUSE] ++;
							}
						}
						static const f_str[] = "\
Фракція\tГравці\nПоліція ЛС\t%d\nПоліція СФ\t%d\nПоліція ЛВ\t%d\nФБР\t%d\n\
Мерія\t%d\nАрмія СФ\t%d\nАрмія ЛВ\t%d\n\
Лікарня ЛС\t%d\nЛікарня СФ\t%d\nЛікарня ЛВ\t%d\n\
Радіоцентр ЛС\t%d\nРадіоцентр СФ\t%d\nРадіоцентр ЛВ\t%d\n\
Автошкола\t%d\nІталійська мафія\t%d\nЯпонська мафія\t%d\n\
Українська мафія\t%d\nThe Ballas\t%d\nThe Vagos\t%d\n\
The Grove\t%d\nThe Aztec\t%d\nThe Rifa\t%d\nБілий дім\t%d\nНотаріус\t%d";
						new string[sizeof(f_str) +1 + (30)];
						format(string,sizeof(string),f_str,frac_online[fLSPD],frac_online[fSFPD],frac_online[fLVPD],frac_online[fFBI],frac_online[fMAYOR],frac_online[fARMYSF],frac_online[fARMYLV],frac_online[fMEDICLS],frac_online[fMEDICSF],frac_online[fMEDICLV],
															frac_online[fLSNEWS],frac_online[fSFNEWS],frac_online[fLVNEWS],frac_online[fINSTRUCTORS],frac_online[fLCN],frac_online[fYAKUZA],frac_online[fRM],frac_online[fBALLAS],frac_online[fVAGOS],frac_online[fGROVE],
															frac_online[fAZTEC],frac_online[fRIFA],frac_online[fWHITEHOUSE]);
						D(playerid, D_AMEMBERS, DSTH, "Онлайн організацій", string, "Закрити", "");
						
					}
					case 8: {
						if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return 1;
						if(!IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid,"Ви не в транспорті"),pc_cmd_apanel(playerid,"");
						pc_cmd_fv(playerid,"");
					}
					case 9: pc_cmd_awarehouse(playerid,"");
					case 10: {
						if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return 1;
						new year[8], month[8], day[8], hour[8], minute[8], second[8];
						if(fracmoroz[0] >= unix) {
							timestamp_to_date(fracmoroz[0]-unix, year[0], month[0], day[0], hour[0], minute[0], second[0]);
						}
						else hour[0] = minute[0] = second[0] = 0;
						if(fracmoroz[1] >= unix) {
							timestamp_to_date(fracmoroz[1]-unix, year[1], month[1], day[1], hour[1], minute[1], second[1]);
						}
						else hour[1] = minute[1] = second[1] = 0;
						if(fracmoroz[2] >= unix) {
							timestamp_to_date(fracmoroz[2]-unix, year[2], month[2], day[2], hour[2], minute[2], second[2]);
						}
						else hour[2] = minute[2] = second[2] = 0;
						if(fracmoroz[3] >= unix) {
							timestamp_to_date(fracmoroz[3]-unix, year[3], month[3], day[3], hour[3], minute[3], second[3]);
						}
						else hour[3] = minute[3] = second[3] = 0;
						if(fracmoroz[4] >= unix) {
							timestamp_to_date(fracmoroz[4]-unix, year[4], month[4], day[4], hour[4], minute[4], second[4]);
						}
						else hour[4] = minute[4] = second[4] = 0;
						if(fracmoroz[5] >= unix) {
							timestamp_to_date(fracmoroz[5]-unix, year[5], month[5], day[5], hour[5], minute[5], second[5]);
						}
						else hour[5] = minute[5] = second[5] = 0;
						if(fracmoroz[6] >= unix) {
							timestamp_to_date(fracmoroz[6]-unix, year[6], month[6], day[6], hour[6], minute[6], second[6]);
						}
						else hour[6] = minute[6] = second[6] = 0;
						if(fracmoroz[7] >= unix) {
							timestamp_to_date(fracmoroz[7]-unix, year[7], month[7], day[7], hour[7], minute[7], second[7]);
						}
						else hour[7] = minute[7] = second[7] = 0;
						static const f_str[] = "\
"YELLOW"1."W" The Ballas\t\t\t"ORANGE"%dч %dмін %dсек\n\
"YELLOW"2."W" The Vagos\t\t"ORANGE"%dч %dмін %dсек\n\
"YELLOW"3."W" The Grove\t\t"ORANGE"%dч %dмін %dсек\n\
"YELLOW"4."W" The Rifa\t\t"ORANGE"%dч %dмін %dсек\n\
"YELLOW"5."W" The Aztec\t\t"ORANGE"%dч %dмін %dсек\n\
"YELLOW"6."W" Італьянська мафія\t\t"ORANGE"%dч %dмін %dсек\n\
"YELLOW"7."W" Японська мафія\t\t"ORANGE"%dч %dмін %dсек\n\
"YELLOW"8."W" Українська мафія\t\t\t"ORANGE"%dч %dмін %dсек";
						new string[sizeof(f_str) + 90];
						format(string,sizeof(string),f_str,hour[0], minute[0], second[0],hour[1], minute[1], second[1],hour[2], minute[2], second[2],hour[3], minute[3], second[3],
															hour[4], minute[4], second[4],hour[5], minute[5], second[5],hour[6], minute[6], second[6],hour[7], minute[7], second[7]);
						D(playerid,DIALOG_NONE,DST, "Інформація по заморозках", string, "Закрити", "");
					}
					case 11: {
						if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
						new names[24],string[450],rows;
					    new Cache:result = mysql_query(connects, "SELECT `Name` FROM `ban` ORDER BY `ID` DESC LIMIT 0 , 20");
					    cache_get_row_count(rows);
					    if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Список забаненных пуст");
					    FirstBL[playerid] = 0;
					    for(new i; i < rows; i ++) {
						    cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
					        format(string, sizeof(string), "%s%s\n", string, names);
					    }
					    if(rows == 20) format(string, sizeof(string), "%s{AFAFAF}Далі >>>\n", string);
						cache_delete(result);
					    if(!D(playerid, D_BAN_LIST, DSL, ""YELLOW"Забанні", string, "Вибрати", "Назад"))SendClientMessage(playerid, COLOR_GREY, "Недоступно в данный момент.");
					}
					case 12: {
						new string[3024],id = 0;
						string = ""YELLOW"Ник:\t"YELLOW"IP при регистрации\t"YELLOW"IP\n";
						foreach(new i:Player) {
							if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
							if(!GetString(player_ip[i],PlayerInfo[i][pIpReg])) format(string, sizeof(string), "%s"W"%s\tL-IP: %s\tR-IP: %s\n", string, player_name[i],PlayerInfo[i][pIpReg],player_ip[i]),id++;
						}
						if(id == 0) return ErrorMessage(playerid,"Можливо взламаних не знайдено");
						else D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Можливо взламані", string, "Закрити", "");
					}
					case 13: {
						if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
						new string[3200] = ""YELLOW"Місце розташування\t"YELLOW"Статус\t"YELLOW"Власник", str[124];
						for(new x; x<MAX_BILLBORDS; x++) {
							if(!BildInfo[x][bOwned]) format(str,124,"\n%s\t"GREEN"Вільний\t"GREEN"Відсутній",BildInfo[x][bPosText]);
							else format(str,124,"\n%s\t"NO"Арендован\t{f6f6d9}%s",BildInfo[x][bPosText],BildInfo[x][bOwner]);
							strcat(string,str);
						}
						return D(playerid,D_BILL_ADMIN,DSTH,""YELLOW"Моніторінг білбордів",string,"Вибрати","Закрити");
					}
					case 14: duels = (!duels)?(1):(0),UpdateOtherData("duels",casino),pc_cmd_apanel(playerid,"");
					case 15: {
						if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						dialog_anticheat(playerid);
					}
					case 16: {
						if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						casino = (!casino)?(1):(0),UpdateOtherData("casino",casino),pc_cmd_apanel(playerid,"");
					}
					case 17: {
						if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						rep_system = (!rep_system)?(1):(0),UpdateOtherData("rep_system",casino),pc_cmd_apanel(playerid,"");
					}
					case 18: {
						if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						FI[fBALLAS][fMats] = 300000,UpdateFraction(fBALLAS,"Mats",FI[fBALLAS][fMats]);
						FI[fVAGOS][fMats] = 300000,UpdateFraction(fVAGOS,"Mats",FI[fVAGOS][fMats]);
						FI[fGROVE][fMats] = 300000,UpdateFraction(fGROVE,"Mats",FI[fGROVE][fMats]);
						FI[fAZTEC][fMats] = 300000,UpdateFraction(fAZTEC,"Mats",FI[fAZTEC][fMats]);
						FI[fRIFA][fMats] = 300000,UpdateFraction(fRIFA,"Mats",FI[fRIFA][fMats]);

						FI[fLCN][fMats] = 300000,UpdateFraction(fLCN,"Mats",FI[fLCN][fMats]);
						FI[fYAKUZA][fMats] = 300000,UpdateFraction(fYAKUZA,"Mats",FI[fYAKUZA][fMats]);
						FI[fRM][fMats] = 300000,UpdateFraction(fRM,"Mats",FI[fRM][fMats]);
						SendOk(playerid,"Склади банд/мафій успішно поповнені");
					}
					case 19: {
						if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
						static const f_str[] =  ""YELLOW"Організація\t"YELLOW"Рівень вступу\nПоліція\t%d\nФБР\t%d\nАрмії\t%d\nЛікарня\t%d\nНовини\t%d\nМафії\t%d\nБанди\t%d\nБілий дім\t%d";
						new string[sizeof(f_str) +19];
						format(string,sizeof(string),f_str,invite_frac[0],invite_frac[1],invite_frac[2],invite_frac[3],invite_frac[4],invite_frac[5],invite_frac[6],invite_frac[7]);
						return D(playerid,D_ADMIN_INVITE,DSTH,""YELLOW"Ліміт Invite",string,"Вибрати","Закрити");
					}
					case 20: {
						if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
      					static const f_str[] = "\
"W"Збройний завод - Порт м. СФ\t\t\t"ORANGE"$%d\n\
"W"Лісопидка - Порт м. СФ\t\t"ORANGE"$%d\n\
"W"Лісопилка - Порт м. ЛС\t\t\t"ORANGE"$%d\n\
"W"Лісопилка - Збройний завод\t\t\t"ORANGE"$%d";
						new string[sizeof(f_str) + 40];
						format(string,sizeof(string),f_str,tk_unloading[0],tk_unloading[1],tk_unloading[2],tk_unloading[3]);
						D(playerid,D_ADMIN_TK,DST, "Далекобійники", string, "Змінити", "Відміна");
					}
					case 21: {
						if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						D(playerid, D_PROMO, DSL, ""YELLOW"Промокоди", ""YELLOW"1."W" Список промокодів\n"YELLOW"2."W" Створити промокод\n"YELLOW"3."W" Видалити промокод", "Вибрати", "Назад");
					}
					case 22: {
						if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						new str[3][20] = {"Відключені","Тільки для новачків","Для всіх"};
						static const f_str[] = "\
Бонуси\t\t\t"YELLOW"[%s]"W"\n\
Обмеження по рівню новачків\t\t"YELLOW"[%d рівень]"W"\n\
Керування бонусами";
						new string[sizeof(f_str) + 90];
						format(string,sizeof(string),f_str,str[BonusInfo[act_select]],BonusInfo[act_level]);
						D(playerid,D_ADMIN_OSNOVA,DST, "Бонуси", string, "Вибрати", "Відміна");
					}
					case 23: {
						if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						for(new i = 0; i < gBusinessCount; i ++) {
							if(gBusiness[i][bizzProdOrder] == 0) continue;
							gBusiness[i][bizzProduct] += gBusiness[i][bizzProdOrder];	
							gBusiness[i][bizzProdOrder] = 0;		
							gBusiness[i][bizzProdOrderPrice] = 0;
						}
						SendOk(playerid,"Продукти по бізнесам доставлені");
					}
					case 24: {
						if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						anti_tk = (!anti_tk)?(1):(0),UpdateOtherData("anti_tk",anti_tk),pc_cmd_apanel(playerid,"");
					}
					case 25: {
                        if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
                        D(playerid, DIALOG_VIPSYS, DSL, ""YELLOW"Настройка VIP-рівнів", ""YELLOW"1. "W"VIP \"Базовый\"\n"YELLOW"2. "W"VIP \"Беззаконник\"\n"YELLOW"3. "W"VIP \"Початковий\"\n"YELLOW"4. "W"VIP \"Бронзовий\"\n"YELLOW"5. "W"VIP \"Срібний\"\n"YELLOW"6. "W"VIP \"Золотий\"\n"YELLOW"7. "W"VIP \"Платиновий\"\n"YELLOW"8. "W"VIP \"Екстра\"", "Вибрати", "Відміна");
					}
					case 26: {
                        if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
                        D(playerid, DIALOG_STARTBONUS, DSL, ""YELLOW"Настройка стартового бонуса", ""YELLOW"1. "W"Кількість грошей\n"YELLOW"2. "W"Початковий рівень", "Вибрати", "Відміна");
					}
					case 27: {
                        if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return 1;
						OthersInfo[show_update] = (!OthersInfo[show_update])?(1):(0),UpdateOtherData("show_update",OthersInfo[show_update]),pc_cmd_apanel(playerid,"");
					}
				}
			}
		}
		case DIALOG_STARTBONUS: {
			if(!response) return pc_cmd_apanel(playerid, "");
			//new query[80];
			/*mysql_format(connects, query, sizeof(query), "ALTER TABLE "TABLE_ACCOUNTS" CHANGE `pLevel` int(11) NOT NULL DEFAULT '%d'",strlen(inputtext));
			mysql_tquery(connects, query, "", "");
			SendEsp(playerid, "Ви успішно змінили стартовий рівень при реєстрації.");*/
			/*mysql_format(connects, query, sizeof(query), "ALTER TABLE "TABLE_ACCOUNTS" CHANGE `pCash` int(11) NOT NULL DEFAULT '%d'",strlen(inputtext));
			mysql_tquery(connects, query, "", "");
			SendEsp(playerid, "Ви успішно змінили стартову кількість грошей при реєстрації.");*/
			new string[200], level, money;
			switch(listitem) {
				case 0:	{
				    new rows;
				    new Cache:result = mysql_query(connects, "SELECT `start_money` FROM `others`");
				    cache_get_row_count(rows);
				    if(rows)
					{
                        cache_get_value_name_int(0, "start_money",money);
                        format(string, sizeof(string), "\n"W"Початкова кількість грошей при реєстрації: $%d\n\n"W"Формат вводу: 1000000\n"W"Введіть нову кількість грошей при реєстрації:", money);
						D(playerid, DIALOG_STARTBONUS_1, DIALOG_STYLE_INPUT, ""YELLOW"Стартова кількість грошей при реєстрації", string, "Далі", "Відміна");
					}
					cache_delete(result);
				}
				case 1: {
					new rows;
				    new Cache:result = mysql_query(connects, "SELECT `start_level` FROM `others`");
				    cache_get_row_count(rows);
				    if(rows)
					{
					    cache_get_value_name_int(0, "start_level",level);
                        format(string, sizeof(string), "\n"W"Початковий рівень при реєстрації: %d рівень\n\n"W"Формат вводу: 15\n"W"Введіть новий рівень при реєстрації:", level);
						D(playerid, DIALOG_STARTBONUS_2, DIALOG_STYLE_INPUT, ""YELLOW"Стартовий рівень при реєстрації", string, "Далі", "Відміна");
					}
					cache_delete(result);
				}
			}
		}
		case DIALOG_STARTBONUS_1: {
			if(!response) return pc_cmd_apanel(playerid, "");
			if(isNumeric(inputtext)) return ErrorMessage(playerid, "Вводить можно только цифры!");
			if(strval(inputtext) > 1000000000) return ErrorMessage(playerid, "Можно Поставити бонус не більше $1.000.000.000!");
			new query[128];
			format(query, sizeof(query), "ALTER TABLE `accounts` ALTER `pCash` SET DEFAULT '%d'", strval(inputtext));
			mysql_tquery(connects, query, "", "");
			UpdateOtherData("start_money", strval(inputtext));
			OthersInfo[start_money] = strval(inputtext);
			ErrorMessage(playerid, "Ви успішно змінили стартову кількість грошей при реєстрації.");
		}
		case DIALOG_STARTBONUS_2: {
			if(!response) return pc_cmd_apanel(playerid, "");
			if(isNumeric(inputtext)) return ErrorMessage(playerid, "Вводити можно тільки цифри!");
			if(strval(inputtext) > 100) return ErrorMessage(playerid, "Можно Поставити бонус не більше 100 рівня!");
			new query[128];
			format(query, sizeof(query), "ALTER TABLE `accounts` ALTER `pLevel` SET DEFAULT '%d'", strval(inputtext));
			mysql_tquery(connects, query, "", "");
			UpdateOtherData("start_level", strval(inputtext));
			OthersInfo[start_level] = strval(inputtext);
			ErrorMessage(playerid, "Ви успішно змінили стартовий рівень при реєстрації.");
		}
		case D_ADMIN_INVITE: {
			if(!response) return 1;
			SetPVarInt(playerid,"invite_admin",listitem);
			D(playerid,D_ADMIN_INVITE_2,DSI, ""YELLOW"Ограничение Invite","\n\n"W"Введіть обмеження на INVITE гравців в организацию:\n\n"NO"*{f6f6d9} Від 1 до 8\n\n","Змінити", "Відміна");
		}
		case D_ADMIN_INVITE_2: {
			if(!response) return DeletePVar(playerid,"invite_admin");
			if(strval(inputtext) < 1 || strval(inputtext) > 8) {
				D(playerid,D_ADMIN_INVITE_2,DSI, ""YELLOW"Обмеження Invite","\n\n"W"Введіть обмеження на INVITE гравців в организацию:\n\n"NO"*{f6f6d9} Від 1 до 8\n\n","Змінити", "Відміна");
				return 1;
			}
			invite_frac[GetPVarInt(playerid,"invite_admin")] = strval(inputtext);

			new query[90];
			format(query,sizeof(query),"UPDATE `others` SET `invite_frac%d` = '%d' LIMIT 1",GetPVarInt(playerid,"invite_admin"),invite_frac[GetPVarInt(playerid,"invite_admin")]);
			mysql_tquery(connects, query);

			DeletePVar(playerid,"invite_admin");
			SendOk(playerid,"Обмеження встановлено");
		}
     	case D_ADMIN_OSNOVA: {
     		if(!response) return 1;
            switch(listitem) {
				case 0: {
					BonusInfo[act_select] = (BonusInfo[act_select] == 0) ? 1 : (BonusInfo[act_select] == 1) ? 2 : 0;
					UpdateBonuses("act_select",BonusInfo[act_select]);
					if(!BonusInfo[act_select]) SendRconCommand("hostname "HostName"");
					else if(BonusInfo[act_select] == 1) SendRconCommand("hostname "HostName" x2");
					else SendRconCommand("hostname "HostName" x2");
				}
				case 1: {
					BonusInfo[act_level] = (BonusInfo[act_level] == 3) ? 5 : (BonusInfo[act_level] == 5) ? 7 : 3;
					UpdateBonuses("act_level",BonusInfo[act_level]);
				}
				case 2: return dialog_bonuses(playerid);
            }
			new str[3][20] = {"Отключены","Тільки для новачків","Для всех"};
			static const f_str[] = "\
Бонуси\t\t\t"YELLOW"[%s]"W"\n\
Обмеження по рівню новичків\t\t"YELLOW"[%d рівень]"W"\n\
Керування бонусами";
			new string[sizeof(f_str) + 90];
			format(string,sizeof(string),f_str,str[BonusInfo[act_select]],BonusInfo[act_level]);
			D(playerid,D_ADMIN_OSNOVA,DST, "Бонуси", string, "Вибрати", "Відміна");
		}
		case D_BONUSES: {
     		if(!response) return 1;
            switch(listitem) {
				case 0: {
					BonusInfo[act_exp] = (BonusInfo[act_exp] == 1) ? 2 : (BonusInfo[act_exp] == 2) ? 3 : 1;
					UpdateBonuses("act_exp",BonusInfo[act_exp]);
				}
				case 1: {
					BonusInfo[act_skill] = (BonusInfo[act_skill] == 1) ? 2 : (BonusInfo[act_skill] == 2) ? 3 : 1;
					UpdateBonuses("act_skill",BonusInfo[act_skill]);
				}
				case 2: {
					BonusInfo[act_sport] = (BonusInfo[act_sport] == 1) ? 2 : (BonusInfo[act_sport] == 2) ? 3 : 1;
					UpdateBonuses("act_sport",BonusInfo[act_sport]);
				}
				case 3: {
					BonusInfo[act_mp] = (BonusInfo[act_mp] == 1) ? 2 : (BonusInfo[act_mp] == 2) ? 3 : 1;
					UpdateBonuses("act_mp",BonusInfo[act_mp]);
				}
				case 4: {
					BonusInfo[act_gun] = (BonusInfo[act_gun] == 1) ? 2 : (BonusInfo[act_gun] == 2) ? 3 : 1;
					UpdateBonuses("act_gun",BonusInfo[act_gun]);
				}
				case 5: {
					BonusInfo[act_fish] = (BonusInfo[act_fish] == 1) ? 2 : (BonusInfo[act_fish] == 2) ? 3 : 1;
					UpdateBonuses("act_fish",BonusInfo[act_fish]);
				}
				case 6: {
					BonusInfo[act_renthotel] = (BonusInfo[act_renthotel] == 0) ? 3 : (BonusInfo[act_renthotel] == 3) ? 5 : (BonusInfo[act_renthotel] == 5) ? 10 : 0;
					UpdateBonuses("act_renthotel",BonusInfo[act_renthotel]);
				}
				case 7: {
					BonusInfo[act_buyskin] = (BonusInfo[act_buyskin] == 0) ? 3 : (BonusInfo[act_buyskin] == 3) ? 5 : (BonusInfo[act_buyskin] == 5) ? 10 : 0;
					UpdateBonuses("act_buyskin",BonusInfo[act_buyskin]);
				}
				case 8: {
					BonusInfo[act_buycar] = (BonusInfo[act_buycar] == 0) ? 3 : (BonusInfo[act_buycar] == 3) ? 5 : (BonusInfo[act_buycar] == 5) ? 10 : 0;
					UpdateBonuses("act_buycar",BonusInfo[act_buycar]);
				}
				case 9: {
					BonusInfo[act_rentcar] = (BonusInfo[act_rentcar] == 0) ? 3 : (BonusInfo[act_rentcar] == 3) ? 5 : (BonusInfo[act_rentcar] == 5) ? 10 : 0;
					UpdateBonuses("act_rentcar",BonusInfo[act_rentcar]);
				}
				case 10: {
					BonusInfo[act_buylic] = (BonusInfo[act_buylic] == 0) ? 3 : (BonusInfo[act_buylic] == 3) ? 5 : (BonusInfo[act_buylic] == 5) ? 10 : 0;
					UpdateBonuses("act_buylic",BonusInfo[act_buylic]);
				}
				case 11: {
					BonusInfo[act_buyimprove] = (BonusInfo[act_buyimprove] == 0) ? 3 : (BonusInfo[act_buyimprove] == 3) ? 5 : (BonusInfo[act_buyimprove] == 5) ? 10 : 0;
					UpdateBonuses("act_buyimprove",BonusInfo[act_buyimprove]);
				}
				case 12: {
					BonusInfo[act_disease] = (BonusInfo[act_disease] == 0) ? 3 : (BonusInfo[act_disease] == 3) ? 5 : (BonusInfo[act_disease] == 5) ? 10 : 0;
					UpdateBonuses("act_disease",BonusInfo[act_disease]);
				}
				case 13: {
					BonusInfo[act_changesex] = (BonusInfo[act_changesex] == 0) ? 3 : (BonusInfo[act_changesex] == 3) ? 5 : (BonusInfo[act_changesex] == 5) ? 10 : 0;
					UpdateBonuses("act_changesex",BonusInfo[act_changesex]);
				}
				case 14: {
					BonusInfo[act_medcard] = (BonusInfo[act_medcard] == 0) ? 3 : (BonusInfo[act_medcard] == 3) ? 5 : (BonusInfo[act_medcard] == 5) ? 10 : 0;
					UpdateBonuses("act_medcard",BonusInfo[act_medcard]);
				}
				case 15: {
					BonusInfo[act_buynubmbercar] = (BonusInfo[act_buynubmbercar] == 0) ? 3 : (BonusInfo[act_buynubmbercar] == 3) ? 5 : (BonusInfo[act_buynubmbercar] == 5) ? 10 : 0;
					UpdateBonuses("act_buynubmbercar",BonusInfo[act_buynubmbercar]);
				}
				case 16: {
					BonusInfo[act_perfomance] = (BonusInfo[act_perfomance] == 0) ? 3 : (BonusInfo[act_perfomance] == 3) ? 5 : (BonusInfo[act_perfomance] == 5) ? 10 : 0;
					UpdateBonuses("act_perfomance",BonusInfo[act_perfomance]);
				}
				case 17: {
					BonusInfo[act_tune] = (BonusInfo[act_tune] == 0) ? 3 : (BonusInfo[act_tune] == 3) ? 5 : (BonusInfo[act_tune] == 5) ? 10 : 0;
					UpdateBonuses("act_tune",BonusInfo[act_tune]);
				}
				case 18: {
					BonusInfo[act_timerullet] = (BonusInfo[act_timerullet] == 180) ? 150 : (BonusInfo[act_timerullet] == 150) ? 120 : (BonusInfo[act_timerullet] == 120) ? 100 : 180;
					UpdateBonuses("act_timerullet",BonusInfo[act_timerullet]);
				}
				case 19: {
					BonusInfo[act_promocode] = (BonusInfo[act_promocode] == 1) ? 2 : (BonusInfo[act_promocode] == 2) ? 3 : 1;
					UpdateBonuses("act_promocode",BonusInfo[act_promocode]);
				}
				case 20: {
					BonusInfo[act_payday] = (BonusInfo[act_payday] == 1) ? 2 : (BonusInfo[act_payday] == 2) ? 3 : 1;
					UpdateBonuses("act_payday",BonusInfo[act_payday]);
				}
				case 21: {
					BonusInfo[act_donate] = (BonusInfo[act_donate] == 1) ? 2 : (BonusInfo[act_donate] == 2) ? 3 : 1;
					UpdateBonuses("act_donate",BonusInfo[act_donate]);
				}
            }
			dialog_bonuses(playerid);
		}
		case DIALOG_VIPSYS: {
            if(!response) return 1;
            switch(listitem) {
				case 0: {
                    SetPVarInt(playerid, "vip_id", VIP_NONE);
					dialog_vip(playerid, GetPVarInt(playerid, "vip_id"));
				}
				case 1: {
					SetPVarInt(playerid, "vip_id", VIP_BAZE);
					dialog_vip(playerid, GetPVarInt(playerid, "vip_id"));
				}
				case 2: {
					SetPVarInt(playerid, "vip_id", VIP_SILVER);
					dialog_vip(playerid, GetPVarInt(playerid, "vip_id"));
				}
				case 3: {
					SetPVarInt(playerid, "vip_id", VIP_GOLD);
					dialog_vip(playerid, GetPVarInt(playerid, "vip_id"));
				}
				case 4: {
					SetPVarInt(playerid, "vip_id", VIP_PLATINA);
					dialog_vip(playerid, GetPVarInt(playerid, "vip_id"));
				}
				case 5: {
					SetPVarInt(playerid, "vip_id", VIP_ECSCLUSIVE);
					dialog_vip(playerid, GetPVarInt(playerid, "vip_id"));
				}
				case 6: {
					SetPVarInt(playerid, "vip_id", VIP_FOREVER);
					dialog_vip(playerid, GetPVarInt(playerid, "vip_id"));
				}
				case 7: {
					SetPVarInt(playerid, "vip_id", VIP_KING);
					dialog_vip(playerid, GetPVarInt(playerid, "vip_id"));
				}
			}
		}
		case DIALOG_VIPSYSS: {
			if(!response) {
				DeletePVar(playerid, "vip_id");
				return 1;
			}
			new vip_id = GetPVarInt(playerid, "vip_id");
			switch(listitem) {
				case 0: {
					vip_status[vip_id][vip_payday] = (vip_status[vip_id][vip_payday] == 1) ? 2 : (vip_status[vip_id][vip_payday] == 2) ? 3 : (vip_status[vip_id][vip_payday] == 3) ? 4 : (vip_status[vip_id][vip_payday] == 4) ? 5 : 1 ;
					UpdateVIP("vip_payday",vip_status[vip_id][vip_payday], vip_id);
				}
				case 1: {
           			vip_status[vip_id][vip_afk] = (vip_status[vip_id][vip_afk] == 1200) ? 1800 : (vip_status[vip_id][vip_afk] == 1800) ? 2400 : (vip_status[vip_id][vip_afk] == 2400) ? 3000 : (vip_status[vip_id][vip_afk] == 3000) ? 3600 : 1200;
					UpdateVIP("vip_afk",vip_status[vip_id][vip_afk], vip_id);
				}
				case 2: {
					vip_status[vip_id][vip_carlic] = (vip_status[vip_id][vip_carlic] == 0) ? 1 : 0;
					UpdateVIP("vip_carlic",vip_status[vip_id][vip_carlic], vip_id);
				}
				case 3: {
					vip_status[vip_id][vip_lvl] = (vip_status[vip_id][vip_lvl] == 0) ? 5000 : (vip_status[vip_id][vip_lvl] == 5000) ? 10000 : (vip_status[vip_id][vip_lvl] == 10000) ? 15000 : (vip_status[vip_id][vip_lvl] == 15000) ? 20000 : (vip_status[vip_id][vip_lvl] == 20000) ? 25000 : (vip_status[vip_id][vip_lvl] == 25000) ? 30000 : 5000;
					UpdateVIP("vip_lvl",vip_status[vip_id][vip_lvl], vip_id);
				}
				case 4: {
					vip_status[vip_id][vip_healtime] = (vip_status[vip_id][vip_healtime] == 1) ? 2 : (vip_status[vip_id][vip_healtime] == 2) ? 3 : (vip_status[vip_id][vip_healtime] == 3) ? 4 : (vip_status[vip_id][vip_healtime] == 4) ? 5 : 1 ;
					UpdateVIP("vip_healtime",vip_status[vip_id][vip_healtime], vip_id);
				}
				case 5: {
					vip_status[vip_id][vip_arrest] = (vip_status[vip_id][vip_arrest] == 1) ? 2 : (vip_status[vip_id][vip_arrest] == 2) ? 3 : (vip_status[vip_id][vip_arrest] == 3) ? 4 : (vip_status[vip_id][vip_arrest] == 4) ? 5 : 1 ;
					UpdateVIP("vip_arrest",vip_status[vip_id][vip_arrest], vip_id);
				}
				case 6: {
					vip_status[vip_id][vip_mute] = (vip_status[vip_id][vip_mute] == 1) ? 2 : (vip_status[vip_id][vip_mute] == 2) ? 3 : (vip_status[vip_id][vip_mute] == 3) ? 4 : (vip_status[vip_id][vip_mute] == 4) ? 5 : 1 ;
					UpdateVIP("vip_mute",vip_status[vip_id][vip_mute], vip_id);
				}
				case 7: {
					vip_status[vip_id][vip_admins] = (vip_status[vip_id][vip_admins] == 0) ? 1 : 0;
					UpdateVIP("vip_admins",vip_status[vip_id][vip_admins], vip_id);
				}
				case 8: {
					vip_status[vip_id][vip_mask_time] = (vip_status[vip_id][vip_mask_time] == 10) ? 15 : (vip_status[vip_id][vip_mask_time] == 15) ? 20 : (vip_status[vip_id][vip_mask_time] == 20) ? 25 : (vip_status[vip_id][vip_mask_time] == 25) ? 30 : 10 ;
					UpdateVIP("vip_mask_time",vip_status[vip_id][vip_mask_time], vip_id);
				}
				case 9: {
					vip_status[vip_id][vip_armmats] = (vip_status[vip_id][vip_armmats] == 1) ? 2 : (vip_status[vip_id][vip_armmats] == 2) ? 3 : (vip_status[vip_id][vip_armmats] == 3) ? 4 : (vip_status[vip_id][vip_armmats] == 4) ? 5 : 1 ;
					UpdateVIP("vip_armmats",vip_status[vip_id][vip_armmats], vip_id);
				}
				case 10: {
					vip_status[vip_id][vip_search] = (vip_status[vip_id][vip_search] == 1) ? 2 : (vip_status[vip_id][vip_search] == 2) ? 3 : 1 ;
					UpdateVIP("vip_search",vip_status[vip_id][vip_search], vip_id);
				}
				case 11: {
					vip_status[vip_id][vip_heal] = (vip_status[vip_id][vip_heal] == 5) ? 10 : (vip_status[vip_id][vip_heal] == 10) ? 15 : (vip_status[vip_id][vip_heal] == 15) ? 20 : (vip_status[vip_id][vip_heal] == 20) ? 25 : 5 ;
					UpdateVIP("vip_heal",vip_status[vip_id][vip_heal], vip_id);
				}
				case 12: {
					vip_status[vip_id][vip_mask] = (vip_status[vip_id][vip_mask] == 5) ? 10 : (vip_status[vip_id][vip_mask] == 10) ? 15 : (vip_status[vip_id][vip_mask] == 15) ? 20 : (vip_status[vip_id][vip_mask] == 20) ? 25 : 5 ;
					UpdateVIP("vip_mask",vip_status[vip_id][vip_mask], vip_id);
				}
				case 13: {
					vip_status[vip_id][vip_fuel] = (vip_status[vip_id][vip_fuel] == 1) ? 2 : (vip_status[vip_id][vip_fuel] == 2) ? 3 : (vip_status[vip_id][vip_fuel] == 3) ? 4 : (vip_status[vip_id][vip_fuel] == 4) ? 5 : (vip_status[vip_id][vip_fuel] == 5) ? 10 : (vip_status[vip_id][vip_fuel] == 10) ? 20 : 1 ;
					UpdateVIP("vip_fuel",vip_status[vip_id][vip_fuel], vip_id);
				}
				case 14: {
					vip_status[vip_id][vip_jimmy] = (vip_status[vip_id][vip_jimmy] == 3) ? 4 : (vip_status[vip_id][vip_jimmy] == 4) ? 5 : (vip_status[vip_id][vip_jimmy] == 5) ? 6 : (vip_status[vip_id][vip_jimmy] == 6) ? 7 : (vip_status[vip_id][vip_jimmy] == 7) ? 10 : (vip_status[vip_id][vip_jimmy] == 10) ? 15 : (vip_status[vip_id][vip_jimmy] == 15) ? 20 : 1 ;
					UpdateVIP("vip_jimmy",vip_status[vip_id][vip_jimmy], vip_id);
				}
				case 15: {
					vip_status[vip_id][vip_mats] = (vip_status[vip_id][vip_mats] == 500) ? 1000 : (vip_status[vip_id][vip_mats] == 1000) ? 1500 : (vip_status[vip_id][vip_mats] == 1500) ? 2000 : (vip_status[vip_id][vip_mats] == 2000) ? 2500 : (vip_status[vip_id][vip_mats] == 2500) ? 5000 : (vip_status[vip_id][vip_mats] == 5000) ? 10000 : 1;
					UpdateVIP("vip_mats",vip_status[vip_id][vip_mats], vip_id);
				}
				case 16: {
					vip_status[vip_id][vip_drugs] = (vip_status[vip_id][vip_drugs] == 50) ? 100 : (vip_status[vip_id][vip_drugs] == 100) ? 200 : (vip_status[vip_id][vip_drugs] == 200) ? 300 : (vip_status[vip_id][vip_drugs] == 300) ? 400 : (vip_status[vip_id][vip_drugs] == 400) ? 500 : 50;
					UpdateVIP("vip_drugs",vip_status[vip_id][vip_drugs], vip_id);
				}
				case 17: {
					vip_status[vip_id][vip_satiety] = (vip_status[vip_id][vip_satiety] == 0.2) ? 0.3 : (vip_status[vip_id][vip_satiety] == 0.3) ? 0.4 : (vip_status[vip_id][vip_satiety] == 0.5) ? 0.6 : (vip_status[vip_id][vip_satiety] == 0.6) ? 0.8 : (vip_status[vip_id][vip_satiety] == 0.8) ? 1.0 : 0.2 ;
					UpdateVIP("vip_satiety",_:vip_status[vip_id][vip_satiety], vip_id);
				}
				case 18: {
					vip_status[vip_id][vip_fam_point] = (vip_status[vip_id][vip_fam_point] == 0) ? 5 : (vip_status[vip_id][vip_fam_point] == 5) ? 10 : (vip_status[vip_id][vip_fam_point] == 10) ? 15 : (vip_status[vip_id][vip_fam_point] == 15) ? 20 : (vip_status[vip_id][vip_fam_point] == 20) ? 30 : 0 ;
					UpdateVIP("vip_fam_point",vip_status[vip_id][vip_fam_point], vip_id);
				}
				case 19: {
					vip_status[vip_id][vip_transfer_bank] = (vip_status[vip_id][vip_transfer_bank] == 5000000) ? 6000000 : (vip_status[vip_id][vip_transfer_bank] == 6000000) ? 7000000 : (vip_status[vip_id][vip_transfer_bank] == 7000000) ? 8000000 : (vip_status[vip_id][vip_transfer_bank] == 8000000) ? 9000000 : (vip_status[vip_id][vip_transfer_bank] == 9000000) ? 10000000 : 5000000 ;
					UpdateVIP("vip_transfer_bank",vip_status[vip_id][vip_transfer_bank], vip_id);
				}
				case 20: {
					vip_status[vip_id][vip_percent_job] = (vip_status[vip_id][vip_percent_job] == 0) ? 5 : (vip_status[vip_id][vip_percent_job] == 5) ? 10 : (vip_status[vip_id][vip_percent_job] == 10) ? 15 : (vip_status[vip_id][vip_percent_job] == 15) ? 20 : (vip_status[vip_id][vip_percent_job] == 20) ? 25 : (vip_status[vip_id][vip_percent_job] == 25) ? 30 : 0;
					UpdateVIP("vip_percent_job",vip_status[vip_id][vip_percent_job], vip_id);
				}
				case 21: {
					vip_status[vip_id][vip_percent_startjob] = (vip_status[vip_id][vip_percent_startjob] == 0) ? 5 : (vip_status[vip_id][vip_percent_startjob] == 5) ? 10 : (vip_status[vip_id][vip_percent_startjob] == 10) ? 15 : (vip_status[vip_id][vip_percent_startjob] == 15) ? 20 : (vip_status[vip_id][vip_percent_startjob] == 20) ? 25 : (vip_status[vip_id][vip_percent_startjob] == 25) ? 30 : 0;
					UpdateVIP("vip_percent_startjob",vip_status[vip_id][vip_percent_startjob], vip_id);
				}
				case 22: {
					vip_status[vip_id][vip_flylic] = (vip_status[vip_id][vip_flylic] == 0) ? 1 : 0;
					UpdateVIP("vip_flylic",vip_status[vip_id][vip_flylic], vip_id);
				}
				case 23: {
					vip_status[vip_id][vip_fixcar] = (vip_status[vip_id][vip_fixcar] == 0) ? 1 : 0;
					UpdateVIP("vip_fixcar",vip_status[vip_id][vip_fixcar], vip_id);
				}
				case 24: {
					vip_status[vip_id][vip_hotel] = (vip_status[vip_id][vip_hotel] == 1) ? 2 : (vip_status[vip_id][vip_hotel] == 2) ? 3 : (vip_status[vip_id][vip_hotel] == 3) ? 4 : (vip_status[vip_id][vip_hotel] == 4) ? 5 : (vip_status[vip_id][vip_hotel] == 5) ? 10 : (vip_status[vip_id][vip_hotel] == 10) ? 15 : 1;
					UpdateVIP("vip_hotel",vip_status[vip_id][vip_hotel], vip_id);
				}
				case 25: {
					vip_status[vip_id][vip_chose] = (vip_status[vip_id][vip_chose] == 1) ? 2 : (vip_status[vip_id][vip_chose] == 2) ? 3 : (vip_status[vip_id][vip_chose] == 3) ? 4 : (vip_status[vip_id][vip_chose] == 4) ? 5 : (vip_status[vip_id][vip_chose] == 5) ? 10 : (vip_status[vip_id][vip_chose] == 10) ? 15 : 1;
					UpdateVIP("vip_chose",vip_status[vip_id][vip_chose], vip_id);
				}
				case 26: {
					vip_status[vip_id][vip_buycar] = (vip_status[vip_id][vip_buycar] == 5) ? 10 : (vip_status[vip_id][vip_buycar] == 10) ? 15 : (vip_status[vip_id][vip_buycar] == 15) ? 20 : (vip_status[vip_id][vip_buycar] == 20) ? 25 : (vip_status[vip_id][vip_buycar] == 25) ? 30 : 5;
					UpdateVIP("vip_buycar",vip_status[vip_id][vip_buycar], vip_id);
				}
				case 27: {
					vip_status[vip_id][vip_rentcar] = (vip_status[vip_id][vip_rentcar] == 5) ? 10 : (vip_status[vip_id][vip_rentcar] == 10) ? 15 : (vip_status[vip_id][vip_rentcar] == 15) ? 20 : (vip_status[vip_id][vip_rentcar] == 20) ? 25 : (vip_status[vip_id][vip_rentcar] == 25) ? 30 : 5;
					UpdateVIP("vip_rentcar",vip_status[vip_id][vip_rentcar], vip_id);
				}
				case 28: {
					vip_status[vip_id][vip_houseupdate] = (vip_status[vip_id][vip_houseupdate] == 5) ? 10 : (vip_status[vip_id][vip_houseupdate] == 10) ? 15 : (vip_status[vip_id][vip_houseupdate] == 15) ? 20 : (vip_status[vip_id][vip_houseupdate] == 20) ? 25 : (vip_status[vip_id][vip_houseupdate] == 25) ? 30 : 5;
					UpdateVIP("vip_houseupdate",vip_status[vip_id][vip_houseupdate], vip_id);
				}
				case 29: {
					vip_status[vip_id][vip_changesex] = (vip_status[vip_id][vip_changesex] == 5) ? 10 : (vip_status[vip_id][vip_changesex] == 10) ? 15 : (vip_status[vip_id][vip_changesex] == 15) ? 20 : (vip_status[vip_id][vip_changesex] == 20) ? 25 : (vip_status[vip_id][vip_changesex] == 25) ? 30 : 5;
					UpdateVIP("vip_changesex",vip_status[vip_id][vip_changesex], vip_id);
				}
				case 30: {
					vip_status[vip_id][vip_number] = (vip_status[vip_id][vip_number] == 5) ? 10 : (vip_status[vip_id][vip_number] == 10) ? 15 : (vip_status[vip_id][vip_number] == 15) ? 20 : (vip_status[vip_id][vip_number] == 20) ? 25 : (vip_status[vip_id][vip_number] == 25) ? 30 : 5;
					UpdateVIP("vip_number",vip_status[vip_id][vip_number], vip_id);
				}
				case 31: {
					vip_status[vip_id][vip_perfonans] = (vip_status[vip_id][vip_perfonans] == 5) ? 10 : (vip_status[vip_id][vip_perfonans] == 10) ? 15 : (vip_status[vip_id][vip_perfonans] == 15) ? 20 : (vip_status[vip_id][vip_perfonans] == 20) ? 25 : (vip_status[vip_id][vip_perfonans] == 25) ? 30 : 5;
					UpdateVIP("vip_perfonans",vip_status[vip_id][vip_perfonans], vip_id);
				}
				case 32: {
					vip_status[vip_id][vip_tune] = (vip_status[vip_id][vip_tune] == 5) ? 10 : (vip_status[vip_id][vip_tune] == 10) ? 15 : (vip_status[vip_id][vip_tune] == 15) ? 20 : (vip_status[vip_id][vip_tune] == 20) ? 25 : (vip_status[vip_id][vip_tune] == 25) ? 30 : 5;
					UpdateVIP("vip_tune",vip_status[vip_id][vip_tune], vip_id);
				}
				case 33: {
					vip_status[vip_id][vip_rulet] = (vip_status[vip_id][vip_rulet] == 30) ? 40 : (vip_status[vip_id][vip_rulet] == 40) ? 50 : (vip_status[vip_id][vip_rulet] == 50) ? 60 : (vip_status[vip_id][vip_rulet] == 60) ? 80 : (vip_status[vip_id][vip_rulet] == 80) ? 100 : 30;
					UpdateVIP("vip_rulet",vip_status[vip_id][vip_rulet], vip_id);
				}
				case 34: {
					vip_status[vip_id][vip_hp] = (vip_status[vip_id][vip_hp] == 100) ? 120 : (vip_status[vip_id][vip_hp] == 120) ? 140 : (vip_status[vip_id][vip_hp] == 140) ? 160 : (vip_status[vip_id][vip_hp] == 160) ? 180 : (vip_status[vip_id][vip_hp] == 180) ? 200 : 100;
					UpdateVIP("vip_hp",vip_status[vip_id][vip_hp], vip_id);
				}
				case 35: {
					vip_status[vip_id][vip_useheal] = (vip_status[vip_id][vip_useheal] == 20) ? 40 : (vip_status[vip_id][vip_useheal] == 40) ? 60 : (vip_status[vip_id][vip_useheal] == 60) ? 80 : (vip_status[vip_id][vip_useheal] == 80) ? 100 : 20;
					UpdateVIP("vip_useheal",vip_status[vip_id][vip_useheal], vip_id);
				}
				case 36: {
					vip_status[vip_id][vip_changename] = (vip_status[vip_id][vip_changename] == 1) ? 2 : (vip_status[vip_id][vip_changename] == 2) ? 3 : (vip_status[vip_id][vip_changename] == 3) ? 4 : (vip_status[vip_id][vip_changename] == 4) ? 5 : 1 ;
					UpdateVIP("vip_changename",vip_status[vip_id][vip_changename], vip_id);
				}
				case 37: {
					vip_status[vip_id][vip_gunlic] = (vip_status[vip_id][vip_gunlic] == 0) ? 1 : 0;
					UpdateVIP("vip_gunlic",vip_status[vip_id][vip_gunlic], vip_id);
				}
				case 38: {
					vip_status[vip_id][vip_ad] = (vip_status[vip_id][vip_ad] == 0) ? 1 : 0;
					UpdateVIP("vip_ad",vip_status[vip_id][vip_ad], vip_id);
				}
				case 39: {
					vip_status[vip_id][vip_enterbizz] = (vip_status[vip_id][vip_enterbizz] == 1) ? 2 : (vip_status[vip_id][vip_enterbizz] == 2) ? 3 : (vip_status[vip_id][vip_enterbizz] == 3) ? 4 : (vip_status[vip_id][vip_enterbizz] == 4) ? 5 : 1;
					UpdateVIP("vip_enterbizz",vip_status[vip_id][vip_enterbizz], vip_id);
				}
				case 40: {
					vip_status[vip_id][vip_vad] = (vip_status[vip_id][vip_vad] == 0) ? 1 : 0;
					UpdateVIP("vip_vad",vip_status[vip_id][vip_vad], vip_id);
				}
				case 41: {
					vip_status[vip_id][vip_sms] = (vip_status[vip_id][vip_sms] == 0) ? 1 : 0;
					UpdateVIP("vip_sms",vip_status[vip_id][vip_sms], vip_id);
				}
				case 42: {
					vip_status[vip_id][vip_disease] = (vip_status[vip_id][vip_disease] == 1) ? 2 : (vip_status[vip_id][vip_disease] == 2) ? 3 : (vip_status[vip_id][vip_disease] == 3) ? 4 : (vip_status[vip_id][vip_disease] == 4) ? 5 : 1;
					UpdateVIP("vip_disease",vip_status[vip_id][vip_disease], vip_id);
				}
				case 43: {
					vip_status[vip_id][vip_pay] = (vip_status[vip_id][vip_pay] == 100000) ? 120000 : (vip_status[vip_id][vip_pay] == 120000) ? 140000 : (vip_status[vip_id][vip_pay] == 140000) ? 160000 : (vip_status[vip_id][vip_pay] == 160000) ? 180000 : (vip_status[vip_id][vip_pay] == 180000) ? 200000 : 100000;
					UpdateVIP("vip_pay",vip_status[vip_id][vip_pay], vip_id);
				}
				case 44: {
					vip_status[vip_id][vip_chat] = (vip_status[vip_id][vip_chat] == 0) ? 1 : 0;
					UpdateVIP("vip_chat",vip_status[vip_id][vip_chat], vip_id);
				}
				case 45: {
					vip_status[vip_id][vip_call] = (vip_status[vip_id][vip_call] == 0) ? 1 : 0;
					UpdateVIP("vip_call",vip_status[vip_id][vip_call], vip_id);
				}
				case 46: {
					vip_status[vip_id][vip_report_color] = (vip_status[vip_id][vip_report_color] == 0) ? 1 : 0;
					UpdateVIP("vip_report_color",vip_status[vip_id][vip_report_color], vip_id);
				}
			}
			dialog_vip(playerid, vip_id);
		}
		case D_ADMIN_TK: {
     		if(!response) return 1;
            switch(listitem) {
				case 0: {
					static const f_str[] = "\n\n\
"W"Заробітна плата на рейсі [Збройний завод - Порт м. СФ]: "ORANGE"$%d\n\
Встановіть нову заробітну плату:\n\n"NO"*{f6f6d9} Від $0 до $1000\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,tk_unloading[0]);
					D(playerid,D_ADMIN_TK_1,DSI, ""YELLOW"Дальнобойщики",string,"Змінити", "Відміна");
					return 1;
				}
				case 1: {
					static const f_str[] = "\n\n\
"W"Заробітна плата на рейсі [Лісопилка - Порт м. СФ]: "ORANGE"$%d\n\
Встановіть нову заробітну плату:\n\n"NO"*{f6f6d9} Від $0 до $1000\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,tk_unloading[1]);
					D(playerid,D_ADMIN_TK_2,DSI, ""YELLOW"Дальнобойщики",string,"Змінити", "Відміна");
					return 1;
				}
				case 2: {
					static const f_str[] = "\n\n\
"W"Заробітна плата на рейсі [Лісопилка - Порт м. ЛС]: "ORANGE"$%d\n\
Встановіть нову заробітну плату:\n\n"NO"*{f6f6d9} Від $0 до $1000\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,tk_unloading[2]);
					D(playerid,D_ADMIN_TK_3,DSI, ""YELLOW"Дальнобойщики",string,"Змінити", "Відміна");
					return 1;
				}
				case 3: {
					static const f_str[] = "\n\n\
"W"Заробітна плата на рейсі [Лісопилка - Збройний завод завод]: "ORANGE"$%d\n\
Встановіть нову заробітну плату:\n\n"NO"*{f6f6d9} Від $0 до $1000\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,tk_unloading[3]);
					D(playerid,D_ADMIN_TK_4,DSI, ""YELLOW"Дальнобойщики",string,"Змінити", "Відміна");
					return 1;
				}
            }
		}
		case D_ADMIN_TK_1: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 0 || salary > 1000) {
				static const f_str[] = "\n\n\
"W"Заробітна плата на рейсе [Збочний завод - Порт м. СФ]: "ORANGE"$%d\n\
Встановіть нову заробітну плату:\n\n"NO"*{f6f6d9} Від $0 до $1000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,tk_unloading[0]);
				D(playerid,D_ADMIN_TK_1,DSI, ""YELLOW"Дальнобойщики",string,"Змінити", "Відміна");
				return 1;
			}
			tk_unloading[0] = salary;
			UpdateOtherData("tk_unloading_0",tk_unloading[0]);
			SendOk(playerid,"Изменено");
			pc_cmd_apanel(playerid,"");
			return 1;
		}
		case D_ADMIN_TK_2: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 0 || salary > 1000) {
				static const f_str[] = "\n\n\
"W"Заробітна плата на рейсе [Лісопилка - Порт м. СФ]: "ORANGE"$%d\n\
Встановіть нову заробітну плату:\n\n"NO"*{f6f6d9} От $0 до $1000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,tk_unloading[1]);
				D(playerid,D_ADMIN_TK_2,DSI, ""YELLOW"Дальнобойщики",string,"Змінити", "Відміна");
				return 1;
			}
			tk_unloading[1] = salary;
			UpdateOtherData("tk_unloading_1",tk_unloading[1]);
			SendOk(playerid,"Изменено");
			pc_cmd_apanel(playerid,"");
			return 1;
		}
		case D_ADMIN_TK_3: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 0 || salary > 1000) {
				static const f_str[] = "\n\n\
"W"Заробітна плата на рейсе [Лісопилка - Порт м. ЛС]: "ORANGE"$%d\n\
Встановіть нову заробітну плату:\n\n"NO"*{f6f6d9} От $0 до $1000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,tk_unloading[2]);
				D(playerid,D_ADMIN_TK_3,DSI, ""YELLOW"Дальнобойщики",string,"Змінити", "Відміна");
				return 1;
			}
			tk_unloading[2] = salary;
			UpdateOtherData("tk_unloading_2",tk_unloading[2]);
			SendOk(playerid,"Изменено");
			pc_cmd_apanel(playerid,"");
			return 1;
		}
		case D_ADMIN_TK_4: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 0 || salary > 1000) {
				static const f_str[] = "\n\n\
"W"Заробітна плата на рейсе [Лісопилка - Зброяний завод]: "ORANGE"$%d\n\
Встановіть нову заробітну плату:\n\n"NO"*{f6f6d9} От $0 до $1000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,tk_unloading[3]);
				D(playerid,D_ADMIN_TK_4,DSI, ""YELLOW"Дальнобойщики",string,"Змінити", "Відміна");
				return 1;
			}
			tk_unloading[3] = salary;
			UpdateOtherData("tk_unloading_3",tk_unloading[3]);
			SendOk(playerid,"Изменено");
			pc_cmd_apanel(playerid,"");
			return 1;
		}
		case D_ANTICHEAT: {
			if(!response) return 1;
			AntiCheat[listitem][acValue] = (AntiCheat[listitem][acValue] == 0) ? 1 : (AntiCheat[listitem][acValue] == 1) ? 2 : 0;
			dialog_anticheat(playerid);
			new query[128];
			format(query,sizeof(query),"UPDATE `anticheats` SET `cheatvalue` = '%d' WHERE `chID` = '%d' LIMIT 1",AntiCheat[listitem][acValue],listitem+1);
			mysql_tquery(connects, query);
		}
		case D_TP_LIST: {
	        if(!response) return 1;
			new str[1024];
			for(new i = 0; i < MAX_TELEPORTS; i++) {
				if(TPLIST[i][tList] != listitem) continue;
				format(str, sizeof(str), "%s%s\n", str, TPLIST[i][tName]);
			}
			D(playerid, D_TP_LIST_2, DSL,""YELLOW"Телепорт", str, "Вибрати", "Відміна");
			SetPVarInt(playerid,"adm_tp",listitem);
		}
		case D_TP_LIST_2: {
			if(!response) return 1;
			new list = GetPVarInt(playerid,"adm_tp"),lis;
			switch(list) {
				case 0: lis = listitem;
				case 1: lis = (listitem+23);
				case 2: lis = (listitem+30);
				case 3: lis = (listitem+33);
				case 4: lis = (listitem+36);
				case 5: lis = (listitem+44);
				case 6: lis = (listitem+47);
			}
			if(GetPlayerState(playerid) == 2) {
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TPLIST[lis][tPos][0],TPLIST[lis][tPos][1],TPLIST[lis][tPos][2]);
			}
			else {
				SetPlayerPosAC(playerid, TPLIST[lis][tPos][0],TPLIST[lis][tPos][1],TPLIST[lis][tPos][2], 0, 0);
			}
		}
  		case D_OBC_LIST: {
		    if(!response) return 1;
		    switch(listitem) {
		        case 0: {
		            new total_player_online = 0;
		            tick_wanted{total_player_online} = 0;
		            static const dialog_put_fmt[] = "%s\t%i\n";

					const string_length =
						sizeof(dialog_put_fmt) + 1 +
						(- 2 + MAX_PLAYER_NAME) + // Имя гравця
						(- 2 + 1);  // рівень розшуку

					goto skip_array_init;
					new onestring[(string_length * 30) / 4],
						tempstring[string_length];
					skip_array_init:

					new Float:pos[3];
            		GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 

					onestring = !""W"Ім'я гравця\t"W"Рівень розшуку\n";
		            foreach(new i:Player) {
		            	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(PlayerInfo[i][pSearch] > 0) {
							if(!IsPlayerInRangeOfPoint(i, 200.0, pos[0],pos[1],pos[2])) continue;
							format(tempstring, sizeof(tempstring), dialog_put_fmt, player_name[i], PlayerInfo[i][pSearch]);
							strcat(onestring, tempstring);
							tick_wanted{total_player_online} = i;
							total_player_online = total_player_online + 1;
						}
					}
		            if(!total_player_online) return ErrorMessage(playerid,"Преступников в радиусе 200 метров не обнаружено");
		            return D(playerid,D_OBC_WANTED,DSTH,"Бортовой компьютер",onestring,"Вибрати","Відміна");
				}
				case 1: D(playerid, D_OBC_BD, DSL, ""YELLOW"База данных", ""YELLOW"1."W" Пробить по имени\n"YELLOW"2."W" Пробить по гос. номеру авто", "Вибрати", "Відміна");
				case 2: {
					new Float:pos[3];
            		GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
					new bool:callers = false;
					new string[700],str[30];
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(!GetPVarInt(i,"call_police")) continue;
						if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
						format(str,sizeof(str),"%s\n",player_name[i]),strcat(string,str);
						callers = true;
					}
					if(!callers) return ErrorMessage(playerid,"Виклики не поступали");
					D(playerid,D_OBC_SERVICESS,DSL,""YELLOW"Поступившие вызовы",string,"Вибрати","Відміна");
				}
		    }
		}
		case D_OBC_BD: {
			if(!response) return pc_cmd_obc(playerid);
			switch(listitem) {
				case 0: D(playerid,D_OBC_BD_NAME,DSI, ""YELLOW"База данных","\n\n"W"Введіть ник гравця:\n\n","Вибрати","Відміна");
				case 1: D(playerid,D_OBC_BD_NUMBER,DSI, ""YELLOW"База данных","\n\n"W"Введіть гос. номер автомобіля:\n{f6f6d9}Примечание: X XXX XX - формат номера\n\n","Вибрати","Відміна");
			}
		}
		case D_OBC_BD_NAME: {
			if(!response) return pc_cmd_obc(playerid);
			if(strval(inputtext) >= 0 && strval(inputtext) < MAX_PLAYERS) {
		        if(!IsPlayerConnected(strval(inputtext))) return ErrorMessage(playerid,"Гравець не знайдений");
			}
		    if(GetPlayerID(inputtext) == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Гравець не знайдений");
			new id = GetPlayerID(inputtext);
			if(PlayerInfo[id][pSearch] == 0) return ErrorMessage(playerid,"Человек не имеет розшуку");
			static const f_str[] = "\
"W"Имя гравця:\t\t\t"YELLOW"%s\n\n\
"W"Рівень розшуку:\t\t"YELLOW"%d\n\
"W"Сообщил:\t\t\t"YELLOW"%s\n\
"W"Причина:\t\t\t"YELLOW"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 2) + (-2 + MAX_PLAYER_NAME) + (-2 + 42)];
			format(string,sizeof(string), f_str, player_name[id], PlayerInfo[id][pSearch], PlayerInfo[id][pVictim],PlayerInfo[id][pAccusedof]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"База данных",string,"Закрити","");
		}
		case D_OBC_BD_NUMBER: {
			if(!response) return pc_cmd_obc(playerid);
			if(strval(inputtext) != 7) return D(playerid,D_OBC_BD_NUMBER,DSI, ""YELLOW"База данных","\n\n"W"Введіть гос. номер автомобіля:\n{f6f6d9}Примечание: X XXX XX - формат номера\n\n","Вибрати","Відміна");
			new query[128];
			format(query, sizeof(query), "SELECT HIGH_PRIORITY * FROM `"TABLE_CARS"` WHERE `number`='%s'",inputtext);
	        mysql_tquery(connects,query,"ShowNumber","ds",playerid,inputtext);
		}
		case D_OBC_SERVICESS: {
			if(!response) return 1;
			SetPVarInt(playerid,"police_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\
\t"YELLOW"==== інформація ====\n\n\
"W"Имя: "YELLOW"%s\n\
"W"Расстояние: "YELLOW"%.2f метров\n\n\
"W"Ви дійсно хочете прийняти вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_OBC_SERVICESS_INV, DSM, ""YELLOW"Виклик", str, "Прийняти", "Відміна");
		}
		case D_OBC_SERVICESS_INV: {
			if(!response) return DeletePVar(playerid,"police_id"),pc_cmd_obc(playerid);
			DeletePVar(GetPVarInt(playerid,"police_id"),"call_police");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"police_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Віклик прийнятий. Розташування вказано на вашій карті");
			SendOk(GetPVarInt(playerid,"police_id"),"Полицейский принял Ваш вызов. Для быстрого нахождения Вас полицейским, оставайтесь на данном месте");
		}
		case D_OBC_WANTED: {
		    if(!response) return 1;
		    patrul_id[playerid] = tick_wanted{listitem};
		    
		   	static const f_str[] = "\
"W"Имя гравця:\t\t\t"YELLOW"%s\n\n\
"W"Рівень розшуку:\t\t"YELLOW"%d\n\
"W"Сообщил:\t\t\t"YELLOW"%s\n\
"W"Причина:\t\t\t"YELLOW"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 2) + (-2 + MAX_PLAYER_NAME) + (-2 + 32)];
			format(string,sizeof(string), f_str, player_name[patrul_id[playerid]], PlayerInfo[patrul_id[playerid]][pSearch], PlayerInfo[patrul_id[playerid]][pVictim],PlayerInfo[patrul_id[playerid]][pAccusedof]);
			D(playerid,D_OBC_PATRUL,DSM, ""YELLOW"Бортовой компьютер",string,"Слежка","Назад");
		}
		case D_OBC_PATRUL: {
		    if(!response) return pc_cmd_obc(playerid);
      		if(GetPlayerInterior(patrul_id[playerid]) != 0) return ErrorMessage(playerid,"Не удалось обнаружить цель (объект в здании)");
			if(patrul_id[playerid] == playerid) return ErrorMessage(playerid,"Ви не можете почати слежку за собой");

			static const f_str[] = ""W"[ПАТРУЛИРОВАНИЕ]{f6f6d9} %s(%d) начал преследование за %s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + MAX_PLAYER_NAME)];
			
			format(string, sizeof(string), f_str, player_name[playerid],playerid,player_name[patrul_id[playerid]]);
			SendFamilyMessage(PlayerInfo[playerid][pMember], 0x99CC00FF, string);
			
			SetPVarInt(playerid,"Patrul",1);
			time_wanted[playerid] = SetTimerEx("CopsWanted",3000,true,"ff",playerid,patrul_id[playerid]);
		}
		case D_MEDICS: {
			if(!response) return 1;
			SetPVarInt(playerid,"medic_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\
\t"YELLOW"==== Інформація ====\n\n\
"W"Имя: "YELLOW"%s\n\
"W"Расстояние: "YELLOW"%.2f метров\n\n\
"W"Ви дійсно хочете прийняти вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_MEDICS_INV, DSM, ""YELLOW"Виклик", str, "Прийняти", "Відміна");
		}
		case D_MEDICS_INV: {
			if(!response) return DeletePVar(playerid,"medic_id"),pc_cmd_obc(playerid);
			DeletePVar(GetPVarInt(playerid,"medic_id"),"call_medics");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"medic_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Віклик прийнятий. Розташування вказано на карті");
			SendOk(GetPVarInt(playerid,"medic_id"),"Медик принял Ваш вызов. Для быстрого нахождения Вас медиком, оставайтесь на данном месте");
		}
		case D_REPAIRS: {
			if(!response) return 1;
			SetPVarInt(playerid,"repair_id",GetPlayerID(inputtext));
			new str[190];
			format(str,sizeof(str),"\
\t"YELLOW"==== Інформація ====\n\n\
"W"Имя: "YELLOW"%s\n\
"W"Расстояние: "YELLOW"%.2f метров\n\n\
"W"Ви дійсно хочете прийняти вызов?",inputtext,GetDistanceBetweenPlayers(playerid,GetPlayerID(inputtext)));
			D(playerid, D_REPAIRS_INV, DSM, ""YELLOW"Виклик", str, "Прийняти", "Відміна");
		}
		case D_REPAIRS_INV: {
			if(!response) return DeletePVar(playerid,"repair_id"),pc_cmd_obc(playerid);
			DeletePVar(GetPVarInt(playerid,"repair_id"),"call_mechanics");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPVarInt(playerid,"repair_id"), X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
			SendOk(playerid,"Віклик прийнятий. Розташування вказано на карті");
			SendOk(GetPVarInt(playerid,"repair_id"),"Механик принял Ваш вызов. Для быстрого нахождения Вас механіком, оставайтесь на данном месте");
		}
      	case D_MAKELEADER_INFO: {
			if(!response) return 1;
			if(listitem == fINSTRUCTORS-1) return ErrorMessage(playerid,"Недоступно");
			if(listitem == fMAYOR-1) return ErrorMessage(playerid,"Недоступно");
			static const f_str[] = ""YELLOW"%s "W"| "ORANGE"%s";
			new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME)];
			
			SetPVarInt(playerid, "use_frac", listitem+1);
			format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName],FI[GetPVarInt(playerid, "use_frac")][fLeader]);
			D(playerid,D_MAKELEADER_LIST,DSL,string,""YELLOW"1."W" Інформація про фракцію\n"YELLOW"2."W" Назначити лідера\n"YELLOW"3."W" Зняти лідера\n"YELLOW"4."W" Вступити в організацію","Вибрати","Відміна");
		}
		case D_MAKELEADER_LIST: {
		    if(!response) return 1;
		    switch(listitem) {
		        case 0: {
					if(!strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return ErrorMessage(playerid, "У цієї організації немає лідера");
					new ID = GetPVarInt(playerid, "use_frac");
					new query[200];
					format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i'", ID);
					mysql_pquery(connects, query, "info_fraction", "ii", playerid,ID);
				}
		        case 1: {
				    if(strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return ErrorMessage(playerid, "У данной організації уже есть лідер");
				    
				    static const f_str[] = ""W"Вкажіть ID гравця,якого хочете назначити на посаду лідера "YELLOW"%s";
				    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];
				    
				    format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName]);
					D(playerid,D_MAKELEADER_ADD,DSI, ""YELLOW"Призначення",string,"Вибрати","Відміна");
				}
		        case 2: {
					if(!strcmp(FI[GetPVarInt(playerid, "use_frac")][fLeader],"None",true)) return ErrorMessage(playerid, "У цієї організації немає лідера");
				    static const f_str[] = ""W"Ви дійсно хочете зняти "NO"%s "W"з поста лідера організації "YELLOW"%s";
				    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + 24];
				    
				    format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fLeader],FI[GetPVarInt(playerid, "use_frac")][fName]);
					D(playerid,D_MAKELEADER_CLEAR,DSM, ""YELLOW"Снятие",string,"Вибрати","Відміна");
				}
		        case 3: {
					new frac = GetPVarInt(playerid, "use_frac");
					PlayerInfo[playerid][pLeader] = frac;
					PlayerInfo[playerid][pMember] = frac;
					PlayerInfo[playerid][pRank] = FI[frac][fMaxRang];
					start_work[playerid] = 1;
					SaveAccount(playerid);
					static const f_str[] = ""W"Ви успішно вступили в організацію "YELLOW"%s(ID: %d)";
				    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 3)];
					
					format(string, sizeof(string), f_str, FI[frac][fName], frac);
					SendOk(playerid, string);
					SendOk(playerid, "Для звільнення введіть: "W"/uval");
					PlayerInfo[playerid][pFracSkin] = FI[frac][fSkin];
					A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
		        }
		    }
		}
		case D_MAKELEADER_ADD: {
		    if(!response) return 1;
			if(!strlen(inputtext)) {
				static const f_str[] = ""W"Вкажіть ID гравця, якого хочете призначили на посаду лідера "YELLOW"%s";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
				
				format(string,sizeof(string),f_str,FI[GetPVarInt(playerid, "use_frac")][fName]);
				D(playerid,D_MAKELEADER_ADD,DSI, ""YELLOW"Призначення",string,"Вибрати","Відміна");
				return 1;
			}
		    if(!IsPlayerConnected(strval(inputtext))) return ErrorMessage(playerid, "Гравець оффлайн");
		    if(!TI[strval(inputtext)][tLogin]) return ErrorMessage(playerid, "Гравець не авторизован на сервере");
		    if(PlayerInfo[strval(inputtext)][pLeader] != 0) return ErrorMessage(playerid, "Гравець уже лідер організації");
			if(PlayerInfo[strval(inputtext)][pMember] != 0) return ErrorMessage(playerid, "Гравець состоит в організації");
			//if(!PlayerInfo[strval(inputtext)][pGoogleSec]) return ErrorMessage(playerid, "У гравця відсутня защита Google Authenticator");
		    SetPVarInt(playerid, "use_leader", strval(inputtext));
		    
		    static const f_str[] = ""W"Ви дійсно хочете назначить "ORANGE"%s"W" на поста лідера організації "YELLOW"%s";
		    new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
		    
		    format(string,sizeof(string),f_str,player_name[GetPVarInt(playerid, "use_leader")],FI[GetPVarInt(playerid, "use_frac")][fName]);
			D(playerid,D_MAKELEADER,DSM, ""YELLOW"Призначення",string,"Назначить","Відміна");
		}
		case D_MAKELEADER: {
		    if(!response) return 1;
			new ID = GetPVarInt(playerid, "use_leader");
			new frac = GetPVarInt(playerid, "use_frac");
	        format(FI[frac][fLeader], 24, "%s", player_name[ID]);
			format(FI[frac][fAdmin],  24, "%s", player_name[playerid]);

			new year, month, day;
			getdate(year, month, day);
			format(FI[frac][fTime],  53, "%02i/%02i/%02i", day, month, year);

            PlayerInfo[ID][pLeader] = FI[frac][fID];
            PlayerInfo[ID][pMember] = FI[frac][fID];
            PlayerInfo[ID][pRank] 	= FI[frac][fMaxRang];
            
            static const f_str[] = ""W"%s{f6f6d9} назначив вас лідером організації "YELLOW"%s";
			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
            
            format(string,sizeof(string),f_str,player_name[playerid],FI[frac][fName]);
            SendOk(ID,string);

			format(string, sizeof(string), "[A] %s[%d] назначив %s[%d] на пост лідера %s",player_name[playerid],playerid,player_name[ID],ID,FI[frac][fName]);
			AdmMSG(0xAFAFAFAA, string,1);
			
			PlayerInfo[ID][pFracSkin] = FI[frac][fSkin];
			PlayerInfo[ID][pJob] 		= 0;
			A_SetPlayerSkin(ID,PlayerInfo[ID][pFracSkin]);
			SetPlayerColor(ID,gFractionSpawn[PlayerInfo[ID][pMember]][fracColor]);
			start_work[ID] = 1;
			PlayerInfo[ID][pSpawn] = 2;
			SaveAccount(ID);
			SaveFraction(frac);
			add_datefrac(ID);
	    }
     	case D_MAKELEADER_CLEAR: {
         	if(!response) return 1;
	        new ID = GetCheckID(FI[GetPVarInt(playerid, "use_frac")][fLeader]);
		    if(ID != INVALID_PLAYER_ID) {
				if(IsAGang(ID)) EndCapt(ID);
				add_jobinfo(ID,"Снят с поста лідера");
	        	PlayerInfo[ID][pLeader] = 0;
				PlayerInfo[ID][pMember] = 0;
    			PlayerInfo[ID][pRank] = 0;
				start_work[ID] = 0;
    			static const f_str[] = ""W"%s {f6f6d9}забрав у вас права лідера організації";
    			new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
    			
		    	format(string,sizeof(string),f_str,player_name[playerid]);
		    	SendOk(ID,string);

				format(string, sizeof(string), "[A] %s[%d] снял %s[%d] с поста лідера %s",player_name[playerid],playerid,player_name[ID],ID,FI[GetPVarInt(playerid, "use_frac")][fName]);
				AdmMSG(0xAFAFAFAA, string,1);

				if(PlayerInfo[playerid][pHouse] > 0) PlayerInfo[ID][pSpawn] = 1;
				else PlayerInfo[ID][pSpawn] = 0;
				skin_player(ID);
				SaveAccount(ID);
		    	PlayerSpawn(ID);
	        }
	        else {
				new string[128];
				format(string, sizeof(string), "[A] %s[%d] снял %s с поста лідера %s",player_name[playerid],playerid,FI[GetPVarInt(playerid, "use_frac")][fLeader],FI[GetPVarInt(playerid, "use_frac")][fName]);
				AdmMSG(0xAFAFAFAA, string,1);
				off_add_jobinfo(FI[GetPVarInt(playerid, "use_frac")][fName],"Недееспособен");
			    SendOk(playerid, "Лідер організації успішно снят в оффлайн");
			    new query[128];
			    mysql_format(connects,query, sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pLeader = '0',pMember = '0',pRank = '0',pModel = '0' WHERE Name = '%s'",FI[GetPVarInt(playerid, "use_frac")][fLeader]);
    			mysql_tquery(connects, query, "", "");
			}
	        format(FI[GetPVarInt(playerid, "use_frac")][fLeader], 5, "None");
	        SaveFraction(GetPVarInt(playerid, "use_frac"));
	    }
		case D_BLACK_MARKET: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Введіть вартість за "YELLOW"1г"W" наркотика\nЗараз вартість складає: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[5]);
					D(playerid,D_BLACK_MARKET_DRUGS,DSI, ""YELLOW"Вартість наркотиків", string, "Змінити", "Назад");
				}
				case 1: {
					static const f_str[] = ""W"Введіть вартість за "YELLOW"1"W" боеприпас\nЗараз вартість складає: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[6]);
					D(playerid,D_BLACK_MARKET_MATS,DSI, ""YELLOW"Вартість боєприпасів", string, "Змінити", "Назад");
				}
				case 2: {
					static const f_str[] = ""W"Введіть вартість за "YELLOW"1"W" бронежилет\nЗараз вартість складає: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[7]);
					D(playerid,D_BLACK_MARKET_ARMOUR,DSI, ""YELLOW"Вартість бронежилет", string, "Змінити", "Назад");
				}
				case 3: {
					static const f_str[] = ""W"Введіть вартість за "YELLOW"1"W" армейскую форму\nЗараз вартість складає: "GREEN"$%d";
					new string[sizeof(f_str) +1 +(-2 + 5)];
					format(string,sizeof(string),f_str,black_prods[8]);
					D(playerid,D_BLACK_MARKET_SKIN,DSI, ""YELLOW"Вартість армійської форми", string, "Змінити", "Назад");
				}
			}
		}
		case D_BLACK_MARKET_DRUGS: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 50) {
				static const f_str[] = ""W"Введіть вартість за "YELLOW"1г"W" наркотика\nЗараз вартість складає: "GREEN"$%d\n\n"NO"*{f6f6d9} От $1 до $50";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[5]);
				D(playerid,D_BLACK_MARKET_DRUGS,DSI, ""YELLOW"Вартість наркотиків", string, "Змінити", "Назад");
				return 1;
			}
			black_prods[5] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Вартість "YELLOW"1г {f6f6d9}наркотиків составляет "ORANGE"$%d",black_prods[5]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
		case D_BLACK_MARKET_MATS: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 10 || strval(inputtext) > 15) {
				static const f_str[] = ""W"Введіть вартість за "YELLOW"1"W" боеприпас\nЗараз вартість складає: "GREEN"$%d\n\n"NO"*{f6f6d9} От $10 до $15";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[6]);
				D(playerid,D_BLACK_MARKET_MATS,DSI, ""YELLOW"Вартість боєприпасів", string, "Змінити", "Назад");
				return 1;
			}
			black_prods[6] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Вартість "YELLOW"1 {f6f6d9}боеприпаса составляет "ORANGE"$%d",black_prods[6]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
		case D_BLACK_MARKET_ARMOUR: {
			if(!response) return pc_cmd_bmarket(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 10000) {
				static const f_str[] = ""W"Введіть вартість за "YELLOW"1"W" бронежилет\nЗараз вартість складає: "GREEN"$%d\n\n"NO"*{f6f6d9} От $1 до $10.000";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[7]);
				D(playerid,D_BLACK_MARKET_ARMOUR,DSI, ""YELLOW"Вартість бронежилета", string, "Змінити", "Назад");
				return 1;
			}
			black_prods[7] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Вартість "YELLOW"1 {f6f6d9}бронежилета составляет "ORANGE"$%d",black_prods[7]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
		case D_BLACK_MARKET_SKIN: {
			if(!response) return 1;
			if(strval(inputtext) < 1 || strval(inputtext) > 10000) {
				static const f_str[] = ""W"Введіть вартість за "YELLOW"1"W" армейскую форму\nЗараз вартість складає: "GREEN"$%d\n\n"NO"*{f6f6d9} От $1 до $10.000";
				new string[sizeof(f_str) +1 +(-2 + 5)];
				format(string,sizeof(string),f_str,black_prods[8]);
				D(playerid,D_BLACK_MARKET_SKIN,DSI, ""YELLOW"Вартість армійської форми", string, "Змінити", "Назад");
				return 1;
			}
			black_prods[8] = strval(inputtext);
			SaveMarket();
			new string[128];
			format(string,sizeof(string),"Вартість "YELLOW"1 {f6f6d9}армейской формы составляет "ORANGE"$%d",black_prods[8]);
			SendUse(playerid,string);
			pc_cmd_bmarket(playerid);
		}
		case D_MARKET_NARKO: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 51) {
				static const f_str[] = "\
"W"Укажите количество наркотиків для покупки:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1г"W" наркотиків: "GREEN"$%d"W"\n\
\tДоступно грамм На складі: "YELLOW"%d"W"\n\
\tВ кишеню поміститься: "YELLOW"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,black_prods[5],black_prods[1],vip_status[PlayerInfo[playerid][pVips]][vip_drugs]-PlayerInfo[playerid][pDrugs]);
				D(playerid,D_MARKET_NARKO,DSI, ""YELLOW"Покупка наркотиків", string, "Купити", "Відміна");
				return 1;
			}
			if(black_prods[1] < strval(inputtext)) return ErrorMessage(playerid,"На складі закончился товар");
		    if(PlayerInfo[playerid][pDrugs] + strval(inputtext) > vip_status[PlayerInfo[playerid][pVips]][vip_drugs]) return ErrorMessage(playerid,"Ви не можете взяти багато");
			if(GetPlayerMoneyEx(playerid) < black_prods[5]*strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			GiveMoney(playerid,-black_prods[5]*strval(inputtext),"покупка нарко ЧР");
			PlayerInfo[playerid][pDrugs] += strval(inputtext);
			UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
			black_prods[1] -= strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[5]*strval(inputtext);
			new string[128];
			format(string,sizeof(string),"Ви приобрели "YELLOW"%dг {f6f6d9}наркотиків за "ORANGE"$%d",strval(inputtext),black_prods[5]*strval(inputtext));
			SendUse(playerid,string);
		}
		case D_ROB_CAR: {
			if(!response) {
				new string[50];
				format(string,sizeof(string),"Видно что у тебя кишка тонка, вали от сюда");
				SendUse(playerid,string);
				return true;
			}
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Ограбление домов","Бери фургон и ищи дом в опасном районе\nНе забудь про отмычки, без них ты не сможешь взломать дверь будинку", "Ок", "");
			rob_veh[playerid] = A_CreateVehicle(413, 2339.1440,-1315.3313,24.1655,0.0270, 150, -1, -1,VEHICLE_TYPE_NONE);
			VehicleInfo[rob_veh[playerid]][vFuel] = 100;
			VehicleInfo[rob_veh[playerid]][vRobHouse] = true;
			SetVehicleParamsEx(rob_veh[playerid],false,false,false,false,false,false,false);
		}
		case D_MARKET_BUY: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new Float:armour;
					GetPlayerArmour(playerid,armour);
					if(PlayerInfo[playerid][pAdmin]) return ErrorMessage(playerid,"Запрещено");
					if(armour < 50) return ErrorMessage(playerid,"У вас немаєу бронежилета/либо он сильно изношен");
					if(black_prods[3]+1 > 50) return ErrorMessage(playerid,"На складі черного рынка недостаточно места");
					if(FI[black_prods[0]][fBank] < floatround(black_prods[7]/4)) return ErrorMessage(playerid,"На данный момент мы не можем приобрести Ваш товар");
					FI[black_prods[0]][fBank] -= floatround(black_prods[7]/4);
					UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
					black_prods[3] += 1;
					SaveMarket();
					GiveMoney(playerid,floatround(black_prods[7]/4),"продажа армора ЧР");
					SetPlayerArmour(playerid,0);
				}
				case 1: {
					if(!PlayerInfo[playerid][pArmSkin]) return ErrorMessage(playerid,"У вас немає армейской формы");
					if(black_prods[4]+1 > 50) return ErrorMessage(playerid,"На складі черного рынка недостаточно места");
					if(FI[black_prods[0]][fBank] < floatround(black_prods[8]/4)) return ErrorMessage(playerid,"На данный момент мы не можем приобрести Ваш товар");
					FI[black_prods[0]][fBank] -= floatround(black_prods[8]/4);
					UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
					black_prods[4] += 1;
					SaveMarket();
					GiveMoney(playerid,floatround(black_prods[8]/4),"продажа формы ЧР");
					PlayerInfo[playerid][pArmSkin] = 0;
					UpdatePlayerData(playerid,"ArmSkin",0);
				}
				case 2: {
					static const f_str[] = "\
"W"Укажите количество наркотиків для продажи:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1г"W" наркотиків: "GREEN"$%d"W"\n\
\tДоступно грамм в кишені: "YELLOW"%d"W"\n\
\tНа склад поміститься: "YELLOW"%d"W"\n";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

					format(string,sizeof(string),f_str,floatround(black_prods[5]/4),PlayerInfo[playerid][pDrugs],2500-black_prods[1]);
					D(playerid,D_MARKET_NARKO_SELL,DSI, ""YELLOW"Продажа наркотиків", string, "Продати", "Відміна");
				}
				case 3: {
					static const f_str[] = "\
"W"Укажите количество боєприпасів для продажи:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1г"W" боеприпаса: "GREEN"$%d"W"\n\
\tДоступно боєприпасів в кишені: "YELLOW"%d"W"\n\
\tНа склад поміститься: "YELLOW"%d"W"\n";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

					format(string,sizeof(string),f_str,floatround(black_prods[6]/4),PlayerInfo[playerid][pMats],50000-black_prods[2]);
					D(playerid,D_MARKET_MATS_SELL,DSI, ""YELLOW"Продажа боєприпасів", string, "Продати", "Відміна");
				}
			}
		}
		case D_MARKET_NARKO_SELL: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 51) {
				static const f_str[] = "\
"W"Укажите количество наркотиків для продажи:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1г"W" наркотиків: "GREEN"$%d"W"\n\
\tДоступно грамм в кишені: "YELLOW"%d"W"\n\
\tНа склад поміститься: "YELLOW"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,floatround(black_prods[5]/4),PlayerInfo[playerid][pDrugs],2500-black_prods[1]);
				D(playerid,D_MARKET_NARKO_SELL,DSI, ""YELLOW"Продажа наркотиків", string, "Продати", "Відміна");
				return 1;
			}
			if(black_prods[1]+strval(inputtext) >= 2500) return ErrorMessage(playerid,"На складі черного рынка недостаточно места");
		    if(PlayerInfo[playerid][pDrugs] < strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно наркотиків");
			if(FI[black_prods[0]][fBank] < floatround(black_prods[5]/4)) return ErrorMessage(playerid,"На данный момент мы не можем приобрести Ваш товар");
			GiveMoney(playerid,floatround((black_prods[5]*strval(inputtext))/4),"продажа нарко ЧР");
			PlayerInfo[playerid][pDrugs] -= strval(inputtext);
			UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
			black_prods[1] += strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] -= floatround((black_prods[5]*strval(inputtext))/4);
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			new string[128];
			format(string,sizeof(string),"Ви продали "YELLOW"%dг {f6f6d9}наркотиків за "ORANGE"$%d",strval(inputtext),floatround((black_prods[5]*strval(inputtext))/4));
			SendUse(playerid,string);
		}
		case D_MARKET_MATS_SELL: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 501) {
				static const f_str[] = "\
"W"Укажите количество боєприпасів для продажи:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1г"W" боеприпаса: "GREEN"$%d"W"\n\
\tДоступно боєприпасів в кишені: "YELLOW"%d"W"\n\
\tНа склад поміститься: "YELLOW"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,floatround(black_prods[6]/4),PlayerInfo[playerid][pMats],50000-black_prods[2]);
				D(playerid,D_MARKET_MATS_SELL,DSI, ""YELLOW"Продажа боєприпасів", string, "Продати", "Відміна");
				return 1;
			}
			if(black_prods[2]+strval(inputtext) >= 50000) return ErrorMessage(playerid,"На складі черного рынка недостаточно места");
		    if(PlayerInfo[playerid][pMats] < strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно боєприпасів");
			if(FI[black_prods[0]][fBank] < floatround(black_prods[6]/4)) return ErrorMessage(playerid,"На данный момент мы не можем приобрести Ваш товар");
			GiveMoney(playerid,floatround((black_prods[6]*strval(inputtext))/4),"продажа матов ЧР");
			PlayerInfo[playerid][pMats] -= strval(inputtext);
			UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
			black_prods[2] += strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] -= floatround((black_prods[6]*strval(inputtext))/4);
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			new string[128];
			format(string,sizeof(string),"Ви продали "YELLOW"%dг {f6f6d9}боєприпасів за "ORANGE"$%d",strval(inputtext),floatround((black_prods[6]*strval(inputtext))/4));
			SendUse(playerid,string);
		}
		case D_MARKET: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = "\
"W"Ви действитлеьно хочете Купити бронежилет?\n\n\
"O"Примечание:"W"\n\
\tВартість бронежилет "GREEN"$%d"W"\n\
\tДоступно На складі: "YELLOW"%d"W"";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];
					format(string,sizeof(string),f_str,black_prods[7],black_prods[3]);
					D(playerid,D_MARKET_ARMOUR,DSM, ""YELLOW"Покупка бронежилет", string, "Купити", "Відміна");
				}
				case 1: {
					static const f_str[] = "\
"W"Ви действитлеьно хочете Купити армейскую форму?\n\n\
"O"Примечание:"W"\n\
\tВартість армійської форми "GREEN"$%d"W"\n\
\tДоступно На складі: "YELLOW"%d"W"";
					new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];
					format(string,sizeof(string),f_str,black_prods[8],black_prods[4]);
					D(playerid,D_MARKET_SKIN,DSM, ""YELLOW"Покупка армейской формы", string, "Купити", "Відміна");
				}
			}
		}
		case D_MARKET_ARMOUR: {
			if(!response) return 1;
			if(GetPlayerMoneyEx(playerid) < black_prods[7]) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			if(black_prods[3] < 1) return ErrorMessage(playerid,"На складі закончился товар");
			GiveMoney(playerid,-black_prods[7],"покупка брони ЧР");
			black_prods[3] -= 1;
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[7];
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			SetPlayerArmour(playerid,100);
			new string[100];
			format(string,sizeof(string),"Ви приобрели бронежилет за "ORANGE"$%d",black_prods[7]);
			SendUse(playerid,string);
		}
		case D_MARKET_SKIN: {
			if(!response) return 1;
			if(GetPlayerMoneyEx(playerid) < black_prods[8]) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			if(black_prods[4] < 1) return ErrorMessage(playerid,"На складі закончился товар");
			GiveMoney(playerid,-black_prods[8],"покупка формы ЧР");
			black_prods[4] -= 1;
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[8];
			UpdateFraction(black_prods[0],"Bank",FI[black_prods[0]][fBank]);
			PlayerInfo[playerid][pArmSkin] = 1;
			UpdatePlayerData(playerid,"ArmSkin",1);
			new string[100];
			format(string,sizeof(string),"Ви приобрели армейскую форму за "ORANGE"$%d",black_prods[8]);
			SendUse(playerid,string);
			SendOk(playerid,"Для использования армейской формы, введіть: "W"/dress");
		}
		case D_MARKET_GUN: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = "\
"W"Укажите количество боєприпасів для покупки:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1"W" боеприпаса: "GREEN"$%d"W"\n\
\tДоступно боєприпасів На складі: "YELLOW"%d"W"\n\
\tВ кишеню поміститься: "YELLOW"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,black_prods[6],black_prods[2],vip_status[PlayerInfo[playerid][pVips]][vip_mats]-PlayerInfo[playerid][pMats]);
				D(playerid,D_MARKET_GUN,DSI, ""YELLOW"Покупка боєприпасів", string, "Купити", "Відміна");
				return 1;
			}
			if(black_prods[2] < strval(inputtext)) return ErrorMessage(playerid,"На складі закончился товар");
		    if(PlayerInfo[playerid][pMats] + strval(inputtext) > vip_status[PlayerInfo[playerid][pVips]][vip_mats]) return ErrorMessage(playerid,"Ви не можете взяти багато");
			if(GetPlayerMoneyEx(playerid) < black_prods[6]*strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			GiveMoney(playerid,-black_prods[6]*strval(inputtext),"покупка матов ЧР");
			PlayerInfo[playerid][pMats] += strval(inputtext);
			UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
			black_prods[2] -= strval(inputtext);
			SaveMarket();
			FI[black_prods[0]][fBank] += black_prods[6]*strval(inputtext);
			new string[128];
			format(string,sizeof(string),"Ви приобрели "YELLOW"%d {f6f6d9}боєприпасів за "ORANGE"$%d",strval(inputtext),black_prods[6]*strval(inputtext));
			SendUse(playerid,string);
		}
		case D_JOB: {
			if(!response) return true;
			if(start_work[playerid]) return ErrorMessage(playerid,"Необхідно закінчити робочий день в організації");
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pLevel] < 2) return ErrorMessage(playerid,"Доступно со 2 рівня");
					PlayerInfo[playerid][pJob] = 1;
				}
				case 1: {
					if(PlayerInfo[playerid][pLevel] < 3) return ErrorMessage(playerid,"Доступно со 3 рівня");
					PlayerInfo[playerid][pJob] = 2;
				}
				case 2: {
					if(PlayerInfo[playerid][pLevel] < 3) return ErrorMessage(playerid,"Доступно со 3 рівня");
					PlayerInfo[playerid][pJob] = 4;
				}
				case 3: {
					if(PlayerInfo[playerid][pLevel] < 4) return ErrorMessage(playerid,"Доступно со 4 рівня");
					PlayerInfo[playerid][pJob] = 3;
				}
				case 4: {
					if(PlayerInfo[playerid][pLevel] < 4) return ErrorMessage(playerid,"Доступно со 4 рівня");
					PlayerInfo[playerid][pJob] = 5;
				}
				case 5: {
					if(PlayerInfo[playerid][pLevel] < 5) return ErrorMessage(playerid,"Доступно с 5 рівня");
					PlayerInfo[playerid][pJob] = 6;
				}
			}
			SendOk(playerid,"Ви успішно працевлаштувались!");
			SendOk(playerid,"Для перегляду доступных команд, введіть: "W"/menu > Команды сервера > По работе");
		}
		case D_JOB_OIL: {
			if(!response) return true;
			if(!TI[playerid][tJobOil][0]) {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необхідно закінчити робочий день в організації");
				TI[playerid][tJobOil][0] = true;
				TI[playerid][tJobSalary] = 0;
				SendOk(playerid,"Вітаємо. Ви успішно влаштувались на роботу "W"нефтяника");
				SendOk(playerid,"Для перегляду статистики, введіть - "W"/progress");
				SendOk(playerid,"На міні-карті позначені помітки прийому бочки");
		
				if(PlayerInfo[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 27);
				else A_SetPlayerSkin(playerid, 131);

				SetPlayerMapIcon(playerid,1,415.0787,1405.1608,8.5656,11,-1,MAPICON_GLOBAL);
				SetPlayerMapIcon(playerid,2,401.2273,1456.7953,8.1906,11,-1,MAPICON_GLOBAL);

				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndOil(playerid);
				else D(playerid,D_JOB_OIL_1,DSM, ""YELLOW"Закінчення роботи","\n\n\t"YELLOW"Виберіть спосіб оплати\n\n{f6f6d9}При виборі оплати на банківський рахунок,\nЗаробітна плата прийде під час PayDay\n\n","готівкою","Банк");
			}
		}
		case D_JOB_OIL_1: {
			if(!response) return EndOil(playerid);
			SetPVarInt(playerid,"oil_salary",1);
			EndOil(playerid);
		}
		case D_JOB_SAD: {
			if(!response) return true;
			if(!TI[playerid][tJobSad][0]) {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необхідно закінчити робочий день в організації");
				TI[playerid][tJobSad][0] = 1;
				TI[playerid][tJobSad][2] = 0;
				TI[playerid][tJobSad][3] = 0;
				TI[playerid][tJobSalary] = 0;
				SendOk(playerid,"Вітаємо. Ви успішно влаштувались на "W"ферму");
				SendOk(playerid,"Для догляду за деревом, візьміть  лійку та полийте дерево");
				if(PlayerInfo[playerid][pSex] == 1) A_SetPlayerSkin(playerid,35);
				else A_SetPlayerSkin(playerid, 157);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
				//D(playerid,D_JOB_SAD_2,DSM, ""YELLOW"Яблуневий сад","\n\n"W"Бажаєте пройти FAQ?\n\n","Так","Ні");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndSad(playerid);
				else D(playerid,D_JOB_SAD_1,DSM, ""YELLOW"Закінчення роботи","\n\n\t"YELLOW"Виберіть спосіб оплати\n\n{f6f6d9}При виборі оплати на банківський рахунок,\nЗаробітна плата прийде під час PayDay\n\n","готівкою","Банк");
			}
		}
		case D_JOB_SAD_1: {
			if(!response) return EndSad(playerid);
			SetPVarInt(playerid,"sad_salary",1);
			EndSad(playerid);
		}
		case D_JOB_GUNS: {
			if(!response) return true;
			if(!TI[playerid][tJobGun][0]) {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необхідно закінчити робочий день в організації");
				TI[playerid][tJobGun][0] = 1;
				SendOk(playerid,"Вітаємо. Ви успішно влаштувались на "W"зброяний завод");
				SendOk(playerid,"Візьміть заготовку у стенда і займіть вільний стіл для збору зброї");
				TI[playerid][tJobGun][1] = 1;
				TI[playerid][tJobSalary] = 0;
				if(PlayerInfo[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 73);
				else A_SetPlayerSkin(playerid, 53);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndGun(playerid);
				else D(playerid,D_JOB_GUNS_1,DSM, ""YELLOW"Закінчення роботи","\n\n\t"YELLOW"Виберіть спосіб оплати\n\n{f6f6d9}При виборі оплати на банківський рахунок,\nЗаробітна плата прийде під час PayDay\n\n","готівкою","Банк");
			}
		}
		case D_JOB_GUNS_1: {
			if(!response) return EndGun(playerid);
			SetPVarInt(playerid,"gun_salary",1);
			EndGun(playerid);
		}
		case D_JOB_WOOD: {
			if(!response) return true;
			if(!TI[playerid][tJobWood][0]) {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необхідно закінчити робочий день в організації");
				TI[playerid][tJobWood][0] = 1;
				TI[playerid][tJobWood][3] = 1;
				TI[playerid][tJobSalary] = 0;
				SendOk(playerid,"Вітаємо. Ви успішно влаштувались на "W"лесопилку");
				SendOk(playerid,"Щоб нарізати дерева, підійдіть до основи дерева");
				if(PlayerInfo[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 260);
				else A_SetPlayerSkin(playerid, 131);
				SetPlayerAttachedObject(playerid,8,341,6);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			else {
				if(!TI[playerid][tJobSalary]) EndWood(playerid);
				else D(playerid,D_JOB_WOOD_1,DSM, ""YELLOW"Закінчення роботи","\n\n\t"YELLOW"Виберіть спосіб оплати\n\n{f6f6d9}При виборі оплати на банківський рахунок,\nЗаробітна плата прийде під час PayDay\n\n","готівкою","Банк");
			}
		}
		case D_JOB_WOOD_1: {
			if(!response) return EndWood(playerid);
			SetPVarInt(playerid,"wood_salary",1);
			EndWood(playerid);
		}
		case D_STOP_LOAD: {
  			if(!response) return RemovePlayerFromVehicleAC(playerid);
			else {
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return true;
				if(VG[vehicleid][vgLoading] == false && VG[vehicleid][vgUnloading] == false) return true;
				VG[vehicleid][vgLoading] = false;
				VG[vehicleid][vgUnloading] = false;
				
				if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabelEx(VG[vehicleid][vgText]);
				
				DestroyDynamicPickup(VG[vehicleid][vgPickup]);
	            VG[vehicleid][vgPickup] = 0;
	            DestroyDynamicArea(VG[vehicleid][vgArea]);
				VG[vehicleid][vgArea] = 0;
			}
		}
		case D_STOP_LOAD_ROBHOUSE: {
  			if(!response) return RemovePlayerFromVehicleAC(playerid);
			else {
				new vehicleid = GetPlayerVehicleID(playerid);
				if(!vehicleid) return true;
				if(VG[vehicleid][vgRobHouse] == false) return true;
				VG[vehicleid][vgRobHouse] = false;
				
				if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabelEx(VG[vehicleid][vgText]);
				DestroyDynamicPickup(VG[vehicleid][vgPickup]);
	            VG[vehicleid][vgPickup] = 0;
	            DestroyDynamicArea(VG[vehicleid][vgArea]);
				VG[vehicleid][vgArea] = 0;
				SendOk(playerid,"Награбленное можно продати на чёрном рынке");

				if(IsValidDynamicPickup(RobPlayer[playerid][RobPickup])) {
					DestroyDynamicPickup(RobPlayer[playerid][RobPickup]);
					DestroyDynamicArea(RobPlayer[playerid][RobArea]);
					DestroyDynamic3DTextLabel(RobPlayer[playerid][RobText]);
				}
			}
		}
		case D_BIZZ_BUY: {
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			if(!response) {
				if(gBusiness[businessid][bizzType] == 8) {
					if(IsPlayerInRangeOfPoint(playerid,10.0, 545.7042,-1293.4833,17.2422)) SetPVarInt(playerid,"sellcarClass",1);
					if(IsPlayerInRangeOfPoint(playerid,10.0, -1965.6605,293.9383,35.4688)) SetPVarInt(playerid,"sellcarClass",3);
					if(IsPlayerInRangeOfPoint(playerid,10.0, 2200.8638,1394.8074,11.0625)) SetPVarInt(playerid,"sellcarClass",5);
					if(IsPlayerInRangeOfPoint(playerid,10.0, 2131.8152,-1151.3242,24.0600)) SetPVarInt(playerid,"sellcarClass",6);
					new carclass = GetPVarInt(playerid,"sellcarClass");
					TI[playerid][tTPpick] = true;
					SetPlayerPosAC(playerid, 1449.4907,702.5972,1087.9011, carclass, 82);
					SetPlayerFacingAngle(playerid,88.9930);
					SetCameraBehindPlayer(playerid);
					gBusiness[businessid][bizzVisitors]++;
					return 1;
				}
				new bint = gBusiness[businessid][bizzBint]-1;
				if(bint < 0 || bint >= BINT_COUNT) return 1;
				TI[playerid][tTPpick] = true;
				SetPlayerInterior(playerid,gBints[bint][bintInterior]);
				SetPlayerVirtualWorld(playerid,businessid+1);
				SetPlayerPosAC(playerid, gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ], businessid+1, gBints[bint][bintInterior]);
				SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
				gBusiness[businessid][bizzVisitors]++;
				SetCameraBehindPlayer(playerid);
			}
			else {
				if(businessid < 0) return true;
				if(gBusiness[businessid][bizzOwnerID]) return ErrorMessage(playerid,"Цей бізнес уже кто-то купил");
				new mes[128];
				format(mes,sizeof(mes),""W"Ви дійсно хочете Купити цей бізнес за "GREEN"$%d"W"?",gBusiness[businessid][bizzSellPrice]);
				D(playerid,D_BIZZ_UPDATE,DSM, ""YELLOW"Бізнес",mes,"Так","Ні");
				return 1;
			}
		}
		case D_BIZZ_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"bizzProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
					SendOk(playerid,"Ви отказались от покупки бізнеса");
					SendOk(id_prodaet,"Гравець отказался от покупки Вашого бізнеса");
					DeletePVar(playerid,"bizzProdaet");
					DeletePVar(playerid,"bizzCena");
					DeletePVar(id_pokupaet,"bizzPokupaet");
				}
			}
			else {
				if(GetPVarInt(playerid,"bizzProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
					new bizz_cena = GetPVarInt(playerid,"bizzCena");
					if(id_pokupaet == playerid) {
						if(PlayerInfo[playerid][pCash] < bizz_cena) {
							ErrorMessage(playerid,"У Вас недостаточно грошей на руках");
							ErrorMessage(id_prodaet,"У покупця недостаточно грошей на руках");
							DeletePVar(playerid,"bizzProdaet");
							DeletePVar(playerid,"bizzCena");
							DeletePVar(id_pokupaet,"bizzPokupaet");
						}
						else {
							new string[128];
							format(string,64,"покупка бізнеса у %s",player_name[id_prodaet]);
							string[0] = EOS;
							GiveMoney(playerid,-bizz_cena,string);
							string[0] = EOS;
							format(string,64,"продажа бізнеса %s",player_name[playerid]);
							GiveMoney(id_prodaet,bizz_cena,string);
							PlayerInfo[playerid][pBusiness] = PlayerInfo[id_prodaet][pBusiness];
							PlayerInfo[id_prodaet][pBusiness] = 0;
							UpdatePlayerData(id_prodaet,"bussiness",0);
							UpdatePlayerData(playerid,"bussiness",PlayerInfo[playerid][pBusiness]);
							strmid(gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
							new query[256];
							format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],PlayerInfo[playerid][pBusiness]);
							mysql_tquery(connects, query);
							new bizid = PlayerInfo[playerid][pBusiness]-1;
							UpdateBusinessText(bizid);

							if(gBusiness[bizid][bizzType] == 11 || gBusiness[bizid][bizzType] == 14) {
								if(gBusiness[bizid][bizzType] == 11) PlayerInfo[playerid][bizz_status] = 6;
								else if(gBusiness[bizid][bizzType] == 14) PlayerInfo[playerid][bizz_status] = 3;
								PlayerInfo[playerid][bizz_work] = gBusiness[bizid][bizzID];
								UpdatePlayerData(playerid,"bizz_status",PlayerInfo[playerid][bizz_status]);
								UpdatePlayerData(playerid,"bizz_work",gBusiness[bizid][bizzID]);
								PlayerInfo[playerid][bizz_cash] = 0;
								UpdatePlayerData(playerid,"bizz_cash",0);
								PlayerInfo[playerid][bizz_lcash] = 0;
								UpdatePlayerData(playerid,"bizz_lcash",0);
								
								PlayerInfo[id_prodaet][bizz_work] = 0;
								UpdatePlayerData(id_prodaet,"bizz_work",0);
								PlayerInfo[id_prodaet][bizz_status] = 0;
								UpdatePlayerData(id_prodaet,"bizz_status",0);
							}

							format(string,sizeof(string),"Ви приобрели бізнес у "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[id_prodaet],bizz_cena);
							SendUse(playerid,string);
							format(string,sizeof(string),"Ви продали бізнес "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[playerid],bizz_cena);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"bizzProdaet");
							DeletePVar(playerid,"bizzCena");
							DeletePVar(id_pokupaet,"bizzPokupaet");
						}
					}
					else {
						ErrorMessage(playerid,"Гравець оффлайн");
						DeletePVar(playerid,"bizzProdaet");
						DeletePVar(playerid,"bizzCena");
					}
				}
			}
		}
		case D_BIZZ_BUY_FILL: {
			if(!response) return true;
			new businessid = GetPVarInt(playerid,"bfillingid");
			DeletePVar(playerid,"bfillingid");
			if(businessid < 0) return true;
			if(gBusiness[businessid][bizzOwnerID]) return ErrorMessage(playerid,"Цей бізнес уже кто-то купил");
			new price = gBusiness[businessid][bizzSellPrice];
			if(PlayerInfo[playerid][pCash] < price) return  ErrorMessage(playerid,"У Вас недостаточно грошей для покупки этого бізнеса");
			if(PlayerInfo[playerid][pBusiness]) return  ErrorMessage(playerid,"У вас уже є бізнес");
			new query[128];
			format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],businessid+1);
			mysql_tquery(connects, query,"","");
			gBusiness[businessid][bizzOwnerID] = PlayerInfo[playerid][pID];
			SetString(gBusiness[businessid][bizzOwner],player_name[playerid]);
			SendClientMessage(playerid,CGOLD,"Вітаємо, ви купили бізнес. Не забувайте оплачувати його, без оплати його продадуть державі!");
			SendClientMessage(playerid,CGOLD,"Панель керування бізнесом: "W"/bpanel");

			gBusiness[businessid][bizzDay] = unix + 60*60*24;

			format(query,sizeof(query),"UPDATE `business` SET `deliving` = '%d' WHERE id = '%d'",gBusiness[businessid][bizzDay],gBusiness[businessid][bizzID]);
			mysql_tquery(connects, query,"","");

			gBusiness[businessid][bizzBank] = 0;
			gBusiness[businessid][bizzBankDay] = 0;
			gBusiness[businessid][bizzProduct] = 100;
			gBusiness[businessid][bizzPrice] = 12;
			gBusiness[businessid][bizzProdOrder] = 0;
			gBusiness[businessid][bizzProdOrderPrice] = 0;
			SaveBusiness(businessid);
			UpdateBusinessText(businessid);
			UpdatePlayerData(playerid,"bussiness",businessid+1);
			PlayerInfo[playerid][pBusiness] = gBusiness[businessid][bizzID];
			GiveMoney(playerid, -price,"покупка бізнеса");
		}
		case D_BIZZ_UPDATE: {
			if(!response) return true;
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			if(gBusiness[businessid][bizzOwnerID]) return ErrorMessage(playerid,"Цей бізнес уже кто-то купил");
			new price = gBusiness[businessid][bizzSellPrice];
			if(PlayerInfo[playerid][pCash] < price) return  ErrorMessage(playerid,"У Вас недостаточно грошей для покупки этого бізнеса");
			if(PlayerInfo[playerid][pBusiness]) return  ErrorMessage(playerid,"У вас уже є бізнес");
			new query[128];
			format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],businessid+1);
			mysql_tquery(connects, query,"","");
			gBusiness[businessid][bizzOwnerID] = PlayerInfo[playerid][pID];
			SetString(gBusiness[businessid][bizzOwner],player_name[playerid]);
			if(gBusiness[businessid][bizzType] == 11 || gBusiness[businessid][bizzType] == 14 || gBusiness[businessid][bizzType] == 15) {
				if(gBusiness[businessid][bizzType] == 11) {
					PlayerInfo[playerid][bizz_status] = 6;
					SendClientMessage(playerid,CGOLD,"Вітаємо, ви купили таксопарк. Не забувайте оплачувати його, без оплати його продадуть державі!");
				}
				else if(gBusiness[businessid][bizzType] == 14) {
					PlayerInfo[playerid][bizz_status] = 3;
					SendClientMessage(playerid,CGOLD,"Вітаємо, ви купили транспортную компанию. Не забывайте оплачивать ее, иначе ее продадут государству!");
				}
				else if(gBusiness[businessid][bizzType] == 15) {
					SendClientMessage(playerid,CGOLD,"Вітаємо, ви купили банківське відділення. Не забувайте оплачувати його, без оплати його продадуть державі!");
				}
				PlayerInfo[playerid][bizz_cash] = 0;
				PlayerInfo[playerid][bizz_lcash] = 0;
				PlayerInfo[playerid][bizz_work] = gBusiness[businessid][bizzID];
				UpdatePlayerData(playerid,"bizz_status",PlayerInfo[playerid][bizz_status]);
				UpdatePlayerData(playerid,"bizz_work",gBusiness[businessid][bizzID]);
				UpdatePlayerData(playerid,"bizz_cash",0);
				UpdatePlayerData(playerid,"bizz_lcash",0);
				gBusiness[businessid][bizzUpgrade][2] = 1;
				UpdateBizzUpgrade(businessid);
			}
			else {
				SendClientMessage(playerid,CGOLD,"Вітаємо, ви купили бізнес. Не забувайте оплачувати його, без оплати його продадуть державі!");
				SendClientMessage(playerid,CGOLD,"Панель керування бізнесом - "W"/bpanel");
			}

			gBusiness[businessid][bizzDay] = unix + 60*60*24;
			UpdateBusinessData(businessid+1,"deliving",gBusiness[businessid][bizzDay]);

			gBusiness[businessid][bizzBank] = 0;
			gBusiness[businessid][bizzBankDay] = 0;
			gBusiness[businessid][bizzProduct] = 500;
			gBusiness[businessid][bizzPrice] = 1;
			SaveBusiness(businessid);
			UpdateBusinessText(businessid);
			UpdatePlayerData(playerid,"bussiness",businessid+1);
			PlayerInfo[playerid][pBusiness] = gBusiness[businessid][bizzID];
			GiveMoney(playerid, -price,"покупка бізнеса");
		}
  		case D_BIZZ: {
			if(!response) return true;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
				case 0..5: dialog_business(playerid,bizz,listitem);
				case 6: dialog_business(playerid,bizz,7);
				case 7: dialog_business(playerid,bizz,8);
			}
		}
		case D_BIZZ_2: {
			if(!response) return true;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			dialog_business(playerid,bizz,listitem);
		}
		case D_BIZZ_3: {
			if(!response) return true;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
				case 0: dialog_business(playerid,bizz,0);
				case 1: dialog_business(playerid,bizz,2);
				case 2: dialog_business(playerid,bizz,3);
				case 3: dialog_business(playerid,bizz,5);
				case 4: dialog_business(playerid,bizz,6);
				case 5: dialog_business(playerid,bizz,7);
				case 6: dialog_business(playerid,bizz,8);
			}
		}
		case D_BIZZ_4: {
			if(!response) return true;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
				case 0..4: dialog_business(playerid,bizz,listitem);
				case 5: dialog_business(playerid,bizz,7);
				case 6: dialog_business(playerid,bizz,8);
			}
		}
		case D_BIZZ_5: {
			if(!response) return true;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(bizz < 0) return true;
			switch(listitem) {
				case 0..2: dialog_business(playerid,bizz,listitem);
				case 3: dialog_business(playerid,bizz,4);
				case 4: dialog_business(playerid,bizz,5);
				case 5: dialog_business(playerid,bizz,7);
				case 6: dialog_business(playerid,bizz,8);
			}
		}
		case D_BIZZ_UPGRADE: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			new bizid = PlayerInfo[playerid][pBusiness]-1;
			switch(listitem) {
				case 0: {
					if(gBusiness[bizid][bizzBank] < 100000) return ErrorMessage(playerid, "На рахунку бізнеса недостаточно коштів");
					if(gBusiness[bizid][bizzUpgrade][0] >= 10000) return ErrorMessage(playerid, "У Вас придбано дане покращення");
					gBusiness[bizid][bizzUpgrade][0] = 10000;
					gBusiness[bizid][bizzBank] -= 100000;
				}
				case 1: {
					if(gBusiness[bizid][bizzBank] < 200000) return ErrorMessage(playerid, "На рахунку бізнеса недостаточно коштів");
					if(gBusiness[bizid][bizzUpgrade][1] == 1) return ErrorMessage(playerid, "У Вас придбано дане покращення");
					gBusiness[bizid][bizzUpgrade][1] = 1;
					gBusiness[bizid][bizzBank] -= 200000;
				}
				case 2: {
					if(gBusiness[bizid][bizzBank] < 200000) return ErrorMessage(playerid, "На рахунку бізнеса недостаточно коштів");
					if(gBusiness[bizid][bizzUpgrade][2] == 1) return ErrorMessage(playerid, "У Вас придбано дане покращення");
					gBusiness[bizid][bizzUpgrade][2] = 1;
					gBusiness[bizid][bizzBank] -= 200000;
				}
			}
			SendClientMessage(playerid,CGOLD,"Вітаємо з покупкою улучшения в Ваш бізнес");
			UpdateBusinessData(bizid+1,"bank",gBusiness[bizid][bizzBank]);
			UpdateBizzUpgrade(bizid);
		}
		case D_BIZZ_SELL: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(PlayerInfo[playerid][pBusiness] < 1) return ErrorMessage(playerid,"У вас немає бізнеса");
			new id = PlayerInfo[playerid][pBusiness] - 1;
			new sum = floatround(gBusiness[id][bizzSellPrice]/100*80);

			FI[fWHITEHOUSE][fBank] += floatround(gBusiness[id][bizzSellPrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			if(UpdateBusinessData(id+1,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Помилка #21");
			gBusiness[id][bizzOwnerID] = 0;
			gBusiness[id][bizzStatus] = 1;
			gBusiness[id][bizzUpgrade][0] = 5000;
			if(gBusiness[id][bizzType] != 16) gBusiness[id][bizzUpgrade][1] = 0;
			gBusiness[id][bizzUpgrade][2] = 0;
			gBusiness[id][bizzMafia] = 0;
			gBusiness[id][bizzPrice] = 5;
			SetString(gBusiness[id][bizzOwner],"");
			if(gBusiness[id][bizzType] != 16) {
				new query[282];
				format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '0', `owner` = '', `status` = '1', `mafia` = '0', `price` = '5',`order` = '0',`orderprice` = '0',`upgrade` = '5000|0|0' WHERE `id` = '%d'",id+1);
				mysql_tquery(connects, query,"","");
			}
			if(gBusiness[id][bizzType] == 16) {
				new query[282];
				format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '0', `owner` = '', `status` = '1', `mafia` = '0', `price` = '5',`order` = '0',`orderprice` = '0',`upgrade` = '5000|1|0' WHERE `id` = '%d'",id+1);
				mysql_tquery(connects, query,"","");
			}
			UpdateBusinessText(id);
			UpdatePlayerData(playerid,"bussiness",0);
			PlayerInfo[playerid][pBusiness] = 0;
			GiveMoney(playerid,sum,"продажа бізнеса");
			if(gBusiness[id][bizzType] == 11) {
				sell_bizztaxi(id+1);
				SendOk(playerid,"Таксопарк продан государству");
			}
			else if(gBusiness[id][bizzType] == 14) {
				sell_bizztaxi(id+1);
				SendOk(playerid,"Транспортная компания продана государству");
			}
			else if(gBusiness[id][bizzType] == 15) {
				SendOk(playerid,"Банківське відділення продано государству");
			}
			else SendOk(playerid,"Бізнес продан государству");
		}
		case D_BIZZ_BANK: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Стан рахунку: "GREEN"$%d\n"YELLOW"1."W" Зняти гроші\n"YELLOW"2."W" Покласти гроші";
					new string[sizeof(f_str) +1 + (-2 + 10)];
					format(string,sizeof(string),f_str,gBusiness[PlayerInfo[playerid][pBusiness] - 1][bizzBank]);
					D(playerid,D_BIZZ_BANK,DSL,""YELLOW"Керування касою",string,"Далі","Назад");
				}
				case 1: D(playerid,D_BIZZ_BANK_INPUT,1,"Бізнес","\n\n"W"Введіть сумму, которую хочете взяти с кассы бізнеса:\n\n","Взяти","Відміна");
				case 2: D(playerid,D_BIZZ_BANK_PUT,1,"Бізнес","\n\n"W"Введіть сумму, которую хочете покласти в кассу бізнеса:\n\n","Покласти","Відміна");
			}
		}
		case D_BIZZ_BANK_INPUT: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			new id = PlayerInfo[playerid][pBusiness] - 1;
			new sum = strval(inputtext);
			if(sum < 1 || sum > 1000000) return D(playerid,D_BIZZ_BANK_INPUT,1,"Бізнес","\n\n"W"Введіть сумму, которую хочете взяти с кассы бізнеса:\n\n"NO"*{f6f6d9} От $1 до $1.000.000\n\n","Взяти","Відміна");
			if(gBusiness[id][bizzBank] < sum) return D(playerid,D_BIZZ_BANK_INPUT,1,"Бізнес","\n\n"W"Введіть сумму, которую хочете взяти с кассы бізнеса:\n\n"NO"*{f6f6d9} В кассе недостаточно коштів\n\n","Взяти","Відміна");	
			if(UpdateBusinessData(id+1,"bank",gBusiness[id][bizzBank] - sum)) return SendClientMessage(playerid,COLOR_REDD,"Помилка #20");
			gBusiness[id][bizzBank] -= sum;
			UpdateBusinessData(id+1,"bank",gBusiness[id][bizzBank]);
			GiveMoney(playerid,sum,"прибыль с бізнеса");
			
			new string[128];
			format(string,sizeof(string),"Ви взяли с кассы бізнеса: "ORANGE"$%d",sum);
			SendUse(playerid,string);
			pc_cmd_bpanel(playerid);
		}
		case D_BIZZ_BANK_PUT: {
			if(!response) return pc_cmd_bpanel(playerid);
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			new id = PlayerInfo[playerid][pBusiness] - 1;
			new sum = strval(inputtext);
			if(sum < 1 || sum > 1000000) return D(playerid,D_BIZZ_BANK_PUT,1,"Бізнес","\n\n"W"Введіть сумму, которую хочете покласти в кассу бізнеса:\n\n"NO"*{f6f6d9} От $1 до $1.000.000\n\n","Покласти","Відміна");
			if(GetPlayerMoneyEx(playerid) < sum) return D(playerid,D_BIZZ_BANK_PUT,1,"Бізнес","\n\n"W"Введіть сумму, которую хочете покласти в кассу бізнеса:\n\n"NO"*{f6f6d9} У Вас недостаточно коштів\n\n","Покласти","Відміна");	
			if(UpdateBusinessData(id+1,"bank",gBusiness[id][bizzBank] + sum)) return SendClientMessage(playerid,COLOR_REDD,"Помилка #20");
			gBusiness[id][bizzBank] += sum;
			UpdateBusinessData(id+1,"bank",gBusiness[id][bizzBank]);
			GiveMoney(playerid,-sum,"положил в банк бізнеса");
			
			new string[128];
			format(string,sizeof(string),"Ви положили в кассу бізнеса: "ORANGE"$%d",sum);
			SendUse(playerid,string);
			pc_cmd_bpanel(playerid);
		}
		case D_BIZZ_PRICE: {
			if(!response) return pc_cmd_bpanel(playerid);
			new id = PlayerInfo[playerid][pBusiness] - 1;
			if(id < 0) return true;
			new price = strval(inputtext);
			if(gBusiness[id][bizzType] == 7) {
				if(price < 12 || price > 24) return D(playerid,D_BIZZ_PRICE,DSI, ""YELLOW"Бізнес","\n\n"W"Введіть цену за 1 литр\nПримечание: от "GREEN"$12"W" до "GREEN"$24\n\n","Змінити","Відміна");
			}
			else {
				if(price < 1 || price > 5) return D(playerid,D_BIZZ_PRICE,DSI, ""YELLOW"Бізнес","\n\n"W"Введіть цену за "YELLOW"1"W" ед. товара\nПримечание: от "GREEN"$1"W" до "GREEN"$5\n\n","Змінити","Відміна");
			}
			gBusiness[id][bizzPrice] = price;
			UpdateBusinessData(id+1,"price",price);
			UpdateBusinessText(id);
			new string[128];
			if(gBusiness[id][bizzType] == 7) format(string,sizeof(string),"Ціна за "YELLOW"1{f6f6d9} литр встановлена: "ORANGE"$%d",price);
			else format(string,sizeof(string),"Ціна за "YELLOW"1{f6f6d9} ед. товара встановлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
			pc_cmd_bpanel(playerid);
		}
		case D_BIZZ_ENTER: {
			if(!response) return pc_cmd_bpanel(playerid);
			new id = PlayerInfo[playerid][pBusiness] - 1;
			if(id < 0) return true;
			new price = strval(inputtext);
			if(price < 0 || price > 5000) return D(playerid,D_BIZZ_ENTER,DSI, ""YELLOW"Бізнес","\n\n"W"Введіть цену за вход\nПримечание: от "GREEN"$0"W" до "GREEN"$5000\n\n","Змінити","Відміна");
			gBusiness[id][bizzEnter] = price;
			UpdateBusinessData(id+1,"enter",price);
			UpdateBusinessText(id);
			new string[128];
			format(string,sizeof(string),"Ціна за вход встановлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
			pc_cmd_bpanel(playerid);
		}
		case D_BIZZ_ENTERS: {
			if(!response) return 1;
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
		    new price = gBusiness[businessid][bizzEnter];
			new bint = gBusiness[businessid][bizzBint]-1;
			if(bint < 0 || bint >= BINT_COUNT) return 1;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA) {
				if(GetPlayerMoneyEx(playerid) < price/2) return ErrorMessage(playerid,"У Вас недостаточно грошей");
				GiveMoney(playerid,-floatround(price/2),"вход в бізнес");
				bizz_pay(businessid,floatround(price/2));
			}
			else if(PlayerInfo[playerid][pVips] == VIP_NONE || PlayerInfo[playerid][pVips] == VIP_BAZE || PlayerInfo[playerid][pVips] == VIP_GOLD || PlayerInfo[playerid][pVips] == VIP_KING || PlayerInfo[playerid][pVips] == VIP_SILVER) {
				if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
				GiveMoney(playerid,-price,"вход в бізнес");
				bizz_pay(businessid,price);
			}
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ], businessid+1, gBints[bint][bintInterior]);
			SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
			gBusiness[businessid][bizzVisitors]++;
			SetCameraBehindPlayer(playerid);
			if(gBusiness[businessid][bizzType] == 10 || gBusiness[businessid][bizzType] == 11 || gBusiness[businessid][bizzType] == 14 || gBusiness[businessid][bizzType] == 15) OnPlayerUpdateLoadingMode(playerid);
		}
		case dBusinessProd: {
			if(!response) return pc_cmd_bpanel(playerid);
			new put = strval(inputtext);
			new bizid = PlayerInfo[playerid][pBusiness]-1;
			if(gBusiness[bizid][bizzProdOrder]) return ErrorMessage(playerid,"Ви уже заказали продукти, очікуйте коли развозчики привезуть його в Ваш бізнес");
			if(put < 500 || put > gBusiness[bizid][bizzUpgrade][0]) {
				static const f_str[] = "\n\n"W"Введіть кількість продуктів, яке бажаєте заказати:\n\n"NO"*{f6f6d9} Мінімум 500 максимум %d\n\n";
				new string[sizeof(f_str) +1 + (-2 + 6)];
				format(string,sizeof(string),f_str,gBusiness[bizid][bizzUpgrade][0]);
				D(playerid,dBusinessProd,DSI, ""YELLOW"Заказ продуктов", string, "Далі", "Відміна");
				return 1;
			}
			if(gBusiness[bizid][bizzProduct]+put > gBusiness[bizid][bizzUpgrade][0]) return D(playerid,dBusinessProd,DSI, ""YELLOW"Заказ продуктов", "\n\n"W"Введіть кількість продуктов, которое хочете заказать:\n\n"NO"*{f6f6d9} На На вашому складі достаточно продуктів\n\n", "Далі", "Відміна");
	
			SetPVarInt(playerid,"buy_prod",put);
			D(playerid,dBusinessProd2,DSI, ""YELLOW"Заказ продуктов", "\n\n"W"Введіть цену за "YELLOW"1"W" продукт:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Відміна");
			return 1;
		}
		case dBusinessProd2: {
			if(!response) return pc_cmd_bpanel(playerid),DeletePVar(playerid,"buy_prod");
			new put;
			new bizid = PlayerInfo[playerid][pBusiness]-1;
			if(sscanf(inputtext,"i",put)) return D(playerid,dBusinessProd2,DSI, ""YELLOW"Заказ продуктов", "\n\n"W"Введіть цену за "YELLOW"1"W" продукт:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Відміна");
			if(put < 2 || put > 4) return D(playerid,dBusinessProd2,DSI, ""YELLOW"Заказ продуктов", "\n\n"W"Введіть цену за "YELLOW"1"W" продукт:\nПримечание: от "GREEN"$2"W" до "GREEN"$4\n\n", "Заказать", "Відміна");
			new string[144];
			new prod = GetPVarInt(playerid,"buy_prod") * put;
			if(gBusiness[bizid][bizzBank] < prod) {
				format(string, sizeof(string), "Недостаточно коштів на рахунку бізнеса. Для оплаты необхідно: "NO"$%d",prod);
				ErrorMessage(playerid,string);
				DeletePVar(playerid,"buy_prod");
				return 1;
			}
			gBusiness[bizid][bizzBank] -= prod;
			gBusiness[bizid][bizzProdOrder] = GetPVarInt(playerid,"buy_prod");
			gBusiness[bizid][bizzProdOrderPrice] = put;

			SaveBusiness(bizid);

			format(string, sizeof(string), ""W"Заказано продуктов: "O"%d\n"W"Оплачено со рахунку бізнеса: "GREEN"$%d",gBusiness[bizid][bizzProdOrder],gBusiness[bizid][bizzProdOrderPrice]*gBusiness[bizid][bizzProdOrder]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Заказ продуктов", string, "Закрити", "");
			DeletePVar(playerid,"buy_prod");
			return 1;
		}
		case D_BIZZ_STATS: return pc_cmd_bpanel(playerid);
		case D_AMMO: {
			if(!response) return 1;
			switch(listitem) {
				case 0..5,12,13: {
					new bizid = TI[playerid][tSelectedBusinessID];
					new slot = listitem;
					if(PlayerInfo[playerid][pCash] < gSellGunPrice[slot]*gBusiness[bizid][bizzPrice]) return ErrorMessage(playerid,"Недостаточно грошей");
					new gun_name[32 + 1],string[128];
					GetWeaponName(gSellGun[slot],gun_name,32);
					if(gBusiness[bizid][bizzProduct]-gSellGunProds[slot] > 0) {
						gBusiness[bizid][bizzProduct] -= gSellGunProds[slot];
						bizz_pay(bizid,(gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]));
					} 
					UpdateBusinessText(bizid);

					if(listitem < 12) {
						format(string, sizeof(string), "Ви купили "YELLOW"%s {f6f6d9}за "ORANGE"$%i",gun_name, gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
						AC_GivePlayerWeapon(playerid,gSellGun[slot],1);
					}
					else if(listitem == 12) {
						SetPlayerArmour(playerid,100);
						format(string, sizeof(string), "Ви купили "YELLOW"Armour {f6f6d9}за "ORANGE"$%i", gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
					}
					else if(listitem == 13) {
						//return ErrorMessage(playerid,"В разработке. Уже скоро...");
						if(TI[playerid][tTir]) return ErrorMessage(playerid,"У Вас уже есть пропуск в тир");
						format(string, sizeof(string), "Ви купили "YELLOW"пропуск в тир {f6f6d9}за "ORANGE"$%i", gSellGunPrice[slot] * gBusiness[bizid][bizzPrice]);
						SendUse(playerid, string);
						TI[playerid][tTir] = true;
					}
					GiveMoney(playerid,-gSellGunPrice[slot] * gBusiness[bizid][bizzPrice],"покупка зброї(аммо)");
				}
				case 6..11: {
					D(playerid,D_AMMO_2, DIALOG_STYLE_INPUT, "Меню аммо", ""W"Введіть кількість патрон, которое хочете Купити:", "Далі", "Відміна");
					SetPVarInt(playerid,"slot_ammo", listitem);
				}
			}
			return 1;
		}
		case D_AMMO_2: {
			if(!response) return DeletePVar(playerid,"slot_ammo");
			new slot = GetPVarInt(playerid,"slot_ammo");
			new bizid = TI[playerid][tSelectedBusinessID];
			new patron = strval(inputtext);
			if(patron <= 0 || patron > 1000) return D(playerid,D_AMMO_2, DIALOG_STYLE_INPUT, "Меню аммо", ""W"Введіть кількість патрон, которое хочете Купити:\n\n"NO"*{f6f6d9} От 1 до 1000 патрон", "Далі", "Відміна");
			if(PlayerInfo[playerid][pCash] < gSellGunPrice[slot]*gBusiness[bizid][bizzPrice] * patron) return D(playerid,D_AMMO_2, DIALOG_STYLE_INPUT, "Меню аммо", ""W"Введіть кількість патрон, которое хочете Купити:\n\n"NO"*{f6f6d9} Недостаточно коштів", "Далі", "Відміна");
			new gun_name[32 + 1],string[128];
			GetWeaponName(gSellGun[slot],gun_name,32);
			format(string, sizeof(string), "Ви купили "YELLOW"%s [%i пат.] {f6f6d9}за "ORANGE"$%i",gun_name,patron, gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron);
			SendUse(playerid, string);
			if(gBusiness[bizid][bizzProduct]-gSellGunProds[slot]*patron > 0) {
				gBusiness[bizid][bizzProduct] -= gSellGunProds[slot]*patron;
				bizz_pay(bizid,(gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron));
			} 

			AC_GivePlayerWeapon(playerid,gSellGun[slot],patron);
			GiveMoney(playerid,-gSellGunPrice[slot] * gBusiness[bizid][bizzPrice] * patron,"покупка зброї(аммо)");
			DeletePVar(playerid,"slot_ammo");
			return 1;
		}
		case D_BOX_2: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			switch(listitem) {
				case 0: {
					if(GetPlayerMoneyEx(playerid) < gBusiness[id][bizzPrice]*150) return ErrorMessage(playerid,"У Вас недостаточно грошей");
					bizz_pay(id,gBusiness[id][bizzPrice]*150);
					GiveMoney(playerid, -gBusiness[id][bizzPrice]*150,"покупка в спортзале");
					if(PlayerInfo[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 80);
					else A_SetPlayerSkin(playerid,192);
					TI[playerid][tGym] = true;
					//SendOk(playerid,"Для выход на ринге введіть '/fight'");
				}
				case 1..3: {
					if(!TI[playerid][tGym]) return ErrorMessage(playerid,"Для начала приобретите спортивную форму");
					if(TI[playerid][tGymSkill]) return ErrorMessage(playerid,"Ви уже изучаете стиль боя");
					if(PlayerInfo[playerid][pBox] == listitem) return ErrorMessage(playerid,"У Вас уже изучен данный стиль боя");
					if(PlayerInfo[playerid][pBox]+1 < listitem) return ErrorMessage(playerid,"Для начала изучите предыдущий стиль боя");
					if(GetPlayerMoneyEx(playerid) < 5000) return ErrorMessage(playerid,"У Вас недостаточно грошей");
					if(gBusiness[id][bizzProduct]-130 > 0) {
						gBusiness[id][bizzProduct] -= 130;
						bizz_pay(id,5000);
					}
					GiveMoney(playerid, -5000,"покупка в спортзале");
					SendOk(playerid,"Ви почали тренування, бийте по грушам для прокачки навичок борьби");
					TI[playerid][tGymSkill] = listitem;
				}
				case 4: {
					if(GetPlayerMoneyEx(playerid) < 200) return ErrorMessage(playerid,"У Вас недостаточно грошей");
					if(TI[playerid][tGyms] + 250 > 1000) return ErrorMessage(playerid,"Не можна взяти більше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-20 > 0) {
						gBusiness[id][bizzProduct] -= 20;
						bizz_pay(id,200);
					}
					GiveMoney(playerid, -200,"покупка в спортзале");
					TI[playerid][tGyms] += 250;
					SendOk(playerid,"Ви купили шейкер Smart 250мл на 250 ударов");
				}
				case 5: {
					if(GetPlayerMoneyEx(playerid) < 350) return ErrorMessage(playerid,"У Вас недостаточно грошей");
					if(TI[playerid][tGyms] + 500 > 1000) return ErrorMessage(playerid,"Не можна взяти більше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-35 > 0) {
						gBusiness[id][bizzProduct] -= 35;
						bizz_pay(id,350);
					}
					GiveMoney(playerid, -350,"покупка в спортзале");
					TI[playerid][tGyms] += 500;
					SendOk(playerid,"Ви купили шейкер BSN 500мл на 500 ударов");
				}
				case 6: {
					if(GetPlayerMoneyEx(playerid) < 500) return ErrorMessage(playerid,"У Вас недостаточно грошей");
					if(TI[playerid][tGyms] + 750 > 1000) return ErrorMessage(playerid,"Не можна взяти більше 1 литра шейкера");
					if(gBusiness[id][bizzProduct]-50 > 0) {
						gBusiness[id][bizzProduct] -= 50;
						bizz_pay(id,500);
					}
					GiveMoney(playerid, -500,"покупка в спортзале");
					TI[playerid][tGyms] += 750;
					SendOk(playerid,"Ви купили шейкер Biotech 750мл на 750 ударов");
				}
				case 7: {
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Інформація",""W"Шейкер поможет тебе ускорить прокачку стиля боя на "ORANGE"30%.\n"W"Для наиоблее эффективной тренировки рекомендуем приобрести "ORANGE"1000мл шейкера.\n\n"NO"Увага!"W" Если Вы вышли из ігри не закончив тренування, Ваш прогресс сохранится.\nЗа форму, тренування и шейкер придётся заплатить снова. Удачной тренировки!\n\n","Закрити","");
				}
				case 8: {
					if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
						A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
						SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
					}
					else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
					TI[playerid][tGym] = false;
					SendOk(playerid,"Ви закінчили тренування");
				}
			}
		}
		case D_BIZZ_24: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = gShopPrice[listitem]*gBusiness[id][bizzPrice];
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pPhone]) return ErrorMessage(playerid,"У Вас уже есть телефон"),show_24(playerid,id);
					new number;
					number = Random(100000,999999);
					PlayerInfo[playerid][pPhone] = number;
					UpdatePlayerData(playerid,"pPhone",number);
					new string[128];
					format(string,sizeof(string),"Вітаємо з покупкою телефона! Ваш номер: "ORANGE"%d",number);
					SendUse(playerid,string);
				}
				case 1: {
					AC_GivePlayerWeapon(playerid,43,20);
					SendUse(playerid,"Вітаємо з покупкою камеры! Вы можете запечатлить 20 кадров");
				}
				case 2: {
					if(PlayerInfo[playerid][pWatch]) return ErrorMessage(playerid,"У Вас уже есть часы"),show_24(playerid,id);
					PlayerInfo[playerid][pWatch] = 1;
					UpdatePlayerData(playerid,"watch",1);
					SendUse(playerid,"Вітаємо з покупкою часов! Посмотреть время - "ORANGE"/time");
				}
				case 3: {
					if(PlayerInfo[playerid][pBook]) return ErrorMessage(playerid,"У Вас уже телефонная книга"),show_24(playerid,id);
					PlayerInfo[playerid][pBook] = 1;
					UpdatePlayerData(playerid,"book",1);
					SendUse(playerid,"Вітаємо з покупкою телефонной книги! Контакты - "ORANGE"/book");
				}
				case 4: {
				    if(!PlayerInfo[playerid][pPhone]) return ErrorMessage(playerid,"У вас немає телефона"),show_24(playerid,id);
					return D(playerid,D_BIZZ_SIM,DSI, ""YELLOW"Покупка номера","\n\n"W"Введіть номер, который хочете использовать (6 цифр):\n\n","Купити","Закрити");
				}
				case 5: {
					if(PlayerInfo[playerid][pMask] >= vip_status[PlayerInfo[playerid][pVips]][vip_mask]) {
						new string[128];
						format(string,sizeof(string),"Не можна хранить більше %d масок",vip_status[PlayerInfo[playerid][pVips]][vip_mask]);
						ErrorMessage(playerid, string),show_24(playerid,id);
						return 1;
					}
     				PlayerInfo[playerid][pMask] += 1;
					UpdatePlayerData(playerid,"pMask",PlayerInfo[playerid][pMask]);
					SendUse(playerid,"Вітаємо з покупкою маски! Использовать маску - "ORANGE"/mask");
				}
				case 6: return D(playerid,D_BIZZ_MEDKIT,DSL, ""YELLOW"Покупка аптечки",""YELLOW"1."W" Себе\n"YELLOW"2."W" В дом\n"YELLOW"3."W" В банду","Купити","Закрити");
				case 7: {
					for(new i; i <= 11; i++) {
						new gunid, ammo;
						GetPlayerWeaponData(playerid, i, gunid,ammo);
						if(gunid == 14) return ErrorMessage(playerid,"У Вас уже есть квіти"),show_24(playerid,id);
					}
					AC_GivePlayerWeapon(playerid,14,1);
					SendUse(playerid,"Вітаємо з покупкою квітів! Подарить квіти - "ORANGE"/flowers");
				}
				case 8: {
					if(PlayerInfo[playerid][pInstrument] >= 5) return ErrorMessage(playerid,"Не можна хранить більше 5 ремкомплектов");
					PlayerInfo[playerid][pInstrument] ++;
					UpdatePlayerData(playerid,"pInstr",PlayerInfo[playerid][pInstrument]);
					SendUse(playerid,"Вітаємо з покупкою ремкомплекта! Починть транспорт - "ORANGE"/remp");
				}
				case 9: {
					AC_GivePlayerWeapon(playerid,41,5000);
					SendUse(playerid,"Вітаємо з покупкою балончика с краской!");
				}
				case 10: {
					if(PlayerInfo[playerid][pJemmy] >= vip_status[PlayerInfo[playerid][pVips]][vip_jimmy]) {
						new string[128];
						format(string,sizeof(string),"Не можна хранить більше %d відмичок",vip_status[PlayerInfo[playerid][pVips]][vip_mask]);
						ErrorMessage(playerid, string),show_24(playerid,id);
						return 1;
					}
					PlayerInfo[playerid][pJemmy] ++;
					UpdatePlayerData(playerid,"pJemmy",PlayerInfo[playerid][pJemmy]);
					SendUse(playerid,"Вітаємо з покупкою відмичок! Вона знадобиться вам Вам при спробі взлому дверного замка");
				}
			}
			if(gBusiness[id][bizzProduct]-gShopProduct[listitem] > 0) {
				gBusiness[id][bizzProduct] -= gShopProduct[listitem];
				bizz_pay(id,price);
			} 

			if(listitem != 0) show_24(playerid,id);

            GiveMoney(playerid, -price,"покупка в 24-7");
			show_24(playerid,id);
		}
		case D_BIZZ_SIM: {
      		if(!response) return true;
		    if(isNumeric(inputtext) || strlen(inputtext) != 6 || inputtext[0] == '0') {
				D(playerid,D_BIZZ_SIM,DSI, ""YELLOW"Покупка номера","\n\n"W"Введіть номер, который хочете использовать (6 цифр):\n\n"NO"*{f6f6d9} Номер должен состоять из 6 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купити","Закрити");
				return true;
			}
			new query[128], id = TI[playerid][tSelectedBusinessID], price = gShopPrice[4]*gBusiness[id][bizzPrice];
			format(query,sizeof(query),"SELECT `pPhone` FROM `accounts` WHERE `pPhone` = '%i'",strval(inputtext));
			mysql_tquery(connects, query, "sim_shop", "dddd", playerid, strval(inputtext), id, price);
		}
		case D_BIZZ_MEDKIT: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pMedKit] == vip_status[PlayerInfo[playerid][pVips]][vip_heal]) {
						new string[128];
						format(string,sizeof(string),"Не можна хранить більше %d аптечок",vip_status[PlayerInfo[playerid][pVips]][vip_heal]);
						ErrorMessage(playerid, string),show_24(playerid,id);
						return 1;
					}
					static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nВ кишеню поміститься: "YELLOW"%d"W" аптечок";
					new string[sizeof(f_str) + 5];
					format(string,sizeof(string),f_str,vip_status[PlayerInfo[playerid][pVips]][vip_heal]-PlayerInfo[playerid][pMedKit]);
					return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
				}
				case 1: {
					if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку"),show_24(playerid,id);
					if(gHouses[PlayerInfo[playerid][pHouse]-1][houseHealth] == 500) return ErrorMessage(playerid, "Не можна хранить більше 500 аптечок в сейфе будинку"),show_24(playerid,id);
					static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nВ сейф будинку поміститься: "YELLOW"%d"W" аптечок";
					new string[sizeof(f_str) + 5];
					format(string,sizeof(string),f_str,500-gHouses[PlayerInfo[playerid][pHouse]-1][houseHealth]);
					return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
				}
				case 2: {
					if(!IsAGang(playerid)) return ErrorMessage(playerid,"Ви не знаходитесь в банде"),show_24(playerid,id);
					if(FI[PlayerInfo[playerid][pMember]][fHealth] == 500) return ErrorMessage(playerid, "Не можна хранить більше 500 аптечок На складі банди"),show_24(playerid,id);
					static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nНа складі банди поміститься: "YELLOW"%d"W" аптечок";
					new string[sizeof(f_str) + 5];
					format(string,sizeof(string),f_str,500-FI[PlayerInfo[playerid][pMember]][fHealth]);
					return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
				}
			}
		}
		case D_BIZZ_MEDKIT_2: {
			if(!response) return true;
			if(strval(inputtext) < 1 || strval(inputtext) > vip_status[PlayerInfo[playerid][pVips]][vip_heal]) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nВ кишеню поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} От 1 и до %d";
				new string[sizeof(f_str) + 8];
				format(string,sizeof(string),f_str,vip_status[PlayerInfo[playerid][pVips]][vip_heal]-PlayerInfo[playerid][pMedKit],vip_status[PlayerInfo[playerid][pVips]][vip_heal]);
				return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			if(PlayerInfo[playerid][pMedKit]+strval(inputtext)>vip_status[PlayerInfo[playerid][pVips]][vip_heal]) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nВ кишеню поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} В кишеню не поміститься стільки аптечок";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,vip_status[PlayerInfo[playerid][pVips]][vip_heal]-PlayerInfo[playerid][pMedKit]);
				return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nВ кишеню поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} У Вас недостаточно коштів";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,vip_status[PlayerInfo[playerid][pVips]][vip_heal]-PlayerInfo[playerid][pMedKit]);
				return D(playerid,D_BIZZ_MEDKIT_2,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			PlayerInfo[playerid][pMedKit] += strval(inputtext);
			UpdatePlayerData(playerid,"pMedKit",PlayerInfo[playerid][pMedKit]);
			SendUse(playerid, "Вітаємо з покупкою аптечок! Использовать аптечку - "ORANGE"/healme");
		}
		case D_BIZZ_MEDKIT_3: {
			if(!response) return true;
			if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nНа складі банди поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} От 1 и до 500";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PlayerInfo[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			if(FI[PlayerInfo[playerid][pMember]][fHealth]+strval(inputtext)>500) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nНа складі банди поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} На склад банди не поместится столько аптечок";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PlayerInfo[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nНа складі банди поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} У Вас недостаточно коштів";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-FI[PlayerInfo[playerid][pMember]][fHealth]);
				return D(playerid,D_BIZZ_MEDKIT_3,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			FI[GetTeamID(playerid)][fHealth] += strval(inputtext);
			UpdateFraction(GetTeamID(playerid),"Health",FI[GetTeamID(playerid)][fHealth]);
			SendUse(playerid, "Вітаємо з покупкою аптечок!");
		}
		case D_BIZZ_MEDKIT_4: {
			if(!response) return true;
			if(!PlayerInfo[playerid][pHouse]) return 1;
			new houseid = PlayerInfo[playerid][pHouse]-1;
			if(strval(inputtext) < 1 || strval(inputtext) > 500) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nВ сейф будинку поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} От 1 и до 500";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			if(gHouses[houseid][houseHealth]+strval(inputtext)>500) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nВ сейф будинку поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} В сейф будинку не поместится столько аптечок";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			new id = TI[playerid][tSelectedBusinessID];
			if(GetPlayerMoneyEx(playerid)<gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext)) {
				static const f_str[] = "\n\n"W"Введіть кількість аптечок, яке бажаєте купити:\nВ сейф будинку поміститься: "YELLOW"%d"W" аптечок\n\n"NO"*{f6f6d9} У Вас недостаточно коштів";
				new string[sizeof(f_str) + 5];
				format(string,sizeof(string),f_str,500-gHouses[houseid][houseHealth]);
				return D(playerid,D_BIZZ_MEDKIT_4,DSI, ""YELLOW"Покупка аптечки",string,"Купити","Закрити");
			}
			GiveMoney(playerid, -gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext), "покупка в 24-7");
			if(gBusiness[id][bizzProduct]-(gShopProduct[6]*strval(inputtext)) > 0) {
				gBusiness[id][bizzProduct]-= gShopProduct[6]*strval(inputtext);
				bizz_pay(id,gShopPrice[6]*gBusiness[id][bizzPrice]*strval(inputtext));
			}
			UpdateBusinessText(id);
			show_24(playerid,id);
			gHouses[houseid][houseHealth] += strval(inputtext);
			new query[128];
			format(query,sizeof(query),"UPDATE `houses` SET `medkit` = '%d' WHERE id = '%d'",gHouses[houseid][houseHealth],houseid+1);
			mysql_tquery(connects, query);
			SendUse(playerid, "Вітаємо з покупкою аптечок! Использовать аптечку в доме: /hhealme");
		}
		case D_BIZZ_FISH: {
		    if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			if(listitem != 4) if(GetPlayerMoneyEx(playerid) < gFishCosts[listitem]*gBusiness[id][bizzPrice]) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pRod]) return ErrorMessage(playerid,"У Вас уже есть удочка");
					PlayerInfo[playerid][pRod] = 1;
					UpdatePlayerData(playerid,"pRod",1);
					SendUse(playerid,"Вітаємо з покупкою удочки!");
				}
				case 1: {
				    if(PlayerInfo[playerid][pRopes]) return ErrorMessage(playerid,"У Вас уже есть снасти");
					PlayerInfo[playerid][pRopes] = 1;
					UpdatePlayerData(playerid,"pRopes",1);
					SendUse(playerid,"Вітаємо з покупкою снастей для удочки!");
				}
				case 2: {
					if(PlayerInfo[playerid][pWorms] + 10 > 30) return ErrorMessage(playerid,"Ви не можете Купити наживку более 30 шт.");
					PlayerInfo[playerid][pWorms] += 10;
					SendUse(playerid,"Вітаємо з покупкою наживки!");
				}
				case 3: {
					if(GetPVarInt(playerid,"fish_yes")) return ErrorMessage(playerid,"У Вас уже есть пропуск на ловлю рыбы");
					if(!lic[playerid][2]) return ErrorMessage(playerid, "У вас немає ліцензій на водний транспорт");
					SetPVarInt(playerid,"fish_yes",1);
					SendUse(playerid,"Вітаємо з покупкою одноразового пропуска для ловли рыбы!");
				}
				case 4: {
					D(playerid, DIALOG_NONE, DSM, ""YELLOW"Інформація", "\
"W"Пойманую рыбу Вы можете продати На складі\n возле рыболовного магазина по курсу "ORANGE"$160 - 1кг"W",\n или покласти в холодильник в доме.\n\n\
"NO"Увага! "W"Для наиболее эффективной и выгодной рыбалки рекомендуем приобрести 30шт.\n Наживки. Пропуск одноразовый. Удочка и снасти покупаются раз и навсегда.\nУдачной рыбалки!", "Закрити", "");
					return 1;
				}
			}
			GiveMoney(playerid, -gFishCosts[listitem]*gBusiness[id][bizzPrice],"покупка в рыб.бізнесе");
			if(gBusiness[id][bizzProduct]-(gFishCosts[listitem] / 10) > 0) {
				gBusiness[id][bizzProduct] -= gFishCosts[listitem] / 10;
				bizz_pay(id,gFishCosts[listitem]*gBusiness[id][bizzPrice]);
			} 
			show_fish(playerid);
		}
		case D_BIZZ_BAR: {
		    if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = gBarCosts[listitem] * 10 * gBusiness[id][bizzPrice];
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			GiveMoney(playerid, -price,"покупка в баре");
			if(gBusiness[id][bizzProduct] - (gBarCosts[listitem]) > 0){
				gBusiness[id][bizzProduct] -= gBarCosts[listitem];
				bizz_pay(id,price);
			} 
			if(listitem == 0) SetPlayerSpecialAction(playerid, 22);
			else SetPlayerSpecialAction(playerid, 20);
		}
		case D_BIZZ_COMP: {
		    if(!response) return 1;
			if(GetPVarInt(playerid,"comp_game") > unix) return ErrorMessage(playerid,"У вас уже куплений білет");
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = gCompCosts[listitem] * gBusiness[id][bizzPrice];
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостатньо грошей");
			GiveMoney(playerid, -price,"покупка в комп клубе");
			bizz_pay(id,price);
			switch(listitem) {
				case 0: {
					SendUse(playerid,"Вітаємо із придбанням ігрового часу [30 мин] в клубі");
					SetPVarInt(playerid,"comp_game",unix+1800);
				}
				case 1: {
					SendUse(playerid,"Вітаємо із придбанням ігрового часу [1 час] в клубі");
					SetPVarInt(playerid,"comp_game",unix+3600);
				}
				case 2: {
					SendUse(playerid,"Вітаємо із придбанням ігрового часу [2 часа] в клубі");
					SetPVarInt(playerid,"comp_game",unix+7200);
				}
				case 3: {
					SendUse(playerid,"Вітаємо із придбанням ігрового часу [3 часа] в клубі");
					SetPVarInt(playerid,"comp_game",unix+10800);
				}
			}
		}
  		case D_BIZZ_TAVERN: {
			if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			new price = gTavernCosts[listitem] * gBusiness[id][bizzPrice] * 10;
			if(id < 0) return 1;
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			new amount = gTavernCosts[listitem];
			if(gBusiness[id][bizzProduct] -amount > 0) {
				gBusiness[id][bizzProduct]-= amount;
				bizz_pay(id,price);
			}
			if(PlayerInfo[playerid][pSatiety] >= 100) return ErrorMessage(playerid,"Ви не голодны");
			GiveMoney(playerid, -price,"покупка в закусочной");	
			new name[32],string[64];
			switch(listitem) {
				case 0: {
					strcat(name,"салат");
					GiveFullness(playerid, 25);
				}
				case 1: {
					strcat(name,"наггетсы");
					GiveFullness(playerid, 35);
				}
				case 2: {
					strcat(name,"бургер");
					GiveFullness(playerid, 45);
				}
				case 3: {
					strcat(name,"пиццу");
					GiveFullness(playerid, 55);
				}
			}
			format(string,sizeof(string),"съел(а) %s", name);
			MeAction(playerid,string);
			ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
			show_tavern(playerid,id);
		}
		case D_BOOK: {
			if(!response) return 1;
			SetPVarInt(playerid,"select_idphone",listitem);
			if(PlayerInfo[playerid][pPhoneNumber][listitem] == 0) return D(playerid, D_BOOK_2, DSI, ""YELLOW"Новый контакт", ""W"Введіть номер телефона:", "Далі", "Відміна");
			D(playerid, D_BOOK_3, DSL, ""YELLOW"Телефонная книга", ""YELLOW"1."W" Позвонить\n"YELLOW"2."W" Написать сообщение\n"YELLOW"3."W" Видалити контакт", "Вибрати", "Відміна");
			return 1;
		}
		case D_BOOK_2: {
			if(!response) return DeletePVar(playerid,"select_idphone");
			if(isNumeric(inputtext) || strlen(inputtext) != 6) {
				D(playerid,D_BOOK_2,DSI, ""YELLOW"Новый контакт",""W"Введіть номер телефона:\n\n"NO"*{f6f6d9} Номер должен состоять из 6 цифр","Далі","Відміна");
				return 1;
			}
			new number = strval(inputtext);
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				//new bool:isnumber = false;
				if(!TI[i][tLogin]) continue;
				if(PlayerInfo[i][pPhone] == number) {
					//isnumber = true;
					new id = GetPVarInt(playerid,"select_idphone");
					PlayerInfo[playerid][pPhoneNumber][id] = number;
					strmid(pPhoneName[playerid][id],player_name[i],0,strlen(player_name[i]),MAX_PLAYER_NAME);
					SavePlayerNumber(playerid);
					SendOk(playerid,"Контакт успішно добавлен");
					break;
				}	
				//if(!isnumber) return D(playerid,D_BOOK_2,DSI, ""YELLOW"Новый контакт",""W"Введіть номер телефона:\n\n"NO"*{f6f6d9} Номер не знайдений/гравець оффлайн","Далі","Відміна");
			}
		}
		case D_BOOK_3: {
			if(!response) return 1;
			new id = GetPVarInt(playerid,"select_idphone");
			switch(listitem) {
				case 0: {
					new string[24];
					format(string, sizeof(string), "%i",PlayerInfo[playerid][pPhoneNumber][id]);
					pc_cmd_call(playerid,string);
				}
				case 1: D(playerid,D_BOOK_4,DSI, ""YELLOW"Сообщение",""W"Введіть текст СМС сообщения:\nПримечание: Длинна текста от 1 до 120 символов","Далі","Закрити");
				case 2: {
					PlayerInfo[playerid][pPhoneNumber][id] = 0;
					strmid(pPhoneName[playerid][id], "Ні", 0, strlen("Ні"), MAX_PLAYER_NAME);
					SavePlayerNumber(playerid);
					SendOk(playerid,"Контакт успішно видалений");
					pc_cmd_book(playerid);
				}
			}
		}
		case D_BOOK_4: {
			if(!response) return 1;
			if(NonSym(inputtext,120,1)) return D(playerid,D_BOOK_4,DSI, ""YELLOW"Сообщение",""W"Введіть текст СМС сообщения:\n\n"NO"*{f6f6d9} Запрещены некорректные символы","Далі","Закрити");
			if(strlen(inputtext) < 1 || strlen(inputtext) > 120) return D(playerid,D_BOOK_4,DSI, ""YELLOW"Сообщение",""W"Введіть текст СМС сообщения:\n\n"NO"*{f6f6d9} Длинна текста от 1 до 120 символов","Далі","Закрити");
			new id = GetPVarInt(playerid,"select_idphone");
			new string[146];
			format(string, sizeof(string), "%i %s",PlayerInfo[playerid][pPhoneNumber][id],inputtext);
			pc_cmd_sms(playerid,string);
			return 1;
		}
		case dBuyCarSalon: {
			if(!response) return true;
			if(TI[playerid][tSelectedBusinessID] < 0) return true;
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid, 1449.4907,702.5972,1087.9011, GetPVarInt(playerid,"sellcarClass"), 82);
			SetPlayerFacingAngle(playerid,88.9930);
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);
		}
		case D_ARENDA: {
		    if(!response) return RemovePlayerFromVehicleAC(playerid),DeletePVar(playerid,"SelectPlane");
			if(lic[playerid][1] < 1) return ErrorMessage(playerid,"У вас немає ліцензій на воздушный транспорт"),RemovePlayerFromVehicleAC(playerid),DeletePVar(playerid,"SelectPlane");
			new ID = GetPVarInt(playerid,"SelectPlane");
			DeletePVar(playerid,"SelectPlane");
			new price = gAirs[gAirplanes[ID][aAirport]-1][airCoast] * gAirplanes[ID][aPrice];
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно коштів для оренди"),RemovePlayerFromVehicleAC(playerid),DeletePVar(playerid,"SelectPlane");
			new plane = -1;
			for(new i=1;i<=gPlaneCount;i++) {
				if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
			}
			if(plane != -1) return ErrorMessage(playerid,"Ви уже арендуете воздушный транспорт"), RemovePlayerFromVehicleAC(playerid);
			strmid(gAirplanes[ID][aOwner],player_name[playerid], 0, strlen(player_name[playerid]), 24);
			gAirplanes[ID][aTime] = unix + 86400 * 10;
			SavePlane(ID);
			gAirs[gAirplanes[ID][aAirport]-1][airBank] += price;
			GiveMoney(playerid,-price,"оплата оренди літака");
			UpdateAirportData(gAirplanes[ID][aAirport],"bank",gAirs[gAirplanes[ID][aAirport]-1][airBank]);
			new str[64];
			format(str, sizeof(str),"Арендатор - "O"%s", gAirplanes[ID][aOwner]);
			UpdateDynamic3DTextLabelText(gAirplanes[ID][aText],-1,str);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Аренда",""GREEN"Вітаємо з орендою повітряного транспорта!\n\n"W"Срок оренди: "YELLOW"10 днів\n"W"Відкрити/Закрити повітряний транспорт: "YELLOW"/lock 2\n\
												"W"Відмовитися від оренди повітряного транспорта: "YELLOW"/norent","Добре","");
		}
		case D_HOUSE: {
			if(!response) return true;
			new houseid = TI[playerid][tSelectHouse];
			if(!gHouses[houseid][houseOwner]) {
				if(PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У Вас уже есть дом");
				if(PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У Вас уже есть номер в отеле");
				new string[128];
				format(string,sizeof(string),""W"Ви дійсно хочете Купити цей дом за "GREEN"$%d?",gHouses[houseid][housePrice]);
				D(playerid, D_HOUSE_BUY, DSM, ""YELLOW"Покупка будинку",string,"Так","Ні");
			}
			else {
				if(PlayerInfo[playerid][pHouse] != houseid+1 && gHouses[houseid][houseClose]) return GameTextForPlayer(playerid,"~r~closed",2000,1);
				SetPlayerPosAC(playerid, hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2], houseid+1, hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				TI[playerid][tInHouse] = true;
			}
		}
		case D_HOUSE_BUY: {
			if(!response) return true;
			new houseid = TI[playerid][tSelectHouse];
			if(!gHouses[houseid][houseOwner]) {
				new price = gHouses[houseid][housePrice];
				if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно грошей на руках");
				new query[256];
				format(query,sizeof(query),"UPDATE `houses` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],gHouses[houseid][houseID]);
				mysql_tquery(connects, query,"","");
				UpdatePlayerData(playerid,"house",gHouses[houseid][houseID]);
				gHouses[houseid][houseOwnerID] = PlayerInfo[playerid][pID];
				format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",player_name[playerid]);
				PlayerInfo[playerid][pHouse] = gHouses[houseid][houseID];
				
				gHouses[houseid][houseDay] = unix + 60*60*24;

				format(query,sizeof(query),"UPDATE `houses` SET `day` = '%d' WHERE id = '%d'",gHouses[houseid][houseDay],gHouses[houseid][houseID]);
				mysql_tquery(connects, query,"","");

				SendClientMessage(playerid,CGOLD,"Вітаємо, ви купили дом. Не забувайте оплачувати його, без оплати його продадуть державі!");
				SendClientMessage(playerid,CGOLD,"Панель керування будинком: "W"/house");
				PlayerPlaySound(playerid,1185,0.0,0.0,0.0);
				SetTimerEx("PlayerPlaySoundDelay",6900,false,"ii",playerid,1186);
				GiveMoney(playerid,-price,"покупка будинку");
				DestroyDynamicPickup(gHousePickup[houseid]);
				gHousePickup[houseid] = CreateDynamicPickup(1272,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				DestroyDynamicMapIcon(gHouseIcon[houseid]);
				gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],32,CWHITE);
				PlayerInfo[playerid][pSpawn] = 1;
				loading_cars(playerid,0);
			}
		}
		case D_HOUSE_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"houseSeller")) {
					new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
					SendOk(playerid,"Ви отказались от покупки будинку");
					SendOk(id_prodaet,"Гравець отказался от покупки Вашого будинку");
					DeletePVar(playerid,"houseSeller");
					DeletePVar(playerid,"housePrices");
					DeletePVar(id_prodaet,"houseBuyer");
				}
			}
			else {
				if(GetPVarInt(playerid,"houseSeller")) {
					new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"houseBuyer")-1;
					new house_price = GetPVarInt(playerid,"housePrices");
					if(id_pokupaet == playerid) {
						if(PlayerInfo[playerid][pCash] < house_price) {
							ErrorMessage(playerid,"У Вас недостаточно грошей на руках");
							ErrorMessage(id_prodaet,"У покупця недостаточно грошей на руках");
							DeletePVar(playerid,"houseSeller");
							DeletePVar(playerid,"housePrices");
							DeletePVar(id_prodaet,"houseBuyer");
						}
						else {
							new houseid = GetPVarInt(playerid,"houseIDs");
							UpdatePlayerData(id_prodaet,"house",0);
							UpdatePlayerData(playerid,"house",houseid+1);

							new query[256];
							format(query,sizeof(query),"UPDATE `houses` SET `ownerid` = '%d', owner = '%s',peopleid1 = '0',peopleid2 = '0',peopleid3 = '0',people1='',people2='',people3='',family = '0' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],houseid+1);
							mysql_tquery(connects, query,"","");
							if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Помилка #14");

							PlayerInfo[playerid][pHouse] = houseid+1;
							PlayerInfo[id_prodaet][pHouse] = 0;

							new string[156];
							format(string,64,"покупка будинку у %s",player_name[id_prodaet]);
							GiveMoney(playerid,-house_price,string);
							string[0] = EOS;
							format(string,64,"продажа будинку %s",player_name[playerid]);
							GiveMoney(id_prodaet,house_price,string);

							gHouses[houseid][houseOwnerID] = PlayerInfo[playerid][pID];
							format(gHouses[houseid][houseOwner],MAX_PLAYER_NAME,"%s",player_name[playerid]);
							strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
							strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
							strmid(gHouseArendator[houseid][2],"None",0,strlen("None"),MAX_PLAYER_NAME);
							gHouses[houseid][houseHabitID][0] = 0;
							gHouses[houseid][houseHabitID][1] = 0;
							gHouses[houseid][houseHabitID][2] = 0;
							gHouses[houseid][houseFamily] = 0;
							gHouses[houseid][houseSkin][0] = PlayerInfo[playerid][pSkin];
							SendOk(playerid,"Ваш скін вміщений в шафу купленого вами будинку");
							UpdateHouseDress(houseid);
							if(PlayerInfo[id_prodaet][pMember] && !start_work[id_prodaet]) {
								A_SetPlayerSkin(id_prodaet,PlayerInfo[id_prodaet][pFracSkin]);
								SendOk(id_prodaet,"Робочий день розпочатий");
								TI[playerid][tMasked] = 0;
								SetPlayerColor(id_prodaet,gFractionSpawn[PlayerInfo[id_prodaet][pMember]][fracColor]);
								start_work[id_prodaet] = 1;
								PlayerInfo[id_prodaet][pJob] = 0;
							}
							if(gHouses[houseid][houseImprove][2] == 1) {
								loading_cars(playerid,0);
								loading_cars(playerid,1);
							}
							else loading_cars(playerid,0);
							if(house_car[id_prodaet][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[id_prodaet][0]),house_car[id_prodaet][0] = INVALID_VEHICLE_ID;
							if(house_car[id_prodaet][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[id_prodaet][1]),house_car[id_prodaet][1] = INVALID_VEHICLE_ID;
							gHouses[houseid][houseSkin][0] = 0;
							gHouses[houseid][houseSkin][1] = 0;
							gHouses[houseid][houseSkin][2] = 0;

							format(string,sizeof(string),"Ви приобрели дом у "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[id_prodaet],house_price);
							SendUse(playerid,string);
							SendOk(playerid,"Панель керування будинком - "ORANGE"/house");
							format(string,sizeof(string),"Ви продали дом "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[playerid],house_price);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"houseSeller");
							DeletePVar(playerid,"housePrices");
							DeletePVar(id_prodaet,"houseBuyer");
						}
					}
					else {
						ErrorMessage(playerid,"Гравець оффлайн");
						DeletePVar(playerid,"houseSeller");
						DeletePVar(playerid,"housePrices");
					}
				}
			}
		}
		case D_HOUSE_SELL: {
			if(!response) return true;
			if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку");
			new houseid = PlayerInfo[playerid][pHouse]-1;
			UpdatePlayerData(playerid,"house",0);
			if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Помилка #1");
			new query[512];
			format(query,sizeof(query),"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0', skin = '0|0|0|0',safecode='0', safemoney='0', drugs='0', medkit='0', products='0',peopleid1 = '0',peopleid2 = '0',peopleid3 = '0',people1='',people2='',people3='',family = '0' WHERE `id` = '%d'",houseid+1);
			mysql_tquery(connects, query);
			if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Помилка #2");
			PlayerInfo[playerid][pHouse] = 0;
			gHouses[houseid][houseOwnerID] = 0;
			strdel(gHouses[houseid][houseOwner],0,24);	

			arendaor_closed(houseid);

			strmid(gHouseArendator[houseid][0],"None",0,strlen("None"),MAX_PLAYER_NAME);			
			strmid(gHouseArendator[houseid][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[houseid][2],"None",0,strlen("None"),MAX_PLAYER_NAME);
			gHouses[houseid][houseHabitID][0] = 0;
			gHouses[houseid][houseHabitID][1] = 0;
			gHouses[houseid][houseHabitID][2] = 0;
			for(new i;i<9;i++) {
				if(PlayerInfo[playerid][pMember] && !start_work[playerid]) {
					A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
					SendOk(playerid,"Робочий день розпочатий");
					TI[playerid][tMasked] = 0;
					SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
					start_work[playerid] = 1;
					PlayerInfo[playerid][pJob] = 0;
				}
				if(i < 3) gHouses[houseid][houseImprove][i] = 0,gHouses[houseid][houseSkin][i] = 0;
				gHouses[houseid][houseGun][i] = 0;
				SaveHouseGun(houseid);
			}
			gHouses[houseid][houseSafeCode] = 0;
			gHouses[houseid][houseSafeMoney] = 0;
			gHouses[houseid][houseDrugs] = 0;
			gHouses[houseid][houseHealth] = 0;
			gHouses[houseid][houseProducts] = 0;
			gHouses[houseid][houseFamily] = 0;
			GiveMoney(playerid,floatround(gHouses[houseid][housePrice]/100*80),"продажа будинку");

			FI[fWHITEHOUSE][fBank] += floatround(gHouses[houseid][housePrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			DestroyDynamicPickup(gHousePickup[houseid]);
			gHousePickup[houseid] = CreateDynamicPickup(1273,1,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);	
			DestroyDynamicMapIcon(gHouseIcon[houseid]);
			gHouseIcon[houseid] = CreateDynamicMapIcon(gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],31,CWHITE);
			SendOk(playerid,"Дом успішно продан государству!");
			if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
			if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
		case D_HOUSE_MENU: {
			if(!response) return true;
			new houseid = PlayerInfo[playerid][pHouse] - 1;
			switch(listitem) {
				case 0:{					
					if(!gHouses[houseid][houseClose]) {
						gHouses[houseid][houseClose] = 1;
						GameTextForPlayer(playerid,"~r~closed",2000,3);
					}
					else {
						gHouses[houseid][houseClose] = 0;
						GameTextForPlayer(playerid,"~g~opened",2000,3);
					}
					new query[256];					
					format(query,sizeof(query),"UPDATE `houses` SET `close` = '%d' WHERE `id` = '%d'",gHouses[houseid][houseClose],houseid+1);
					mysql_tquery(connects, query);
					return pc_cmd_house(playerid);
				}
				case 1: {
					new classname[20],status[12];
					switch(gHouses[houseid][houseClass]) {
						case 0:classname = "Эконом";
						case 1:classname = "Cредний";
						case 2:classname = "Элитный";
						case 3:classname = "Особняк";
						default: classname = "Неизвестно";
					}					
					new cnt;
					for(new i;i<3;i++) {
						if(gHouses[houseid][houseHabitID][i]) cnt++;
					}					
					if(gHouses[houseid][houseClose]) strcat(status,"Закрыт");
					else strcat(status,"Открыт");
					new improve[128];
					if(gHouses[houseid][houseImprove][0]) strcat(improve,"1. Автоматичні двері \n");
					if(gHouses[houseid][houseImprove][1]) strcat(improve,"2. Зменшення субсидії\n");
					if(gHouses[houseid][houseImprove][2]) strcat(improve,"3. Гараж\n");
					if(gHouses[houseid][houseImprove][0] == 0 && gHouses[houseid][houseImprove][1] == 0 && gHouses[houseid][houseImprove][2] == 0) strcat(improve,"Відсутні");

					new day;
					day = (gHouses[houseid][houseDay]-gettime())/86400;
					static const f_str[] = "\
"W"Номер будинку: \t\t"ORANGE"%d\n\
"W"Клас: \t\t\t"ORANGE"%s\n\
"W"Кількість жильців: \t"ORANGE"%d/%d\n\
"W"Аренда будинку: \t\t"ORANGE"%iд\n\
"W"Статус: \t\t"ORANGE"%s\n\
"W"Гос. ціна: \t\t"ORANGE"%d\n\n\
"W"Покращення:\n\
"ORANGE"%s";
					new string[512];
					format(string,sizeof(string),f_str,houseid+1,classname,cnt,gHouses[houseid][houseClass],day,status,gHouses[houseid][housePrice],improve);
					return D(playerid,D_HOUSE_STATS,DSM, ""YELLOW"Керування будинком",string,"Назад","");
				}
				case 2: {
					new mes[210];
					for(new i;i<3;i++) {
						new c[12];
						if(gHouses[houseid][houseImprove][i]) c = ""GREEN"";
						else if(!i || gHouses[houseid][houseImprove][i-1]) c = ""W"";
						else c = "{f6f6d9}";
						if(!i) format(mes,sizeof(mes),"%s%d. %s",c,i+1,gHouseImproveName[i]);
						else format(mes,sizeof(mes),"%s\n%s%d. %s",mes,c,i+1,gHouseImproveName[i]);
					}
					return D(playerid,D_HOUSE_IMPROVE,DSL,""YELLOW"Керування будинком",mes,"Купити","Відміна");
				}
				case 3: {
					if(gHouses[houseid][houseClass] == 0) return ErrorMessage(playerid,"Недоступно для класса Вашого будинку");
					new string[512];
					string = "№\tАрендатор\tСтатус\n";
					for(new i = 0; i < 3; i++) {
						switch(gHouses[houseid][houseClass]) {
							case 1: if(i > 0) break;
							case 2: if(i > 1) break;
						}
						if(!strcmp(gHouseArendator[houseid][i],"None")) {
							format(string,sizeof(string),"%s%i\tВідсутнє\tВільно\n", string,i+1);
						}
						else format(string,sizeof(string),"%s%i\t%s\tЗайнято\n",string,i+1,gHouseArendator[houseid][i]);
					}
					D(playerid,dArendator,DSTH,"Керування жильцями",string,"Вибрати","Закрити");
				}
				case 4: {
					new hint = gHouses[houseid][houseHint];
					new Float:x, Float:y, Float:z;
					x = hinterior_info[hint][h_pos_exit][0];
					y = hinterior_info[hint][h_pos_exit][1];
					z = hinterior_info[hint][h_pos_exit][2];
					if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"Необхідно находиться в своём доме");
					new mes[1024];
					format(mes,sizeof(mes),""YELLOW"1."W" Наркотики "YELLOW"[%d м.]\n"YELLOW"2."W" Аптечки "YELLOW"[%d шт.]\n"YELLOW"3."W" Гроші "YELLOW"[$%d]\n"YELLOW"4."W" Sniper Rifle "YELLOW"[%d пт.]\n"YELLOW"5."W" Country Rifle "YELLOW"[%d пт.]\n"YELLOW"6."W" M4 "YELLOW"[%d пт.]\n"YELLOW"7."W" AK-47 "YELLOW"[%d пт.]\n"YELLOW"8."W" MP5 "YELLOW"[%d пт.]\n"YELLOW"9."W" Shotgun "YELLOW"[%d пт.]\n"YELLOW"10."W" Desert Eagle "YELLOW"[%d пт.]\n"YELLOW"11."W" SD Pistol "YELLOW"[%d пт.]\n"YELLOW"12."W" Baseball Bat "YELLOW"[%d шт.]",gHouses[houseid][houseDrugs],gHouses[houseid][houseHealth],gHouses[houseid][houseSafeMoney],gHouses[houseid][houseGun][0],gHouses[houseid][houseGun][1],gHouses[houseid][houseGun][2],gHouses[houseid][houseGun][3],gHouses[houseid][houseGun][4],gHouses[houseid][houseGun][5],gHouses[houseid][houseGun][6],gHouses[houseid][houseGun][7],gHouses[houseid][houseGun][8]);
					D(playerid,dSafeAction,DSL,"Сейф",mes,"Далі","Відміна");
				}
				case 5: {
					new hint = gHouses[houseid][houseHint];
					new Float:x, Float:y, Float:z;
					x = hinterior_info[hint][h_pos_exit][0];
					y = hinterior_info[hint][h_pos_exit][1];
					z = hinterior_info[hint][h_pos_exit][2];
					if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"Необхідно находиться в своём доме");
					if(start_work[playerid]) return ErrorMessage(playerid,"Для початкк потрібно закінчити робочий день");
					new cnt;
					new mes2[128];
					for(new i;i<3;i++) {					
						if(gHouses[houseid][houseSkin][i]) format(mes2,sizeof(mes2),"%sОдежда %d\n",mes2,i+1);
						else continue;
						cnt++;
					}
					if(!cnt) return ErrorMessage(playerid,"Немає одягу в гардеробі");
					D(playerid,dStoreSkin,DSL,"Гардероб",mes2,"Одягнути","Відміна");
				}
				case 6: {
					new string[144];
					if(PlayerInfo[playerid][pVips] != VIP_GOLD || PlayerInfo[playerid][pVips] != VIP_PLATINA || PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
						format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]\n"W"2. Автомобіль №2 "YELLOW"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
						D(playerid,D_FIXCAR,DSL,""YELLOW"Доставити транспорт",string,"Вибрати","Закрити");
					}
					else {
						format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]"W" - "ORANGE"$500\n"W"2. Автомобіль №2 "YELLOW"[%s]"W" - "ORANGE"$500",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
						D(playerid,D_FIXCAR,DSL,""YELLOW"Доставити транспорт",string,"Вибрати","Закрити");
					}
				}
				case 7: pc_cmd_sellcar(playerid);
				case 8: {
					new hint = gHouses[houseid][houseHint];
					new Float:x, Float:y, Float:z;
					x = hinterior_info[hint][h_pos_exit][0];
					y = hinterior_info[hint][h_pos_exit][1];
					z = hinterior_info[hint][h_pos_exit][2];
					if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"Необхідно находиться в своём доме");
					new string[2000],str[128],id = 1;
					string = ""YELLOW"№. Назва\n";
					for(new i; i < 42; i++) {
						if(hinterior_info[i][h_type] != gHouses[houseid][houseClass]) continue;
						format:str( ""YELLOW"%d."W" %s\n", id,hinterior_info[i][h_int_name]);
						strcat(string, str);
						id++;
					}
					D(playerid, D_HOUSE_BUYINT, DIALOG_STYLE_TABLIST_HEADERS, ""YELLOW"Покупка інтер'єра", string, "Осмотреть", "Назад");
				}
				case 9: {
					EnableGPSForPlayer(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]);
					SendOk(playerid,"Розташування Вашого будинку позначено на GPS");
				}
				case 10: pc_cmd_sellhouse(playerid,"");
			}
		}
		case D_HOUSE_BUYINT: {
			if(!response) return 1;
			new houseid = PlayerInfo[playerid][pHouse] - 1;
			for(new i; i < 42; i++) {
				if(hinterior_info[i][h_type] != gHouses[houseid][houseClass]) continue;
				if(hinterior_info[i][h_id] == listitem) {
					SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], houseid+1, hinterior_info[i][h_interior]);
					SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
					SetCameraBehindPlayer(playerid);
					SendOk(playerid,"Для покупки данного інтер'єра, введіть: "YELLOW"/buyint{f6f6d9} в натисніть на пункт 'Купити'");
					SendOk(playerid,"Для відмови покупки данного інтер'єра, введіть: "YELLOW"/buyint{f6f6d9} і натисніть на пункт 'Відміна'");
					SetPVarInt(playerid,"buy_interior",listitem+1);
					break;
				}
			}
		}
		case D_HOUSE_BUYINT_2: {
			if(!response) {
				new house = PlayerInfo[playerid][pHouse] - 1;
				new i = gHouses[house][houseHint];
				SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], house+1, hinterior_info[i][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "buy_interior");
				return 1;
			}
			new house = PlayerInfo[playerid][pHouse] - 1;
			for(new x; x < 42; x++) {
				if(hinterior_info[x][h_type] != gHouses[house][houseClass]) continue;
				if(hinterior_info[x][h_id] == GetPVarInt(playerid,"buy_interior")-1) {
					if(PlayerInfo[playerid][pCash] < 150000) return ErrorMessage(playerid,"У Вас недостаточно коштів");
					GiveMoney(playerid,-150000,"покупка інтер'єра");
					gHouses[house][houseHint] = x;
					new query[156];
					format(query,sizeof(query),"UPDATE `houses` SET `hint` = '%d' WHERE id = '%d'",gHouses[house][houseHint],house+1);
					mysql_tquery(connects, query);

					new i = gHouses[house][houseHint];
					SetPlayerPosAC(playerid, hinterior_info[i][h_pos_exit][0],hinterior_info[i][h_pos_exit][1],hinterior_info[i][h_pos_exit][2], house+1, hinterior_info[i][h_interior]);
					SetPlayerFacingAngle(playerid,hinterior_info[i][h_pos_exit][3]);
					SetCameraBehindPlayer(playerid);
					SendOk(playerid,"Вітаємо з покупкою нового интерьера!");
					DeletePVar(playerid,"buy_interior");
					break;
				}
			}
			Streamer_Update(playerid);
		}
		case D_HOUSE_EXIT: {
			if(!response) return 1;
			new houseid = TI[playerid][tSelectHouse];
			switch(listitem) {
				case 0: {
					TI[playerid][tTPpick] = true;
					SetPlayerPosAC(playerid, gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ], 0, 0);
					SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
					TI[playerid][tInHouse] = false;
					SetCameraBehindPlayer(playerid);
				}
				case 1: {
					SetPlayerPosAC(playerid, exitgarage[gHouses[houseid][houseClass]][0],exitgarage[gHouses[houseid][houseClass]][1],exitgarage[gHouses[houseid][houseClass]][2], TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
					SetPlayerFacingAngle(playerid,exitgarage[gHouses[houseid][houseClass]][3]);
					SetCameraBehindPlayer(playerid);
				}
			}
		}
		case D_HOUSE_CARSELL: {
			if(!response) return 1;
			if(GetPVarInt(playerid,"carPokupaet")) return ErrorMessage(playerid,"У Вас активный обмен Т/С с гравцем");
			new modelid = gPlayerCars[playerid][carModel][listitem] - 400;
			new Float:factor;
			factor = 0.8;
			new price = floatround(gTransport[modelid][trPrice]*factor);
			SetPVarInt(playerid,"car_sell",listitem);
			new string[144];
			format(string,sizeof(string),""W"Ви собираетесь продати свой автомобіль "YELLOW"%s "W"за "GREEN"$%i\n\n"NO"Продати автомобіль?",gTransport[gPlayerCars[playerid][carModel][listitem]-400][trName],price);
			return D(playerid,D_HOUSE_CARSELL_2,DSM, ""YELLOW"Продажа автомобіля",string, "Так", "Ні");
		}
		case D_HOUSE_CARSELL_2: {
			if(!response) return pc_cmd_house(playerid);
			sell_cars(playerid,GetPVarInt(playerid,"car_sell"));
		}
		case D_FIXCAR:{
			if(!response) return 1;
			if(theftplayer[playerid][0] != 1010) { //угон
				if(theftIDveh[theftplayer[playerid][0]][2] == listitem) return ErrorMessage(playerid, "Ваша машина в угоне");
			}
			if(PlayerInfo[playerid][pVips] == VIP_NONE || PlayerInfo[playerid][pVips] == VIP_KING || PlayerInfo[playerid][pVips] == VIP_BAZE || PlayerInfo[playerid][pVips] == VIP_SILVER) {
				if(GetPlayerMoneyEx(playerid) < 500) return ErrorMessage(playerid,"У Вас недостаточно коштів");
				GiveMoney(playerid,-500,"Доставка ТС к дому");
			}
			loading_cars(playerid, listitem);
			SendOk(playerid,"Автомобіль успішно доставлений");
		}
		case D_HOUSE_STATS: pc_cmd_house(playerid);
		case D_HOUSE_IMPROVE: {
			if(!response) return pc_cmd_house(playerid);
			new houseid = PlayerInfo[playerid][pHouse] - 1;
			if(gHouses[houseid][houseImprove][listitem]) {
				ErrorMessage(playerid,"У Вас вже встановлено дане покращення");
				pc_cmd_house(playerid);
			}
			else if((!listitem && !gHouses[houseid][houseImprove][listitem]) || (gHouses[houseid][houseImprove][listitem-1] && !gHouses[houseid][houseImprove][listitem])) {	
				new mes[128];
				new price;
				switch(gHouses[PlayerInfo[playerid][pHouse]-1][houseClass]) {
					case 0: {
						if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(gHouseImprovePriceN[listitem]/100*vip_status[PlayerInfo[playerid][pVips]][vip_houseupdate]);
							price = (gHouseImprovePriceN[listitem]-seller);
						}
						else {
							if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(gHouseImprovePriceN[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceN[listitem]-seller);
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(gHouseImprovePriceN[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceN[listitem]-seller);
							}
						    else price = gHouseImprovePriceN[listitem];
						}
						format(mes, sizeof(mes),""W"Покращення: "O"%s\n"W"Вартість "GREEN"$%d",gHouseImproveName[listitem],price);
					}
					case 1: {
						if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(gHouseImprovePriceD[listitem]/100*vip_status[PlayerInfo[playerid][pVips]][vip_houseupdate]);
							price = (gHouseImprovePriceD[listitem]-seller);
						}
						else {
							if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(gHouseImprovePriceD[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceD[listitem]-seller);
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(gHouseImprovePriceD[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceD[listitem]-seller);
							}
						    else price = gHouseImprovePriceD[listitem];
						}
						format(mes, sizeof(mes),""W"Покращення: "O"%s\n"W"Вартість "GREEN"$%d",gHouseImproveName[listitem],price);
					}
					case 2: {
						if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(gHouseImprovePriceB[listitem]/100*vip_status[PlayerInfo[playerid][pVips]][vip_houseupdate]);
							price = (gHouseImprovePriceD[listitem]-seller);
						}
						else {
							if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(gHouseImprovePriceB[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceB[listitem]-seller);
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(gHouseImprovePriceB[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceB[listitem]-seller);
							}
						    else price = gHouseImprovePriceB[listitem];
						}
						format(mes, sizeof(mes),""W"Покращення: "O"%s\n"W"Вартість "GREEN"$%d",gHouseImproveName[listitem],price);
					}
					case 3: {
						if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(gHouseImprovePriceA[listitem]/100*vip_status[PlayerInfo[playerid][pVips]][vip_houseupdate]);
							price = (gHouseImprovePriceD[listitem]-seller);
						}
						else {
							if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(gHouseImprovePriceA[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceA[listitem]-seller);
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(gHouseImprovePriceA[listitem]/100*BonusInfo[act_buyimprove]);
								price = (gHouseImprovePriceA[listitem]-seller);
							}
						    else price = gHouseImprovePriceA[listitem];
						}
						format(mes, sizeof(mes),""W"Покращення: "O"%s\n"W"Вартість "GREEN"$%d",gHouseImproveName[listitem],price);
					}
				}
				SetPVarInt(playerid,"improveid_price",price);
				D(playerid,D_HOUSE_IMPROVE_2,DSM, ""YELLOW"Покупка покращень",mes,"Купити","Відміна");
				SetPVarInt(playerid,"improveid",listitem);
			}
			else {
				ErrorMessage(playerid,"Це покращення Вам недоступне. Відкрийте покращення вище");
				pc_cmd_house(playerid);
			}
		}
		case D_HOUSE_IMPROVE_2: {
			new improveid = GetPVarInt(playerid,"improveid");
			DeletePVar(playerid,"improveid");
			if(!response) return pc_cmd_house(playerid);
			new price = GetPVarInt(playerid,"improveid_price");
			DeletePVar(playerid,"improveid_price");
			if(GetPlayerMoneyEx(playerid) < price) {
				pc_cmd_house(playerid);
				return ErrorMessage(playerid,"У Вас недостаточно грошей");
			}
			new houseid = PlayerInfo[playerid][pHouse] - 1;
			gHouses[houseid][houseImprove][improveid] = 1;
			if(improveid == 2) loading_cars(playerid,1);
			new data[32],query[128];
			for(new i;i<3;i++) {
				if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseImprove][i]);
				else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseImprove][i]);
			}
			format(query,sizeof(query),"UPDATE `houses` SET `improve` = '%s' WHERE id = '%d'",data,houseid+1);
			mysql_tquery(connects, query);
			if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Помилка #4");
			GiveMoney(playerid, -price,"покупка покращення в дом");
			SendOk(playerid,"Вітаємо з покупкою покращення в дом");
			pc_cmd_house(playerid);
		}
		case dStoreSkin: {
			if(!response) return 1;
			new skin,id;
			new mes2[128];
			new houseid = PlayerInfo[playerid][pHouse] - 1;
			sscanf(inputtext,"{s[100]}i",id);			
			skin = gHouses[houseid][houseSkin][id-1];
			PlayerInfo[playerid][pSkin] = skin;
			UpdatePlayerData(playerid, "Skin", skin);
			A_SetPlayerSkin(playerid,skin);
			new cnt;
			for(new i;i<3;i++) {
				if(gHouses[houseid][houseSkin][i]) format(mes2,sizeof(mes2),"%sОдежда %d\n",mes2,i+1);
				else continue;
				cnt ++;
			}
			if(!cnt) {
				ErrorMessage(playerid,"Немає одягу в гардеробі");
				return D(playerid,dStore,2,"Гардероб","Виберіть одяг","Далі","Скасувати");
			}
			D(playerid,dStoreSkin,2,"Гардероб",mes2,"Одягнути","Скачувати");
		}
		case dSafe: {
			if(!response) return true;
			D(playerid,dSafePutMoney,DSI,""YELLOW"Сейф","\n\n"W"Введіть кількість:\n\n","Ввід","Відміна");
			SetPVarInt(playerid,"safe_idx",listitem+1);
		}
		case dSafeAction: {
			if(!response) return 1;
			SetPVarInt(playerid,"safe_select",listitem+1);
			D(playerid,dSafe,DSL,""YELLOW"Сейф",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Далі","Відміна");
		}
		case dSafePutMoney: {
			if(!response) return 1;
			if(!strlen(inputtext) || strval(inputtext) < 1) return D(playerid,dSafePutMoney,DSI,""YELLOW"Сейф","\n\n"W"Введіть кількість:\n\n","Ввід","Відміна");
			new i = GetPVarInt(playerid,"safe_select")-1;
			new houseid = PlayerInfo[playerid][pHouse] - 1;
			new money = strval(inputtext);
			if(GetPVarInt(playerid,"safe_idx") == 1) {
				switch(i) {
					case 0: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість наркотиків, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 наркотиків\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseDrugs] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість наркотиків, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно наркотиків в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						if(PlayerInfo[playerid][pDrugs] + money > vip_status[PlayerInfo[playerid][pVips]][vip_drugs]) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість наркотиків, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} В кишеню не влізе багато наркотиків\n\n","Взяти","Відміна");
							return 1;
						}	
						new query[128];
						format(query,sizeof(query),"UPDATE `houses` SET `drugs` = '%d' WHERE id = '%d'",gHouses[houseid][houseDrugs]-money,houseid+1);
						mysql_tquery(connects, query);
						if(mysql_errno()) return ErrorMessage(playerid,"Помилка MySQL при сохранении наркотиків в сейфе");
						gHouses[houseid][houseDrugs] -= money;
						PlayerInfo[playerid][pDrugs] += money;
						MeAction(playerid,"взял(а) наркотики из сейфа");
					}
					case 1: {
						if(money < 1 || money > 20) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість аптечок, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 20 аптечок\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseHealth] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість аптечок, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно аптечок в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						if(PlayerInfo[playerid][pMedKit] + money > vip_status[PlayerInfo[playerid][pVips]][vip_heal]) {
							new string[160];
							format(string,sizeof(string),"\n\n"W"Укажіть кількість аптечок, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} В кишеню не влізе більше %d аптечок\n\n",vip_status[PlayerInfo[playerid][pVips]][vip_heal]);
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф",string,"Взяти","Відміна");
							return 1;
						}	
						new query[128];
						format(query,sizeof(query),"UPDATE `houses` SET `medkit` = '%d' WHERE id = '%d'",gHouses[houseid][houseHealth]-money,houseid+1);
						mysql_tquery(connects, query);
						if(mysql_errno()) return ErrorMessage(playerid,"Помилка MySQL при сохранении аптечок в сейфе");
						gHouses[houseid][houseHealth] -= money;
						PlayerInfo[playerid][pMedKit] += money;
						UpdatePlayerData(playerid,"pMedKit",PlayerInfo[playerid][pMedKit]);
						MeAction(playerid,"взял(а) аптечки из сейфа");
					}
					case 2: {
						if(money < 1 || money > 1000000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажите сумму, которую хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Сумма повинна бути от $1 до $1.000.000\n\n","Взяти","Відміна");
							return 1;
						}
						if(money > gHouses[houseid][houseSafeMoney]) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажите сумму, которую хочете взяти из сейфа:\n\n"NO"*{f6f6d9} В сейфе недостаточно коштів\n\n","Взяти","Відміна");
							return 1;
						}
						//if(gHouses[houseid][houseSafeMoney]+money > 5000000) return ErrorMessage(playerid,"Не можна хранить более $5.000.000");
						new query[128];
						format(query,sizeof(query),"UPDATE `houses` SET `safemoney` = '%d' WHERE id = '%d'",gHouses[houseid][houseSafeMoney]-money,houseid+1);
						mysql_tquery(connects, query);
						if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Помилка #6");
						gHouses[houseid][houseSafeMoney] -= money;
						GiveMoney(playerid, money,"взял(а) гроші с сейфа");
						MeAction(playerid,"взял(а) гроші с сейфа");
					}
					case 3: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Sniper Rifle, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][0] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Sniper Rifle, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно патрон Sniper Rifle в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						gHouses[houseid][houseGun][0] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 34, money);
						MeAction(playerid,"взял(а) патрони из сейфа");
					}
					case 4: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Country Rifle, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][1] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Country Rifle, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно патрон Country Rifle в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						gHouses[houseid][houseGun][1] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 33, money);
						MeAction(playerid,"взял(а) патрони из сейфа");
					}
					case 5: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон M4, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][2] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон M4, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно патрон M4 в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						gHouses[houseid][houseGun][2] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 31, money);
						MeAction(playerid,"взял(а) патрони из сейфа");
					}
					case 6: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон AK-47, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][3] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон AK-47, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно патрон AK-47 в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						gHouses[houseid][houseGun][3] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 30, money);
						MeAction(playerid,"взял(а) патрони из сейфа");
					}
					case 7: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон MP5, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][4] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон MP5, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно патрон MP5 в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						gHouses[houseid][houseGun][4] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 29, money);
						MeAction(playerid,"взял(а) патрони из сейфа");
					}
					case 8: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Shotgun, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][5] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Shotgun, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно патрон Shotgun в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						gHouses[houseid][houseGun][5] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 25, money);
						MeAction(playerid,"взял(а) патрони из сейфа");
					}
					case 9: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Desert Eagle, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][6] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Desert Eagle, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно патрон Desert Eagle в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						gHouses[houseid][houseGun][6] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 24, money);
						MeAction(playerid,"взял(а) патрони из сейфа");
					}
					case 10: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон SD Pistol, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} От 1 до 500 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][7] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон SD Pistol, которое Ви хочете взяти из сейфа:\n\n"NO"*{f6f6d9} Недостаточно патрон SD Pistol в сейфе\n\n","Взяти","Відміна");
							return 1;
						}
						gHouses[houseid][houseGun][7] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 23, money);
						MeAction(playerid,"взял(а) патрони из сейфа");
					}
					case 11: {
						if(gHouses[houseid][houseGun][8] < 1) return ErrorMessage(playerid,"Недостаточно Baseball Bat в сейфе");
						gHouses[houseid][houseGun][8] -= money;
						SaveHouseGun(houseid);
						AC_GivePlayerWeapon(playerid, 5, money);
						MeAction(playerid,"взял(а) Baseball Bat из сейфа");
					}
				}
			}
			else if(GetPVarInt(playerid,"safe_idx") == 2) {
				switch(i) {
					case 0: {
						if(money < 1 || money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість наркотиків, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 500 наркотиків\n\n","Покласти","Відміна");
							return 1;
						}
						if(PlayerInfo[playerid][pDrugs] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість наркотиків, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно наркотиків\n\n","Покласти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseDrugs]+money > 1000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість наркотиків, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 1000г наркотиків\n\n","Покласти","Відміна");
							return 1;
						}	
						new query[128];
						format(query,sizeof(query),"UPDATE `houses` SET `drugs` = '%d' WHERE id = '%d'",gHouses[houseid][houseDrugs]+money,houseid+1);
						mysql_tquery(connects, query);
						if(mysql_errno()) return ErrorMessage(playerid,"Помилка MySQL при сохранении наркотиків в сейфе");
						gHouses[houseid][houseDrugs] += money;
						PlayerInfo[playerid][pDrugs] -= money;
						MeAction(playerid,"положил(а) наркотики в сейф");
					}
					case 1: {
						if(money < 1 || money > 20) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість аптечок, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 20 аптечок\n\n","Покласти","Відміна");
							return 1;
						}
						if(PlayerInfo[playerid][pMedKit] < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість аптечок, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно аптечок\n\n","Покласти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseHealth]+money > 500) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість аптечок, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 500 аптечок\n\n","Покласти","Відміна");
							return 1;
						}	
						new query[128];
						format(query,sizeof(query),"UPDATE `houses` SET `medkit` = '%d' WHERE id = '%d'",gHouses[houseid][houseHealth]+money,houseid+1);
						mysql_tquery(connects, query);
						if(mysql_errno()) return ErrorMessage(playerid,"Помилка MySQL при сохранении аптечок в сейфе");
						gHouses[houseid][houseHealth] += money;
						PlayerInfo[playerid][pMedKit] -= money;
						UpdatePlayerData(playerid,"pMedKit",PlayerInfo[playerid][pMedKit]);
						MeAction(playerid,"положил(а) аптечки в сейф");
					}
					case 2: {
						if(money < 1 || money > 1000000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажите сумму, которую хочете покласти в сейф:\n\n"NO"*{f6f6d9} Сумма повинна бути от $1 до $1.000.000\n\n","Покласти","Відміна");
							return 1;
						}
						if(GetPlayerMoneyEx(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажите сумму, которую хочете покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно коштів\n\n","Покласти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseSafeMoney]+money > 10000000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажите сумму, которую хочете покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более $10.000.000\n\n","Покласти","Відміна");
							return 1;
						}
						new query[128];
						format(query,sizeof(query),"UPDATE `houses` SET `safemoney` = '%d' WHERE id = '%d'",gHouses[houseid][houseSafeMoney]+money,houseid+1);
						mysql_tquery(connects, query);
						if(mysql_errno()) return SendClientMessage(playerid,COLOR_REDD,"Помилка #6");
						gHouses[houseid][houseSafeMoney] += money;
						GiveMoney(playerid, -money,"положил(а) гроші в сейф");
						MeAction(playerid,"положил(а) гроші в сейф");
					}
					case 3: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Sniper Rifle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 34 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Sniper Rifle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][0]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Sniper Rifle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 34, -money);
						gHouses[houseid][houseGun][0] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патрони в сейф");
					}
					case 4: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Country Rifle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 33 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Country Rifle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][1]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Country Rifle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 33, -money);
						gHouses[houseid][houseGun][1] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патрони в сейф");
					}
					case 5: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон M4, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 31 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон M4, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][2]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон M4, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 31, -money);
						gHouses[houseid][houseGun][2] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патрони в сейф");
					}
					case 6: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон AK-47, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 30 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон AK-47, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][3]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон AK-47, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 30, -money);
						gHouses[houseid][houseGun][3] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патрони в сейф");
					}
					case 7: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон MP5, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 29 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон MP5, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][4]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон MP5, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 29, -money);
						gHouses[houseid][houseGun][4] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патрони в сейф");
					}
					case 8: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Shotgun, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 25 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Shotgun, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][5]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Shotgun, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 25, -money);
						gHouses[houseid][houseGun][5] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патрони в сейф");
					}
					case 9: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Desert Eagle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 24 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Desert Eagle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][6]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон Desert Eagle, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 24, -money);
						gHouses[houseid][houseGun][6] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патрони в сейф");
					}
					case 10: {
						if(money < 1 || money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон SD Pistol, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} От 1 до 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(GetPlayerWeapon(playerid) != 23 || GetPlayerAmmo(playerid) < money) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон SD Pistol, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Недостаточно патрон\n\n","Взяти","Відміна");
							return 1;
						}
						if(gHouses[houseid][houseGun][7]+money > 5000) {
							D(playerid,dSafePutMoney,DSI, ""YELLOW"Сейф","\n\n"W"Укажіть кількість патрон SD Pistol, яку ви бажаєте покласти в сейф:\n\n"NO"*{f6f6d9} Нельзя хранить в сейфе более 5000 патрон\n\n","Взяти","Відміна");
							return 1;
						}
						AC_GivePlayerWeapon(playerid, 23, -money);
						gHouses[houseid][houseGun][7] += money;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) патрони в сейф");
					}
					case 11: {
						if(GetPlayerWeapon(playerid) != 5 || GetPlayerAmmo(playerid) < money) return ErrorMessage(playerid,"Недостаточно Baseball Bat");
						if(gHouses[houseid][houseGun][7]+money > 1) return ErrorMessage(playerid,"Не можна хранить в сейфе более 1 Baseball Bat");
						AC_GivePlayerWeapon(playerid, 5, -1);
						gHouses[houseid][houseGun][8] += 1;
						SaveHouseGun(houseid);
						MeAction(playerid,"положил(а) Baseball Bat в сейф");
					}
				}
			}
		}
		case dArendator: {
			if(!response) return pc_cmd_house(playerid);
			new house = PlayerInfo[playerid][pHouse] -1;
			if(!strcmp(gHouseArendator[house][listitem],"None")) {
				D(playerid,dArendatorAction,DSI, ""YELLOW"Мешканці","\n\n"W"Введіть ID гравця, якого хочете підсилити в будигок:\n\n","Ввід","Закрити");
			}
			else D(playerid,dZhitelSettings,DSL,""YELLOW"Мешканці","Виселити жителя","Вибрати","Закрити");
			SetPVarInt(playerid,"arenda_listitem",listitem+1);
			return 1;
		}
		case dZhitelSettings: {
			if(!response) return 1;
			new house = PlayerInfo[playerid][pHouse] -1;
			new id_rent = GetPVarInt(playerid,"arenda_listitem")-1;
			new string[128];
			format(string, sizeof(string), "Ви выселили жителя из комнаты "ORANGE"№%i", id_rent+1);
			SendUse(playerid,string);
			new bool:check_online = false;
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(!strcmp(gHouseArendator[house][id_rent],player_name[i])) {
					PlayerInfo[i][pTempKey] = 0;
					UpdatePlayerData(i,"tempkey",0);
					SendOk(i,"Власник выселил Вас из будинку");
					check_online = true;
					break;
				}
			}
			if(!check_online) {
				new query[128];
				format(query,sizeof(query),"UPDATE `accounts` SET `tempkey` = '0' WHERE `Name` = '%s' LIMIT 1",gHouseArendator[house][id_rent]);
				mysql_tquery(connects, query, "", "");
			}
			strmid(gHouseArendator[house][id_rent],"None",0,strlen("None"),MAX_PLAYER_NAME);
			SaveHome(house);
			return 1;
		}
		case dArendatorAction: {
			if(!response) return 1;
			new house = PlayerInfo[playerid][pHouse] -1;
			new id_rent = GetPVarInt(playerid,"arenda_listitem")-1;

			if(isNumeric(inputtext) || !strval(inputtext)) {
				D(playerid,dArendatorAction,DSI, ""YELLOW"Жители","\n\n"W"Введіть ID гравця, которого хочете подеслить в дом:\n\n"NO"*{f6f6d9} Сталася помилка при вводі ID. Попробуйте знову\n\n","Ввід","Закрити");
				return 1;
			}
			if(!PlayerToPoint(5,playerid,gHouses[house][houseX], gHouses[house][houseY], gHouses[house][houseZ])) return ErrorMessage(playerid, "Необхідно находиться рядом со своим будинком");
			if(!IsPlayerConnected(strval(inputtext)) && !TI[strval(inputtext)][tLogin]) {
				D(playerid,dArendatorAction,DSI, ""YELLOW"Жители","\n\n"W"Введіть ID гравця, которого хочете подеслить в дом:\n\n"NO"*{f6f6d9} Данный гравець не авторизован на сервере\n\n","Ввід","Закрити");
				return 1;
			}
			if(!ProxDetectorS(5.0, playerid, strval(inputtext))) {
				D(playerid,dArendatorAction,DSI, ""YELLOW"Жители","\n\n"W"Введіть ID гравця, которого хочете подеслить в дом:\n\n"NO"*{f6f6d9} Гравець далеко от Вас\n\n","Ввід","Закрити");
				return 1;
			}
			if(PlayerInfo[strval(inputtext)][pTempKey] || PlayerInfo[strval(inputtext)][pHouse] || PlayerInfo[strval(inputtext)][pRoom]) {
				D(playerid,dArendatorAction,DSI, ""YELLOW"Жители","\n\n"W"Введіть ID гравця, которого хочете подеслить в дом:\n\n"NO"*{f6f6d9} У гравця уже есть дом/номер в отеле/подселен в одном из домов\n\n","Ввід","Закрити");
				return 1;
			}
			PlayerInfo[strval(inputtext)][pTempKey] = house+1;
			UpdatePlayerData(strval(inputtext),"tempkey",PlayerInfo[strval(inputtext)][pTempKey]);
			PlayerInfo[strval(inputtext)][pSpawn] = 1;
			UpdatePlayerData(strval(inputtext),"spawn",PlayerInfo[strval(inputtext)][pSpawn]);
			SendUse(strval(inputtext),"Вас прописали в доме, використовуйте: "ORANGE"/house");
			SetString(gHouseArendator[house][id_rent],player_name[strval(inputtext)]);
			new string[144];
			format(string,sizeof(string),"Ви додали нового жителя: "YELLOW"%s {f6f6d9}в комнату "ORANGE"№%i",gHouseArendator[house][id_rent],id_rent+1);
			SendUse(playerid,string);
			SaveHome(house);
			return 1;
		}
		case dRentMenu: {
			if(!response) return 1;
			new tempkey = PlayerInfo[playerid][pTempKey]-1;
			for(new i; i < 3; i++) {
				if(!strcmp(gHouseArendator[tempkey][i],player_name[playerid])) {
					strmid(gHouseArendator[tempkey][i],"None",0,strlen("None"),MAX_PLAYER_NAME);
					break;
				}
			}
			SendOk(playerid,"Ви выселились из будинку");
			PlayerInfo[playerid][pTempKey] = 0;
			UpdatePlayerData(playerid,"tempkey",0);
	
			SaveHome(tempkey);
			return 1;
		}
		case D_HOTEL: {
			if(!response) return 1;
			switch(listitem) {
				case 0: ShowHotelRooms(playerid);
				case 1: D(playerid,D_HOTEL_OWNER,DSL,""YELLOW"Отель",""YELLOW"1."W" Баланс отеля\n"YELLOW"2."W" Зняти гроші\n"YELLOW"3."W" Статистика отеля\n"YELLOW"4."W" Установить цену за сутки проживания\n"YELLOW"5."NO" Продати отель","Вибрати","Відміна");
			}
		}
		case D_HOTEL_OWNER: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[64];
					format(string,sizeof(string),""W"В кассе: "GREEN"$%d",gHotels[PlayerInfo[playerid][pHotel]-1][hotelBank]);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Касса",string,"Добре","");
				}
				case 1: D(playerid,D_HOTEL_BANK,DSI, ""YELLOW"Отель",""W"Введіть сумму, которую хочете взяти с кассы отеля:","Взяти","Відміна");
				case 2: ShowHotelInformation(playerid,PlayerInfo[playerid][pHotel]-1,DIALOG_NONE);
				case 3: D(playerid,D_HOTEL_PRICE,DSI, ""YELLOW"Отель",""W"Введіть цену за сутки проживания\nПримечание: от "GREEN"$400"W" до "GREEN"$1000","ОК","Відміна");
				case 4: {
					static const f_str[] = ""W"Ви хочете продати отель государству за "GREEN"$%d?\n\n{f6f6d9}Для продажи отеля гравцю введіть: /sellhotel [ID гравця] [Сумма]";
					new string[sizeof(f_str) +1 + (-2 + 8)];
					format(string,sizeof(string),f_str,floatround(gHotels[PlayerInfo[playerid][pHotel]-1][hotelPrice]/100*80));
					D(playerid,D_HOTEL_SELL,DSM, ""YELLOW"Отель",string,"Продати","Відміна");
				}
			}
		}
		case D_HOTEL_BANK: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pHotel]) return 1;
			new id = PlayerInfo[playerid][pHotel]-1;
			new sum = strval(inputtext);
			if(sum < 1 || sum > 500000) return D(playerid,D_HOTEL_BANK,DSI, ""YELLOW"Отель",""W"Введіть сумму, которую хочете взяти с кассы отеля:\n\n"NO"*{f6f6d9} От $1 до $500000","Взяти","Відміна");
			if(gHotels[id][hotelBank] < sum) return D(playerid,D_HOTEL_BANK,DSI, ""YELLOW"Отель",""W"Введіть сумму, которую хочете взяти с кассы отеля:\n\n"NO"*{f6f6d9} В кассе недостаточно коштів","Взяти","Відміна");	
			if(UpdateHotelData(id,"bank",gHotels[id][hotelBank] - sum)) return SendClientMessage(playerid,COLOR_REDD,"Помилка #30");
			gHotels[id][hotelBank] -= sum;
			UpdateHotelData(id+1,"bank",gHotels[id][hotelBank]);
			GiveMoney(playerid,sum,"прибыль с отеля");
			
			new string[128];
			format(string,sizeof(string),"Ви взяли с кассы отеля: "ORANGE"$%d",sum);
			SendUse(playerid,string);
		}
		case D_HOTEL_PRICE: {
			if(!response) return 1;
			new id = PlayerInfo[playerid][pHotel] - 1;
			if(id < 0) return true;
			new price = strval(inputtext);
			if(price < 400 || price > 1000) return D(playerid,D_HOTEL_PRICE,DSI, ""YELLOW"Отель",""W"Введіть цену за сутки проживания\n\n"NO"*{f6f6d9} От $400 до $1000","ОК","Відміна");
			gHotels[id][hotelCoast] = price;
			UpdateHotelData(id+1,"coast",price);
			UpdateHotelText(id);
			new string[128];
			format(string,sizeof(string),"Ціна за сутки проживания встановлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
		}
		case D_HOTEL_SELL: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pHotel] < 1) return ErrorMessage(playerid,"У вас немає отеля");
			new id = PlayerInfo[playerid][pHotel] - 1;
			new sum = floatround(gHotels[id][hotelPrice]/100*80);

			FI[fWHITEHOUSE][fBank] += floatround(gHotels[id][hotelPrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			if(UpdateHotelData(id+1,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Помилка #29");
			gHotels[id][hotelOwnerID] = 0;
			SetString(gHotels[id][hotelOwner],"");
			new query[256];
			format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '0', `owner` = '' ,`bank` = '0',`bankday` = '0' WHERE `id` = '%d'",id+1);
			mysql_tquery(connects, query,"","");
			UpdateHotelText(id);
			PlayerInfo[playerid][pHotel] = 0;
			UpdatePlayerData(playerid,"hotelid",0);
			GiveMoney(playerid,sum,"продажа отеля");
			SendOk(playerid,"Отель продан государству");
		}
		case D_HOTEL_BUY: {
			if(PlayerInfo[playerid][pHotel]) return ErrorMessage(playerid,"У Вас уже есть отель");
			new otelid = GetPVarInt(playerid,"selectedhotel");
			if(response) {
				if(GetPlayerMoneyEx(playerid) < gHotels[otelid][hotelPrice]) return ErrorMessage(playerid,"У Вас недостаточно грошей");
				gHotels[otelid][hotelDay] = unix + 60*60*24;
				new query[172];

				format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '%d', `owner` = '%s', `day` = '%d' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],gHotels[otelid][hotelDay],otelid+1);
				mysql_tquery(connects, query,"","");
				GiveMoney(playerid,-gHotels[otelid][hotelPrice],"покупка отеля");
				gHotels[otelid][hotelOwnerID] = PlayerInfo[playerid][pID];
				format(gHotels[otelid][hotelOwner],24,"%s",player_name[playerid]);

				UpdateHotelText(otelid);

				PlayerInfo[playerid][pHotel] = otelid+1;
				UpdatePlayerData(playerid,"hotelid",PlayerInfo[playerid][pHotel]);

				SendClientMessage(playerid,CGOLD,"Вітаємо, ви купили отель. Не забувайте оплачувати його, без оплати його продадуть державі!");
				return 1;
			}
			else {
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid, 1405.3140,-15.8006,1000.9132, otelid, 79);
				SetPlayerFacingAngle(playerid,90.1475);
				SetCameraBehindPlayer(playerid);
				gHotels[otelid][hotelVisitors]++;
				UpdateHotelData(otelid+1,"visitors",gHotels[otelid][hotelVisitors]);
				OnPlayerUpdateLoadingMode(playerid);
			}
		}
		case D_HOTEL_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"hotelProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"hotelProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"hotelPokupaet")-1;
					SendOk(playerid,"Ви отказались от покупки отеля");
					SendOk(id_prodaet,"Гравець отказался от покупки Вашого отеля");
					DeletePVar(playerid,"hotelProdaet");
					DeletePVar(playerid,"hotelCena");
					DeletePVar(id_pokupaet,"hotelPokupaet");
				}
			}
			else {
				if(GetPVarInt(playerid,"hotelProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"hotelProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"hotelPokupaet")-1;
					new hotel_cena = GetPVarInt(playerid,"hotelCena");
					if(id_pokupaet == playerid) {
						if(PlayerInfo[playerid][pCash] < hotel_cena) {
							ErrorMessage(playerid,"У Вас недостаточно грошей на руках");
							ErrorMessage(id_prodaet,"У покупця недостаточно грошей на руках");
							DeletePVar(playerid,"hotelProdaet");
							DeletePVar(playerid,"hotelCena");
							DeletePVar(id_pokupaet,"hotelPokupaet");
						}
						else {
							new string[128];
							format(string,64,"покупка отеля у %s",player_name[id_prodaet]);
							GiveMoney(playerid,-hotel_cena,string);
							string[0] = EOS;
							format(string,64,"продажа отеля %s",player_name[playerid]);
							GiveMoney(id_prodaet,hotel_cena,string);
							PlayerInfo[playerid][pHotel] = PlayerInfo[id_prodaet][pHotel];
							PlayerInfo[id_prodaet][pHotel] = 0;
							UpdatePlayerData(id_prodaet,"hotelid",0);
							UpdatePlayerData(playerid,"hotelid",PlayerInfo[playerid][pHotel]);
							strmid(gHotels[PlayerInfo[playerid][pHotel]-1][hotelOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
							new query[256];
							format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],PlayerInfo[playerid][pHotel]);
							mysql_tquery(connects, query);
							new bizid = PlayerInfo[playerid][pHotel]-1;
							UpdateHotelText(bizid);

							format(string,sizeof(string),"Ви приобрели отель у "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[id_prodaet],hotel_cena);
							SendUse(playerid,string);
							format(string,sizeof(string),"Ви продали отель "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[playerid],hotel_cena);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"hotelProdaet");
							DeletePVar(playerid,"hotelCena");
							DeletePVar(id_pokupaet,"hotelPokupaet");
						}
					}
					else {
						ErrorMessage(playerid,"Гравець оффлайн");
						DeletePVar(playerid,"hotelProdaet");
						DeletePVar(playerid,"hotelCena");
					}
				}
			}
		}
		case D_HOTEL_RECEPTION: {
		    if(!response) return 1;
			if(PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У Вас уже есть дом");
			new hotel = GetPVarInt(playerid,"select_room") + listitem;
			SetPVarInt(playerid,"select_room",hotel);
			SetPVarInt(playerid,"select_room_1",listitem);
			
			if(GetString(gRooms[hotel][roomsOwner], "None")) {
				if(PlayerInfo[playerid][pRoom] == 0) {
					new price;
					if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
						new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*vip_status[PlayerInfo[playerid][pVips]][vip_hotel]);
						price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
					}
					else {
						if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
							new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*BonusInfo[act_renthotel]);
							price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
						}
						else if(BonusInfo[act_select] == 2) {
							new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*BonusInfo[act_renthotel]);
							price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
						}
					    else price = gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast];
					}

					static const f_str[] = ""W"Ви дійсно хочете арендовать номер в отеле на 1 день за "GREEN"$%d?";
					new string[sizeof(f_str) +1 + (-2 + 4)];
					format(string, sizeof(string), f_str,price);
					D(playerid, D_HOTEL_ROOM_BUY, DSM, ""YELLOW"Отель", string, "Арендовать", "Відміна");
				}
				else ErrorMessage(playerid, "Ви уже арендуете номер в отеле");
			}
			else {
				if(GetString(gRooms[hotel][roomsOwner], player_name[playerid])) {
					D(playerid, D_HOTEL_RECEPTION_2, DSL, ""YELLOW"Отель", ""YELLOW"1."W" Інформація\n"YELLOW"2."W" Продлить аренду\n"YELLOW"3."W" Відмовитися від оренди\n"YELLOW"4."W" Автопарк", "Вибрати", "Відміна");
				}
				else ErrorMessage(playerid, "Номер зайнятий");
			}
		}
		case D_HOTEL_ROOM_BUY: {
		    if(response) {
				if(PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У Вас уже є будинок");
				new otel = GetPVarInt(playerid,"selectedhotel");
				new room = GetPVarInt(playerid,"select_room");
	            if(!GetString(gRooms[room][roomsOwner], "None")) return ErrorMessage(playerid,"Вибраний номер уже арендований");

	            if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
	            	new seller = floatround(gHotels[otel][hotelCoast]/100*vip_status[PlayerInfo[playerid][pVips]][vip_hotel]);
					if(GetPlayerMoneyEx(playerid) < (gHotels[otel][hotelCoast]-seller)) return ErrorMessage(playerid,"Недостаточно грошей для оренди");
					GiveMoney(playerid,-(gHotels[otel][hotelCoast]-seller),"аренда номера готелю");
	            }
	            else {
		            if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(gHotels[otel][hotelCoast]/100*BonusInfo[act_renthotel]);
						if(GetPlayerMoneyEx(playerid) < (gHotels[otel][hotelCoast]-seller)) return ErrorMessage(playerid,"Недостаточно грошей для оренди");
						GiveMoney(playerid,-(gHotels[otel][hotelCoast]-seller),"аренда номера отель");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(gHotels[otel][hotelCoast]/100*BonusInfo[act_renthotel]);
						if(GetPlayerMoneyEx(playerid) < (gHotels[otel][hotelCoast]-seller)) return ErrorMessage(playerid,"Недостаточно грошей для оренди");
						GiveMoney(playerid,-(gHotels[otel][hotelCoast]-seller),"аренда номера отель");
					}
				    else {
				    	if(GetPlayerMoneyEx(playerid) < gHotels[otel][hotelCoast]) return ErrorMessage(playerid,"Недостаточно грошей для оренди");
				    	GiveMoney(playerid,-gHotels[otel][hotelCoast],"аренда номера отель");
				    }
				}

				SetString(gRooms[room][roomsOwner], player_name[playerid]);

				gRooms[room][roomsDay] = unix + 60*60*24;

				new query[256];
				format(query,sizeof(query),"UPDATE `rooms` SET `owner` = '%s',`day` = '%d' WHERE `id` = '%d'",player_name[playerid],gRooms[room][roomsDay],gRooms[room][roomsID]);
				mysql_tquery(connects, query);

				UpdatePlayerData(playerid,"hotelroom",room+1);
				PlayerInfo[playerid][pRoom] = gRooms[room][roomsID];
				PlayerInfo[playerid][pSpawn] = 1;
				new room_lift;
				switch(GetPVarInt(playerid,"select_room_1")) {
					case 0..9: room_lift = 2;
					case 10..19: room_lift = 3;
					case 20..29: room_lift = 4;
					case 30..39: room_lift = 5;
					case 40..49: room_lift = 6;
					case 50..59: room_lift = 7;
				}
				new string[330];
				format(string,sizeof(string),""W"Добро пожаловать в отель: "YELLOW"%s\n\n\
											 "W"Ваш номер: "O"%d"W" успішно забронирован на "O"1"W" день.\n\
											 Находится он на "O"%d "W"этаже.\n\
											 Наш дворецкий уже отнёс Ваши вещи в номер.\n\n\
											 "GREEN"Приятного отдыха!",gHotels[GetPVarInt(playerid,"selectedhotel")][hotelName], GetPVarInt(playerid,"select_room_1")+1,room_lift);
				D(playerid,DIALOG_NONE,DSM, ""YELLOW"Отель",string,"Закрити","");

				gHotels[otel][hotelBank] += gHotels[otel][hotelCoast];
				gHotels[otel][hotelBankDay] += gHotels[otel][hotelCoast];
				SaveHotels(otel);
				loading_cars(playerid,0);
				DeletePVar(playerid,"select_room_1");
		    }
			else ShowHotelRooms(playerid);
		}
		case D_HOTEL_RECEPTION_2: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new day;
					day = (gRooms[PlayerInfo[playerid][pRoom]-1][roomsDay]-gettime())/86400;

					new string[128];
					format(string,sizeof(string),"Отель:\t"O"%s\n\
												Оплачено на:\t"O"%iд",gHotels[GetPVarInt(playerid,"selectedhotel")][hotelName],day);
					D(playerid,DIALOG_NONE,DST,"Інформація",string,"Добре","");
				}
				case 1: {
					new price;
					if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
						new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*vip_status[PlayerInfo[playerid][pVips]][vip_hotel]);
						price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
					}
					else {
						if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
							new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*BonusInfo[act_renthotel]);
							price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
						}
						else if(BonusInfo[act_select] == 2) {
							new seller = floatround(gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]/100*BonusInfo[act_renthotel]);
							price = (gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast]-seller);
						}
					    else price = gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast];
					}

					static const f_str[] = ""W"Введіть кількість днів на яку хочете продовжити аренду за номер:\nВартість за день оренди: "GREEN"$%d";
					new string[sizeof(f_str) +1 + (-2 + 5)];
					format(string,sizeof(string),f_str,price);
					D(playerid,D_HOTEL_OPLATA,DSI, ""YELLOW"Оплата номера",string,"Оплатить","Відміна");
				}
				case 2: D(playerid,D_HOTEL_NORENT,DSM, ""YELLOW"Отказ от номера","\n\n"W"Ви дійсно хочете відмовитися от оренди номера?\n\n","Так","Відміна");
				case 3: {
					new string[144];
					if(PlayerInfo[playerid][pVips] != VIP_GOLD || PlayerInfo[playerid][pVips] != VIP_PLATINA || PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
						format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]\n"W"2. Автомобіль №2 "YELLOW"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
						D(playerid,D_FIXCAR,DSL,""YELLOW"Доставити транспорт",string,"Вибрати","Закрити");
					}
					else {
						format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]"W" - "ORANGE"$500\n"W"2. Автомобіль №2 "YELLOW"[%s]"W" - "ORANGE"$500",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
						D(playerid,D_FIXCAR,DSL,""YELLOW"Доставити транспорт",string,"Вибрати","Закрити");
					}
				}
			}
		}
		case D_HOTEL_OPLATA: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У вас немає номера в отеле");
			new amount = strval(inputtext);
			new hotel = PlayerInfo[playerid][pRoom] - 1;

			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])/100*vip_status[PlayerInfo[playerid][pVips]][vip_hotel]);
				price = ((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])/100*BonusInfo[act_renthotel]);
					price = ((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])/100*BonusInfo[act_renthotel]);
					price = ((amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast])-seller);
				}
			    else price = amount*gHotels[GetPVarInt(playerid,"selectedhotel")][hotelCoast];
			}

			new day;
			day = (gRooms[hotel][roomsDay]-gettime())/86400;
			if(amount < 1 || amount > 15) return D(playerid,D_HOTEL_OPLATA,DSI, ""YELLOW"Оплата номера",""W"Введіть кількість днів на яку хочете продовжити аренду за номер:\n\n"NO"*{f6f6d9} От 1 до 15 днів","Ок","Відміна");
			if(day + amount > 15) return D(playerid,D_HOTEL_OPLATA,DSI, ""YELLOW"Оплата номера",""W"Введіть кількість днів на яку хочете продовжити аренду за номер:\n\n"NO"*{f6f6d9} Максимальна кількістьоплачених днів 15","Ок","Відміна");
			if(PlayerInfo[playerid][pCash] < price) return D(playerid,D_HOTEL_OPLATA,DSI, ""YELLOW"Оплата номера",""W"Введіть кількість днів на яку хочете продовжити аренду за номер:\n\n"NO"*{f6f6d9} Недостаточно коштів","Ок","Відміна");
			gRooms[hotel][roomsDay] += 86400 * amount;
			new query[128];
			format(query,sizeof(query),"UPDATE `rooms` SET `day` = '%d' WHERE id = '%d'",gRooms[hotel][roomsDay],hotel+1);
			mysql_tquery(connects, query,"","");

			gHotels[GetPVarInt(playerid,"selectedhotel")][hotelBank] += price;
			gHotels[GetPVarInt(playerid,"selectedhotel")][hotelBankDay] += price;
			SaveHotels(GetPVarInt(playerid,"selectedhotel"));
			GiveMoney(playerid,-price,"аренда номера отель");

			static const f_str[] = ""W"Ви оплатили: "O"%d"W" днів. Снято коштів: "GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,price);
			return D(playerid,DIALOG_NONE,DSM, ""YELLOW"Оплата номера",string,"Добре","");
		}
		case D_HOTEL_NORENT: {
			if(!response) return ShowHotelRooms(playerid);
			if(PlayerInfo[playerid][pRoom] != 0) {
				new hotel = PlayerInfo[playerid][pRoom]-1;
				if(GetString(gRooms[hotel][roomsOwner],player_name[playerid])) SetString(gRooms[hotel][roomsOwner],"None");

				new query[256];
				format(query,sizeof(query),"UPDATE `rooms` SET `owner` = 'None' WHERE `id` = '%d'",gRooms[hotel][roomsID]);
				mysql_tquery(connects, query);

				PlayerInfo[playerid][pRoom] = 0;
				UpdatePlayerData(playerid,"hotelroom",0);
				SendOk(playerid,"Ви успішно відмовились від оренди номера");

				if(house_car[playerid][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
				else if(house_car[playerid][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
			}
		}
		case D_HOTEL_LIFT_1: {
			if(!response) return 1;
			TI[playerid][tTPpick] = true;
			new otelid = GetPVarInt(playerid,"selectedhotel");
			updaterooms(playerid,gHotels[otelid][hotelVW][listitem+1]);
			SetPlayerPosAC(playerid, 159.7573,-15.1663,1002.1111, gHotels[otelid][hotelVW][listitem+1], 80);
			SetPlayerFacingAngle(playerid,359.6357);
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);
		}
		case D_HOTEL_LIFT_2: {
			if(!response) return 1;
			TI[playerid][tTPpick] = true;
			new otelid = GetPVarInt(playerid, "selectedhotel");
			if(listitem == 0) {
				SetPlayerPosAC(playerid, 1394.9865,-16.6047,1000.9176, otelid, 79);
				SetPlayerFacingAngle(playerid,270.1191);
			}
			else {
				updaterooms(playerid,gHotels[otelid][hotelVW][listitem+1]);
				SetPlayerPosAC(playerid, 159.7573,-15.1663,1002.1111, gHotels[otelid][hotelVW][listitem+1], 80);
				SetPlayerFacingAngle(playerid,359.6357);
			}
			SetCameraBehindPlayer(playerid);
			OnPlayerUpdateLoadingMode(playerid);
		}
		case D_AIRPORT: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[64];
					format(string,sizeof(string),""W"В кассе: "GREEN"$%d",gAirs[PlayerInfo[playerid][pAirport]-1][airBank]);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Касса",string,"Добре","");
				}
				case 1: D(playerid,D_AIRPORT_BANK,DSI, ""YELLOW"Аэропорт",""W"Введіть сумму, которую хочете взяти с кассы аэропорта:","Взяти","Відміна");
				case 2: ShowAirportInformation(playerid,PlayerInfo[playerid][pAirport]-1,DIALOG_NONE);
				case 3: D(playerid,D_AIRPORT_PRICE,DSI, ""YELLOW"Аэропорт",""W"Введіть цену за аренду воздушной техники\nПримечание: от "GREEN"$120.000"W" до "GREEN"$170.000","ОК","Відміна");
				case 4: {
					static const f_str[] = ""W"Ви хочете продати аэропорт государству за "GREEN"$%d?\n\n{f6f6d9}Для продажи аэропорта гравцю введіть: /sellairport [ID гравця] [Сумма]";
					new string[sizeof(f_str) +1 + (-2 + 8)];
					format(string,sizeof(string),f_str,floatround(gAirs[PlayerInfo[playerid][pAirport]-1][airPrice]/100*80));
					D(playerid,D_AIRPORT_SELL,DSM, ""YELLOW"Аэропорт",string,"Продати","Відміна");
				}
			}
		}
		case D_AIRPORT_BANK: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pAirport]) return 1;
			new id = PlayerInfo[playerid][pAirport]-1;
			new sum = strval(inputtext);
			if(sum < 1 || sum > 1000000) return D(playerid,D_AIRPORT_BANK,DSI, ""YELLOW"Аэропорт",""W"Введіть сумму, которую хочете взяти с кассы аэропорта:\n\n"NO"*{f6f6d9} От $1 до $1.000.000","Взяти","Відміна");
			if(gAirs[id][airBank] < sum) return D(playerid,D_AIRPORT_BANK,DSI, ""YELLOW"Аэропорт",""W"Введіть сумму, которую хочете взяти с кассы аэропорта:\n\n"NO"*{f6f6d9} В кассе недостаточно коштів","Взяти","Відміна");	
			if(UpdateHotelData(id,"bank",gAirs[id][airBank] - sum)) return SendClientMessage(playerid,COLOR_REDD,"Помилка #31");
			gAirs[id][airBank] -= sum;
			UpdateAirportData(id+1,"bank",gAirs[id][airBank]);
			GiveMoney(playerid,sum,"прибыль с аэропорта");
			
			new string[128];
			format(string,sizeof(string),"Ви взяли с кассы аэропорта: "ORANGE"$%d",sum);
			SendUse(playerid,string);
		}
		case D_AIRPORT_PRICE: {
			if(!response) return 1;
			new id = PlayerInfo[playerid][pAirport] - 1;
			if(id < 0) return true;
			new price = strval(inputtext);
			if(price < 120000 || price > 170000) return D(playerid,D_AIRPORT_PRICE,DSI, ""YELLOW"Аэропорт",""W"Введіть цену за аренду воздушной техники\n\n"NO"*{f6f6d9} От $120.000 до $170.000","ОК","Відміна");
			gAirs[id][airCoast] = price;
			UpdateAirportData(id+1,"coast",price);
			UpdateAirportsText(id);
			new string[128];
			format(string,sizeof(string),"Ціна за за аренду воздушной техники встановлена: "ORANGE"$%d",price);
			SendUse(playerid,string);
		}
		case D_AIRPORT_SELL: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pAirport] < 1) return ErrorMessage(playerid,"У вас немає аэропорта");
			new id = PlayerInfo[playerid][pAirport] - 1;
			new sum = floatround(gAirs[id][airPrice]/100*80);

			FI[fWHITEHOUSE][fBank] += floatround(gAirs[id][airPrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			if(UpdateAirportData(id+1,"ownerid",0)) return SendClientMessage(playerid,COLOR_REDD,"Помилка #32");
			gAirs[id][airOwnerID] = 0;
			SetString(gAirs[id][airOwner],"");
			new query[256];
			format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '0', `owner` = '' ,`bank` = '0',`bankday` = '0' WHERE `id` = '%d'",id+1);
			mysql_tquery(connects, query,"","");
			UpdateAirportsText(id);
			PlayerInfo[playerid][pAirport] = 0;
			UpdatePlayerData(playerid,"airport",0);
			GiveMoney(playerid,sum,"продажа аэропорта");
			SendOk(playerid,"Аэропорт продан государству");
		}
		case D_AIRPORT_BUY: {
			if(!response) return DeletePVar(playerid,"selectedair");
			if(PlayerInfo[playerid][pAirport]) return ErrorMessage(playerid,"Ви уже владеете одним из аэропортов");
			new airid = GetPVarInt(playerid,"selectedair");
			if(GetPlayerMoneyEx(playerid) < gAirs[airid][airPrice]) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			gAirs[airid][airDay] = unix + 60*60*24;

			new query[172];
			format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '%d', `owner` = '%s', `day` = '%d' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],gAirs[airid][airDay],airid+1);
			mysql_tquery(connects, query,"","");

			GiveMoney(playerid,-gAirs[airid][airPrice],"покупка аэропорта");
			gAirs[airid][airOwnerID] = PlayerInfo[playerid][pID];
			format(gAirs[airid][airOwner],24,"%s",player_name[playerid]);

			UpdateAirportsText(airid);

			PlayerInfo[playerid][pAirport] = airid+1;
			UpdatePlayerData(playerid,"airport",PlayerInfo[playerid][pAirport]);

			SendClientMessage(playerid,CGOLD,"Вітаємо, ви купили аэропорт. Не забувайте оплачувати його, без оплати його продадуть державі!");
			return 1;
		}
		case D_AIRPORT_BUY_2: {
			if(!response) {
				if(GetPVarInt(playerid,"airProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"airProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"airPokupaet")-1;
					SendOk(playerid,"Ви отказались от покупки аэропорта");
					SendOk(id_prodaet,"Гравець отказался от покупки Вашого аэропорта");
					DeletePVar(playerid,"airProdaet");
					DeletePVar(playerid,"airCena");
					DeletePVar(id_pokupaet,"airPokupaet");
				}
			}
			else {
				if(GetPVarInt(playerid,"airProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"airProdaet")-1;
					new id_pokupaet = GetPVarInt(id_prodaet,"airPokupaet")-1;
					new airport_cena = GetPVarInt(playerid,"airCena");
					if(id_pokupaet == playerid) {
						if(PlayerInfo[playerid][pCash] < airport_cena) {
							ErrorMessage(playerid,"У Вас недостаточно грошей на руках");
							ErrorMessage(id_prodaet,"У покупця недостаточно грошей на руках");
							DeletePVar(playerid,"airProdaet");
							DeletePVar(playerid,"airCena");
							DeletePVar(id_pokupaet,"airPokupaet");
						}
						else {
							GiveMoney(playerid,-airport_cena,"покупка аэропорта");
							GiveMoney(id_prodaet,airport_cena,"продажа аэропорта");
							PlayerInfo[playerid][pAirport] = PlayerInfo[id_prodaet][pAirport];
							PlayerInfo[id_prodaet][pAirport] = 0;
							UpdatePlayerData(id_prodaet,"airport",0);
							UpdatePlayerData(playerid,"airport",PlayerInfo[playerid][pAirport]);
							strmid(gAirs[PlayerInfo[playerid][pAirport]-1][airOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
							new query[256],string[128];
							format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '%d', `owner` = '%s' WHERE `id` = '%d'",PlayerInfo[playerid][pID],player_name[playerid],PlayerInfo[playerid][pAirport]);
							mysql_tquery(connects, query);
							UpdateAirportsText(PlayerInfo[playerid][pAirport]-1);

							format(string,sizeof(string),"Ви приобрели аэропорт у "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[id_prodaet],airport_cena);
							SendUse(playerid,string);
							format(string,sizeof(string),"Ви продали аэропорт "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[playerid],airport_cena);
							SendUse(id_prodaet,string);
							DeletePVar(playerid,"airProdaet");
							DeletePVar(playerid,"airCena");
							DeletePVar(id_pokupaet,"airPokupaet");
						}
					}
					else {
						ErrorMessage(playerid,"Гравець оффлайн");
						DeletePVar(playerid,"airProdaet");
						DeletePVar(playerid,"airCena");
					}
				}
			}
		}
		case D_FAMILY_CREATE_2: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_FAMILY_CREATE_3,DSL, ""YELLOW"ТОП сімей",""YELLOW"1."W" По рівню\n"YELLOW"2."W" По EXP\n"YELLOW"3."W" По поєнтам","Вибрати","Відміна");
				case 1: {
					if(PlayerInfo[playerid][pFamily] > 0) return ErrorMessage(playerid,"Ви состоите в семье");
					D(playerid,D_FAMILY_CREATE,DSI, ""YELLOW"Створення Сім'ї","\n\n"W"Введіть назву сім'ї:\n\nВартість створення сім'ї стоит - "GREEN"500 RUB\n\n","Создать","Відміна");
				}
			}
		}
		case D_FAMILY_CREATE_3: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new name[44],rows;
					new lvl;
					new Cache:result = mysql_query(connects, "SELECT `name`,`lvl` FROM `family` ORDER BY `lvl` DESC LIMIT 5");
					cache_get_row_count(rows);
					if(rows) {
						new string[300];
	       				string = ""YELLOW"№ Назву сім'ї\t"YELLOW"Рівень\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "name", name, 44);
							cache_get_value_name_int(i, "lvl",lvl);
							format(str, sizeof(str), f_str, i+1, name,lvl);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Топ сімей по уровню", string, "Закрити", "");
					}
					cache_delete(result);
				}
				case 1: {
					new name[44],rows;
					new exp;
					new Cache:result = mysql_query(connects, "SELECT `name`,`exp` FROM `family` ORDER BY `exp` DESC LIMIT 5");
					cache_get_row_count(rows);
					if(rows) {
						new string[300];
	       				string = ""YELLOW"№ назва сім'ї\t"YELLOW"EXP\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "name", name, 44);
							cache_get_value_name_int(i, "exp",exp);
							format(str, sizeof(str), f_str, i+1, name,exp);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Топ сімей по EXP", string, "Закрити", "");
					}
					cache_delete(result);
				}
				case 2: {
					new name[44],rows;
					new point;
					new Cache:result = mysql_query(connects, "SELECT `name`,`point` FROM `family` ORDER BY `point` DESC LIMIT 5");
					cache_get_row_count(rows);
					if(rows) {
						new string[300];
	       				string = ""YELLOW"№ назва сім'ї\t"YELLOW"Поінти\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "name", name, 44);
							cache_get_value_name_int(i, "point",point);
							format(str, sizeof(str), f_str, i+1, name,point);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Топ сімей по поинтам", string, "Закрити", "");
					}
					cache_delete(result);
				}
			}
		}
		case D_FAMILY_CREATE: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pFamily] > 0) return ErrorMessage(playerid,"Ви состоите в семье");
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 30) {
			    D(playerid,D_FAMILY_CREATE,DSI, ""YELLOW"Создание сім'ї","\n\n"W"Введіть назва сім'ї:\n\nВартість створення сім'ї стоит - "GREEN"500 RUB\n"NO"*{f6f6d9} От 6 до 30 символов\n\n","Создать","Відміна");
				return true;
			}
			if(is_text_invalid(inputtext)) {
				D(playerid,D_FAMILY_CREATE,DSI, ""YELLOW"Создание сім'ї","\n\n"W"Введіть назва сім'ї:\n\nВартість створення сім'ї стоит - "GREEN"500 RUB\n"NO"*{f6f6d9} Присутствуют запрещенные символы\n\n","Создать","Відміна");
				return true;
			}
			if(PlayerInfo[playerid][pRouble] < 500) return ErrorMessage(playerid,"У вас немає 500 RUB");
			if(TotalFamily >= FAMILY_COUNT) return ErrorMessage(playerid,"На сервере достигнут лимит сімей");
			new query[128];
			format(query, sizeof(query), "SELECT * FROM family WHERE name = '%s'", inputtext);
			new Cache:result = mysql_query(connects, query);
			if(cache_num_rows()) {
				ErrorMessage(playerid, "Сім'я с таким именем уже существует");
				cache_delete(result);
				return 1;
			}
			cache_delete(result);

			strmid(gFamily[TotalFamily][famCName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			strmid(gFamily[TotalFamily][famName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			SetString(FamRanks[TotalFamily][0],"None");
			SetString(FamRanks[TotalFamily][1],"None");
			SetString(FamRanks[TotalFamily][2],"None");
			SetString(FamRanks[TotalFamily][3],"None");
			SetString(FamRanks[TotalFamily][4],"None");
			SetString(FamRanks[TotalFamily][5],"None");
			SetString(FamRanks[TotalFamily][6],"None");
			SetString(FamRanks[TotalFamily][7],"None");
			SetString(FamRanks[TotalFamily][8],"None");
			SetString(gFamily[TotalFamily][famMessage],"None");
			gFamily[TotalFamily][famInvRang] = gFamily[TotalFamily][famUninvRang] = gFamily[TotalFamily][famGiveRang] = 7;
			gFamily[TotalFamily][famLvl] = 1;
			new string[128];
			format(string,sizeof(string),"Вітаємо с созданием сім'ї - "ORANGE"%s",gFamily[TotalFamily][famCName]);
			SendUse(playerid,string);
			SendOk(playerid,"Керування семьей - "W"/fmenu");
			PlayerInfo[playerid][pFamily] = TotalFamily + 1;
			UpdatePlayerData(playerid,"family",PlayerInfo[playerid][pFamily]);
			PlayerInfo[playerid][pFamRank] = 8;
			UpdatePlayerData(playerid,"pFamRank",8);
			strmid(gFamily[TotalFamily][famCOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
			strmid(gFamily[TotalFamily][famOwner],player_name[playerid],0,strlen(player_name[playerid]),MAX_PLAYER_NAME);
			new querys[512];
			format(querys, sizeof(querys), "INSERT INTO `family`(`cname`,`name`,`time`,`cowner`,`owner`) VALUES ('%s','%s',NOW(),'%s','%s')",
				gFamily[TotalFamily][famCName],gFamily[TotalFamily][famName],gFamily[TotalFamily][famCOwner],gFamily[TotalFamily][famOwner]);
			mysql_tquery(connects, querys, "creategFamily", "i", TotalFamily);
			TotalFamily++;
			PlayerInfo[playerid][pRouble] -= 500;
			UpdatePlayerData(playerid, "donatemoney", PlayerInfo[playerid][pRouble]);
		}
		case D_FAMILY: {
			if(!response) return 1;
			new fam = PlayerInfo[playerid][pFamily]-1;
			switch(listitem) {
				case 0: {
					new str[24];
					if(gFamily[fam][famHouse] && gHouses[gFamily[fam][famHouse]-1][houseFamily] == gFamily[fam][famHouse]) format(str,sizeof(str),"Дом №%d",gHouses[gFamily[fam][famHouse]-1][houseFamily]);
					else str = "Відсутній";
					static const f_str[] = "\
\t\t\t"W"Сім'я - "YELLOW"%s\n\n\
"W"Власник: \t\t\t"YELLOW"%s (%s)\n\
"W"Дата основания: \t\t"YELLOW"%s\n\
"W"Власник: \t\t\t"YELLOW"%s\n\
"W"Тип сім'ї: \t\t\t"YELLOW"%s\n\
"W"Численность: \t\t\t"YELLOW"%d\n\n\
"W"Рівень: \t\t\t"YELLOW"%d\n\
"W"EXP: \t\t\t\t"YELLOW"%d/%d\n\
"W"Поінти: \t\t\t"YELLOW"%d\n\n\
"W"Гроші: \t\t\t"YELLOW"$%d / $%d\n\
"W"Наркотики: \t\t\t"YELLOW"%d гр. / %d гр.\n\
"W"Боєприпаси: \t\t\t"YELLOW"%d ед. / %d ед.\n\
"W"Бронижелети: \t\t"YELLOW"%d ед. / %d ед.\n\
"W"Аптечки: \t\t\t"YELLOW"%d ед. / %d ед.\n\
"W"Маски: \t\t\t"YELLOW"%d ед. / %d ед.\n\
"W"Каністр із бензином: \t\t"YELLOW"%d ед. / %d ед.\n\
"W"Ремкомплекты: \t\t"YELLOW"%d ед. / %d ед.\n\n\
"W"Место жительства: \t\t"YELLOW"%s";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 24) + (-2 + 24) + (-2 + 24) + (-2 + 11) + (-2 + 11) + (-2 + 11) + (-2 + 11)];
					format(string,sizeof(string),f_str,
												gFamily[fam][famName],
												gFamily[fam][famCOwner],
												gFamily[fam][famCName],
												gFamily[fam][famDate],
												gFamily[fam][famOwner],
												(gFamily[fam][famType] == 0)?("Standart"):("Pro"),
												fam_members(fam+1),
												gFamily[fam][famLvl],
												gFamily[fam][famExp],
												fam_point_upgrade[gFamily[fam][famLvl]-1],
												gFamily[fam][famPoint],
												gFamily[fam][famMoney],
												FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],
												gFamily[fam][famDrugs],
												FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],
												gFamily[fam][famMats],
												FamilyMatsUpdate[gFamily[fam][famMatsMax]],
												gFamily[fam][famArmour],
												FamilyArmourUpdate[gFamily[fam][famArmourMax]],
												gFamily[fam][famHealth],
												FamilyHealthUpdate[gFamily[fam][famHealthMax]],
												gFamily[fam][famMask],
												FamilyMaskUpdate[gFamily[fam][famMaskMax]],
												gFamily[fam][famFuel],
												FamilyFuelUpdate[gFamily[fam][famFuelMax]],
												gFamily[fam][famRemp],
												FamilyRempUpdate[gFamily[fam][famRempMax]],
												str);
					return D(playerid,D_FAMILY_INFO,DSM, ""YELLOW"Інформація",string,"Назад","");
				}
				case 1: {
					new count_family = 0,string[1512];
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(PlayerInfo[i][pFamily] == PlayerInfo[playerid][pFamily]) {
							format(string,sizeof(string),"%s"YELLOW"%i."W" %s\n",string,count_family+1,player_name[i]);
							count_family++;
						}
					}
					return D(playerid,D_FAMILY_INFO,DSL,""YELLOW"Сім'я online",string,"Назад","");
				}
				case 2: {
					new names[24],query[64],rows,string[1256],Level,bool:ids = false;
					FirstFamily[playerid] = 0;
				    format(query, sizeof(query), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `family` = '%d' LIMIT 20", PlayerInfo[playerid][pFamily]);
   					new Cache:result = mysql_query(connects, query);
   					cache_get_row_count(rows);
					for(new i; i < rows; i ++) {
						cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
						cache_get_value_name_int(i, "pLevel",Level);
						if(IsPlayerConnected(GetPlayerID(names))) continue;
						if(Level < 3) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+1, names, Level);
						else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+1, names, Level);
						ids = true;
					}
					if(ids == true) D(playerid, D_FAMILY_OFFLINE, 0, "Сім'я offline", string, "Далі", "Назад");
					else ErrorMessage(playerid, "Список членов сім'ї offline пуст");
					cache_delete(result);
				}
				case 3: {
					static const f_str[] = "\
№ Найменування\tКоличество\n\
1. Гроші\t$%d / $%d\n\
2. Наркотики\t%d гр. / %d гр.\n\
3. Боєприпаси\t%d ед. / %d ед.\n\
4. Бронижелети\t%d ед. / %d ед.\n\
5. Аптечки\t%d ед. / %d ед.\n\
6. Маски\t%d ед. / %d ед.\n\
7. Каністр із бензином\t%d ед. / %d ед.\n\
8. Ремкомплекты\t%d ед. / %d ед.";
					new string[sizeof(f_str) + 50];
					format(string,sizeof(string),f_str,
												gFamily[fam][famMoney],
												FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],
												gFamily[fam][famDrugs],
												FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],
												gFamily[fam][famMats],
												FamilyMatsUpdate[gFamily[fam][famMatsMax]],
												gFamily[fam][famArmour],
												FamilyArmourUpdate[gFamily[fam][famArmourMax]],
												gFamily[fam][famHealth],
												FamilyHealthUpdate[gFamily[fam][famHealthMax]],
												gFamily[fam][famMask],
												FamilyMaskUpdate[gFamily[fam][famMaskMax]],
												gFamily[fam][famFuel],
												FamilyFuelUpdate[gFamily[fam][famFuelMax]],
												gFamily[fam][famRemp],
												FamilyRempUpdate[gFamily[fam][famRempMax]]);
					return D(playerid,D_FAMILY_STORE,DSTH,"Сбережения",string,"Вибрати","Назад");
				}
				case 4: {
					if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return ErrorMessage(playerid,"Доступно только владельцу сім'ї");
					family_setting(playerid);
				}
				case 5: {
					if(GetString(gFamily[fam][famOwner],player_name[playerid])) return ErrorMessage(playerid,"Ви не можете покинуть сім'ю, так как Власник");
					new string[128];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} покинул сім'ю",player_name[playerid],FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
					PlayerInfo[playerid][pFamily] = 0;
					UpdatePlayerData(playerid,"family",0);
					PlayerInfo[playerid][pFamRank] = 0;
					UpdatePlayerData(playerid,"pFamRank",0);
				}
			}
		}
		case D_FAMILY_SET: {
			if(!response) return family_dialog(playerid);
			new fam = PlayerInfo[playerid][pFamily]-1;
			if(strcmp(gFamily[fam][famOwner],player_name[playerid],true)) return ErrorMessage(playerid,"Доступно только владельцу сім'ї");
			switch(listitem) {
				case 0..3: {
					new string[1256];
					for(new i = 1; i <= 8; i++) {
						new frac_rank_check = -1;
						if(listitem == 0) frac_rank_check = gFamily[fam][famInvRang];
						else if(listitem == 1) frac_rank_check = gFamily[fam][famUninvRang];
						else if(listitem == 2) frac_rank_check = gFamily[fam][famGiveRang];
						else if(listitem == 3) frac_rank_check = gFamily[fam][famSklad];
						if(frac_rank_check == -1) return true;
						format(string,sizeof(string),"%s%i. %s%s\n", string,i,(i == frac_rank_check)?(""YELLOW""):(""W""),GetFamName(fam,i));
					}
					SetPVarInt(playerid,"fam_rank", listitem);
					D(playerid,D_FAMILY_SET_RANK,DSL,""YELLOW"Виберіть ранг",string,"Вибрати", "Закрити");
				}
				case 4: {
					new string[1256];
					strcat(string, ""W"");
					for(new i = 1; i <= 8; i++) {
						format(string,sizeof(string),"%s%s\n",string,GetFamName(fam,i));
					}
					D(playerid,D_FAMILY_ERANK_1,DSL,""YELLOW"Виберіть ранг",string,"Вибрати","Назад");
					return 1;
				}
				case 5: {
					new string[256];
					format(string,sizeof(string),"{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---\n{%s}---",FamilyColor[0],
												FamilyColor[1],FamilyColor[2],FamilyColor[3],FamilyColor[4],FamilyColor[5],FamilyColor[6],FamilyColor[7],FamilyColor[8],FamilyColor[9],FamilyColor[10],FamilyColor[11],FamilyColor[12]);
					D(playerid,D_FAMILY_COLOR,DSL,""YELLOW"Изменение кольори",string,"Вибрати","Відміна");
				}
				case 6: D(playerid,D_FAMILY_NAME,DSI,""YELLOW"Изменение названия","\n\n"W"Введіть нову назву сім'ї:\n\n","Змінити","Назад");
				case 7: {
					static const f_str[] = "\
№ Найменування\tСтан склада\tВместимость\tРівень покращень\n\
1. Гроші\t$%d\t%d\t%d/20\n\
2. Наркотики\t%d гр.\t%d\t%d/20\n\
3. Боєприпаси\t%d ед.\t%d\t%d/20\n\
4. Бронижелети\t%d ед.\t%d\t%d/20\n\
5. Аптечки\t%d ед.\t%d\t%d/20\n\
6. Маски\t%d ед.\t%d\t%d/20\n\
7. Каністр із бензином\t%d ед.\t%d\t%d/20\n\
8. Ремкомплекты\t%d ед.\t%d\t%d/20";
					new string[sizeof(f_str) + 70];
					format(string,sizeof(string),f_str,
						gFamily[fam][famMoney],
						FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],
						gFamily[fam][famMoneyMax]+1,
						gFamily[fam][famDrugs],
						FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],
						gFamily[fam][famDrugsMax]+1,
						gFamily[fam][famMats],
						FamilyMatsUpdate[gFamily[fam][famMatsMax]],
						gFamily[fam][famMatsMax]+1,
						gFamily[fam][famArmour],
						FamilyArmourUpdate[gFamily[fam][famArmourMax]],
						gFamily[fam][famArmourMax]+1,
						gFamily[fam][famHealth],
						FamilyHealthUpdate[gFamily[fam][famHealthMax]],
						gFamily[fam][famHealthMax]+1,
						gFamily[fam][famMask],
						FamilyMaskUpdate[gFamily[fam][famMaskMax]],
						gFamily[fam][famMaskMax]+1,
						gFamily[fam][famFuel],
						FamilyFuelUpdate[gFamily[fam][famFuelMax]],
						gFamily[fam][famFuelMax]+1,
						gFamily[fam][famRemp],
						FamilyRempUpdate[gFamily[fam][famRempMax]],
						gFamily[fam][famRempMax]+1);
					D(playerid,D_FAMILY_UPDATE,DIALOG_STYLE_TABLIST_HEADERS,""YELLOW"Покращення складу",string,"Покращити","Назад");
				}
				case 8: D(playerid,D_FAMILY_TEXT, DSI, ""YELLOW"Повідомлення сім'ї", "\n\n"W"Введіть повідомлення, яке буде показано членам Вашої сім'ї при заході:\nДля видалення повідомлення введіть: "ORANGE"None\n\n", "Ввід", "Скасувати");
				case 9: {
					if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку");
					if(gHouses[PlayerInfo[playerid][pHouse]-1][houseClass] != 3) return ErrorMessage(playerid,"Клас будинку не соответствует классу 'ОСОБНЯК'");
					D(playerid,D_FAMILY_HOUSE,DSM,""YELLOW"Дом сім'ї","\n\n"W"Ви дійсно хочете выбрать Ваш дом, спавном своей сім'ї?\n\n","Так","Відміна");
				}
			}
		}
		case D_FAMILY_TEXT: {
			if(!response) {
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитись в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			new message[71];
			if(NonSym(inputtext,70,1)) return D(playerid,D_FAMILY_TEXT, DSI, ""YELLOW"Повідомлення сім'ї", "\n\n"W"Введіть повідомлення, яке буде показано членам Вашої сім'ї при заході:\nДля видалення повідомлення введіть: "ORANGE"None\n\n"NO"* {f6f6d9}Заборонені некоректні символи\n\n", "Ввід", "Скасувати");
			if(sscanf(inputtext,"s[70]",message)) return D(playerid,D_FAMILY_TEXT, DSI, ""YELLOW"Сообщение семье", "\n\n"W"Введіть сообщение, которое будет показано членам вашої сім'ї при входе:\nДля видалення повідомлення введіть: "ORANGE"None\n\n"NO"* {f6f6d9}От 1 до 70 символов\n\n", "Ввід", "Скасувати");
			strmid(gFamily[PlayerInfo[playerid][pFamily]-1][famMessage],message,0,strlen(message),70);

			new query[350];
			format(query,sizeof(query),"UPDATE `family` SET message = '%s' WHERE `id` = '%d' LIMIT 1",gFamily[PlayerInfo[playerid][pFamily]-1][famMessage],PlayerInfo[playerid][pFamily]);
			mysql_tquery(connects,query);

			new string[128];
			format(string,sizeof(string),"Сообщение: "ORANGE"%s {f6f6d9}Успішно встановлено",message);
			SendOk(playerid,string);
		}
		case D_FAMILY_HOUSE: {
			if(!response) {
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку");
			if(gHouses[PlayerInfo[playerid][pHouse]-1][houseClass] != 3) return ErrorMessage(playerid,"Клас будинку не соответствует классу 'ОСОБНЯК'");
			gFamily[PlayerInfo[playerid][pFamily]-1][famHouse] = PlayerInfo[playerid][pHouse];
			UpdateFamily(PlayerInfo[playerid][pFamily],"house",PlayerInfo[playerid][pHouse]);
			gHouses[PlayerInfo[playerid][pHouse]-1][houseFamily] = PlayerInfo[playerid][pHouse];
			new query[128];
			format(query,sizeof(query),"UPDATE `houses` SET `family` = '%d' WHERE id = '%d'",gHouses[PlayerInfo[playerid][pHouse]-1][houseFamily],PlayerInfo[playerid][pHouse]);
			mysql_tquery(connects, query);
			SendOk(playerid,"Дом сім'ї успішно выбран");
		}
		case D_FAMILY_UPDATE: {
			if(!response) {
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PlayerInfo[playerid][pFamily]-1;
			new max_upgrade = 19,lvl = -1;
			new name_upgrade[8][19] = {"денег","наркотиков","боеприпасов","бронежилетов","аптечек","масок","канистр с бензином","ремкомплектов"};
			switch(listitem) {
				case 0: {
					if(gFamily[fam][famMoneyMax] == max_upgrade) return ErrorMessage(playerid,"Цей склад достиг максимального рівня");
					lvl = gFamily[fam][famMoneyMax];
				}
				case 1: {
					if(gFamily[fam][famDrugsMax] == max_upgrade) return ErrorMessage(playerid,"Цей склад достиг максимального рівня");
					lvl = gFamily[fam][famDrugsMax];
				}
				case 2: {
					if(gFamily[fam][famMatsMax] == max_upgrade) return ErrorMessage(playerid,"Цей склад достиг максимального рівня");
					lvl = gFamily[fam][famMatsMax];
				}
				case 3: {
					if(gFamily[fam][famArmourMax] == max_upgrade) return ErrorMessage(playerid,"Цей склад достиг максимального рівня");
					lvl = gFamily[fam][famArmourMax];
				}
				case 4: {
					if(gFamily[fam][famHealthMax] == max_upgrade) return ErrorMessage(playerid,"Цей склад достиг максимального рівня");
					lvl = gFamily[fam][famHealthMax];
				}
				case 5: {
					if(gFamily[fam][famMaskMax] == max_upgrade) return ErrorMessage(playerid,"Цей склад достиг максимального рівня");
					lvl = gFamily[fam][famMaskMax];
				}
				case 6: {
					if(gFamily[fam][famFuelMax] == max_upgrade) return ErrorMessage(playerid,"Цей склад достиг максимального рівня");
					lvl = gFamily[fam][famFuelMax];
				}
				case 7: {
					if(gFamily[fam][famRempMax] == max_upgrade) return ErrorMessage(playerid,"Цей склад достиг максимального рівня");
					lvl = gFamily[fam][famRempMax];
				}
			}
			if(gFamily[fam][famLvl] < lvl+2) return ErrorMessage(playerid,"Рівень сім'ї недостатній");
			SetPVarInt(playerid, "fam_upgrade_stock", listitem);
			new string[144];
			format(string,sizeof(string),"\n\n"W"Ви дійстно хочете покращити склад "YELLOW"%s"W" до "YELLOW"%d"W" рівня за "ORANGE"%d"W" поінтів?",name_upgrade[listitem],lvl+2,fam_point_upgrade[lvl]);
			D(playerid,D_FAMILY_UPDATE_2,DSM,""YELLOW"Покращення складу",string,"Улучшить","Відміна");
		}
		case D_FAMILY_UPDATE_2: {
			if(!response) {
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PlayerInfo[playerid][pFamily]-1;
			switch(GetPVarInt(playerid, "fam_upgrade_stock")) {
				case 0: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famMoneyMax]]) return ErrorMessage(playerid,"У Вашої сім'ї недостатньо поінтів");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famMoneyMax]];
					gFamily[fam][famMoneyMax]++;
					UpdateFamily(fam+1,"money_max",gFamily[fam][famMoneyMax]);
				}
				case 1: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famDrugsMax]]) return ErrorMessage(playerid,"У Вашої сім'ї недостатньо поінтів");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famDrugsMax]];
					gFamily[fam][famDrugsMax]++;
					UpdateFamily(fam+1,"drugs_max",gFamily[fam][famDrugsMax]);
				}
				case 2: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famMatsMax]]) return ErrorMessage(playerid,"У Вашої сім'ї недостатньо поінтів");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famMatsMax]];
					gFamily[fam][famMatsMax]++;
					UpdateFamily(fam+1,"mats_max",gFamily[fam][famMatsMax]);
				}
				case 3: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famArmourMax]]) return ErrorMessage(playerid,"У Вашої сім'ї недостатньо поінтів");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famArmourMax]];
					gFamily[fam][famArmourMax]++;
					UpdateFamily(fam+1,"armour_max",gFamily[fam][famArmourMax]);
				}
				case 4: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famHealthMax]]) return ErrorMessage(playerid,"У Вашої сім'ї недостатньо поінтів");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famHealthMax]];
					gFamily[fam][famHealthMax]++;
					UpdateFamily(fam+1,"health_max",gFamily[fam][famHealthMax]);
				}
				case 5: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famMaskMax]]) return ErrorMessage(playerid,"У Вашої сім'ї недостатньо поінтів");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famMaskMax]];
					gFamily[fam][famMaskMax]++;
					UpdateFamily(fam+1,"mask_max",gFamily[fam][famMaskMax]);
				}
				case 6: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famFuelMax]]) return ErrorMessage(playerid,"У Вашої сім'ї недостатньо поінтів");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famFuelMax]];
					gFamily[fam][famFuelMax]++;
					UpdateFamily(fam+1,"fuel_max",gFamily[fam][famFuelMax]);
				}
				case 7: {
					if(gFamily[fam][famPoint] < fam_point_upgrade[gFamily[fam][famRempMax]]) return ErrorMessage(playerid,"У Вашої сім'ї недостатньо поінтів");
					gFamily[fam][famPoint]-=fam_point_upgrade[gFamily[fam][famRempMax]];
					gFamily[fam][famRempMax]++;
					UpdateFamily(fam+1,"remp_max",gFamily[fam][famRempMax]);
				}
			}
			SendOk(playerid,"Склад успішно улучшен");
			UpdateFamily(fam+1,"point",gFamily[fam][famPoint]);
		}
		case D_FAM_RANK: {
			if(!response) return 1;
			if(listitem == -1) return 1;
			if(PlayerInfo[playerid][pFamRank] <= listitem) return ErrorMessage(playerid, "Ваш ранг недостатній");
			new rank_id = GetPVarInt(playerid,"id_fgiverank"),string[128];
			new fam = PlayerInfo[playerid][pFamily]-1;
			format(string,sizeof(string),"Ви повысили/понизили "W"%s{%s} до ранга "W"%s",player_name[rank_id],FamilyColor[gFamily[fam][famColor]],GetFamName(fam,listitem+1));
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);

			format(string,sizeof(string),"Вас повысил/понизил "W"%s{%s} до ранга "W"%s",player_name[playerid],FamilyColor[gFamily[fam][famColor]],GetFamName(fam,listitem+1));
			SendClientMessage(rank_id,FamilyColorG[gFamily[fam][famColor]],string);

			PlayerInfo[rank_id][pFamRank] = listitem + 1;
			UpdatePlayerData(rank_id,"pFamRank",PlayerInfo[rank_id][pFamRank]);

			DeletePVar(playerid,"id_fgiverank");
			return 1;
		}
		case D_FAMILY_COLOR: {
			if(!response) return family_dialog(playerid);
			if(!PlayerInfo[playerid][pFamily]) return 1;
			new fam = PlayerInfo[playerid][pFamily]-1;
			gFamily[fam][famColor] = listitem;
			UpdateFamily(fam+1,"color",listitem);

			new string[128];
			format(string,sizeof(string),"Ви успішно змінили колір вашої семье на - {%s}КОЛІР сім'ї",FamilyColor[gFamily[fam][famColor]]);
			SendUse(playerid,string);

			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(PlayerInfo[playerid][pFamily] != PlayerInfo[i][pFamily]) continue;
				new famtext[50];
				format(famtext,sizeof(famtext),"{%s}%s",FamilyColor[gFamily[PlayerInfo[i][pFamily]-1][famColor]],gFamily[PlayerInfo[i][pFamily]-1][famName]);
				UpdateDynamic3DTextLabelText(fam_lable[i], -1, famtext);
			}
			family_setting(playerid);
		}
		case D_FAMILY_SET_RANK: {
			if(!response) return DeletePVar(playerid,"fam_rank"),family_dialog(playerid);
			if(!PlayerInfo[playerid][pFamily]) return 1;
			new fam = PlayerInfo[playerid][pFamily]-1;
			new select_listitem = GetPVarInt(playerid,"fam_rank");UpdateFamily(fam+1,"invite",listitem + 1);
			if(select_listitem == 0) gFamily[fam][famInvRang] = listitem + 1,UpdateFamily(fam+1,"invite",listitem + 1);
			else if(select_listitem == 1) gFamily[fam][famUninvRang] = listitem + 1,UpdateFamily(fam+1,"uninvite",listitem + 1);
			else if(select_listitem == 2) gFamily[fam][famGiveRang] = listitem + 1,UpdateFamily(fam+1,"giverank",listitem + 1);
			else if(select_listitem == 3) gFamily[fam][famSklad] = listitem + 1,UpdateFamily(fam+1,"sklad",listitem + 1);
			else return true;
			DeletePVar(playerid,"fam_rank");
			family_setting(playerid);
			return 1;
		}
		case D_FAMILY_ERANK_1: {
			if(!response) return family_dialog(playerid);
			if(!PlayerInfo[playerid][pFamily]) return 1;
			SetPVarInt(playerid,"edit_frank",listitem);
			D(playerid, D_FAMILY_ERANK_2, DSI, ""YELLOW"Смена названия ранга", "\n\n"W"Введіть нову назву ранга:\n\n", "Змінити", "Відміна");
			return 1;
		}
		case D_FAMILY_ERANK_2: {
			if(!response) return family_dialog(playerid);
			if(!PlayerInfo[playerid][pFamily]) return 1;
			new fam = PlayerInfo[playerid][pFamily]-1;
			if(strlen(inputtext) <= 1 || strlen(inputtext) >= 24) return D(playerid, D_FAMILY_ERANK_2, DSI, ""YELLOW"Смена названия ранга", "\n\n"W"Введіть нову назву ранга:\n\n"NO"*{f6f6d9} От 2 и до 24 симолов\n\n", "Змінити", "Відміна");
			string_replace(inputtext, "'", ' ');
			new slot = GetPVarInt(playerid, "edit_frank");

			new string[128];
			format(string,sizeof(string),"Ранг №%d переименован с %s на %s",slot+1,GetFamName(fam,slot+1),inputtext);
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);

			strmid(FamRanks[fam][slot], inputtext, 0, strlen(inputtext));
			SavefRank(slot+1,fam);
			family_setting(playerid);
			return 1;
		}
		case D_FAMILY_INFO: {
  			if(response) {
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
		}
		case D_FAMILY_NAME: {
			if(!response) {
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			if(!strlen(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 30) {
				D(playerid,D_FAMILY_NAME,DSI, ""YELLOW"Назва","\n\n"W"Введіть нову назву сім'ї:\n\n","Змінити","Відміна");
				return true;
			}
			if(is_text_invalid(inputtext)) {
				D(playerid,D_FAMILY_NAME,DSI, ""YELLOW"Назва","\n\n"W"Введіть нову назву сім'ї:\n"NO"*{f6f6d9} Присутствуют запрещенные символы\n\n","Змінити","Відміна");
				return true;
			}
			new query[128];
			format(query, sizeof(query), "SELECT * FROM family WHERE name = '%s'", inputtext);
			new Cache:result = mysql_query(connects, query);
			if(cache_num_rows()) {
				ErrorMessage(playerid, "Сім'я с таким именем уже существует");
				cache_delete(result);
				return 1;
			}
			cache_delete(result);
			new fam = PlayerInfo[playerid][pFamily]-1;
			strmid(gFamily[fam][famName],inputtext,0,strlen(inputtext),strlen(inputtext)+1);
			query = "";
			format(query, sizeof(query), "UPDATE `family` SET name = '%s' WHERE id = '%d'", gFamily[fam][famName],gFamily[fam][famID]);
			mysql_tquery(connects, query, "","");

			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(PlayerInfo[playerid][pFamily] != PlayerInfo[i][pFamily]) continue;
				new famtext[50];
				format(famtext,sizeof(famtext),"{%s}%s",FamilyColor[gFamily[PlayerInfo[i][pFamily]-1][famColor]],gFamily[PlayerInfo[i][pFamily]-1][famName]);
				UpdateDynamic3DTextLabelText(fam_lable[i], -1, famtext);
			}
			new string[128];
			format(string,sizeof(string),"Ви успішно змінили назву вашої сім'ї на - "W"%s",gFamily[fam][famName]);
			SendClientMessage(playerid,FamilyColorG[gFamily[fam][famColor]],string);
			return 1;
		}
		case D_FAMILY_STORE: {
			if(!response) {
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			switch(listitem) {
				case 0: D(playerid,D_FAMILY_STORE_1,DSL,""YELLOW"Гроші",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Вибрати","Відміна");
				case 1: D(playerid,D_FAMILY_STORE_1,DSL,""YELLOW"Наркотики",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Вибрати","Відміна");
				case 2: D(playerid,D_FAMILY_STORE_1,DSL,""YELLOW"Боєприпаси",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Вибрати","Відміна");
				case 3: D(playerid,D_FAMILY_STORE_1,DSL,""YELLOW"Бронижелети",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Вибрати","Відміна");
				case 4: D(playerid,D_FAMILY_STORE_1,DSL,""YELLOW"Аптечки",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Вибрати","Відміна");
				case 5: D(playerid,D_FAMILY_STORE_1,DSL,""YELLOW"Маски",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Вибрати","Відміна");
				case 6: D(playerid,D_FAMILY_STORE_1,DSL,""YELLOW"Канистры с бензином",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Вибрати","Відміна");
				case 7: D(playerid,D_FAMILY_STORE_1,DSL,""YELLOW"Ремкомплекты",""YELLOW"1."W" взяти\n"YELLOW"2."W" Покласти","Вибрати","Відміна");
			}
			SetPVarInt(playerid,"select_famscore",listitem);
		}
		case D_FAMILY_STORE_1: {
			if(!response) {
				DeletePVar(playerid,"select_famscore");
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PlayerInfo[playerid][pFamily]-1;
			new name_upgrade[8][19] = {"денег","наркотиков","боеприпасов","бронежилетов","аптечек","масок","канистр с бензином","ремкомплектов"};
			new lvl,colvo,all_1,all_2;
			switch(GetPVarInt(playerid,"select_famscore")) {
				case 0: {
					colvo = gFamily[fam][famMoney];
					lvl = FamilyMoneyUpdate[gFamily[fam][famMoneyMax]];
					all_2 = PlayerInfo[playerid][pCash];
				}
				case 1: {
					colvo = gFamily[fam][famDrugs];
					lvl = FamilyDrugsUpdate[gFamily[fam][famDrugsMax]];
					all_1 = vip_status[PlayerInfo[playerid][pVips]][vip_drugs]-PlayerInfo[playerid][pDrugs];
					all_2 = PlayerInfo[playerid][pDrugs];
				}
				case 2: {
					colvo = gFamily[fam][famMats];
					lvl = FamilyMatsUpdate[gFamily[fam][famMatsMax]];
					all_1 = vip_status[PlayerInfo[playerid][pVips]][vip_mats]-PlayerInfo[playerid][pMats];
					all_2 = PlayerInfo[playerid][pMats];
				}
				case 3: {
					colvo = gFamily[fam][famArmour];
					lvl = FamilyArmourUpdate[gFamily[fam][famArmourMax]];
				}
				case 4: {
					colvo = gFamily[fam][famHealth];
					lvl = FamilyHealthUpdate[gFamily[fam][famHealthMax]];
					all_1 = vip_status[PlayerInfo[playerid][pVips]][vip_heal]-PlayerInfo[playerid][pMedKit];
					all_2 = PlayerInfo[playerid][pMedKit];
				}
				case 5: {
					colvo = gFamily[fam][famMask];
					lvl = FamilyMaskUpdate[gFamily[fam][famMaskMax]];
					all_1 = vip_status[PlayerInfo[playerid][pVips]][vip_mask]-PlayerInfo[playerid][pMask];
					all_2 = PlayerInfo[playerid][pMask];
				}
				case 6: {
					colvo = gFamily[fam][famFuel];
					lvl = FamilyFuelUpdate[gFamily[fam][famFuelMax]];
					all_1 = vip_status[PlayerInfo[playerid][pVips]][vip_fuel]-PlayerInfo[playerid][pFuel];
					all_2 = PlayerInfo[playerid][pFuel];
				}
				case 7: {
					colvo = gFamily[fam][famRemp];
					lvl = FamilyRempUpdate[gFamily[fam][famRempMax]];
					all_1 = 5-PlayerInfo[playerid][pInstrument];
					all_2 = PlayerInfo[playerid][pInstrument];
				}
			}
			switch(listitem) {
				case 0: {
					if(gFamily[fam][famSklad] > PlayerInfo[playerid][pFamRank]) return ErrorMessage(playerid,"Ваш ранг недостатній");
					if(GetPVarInt(playerid,"select_famscore") != 0 && GetPVarInt(playerid,"select_famscore") != 3) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість "GREEN"%s"W", которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n",name_upgrade[GetPVarInt(playerid,"select_famscore")],colvo,lvl,all_1);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					else {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість "GREEN"%s"W", которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\n\n",name_upgrade[GetPVarInt(playerid,"select_famscore")],colvo,lvl);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
				} 
				case 1: {
					if(GetPVarInt(playerid,"select_famscore") != 3) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість "GREEN"%s"W", которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно %s: "YELLOW"%d\n\n",name_upgrade[GetPVarInt(playerid,"select_famscore")],colvo,lvl,name_upgrade[GetPVarInt(playerid,"select_famscore")],all_2);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					else {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість "GREEN"%s"W", которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\n\n",name_upgrade[GetPVarInt(playerid,"select_famscore")],colvo,lvl);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
				}
			}
		}
		case D_FAMILY_STORE_2: {
			if(!response) {
				DeletePVar(playerid,"select_famscore");
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PlayerInfo[playerid][pFamily]-1;
			if(gFamily[fam][famSklad] > PlayerInfo[playerid][pFamRank]) return ErrorMessage(playerid,"Ваш ранг недостатній");
			new col = strval(inputtext);
			switch(GetPVarInt(playerid,"select_famscore")) {
				case 0: {
					if(col < 1) {
						new string[170];
						format(string,sizeof(string),"\n\n"W"Введіть кількість грошей, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d\n\n",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(gFamily[fam][famMoney] < col) {
						new string[170];
						format(string,sizeof(string),"\n\n"W"Введіть кількість грошей, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно коштів",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					gFamily[fam][famMoney] -= col;
					UpdateFamily(fam+1,"money",gFamily[fam][famMoney]);
					GiveMoney(playerid,col,"снял(а) зі складу сім'ї");
					SendOk(playerid,"Ви взяли гроші зі складу сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} грошей",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				} 
				case 1: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість наркотиків, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],vip_status[PlayerInfo[playerid][pVips]][vip_drugs]-PlayerInfo[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(gFamily[fam][famDrugs] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість наркотиків, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно наркотиків",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],vip_status[PlayerInfo[playerid][pVips]][vip_drugs]-PlayerInfo[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(PlayerInfo[playerid][pDrugs]+ col > vip_status[PlayerInfo[playerid][pVips]][vip_drugs]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість наркотиків, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} Вы не можете хранить у себя так много наркотиків",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],vip_status[PlayerInfo[playerid][pVips]][vip_drugs]-PlayerInfo[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					gFamily[fam][famDrugs] -= col;
					UpdateFamily(fam+1,"drugs",gFamily[fam][famDrugs]);
					PlayerInfo[playerid][pDrugs] +=col;
					UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
					SendOk(playerid,"Ви взяли наркотики зі складу сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} наркотиків",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				} 
				case 2: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість боєприпасів, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],vip_status[PlayerInfo[playerid][pVips]][vip_mats]-PlayerInfo[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(gFamily[fam][famMats] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість боєприпасів, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно боєприпасів",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],vip_status[PlayerInfo[playerid][pVips]][vip_mats]-PlayerInfo[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(PlayerInfo[playerid][pMats]+ col > vip_status[PlayerInfo[playerid][pVips]][vip_mats]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість боєприпасів, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} Вы не можете хранить у себя так много боєприпасів",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],vip_status[PlayerInfo[playerid][pVips]][vip_mats]-PlayerInfo[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}

					gFamily[fam][famMats] -= col;
					UpdateFamily(fam+1,"mats",gFamily[fam][famMats]);
					PlayerInfo[playerid][pMats] +=col;
					UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
					SendOk(playerid,"Ви взяли боєприпаси зі складу сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} боєприпасів",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 3: {
					if(col != 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість бронижелетів, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d\n\n",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(gFamily[fam][famArmour] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість бронижелетів, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно бронижелетів",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					SetPlayerArmour(playerid,100);
					gFamily[fam][famArmour] -= col;
					UpdateFamily(fam+1,"armour",gFamily[fam][famArmour]);
					SendOk(playerid,"Ви взяли бронежилет зі складу сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} бронежилет",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 4: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість аптечок, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],vip_status[PlayerInfo[playerid][pVips]][vip_heal]-PlayerInfo[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(gFamily[fam][famHealth] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість аптечок, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно аптечок",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],vip_status[PlayerInfo[playerid][pVips]][vip_heal]-PlayerInfo[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(PlayerInfo[playerid][pMedKit]+ col > vip_status[PlayerInfo[playerid][pVips]][vip_heal]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість аптечок, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} Вы не можете хранить у себя так много аптечок",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],vip_status[PlayerInfo[playerid][pVips]][vip_heal]-PlayerInfo[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					gFamily[fam][famHealth] -= col;
					UpdateFamily(fam+1,"health",gFamily[fam][famHealth]);
					PlayerInfo[playerid][pMedKit]+=col;
					UpdatePlayerData(playerid,"pMedKit",PlayerInfo[playerid][pMedKit]);
					SendOk(playerid,"Ви взяли аптечки зі складу сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} аптечок",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 5: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість масок, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMask]],vip_status[PlayerInfo[playerid][pVips]][vip_mask]-PlayerInfo[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(gFamily[fam][famMask] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість масок, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно масок",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMask]],vip_status[PlayerInfo[playerid][pVips]][vip_mask]-PlayerInfo[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(PlayerInfo[playerid][pMask]+ col > vip_status[PlayerInfo[playerid][pVips]][vip_mask]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість масок, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} Вы не можете хранить у себя так много масок",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMask]],vip_status[PlayerInfo[playerid][pVips]][vip_mask]-PlayerInfo[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}

					gFamily[fam][famMask] -= col;
					UpdateFamily(fam+1,"mask",gFamily[fam][famMask]);
					PlayerInfo[playerid][pMask] +=col;
					UpdatePlayerData(playerid,"pMask",PlayerInfo[playerid][pMask]);
					SendOk(playerid,"Ви взяли маски зі складу сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} масок",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 6: {
					if(col != 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість канистр с бензином, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],vip_status[PlayerInfo[playerid][pVips]][vip_fuel]-PlayerInfo[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(gFamily[fam][famFuel] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість канистр с бензином, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно канистр с бензином",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],vip_status[PlayerInfo[playerid][pVips]][vip_fuel]-PlayerInfo[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(PlayerInfo[playerid][pFuel]+ col > vip_status[PlayerInfo[playerid][pVips]][vip_fuel]) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість канистр с бензином, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} Вы не можете хранить у себя так много канистр с бензином",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],vip_status[PlayerInfo[playerid][pVips]][vip_fuel]-PlayerInfo[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					gFamily[fam][famFuel] -= col;
					UpdateFamily(fam+1,"fuel",gFamily[fam][famFuel]);
					PlayerInfo[playerid][pFuel]+=col;
					UpdatePlayerData(playerid,"pFuel",PlayerInfo[playerid][pFuel]);
					SendOk(playerid,"Ви взяли канистру с бензином зі складу сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} канистру с бензином",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 7: {
					if(col < 1) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість ремкомплектов, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],5-PlayerInfo[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(gFamily[fam][famRemp] < col) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість ремкомплектов, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно ремкомплектов",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],5-PlayerInfo[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					if(PlayerInfo[playerid][pInstrument]+ col > 5) {
						new string[240];
						format(string,sizeof(string),"\n\n"W"Введіть кількість ремкомплектов, "W"которое хочете взяти:\nСтан склада: "YELLOW"%d / %d"W"\nВ кишеню поміститься: "YELLOW"%d\n\n"NO"*{f6f6d9} Вы не можете хранить у себя так много ремкомплектов",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],5-PlayerInfo[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_2,DSI, ""YELLOW"Сбережения",string,"Взяти","Відміна");
					}
					gFamily[fam][famRemp] -= col;
					UpdateFamily(fam+1,"remp",gFamily[fam][famRemp]);
					PlayerInfo[playerid][pInstrument]+=col;
					UpdatePlayerData(playerid,"pInstr",PlayerInfo[playerid][pInstrument]);
					SendOk(playerid,"Ви взяли ремкоплекты зі складу сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} взял(а) "W"%d{%s} ремкомплектов",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
			}
		}
		case D_FAMILY_STORE_3: {
			if(!response) {
				DeletePVar(playerid,"select_famscore");
				if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
		    	family_dialog(playerid);
		    	return true;
			}
			new fam = PlayerInfo[playerid][pFamily]-1;
			new col = strval(inputtext);
			switch(GetPVarInt(playerid,"select_famscore")) {
				case 0: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість грошей, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно грошей: "YELLOW"%d\n\n",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],PlayerInfo[playerid][pCash]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(PlayerInfo[playerid][pCash]- col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість грошей, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно грошей: "YELLOW"%d\n\n"NO"*{f6f6d9} У Вас недостаточно коштів",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],PlayerInfo[playerid][pCash]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(gFamily[fam][famMoney]+col > FamilyMoneyUpdate[gFamily[fam][famMoneyMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість грошей, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно грошей: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно места",gFamily[fam][famMoney],FamilyMoneyUpdate[gFamily[fam][famMoneyMax]],PlayerInfo[playerid][pCash]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					gFamily[fam][famMoney] += col;
					UpdateFamily(fam+1,"money",gFamily[fam][famMoney]);
					GiveMoney(playerid,-col,"пополнил(а) склад сім'ї");
					SendOk(playerid,"Ви положили гроші на склад сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} грошей на склад сім'ї",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 1: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість наркотиків, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно наркотиків: "YELLOW"%d\n\n",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],PlayerInfo[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(PlayerInfo[playerid][pDrugs]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість наркотиків, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно наркотиків: "YELLOW"%d\n\n"NO"*{f6f6d9} У Вас недостаточно наркотиків",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],PlayerInfo[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(gFamily[fam][famDrugs]+col > FamilyDrugsUpdate[gFamily[fam][famDrugsMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість наркотиків, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно наркотиків: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно места",gFamily[fam][famDrugs],FamilyDrugsUpdate[gFamily[fam][famDrugsMax]],PlayerInfo[playerid][pDrugs]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					gFamily[fam][famDrugs] += col;
					UpdateFamily(fam+1,"drugs",gFamily[fam][famDrugs]);
					PlayerInfo[playerid][pDrugs]-=col;
					UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
					SendOk(playerid,"Ви положили наркотики на склад сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} наркотиків на склад сім'ї",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				} 
				case 2: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість боєприпасів, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно боєприпасів: "YELLOW"%d\n\n",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],PlayerInfo[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(PlayerInfo[playerid][pMats]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість боєприпасів, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно боєприпасів: "YELLOW"%d\n\n"NO"*{f6f6d9} У Вас недостаточно боєприпасів",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],PlayerInfo[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(gFamily[fam][famMats]+col > FamilyMatsUpdate[gFamily[fam][famMatsMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість боєприпасів, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно боєприпасів: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно места",gFamily[fam][famMats],FamilyMatsUpdate[gFamily[fam][famMatsMax]],PlayerInfo[playerid][pMats]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					gFamily[fam][famMats] += col;
					UpdateFamily(fam+1,"mats",gFamily[fam][famMats]);
					PlayerInfo[playerid][pMats]-=col;
					UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
					SendOk(playerid,"Ви положили боєприпаси на склад сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} боєприпасів на склад сім'ї",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 3: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість бронижелетів, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d\n\n",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					new Float:arm;
					GetPlayerArmour(playerid, arm);
					if(arm < 80) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість бронижелетів, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d\n\n"NO"*{f6f6d9} У вас немає бронежилета/он сильно изношен",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(gFamily[fam][famArmour]+col > FamilyArmourUpdate[gFamily[fam][famArmourMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість бронижелетів, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно места",gFamily[fam][famArmour],FamilyArmourUpdate[gFamily[fam][famArmourMax]]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					gFamily[fam][famArmour] += col;
					UpdateFamily(fam+1,"armour",gFamily[fam][famArmour]);
					SendOk(playerid,"Ви положили бронежилет на склад сім'ї");
					SetPlayerArmour(playerid, 0);
					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} бронежилет на склад сім'ї",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 4: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість аптечок, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно аптечок: "YELLOW"%d\n\n",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],PlayerInfo[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(PlayerInfo[playerid][pMedKit]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість аптечок, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно аптечок: "YELLOW"%d\n\n"NO"*{f6f6d9} У Вас недостаточно аптечок",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],PlayerInfo[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(gFamily[fam][famHealth]+col > FamilyHealthUpdate[gFamily[fam][famHealthMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість аптечок, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно аптечок: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно места",gFamily[fam][famHealth],FamilyHealthUpdate[gFamily[fam][famHealthMax]],PlayerInfo[playerid][pMedKit]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					gFamily[fam][famHealth] += col;
					UpdateFamily(fam+1,"health",gFamily[fam][famHealth]);
					PlayerInfo[playerid][pMedKit]-=col;
					UpdatePlayerData(playerid,"pMedKit",PlayerInfo[playerid][pMedKit]);
					SendOk(playerid,"Ви положили аптечки на склад сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} аптечок на склад сім'ї",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 5: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість масок, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно масок: "YELLOW"%d\n\n",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMaskMax]],PlayerInfo[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(PlayerInfo[playerid][pMask]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість масок, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно масок: "YELLOW"%d\n\n"NO"*{f6f6d9} У Вас недостаточно масок",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMaskMax]],PlayerInfo[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(gFamily[fam][famMask]+col > FamilyMaskUpdate[gFamily[fam][famMaskMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість масок, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно масок: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно места",gFamily[fam][famMask],FamilyMaskUpdate[gFamily[fam][famMaskMax]],PlayerInfo[playerid][pMask]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					gFamily[fam][famMask] += col;
					UpdateFamily(fam+1,"mask",gFamily[fam][famMask]);
					PlayerInfo[playerid][pMask]-=col;
					UpdatePlayerData(playerid,"pMask",PlayerInfo[playerid][pMask]);
					SendOk(playerid,"Ви положили маски на склад сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} масок на склад сім'ї",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 6: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість канистр с бензином, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно канистр с бензином: "YELLOW"%d\n\n",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],PlayerInfo[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(PlayerInfo[playerid][pFuel]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість канистр с бензином, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно канистр с бензином: "YELLOW"%d\n\n"NO"*{f6f6d9} У Вас недостаточно канистр с бензином",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],PlayerInfo[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(gFamily[fam][famFuel]+col > FamilyFuelUpdate[gFamily[fam][famFuelMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість канистр с бензином, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно канистр с бензином: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно места",gFamily[fam][famFuel],FamilyFuelUpdate[gFamily[fam][famFuelMax]],PlayerInfo[playerid][pFuel]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					gFamily[fam][famFuel] += col;
					UpdateFamily(fam+1,"fuel",gFamily[fam][famFuel]);
					PlayerInfo[playerid][pFuel]-=col;
					UpdatePlayerData(playerid,"pFuel",PlayerInfo[playerid][pFuel]);
					SendOk(playerid,"Ви положили канистру с бензином на склад сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} канистр с бензином на склад сім'ї",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
				case 7: {
					if(col < 1) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість ремкомплектов, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно ремкомплектов: "YELLOW"%d\n\n",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],PlayerInfo[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(PlayerInfo[playerid][pInstrument]-col < 0) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість ремкомплектов, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"nДоступно ремкомплектов: "YELLOW"%d\n\n"NO"*{f6f6d9} У Вас недостаточно ремкомплектов",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],PlayerInfo[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					if(gFamily[fam][famRemp]+col > FamilyRempUpdate[gFamily[fam][famRempMax]]) {
						new string[230];
						format(string,sizeof(string),"\n\n"W"Введіть кількість ремкомплектов, "W"которое хочете покласти:\nСтан склада: "YELLOW"%d / %d"W"\nДоступно ремкомплектов: "YELLOW"%d\n\n"NO"*{f6f6d9} На складі сім'ї недостаточно места",gFamily[fam][famRemp],FamilyRempUpdate[gFamily[fam][famRempMax]],PlayerInfo[playerid][pInstrument]);
						return D(playerid,D_FAMILY_STORE_3,DSI, ""YELLOW"Сбережения",string,"Покласти","Відміна");
					}
					gFamily[fam][famRemp] += col;
					UpdateFamily(fam+1,"remp",gFamily[fam][famRemp]);
					PlayerInfo[playerid][pInstrument]-=col;
					UpdatePlayerData(playerid,"pInstr",PlayerInfo[playerid][pInstrument]);
					SendOk(playerid,"Ви положили ремкоплекты на склад сім'ї");

					new string[144];
					format(string,sizeof(string),"[FAMILY] "W"%s{%s} положил(а) "W"%d{%s} ремкоплеков на склад сім'ї",player_name[playerid],FamilyColor[gFamily[fam][famColor]],col,FamilyColor[gFamily[fam][famColor]]);
					FamMSG(fam+1,string);
				}
			}
		}
		case D_BUY_SKIN: {
			if(!response) return true;
			new houseid = PlayerInfo[playerid][pHouse]-1;
			if(!PlayerInfo[playerid][pHouse] || ((houseid+1) > 0 && !GetString(player_name[playerid],gHouses[houseid][houseOwner]))) D(playerid,D_BUY_SKIN_2,DSM, ""YELLOW"Покупка одягу",""W"У Вас немає шафи для одягу.\nЯкщо Ви купите цей одяг, то він "NO"замінить"W" Одяг що на вас\n\n"YELLOW"Ви все рівно бажаєте Купити вибраний одяг?","Так","Ні");
			else {
				new skin = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0];
				new price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
				new id = TI[playerid][tSelectedBusinessID];
				new slot=-1;
				for(new i;i<3;i++) {
					if(skin == gHouses[houseid][houseSkin][i]) return ErrorMessage(playerid,"У Вас уже є цей одяг в гардеробі");
					if(!gHouses[houseid][houseSkin][i]) {slot = i; break;}
				}
				if(slot == -1) return D(playerid,D_BUY_SKIN_2,DSM, ""YELLOW"Покупка одягу",""W"У Вас не вистачає місця в гардеробі.\nЯкщо Ви купите цей одяг, то він "NO"замінить"W" Одяг що на вас\n\n"YELLOW"Ви все рівно хочете Купити вибраний одяг?","Так","Ні");

				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(price/100*vip_status[PlayerInfo[playerid][pVips]][vip_chose]);
					if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно коштів");
					GiveMoney(playerid,-(price-seller),"покупка скина");
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(price/100*BonusInfo[act_buyskin]);
						if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно коштів");
						GiveMoney(playerid,-(price-seller),"покупка скина");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(price/100*BonusInfo[act_buyskin]);
						if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно коштів");
						GiveMoney(playerid,-(price-seller),"покупка скина");
					}
				    else {
				    	if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно коштів");
				    	GiveMoney(playerid,-price,"покупка скина");
				    }
				}

				if(gBusiness[id][bizzProduct] - floatround((price / 150) * 5) / 10 > 0) {
					bizz_pay(id,floatround(price * 0.1647));
					gBusiness[id][bizzProduct] -= floatround((price / 150) * 5) / 10;
				}
				UpdateBusinessText(id);
				SaveBusiness(id);
				gHouses[houseid][houseSkin][slot] = skin;
				UpdateHouseDress(houseid);
				if(mysql_errno()) return ErrorMessage(playerid,"Помилка #11");

				SendOk(playerid,"Одяг був поміщений в вашу шафу");
				if(GetPVarInt(playerid, "curskin") == PlayerInfo[playerid][pFracSkin] || PlayerInfo[playerid][pMember]) A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
				else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
				cancel_skin(playerid);
			}
		}
		case D_BUY_SKIN_2: {
			if(!response) return true;
			new houseid = PlayerInfo[playerid][pHouse]-1;
			new skin = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0];
			new price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
			new id = TI[playerid][tSelectedBusinessID];
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(price/100*vip_status[PlayerInfo[playerid][pVips]][vip_chose]);
				if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно коштів");
				GiveMoney(playerid,-(price-seller),"покупка скина");
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(price/100*BonusInfo[act_buyskin]);
					if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно коштів");
					GiveMoney(playerid,-(price-seller),"покупка скина");
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(price/100*BonusInfo[act_buyskin]);
					if(GetPlayerMoneyEx(playerid) < (price-seller)) return ErrorMessage(playerid,"Недостаточно коштів");
					GiveMoney(playerid,-(price-seller),"покупка скина");
				}
			    else {
			    	if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно коштів");
			    	GiveMoney(playerid,-price,"покупка скина");
				}
			}
			if(gBusiness[id][bizzProduct] - floatround((price / 150) * 5) / 10 > 0) {
				bizz_pay(id,floatround(price * 0.1647));
				gBusiness[id][bizzProduct] -= floatround((price / 150) * 5) / 10;
			}
			UpdateBusinessText(id);
			SaveBusiness(id);
			if(houseid+1) {
			    if(GetString(player_name[playerid],gHouses[houseid][houseOwner])) {
					new slot=-1, cnt;
					for(new i;i<3;i++) {
						if(gHouses[houseid][houseSkin][i]) cnt++;
						if(gHouses[houseid][houseSkin][i] == PlayerInfo[playerid][pSkin]) slot = i;
					}
					if(cnt >= 3) {
						if(slot == -1) return ErrorMessage(playerid,"Помилка при нахождении заменямого скина в шафі");
						gHouses[houseid][houseSkin][slot] = skin;
						UpdateHouseDress(houseid);
					}
				}
			}
			if(UpdatePlayerData(playerid,"Skin",skin)) return ErrorMessage(playerid,"Помилка #10");

			PlayerInfo[playerid][pSkin] = skin;
			SetPVarInt(playerid,"ChangingSkin",0);
			if(GetPVarInt(playerid, "curskin") == PlayerInfo[playerid][pFracSkin] || PlayerInfo[playerid][pMember]) A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
			else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
			cancel_skin(playerid);
		}
		case D_AUTOSCHOOL_1: {
			if(!response) return DeletePVar(playerid,"use_test");
			new question = TestASKMassive[playerid][0];
			return D(playerid,D_AUTOSCHOOL_2,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далі","");
		}
		case D_AUTOSCHOOL_2: {
			new que, question;
			que = GetPVarInt(playerid,"pTestQNumber");
			question = TestASKMassive[playerid][que];
			if(QueInfo[question][dSuccesQwe] != -1 && listitem != QueInfo[question][dSuccesQwe]) SetPVarInt(playerid,"error_test",GetPVarInt(playerid,"error_test")+1);
			SetPVarInt(playerid,"pTestQNumber",GetPVarInt(playerid,"pTestQNumber")+1);
			que = GetPVarInt(playerid,"pTestQNumber");
			if(que < 7) {
				question = TestASKMassive[playerid][que];
				D(playerid,D_AUTOSCHOOL_2,QueInfo[question][dDialog],QueInfo[question][dQuestion],QueInfo[question][dAnswers],"Далі","");
			}
			else {
				if(GetPVarInt(playerid,"error_test") > 2) {
					new string[156];
					format(string,sizeof(string),""NO"Іспит провадений!\n\n"W"Помилок допущено: "NO"%d\nРадимо підготуватися краще!",GetPVarInt(playerid,"error_test"));
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Экзамен",string,"Закрити","");
					DeletePVar(playerid,"error_test");
					DeletePVar(playerid,"use_test");
					DeletePVar(playerid,"pTestQNumber");
					TI[playerid][tAutoSchool] = 0;
					return 1;
				}
				else {
					if(!PlayerInfo[playerid][pVips] || PlayerInfo[playerid][pVips] == VIP_KING) {
						D(playerid,DIALOG_NONE,DSM, ""YELLOW"Экзамен",""GREEN"Вітаємо с успішной сдачей теоретической части!\n\n\
												"W"Для проходження практической части займите свободный автомобіль на парковке АвтоШколы","Добре","");
						EnableGPSForPlayer(playerid, 767.2579,-1346.6650,13.7400);
						SetPVarInt(playerid,"WaitExam", true);
						SetPVarInt(playerid,"pWaitingExam", true);
						DeletePVar(playerid,"use_test");
					}
					else {
						SendClientMessage(playerid,CGOLD,"Вітаємо с получением водительского удостоверения");
						lic[playerid][0] = 1;
						UpdateLicenses(playerid);
					}
				}
			}
		}
		case D_AUTOSCHOOL_3: {
			if(!response) return 1;
			new Float:pos[3];
			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
			SetPVarFloat(playerid,"pos_x_autos",pos[0]);
			SetPVarFloat(playerid,"pos_y_autos",pos[1]);
			SetPVarFloat(playerid,"pos_z_autos",pos[2]);
			if(TI[playerid][tAutoSchool] == 2) {
				car_autoschool[playerid] = A_CreateVehicle(487, -2227.2703, 2327.0129, 7.6348, 0.0000, -1, -1, -1,VEHICLE_TYPE_AUTOSCHOOL);
				SetPlayerVirtualWorld(playerid,playerid+1);
				SetVehicleVirtualWorld(car_autoschool[playerid],playerid+1);
				SetPlayerInterior(playerid,0);
				PutPlayerInVehicle(playerid, car_autoschool[playerid], 0);
				SetPlayerRaceCheckpoint(playerid, 3, AutoCPMav[0][0], AutoCPMav[0][1], AutoCPMav[0][2], AutoCPMav[1][0], AutoCPMav[1][1], AutoCPMav[1][2], 5.0);
			}
			else if(TI[playerid][tAutoSchool] == 3) {
				car_autoschool[playerid] = A_CreateVehicle(452, -2212.9558, 2408.5977, 1.4924, 45.0000, -1, -1, -1,VEHICLE_TYPE_AUTOSCHOOL);
				SetPlayerVirtualWorld(playerid,playerid+1);
				SetVehicleVirtualWorld(car_autoschool[playerid],playerid+1);
				SetPlayerInterior(playerid,0);
				PutPlayerInVehicle(playerid, car_autoschool[playerid], 0);
				SetPlayerRaceCheckpoint(playerid, 0, AutoCPBoat[0][0], AutoCPBoat[0][1], AutoCPBoat[0][2], AutoCPBoat[1][0], AutoCPBoat[1][1], AutoCPBoat[1][2], 4.5);
			}
			return 1;
		}
		case D_BANK: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[300], str[120];
					string = ""YELLOW"№ рахунку\t"YELLOW"Назва\n"ORANGE"-\tОсновной рахунок\n";
					for(new i;i < score_number[playerid];i++) {
						format(str, sizeof(str),""ORANGE"%i\t"W"%s\n",gBanks[playerid][bankNumber][i],score_name[playerid][i]), strcat(string, str);
					}
					return D(playerid,D_BANK_ACTIVE,DSTH,"Активные рахунку",string, "Вибрати", "Назад");
				}
				case 1: {
				    if(score_number[playerid] == 3) return ErrorMessage(playerid, "Максимальна кількість рахуноков - 3");
				    return D(playerid,D_BANK_OPEN,DSI, ""YELLOW"Открытие нового рахунку","\n\n"W"Введіть назва для нового лицевого рахунку:\n\n","Відкрити","Відміна");
				}
			}
		}
		case D_BANK_ACTIVE: {
			if(!response) return bank_dialog(playerid);
			if(listitem == 0) return D(playerid,D_BANK_GLOBAL,DSL,""YELLOW"Основной рахунок",""YELLOW"1."W" Інформація про рахунок\n"YELLOW"2."W" Пополнить рахунок\n"YELLOW"3."W" Выдача наличных","Вибрати","Назад");
			SetPVarInt(playerid, "select_score",listitem-1);
			return D(playerid,D_BANK_AUTORISATION,DSI,""YELLOW"Авторизація","\n\n"W"Для получения доступа к рахуноку введіть "YELLOW"PIN-код:\n\n","Ввід","Назад");
		}
		case D_BANK_OPEN: {
			if(!response) return bank_dialog(playerid);
			if(strlen(inputtext) < 1 || strlen(inputtext) > 12) return D(playerid,D_BANK_OPEN,DSI, ""YELLOW"Открытие нового рахунку","\n\n"W"Введіть назва для нового лицевого рахунку:\n\n"NO"*{f6f6d9} Максимальная длина 12 символов\n\n","Відкрити","Відміна");
            new query[150];
			strmid(score_name[playerid][score_number[playerid]], inputtext, 0, strlen(inputtext), 20);
			strmid(gBanks[playerid][bankOwner][score_number[playerid]], player_name[playerid], 0, strlen(player_name[playerid]), 24);
			gBanks[playerid][bankPassword][score_number[playerid]] = 0000;
			gBanks[playerid][bankBalance][score_number[playerid]] = 0;
			format(query,sizeof(query),"INSERT INTO `bank` (`name`,`owner`,`balance`,`code`) VALUES ('%s','%s','0','0000')",score_name[playerid][score_number[playerid]], player_name[playerid]);
			mysql_tquery(connects,query,"","");
			score_number[playerid]++;
			mysql_format(connects,query,sizeof(query),"SELECT * FROM `bank` WHERE BINARY `owner` = '%s'", player_name[playerid]);
    		mysql_tquery(connects,query, "update_bank", "i", playerid);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Рахунок открыт",
				""W"Вітаємо! С открытием нового рахунку в банке.\n\n\
				PIN-код по умолчанию: "YELLOW"0000\n\
				"W"Для защиты денежных сбережений, советуем сменить PIN-код на более сложный!","Готово","");
			return 1;
		}
    	case D_BANK_AUTORISATION: {
	    	if(!response) return bank_dialog(playerid);
			if(strlen(inputtext) != 4) return D(playerid,D_BANK_AUTORISATION,DSI,""YELLOW"Авторизація","\n\n"W"Для получения доступа к рахуноку введіть "O"PIN-код:\n\n"NO"*{f6f6d9} PIN-код должен состоять из 4 цифр\n\n","Ввід","Назад");
			if(gBanks[playerid][bankPassword][GetPVarInt(playerid, "select_score")] == strval(inputtext)) return bank_score(playerid);
			else D(playerid,D_BANK_AUTORISATION,DSI,""YELLOW"Авторизація","\n\n"W"Для получения доступа к рахуноку введіть "YELLOW"PIN-код:\n\n"NO"*{f6f6d9} PIN-код не верный\n\n","Ввід","Назад");
	    }
		case D_BANK_LIST: {
			if(response) {
				return D(playerid,D_BANK_TOP,DSL, ""YELLOW"Список операций", ""YELLOW"1."W" Інформація про рахунок\n"YELLOW"2."W" Пополнить рахунок\n"YELLOW"3."W" Выдача наличных\n"YELLOW"4."W" Перевести на другой рахунок\n"YELLOW"5."W" Список операций\n"YELLOW"6."W" Переименовать рахунок\n"YELLOW"7."W" Изменить PIN-код", "Вибрати", "Назад");
			}
		}
		case D_BANK_GLOBAL_LIST: {
			if(response) {
				return D(playerid,D_BANK_GLOBAL,DSL,""YELLOW"Основной рахунок",""YELLOW"1."W" Інформація про рахунок\n"YELLOW"2."W" Пополнить рахунок\n"YELLOW"3."W" Выдача наличных","Вибрати","Відміна");
			}
		}
     	case D_BANK_TOP: {
			if(!response) return bank_dialog(playerid);
			switch(listitem) {
				case 0: {
					static const f_str[] = "\
"W"Рахунок:\t\t\t"YELLOW"№ %i\n\
"W"Назва:\t\t"YELLOW"%s\n\
"W"Баланс:\t\t"GREEN"$%i\n";
					new string[sizeof(f_str) +1 + (-2 + 8) + (-2 + 13) + (-2 + 11) + (-2 + 6)];
					format(string, sizeof(string), f_str,gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")],score_name[playerid][GetPVarInt(playerid, "select_score")],gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")]);
					return D(playerid,D_BANK_LIST,DSM, ""YELLOW"Інформація",string,"Назад","");
				}
				case 1: D(playerid,D_BANK_PUT,DSI, ""YELLOW"Поповнення рахунку","\n\n"W"Введіть суму яку хочете покласти на банківський рахунок:\n\n","Покласти","Назад");
				case 2: D(playerid,D_BANK_INPUT,DSI, ""YELLOW"Видача готівки","\n\n"W"Введіть сумму которую хочете зняти с банковского рахунку:\n\n","Зняти","Назад");
				case 3: {
					new Float:percent;
					switch(GetPlayerVirtualWorld(playerid)) {
						case 46: percent = FuncBizz[8][funcbPercent2];
						case 47: percent = FuncBizz[9][funcbPercent2];
						case 48: percent = FuncBizz[10][funcbPercent2];
						default: {
							switch(GetPVarInt(playerid, "bank_donate")) {
								case 0: percent = FuncBizz[8][funcbPercent2];
								case 1: percent = FuncBizz[9][funcbPercent2];
								case 2: percent = FuncBizz[10][funcbPercent2];
								default: return 1;
							}
						}
					}
					static const f_str[] = "\n\n"W"Введіть номер рахунку, на который хочете перевести гроші:\nУвага: комиссия за перевод: "ORANGE"%.1f\n\n";
					new string[sizeof(f_str) +1 + (-2 + 4)];
					format(string,sizeof(string),f_str,percent);
					return D(playerid,D_BANK_TRANSFER_ONE,DSI, ""YELLOW"Перевод коштів",string,"Далі","Назад");
				}
				case 4: {
					new query[150];
					mysql_format(connects,query, sizeof(query), "SELECT * FROM `history` WHERE BINARY `number_1` = '%d' or `number_2` = '%d' ORDER BY `date` DESC LIMIT 10", gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")], gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]);
					return mysql_tquery(connects, query, "OnPlayerBankOperations", "i", playerid);
				}
				case 5: D(playerid,D_BANK_CHANGE_NAME,DSI, ""YELLOW"Переименовать рахунок","\n\n"W"Введіть нову назву Вашого рахунку:\n\n","Змінити","Назад");
				case 6: D(playerid,D_BANK_CHANGE_PIN,DSI, ""YELLOW"Смена PIN-кода","\n\n"W"Введіть новый PIN-код состоящий из 4 цифр:\n\n","Змінити","Назад");
			}
		}
		case D_BANK_INPUT: {
			if(!response) return bank_score(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введіть сумму которую хочете зняти:\n\n"NO"*{f6f6d9} Можно снимать от $1 до $%d\n\n",vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_INPUT,DSI, ""YELLOW"Видача готівки",string,"Зняти","Назад");
				return 1;
			}
			if(gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] < amount) return D(playerid,D_BANK_INPUT,DSI, ""YELLOW"Видача готівки","\n\n"W"Введіть сумму которую хочете зняти:\n\n"NO"*{f6f6d9} Недостаточно коштів\n\n","Зняти","Назад");
			gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] -= amount;
		 	GiveMoney(playerid, amount,"зняття з банківського рахунку");

			SaveScore(playerid);

			static const f_str[] = "\
"W"Снято коштів:\t\t"GREEN"$%d\n\
"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")]);
			D(playerid,D_BANK_LIST,DSM, ""YELLOW"Видача готівки",string,"Назад","");

			new query[256];
			mysql_format(connects, query, sizeof(query), "INSERT `history` (`number_1`,`status`,`money`, `date`) VALUES('%d', '3', '%d', '%d' )", gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")],amount, gettime());
			return mysql_tquery(connects, query, "", "");
		}
  		case D_BANK_PUT: {
			if(!response) return bank_score(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введіть суму яку бажаєте покласти:\n\n"NO"*{f6f6d9} Можно класть от $1 до $%d\n\n",vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_PUT,DSI, ""YELLOW"Поповнення рахунку",string,"Покласти","Назад");
				return 1;
			}
			if(PlayerInfo[playerid][pCash] < amount) return D(playerid,D_BANK_PUT,DSI, ""YELLOW"Поповнення рахунку","\n\n"W"Введіть суму яку бажаєте покласти:\n\n"NO"*{f6f6d9} Недостаточно коштів\n\n","Покласти","Назад");
			gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] += amount;
			GiveMoney(playerid, -amount,"положил на банк рахунок");

			SaveScore(playerid);

			static const f_str[] = "\
"W"Внесено коштів:\t\t"GREEN"$%d\n\
"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")]);
			D(playerid,D_BANK_LIST,DSM, ""YELLOW"Поповнення рахунку",string,"Назад","");

			new query[256];
			mysql_format(connects, query, sizeof(query), "INSERT `history` (`number_1`,`status`,`money`, `date`) VALUES('%d', '4', '%d', '%d' )", gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")],amount, gettime());
			return mysql_tquery(connects, query, "", "");
		}
    	case D_BANK_TRANSFER_ONE: {
			if(!response) return bank_score(playerid);
			if(!strlen(inputtext)) {
				new Float:percent;
				switch(GetPlayerVirtualWorld(playerid)) {
					case 46: percent = FuncBizz[8][funcbPercent2];
					case 47: percent = FuncBizz[9][funcbPercent2];
					case 48: percent = FuncBizz[10][funcbPercent2];
					default: {
						switch(GetPVarInt(playerid, "bank_donate")) {
							case 0: percent = FuncBizz[8][funcbPercent2];
							case 1: percent = FuncBizz[9][funcbPercent2];
							case 2: percent = FuncBizz[10][funcbPercent2];
							default: return 1;
						}
					}
				}
				static const f_str[] = "\n\n"W"Введіть номер рахунку, на который хочете перевести гроші:\nУвага: комиссия за перевод: "ORANGE"%.1f%\n\n";
				new string[sizeof(f_str) +1 + (-2 + 4)];
				format(string,sizeof(string),f_str,percent);
				return D(playerid,D_BANK_TRANSFER_ONE,DSI, ""YELLOW"Перевод коштів",string,"Далі","Назад");
			}
			new query[128];
			format(query,sizeof(query),"SELECT * FROM `bank` WHERE `number` = '%i' LIMIT 1", strval(inputtext));
			mysql_tquery(connects,query, "check_score", "ii", playerid, strval(inputtext));
			return 1;
		}
		case D_BANK_TRANSFER_TWO: {
			if(!response) return bank_score(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введіть сумму, которую хочете перевести на введенный Вами рахунок:\n\n"NO"*{f6f6d9} Можно переводить от $1 до $%d\n\n",vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_TRANSFER_TWO,DSI, ""YELLOW"Перевод коштів",string,"Далі","Назад");
				return 1;
			}
			new percent,Float:percent2;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = floatround(amount/100*FuncBizz[8][funcbPercent2]),percent2 = FuncBizz[8][funcbPercent2];
				case 47: percent = floatround(amount/100*FuncBizz[9][funcbPercent2]),percent2 = FuncBizz[9][funcbPercent2];
				case 48: percent = floatround(amount/100*FuncBizz[10][funcbPercent2]),percent2 = FuncBizz[10][funcbPercent2];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = floatround(amount/100*FuncBizz[8][funcbPercent2]),percent2 = FuncBizz[8][funcbPercent2];
						case 1: percent = floatround(amount/100*FuncBizz[9][funcbPercent2]),percent2 = FuncBizz[9][funcbPercent2];
						case 2: percent = floatround(amount/100*FuncBizz[10][funcbPercent2]),percent2 = FuncBizz[10][funcbPercent2];
						default: return 1;
					}
				}
			}
			if(gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] < amount+percent) return D(playerid,D_BANK_TRANSFER_TWO,DSI, ""YELLOW"Перевод коштів",""W"Введіть сумму, которую хочете перевести на введенный Вами рахунок:\n\n"NO"*{f6f6d9} Недостаточно коштів","Далі","Назад");
			new string[256];
			format(string, sizeof(string),""W"Перевод денежных коштів\n\n\
				Имя получателя: \t"YELLOW"%s\n\
				"W"Номер рахунку: \t\t"YELLOW"%d\n\
				"W"Комісія: \t\t"YELLOW"%.1f%\n\n\
				"W"Ви дійсно хочете перевести "GREEN"$%d"W"?",
			gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")], GetPVarInt(playerid, "select_number"),percent2,amount+percent);
			D(playerid,D_BANK_TRANSFER_THREE,DIALOG_STYLE_MSGBOX,"Перевод коштів",string,"Перевод","Відміна");
			SetPVarInt(playerid, "select_money",amount);
			return 1;
		}
		case D_BANK_TRANSFER_THREE: {
			if(!response) {
				DeletePVar(playerid, "select_number");
				DeletePVar(playerid, "select_money");
				strmid(gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")], "None", 0, strlen("None"), 4);
				return bank_score(playerid);
			}
   			new query[256];
			format(query,sizeof(query), "UPDATE `bank` SET `balance` = `balance` + '%i' WHERE `number` = '%i'",
			GetPVarInt(playerid, "select_money"), GetPVarInt(playerid, "select_number"));
			mysql_tquery(connects,query,"","");

			new id = GetPlayerID(gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")]);
			if(IsPlayerConnected(id)) {
				for(new i;i < score_number[id];i++) {
					if(gBanks[id][bankNumber][i] != GetPVarInt(playerid, "select_number")) continue;
					gBanks[id][bankBalance][i] += GetPVarInt(playerid, "select_money");
					
					static const f_str[] = ""YELLOW"%s {f6f6d9}осуществил перевод на Ваш банковский рахунок "W"№ %d"W" в розмірі - "ORANGE"$%d";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 11) + (-2 + 11)];
					format(string,sizeof(string),f_str,player_name[playerid],GetPVarInt(playerid, "select_number"),GetPVarInt(playerid, "select_money"));
					SendUse(id,string);
				}
			}
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[8][funcbPercent2]),bizz_pay(7,percent);
				case 47: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[9][funcbPercent2]),bizz_pay(8,percent);
				case 48: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[10][funcbPercent2]),bizz_pay(9,percent);
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[8][funcbPercent2]),bizz_pay(7,percent);
						case 1: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[9][funcbPercent2]),bizz_pay(8,percent);
						case 2: percent = floatround(GetPVarInt(playerid, "select_money")/100*FuncBizz[10][funcbPercent2]),bizz_pay(9,percent);
						default: return 1;
					}
				}
			}
			gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")] -= (GetPVarInt(playerid, "select_money")+percent);

			SaveScore(playerid);

			new yeart, montht, dayt, hourt, minutet;
			getdate(yeart,montht,dayt) , gettime(hourt,minutet);
			new mtext[20],string[256];
			switch(montht) {
				case 1: mtext = "Января";
				case 2: mtext = "Февраля";
				case 3: mtext = "Марта";
				case 4: mtext = "Апреля";
				case 5: mtext = "Мая";
				case 6: mtext = "Июня";
				case 7: mtext = "Июля";
				case 8: mtext = "Августа";
				case 9: mtext = "Сентебря";
				case 10: mtext = "Октября";
				case 11: mtext = "Ноября";
				case 12: mtext = "Декабря";
			}
			if (minutet < 10)    format(string, sizeof(string), ""W"Перевод успішно завершен\n\nИмя получателя: "YELLOW"%s\n\
				"W"№ рахунку: "YELLOW"%i\n"W"Сумма: "GREEN"$%i\n\n"W"Время: "YELLOW"%i %s %i в %i:0%i",
			gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")],GetPVarInt(playerid, "select_number"),GetPVarInt(playerid, "select_money"),dayt,mtext,yeart,hourt,minutet);
			else format(string, sizeof(string), ""W"Перевод успішно завершен\n\nИмя получателя: "YELLOW"%s\n\
				"W"№ рахунку: "YELLOW"%i\n"W"Сумма: "GREEN"$%i\n\n"W"Время: "YELLOW"%i %s %i в %i:%i",
			gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")],GetPVarInt(playerid, "select_number"),GetPVarInt(playerid, "select_money"),dayt,mtext,yeart,hourt,minutet);
			D(playerid,DIALOG_NONE,DIALOG_STYLE_MSGBOX,"Чек",string,"Готово","");

			mysql_format(connects, query, sizeof(query), "INSERT `history` (`name_1`, `number_1`,`number_2`,`status`, `money`, `date`) VALUES('%s', '%d', '%d', '2', '%d', '%d')", player_name[playerid],gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")],GetPVarInt(playerid, "select_number"),GetPVarInt(playerid, "select_money"), gettime());
			return mysql_tquery(connects, query, "", "");
		}
		case D_BANK_CHANGE_PIN: {
		    if(!response) return bank_score(playerid);
	     	if(strlen(inputtext) != 4 || isNumeric(inputtext)) return D(playerid,D_BANK_CHANGE_PIN,DSI, ""YELLOW"Смена PIN-кода","\n\n"W"Введіть новый PIN-код состоящий из 4 цифр:\n\n","Змінити","Назад");
	     	gBanks[playerid][bankPassword][GetPVarInt(playerid, "select_score")] = strval(inputtext);
			new query[165];
			format(query,sizeof(query),"UPDATE `bank` SET `code` = '%d' WHERE `number` = '%d'",gBanks[playerid][bankPassword][GetPVarInt(playerid, "select_score")], gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]);
  			mysql_tquery(connects,query,"","");

			static const f_str[] = ""W"PIN-код успішно изменён\nВаш новый PIN - "YELLOW"%s";
			new string[sizeof(f_str) +1 + (-2 + 5)];
			format(string,sizeof(string),f_str,inputtext);
			D(playerid,D_BANK_LIST,DSM, ""YELLOW"Смена PIN-кода", string, "Назад","");
			mysql_format(connects, query, sizeof(query), "INSERT `history` (`name_1`, `number_1`,`status`, `date`) VALUES('%s', '%d', '1', '%d')", player_name[playerid],gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")], gettime());
			return mysql_tquery(connects, query, "", "");
		}
		case D_BANK_CHANGE_NAME: {
			if(!response) return bank_score(playerid);
	     	if(strlen(inputtext) < 1 || strlen(inputtext) > 12) return D(playerid,D_BANK_CHANGE_NAME,DSI, ""YELLOW"Переименовать рахунок","\n\n"W"Введіть нову назву Вашого рахунку:\n\n"NO"*{f6f6d9} Максимальная длина 12 символов\n\n","Змінити","Назад");
	     	strmid(score_name[playerid][GetPVarInt(playerid, "select_score")], inputtext, 0, strlen(inputtext), 20);
			new query[100];
			format(query,sizeof(query),"UPDATE `bank` SET `name` = '%s' WHERE `number` = '%d'",score_name[playerid][GetPVarInt(playerid, "select_score")],gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]);
  			mysql_tquery(connects,query,"","");

			static const f_str[] = ""W"Имя банковского рахунку успішно изменено\nНовое имя - "YELLOW"%s";
			new string[sizeof(f_str) +1 + (-2 + 13)];
			format(string,sizeof(string),f_str,score_name[playerid][GetPVarInt(playerid, "select_score")]);
			D(playerid,D_BANK_LIST,DSM, ""YELLOW"Переименовать рахунок", string, "Назад","");
			return 1;
		}
		case D_BANK_GLOBAL: {
			if(!response) return bank_dialog(playerid);
			switch(listitem) {
				case 0: {
					static const f_str[] = "\
"W"Назва:\t\t"O"Основной рахунок\n\
"W"Баланс:\t\t"GREEN"$%i\n";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string, sizeof(string), f_str,PlayerInfo[playerid][pBank]);
					return D(playerid,D_BANK_GLOBAL_LIST,DSM, ""YELLOW"Інформація",string,"Назад","");
				}
				case 1: D(playerid,D_BANK_GLOBAL_PUT,DSI, ""YELLOW"Поповнення рахунку","\n\n"W"Введіть суму яку хочете покласти на банківський рахунок:\n\n","Покласти","Назад");
				case 2: D(playerid,D_BANK_GLOBAL_INPUT,DSI, ""YELLOW"Видача готівки","\n\n"W"Введіть сумму которую хочете зняти с банковского рахунку:\n\n","Зняти","Назад");
			}
		}
		case D_BANK_GLOBAL_INPUT: {
			if(!response) return bank_dialog(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введіть сумму которую хочете зняти:\n\n"NO"*{f6f6d9} Можно снимать от $1 до $%d\n\n",vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_GLOBAL_INPUT,DSI, ""YELLOW"Видача готівки",string,"Зняти","Назад");
				return 1;
			}
			if(PlayerInfo[playerid][pBank] < amount) return D(playerid,D_BANK_GLOBAL_INPUT,DSI, ""YELLOW"Видача готівки","\n\n"W"Введіть сумму которую хочете зняти:\n\n"NO"*{f6f6d9} Недостаточно коштів\n\n","Зняти","Назад");
			PlayerInfo[playerid][pBank] -= amount;
			UpdatePlayerData(playerid,"pBank",PlayerInfo[playerid][pBank]);
		 	GiveMoney(playerid, amount,"зняття з банківського рахунку");

			static const f_str[] = "\
"W"Снято коштів:\t\t"GREEN"$%d\n\
"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PlayerInfo[playerid][pBank]);
			return D(playerid,D_BANK_GLOBAL_LIST,DSM, ""YELLOW"Видача готівки",string,"Назад","");
		}
  		case D_BANK_GLOBAL_PUT: {
			if(!response) return bank_dialog(playerid);
			new amount = strval(inputtext);
			if(amount < 1 || amount > vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введіть суму яку бажаєте покласти:\n\n"NO"*{f6f6d9} Можно класть от $1 до $%d\n\n",vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_BANK_GLOBAL_PUT,DSI, ""YELLOW"Поповнення рахунку",string,"Покласти","Назад");
				return 1;
			}
			if(PlayerInfo[playerid][pCash] < amount) return D(playerid,D_BANK_GLOBAL_PUT,DSI, ""YELLOW"Поповнення рахунку","\n\n"W"Введіть суму яку бажаєте покласти:\n\n"NO"*{f6f6d9} Недостаточно коштів\n\n","Покласти","Назад");
			PlayerInfo[playerid][pBank] += amount;
			UpdatePlayerData(playerid,"pBank",PlayerInfo[playerid][pBank]);
			GiveMoney(playerid, -amount,"положил на банк рахунок");

			static const f_str[] = "\
"W"Внесено коштів:\t\t"GREEN"$%d\n\
"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PlayerInfo[playerid][pBank]);
			return D(playerid,D_BANK_GLOBAL_LIST,DSM, ""YELLOW"Поповнення рахунку",string,"Назад","");
		}
		case D_BANK_OPLATA: {
			if(!response) return 1;
			new day;
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[8][funcbPercent];
				case 47: percent = FuncBizz[9][funcbPercent];
				case 48: percent = FuncBizz[10][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[8][funcbPercent];
						case 1: percent = FuncBizz[9][funcbPercent];
						case 2: percent = FuncBizz[10][funcbPercent];
						default: return 1;
					}
				}
			}
			switch(listitem) {
				case 0: {
					if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку");
					new house = PlayerInfo[playerid][pHouse]-1,oplata;
					if(gHouses[house][houseImprove][1]) oplata = floatround(gHouses[house][housePrice]*house_rent/2);
					else oplata = floatround(gHouses[house][housePrice]*house_rent);
					day = (gHouses[house][houseDay]-gettime())/86400;
					static const f_str[] = "\n\n"W"Введіть кількість днів на яку хочете продовжити аренду за дом:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комісія банка: "ORANGE"%d"W" процент(ів) сума з комісією: "GREEN"$%d"W")\nОплачено днів: "YELLOW"%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
					D(playerid,D_BANK_OPLATA_HOUSE,DSI, ""YELLOW"Оплата будинку",string,"Оплатить","Відміна");
				}
				case 1: {
					if(!PlayerInfo[playerid][pBusiness]) return ErrorMessage(playerid,"У вас немає бізнеса");
					new bizz = PlayerInfo[playerid][pBusiness]-1,oplata;
					if(gBusiness[bizz][bizzUpgrade][2]) oplata = floatround(gBusiness[bizz][bizzSellPrice]*bizz_rent/2);
					else oplata = floatround(gBusiness[bizz][bizzSellPrice]*bizz_rent);
					day = (gBusiness[bizz][bizzDay]-gettime())/86400;
					static const f_str[] = "\n\n"W"Введіть кількість днів на яку хочете продовжити аренду за бізнес:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комісія банка: "ORANGE"%d"W" процент(ів) сума з комісією: "GREEN"$%d"W")\nОплачено днів: "YELLOW"%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
					D(playerid,D_BANK_OPLATA_BIZZ,DSI, ""YELLOW"Оплата бізнеса",string,"Оплатить","Відміна");
				}
				case 2: {
					if(!PlayerInfo[playerid][pHotel]) return ErrorMessage(playerid,"У вас немає отеля");
					new hotel = PlayerInfo[playerid][pHotel]-1;
					day = (gHotels[hotel][hotelDay]-gettime())/86400;
					new oplata = floatround(gHotels[hotel][hotelPrice]*hotel_rent);
					static const f_str[] = "\n\n"W"Введіть кількість днів на яку хочете продовжити аренду за отель:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комісія банка: "ORANGE"%d"W" процент(ів) сума з комісією: "GREEN"$%d"W")\nОплачено днів: "YELLOW"%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
					D(playerid,D_BANK_OPLATA_HOTEL,DSI, ""YELLOW"Оплата отеля",string,"Оплатить","Відміна");
				}
				case 3: {
					if(!PlayerInfo[playerid][pAirport]) return ErrorMessage(playerid,"У вас немає аэропорта");
					new air = PlayerInfo[playerid][pAirport]-1;
					day = (gAirs[air][airDay]-gettime())/86400;
					new oplata = floatround(gAirs[air][airPrice]*airport_rent);
					static const f_str[] = "\n\n"W"Введіть кількість днів на яку хочете продовжити аренду за аэропорт:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комісія банка: "ORANGE"%d"W" процент(ів) сума з комісією: "GREEN"$%d"W")\nОплачено днів: "YELLOW"%d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 17)];
					format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
					D(playerid,D_BANK_OPLATA_AIRPORT,DSI, ""YELLOW"Оплата аэропорта",string,"Оплатить","Відміна");
				}
			}
		}
		case D_BANK_OPLATA_HOUSE: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку");
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[8][funcbPercent];
				case 47: percent = FuncBizz[9][funcbPercent];
				case 48: percent = FuncBizz[10][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[8][funcbPercent];
						case 1: percent = FuncBizz[9][funcbPercent];
						case 2: percent = FuncBizz[10][funcbPercent];
						default: return 1;
					}
				}
			}
			new amount = strval(inputtext);
			new houseid = PlayerInfo[playerid][pHouse] - 1,oplata;
			if(gHouses[houseid][houseImprove][1]) oplata = floatround(gHouses[houseid][housePrice]*house_rent/2);
			else oplata = floatround(gHouses[houseid][housePrice]*house_rent);
			new day;
			day = (gHouses[houseid][houseDay]-gettime())/86400;
			new plata = floatround((oplata/100*percent)+oplata);
			if(amount < 1 || amount > 20) {
				static const f_str[] = "\n\n"W"Введіть кількість днів на яку хочете продовжити аренду за дом:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комісія банка: "ORANGE"%d"W" процент(ів) сума з комісією: "GREEN"$%d"W")\nОплачено днів: "YELLOW"%d\n\n"NO"*{f6f6d9} От 1 до 20 днів\n\n";
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,percent,plata,day);
				D(playerid,D_BANK_OPLATA_HOUSE,DSI, ""YELLOW"Оплата будинку",string,"Оплатить","Відміна");
				return 1;
			}
			if(day + amount > 20) return ErrorMessage(playerid,"Максимальна кількістьоплачених днів 20");
			if(GetPlayerMoneyEx(playerid) < amount*plata) return ErrorMessage(playerid,"Недостаточно коштів");
			gHouses[houseid][houseDay] += 86400 * amount;
			new query[128];
			format(query,sizeof(query),"UPDATE `houses` SET `day` = '%d' WHERE id = '%d'",gHouses[houseid][houseDay],houseid+1);
			mysql_tquery(connects, query,"","");
			GiveMoney(playerid,-(amount*plata),"оплата за дом");

			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 47: bizz_pay(8,amount*floatround(oplata/100*percent));
				case 48: bizz_pay(9,amount*floatround(oplata/100*percent));
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 1: bizz_pay(8,amount*floatround(oplata/100*percent));
						case 2: bizz_pay(9,amount*floatround(oplata/100*percent));
						default: return 1;
					}
				}
			}
			FI[fWHITEHOUSE][fBank] += ((amount*plata)-amount*floatround(oplata/100*percent));
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			static const f_str[] = "\
"W"Оплачено днів:\t\t"O"%d\n\
"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PlayerInfo[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""YELLOW"Оплата будинку",string,"Добре","");
		}
		case D_BANK_OPLATA_BIZZ: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pBusiness]) return ErrorMessage(playerid,"У вас немає бізнеса");
			new amount = strval(inputtext);
			new bizid = PlayerInfo[playerid][pBusiness] - 1,oplata;
			if(gBusiness[bizid][bizzUpgrade][2]) oplata = floatround(gBusiness[bizid][bizzSellPrice]*bizz_rent/2);
			else oplata = floatround(gBusiness[bizid][bizzSellPrice]*bizz_rent);

			new day;
			day = (gBusiness[bizid][bizzDay]-gettime())/86400;

			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[8][funcbPercent];
				case 47: percent = FuncBizz[9][funcbPercent];
				case 48: percent = FuncBizz[10][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[8][funcbPercent];
						case 1: percent = FuncBizz[9][funcbPercent];
						case 2: percent = FuncBizz[10][funcbPercent];
						default: return 1;
					}
				}
			}
			if(amount < 1 || amount > 20) {
				static const f_str[] = "\n\n"W"Введіть кількість днів на яку хочете продовжити аренду за бізнес:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комісія банка: "ORANGE"%d"W" процент(ів) сума з комісією: "GREEN"$%d"W")\nОплачено днів: "YELLOW"%d\n\n"NO"*{f6f6d9} От 1 до 20 днів\n\n";
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
				return D(playerid,D_BANK_OPLATA_BIZZ,DSI, ""YELLOW"Оплата бізнеса",string,"Оплатить","Відміна");
			}
			new plata = floatround((oplata/100*percent)+oplata);
			if(day + amount > 20) return ErrorMessage(playerid,"Максимальна кількістьоплачених днів 20");
			if(GetPlayerMoneyEx(playerid) < amount*plata) return ErrorMessage(playerid,"Недостаточно коштів");
			gBusiness[bizid][bizzDay] += 86400 * amount;
			UpdateBusinessData(bizid+1,"deliving",gBusiness[bizid][bizzDay]);
			GiveMoney(playerid,-(amount*plata),"оплата за бізнес");

			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 47: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 48: bizz_pay(9,amount*floatround(oplata/100*percent));
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 1: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 2: bizz_pay(9,amount*floatround(oplata/100*percent));
						default: return 1;
					}
				}
			}

			FI[fWHITEHOUSE][fBank] += ((amount*plata)-amount*floatround(oplata/100*percent));
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			static const f_str[] = "\
"W"Оплачено днів:\t\t"O"%d\n\
"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PlayerInfo[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""YELLOW"Оплата бізнеса",string,"Добре","");
		}
		case D_BANK_OPLATA_HOTEL: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pHotel]) return ErrorMessage(playerid,"У вас немає отеля");
			new amount = strval(inputtext);
			new hotel = PlayerInfo[playerid][pHotel] - 1;
			new day;
			day = (gHotels[hotel][hotelDay]-gettime())/86400;
			new oplata = floatround(gHotels[hotel][hotelPrice]*hotel_rent);
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[8][funcbPercent];
				case 47: percent = FuncBizz[9][funcbPercent];
				case 48: percent = FuncBizz[10][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[8][funcbPercent];
						case 1: percent = FuncBizz[9][funcbPercent];
						case 2: percent = FuncBizz[10][funcbPercent];
						default: return 1;
					}
				}
			}
			if(amount < 1 || amount > 20) {
				static const f_str[] = "\n\n"W"Введіть кількість днів на яку хочете продовжити аренду за отель:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комісія банка: "ORANGE"%d"W" процент(ів) сума з комісією: "GREEN"$%d"W")\nОплачено днів: "YELLOW"%d\n\n"NO"*{f6f6d9} От 1 до 20 днів\n\n";
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
				return D(playerid,D_BANK_OPLATA_HOTEL,DSI, ""YELLOW"Оплата отеля",string,"Оплатить","Відміна");
			}
			new plata = floatround((oplata/100*percent)+oplata);
			if(day + amount > 20) return ErrorMessage(playerid,"Максимальна кількістьоплачених днів 20");
			if(GetPlayerMoneyEx(playerid) < amount*plata) return ErrorMessage(playerid,"Недостаточно коштів");
			gHotels[hotel][hotelDay] += 86400 * amount;
			UpdateHotelData(hotel+1,"day",gHotels[hotel][hotelDay]);
			GiveMoney(playerid,-(amount*plata),"оплата за отель");
			
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 47: bizz_pay(8,amount*floatround(oplata/100*percent));
				case 48: bizz_pay(9,amount*floatround(oplata/100*percent));
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 1: bizz_pay(8,amount*floatround(oplata/100*percent));
						case 2: bizz_pay(9,amount*floatround(oplata/100*percent));
						default: return 1;
					}
				}
			}

			FI[fWHITEHOUSE][fBank] += ((amount*plata)-amount*floatround(oplata/100*percent));
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			static const f_str[] = "\
"W"Оплачено днів:\t\t"O"%d\n\
"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PlayerInfo[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""YELLOW"Оплата отеля",string,"Добре","");
		}
		case D_BANK_OPLATA_AIRPORT: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pAirport]) return ErrorMessage(playerid,"У вас немає аэропорта");
			new amount = strval(inputtext);
			new airid = PlayerInfo[playerid][pAirport] - 1;
			new day;
			day = (gAirs[airid][airDay]-gettime())/86400;
			new oplata = floatround(gAirs[airid][airPrice]*airport_rent);
			new percent;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: percent = FuncBizz[8][funcbPercent];
				case 47: percent = FuncBizz[9][funcbPercent];
				case 48: percent = FuncBizz[10][funcbPercent];
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: percent = FuncBizz[8][funcbPercent];
						case 1: percent = FuncBizz[9][funcbPercent];
						case 2: percent = FuncBizz[10][funcbPercent];
						default: return 1;
					}
				}
			}
			if(amount < 1 || amount > 20) {
				static const f_str[] = "\n\n"W"Введіть кількість днів на яку хочете продовжити аренду за аэропорт:\nПримечание: "ORANGE"1"W" день = "GREEN"$%d"W" (Комісія банка: "ORANGE"%d"W" процент(ів) сума з комісією: "GREEN"$%d"W")\nОплачено днів: "YELLOW"%d\n\n"NO"*{f6f6d9} От 1 до 20 днів\n\n";
				new string[sizeof(f_str) +1 + (-2 + 17)];
				format(string,sizeof(string),f_str,oplata,percent,floatround((oplata/100*percent)+oplata),day);
				return D(playerid,D_BANK_OPLATA_AIRPORT,DSI, ""YELLOW"Оплата аэропорта",string,"Оплатить","Відміна");
			}
			new plata = floatround((oplata/100*percent)+oplata);
			if(day + amount > 20) return ErrorMessage(playerid,"Максимальна кількістьоплачених днів 20");
			if(GetPlayerMoneyEx(playerid) < amount*plata) return ErrorMessage(playerid,"Недостаточно коштів");
			gAirs[airid][airDay] += 86400 * amount;
			UpdateAirportData(airid+1,"day",gAirs[airid][airDay]);
			GiveMoney(playerid,-(amount*plata),"оплата за аэропорт");

			switch(GetPlayerVirtualWorld(playerid)) {
				case 46: bizz_pay(7,amount*floatround(oplata/100*percent));
				case 47: bizz_pay(8,amount*floatround(oplata/100*percent));
				case 48: bizz_pay(9,amount*floatround(oplata/100*percent));
				default: {
					switch(GetPVarInt(playerid, "bank_donate")) {
						case 0: bizz_pay(7,amount*floatround(oplata/100*percent));
						case 1: bizz_pay(8,amount*floatround(oplata/100*percent));
						case 2: bizz_pay(9,amount*floatround(oplata/100*percent));
						default: return 1;
					}
				}
			}

			FI[fWHITEHOUSE][fBank] += ((amount*plata)-amount*floatround(oplata/100*percent));
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			static const f_str[] = "\
"W"Оплачено днів:\t\t"O"%d\n\
"W"Баланс:\t\t\t"GREEN"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,PlayerInfo[playerid][pCash]);
			return D(playerid,DIALOG_NONE,DSM, ""YELLOW"Оплата отеля",string,"Добре","");
		}
		case dBusRent: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(GetPlayerMoneyEx(playerid) < BUS_PRICE_RENT) return ErrorMessage(playerid,"У Вас недостаточно коштів"),RemovePlayerFromVehicleAC(playerid);
			new vehicleid = GetPlayerVehicleID(playerid);
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"bus_id",vehicleid);
			switch(VehicleInfo[GetPlayerVehicleID(playerid)][vBus]) {
				case 1: D(playerid,dBusPrice,2,"Виберите маршрут:","1. АВЛС - Яблуневий сад\n2. АВЛС - Зброяний завод\n3. АВЛС - Нефтезавод\n4. АВЛС - ЖДСФ\n5. АВЛС - ЖДЛВ","Вибрати","Відміна");
				case 2: {
					new string[156];
					new model = GetVehicleModel(vehicleid);
					if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
					SetString(gRouteName[5], "ЖДЛВ - АВЛС");
					format(string,sizeof(string),""YELLOW"%s\n"W"Вартість білета: "GREEN"$%i",gRouteName[5],100);
					gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));

					SetPVarInt(playerid,"route",6);
					SetNextBusCP(playerid);
				}
				case 3: {
					new string[156];
					new model = GetVehicleModel(vehicleid);
					if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;
					SetString(gRouteName[6], "ЖДСФ - АВЛС");
					format(string,sizeof(string),""YELLOW"%s\n"W"Вартість білета: "GREEN"$%i",gRouteName[6],100);
					gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));

					SetPVarInt(playerid,"route",7);
					SetNextBusCP(playerid);
				}
			}
			GiveMoney(playerid,-BUS_PRICE_RENT,"аренда автобуса");
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 3.0);
			SetPVarFloat(playerid,"bus_damage", 1000.0);
			return 1;
		}
		case dBusPrice: {
			if(!response) {
				D(playerid,dBusPrice,2,"Виберите маршрут:","1. АВЛС - Яблуневий сад\n2. АВЛС - Зброяний завод\n3. АВЛС - Нефтезавод\n4. АВЛС - ЖДСФ\n5. АВЛС - ЖДЛВ","Вибрати","Відміна");
				return 1;
			}
			SetPVarInt(playerid,"route_item",listitem);
			new route = GetPVarInt(playerid,"route_item");
			DeletePVar(playerid,"route_item");
			new string[156];
			new vehicleid = GetPlayerVehicleID(playerid);
			new model = GetVehicleModel(vehicleid);
			if(vehicleid == INVALID_VEHICLE_ID || (model != 431 && model != 437)) return 1;

			switch(route) {
				case 0: SetString(gRouteName[0], "АВЛС - Яблуневий сад");
				case 1: SetString(gRouteName[1], "АВЛС - Зброяний завод");
				case 2: SetString(gRouteName[2], "АВЛС - Нефтезавод");
				case 3: SetString(gRouteName[3], "АВЛС - ЖДСФ");
				case 4: SetString(gRouteName[4], "АВЛС - ЖДЛВ");
			}

			format(string,sizeof(string),""YELLOW"%s\n"W"Вартість білета: "GREEN"$%i",gRouteName[route],100);

			gPlayerBusText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 50.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerBusText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 3.0);

			SetPVarInt(playerid,"route",route + 1);
			SetNextBusCP(playerid);
			SetPVarInt(playerid,"bus_id",vehicleid);
			SetPVarFloat(playerid,"bus_damage", 1000.0);
			return 1;
		}
		case D_SPAWN: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SendOk(playerid,"Ви вибрали местом спавна: "W"вокзал");
				case 1: {
					if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pTempKey] && !PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid, "У вас немає будинку/номера в готелі");
					SendOk(playerid,"Ви вибрали местом спавна: "W"дом/отель");
				}
				case 2:	{
					if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid, "Ви не знаходитесь в організації");
					if(!start_work[playerid]) return ErrorMessage(playerid, "Необхідно почати рабочий день в організації");					
					SendOk(playerid,"Ви вибрали місцем спавну: "W"організацію");
				}
				case 3: {
					if(PlayerInfo[playerid][pFamily] && !gFamily[PlayerInfo[playerid][pFamily]-1][famHouse]) return ErrorMessage(playerid,"Дом сім'ї не выбран");
					SendOk(playerid,"Ви вибрали местом спавна: "W"дом сім'ї");
				}
			}
			PlayerInfo[playerid][pSpawn] = listitem;
		}
		case D_MAFIA_CARM: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return ErrorMessage(playerid, "Ви не в фургоні для розвезення наркотиків");
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pMember] == fLCN) SetPlayerCheckpoint(playerid, 1542.5566,751.2112,10.8279, 5);
					else if(PlayerInfo[playerid][pMember] == fYAKUZA) SetPlayerCheckpoint(playerid, 2626.6301,1766.1650,10.8203, 5);
					else if(PlayerInfo[playerid][pMember] == fRM) SetPlayerCheckpoint(playerid, 945.0831,1810.5544,8.6484, 5);
					SendOk(playerid, "Место загрузки помечено на радаре");
				}
				case 1: SetPlayerCheckpoint(playerid, 1941.4858,-1121.8149,26.5436, 5);
				case 2: SetPlayerCheckpoint(playerid, 2753.4912,-1176.2693,69.4065, 5);
				case 3: SetPlayerCheckpoint(playerid, 2500.5557,-1681.2760,13.3686, 5);
				case 4: SetPlayerCheckpoint(playerid, 1672.8441,-2141.0789,13.5469, 5);
				case 5: SetPlayerCheckpoint(playerid, 2728.3887,-1946.3820,13.5469, 5);
				case 6: {
					new string_gung[512] = ""YELLOW"Банда\t"YELLOW"кількість наркотиків\t"YELLOW"Ціна за 1г\n";
					if(FI[fBALLAS][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{CC00FF}The Ballas\t"YELLOW"%d\t"ORANGE"%d\n",string_gung,FI[fBALLAS][fDrugsBuy],FI[fBALLAS][fDrugsPrice]);
					}
					if(FI[fVAGOS][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{ffff00}The Vagos\t"YELLOW"%d\t"ORANGE"%d\n",string_gung,FI[fVAGOS][fDrugsBuy],FI[fVAGOS][fDrugsPrice]);
					}
					if(FI[fGROVE][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{009900}The Grove\t"YELLOW"%d\t"ORANGE"%d\n",string_gung,FI[fGROVE][fDrugsBuy],FI[fGROVE][fDrugsPrice]);
					}
					if(FI[fAZTEC][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{00CCFF}The Aztecas\t"YELLOW"%d\t"ORANGE"%d\n",string_gung,FI[fAZTEC][fDrugsBuy],FI[fAZTEC][fDrugsPrice]);
					}
					if(FI[fRIFA][fDrugsBuy]) {
						format(string_gung,sizeof(string_gung),"%s{6666FF}The Rifa\t"YELLOW"%d\t"ORANGE"%d\n",string_gung,FI[fRIFA][fDrugsBuy],FI[fRIFA][fDrugsPrice]);
					}
                    D(playerid,DIALOG_NONE,DSTH,"Заказы",string_gung,"Скрыть","");
                    return 1;
				}
			}
			if(listitem) SendOk(playerid, "Место разгрузки помечено на радаре");
			SetPVarInt(playerid,"DrugsMafiaCar",listitem+1);
			return 1;
		}
		case D_MAFIA_CARM_2: {
			if(!response) return 1;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return ErrorMessage(playerid, "Ви не в фургоні для розвезення наркотиків");
			new drugs = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(FI[PlayerInfo[playerid][pMember]][fDrugs] - drugs < 0) {
				static const f_str[] = "\
"W"Введіть кількість наркотиків, которое хочете загрузить в грузовик:\n\n\
Доступно наркотиків: "ORANGE"%d\n\
"W"В грузовик поміститься: "ORANGE"%d\n\n\
"NO"*{f6f6d9} На складі недостаточно наркотиків";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[PlayerInfo[playerid][pMember]][fDrugs],500-VG[vehicleid][vgDrugs]);
				D(playerid, D_MAFIA_CARM_2, DSI, ""YELLOW"Загрузка наркотиків",string, "Загрузити", "Відміна");
				return 1;
			}
			if(VG[vehicleid][vgDrugs] + drugs > 500) {
				static const f_str[] = "\
"W"Введіть кількість наркотиків, которое хочете загрузить в грузовик:\n\n\
Доступно наркотиків: "ORANGE"%d\n\
"W"В грузовик поміститься: "ORANGE"%d\n\n\
"NO"*{f6f6d9} В фургоне недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[PlayerInfo[playerid][pMember]][fDrugs],500-VG[vehicleid][vgDrugs]);
				D(playerid, D_MAFIA_CARM_2, DSI, ""YELLOW"Загрузка наркотиків",string, "Загрузити", "Відміна");
				return 1;
			}
			VG[vehicleid][vgDrugs] += drugs;
			FI[PlayerInfo[playerid][pMember]][fDrugs]-=drugs;
			UpdateFraction(GetTeamID(playerid),"Drugs",FI[PlayerInfo[playerid][pMember]][fDrugs]);
			new string[128];
			format(string,sizeof(string),"Наркотики успішно завантажені. В фургоне доступно: "ORANGE"%d{f6f6d9} наркотиків",VG[vehicleid][vgDrugs]);
			SendOk(playerid,string);
		}
		case D_MAFIA_CARM_3: {
			if(!response) return DeletePVar(playerid,"sell_gdrugs");
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return ErrorMessage(playerid, "Ви не в фургоні для розвезення наркотиків");
			new gung,name[24];
			switch(GetPVarInt(playerid,"sell_gdrugs")) {
				case 1: gung = fBALLAS, name = "The Ballas";
				case 2: gung = fVAGOS, name = "The Vagos";
				case 3: gung = fGROVE, name = "The Grove";
				case 4: gung = fAZTEC, name = "The Aztec";
				case 5: gung = fRIFA, name = "The Rifa";
				default: return ErrorMessage(playerid,"Попробуйте позже");
			}
			if(!FI[gung][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиків");
			new drugs = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(drugs < 100 || drugs > 500) {
				static const f_str[] = "\
"W"Введіть кількість наркотиків, которое хочете продати %s:\n\n\
Доступно наркотиків: "ORANGE"%d\n\
Склад банди: "ORANGE"%d"W"\n\
"W"Заказ банди: "ORANGE"%d / $%d 1г\n\n\
"NO"*{f6f6d9} Продати можно от 100 и до 500 грамм";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs],FI[gung][fDrugsBuy],FI[gung][fDrugsPrice]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""YELLOW"Продажа наркотиків",string, "Продати", "Відміна");
				return 1;
			}
			if(VG[vehicleid][vgDrugs] - drugs < 0) {
				static const f_str[] = "\
"W"Введіть кількість наркотиків, которое хочете продати %s:\n\n\
Доступно наркотиків: "ORANGE"%d\n\
Склад банди: "ORANGE"%d"W"\n\
"W"Заказ банди: "ORANGE"%d / $%d 1г\n\n\
"NO"*{f6f6d9} В фургоне недостаточно наркотиків";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs],FI[gung][fDrugsBuy],FI[gung][fDrugsPrice]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""YELLOW"Продажа наркотиків",string, "Продати", "Відміна");
				return 1;
			}
			if(FI[gung][fDrugs] + drugs > 10000) {
				static const f_str[] = "\
"W"Введіть кількість наркотиків, которое хочете продати %s:\n\n\
Доступно наркотиків: "ORANGE"%d\n\
Склад банди: "ORANGE"%d"W"\n\
"W"Заказ банди: "ORANGE"%d / $%d 1г\n\n\
"NO"*{f6f6d9} На склад банди не поместится столько наркотиків";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,name,VG[vehicleid][vgDrugs],FI[gung][fDrugs],FI[gung][fDrugsBuy],FI[gung][fDrugsPrice]);
				D(playerid, D_MAFIA_CARM_3, DSI, ""YELLOW"Продажа наркотиків",string, "Продати", "Відміна");
				return 1;
			}
			VG[vehicleid][vgDrugs] -= drugs;
			FI[gung][fDrugs]+=drugs;
			UpdateFraction(gung,"Drugs",FI[gung][fDrugs]);

			FI[PlayerInfo[playerid][pMember]][fBank] += (FI[gung][fDrugsPrice] * drugs);
			UpdateFraction(GetTeamID(playerid),"Bank",FI[PlayerInfo[playerid][pMember]][fBank]);

			new string[128];
			format(string,sizeof(string),"Наркотики успішно проданы за "ORANGE"%d.{f6f6d9} В фургоне доступно: "ORANGE"%d{f6f6d9} наркотиків",(FI[gung][fDrugsPrice] * drugs),VG[vehicleid][vgDrugs]);
			SendOk(playerid,string);

			FI[gung][fDrugsBuy]-=drugs;
			UpdateFraction(gung,"DrugsBuy",FI[gung][fDrugsBuy]);
			if(FI[gung][fDrugsBuy] == 0) {
				FI[gung][fDrugsPrice] = 0;
				UpdateFraction(gung,"DrugsPrice",FI[gung][fDrugsPrice]);
			}
			DeletePVar(playerid,"sell_gdrugs");
		}
		case D_ARMY_CARM: {
		    if(!response) return true;
			if(start_work[playerid] && PlayerInfo[playerid][pMember] == fARMYLV) {}
			else return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return ErrorMessage(playerid, "Ви не в матовозі");
			switch(listitem) {
				case 0: SetPlayerCheckpoint(playerid, 1535.8534,-1674.4445,13.3828, 5);
				case 1: SetPlayerCheckpoint(playerid, -1606.6760,726.5093,12.0220, 5);
				case 2: SetPlayerCheckpoint(playerid, 2288.5105,2421.4209,10.8203, 5);
				case 3: SetPlayerCheckpoint(playerid, -1978.0072,-1008.3723,32.0234, 5);
				case 4: {
					new string[300];
    				format(string, sizeof(string), "\tОрганізація\tБоєприпаси\n"W"Армія ЛВ:\t"YELLOW"%d\n"W"Армія СФ:\t"YELLOW"%d\n"W"Поліція ЛС:\t"YELLOW"%d\n"W"Поліція СФ:\t"YELLOW"%d\n"W"Поліція ЛВ:\t"YELLOW"%d\n"W"ФБР:\t"YELLOW"%d",
					FI[fARMYLV][fMats],FI[fARMYSF][fMats],FI[fLSPD][fMats],FI[fSFPD][fMats],FI[fLVPD][fMats],FI[fFBI][fMats]);
                    D(playerid, DIALOG_NONE, DST,"Склади організацій",string,"Скрыть","");
                    return 1;
				}
			}
			SendOk(playerid, "Место разгрузки помечено на радаре");
			SetPVarInt(playerid,"MatsArmyCar",listitem+1);
			return 1;
		}
		case D_ARMY_CARM_SF: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return ErrorMessage(playerid, "Ви не в матолёте");
			switch(listitem) {
				case 0: D(playerid, D_ARMY_CARM_SF_2, DSL, ""YELLOW"Загрузка боєприпасів",""YELLOW"1."W" Загрузка зброяни завод\n"YELLOW"2."W" Загрузка склад Army SF", "Вибрати", "Відміна");
				case 1: D(playerid, D_ARMY_CARM_SF_3, DSL, ""YELLOW"Разгрузка боєприпасів",""YELLOW"1."W" Разгрузка Army SF\n"YELLOW"2."W" Разгрузка Army LV", "Вибрати", "Відміна");
			}
			return 1;
		}
		case D_ARMY_CARM_SF_2: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return ErrorMessage(playerid, "Ви не в матолеті");
			switch(listitem) {
				case 0: {
					SetPlayerCheckpoint(playerid, 2693.2300,-2370.8938,16.0798, 5);
					SendOk(playerid, "Место загрузки (зброяного заводу завод) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",5);
				}
				case 1: {
					SetPlayerCheckpoint(playerid, -1607.3578,285.5919,7.1875, 5);
					SendOk(playerid, "Место загрузки (склад Army SF) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",6);
				}
			}
			return 1;
		}
		case D_ARMY_CARM_SF_3: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return ErrorMessage(playerid, "Ви не в матолеті");
			switch(listitem) {
				case 0: {
					SetPlayerCheckpoint(playerid, -1607.3578,285.5919,7.1875, 5);
					SendOk(playerid, "Место разгрузки (Army SF) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",7);
				}
				case 1: {
					SetPlayerCheckpoint(playerid, 310.7923,1801.0048,17.6406, 5);
					SendOk(playerid, "Место загрузки (Army LV) помечено на радаре");
					SetPVarInt(playerid,"MatsArmyCar",8);
				}
			}
			return 1;
		}
		case D_ARMY_CARM_SF_4: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return ErrorMessage(playerid, "Ви не в матолеті");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(zavodsklad - mats < 0) {
				static const f_str[] = "\
"W"Введіть кількість боєприпасів, яку хочете загрузити в матоліт:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"В матоліт вміститься: "ORANGE"%d\n\
"NO"*{f6f6d9} На оружейном складі недостаточно боєприпасів";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,zavodsklad,30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_4, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
				return 1;
			}
			if(VG[vehicleid][vgAmount][0] + mats > 30000) {
				static const f_str[] = "\
"W"Введіть кількість боєприпасів, яку хочете загрузити в матоліт:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"В матоліт вміститься: "ORANGE"%d\n\
"NO"*{f6f6d9} В матолёте недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,zavodsklad,30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_4, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
				return 1;
			}
			VG[vehicleid][vgAmount][0] += mats;
			zavodsklad -= mats;
			UpdateOtherData("gun_mats",zavodsklad);
			new string[128];
			format(string,sizeof(string),"Боєприпаси успішно завантажені. В матолёте доступно: "ORANGE"%d{f6f6d9} боєприпасів",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
		case D_ARMY_CARM_SF_5: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return ErrorMessage(playerid, "Ви не в матолеті");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(FI[fARMYSF][fMats] - mats < 0) {
				static const f_str[] = "\
"W"Введіть кількість боєприпасів, яку хочете загрузити в матоліт:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"В матоліт вміститься: "ORANGE"%d\n\
"NO"*{f6f6d9} На складі Army SF недостаточно боєприпасів";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[fARMYSF][fMats],30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_5, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
				return 1;
			}
			if(VG[vehicleid][vgAmount][0] + mats > 30000) {
				static const f_str[] = "\
"W"Введіть кількість боєприпасів, яку хочете загрузити в матоліт:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"В матоліт вміститься: "ORANGE"%d\n\
"NO"*{f6f6d9} В матолёте недостаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,FI[fARMYSF][fMats],30000-VG[vehicleid][vgAmount][0]);
				D(playerid, D_ARMY_CARM_SF_5, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
				return 1;
			}
			VG[vehicleid][vgAmount][0] += mats;
			FI[fARMYSF][fMats] -= mats;
			UpdateFraction(fARMYSF,"Mats",FI[fARMYSF][fMats]);
			new string[128];
			format(string,sizeof(string),"Боєприпаси успішно завантажені. В матолёте доступно: "ORANGE"%d{f6f6d9} боєприпасів",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
		case D_ARMY_CARM_SF_6: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return ErrorMessage(playerid, "Ви не в матолеті");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(VG[vehicleid][vgAmount][0] - mats < 0) {
				static const f_str[] = "\
"W"Введіть кількість боєприпасів, которое хочете разгрузить на склад:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"На склад поміститься: "ORANGE"%d\n\
"NO"*{f6f6d9} В матолёте недостаточно боєприпасів";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYSF][fMats]);
				D(playerid, D_ARMY_CARM_SF_6, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			if(FI[fARMYSF][fMats] + mats > 1000000) {
				static const f_str[] = "\
"W"Введіть кількість боєприпасів, которое хочете разгрузить на склад:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"На склад поміститься: "ORANGE"%d\n\
"NO"*{f6f6d9} На складі недосаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYSF][fMats]);
				D(playerid, D_ARMY_CARM_SF_6, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			VG[vehicleid][vgAmount][0] -= mats;
			FI[fARMYSF][fMats] += mats;
			UpdateFraction(fARMYSF,"Mats",FI[fARMYSF][fMats]);
			new string[128];
			format(string,sizeof(string),"Боєприпаси успішно разгружены. В матолёте доступно: "ORANGE"%d{f6f6d9} боєприпасів",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
		case D_ARMY_CARM_SF_7: {
		    if(!response) return true;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 548) return ErrorMessage(playerid, "Ви не в матолеті");
			new mats = strval(inputtext);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(VG[vehicleid][vgAmount][0] - mats < 0) {
				static const f_str[] = "\
"W"Введіть кількість боєприпасів, которое хочете разгрузить на склад:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"На склад поміститься: "ORANGE"%d\n\
"NO"*{f6f6d9} В матолёте недостаточно боєприпасів";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLV][fMats]);
				D(playerid, D_ARMY_CARM_SF_7, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			if(FI[fARMYLV][fMats] + mats > 1000000) {
				static const f_str[] = "\
"W"Введіть кількість боєприпасів, которое хочете разгрузить на склад:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"На склад поміститься: "ORANGE"%d\n\
"NO"*{f6f6d9} На складі недосаточно места";
				new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
				format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLV][fMats]);
				D(playerid, D_ARMY_CARM_SF_7, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
				DeletePVar(playerid,"MatsArmyCar");
				return 1;
			}
			VG[vehicleid][vgAmount][0] -= mats;
			FI[fARMYLV][fMats] += mats;
			UpdateFraction(fARMYLV,"Mats",FI[fARMYLV][fMats]);
			new string[128];
			format(string,sizeof(string),"Боєприпаси успішно разгружены. В матолёте доступно: "ORANGE"%d{f6f6d9} боєприпасів",VG[vehicleid][vgAmount][0]);
			SendOk(playerid,string);
		}
		case dProdList: {
			if(!response) return 1;
			new veh = GetPlayerVehicleID(playerid);
			new car = GetVehicleModel(veh);
			switch(listitem) {
				case 0: {
					//if(GetVehicleModel(veh) == 403 && !GetVehicleTrailer(veh)) return ErrorMessage(playerid,"У вас немає цистерны с топливом");
					new string[3600];
					strcat(string, ""YELLOW"№\t"GREEN"Назва бізнеса\t"GREEN"Ціна за ед продукта\t"GREEN"Требуется продуктов\n");

					new count_est = 0;
					for(new i; i<gBusinessCount; i++) {
						if(!gBusiness[i][bizzOwnerID]) continue;
						if(gBusiness[i][bizzProdOrder] <= 0) continue;
						if(count_est >= 30) break;
						switch(car) {
							case 456: if(gBusiness[i][bizzType] == 7) continue;//24-7
							case 403: if(gBusiness[i][bizzType] != 7) continue;//АЗС
						}
						format(string,sizeof(string),"%s%d\t%s\t%d\t%d\n",string,i+1,gBusiness[i][bizzName],gBusiness[i][bizzProdOrderPrice],gBusiness[i][bizzProdOrder]);
						count_est++;
					}

					if(count_est == 0) return ErrorMessage(playerid,"Бізнесмени не оставляли заявки на доставку продуктов");
					D(playerid,dProdPut,DSTH,"Бізнес",string,"Вибрати","Відміна");
				} 
				case 1: {
					switch(car) {
						case 456: EnableGPSForPlayer(playerid, 1144.7769,1975.1379,10.8203);
						case 403: EnableGPSForPlayer(playerid, -215.4123,-246.7570,2.0283);
					}
				}
			}
		}
		case dProdPut: {
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return 1;
			new veh = GetPlayerVehicleID(playerid);
			new car = GetVehicleModel(veh);
			if(GetVehicleModel(veh) == 403 && !GetVehicleTrailer(veh)) return ErrorMessage(playerid,"У вас немає цистерны с топливом");
			if(!response) return 1;
			prod_id[playerid] = strval(inputtext);
			new biz = prod_id[playerid]-1;
			
			if(!GetPVarInt(playerid,"count_prod")) return ErrorMessage(playerid,"В вашій машині відсутні продукти");
			switch(car) {
				case 456: if(gBusiness[biz][bizzType] == 7) return ErrorMessage(playerid,"Неверно указан номер бізнеса");
				case 403: if(gBusiness[biz][bizzType] != 7) return ErrorMessage(playerid,"Неверно указан номер бізнеса");
			}
			new string[256];
			format(string, sizeof(string), ""W"Бізнес: "O"%s\n"W"Ціна за 1 продукт: "GREEN"$%d\n"W"Требуется продуктов: "O"%d", gBusiness[biz][bizzName],gBusiness[biz][bizzProdOrderPrice],gBusiness[biz][bizzProdOrder]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Бізнес",string,"Закрити","");

			format(string,144,""W"%s: "GREEN"%d/2000\n"W"Бізнес: "GREEN"%s", (car == 456) ? ("Продукты") : ("Бензин"), GetPVarInt(playerid,"count_prod"),gBusiness[biz][bizzName]);
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid],COLOR_BLUE,string);

			SetPVarInt(playerid,"prod_id", biz + 1);
			if(gBusiness[biz][bizzID] != 20) {
				gPlayerProdCP[playerid] = CreateDynamicCP(gBusiness[biz][bizzX] + (3.5 * floatsin(-gBusiness[biz][bizzR], degrees)),gBusiness[biz][bizzY] + (3.5 * floatcos(-gBusiness[biz][bizzR], degrees)),gBusiness[biz][bizzZ],8.0,-1,-1,playerid,100.0);
				EnableGPSForPlayer(playerid, gBusiness[biz][bizzX] + (3.5 * floatsin(-gBusiness[biz][bizzR], degrees)),gBusiness[biz][bizzY] + (3.5 * floatcos(-gBusiness[biz][bizzR], degrees)),gBusiness[biz][bizzZ]);
			}
			else {
				gPlayerProdCP[playerid] = CreateDynamicCP(693.7745,1948.5906,5.5432,8.0,-1,-1,playerid,100.0);
				EnableGPSForPlayer(playerid, 693.7745,1948.5906,5.5432);
			}
			return 1;
		}
		case D_BUKSIR: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PlayerInfo[playerid][pCash] < 500) {
				ErrorMessage(playerid, "У Вас не достатньо грошей для аренди буксира");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			SendOk(playerid, "Для перегляду доступних заказів, введіть - "W"/repairs");
			GiveMoney(playerid,-500,"оренда буксира");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"mehjob", GetPlayerVehicleID(playerid));
			PlayerMehText[playerid] = CreateDynamic3DTextLabel("{f6f6d9}Топлива немає",-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID,GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,PlayerMehText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			return 1;
		}
		case dProdRent: {
			if(GetPlayerState(playerid) != 2) return 1;
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(GetPlayerMoneyEx(playerid) < 500) return ErrorMessage(playerid,"У Вас недостаточно коштів"),RemovePlayerFromVehicleAC(playerid);
			GiveMoney(playerid,-500,"аренда транспорта(развозчики)");
			new veh = GetPlayerVehicleID(playerid);
			DeletePVar(playerid,"prod_id");
			SetPVarInt(playerid,"prod_vehicle_id",veh);
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) {
				new string[128];
				format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бізнес: "GREEN"Відсутній", GetPVarInt(playerid,"count_prod"));
				gPlayerProdText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
				Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			}
			SendOk(playerid,"Транспорт для развозки продуктов/бензина арендован. Керування заказами - "W"/prods");
			return 1;
		}
		case dEatRent: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PlayerInfo[playerid][pCash] < 500) {
				ErrorMessage(playerid, "У Вас не достаточно грошей для аренди авто для прожажи їжі");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда развозчика еды");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
			SetPVarInt(playerid,"eatjob", GetPlayerVehicleID(playerid));
			PlayerEatText[playerid] = CreateDynamic3DTextLabel("{f6f6d9}Хот-догов: "YELLOW"0 ед.",-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID,GetPlayerVehicleID(playerid));
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,PlayerEatText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			return 1;
		}
		case dProdGet: {
			if(!response) return 1;
			if(GetPlayerState(playerid)!=PLAYER_STATE_DRIVER) return 1;
			if(strval(inputtext) < 1000 || strval(inputtext) > 2000) {
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) {
					return D(playerid,dProdGet,DSI, ""YELLOW"Покупка бензина","\n\n"W"Введіть кількість литров для покупки:\nПримечание: "ORANGE"1"W" литр = "GREEN"$1\n\n"NO"*{f6f6d9} От 1000 до 2000\n\n","Купити","Відміна");
				}
				else return D(playerid,dProdGet,DSI, ""YELLOW"Покупка продуктов","\n\n"W"Введіть кількість продуктов для покупки:\nПримечание: "ORANGE"1"W" продукт = "GREEN"$1\n\n"NO"*{f6f6d9} От 1000 до 2000\n\n","Купити","Відміна");
			}
			if(GetPVarInt(playerid,"count_prod") + strval(inputtext) > 2000) {
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) {
					return D(playerid,dProdGet,DSI, ""YELLOW"Покупка бензина","\n\n"W"Введіть кількість литров для покупки:\nПримечание: "ORANGE"1"W" литр = "GREEN"$1\n\n"NO"*{f6f6d9} В Вашу машину столько не влезет. Максимум 2000\n\n","Купити","Відміна");
				}
				else return D(playerid,dProdGet,DSI, ""YELLOW"Покупка продуктов","\n\n"W"Введіть кількість продуктов для покупки:\nПримечание: "ORANGE"1"W" продукт = "GREEN"$1\n\n"NO"*{f6f6d9} В Вашу машину столько не влезет. Максимум 2000\n\n","Купити","Відміна");
			}
			if(GetPlayerMoneyEx(playerid) < strval(inputtext)) return ErrorMessage(playerid,"Недостаточно коштів");

			GiveMoney(playerid,-strval(inputtext),"покупка продуктов(развозчик)");
			new string[128];
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) {
				format(string,sizeof(string),"Ви купили: "YELLOW"%d{f6f6d9} ед. продуктов за "ORANGE"$%d{f6f6d9}. Очікуйте загрузку продуктів в автомобіль",strval(inputtext),strval(inputtext));
				SendUse(playerid,string);
				SetTimerEx("LoadProd",0,0,"i",playerid);
			}
			else {
				format(string,sizeof(string),"Ви купили: "YELLOW"%d{f6f6d9} л. бензина за "ORANGE"$%d{f6f6d9}. Цистерна с бензином уже готова к транспортировке",strval(inputtext),strval(inputtext));
				SendUse(playerid,string);
				SetTimerEx("LoadProd",0,0,"i",playerid);
			}
			SetPVarInt(playerid,"count_prod2", strval(inputtext));
			return 1;
		}
		case dProdSell: {
			if(!response) return 1;
			new bizid = GetPVarInt(playerid,"prod_id")-1;
			new prod = GetPVarInt(playerid,"count_prod");
			new price = strval(inputtext);
			new string[286],str[10];
			switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
				case 456: str = "продуктов";
				case 403: str = "топлива";
			}
			if(price < 1 || price > 2000) {
				format(string, sizeof(string), ""W"Бізнес: "YELLOW"%s\n\n\
											"W"Потрібно %s: "O"%d\n\
											"W"Доступно для розгрузки: "O"%d\n\
											"W"Введіть кількість %s для продажи:\n\n\
											"NO"*{f6f6d9} Від 1 од до 2000 од",
											gBusiness[bizid][bizzName],str,gBusiness[bizid][bizzProdOrder],prod,str);
				return D(playerid,dProdSell,DSI, ""YELLOW"Доставка",string,"Продати","Відміна");
			}
			if(gBusiness[bizid][bizzProdOrder] < price) {
				format(string, sizeof(string), ""W"Бізнес: "YELLOW"%s\n\n\
											"W"Требуется %s: "O"%d\n\
											"W"Доступно для разгрузки: "O"%d\n\
											"W"Введіть кількість %s для продажи:\n\n\
											"NO"*{f6f6d9} Власник бізнеса не заказывал столько %s"
											,gBusiness[bizid][bizzName],str,gBusiness[bizid][bizzProdOrder],prod,str,str);
				return D(playerid,dProdSell,DSI, ""YELLOW"Доставка",string,"Продати","Відміна");
			}
			if(prod < price) {
				format(string, sizeof(string), ""W"Бізнес: "YELLOW"%s\n\n\
											"W"Требуется %s: "O"%d\n\
											"W"Доступно для разгрузки: "O"%d\n\
											"W"Введіть кількість %s для продажи:\n\n\
											"NO"*{f6f6d9} В вашій машині немає стільки %s"
											,gBusiness[bizid][bizzName],str,gBusiness[bizid][bizzProdOrder],prod,gBusiness[bizid][bizzProdOrder],str,str);
				return D(playerid,dProdSell,DSI, ""YELLOW"Доставка",string,"Продати","Відміна");
			}

			GiveMoney(playerid,gBusiness[bizid][bizzProdOrderPrice] * price,"оплата развозчику");

			gBusiness[bizid][bizzProdOrder] -= price;
			gBusiness[bizid][bizzProduct] += price;			

			format(string, sizeof(string), ""W"Бізнес: "YELLOW"%s\n\n\
											"W"Продуктов доставлено: "O"%d\n\
											"W"Требуется продуктов: "O"%d\n\
											"W"Заработано: "GREEN"$%d",gBusiness[bizid][bizzName],price,gBusiness[bizid][bizzProdOrder],gBusiness[bizid][bizzProdOrderPrice] * price);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Доставлено",string,"Закрити","");

			if(gBusiness[bizid][bizzProdOrder] == 0) gBusiness[bizid][bizzProdOrderPrice] = 0;
			SaveBusiness(bizid);

			DeletePVar(playerid,"prod_id");
			SetPVarInt(playerid,"count_prod", GetPVarInt(playerid,"count_prod") - price);

			format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бізнес: "GREEN"Відсутній", GetPVarInt(playerid,"count_prod"));
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid],-1,string);
			UpdateBusinessText(bizid);

			if(gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);
			return 1;
		}
		case D_AUTOSALON:{
			if(!response) return 1;
			switch(listitem){
				case 0:{
					new vw;
					switch(GetPlayerVirtualWorld(playerid)){
						case 1: vw = GetPVarInt(playerid,"sellcarClass")+1;
						case 2: vw = GetPlayerVirtualWorld(playerid)-1;
						case 3: vw = GetPVarInt(playerid,"sellcarClass")+1;
						case 4: vw = GetPlayerVirtualWorld(playerid)-1;
					}
					SetPlayerPosAC(playerid, 1449.4907,702.5972,1087.9011, vw, 82);
					SetPlayerFacingAngle(playerid,88.9930);
					SetCameraBehindPlayer(playerid);
				}
				case 1:{
					new id = TI[playerid][tSelectedBusinessID];
					TI[playerid][tTPpick] = true;
					SetPlayerPosAC(playerid, gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ], 0, 0);
					SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);
					SetCameraBehindPlayer(playerid);
				}
			}
		}
		case D_BUY_CAR: {
			if(!response) return true;
			new string[128];
			format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]\n"W"2. Автомобіль №2 "YELLOW"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
			D(playerid,D_BUY_CAR_2,DSL,""YELLOW"Автосалон",string,"Купити","Закрити");
		}
		case D_BUY_CAR_2: {
			if(!response) return 1;
			new businessid = TI[playerid][tSelectedBusinessID];
			if(businessid < 0) return true;
			new carid = GetPVarInt(playerid,"car_number");
			DeletePVar(playerid,"car_number");
			new price = gTransport[carid][trPrice];
			if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У вас немає будинку/номера в готелі");
			if(gPlayerCars[playerid][carModel][listitem] != 481) return ErrorMessage(playerid,"Для начала продайте автомобіль на данном слоте");

			new prices;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(price/100*vip_status[PlayerInfo[playerid][pVips]][vip_buycar]);
				if(PlayerInfo[playerid][pCash] < (price-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
				GiveMoney(playerid,-(price-seller),"покупка авто");
				prices = (price-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(price/100*BonusInfo[act_buycar]);
					if(PlayerInfo[playerid][pCash] < (price-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
					GiveMoney(playerid,-(price-seller),"покупка авто");
					prices = (price-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(price/100*BonusInfo[act_buycar]);
					if(PlayerInfo[playerid][pCash] < (price-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
					GiveMoney(playerid,-(price-seller),"покупка авто");
					prices = (price-seller);
				}
			    else {
			    	if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			    	GiveMoney(playerid,-price,"покупка авто");
			    	prices = price;
			    }
			}

			gPlayerCars[playerid][carModel][listitem] = gTransport[carid][trModel];
			gPlayerCars[playerid][carFuel][listitem] = gTransport[carid][trTank];
			gPlayerCars[playerid][carDrived][listitem] = 0;
			save_car(playerid,listitem);
			loading_cars(playerid,listitem);

			if(gBusiness[businessid][bizzProduct]-gTransport[carid][trProds] > 0) {
				gBusiness[businessid][bizzProduct] -= gTransport[carid][trProds];
				switch(GetPVarInt(playerid,"sellcarClass")) {
					case 1: bizz_pay(businessid,floatround(price * 0.095));//LS
					case 3: bizz_pay(businessid,floatround(price * 0.095));//SF
					case 5: bizz_pay(businessid,floatround(price * 0.0495));//LV
					case 6: bizz_pay(businessid,floatround(price * 0.075));//Мото
				}
			}
			UpdateBusinessText(businessid);

			new string[200];
			format(string,sizeof(string),""W"Вітаємо з покупкою автомобіля: "YELLOW"%s\n\n\
										"W"Автомобіль куплений за: "GREEN"$%d\n\
										"W"Та доставлений до вашого будинку",gTransport[carid][trName],prices);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Автосалон",string,"Дякую","");
		}
		case D_MEDCARD:{
			if(!response) return 1;

			new price;
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(1000/100*BonusInfo[act_medcard]);
				if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів. Вартість мед.карти - $1.000");
				price = (1000-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(1000/100*BonusInfo[act_medcard]);
				if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів. Вартість мед.карти - $1.000");
				price = (1000-seller);
			}
		    else price = 1000;

			use_medcards(playerid);
			GiveMoney(playerid,-price,"получение мед карти");
			FI[fWHITEHOUSE][fBank] += price;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
		}
		case D_MEDSEX:{
			if(!response) return 1;
			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(50000/100*vip_status[PlayerInfo[playerid][pVips]][vip_changesex]);
				price = (50000-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(50000/100*BonusInfo[act_changesex]);
					price = (50000-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(50000/100*BonusInfo[act_changesex]);
					price = (50000-seller);
				}
			    else price = 50000;
			}
		    if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно грошей для операции. Вартість операции - $50.000");
		    use_medsex(playerid);
			GiveMoney(playerid,-price,"смена пола");
			FI[fWHITEHOUSE][fBank] += price;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
		}
		case D_SU: {
			if(!response) return 1;
			SetPVarInt(playerid,"su_listitem",listitem);
			D(playerid,D_SU_2,DSL,""YELLOW"Преступление",suspect_player[listitem][suspect_name_reason],"Вибрати","Назад");
			return 1;
		}
		case D_SU_2: {
			new params[2];
			params[1] = GetPVarInt(playerid,"su_listitem");
			new string[1024]; 
			if(!response || suspect_player[params[1]][suspect_level][listitem] == -1) {
				strcat(string, ""W"");
				for(new i=0; i<13; i++) {
					format(string,sizeof(string),"%s%s\n",string,suspect_player[i][suspect_name_folder]);
				}
				D(playerid,D_SU,DSL,""YELLOW"Преступление",string,"Вибрати","Закрити");
				DeletePVar(playerid,"su_listitem");
				return 1;
			}
			params[0] = GetPVarInt(playerid,"su_player");
			format(string,128,"%s объявил Вас в розшук. Причина: %s",player_name[playerid],(inputtext));
			SendClientMessage(params[0],CBADINFO,string);
			PlayerInfo[params[0]][pSearch] += suspect_player[params[1]][suspect_level][listitem];
			SetPlayerCriminal(params[0],player_name[playerid], (inputtext));
			format(string,220,"[Увага] %s объявлен(а) в розшук [%d/6]. Обвинитель: %s. Причина: %s",player_name[params[0]],PlayerInfo[params[0]][pSearch],player_name[playerid],(inputtext));
			SendTeamMessage(CDEPARTMENT,string);
			SetPlayerWantedLevel(params[0], PlayerInfo[params[0]][pSearch]);
			DeletePVar(playerid,"su_player");
			DeletePVar(playerid,"su_listitem");
			return 1;
		}
		case D_TAZER: {
			if(!response ) return 1;
			for(new i; i <= 11; i++) {
				new gunid, ammo, storeslot = -1,string[200];
				GetPlayerWeaponData(playerid, i, gunid,ammo);
				new gun_text[32];
				GetWeaponName(gunid,gun_text,32);
				switch(gunid) {
					case 24,25: if(strfind(inputtext,gun_text) != -1) storeslot ++;
				}
				if(!gunid || !ammo || storeslot == -1) continue;
				if(storeslot != -1) {
					format(string,sizeof(string),""YELLOW"%s{f6f6d9} успішно заряжено парализующими патронами [2 шт]",gun_text);
					SendUse(playerid,string);

					format(string, sizeof(string),"заряжает %s парализующими патронами",gun_text);
					MeAction(playerid,string);

					TI[playerid][tTazers][0] = 2;
					TI[playerid][tTazers][1] = gunid;
					break;
				}
			}
			return 1;
		}
		case dInviteSkin: {
			new string[156];
			format(string, sizeof(string), ""YELLOW"%s{f6f6d9} предложил Вам вступить в организацию "ORANGE"%s",player_name[playerid],FI[PlayerInfo[playerid][pMember]][fName]);
			SendUse(GetPVarInt(playerid,"invkot"), string);
			SendClientMessage(GetPVarInt(playerid,"invkot"), COLOR_BLUE,"Натисніть "YES"Y "BLUE"Щоб согласиться "NO"N "BLUE"для отказа");

			format(string, sizeof(string),"Ви предложили "YELLOW"%s{f6f6d9} вступить в организацию "ORANGE"%s",player_name[GetPVarInt(playerid,"invkot")],FI[PlayerInfo[playerid][pMember]][fName]);
			SendUse(playerid, string);
	
	        SetPVarInt(GetPVarInt(playerid,"invkot"),"invstat",GetPVarInt(playerid,"invkot"));
			SetPVarInt(GetPVarInt(playerid,"invkot"),"invinv",playerid);
			SetPVarInt(GetPVarInt(playerid,"invkot"),"invskin",gFractionSkin[PlayerInfo[playerid][pMember]][listitem]);
	
			DeletePVar(playerid, "invkot");
		}
		case dFractionSkin: {
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid,"params[0]");
			if(!IsPlayerConnected(actplayerid) || PlayerInfo[actplayerid][pMember] != PlayerInfo[playerid][pMember]) return 1;
			new fractionid = PlayerInfo[actplayerid][pMember];
			new skinid = gFractionSkin[fractionid][listitem];
			if(skinid == PlayerInfo[actplayerid][pFracSkin]) return 1;
			new mes[213];
			format(mes,sizeof(mes),"Ваша внешность была изменена лідером організації "YELLOW"%s[%d]",player_name[playerid],playerid);
			SendUse(actplayerid,mes);
			format(mes,sizeof(mes),"Ви изменили внешность гравця "YELLOW"%s[%d]",player_name[actplayerid],actplayerid);
			SendUse(playerid,mes);
			UpdatePlayerData(actplayerid,"pModel",skinid);
			PlayerInfo[actplayerid][pFracSkin] = skinid;
			if(start_work[actplayerid]) A_SetPlayerSkin(actplayerid,skinid);
		}
		case dRank: {
			if(!response) return 1;
			if(listitem == -1) return 1;
			if(PlayerInfo[playerid][pRank] <= listitem) return ErrorMessage(playerid, "Ваш ранг недостатній");
			new rank_id = GetPVarInt(playerid,"id_giverank"),string[128];

			format(string,sizeof(string),"Ви повысили/понизили "YELLOW"%s{f6f6d9} до ранга "ORANGE"%s",player_name[rank_id],GetRankName(PlayerInfo[playerid][pMember],listitem+1));
			SendUse(playerid,string);

			format(string,sizeof(string),"Вас повысил/понизил "YELLOW"%s{f6f6d9} до ранга "ORANGE"%s",player_name[playerid],GetRankName(PlayerInfo[playerid][pMember],listitem+1));
			SendUse(rank_id,string);

			PlayerInfo[rank_id][pRank] = listitem + 1;
			UpdatePlayerData(rank_id,"pRank",PlayerInfo[rank_id][pRank]);

			new rangs[4];
			format(rangs,sizeof(rangs),"%d",PlayerInfo[rank_id][pRank]);
			FracLog(LOGS_RANK,player_name[playerid],player_name[rank_id],rangs);
			DeletePVar(playerid,"id_giverank");
			return 1;
		}
		case D_CALL_SERVICESS: {
			if(!response) return 1;
			if(GetPlayerVirtualWorld(playerid) != 0) return ErrorMessage(playerid,"Для вызова служб спасения выйдите из помещения");
			new Float:pos[3];
            GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
			switch(listitem) {
				case 0: {
					new bool:online = false;
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(!IsACop(i) && !start_work[playerid]) continue;
						if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return ErrorMessage(playerid,"Диспетчер: в даний момент, немає поліцейських поблизу");
					SendOk(playerid, "Диспетчер: Ваш виклик прийнятний, очікуйте...");
					SetPVarInt(playerid,"call_police",1);
				}
				case 1: {
					new bool:online = false;
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(!IsAMedic(i) && !start_work[playerid]) continue;
						if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return ErrorMessage(playerid,"Диспетчер: в даний момент, немає медиків поблизу");
					SendOk(playerid, "Диспетчер: Ваш виклик прийнятий, очікуйте...");
					SetPVarInt(playerid,"call_medics",1);
				}
				case 2: {
					new online = 0;
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(PlayerInfo[i][pJob] != 2) continue;
						if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
						online = true;
					}
					if(!online) return ErrorMessage(playerid,"Диспетчер: в даний момент, немає механіків поблизу");
					SendOk(playerid, "Диспетчер: Ваш виклик прийнятий, очікуйте...");
					SetPVarInt(playerid,"call_mechanics",1);
				}
			}
		}
		case D_TOW: {
			if(!response) return true;
			new trailer = GetPlayerVehicleID(playerid);
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !trailer) return true;
			new offer = GetPVarInt(playerid,"towoffer");
			new offee = GetPVarInt(playerid,"towoffee");
			if(offee != playerid) return ErrorMessage(playerid,"Помилка 125");
			if(GetPlayerDistanceToPlayer(playerid,offer) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(offer)) return ErrorMessage(playerid,"Ви далеко друг от друга");			
			RemovePlayerFromVehicleAC(playerid);			
			new vehicleid = TI[offer][tArendaCar];
			SetTimerEx("AttachTrailerToVehicleEx",3000,false,"ii",trailer,vehicleid);
			SetPVarInt(playerid,"towvid",vehicleid);
			SetPVarInt(playerid,"towactvid",trailer);
			SendOk(playerid,"Т.С. будет прицеплено через 3 секунды. Щоб отцепить, використовуйте "W"/untow");
		}
		case D_MAKEGUN: {
			if(!response) return 1;
			new needgun = MakeGunData[listitem][mgunamount];
			new bool:noneedgun;
			SetPVarInt(playerid,"noneedgun",0);
			for(new i;i<12;i++) {
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == MakeGunData[listitem][mgunid]) {noneedgun = true; SetPVarInt(playerid,"noneedgun",1); break;}
			}
			if(PlayerInfo[playerid][pMats] < needgun && !noneedgun) {
				new string[64];
				format(string, sizeof(string), "Вам нужно %d ед. зброї для сборки этого зброї",needgun);
				ErrorMessage(playerid,string);
				return 1;
			}
			D(playerid,D_MAKEGUN_2,DSI, ""YELLOW"Сборка зброї","\n\n"W"Сколько патронів Ви хочете использовать для этого зброї?\n\n","Собрать","Відміна");
			SetPVarInt(playerid,"makegun_listitem",listitem);
			return 1;
		}
		case D_MAKEGUN_2: {
			if(!response) return 1;
			new ammos = strval(inputtext);
			new listitem_gun = GetPVarInt(playerid,"makegun_listitem");
			if(ammos < 1 || ammos > 200) return D(playerid,D_MAKEGUN_2,DSI, ""YELLOW"Сборка зброї","\n\n"W"Сколько патронів Ви хочете использовать для этого зброї?\n\n"NO"*{f6f6d9} От 1 до 200 патронів\n\n","Собрать","Відміна");
			if(PlayerInfo[playerid][pMats]<(ammos+MakeGunData[listitem_gun][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return ErrorMessage(playerid, "Недостаточно боєприпасів");
			if(PlayerInfo[playerid][pMats]<ammos && GetPVarInt(playerid,"noneedgun")) return ErrorMessage(playerid, "Недостаточно боєприпасів");
			DeletePVar(playerid,"makegun_listitem");
			MeAction(playerid,"собрал(а) зброю");
			if(!GetPVarInt(playerid,"noneedgun")) PlayerInfo[playerid][pMats] -= MakeGunData[listitem_gun][mgunamount];
			SetPVarInt(playerid,"noneedgun",0);
		
			PlayerInfo[playerid][pMats] -= ammos;
			UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);

			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) AC_GivePlayerWeapon(playerid,MakeGunData[listitem_gun][mgunid],ammos*BonusInfo[act_gun]);
			else if(BonusInfo[act_select] == 2) AC_GivePlayerWeapon(playerid,MakeGunData[listitem_gun][mgunid],ammos*BonusInfo[act_gun]);
		    else AC_GivePlayerWeapon(playerid,MakeGunData[listitem_gun][mgunid],ammos);
			return 1;
		}
		case D_BIZWAR: {
			if(response) {
				D(playerid, D_BIZWAR_LIST, DSL, ""YELLOW"Вибор места", ""YELLOW"1."W" Метеостанция\n"YELLOW"2."W" Деревня СВ-ВВС\n"YELLOW"3."W" Каменная деревня\n"YELLOW"4."W" Порт СФ\n"YELLOW"5."W" Вестоун\n"YELLOW"6."W" Угольная шахта\n"YELLOW"7."W" Порт ЛС", "Вибрати", "Відміна");
			}
			else {
				ErrorMessage(playerid, "Ви отменили захват");
				DeletePVar(playerid, "bizwar_id");
			}
			return 1;
		}
		case D_BIZWAR_LIST: {
			if(response) {
				new i = GetPVarInt(playerid,"bizwar_id");
				DeletePVar(playerid, "bizwar_id");

				if(BizWarTime[0] > 0 || BizWarTime[1] > 0) return ErrorMessage(playerid, "Война за бізнес уже идет");
				if(BizHourTime > 0) return ErrorMessage(playerid, "Стрелы за бізнес проходят 1 раз в час");
				if(PlayerInfo[playerid][pMember] == gBusiness[i][bizzMafia]) return ErrorMessage(playerid,"Ви не можете захватити собственный бізнес");
				if(!IsPlayerInBandOnline(gBusiness[i][bizzMafia])) return ErrorMessage(playerid, "мафія на яку ви збираєтеся напасти не в мережі / Меньше трёх человек");
				new gang1 = -1;
				switch(PlayerInfo[playerid][pMember]) {
					case fLCN: gang1 = MOROZ_LCN;
					case fYAKUZA: gang1 = MOROZ_YAKUZA;
					case fRM: gang1 = MOROZ_RM;
				}
				if(gang1 != -1) {
					if(fracmoroz[gang1] > unix) return ErrorMessage(playerid, "Ваша мафія не может принимать участия в войнах. (заморожена адміністратором)");
				}
				war_gangzone = listitem;
				biz_war_gangzone = GangZoneCreate(mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3]);
				GangZoneShowForAll(biz_war_gangzone, gFractionSpawn[MZInfo[bFrakVlad]][fracColor]);

				BizWarTime[0] = 60*15;
				MZInfo[bNapad] = PlayerInfo[playerid][pMember];
				MZInfo[bFrakVlad] = gBusiness[i][bizzMafia];
				MZInfo[bBiz] = i;
				MZInfo[bCountDead][MZInfo[bNapad]] = 0;
				MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;

				GangZoneFlashForAll(biz_war_gangzone, gFractionSpawn[MZInfo[bNapad]][fracColor]);

				new strela[32];
				switch(war_gangzone) {
					case 0: strela = "Метеостанция";
					case 1: strela = "Деревня СВ-ВВС";
					case 2: strela = "Каменная деревня";
					case 3: strela = "Порт СФ";
					case 4: strela = "Вестоун";
					case 5: strela = "Угольная шахта";
					case 6: strela = "Порт ЛС";
				}
				new string[186];
				format(string,sizeof(string), "%s забила стрілу вашій мафії за бізнес %s. Місце зустрічі: %s", GetMN(PlayerInfo[playerid][pMember]),gBusiness[i][bizzName],strela);
				SendFamilyMessage(gBusiness[i][bizzMafia],0xFF0000FF,string);
				SendFamilyMessage(gBusiness[i][bizzMafia],0xFF0000FF,"Зустріч відбудеться через 15 хвилин");
				format(string,sizeof(string),"Почав захват бізнеса: %s",player_name[playerid]);
				SendFamilyMessage(gBusiness[i][bizzMafia],-1,string);

				format(string,sizeof(string), "Ваша мафія забила стрелу %s за бізнес %s. Місце зустрічі: %s", GetMN(gBusiness[i][bizzMafia]),gBusiness[i][bizzName],strela);
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xFF0000FF,string);
				SendFamilyMessage(PlayerInfo[playerid][pMember],0xFF0000FF,"Зустріч відбудеться через 15 хвилин");
				format(string,sizeof(string),"Почала захват бізнеса: %s",player_name[playerid]);
				SendFamilyMessage(PlayerInfo[playerid][pMember],-1,string);
			}
			else {
				ErrorMessage(playerid, "Ви відмінити захват");
				DeletePVar(playerid, "bizwar_id");
			}
			return 1;
		}
		case D_ANIM: {
			if(!response) return 1;
			switch(listitem) {
				case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
				case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
				case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
				case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
				case 4: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
				case 5: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
				case 6: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
				case 7: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
				case 8: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
				case 9: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
				case 10: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
				case 11: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
				case 12: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
				case 13: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
				case 14: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
				case 15: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
				case 16: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
				case 17: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
				case 18: GoAnim(playerid,"PED","handsup",4.1,1,0,0,0,0,0);
				case 19: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
				case 20: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
				case 21: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
				case 22: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
				case 23: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
				case 24: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
				case 25: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
				case 26: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
				case 27: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
				case 28: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
				case 29: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
				case 30: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
				case 31: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
				case 32: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
				case 33: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
				case 34: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
				case 35: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
				case 36: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
				case 37: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
				case 38: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
				case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
				case 40: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
				case 41: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
				case 42: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
				case 43: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
				case 44: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
				case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
				case 46: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
				case 47: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
				case 48: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
				case 49: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
				case 50: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
				case 51: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
				case 52: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
				case 53: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
				case 54: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
				case 55: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
				case 56: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
				case 57: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
				case 58: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
				case 59: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
				case 60: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
				case 61: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
				case 62: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
				case 63: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
			}
			SetPVarInt(playerid,"Animation", 2);
			TextDrawShowForPlayer(playerid, AnimDraw);
			return 1;
		}
		case D_TAKE: {
			if(!response) return DeletePVar(playerid,"takelic");
			new acter = GetPVarInt(playerid,"takelic");
			if(!IsPlayerStream(10.0, playerid, acter)) return ErrorMessage(playerid, "Гравець не рядом с Вами");
			if(listitem < 4) {
				if(!lic[acter][listitem]) return ErrorMessage(playerid,"У гравця нет этой ліцензії");
			}
			new string[156];
			if(listitem >= 4) {
				switch(listitem) {
					case 4: {
						if(!PlayerInfo[acter][pDrugs]) return ErrorMessage(playerid,"У гравця нет наркотиків");
						format(string, sizeof(string), "Ви изъяли у "YELLOW"%s{f6f6d9} наркотики", player_name[acter]);
						SendUse(playerid, string);
						format(string, sizeof(string), "Сотрудник "YELLOW"%s{f6f6d9} изъял у Вас наркотики", player_name[playerid]);
						SendUse(acter, string);
						format(string, sizeof(string), "изъял(а) наркотики у %s", player_name[acter]);
						MeAction(playerid,string);

						PlayerInfo[acter][pDrugs] = 0;
						UpdatePlayerData(playerid,"pDrugs",0);
					}
					case 5: {
						if(!PlayerInfo[acter][pMats]) return ErrorMessage(playerid,"У гравця нет боєприпасів");
						format(string, sizeof(string), "Ви изъяли у "YELLOW"%s{f6f6d9} боєприпаси", player_name[acter]);
						SendUse(playerid, string);
						format(string, sizeof(string), "Сотрудник "YELLOW"%s{f6f6d9} изъял у Вас боєприпаси", player_name[playerid]);
						SendUse(acter, string);
						format(string, sizeof(string), "изъял(а) боєприпаси у %s", player_name[acter]);
						MeAction(playerid,string);
						PlayerInfo[acter][pMats] = 0;
						UpdatePlayerData(playerid,"pMats",0);
					}
				}
				DeletePVar(playerid,"takelic");
				return 1;
			}
			new lics[28];
			switch(listitem) {
				case 0: lics = "водительские права";
				case 1: lics = "пилота";
				case 2: lics = "водного транспорта";
				case 3: lics = "на зброю";
			}
			format(string, sizeof(string), "Ви изъяли у "YELLOW"%s{f6f6d9} лицензию %s", player_name[acter],lics);
			SendUse(playerid, string);
			format(string, sizeof(string), "Сотрудник "YELLOW"%s{f6f6d9} изъял у Вас лицензию %s", player_name[playerid],lics);
			SendUse(acter, string);
			format(string, sizeof(string), "изъял(а) лицензию %s у %s",lics, player_name[acter]);
			MeAction(playerid,string);
			lic[acter][listitem]=0;
			UpdateLicenses(acter);
			DeletePVar(playerid,"takelic");
			return 1;
		}
		case D_ATM: {
			if(!response) return 1;
			new atm = GetNearestATM(playerid),percent;
			switch(ATMData[atm][atm_Bank]) {
				case 7: percent = FuncBizz[8][funcbPercent3];
				case 8: percent = FuncBizz[9][funcbPercent3];
				case 9: percent = FuncBizz[10][funcbPercent3];
				default:  percent = 1;
			}
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"На вашому основному банківському рахунку доступно: "ORANGE"$%d\n\n"W"введіть суму, яку хочете зняти з основного банківського рахунку:\nПримітка: комісія за використанням банкомата "YELLOW"%d%";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PlayerInfo[playerid][pBank],percent);
					D(playerid,D_ATM_INPUT,DSI, ""YELLOW"Зняти гроші",string,"Зняти","Відміна");
				}
				case 1: {
					static const f_str[] = ""W"На вашому рахунку доступно: "ORANGE"$%d\n\n"W"Введіть суму, яку хочете покласти на основни банківський рахунок:\nПримітка: комісія за використанням банкомата "YELLOW"%d%";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PlayerInfo[playerid][pCash],percent);
					D(playerid,D_ATM_PUT,DSI, ""YELLOW"Покласти гроші",string,"Покласти","Відміна");
				}
				case 2: {
					if(!PlayerInfo[playerid][pPhone]) return ErrorMessage(playerid,"У вас немає мобильного телефона");
					static const f_str[] = "\
"W"Доступно коштів готівкою: "ORANGE"$%d\n\
"W"На Вашем мобильном рахунку доступно: "ORANGE"$%d\n\n\
"W"Введіть сумму, которую хочете покласти на мобильный рахунок:\n\
Примітка: комісія за використанням банкомата "YELLOW"%d%";
					new string[sizeof(f_str) +1 + (-2 + 11)];
					format(string,sizeof(string),f_str,PlayerInfo[playerid][pCash],PlayerInfo[playerid][pMobile],percent);
					D(playerid,D_ATM_PHONE,DSI, ""YELLOW"Оплата мобильного",string,"Зняти","Відміна");
				}
			}
		}
		case D_ATM_INPUT: {
			if(!response) return ShowATMMenu(playerid);
			new amount = strval(inputtext);
			new atm = GetNearestATM(playerid),percent;
			switch(ATMData[atm][atm_Bank]) {
				case 7: percent = FuncBizz[8][funcbPercent3];
				case 8: percent = FuncBizz[9][funcbPercent3];
				case 9: percent = FuncBizz[10][funcbPercent3];
				default:  percent = 1;
			}
			new plata = floatround((amount/100*percent)+amount);
			if(amount < 1 || amount > vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"введіть суму, яку хочете зняти з основного банківського рахунку:\n\n"NO"*{f6f6d9} От $1 до $%d\n\n",vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_ATM_INPUT,DSI, ""YELLOW"Видача готівки",string,"Зняти","Назад");
				return 1;
			}
			if(PlayerInfo[playerid][pBank] < plata) return D(playerid,D_ATM_INPUT,DSI, ""YELLOW"Видача готівки",""W"введіть суму, яку хочете зняти з основного банківського рахунку:\n\n"NO"*{f6f6d9} Недостаточно коштів","Зняти","Назад");
			PlayerInfo[playerid][pBank] -= plata;
			UpdatePlayerData(playerid,"pBank",PlayerInfo[playerid][pBank]);
			GiveMoney(playerid, amount,"зняття з банківського рахунку");

			bizz_pay(ATMData[atm][atm_Bank],floatround(plata-amount));

			static const f_str[] = "\
"W"Снято коштів:\t\t"ORANGE"$%d"W" (Комісія: "YELLOW"%d)\n\
"W"Баланс:\t\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,plata-amount,PlayerInfo[playerid][pBank]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Видача готівки",string,"Закрити","");
		}
		case D_ATM_PUT: {
			if(!response) return ShowATMMenu(playerid);
			new atm = GetNearestATM(playerid),percent;
			switch(ATMData[atm][atm_Bank]) {
				case 7: percent = FuncBizz[8][funcbPercent3];
				case 8: percent = FuncBizz[9][funcbPercent3];
				case 9: percent = FuncBizz[10][funcbPercent3];
				default:  percent = 1;
			}
			new amount = strval(inputtext);
			new plata = floatround((amount/100*percent)+amount);
			if(amount < 1 || amount > vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]) {
				new string[144];
				format(string,sizeof(string),"\n\n"W"Введіть суму яку бажаєте покласти на основной банковский рахунок:\n\n"NO"*{f6f6d9} От $1 до $%d\n\n",vip_status[PlayerInfo[playerid][pVips]][vip_transfer_bank]);
				D(playerid,D_ATM_PUT,DSI, ""YELLOW"Поповнення рахунку",string,"Покласти","Назад");
				return 1;
			}
			if(PlayerInfo[playerid][pCash] < plata) return D(playerid,D_ATM_PUT,DSI, ""YELLOW"Поповнення рахунку",""W"Введіть суму яку бажаєте покласти на основной банковский рахунок:\n\n"NO"*{f6f6d9} Недостаточно коштів","Покласти","Назад");
			PlayerInfo[playerid][pBank] += amount;
			UpdatePlayerData(playerid,"pBank",PlayerInfo[playerid][pBank]);
			GiveMoney(playerid, -plata,"Поповнення банк рахунку");

			bizz_pay(ATMData[atm][atm_Bank],floatround(plata-amount));

			static const f_str[] = "\
"W"Внесено коштів:\t\t"ORANGE"$%d"W" (Комісія: "YELLOW"%d)\n\
"W"Баланс:\t\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,plata-amount,PlayerInfo[playerid][pBank]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Поповнення рахунку",string,"Закрити","");
		}
		case D_ATM_PHONE: {
			if(!response) return ShowATMMenu(playerid);
			new atm = GetNearestATM(playerid),percent;
			switch(ATMData[atm][atm_Bank]) {
				case 7: percent = FuncBizz[8][funcbPercent3];
				case 8: percent = FuncBizz[9][funcbPercent3];
				case 9: percent = FuncBizz[10][funcbPercent3];
				default:  percent = 1;
			}
			new amount = strval(inputtext);
			new plata = floatround((amount/100*percent)+amount);
			if(amount < 1 || amount > 10000) return D(playerid,D_ATM_PHONE,DSI, ""YELLOW"Оплата мобильного рахунку",""W"Введіть суму яку бажаєте покласти:\n\n"NO"*{f6f6d9} От $1 до $10.000","Покласти","Назад");
			if(GetPlayerMoneyEx(playerid) < plata) return D(playerid,D_ATM_PHONE,DSI, ""YELLOW"Оплата мобильного рахунку",""W"Введіть суму яку бажаєте покласти:\n\n"NO"*{f6f6d9} Недостаточно коштів","Покласти","Назад");
			GiveMoney(playerid,-amount,"Поповнення моб.телефона");
			PlayerInfo[playerid][pMobile] += amount;

			bizz_pay(ATMData[atm][atm_Bank],floatround(plata-amount));

			static const f_str[] = "\
"W"Внесено коштів:\t\t"ORANGE"$%d"W" (Комісія: "YELLOW"%d)\n\
"W"На мобільному рахунку:\t\t"ORANGE"$%d\n";
			new string[sizeof(f_str) +1 + (-2 + 11) + (-2 + 11)];
			format(string,sizeof(string),f_str,amount,plata-amount,PlayerInfo[playerid][pMobile]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Оплата мобильного рахунку",string,"Закрити","");
		}
		case D_TICKET: {
	        if(!response) return 1;
	        switch(listitem) {
	            case 0: {
					new price;
					for(new i = 0; i < TOTALTICKETS[playerid]; i++) price += TL[playerid][i][tPrice];
					static const f_str[] = ""W"Ви собираетесь оплатить "YELLOW"%i"W" штрафов на сумму: "GREEN"$%i\n"W"Ви дійсно хочете произвести оплату?";
					new string[sizeof(f_str) +1 + (-2 + 5)];
					format(string,sizeof(string),f_str,TOTALTICKETS[playerid],price);
				 	D(playerid,D_TICKET_1,DSM, ""YELLOW"Оплата штрафа",string,"Оплатить","Назад");
				}
				default: SetPVarInt(playerid,"ticket",listitem), D(playerid,D_TICKET_2,DSL,""YELLOW"Штрафы",""GREEN"1."W" Оплатить штраф\n"GREEN"2."W" Інформація о штрафе","Далі","Назад");
			}
		}
		case D_TICKET_1: {
		    if(!response) return GetTickets(playerid);
		    new price;
			for(new i = 0; i < TOTALTICKETS[playerid]; i++) price += TL[playerid][i][tPrice];
			if(PlayerInfo[playerid][pBank] < price) return ErrorMessage(playerid,"На основном банковском рахунку недостаточно коштів"), GetTickets(playerid);
			PlayerInfo[playerid][pBank] -= price;
			UpdatePlayerData(playerid,"pBank",PlayerInfo[playerid][pBank]);
			new query[128];
			for(new i = 0; i < TOTALTICKETS[playerid]; i++) {
			    format(query,sizeof(query), "DELETE FROM `"TABLE_TICKETS"` WHERE `id` = '%i'",TL[playerid][i][tID]);
    			mysql_tquery(connects,query,"","");
			}
			static const f_str[] = "Ви оплатили "YELLOW"%i{f6f6d9} штрафов на сумму "ORANGE"$%i";
			new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 8)];
		 	format(string,sizeof(string),f_str, TOTALTICKETS[playerid],price);
			SendUse(playerid,string);
			return 1;
		}
		case D_TICKET_2: {
		    if(!response) return GetTickets(playerid);
		    new i = GetPVarInt(playerid,"ticket")-1;
		    switch(listitem) {
		        case 0: {
		            if(PlayerInfo[playerid][pBank] < TL[playerid][i][tPrice]) return ErrorMessage(playerid,"На основном банковском рахунку недостаточно коштів"), GetTickets(playerid);
		            PlayerInfo[playerid][pBank] -= TL[playerid][i][tPrice];
					UpdatePlayerData(playerid,"pBank",PlayerInfo[playerid][pBank]);
					new query[128];
		            format(query,sizeof(query), "DELETE FROM `"TABLE_TICKETS"` WHERE `id` = '%i'",TL[playerid][i][tID]);
 					mysql_tquery(connects,query,"","");
					static const f_str[] = "Ви оплатили штраф: "W"№%i";
					new string[sizeof(f_str) +1 + (-2 + 7)];
		 			format(string,sizeof(string),f_str, i+1);
					SendOk(playerid,string);
		 			return GetTickets(playerid);
				}
				case 1: {
					static const f_str[] = "\
"W"Штраф №%i\n\n\
Причина: "NO"%s\n\
"W"Сумма штрафа: {FACC2E}%i вирт\n\
"W"Кем был выдан: {1DADF0}%s\n\
"W"Дата выдачи: {04B404}%s";
					new string[sizeof(f_str) +1 + (-2 + 64) + (-2 + 7) + (-2 + MAX_PLAYER_NAME) + (-2 + 32)];
				    format(string,sizeof(string),f_str,i+1,TL[playerid][i][tReason],TL[playerid][i][tPrice],
										TL[playerid][i][tName],TL[playerid][i][tDate]);
					return D(playerid,D_TICKET_3,DSM, ""YELLOW"Інформація",string,"Назад","");
				}
			}
			return true;
		}
		case D_TICKET_3: return GetTickets(playerid);
		case D_SHOWALL: {
			if(!response) return 1;
			new query[200];
			format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i' ORDER BY `pRank` LIMIT %d, 20", PlayerInfo[playerid][pMember],(SALLROWS[playerid] * 20));
			mysql_pquery(connects, query, "showall_callback", "i", playerid);
			return 1;
		}
		case D_TIPSTER: {
			new veh = GetPVarInt(playerid,"veh");
			if(!response) {
				GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
				DeletePVar(playerid,"veh");
				return 1;
			}
			switch(listitem) {
				case 0: {
					if(GetPVarInt(playerid,"tipster")) {
						ErrorMessage(playerid, "У Вас уже есть жучок");
						GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
						return 1;
					}
					SendUse(playerid, "Ви взяли "YELLOW"1{f6f6d9} жучок. Для использования,введіть: "W"/tipster");
					SetPVarInt(playerid,"tipster", true);
					MeAction(playerid,"взял(а) жучок");
				}
			}
			GetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(veh,engine,lights,alarm,doors,bonnet,false,objective);
			DeletePVar(playerid,"veh");
			return 1;
		}
		case D_FUEL: {
			if(!response) return 1;
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			new modelid = GetVehicleModel(vehicleid) - 400;
			new tank = strval(inputtext);

			if(tank < 1 || tank > 100 || VehicleInfo[vehicleid][vFuel]+tank > gTransport[modelid][trTank]) {
				static const f_str[] = "\n"W"Укажіть на скільки літрів заправити ваше Т/С:\n\nДоступно літрів в баку: {FF9968}%.0f"W"\nВместимость бака: {FF9968}%d"W"\nМожно Заправити на: {FF9968}%.0fл"W"\nВартість 1л: "GREEN"$%d\n";
				new string[sizeof(f_str) +1 + 30];
				format(string, sizeof(string), f_str, VehicleInfo[vehicleid][vFuel],gTransport[modelid][trTank],gTransport[modelid][trTank]-VehicleInfo[vehicleid][vFuel],gBusiness[fuel][bizzPrice]);
				D(playerid,D_FUEL,DSI, ""YELLOW"Заправка",string,"Заправити", "Відміна");
				return 1;
			}
			SetPVarInt(playerid,"tank_fill",tank);
			new number = GetPVarInt(playerid,"tank_fill");
			
			new string[128];
			format(string, sizeof(string), " \n  \n"W"Ви дійсно хочете Заправитися на "CA"%d"W" литров?\nВартість: "GREEN"$%d\n  \n ",
			number,number*gBusiness[fuel][bizzPrice]);
			D(playerid,D_FUEL_2,DSM, ""YELLOW"Заправка",string,"Так", "Ні");
			return 1;
		}
		case D_FUEL_2: {
			if(!response) return DeletePVar(playerid,"tank_fill");
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new price = GetPVarInt(playerid,"tank_fill")*gBusiness[fuel][bizzPrice];
			if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			GiveMoney(playerid,-price,"заправка авто АЗС");
			if(gBusiness[fuel][bizzProduct] - GetPVarInt(playerid,"tank_fill") > 0) {
				gBusiness[fuel][bizzProduct] -= GetPVarInt(playerid,"tank_fill");
				bizz_pay(fuel,price);
			}
			UpdateBusinessText(fuel);
			SetPVarInt(playerid,"tank_vfuel", floatround(VehicleInfo[GetPlayerVehicleID(playerid)][vFuel])); 
			SetTimerEx("FuelCar",500,0,"i",playerid);
			TogglePlayerControllable(playerid,false);
		}
		case D_BUY_FUEL: {
			if(!response) return 1;
			new fuel = GetNearestTrunckFuel(playerid);
			if(fuel==-1) return 1;
			new price = 10*gBusiness[fuel][bizzPrice];
			if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			if(gBusiness[fuel][bizzProduct] - 10 > 0) {
				gBusiness[fuel][bizzProduct] -= 10;
				bizz_pay(fuel,price);
			}
			GiveMoney(playerid,-price,"покупка канистры");
			UpdateBusinessText(fuel);
			PlayerInfo[playerid][pFuel] ++;
			UpdatePlayerData(playerid,"pFuel",PlayerInfo[playerid][pFuel]);
			SendOk(playerid,"Ви купили канистру с бензином. Для заправки Т/С, введіть: "W"/fillcar");
		}
		case D_CHANGECAR: {
			new id_pokupaet = GetPVarInt(playerid,"carPokupaet")-1;
			if(!response) {
				DeletePVar(id_pokupaet,"carProdaet");
				DeletePVar(id_pokupaet,"carCena");

				DeletePVar(playerid,"carPokupaet");
				DeletePVar(playerid,"numbercar1");
				DeletePVar(playerid,"numbercar2");
				DeletePVar(playerid,"sellcar_type");
				return 1;
			}
			new string[350];
			format(string, sizeof(string), ""YELLOW"%s{f6f6d9} предложил(а) обмен "W"[%s] на [%s]{f6f6d9}. Доплата: "ORANGE"$%i",player_name[playerid],gTransport[gPlayerCars[playerid][carModel][GetPVarInt(playerid,"numbercar1")-1]-400][trName],gTransport[gPlayerCars[id_pokupaet][carModel][GetPVarInt(playerid,"numbercar2")-1]-400][trName], GetPVarInt(id_pokupaet,"carCena"));
			SendUse(id_pokupaet, string);
			SendClientMessage(id_pokupaet,COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
			format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}обмен "W"[%s] на [%s]{f6f6d9}. Доплата: "ORANGE"$%i",player_name[id_pokupaet],gTransport[gPlayerCars[playerid][carModel][GetPVarInt(playerid,"numbercar1")-1]-400][trName],gTransport[gPlayerCars[id_pokupaet][carModel][GetPVarInt(playerid,"numbercar2")-1]-400][trName], GetPVarInt(id_pokupaet,"carCena"));
			SendUse(playerid, string);
			DeletePVar(playerid,"sellcar_type");
			SetPVarInt(id_pokupaet,"sellcar_type",1);
		}
		case D_CAR_BUY: {
			if(!response) {
				if(GetPVarInt(playerid,"carProdaet")) {
					new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
					SendOk(playerid,"Ви отказались от предложения на обмен транспортом");
					SendOk(id_prodaet,"Гравець отказался от предложения на обмен транспортом");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
			}
			new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
			new id_pokupaet = GetPVarInt(id_prodaet,"carPokupaet")-1;
			new car_cena = GetPVarInt(playerid,"carCena");
			new number_car1 = GetPVarInt(id_prodaet,"numbercar1")-1;
			new number_car2 = GetPVarInt(id_prodaet,"numbercar2")-1;
			if(!response) return change_carcancel(playerid,id_prodaet);
			if(id_pokupaet == playerid) {
				if(PlayerInfo[playerid][pCash] < car_cena) {
					ErrorMessage(playerid,"У Вас не достаточно грошей готівкою");
					SendOk(id_prodaet,"У покупця недостаточно грошей готівкою");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(!PlayerInfo[id_prodaet][pHouse] && !PlayerInfo[id_prodaet][pRoom]) {
					ErrorMessage(id_prodaet,"У вас немає будинку/номера в готелі");
					SendOk(playerid,"У продавца обмен нет будинку/номера в отеле");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) {
					ErrorMessage(playerid,"У вас немає будинку/номера в готелі");
					SendOk(id_prodaet,"У покупця нет будинку/номера в отеле");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(house_car[playerid][0] == INVALID_VEHICLE_ID && house_car[playerid][1] == INVALID_VEHICLE_ID) {
					ErrorMessage(playerid,"Ваш автомобіль не создан/не на парковочном месте");
					SendOk(id_prodaet,"У покупця автомобіль не создан/не на парковочном месте");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				if(house_car[id_prodaet][0] == INVALID_VEHICLE_ID && house_car[id_prodaet][1] == INVALID_VEHICLE_ID) {
					ErrorMessage(id_prodaet,"Ваш автомобіль не создан/не на парковочном месте");
					SendOk(playerid,"У продавца автомобіль не создан/не на парковочном месте");
					change_carcancel(playerid,id_prodaet);
					return 1;
				}
				GiveMoney(playerid, -car_cena,"Покупка авто");
				GiveMoney(id_prodaet, car_cena,"Продажа авто");

				new string[156];
				format(string,sizeof(string),"Ви обменялись Т/С с "YELLOW"%s{f6f6d9}. Ваша доплата "ORANGE"$%i",player_name[id_prodaet],car_cena);
				SendUse(playerid,string);
				format(string,sizeof(string),"Ви обменялись Т/С с "YELLOW"%s{f6f6d9}. Доплата с его стороны: "ORANGE"$%i",player_name[playerid],car_cena);
				SendUse(id_prodaet,string);
				
				SetPVarInt(id_prodaet,"car",gPlayerCars[playerid][carID][number_car2]);
				gPlayerCars[playerid][carID][number_car2] = gPlayerCars[id_prodaet][carID][number_car1];
				gPlayerCars[id_prodaet][carID][number_car1] = GetPVarInt(id_prodaet,"car");
				DeletePVar(id_prodaet,"car");

				if(house_car[id_prodaet][0] != INVALID_VEHICLE_ID) {
					save_perf(id_prodaet,0);
					A_DestroyVehicle(house_car[id_prodaet][0]);
					house_car[id_prodaet][0] = INVALID_VEHICLE_ID;
				}
				if(house_car[id_prodaet][1] != INVALID_VEHICLE_ID) {
					save_perf(id_prodaet,1);
					A_DestroyVehicle(house_car[id_prodaet][1]);
					house_car[id_prodaet][1] = INVALID_VEHICLE_ID;
				}

				if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
					save_perf(playerid,0);
					A_DestroyVehicle(house_car[playerid][0]);
					house_car[playerid][0] = INVALID_VEHICLE_ID;
				}
				if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
					save_perf(playerid,1);
					A_DestroyVehicle(house_car[playerid][1]);
					house_car[playerid][1] = INVALID_VEHICLE_ID;
				}
				save_car(id_prodaet,0);
				save_car(id_prodaet,1);
				save_car(playerid,0);
				save_car(playerid,1);

				new query_str[128];
				format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[playerid]);
				mysql_tquery(connects,query_str,"load_cars","i",playerid);

				format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[id_prodaet]);
				mysql_tquery(connects,query_str,"load_cars","i",id_prodaet);

				change_carcancel(playerid,id_prodaet);
				return 1;
			}
			else {
				ErrorMessage(playerid,"Гравець оффлайн");
				DeletePVar(playerid,"carProdaet");
				DeletePVar(playerid,"carCena");
				DeletePVar(playerid,"sellcar_type");
			}
		}
		case D_SET_BET: {
			if(!response) return true;
			new s = Casino_Flag[playerid][select_casino_table];
			if(s==-1) return 1;
			if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"В данный момент идёт игра");
			if(InfoDice[s][dice_bank] != 0) return ErrorMessage(playerid,"Кто то из гравців уже поставил ставку");
			new stavka;
			if(sscanf(inputtext,"i",stavka)) return D(playerid, D_SET_BET, DSI, ""YELLOW"Ставка", ""W"Введіть сумму ставки!\nСтавка повинна бути не менее "ORANGE"$"#MIN_STAVKA"\n"W"и не более "ORANGE"$"#MAX_STAVKA"", "Далі", "Відміна");
			if(stavka < MIN_STAVKA || stavka > MAX_STAVKA) return ErrorMessage(playerid,"Неверная ставка"),D(playerid, D_SET_BET, DSI, ""YELLOW"Ставка", ""W"Введіть сумму ставки!\nСтавка повинна бути не менее "ORANGE"$"#MIN_STAVKA"\n"W"и не более "ORANGE"$"#MAX_STAVKA"", "Далі", "Відміна");
			if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"Ви не можете изменить ставку в процессе ігри");
			InfoDice[s][dice_stavka] = stavka;
			SendOk(playerid,"Ставка успішно встановлена");
			UpdateTextCasino(s);
			new string_set_bet[180];
			format(string_set_bet, 179, ""YELLOW"%s {f6f6d9}установил ставку "ORANGE"$%d {f6f6d9}Натисніть "W"SET BET {f6f6d9}щоб её поддержать", player_name[playerid], stavka);
			for(new p = 0; p < 5; p++) {
				if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
				SendUse(InfoDice[s][dice_gamer][p],string_set_bet);
			}
			if(InfoDice[s][dice_crup]!=INVALID_PLAYER_ID) SendUse(InfoDice[s][dice_crup],string_set_bet);
		}
		case D_CHOOSE: {
	        if(!response) return true;
	        if(!strlen(inputtext)) return D(playerid,D_CHOOSE,DSI, ""YELLOW"Скачки","{ffffff}Ви можете поставити деньги на любого коня.\nНапишіть номер коня [1-4] и ставку [50-200] через точку, щоб зробити ставку\nНаприклад: 1.100 [Ви поставите на коня №1 - 100$]","Поставити","Відміна");
			new arrdshu[2][5];
			split(inputtext, arrdshu, '.');
			new horse = strval(arrdshu[0]);
			if(horse < 1 || horse > 4) return D(playerid,D_CHOOSE,DSI, ""YELLOW"Скачки","{ffffff}Ви можете поставити деньги на любого коня.\nНапишіть номер коня [1-4] и ставку [50-200] через точку, щоб зробити ставку\nНаприклад: 1.100 [Ви поставите на коня №1 - 100$]","Поставити","Відміна");
			new cash = strval(arrdshu[1]);
			if(cash < 50 || cash > 200) return D(playerid,D_CHOOSE,DSI, ""YELLOW"Скачки","{ffffff}Ви можете поставити деньги на любого коня.\nНапишіть номер коня [1-4] и ставку [50-200] через точку, щоб зробити ставку\nНаприклад: 1.100 [Ви поставите на коня №1 - 100$]","Поставити","Відміна");
			if(PlayerInfo[playerid][pCash] < cash) return D(playerid,D_CHOOSE,DSI, ""YELLOW"Скачки","{ffffff}Ви можете поставити деньги на любого коня.\nНапишіть номер коня [1-4] и ставку [50-200] через точку, щоб зробити ставку\nНаприклад: 1.100 [Ви поставите на коня №1 - 100$]","Поставити","Відміна");
			if(RaceStarted == 1) return ErrorMessage(playerid, "Скачки уже почалися");
		    SetPVarInt(playerid,"MoneyBet",cash);
			//GivePlayerCash(playerid, -cash,"Ставка");
			SetPVarInt(playerid,"BetOnHorse",horse);
			new string[64];
			format(string, sizeof(string), "Ви поставили "ORANGE"%d$ на лошадь "YELLOW"№%d",cash,horse);
			SendUse(playerid, string);
			return true;
	    }
		case dBizList: {
			if(!response) return 1;
			new fracid = -1;
			new count_business = 1,string[5000];
			switch(PlayerInfo[playerid][pMember]) {
				case fLCN: fracid = 0;
				case fYAKUZA: fracid = 1;
				case fRM: fracid = 2;
			}
			string = "№. Назва + Доход бізнеса за сьогодні\n\n";
			for(new i; i<gBusinessCount; i++) {
				if(gBusiness[i][bizzMafia] != PlayerInfo[playerid][pMember]) continue;
				if(fracid != -1) {
					if(count_business <= 50) {
						count_business++;
						continue;
					}
					format(string, sizeof(string), ""W"%s%i. %s + "GREEN"$%d\n",string, count_business, gBusiness[i][bizzName],gBankMafia[fracid][i]);
				}
			}
			D(playerid, DIALOG_NONE, DSM, ""YELLOW"Бізнеси мафии", string, "Закрити", "");
			return 1;
		}
		case D_LMENU: {
			if(!response) return 1;
			switch(listitem) {
				case 0..2: dialog_lmenu(playerid,listitem);
				case 3..7: dialog_lmenu(playerid,listitem+1);
			}
		}
		case D_LMENU_2: {
			if(!response) return 1;
			dialog_lmenu(playerid,listitem);
		}
		case D_GANGTOP: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new gz_total[5];
					for(new i = 0; i < TOTALGZ; i++) {
						if(GZInfo[i][gFrakVlad] == fBALLAS) gz_total[0]++;
						if(GZInfo[i][gFrakVlad] == fVAGOS) gz_total[1]++;
						if(GZInfo[i][gFrakVlad] == fGROVE) gz_total[2]++;
						if(GZInfo[i][gFrakVlad] == fAZTEC) gz_total[3]++;
						if(GZInfo[i][gFrakVlad] == fRIFA) gz_total[4]++;
					}
					static const f_str[] = "\
{8813E7}Ballas"W"\t{8813E7}%d/125"W"\n\
{DBD604}Vagos"W"\t{DBD604}%d/125"W"\n\
{009F00}Grove"W"\t{009F00}%d/125"W"\n\
{01FCFF}Aztecas"W"\t{01FCFF}%d/125"W"\n\
{83BFBF}Rifa"W"\t{83BFBF}%d/125"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,gz_total[0],gz_total[1],gz_total[2],gz_total[3],gz_total[4]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""YELLOW"Территории",string, "Закрити", "");
				}
				case 1: {
					new graff[5];
					for(new i; i<CountGraffity; i++) {
						if(GrafInfo[i][gFrak] == fBALLAS) graff[0]++;
						if(GrafInfo[i][gFrak] == fVAGOS) graff[1]++;
						if(GrafInfo[i][gFrak] == fGROVE) graff[2]++;
						if(GrafInfo[i][gFrak] == fAZTEC) graff[3]++;
						if(GrafInfo[i][gFrak] == fRIFA) graff[4]++;
					}
					static const f_str[] = "\
{8813E7}Ballas"W"\t{8813E7}%d/120"W"\n\
{DBD604}Vagos"W"\t{DBD604}%d/120"W"\n\
{009F00}Grove"W"\t{009F00}%d/120"W"\n\
{01FCFF}Aztecas"W"\t{01FCFF}%d/120"W"\n\
{83BFBF}Rifa"W"\t{83BFBF}%d/120"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,graff[0],graff[1],graff[2],graff[3],graff[4]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""YELLOW"Граффити",string, "Закрити", "");
				}
				case 2: {
					static const f_str[] = "\
{8813E7}Ballas"W"\t{8813E7}%d"W"\n\
{DBD604}Vagos"W"\t{DBD604}%d"W"\n\
{009F00}Grove"W"\t{009F00}%d"W"\n\
{01FCFF}Aztecas"W"\t{01FCFF}%d"W"\n\
{83BFBF}Rifa"W"\t{83BFBF}%d"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,FI[fBALLAS][fRating],FI[fVAGOS][fRating],FI[fGROVE][fRating],FI[fAZTEC][fRating],FI[fRIFA][fRating]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""YELLOW"Рейтинг",string, "Закрити", "");
				}
				case 3: {
					static const f_str[] = "\
{8813E7}Ballas"W"\t{8813E7}%d"W"\n\
{DBD604}Vagos"W"\t{DBD604}%d"W"\n\
{009F00}Grove"W"\t{009F00}%d"W"\n\
{01FCFF}Aztecas"W"\t{01FCFF}%d"W"\n\
{83BFBF}Rifa"W"\t{83BFBF}%d"W"";
					new string[sizeof(f_str) + 40];
					format(string,sizeof(string),f_str,FI[fBALLAS][fPoints],FI[fVAGOS][fPoints],FI[fGROVE][fPoints],FI[fAZTEC][fPoints],FI[fRIFA][fPoints]);
					D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""YELLOW"G-POINTS",string, "Закрити", "");
				}
			}
		}
		case D_GANG_POINT: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[1512],str[128],idx = 1;
					new year, month, day, hour, minute, second;
					strcat(string,"№\tАвтомобіль\tЗакінчення оренди\n");
					for(new i; i < 50; i ++) {
						if(FracVehicle[i][fvehFrac] != GetTeamID(playerid)) continue;
						if(FracVehicle[i][fvehTime] > unix) {
							timestamp_to_date(FracVehicle[i][fvehTime]-unix, year, month, day, hour, minute, second);
							format(str, sizeof(str), "%d\t%s\t%d д. %d ч. %d м.\n", idx,gTransport[FracVehicle[i][fvehModelNew]-400][trName],day-1, hour, minute),strcat(string,str);
						}
						else format(str, sizeof(str), "%d\t%s\t-\n", idx,gTransport[FracVehicle[i][fvehModel]-400][trName]),strcat(string,str);
						idx++;
					}
					D(playerid, D_GANG_POINT_CAR, DSTH, "Керування автомобілями", string, "Вибрати", "Відміна");
				}
			}
		}
		case D_GANG_POINT_CAR: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pLeader]) return 1;
			SetPVarInt(playerid,"func_car_gang",listitem);
			new string[328],str[128];
			strcat(string,"№. Модель\tАренда\tВартість\n");
			for(new i; i < sizeof(gang_car); i ++) {
				format(str, sizeof(str), ""ORANGE"%d."W" %s\t30 днів\t%d\n", i+1,gTransport[gang_car[i][0]-400][trName],gang_car[i][1]),strcat(string,str);
			}
			D(playerid,D_GANG_POINT_CAR_2,DSTH,"Покупка машини",string,"Купити","Відміна");
		}
		case D_GANG_POINT_CAR_2: {
			if(!response) return DeletePVar(playerid,"func_car_gang");
			if(!PlayerInfo[playerid][pLeader]) return 1;
			SetPVarInt(playerid,"func_car_gang_2",listitem);
			new id_car = GetPVarInt(playerid,"func_car_gang_2");
			static const f_str[] = ""W"Ви собираетесь приобрести автомобіль "YELLOW"%s\n\n"YELLOW"Ви дійсно хочете Купити данный автомобіль за "GREEN"%d G-POINTS?";
			new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
			format(string,sizeof(string),f_str,gTransport[gang_car[id_car][0]-400][trName],gang_car[id_car][1]);
			D(playerid,D_GANG_POINT_CAR_3,DSM, ""YELLOW"Покупка машини",string,"Так","Відміна");
		}
		case D_GANG_POINT_CAR_3: {
			if(!response) return DeletePVar(playerid,"func_car_gang"),DeletePVar(playerid,"func_car_gang_2");
			if(!PlayerInfo[playerid][pLeader]) return 1;
			new id_slot = GetPVarInt(playerid,"func_car_gang");
			new id_car = GetPVarInt(playerid,"func_car_gang_2");
			DeletePVar(playerid,"func_car_gang");
			DeletePVar(playerid,"func_car_gang_2");
			new slot;
			switch(GetTeamID(playerid)) {
				case fBALLAS: slot = 0;
				case fVAGOS: slot = 9;
				case fGROVE: slot = 19;
				case fAZTEC: slot = 29;
				case fRIFA: slot = 39;
			}
			if(FracVehicle[slot+id_slot][fvehModel] == 482) return ErrorMessage(playerid,"Запрещено продавать фуру для погрузки/разгрузки боєприпасів");
			if(FracVehicle[slot+id_slot][fvehModel] == 481) {
				if(gang_car[id_car][0] != 461) return ErrorMessage(playerid,"На данный слот можно Купити только мотоцикл");
			}
			if(FI[GetTeamID(playerid)][fPoints] < gang_car[id_car][1]) return ErrorMessage(playerid,"У вашої банди недостатньо G-POINTS для оренди Т/С");
			FracVehicle[slot+id_slot][fvehModelNew] = gang_car[id_car][0];
			FracVehicle[slot+id_slot][fvehTime] = unix + 30*86400;
			FI[GetTeamID(playerid)][fPoints] -= gang_car[id_car][0];
			UpdateFraction(GetTeamID(playerid),"fPoints",FI[GetTeamID(playerid)][fPoints]);
			SendOk(playerid,"Автомобіль успішно арендован на 30 днів");
			save_fracveh(slot+id_slot);
		}
		case D_DIPLOMATION: {
			if (!response) {
				for (new i = 0 ; i < 7; i ++) {
					new pvar_string[8];
					format(pvar_string, 8, "d_%d",i);
					DeletePVar(playerid, pvar_string);
				}
				return 1;
			}
			new header_string[64]; 
			format(header_string, 8, "d_%d", listitem);
			new fr_id = GetPVarInt(playerid, header_string);
			SetPVarInt ( playerid, "d_listitem", listitem ) ;

			header_string[0] = EOS;
			strcat(header_string, "{");
			strcat(header_string, GetColorFrac(fr_id));
			strcat(header_string, "}");
			strcat(header_string, FI[fr_id][fName]);
			D(playerid, D_DIPLOMATION_2, DSL, header_string, ""YELLOW"1."W" Нейтралитет\n"YELLOW"2."W" Война\n"YELLOW"3."W" Союз", "Вибрати", "Закрити" ) ;
		}
		case D_DIPLOMATION_2: {
			if(zahvat == true) return ErrorMessage(playerid,"Запрещено изменять дипломатию во время захвата территории");
			if(!response) return dialog_diplom(playerid,true);
			new pvar_string[8]; 
			format(pvar_string, 8, "d_%d", GetPVarInt(playerid, "d_listitem"));
			DeletePVar(playerid, "d_listitem");
			new fr_id = GetPVarInt(playerid, pvar_string);
			if(listitem == 2) {
				if (f_diplomacy[PlayerInfo[playerid][pMember] - 15][fr_id - 15] == dip_status_alliance_get_invite) {
					f_diplomacy[PlayerInfo[playerid][pMember] - 15][fr_id - 15] = dip_status_alliance;
					f_diplomacy[fr_id - 15][PlayerInfo[playerid][pMember] - 15] = dip_status_alliance;
						
					dialog_diplom(playerid,true);
					save_diplomation(playerid,PlayerInfo[playerid][pMember]);
					save_diplomation(playerid,fr_id);
					return 1;
				}
				f_diplomacy[PlayerInfo[playerid][pMember] - 15][fr_id - 15] = dip_status_alliance_invite;
				f_diplomacy[fr_id - 15][PlayerInfo[playerid][pMember] - 15] = dip_status_alliance_get_invite;
					
				dialog_diplom(playerid,true);
				save_diplomation(playerid,PlayerInfo[playerid][pMember]);
				save_diplomation(playerid,fr_id);
				return 1 ;
			}
			f_diplomacy[PlayerInfo[playerid][pMember] - 15][fr_id - 15] = listitem;
			f_diplomacy[fr_id - 15][PlayerInfo[playerid][pMember] - 15] = listitem;
	
			dialog_diplom(playerid,true);
			save_diplomation(playerid,PlayerInfo[playerid][pMember]);
			save_diplomation(playerid,fr_id);
		}
		case D_LMENU_BANK: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Стан рахунку: "ORANGE"$%d\n"YELLOW"1."W" Зняти гроші";
					new string[sizeof(f_str) +1 + (-2 + 10)];
					format(string,sizeof(string),f_str,FI[PlayerInfo[playerid][pMember]][fBank]);
					D(playerid,D_LMENU_BANK,DSL,""YELLOW"Керування банком фракції",string,"Далі","Назад");
				}
				case 1: D(playerid,D_LMENU_BANK_INPUT,DSI, ""YELLOW"Керування банком фракції","\n\n"W"Введіть сумму, которую хочете взяти с банка фракції:\n\n","Взяти","Відміна");
			}
		}
		case D_LMENU_BANK_INPUT: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Вам недоступна данная функція");
			if(!strlen(inputtext)) return D(playerid,D_LMENU_BANK_INPUT,DSI, ""YELLOW"Керування банком фракції","\n\n"W"Введіть сумму, которую хочете взяти с банка фракції:\n\n","Взяти","Відміна");
			new dengi = strval(inputtext),maxmoney = 0;
			switch(PlayerInfo[playerid][pMember]) {
				case fLSPD,fSFPD,fLVPD,fFBI,fARMYSF,fARMYLV,fMEDICLS,fMEDICSF,fMEDICLV,fLSNEWS,fSFNEWS,fLVNEWS,fINSTRUCTORS,fRM,fLCN,fYAKUZA: maxmoney = 300000;
				case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: maxmoney = 200000;
				case fWHITEHOUSE: maxmoney = 500000;
			}
			if(dengi < 1 || dengi > maxmoney) {
				static const f_str[] = "\n\n"W"Введіть сумму, которую хочете взяти с банка фракції:\n\n"NO"* {f6f6d9}От $1 до $%d\n\n";
				new string[sizeof(f_str) +1 + (-2 + 9)];
				format(string,sizeof(string),f_str,maxmoney);
				D(playerid,D_LMENU_BANK_INPUT,DSI, ""YELLOW"Керування банком фракції",string,"Взяти","Відміна");
				return 1;
			}
			if(FI[GetTeamID(playerid)][fBankCash] + dengi > maxmoney) {
				new string[128];
				format(string,sizeof(string),"\n\n"W"Введіть сумму, которую хочете взяти с банка фракції:\n\n"NO"* {f6f6d9}Суточный лимит на перевод/снятие коштів с общага - $%d. Доступный лимит: $%d\n\n",maxmoney,maxmoney-FI[GetTeamID(playerid)][fBankCash]);
				D(playerid,D_LMENU_BANK_INPUT,DSI, ""YELLOW"Керування банком фракції",string,"Взяти","Відміна");
				return 1;
			}
			if(FI[GetTeamID(playerid)][fBank] < dengi) return D(playerid,D_LMENU_BANK_INPUT,DSI, ""YELLOW"Керування банком фракції","\n\n"W"Введіть сумму, которую хочете взяти с банка фракції:\n\n"NO"* {f6f6d9}В банке фракції нет такой суммы\n\n","Взяти","Відміна");
			FI[GetTeamID(playerid)][fBank] -= dengi;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			FI[GetTeamID(playerid)][fBankCash] += dengi;
			UpdateFraction(GetTeamID(playerid),"BankCash",FI[GetTeamID(playerid)][fBankCash]);
			GiveMoney(playerid, dengi,"снял со рахунку фракції");
			new string[128];
			format(string,sizeof(string),"Ви сняли с банка фракції: "ORANGE"$%d",dengi);
			SendOk(playerid,string);
		}
		case D_LMENU_TEXT: {
			if(!response) return 1;
			new message[71];
			if(NonSym(inputtext,70,1)) return D(playerid,D_LMENU_TEXT, DSI, ""YELLOW"Сообщение фракції", "\n\n"W"Введіть повідомлення, яке буде показано членам Вашої організації при заході на сервері:\nДля видалення повідомлення введіть: "ORANGE"None\n\n"NO"* {f6f6d9}Запрещены некорректные символы\n\n", "Ввід", "Відміна" ) ;
			if(sscanf(inputtext,"s[70]",message)) return D(playerid,D_LMENU_TEXT, DSI, ""YELLOW"Сообщение фракції", "\n\n"W"Введіть повідомлення, яке буде показано членам Вашої організації при заході на сервері:\nДля видалення повідомлення введіть: "ORANGE"None\n\n"NO"* {f6f6d9}От 1 до 70 символов\n\n", "Ввід", "Відміна" ) ;
			strmid(FI[PlayerInfo[playerid][pMember]][fMessage],message,0,strlen(message),70);

			new query[350];
			format(query,sizeof(query),"UPDATE fractions SET Message = '%s' WHERE `ID` = '%d' LIMIT 1",FI[PlayerInfo[playerid][pMember]][fMessage],PlayerInfo[playerid][pMember]);
			mysql_tquery(connects,query);

			new string[128];
			format(string,sizeof(string),"Сообщение: "ORANGE"%s {f6f6d9}Успішно встановлено",message);
			SendOk(playerid,string);
		}
		case D_LMENU_RANK: {
			if(!response) return DeletePVar(playerid,"leader_rank");
			if(!PlayerInfo[playerid][pMember]) return 1;
			new select_listitem = GetPVarInt(playerid,"leader_rank");
			if(select_listitem == 0) FI[GetTeamID(playerid)][fInviteRang] = listitem + 1,UpdateFraction(GetTeamID(playerid),"RangInvite",listitem + 1);
			else if(select_listitem == 1) FI[GetTeamID(playerid)][fUninviteRang] = listitem + 1,UpdateFraction(GetTeamID(playerid),"RangUninvite",listitem + 1);
			else if(select_listitem == 2) FI[GetTeamID(playerid)][fGiveRang] = listitem + 1,UpdateFraction(GetTeamID(playerid),"GiveRang",listitem + 1);
			else if(select_listitem == 3) FI[GetTeamID(playerid)][fUseStock] = listitem + 1,UpdateFraction(GetTeamID(playerid),"UseStock",listitem + 1);
			else return true;
			DeletePVar(playerid,"leader_rank");
			pc_cmd_lmenu(playerid);
			return 1;
		}
		case D_EDIT_RANK_1: {
			if(!response) return pc_cmd_lmenu(playerid);
			if(!PlayerInfo[playerid][pMember]) return 1;
			SetPVarInt(playerid,"edit_rank",listitem);
			D(playerid, D_EDIT_RANK_2, DSI, ""YELLOW"Смена названия ранга", "\n\n"W"Введіть нову назву ранга:\n\n", "Змінити", "Відміна");
			return 1;
		}
		case D_EDIT_RANK_2: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pMember]) return 1;
			if(strlen(inputtext) <= 5 || strlen(inputtext) >= 24) return D(playerid, D_EDIT_RANK_2, DSI, ""YELLOW"Смена названия ранга", "\n\n"W"Введіть нову назву ранга:\n\n"NO"*{f6f6d9} От 6 и до 24 симолов\n\n", "Змінити", "Відміна");
			string_replace(inputtext, "'", ' ') ;
			new slot = GetPVarInt(playerid, "edit_rank");

			new string[156];
			format(string,sizeof(string),"Ранг "YELLOW"№%d{f6f6d9} переименован с "W"%s{f6f6d9} на "W"%s",slot+1,GetRankName(PlayerInfo[playerid][pMember],slot+1),inputtext);
			SendUse(playerid,string);

			strmid(RankName[PlayerInfo[playerid][pMember]][slot], inputtext, 0, strlen(inputtext));
			SaveRank(slot+1,GetTeamID(playerid));
			return 1;
		}
		case D_CASINO: {
			if(!response) return 1;
			if(!GetPVarInt(playerid,"krup")) {
				new null = 0;
				foreach(new i:Player) {
					if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
					if(GetPVarInt(i,"krup")) null++;
				}
				if(null >= 5) return ErrorMessage(playerid,"Уже працюють достатньо круп'є(5 людей)");
				SetPVarInt(playerid,"oldskinkrup",GetPlayerSkin(playerid));
				Casino_Flag[playerid][casino_crup] = 1;
			}
			else Casino_Flag[playerid][casino_crup] = 0;
			new skin_fix = (PlayerInfo[playerid][pSex] == 1) ? (171) : (194);
			A_SetPlayerSkin(playerid,(GetPVarInt(playerid,"krup")) ? (GetPVarInt(playerid,"oldskinkrup")) : (skin_fix));
			SetPVarInt(playerid,"krup",(GetPVarInt(playerid,"krup")) ? (false) : (true));
			SendOk(playerid,(!GetPVarInt(playerid,"krup")) ? ("Ви закінчили роботу круп'є") : ("Ви влаштувались на роботу круп'є"));
			return 1;
		}
		case D_COP_ARREST: {
			if(!response) return 1;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 40: PlayerInfo[playerid][pJail] = 1;
				case 41: PlayerInfo[playerid][pJail] = 2;
				case 42: PlayerInfo[playerid][pJail] = 3;
			}
			PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pSearch] * 600)/2;
			UpdatePlayerData(playerid,"pJail",PlayerInfo[playerid][pJail]);
			UpdatePlayerData(playerid,"pJailTime",PlayerInfo[playerid][pJailTime]);
			PlayerInfo[playerid][pSearch] = 0;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pSearch]);
			PlayerSpawn(playerid);
		}
		case D_DONATE: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = "\
{f6f6d9}Покупка ігрової валюти\n\n\
"W"На рахунку вашого аккаунта "O"%d "W"B-COIN.\n\
Введіть суму, яку ви хочете отримати:\n\
Курс: "GREEN"1 B-COIN = $3000";
					new string[sizeof(f_str) +1 + (-2 + 13)];
					format(string, sizeof(string), f_str,PlayerInfo[playerid][pRouble]);
					D(playerid, D_DONATE_CONVERT, DSI, ""YELLOW"Донат", string, "Купити", "Назад");
				}
				case 1: {
					if(PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Лідерам заборонено змінювати нік");
					new plane = -1;
					for(new i=1;i<=gPlaneCount;i++) {
						if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
					}
					if(plane != -1) return ErrorMessage(playerid,"Для зміни ніка, необхідно відмовитися від оренди повітряного транспорта");
					D(playerid, D_DONATE_CHANGENAME, DSI, ""YELLOW"Донат", "{f6f6d9}Зміна ігрового імені\n\n"W"Введіть нове ігрове ім'я:\nВартість: "GREEN"20 B-COIN", "Змінити", "Назад");
				}
				case 2: D(playerid, D_DONATE_UNWARN, DSM, ""YELLOW"Донат", "{f6f6d9}Зняття попередження\n\n"W"Вартість: "GREEN"100 B-COIN\n{f6f6d9}Ви дійсно хочете зняти попередження?", "Зняти", "Назад");
				case 3: D(playerid, D_DONATE_ZAKON, DSM, ""YELLOW"Донат", "{f6f6d9}Підвищення законослухняності\n\n"W"Додавання: "YELLOW"+15"W" до законослухняності\nВартість: "GREEN"10 B-COIN\n{f6f6d9}Ви дійсно хочете купити цю послугу?", "Купити", "Назад");
				case 4: {
					static const f_str[] = "\
Ліцензія\tВартість\tНаявність\n\
"W"Водійське посвідчення\t"GREEN"20 B-COIN\t%s\n\
"W"Ліцензія на керування повітряним засобом\t"GREEN"30 B-COIN\t%s\n\
"W"Ліцензія на керування водного транспорта\t"GREEN"30 B-COIN\t%s\n\
"W"Ліцензія на ношення зброї\t"GREEN"50 B-COIN\t%s";
					new string[sizeof(f_str) +1 + (-2 + 40)];
					format(string,sizeof(string),f_str,(lic[0])?(""GREEN"Є"):(""NO"Відсутній"),(lic[1])?(""GREEN"Є"):(""NO"Відсутній"),(lic[2])?(""GREEN"Є"):(""NO"Відсутній"),(lic[3])?(""GREEN"Є"):(""NO"Відсутній"));
					D(playerid, D_DONATE_LICENSES, DSTH, ""YELLOW"Донат", string, "Купити", "Назад");
				}
				case 5: {
					static const f_str[] = "Зброя\tЦіна\tСкілл\n\
{f6f6d9}SD-Pistol\t"GREEN"1р = 2%s\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}Desert Eagle\t"GREEN"1р = 2%s\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}ShotGun\t"GREEN"1р = 2%s\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}MP5\t"GREEN"1р = 2%s\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}AK-47\t"GREEN"1р = 2%s\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}M4\t"GREEN"1р = 2%s\t"YELLOW"%d%s / 100%s";
					new string[sizeof(f_str) +1 + (-2 + 20)];
					format(string,sizeof(string),f_str,"%",PlayerInfo[playerid][pGunSkill][0],"%","%","%",PlayerInfo[playerid][pGunSkill][1],"%","%","%",PlayerInfo[playerid][pGunSkill][2],"%","%","%",PlayerInfo[playerid][pGunSkill][3],"%","%","%",PlayerInfo[playerid][pGunSkill][4],"%","%","%",PlayerInfo[playerid][pGunSkill][5],"%","%");
					D(playerid, D_DONATE_SKILLS, DSTH, ""YELLOW"Донат", string, "Купити", "Назад");
				}
				case 6: D(playerid, D_DONATE_SATIETY, DSM, ""YELLOW"Донат", "{f6f6d9}Анті-голод\n\n"W"Анті-голод [100% шкала ситості]\nВартість: "GREEN"150 B-COIN\n{f6f6d9}Ви дійсно хочете Купити цю послугу?", "Купити", "Назад");
				case 7: D(playerid, D_DONATE_DISEASE, DSM, ""YELLOW"Донат", "{f6f6d9}Імунітет\n\n"W"Імунітет від усіх хвороб \nВартість: "GREEN"150 B-COIN\n{f6f6d9}Ви дійсно хочете Купити цю послугу?", "Купити", "Назад");
				case 8: {
					new year, month, day, hour, minute, second,strs_0[30];
					if(PlayerInfo[playerid][pVips] == VIP_FOREVER) {
						strs_0 = "Навсегда";
					}
					else if(PlayerInfo[playerid][pVips] == VIP_NONE) {
						strs_0 = "-";
					}
					else {
						if(PlayerInfo[playerid][pVipTime] >= unix) {
							timestamp_to_date(PlayerInfo[playerid][pVipTime]-unix, year, month, day, hour, minute, second);
							format(strs_0,sizeof strs_0,""NO"%dм %dд %dч",month-1,day-1,hour);
						}
					}
					new string[600];
					new vip_name[8][20] = {"Відсутній","V.I.P. Початковий", "V.I.P. Бронзовий","V.I.P. Срібний","V.I.P. Золотий","V.I.P. Платиновий","V.I.P. Екстра","V.I.P. Беззаконник"};
					format(string,sizeof(string),"Найменування\tЦіна\n\
																	"YELLOW"V.I.P. Беззаконник\t"GREEN"От 80 B-COIN\n\
																	"YELLOW"V.I.P. Початковий\t"GREEN"От 50 B-COIN\n\
																	"YELLOW"V.I.P. Бронзовий\t"GREEN"От 60 B-COIN\n\
																	"YELLOW"V.I.P. Срібний\t"GREEN"От 70 B-COIN\n\
																	"YELLOW"V.I.P. Золотий\t"GREEN"От 80 B-COIN\n\
																	"YELLOW"V.I.P. Платиновий\t"GREEN"От 90 B-COIN\n\
																	"YELLOW"V.I.P. Екстра\t"GREEN"2000 B-COIN\n\
																	"GREEN"%s\t%s",vip_name[PlayerInfo[playerid][pVips]],strs_0);
					D(playerid, D_DONATE_VIP, DSTH, ""YELLOW"Донат", string, "Купити", "Назад");
				}
				case 9: {
					if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У вас немає будинку/номера в готелі");
					new string[1512],str[64];
					string = ""YELLOW"ID\t"YELLOW"Назва автомобіля\t"YELLOW"Ціна\n";
		            for(new i; i < sizeof(donate_car); i++) {
						format(str,sizeof(str), ""W"%d\t%s\t"ORANGE"%d\n",donate_car[i][0], gTransport[donate_car[i][0]-400][trName],donate_car[i][1]);
						strcat(string, str);
					}
					D(playerid, D_BUY_CAR_DONATE, DSTH, ""YELLOW"Покупка автомобіля", string, "Купити", "Назад");
				}
				case 10: {
					if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитись в сім'ї");
					static const f_str[] = "{f6f6d9}Покупка EXP + поінтів в сім'ю\n\n\
"W"На рахунку вашого аккаунта "O"%d "W"B-COIN.\n\
Введіть суму, яку ви хочете отримати:\n\
Курс: "GREEN"1 B-COIN = 10 поинтов";
					new string[sizeof(f_str) +1 + (-2 + 13)];
					format(string, sizeof(string), f_str,PlayerInfo[playerid][pRouble]);
					D(playerid, D_DONATE_POINT, DSI, ""YELLOW"Донат", string, "Купити", "Назад");
				}
				case 11: D(playerid, D_DONATE_BANK, DSM, ""YELLOW"Донат", "{f6f6d9}Мобільний банк\n\n\
"W"Можливості:\n\
\t"YELLOW"-{f6f6d9} Вибір банка\n\
\t"YELLOW"-{f6f6d9} Виклик банківського меню за допомогою /call 0000\n\
\t"YELLOW"-{f6f6d9} Виклик банківських послуг за допомогою /call 0000\n\n\
"W"Вартість: "GREEN"150 B-COIN\n\
{f6f6d9}Ви дійсно хочете купити цю послугу?", "Купити", "Назад");
				case 12: D(playerid, D_DONATE_SKIN, DSI, ""YELLOW"Донат", "{f6f6d9}Покупка унікального скіна\n\n\
											Введіть ID скіна, який ви хочете придбати:\n\
											"W"Вартість: "GREEN"200 B-COIN", "Купити", "Назад");
				case 13: {
					D(playerid, D_DONATE_ZV, DSM, ""YELLOW"Донат", "{f6f6d9}Рівень розшуку\n\n\
						"W"Прибрати 1 рівень розшуку\n\n\
						"W"Вартість: "GREEN"10 B-COIN\n\
						{f6f6d9}Ви дійсно хочете купити цю послугу?", "Купити", "Назад");
				}
				case 14: {
					D(playerid, D_DONATE_BH, DSM, ""YELLOW"Донат", "{f6f6d9} Анти Банни Хоп\n\n\
						"W"Вартість: "GREEN"100 B-COIN\n\
						{f6f6d9}Ви дійсно хочете Купити цю послугу?", "Купити", "Назад");
				}
				case 15: {
					if(PlayerInfo[playerid][pBox] == 3) return ErrorMessage(playerid,"У Вас изучены все стили боя");
					new style_box[3][9] = {"Бокс","Кунг-Фу","Кик-Бокс"};
					static const f_str[] = "Стиль боя\tЦіна\tНавыки\n\
{f6f6d9}%s\t"GREEN"1р = 2%s\t"YELLOW"%.1f%s / 1000%s";
					new string[sizeof(f_str) +1 + (-2 + 20)];
					format(string,sizeof(string),f_str,style_box[PlayerInfo[playerid][pBox]],"%",PlayerInfo[playerid][pSnow],"%","%");
					D(playerid, D_DONATE_BOX, DSTH, ""YELLOW"Донат", string, "Купити", "Назад");
				}
				case 16: {
					if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У вас немає Т/С");
					D(playerid, D_DONATE_TUNE_CAR, DSM, ""YELLOW"Донат", "{f6f6d9}Убрать тюнинг с личного Т/С\n\n\
"W"Убрать весь тюнинг с Т/С\n\n\
"W"Вартість: "GREEN"50 B-COIN\n\
{f6f6d9}Ви дійсно хочете Купити цю послугу?", "Купити", "Назад");
				}
				case 17: {
					D(playerid, D_DONATE_NUMBER, DSTH, ""YELLOW"Донат", "Знаків в номері\tЦіна\n\
"YELLOW"5 значний\t"GREEN"200 B-COIN\n\
"YELLOW"4 значний\t"GREEN"300 B-COIN\n\
"YELLOW"3 значний\t"GREEN"400 B-COIN\n\
"YELLOW"2 значний\t"GREEN"500 B-COIN", "Купити", "Назад");
				}
				case 18: D(playerid, D_DONATE_BLACK, DSTH, ""YELLOW"Донат", "№ Найменування\tЦіна\n\
"YELLOW"1."W" Вихід із ЧС організації\t"GREEN"50 B-COIN\n\
"YELLOW"2."W" Вихід із ЧС всех організацій\t"GREEN"300 B-COIN", "Купити", "Назад");
				/*case 19: {
					if(!PlayerInfo[playerid][pMute]) return ErrorMessage(playerid,"У вас немає Бана Чата");
					D(playerid, D_DONATE_UNMUTE, DSM, ""YELLOW"Донат", "{f6f6d9}Зняти Бан Чата\n\n\
						"W"Вартість: "GREEN"10 B-COIN\n\
						{f6f6d9}Ви дійсно хочете Купити цю послугу?", "Купити", "Назад");
				}
				case 20: {
					D(playerid, D_DONATE_UNBAN, DSI, ""YELLOW"Донат", "{f6f6d9}Разблокировка аккаунта\n\n\
						"W"Вартість: "GREEN"500 B-COIN\n\
						{f6f6d9}Введіть нік гравця, якого бажаєте розблокувати:", "Купити", "Назад");
				}*/
				case 19: D(playerid, D_DONATE_UNNARK, DSM, ""YELLOW"Донат", "{f6f6d9}Зняти наркозалежность\n\n"W"Зняти: "YELLOW"1000"W" від наркозалежності\nВартість: "GREEN"100 B-COIN\n{f6f6d9}Ви дійсно хочете купити цю послугу?", "Купити", "Назад");
				case 20: D(playerid, D_DONATE_JOB, DSM, ""YELLOW"Донат", "{f6f6d9}Нова трудова книжка\n\nВартість: "GREEN"50 B-COIN\n{f6f6d9}Ви дійсно хочете Купити цю послугу?", "Купити", "Назад");
				case 21: D(playerid, D_DONATE_BOOM, DSM, ""YELLOW"Донат", "{f6f6d9}Бумбокс\n\nВартість: "GREEN"100 B-COIN\n{f6f6d9}Ви дійсно хочете Купити цю послугу?", "Купити", "Назад");
				case 22: pc_cmd_donate(playerid);
				case 23: {
					new query[256];
					format(query, sizeof(query), "SELECT * FROM unitpay_payments WHERE account = '%s' AND status = 1 ORDER BY dateComplete DESC LIMIT 0,20;", player_name[playerid]);
	 				mysql_tquery(connects, query, "unitpay_callback", "dd", playerid, 0);
				}
			}
		}
		case D_DONATE_JOB: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 50) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			PlayerInfo[playerid][pRouble] -= 50;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			new query[96];
			format(query,sizeof(query),"DELETE FROM `users_jobinfo` WHERE `ji_uid` = '%d'",PlayerInfo[playerid][pID]);
			mysql_query(connects, query);
			SendClientMessage(playerid,CGOLD,"Нова трудова книжка успішно отримана");
		}
		case D_DONATE_BOOM: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 100) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(PlayerInfo[playerid][pBoomBox] == 1 || PlayerInfo[playerid][pBoomBox] == 2) return ErrorMessage(playerid,"У Вас уже есть БумБокс");
			PlayerInfo[playerid][pRouble] -= 100;
			PlayerInfo[playerid][pBoomBox] = 1;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			UpdatePlayerData(playerid,"pBoomBox",PlayerInfo[playerid][pBoomBox]);
			SendClientMessage(playerid,CGOLD,"Ви успішно придбали БумБокс!");
		}
		case D_DONATE_UNNARK: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 100) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			PlayerInfo[playerid][pRouble] -= 100;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно зняли наркозалежність");
			if(PlayerInfo[playerid][pAddiction] - 1000 < 0) PlayerInfo[playerid][pAddiction] = 0;
			else PlayerInfo[playerid][pAddiction] -= 1000;
			UpdatePlayerData(playerid,"pAddiction",PlayerInfo[playerid][pAddiction]);
		}
		case D_DONATE_UNBAN: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 500) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(strval(inputtext) < 6 || strval(inputtext) > 24) {
				D(playerid, D_DONATE_UNBAN, DSI, ""YELLOW"Донат", "{f6f6d9}Разблокировка аккаунта\n\n\
							"W"Вартість: "GREEN"500 B-COIN\n\
							{f6f6d9}Введіть ник гравця, которого хочете разблокировать:\n\n"NO"*{f6f6d9} От 6 и до 24 символов\n\n", "Купити", "Назад");
				return 1;
			}
			if(!IsBannedName(inputtext)) {
				D(playerid, D_DONATE_UNBAN, DSI, ""YELLOW"Донат", "{f6f6d9}Разблокировка аккаунта\n\n\
							"W"Вартість: "GREEN"500 B-COIN\n\
							{f6f6d9}Введіть ник гравця, которого хочете разблокировать:\n\n"NO"*{f6f6d9} Данный гравець не заблокирован\n\n", "Купити", "Назад");
				return 1;
			}
			PlayerInfo[playerid][pRouble] -= 500;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			UnBanName(inputtext);
			SendClientMessage(playerid,CGOLD,"Ви успішно зняли блокировку с гравця");
		}
		case D_DONATE_UNMUTE: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 10) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			PlayerInfo[playerid][pRouble] -= 10;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно зняли Бан Чата");
			PlayerInfo[playerid][pMute] = 0;
			UpdatePlayerData(playerid,"mute",0);
		}
		case D_DONATE_BLACK: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0: {
					new black_str[30] = {"{f6f6d9}Не в ЧС",""NO"В ЧС"};
					static const f_str[] = "Організація\tЦіна\tСтатус\n\
{f6f6d9}Поліція м.ЛС\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Поліція м.СФ\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Поліція м.ЛВ\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}ФБР\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Армія м.СФ\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Армія м.ЛВ\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Лікарня м.ЛС\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Лікарня м.СФ\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Лікарня м.ЛВ\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Радиоцентр м.ЛС\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Радиоцентр м.СФ\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Радиоцентр м.ЛВ\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Італьянська мафія\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Японская мафія\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Українська мафія\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Ballas\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Vagos\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Grove\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Aztec\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Rifa\t"GREEN"50 B-COIN\t%s\n\
{f6f6d9}Білий дім\t"GREEN"50 B-COIN\t%s";
					new string[sizeof(f_str) + 280];
					format(string,sizeof(string),f_str,
						black_str[bl_info[playerid][bl_fraction][fLSPD]],black_str[bl_info[playerid][bl_fraction][fSFPD]],black_str[bl_info[playerid][bl_fraction][fLVPD]],
						black_str[bl_info[playerid][bl_fraction][fFBI]],black_str[bl_info[playerid][bl_fraction][fMAYOR]],black_str[bl_info[playerid][bl_fraction][fARMYSF]],
						black_str[bl_info[playerid][bl_fraction][fARMYLV]],black_str[bl_info[playerid][bl_fraction][fMEDICLS]],black_str[bl_info[playerid][bl_fraction][fMEDICSF]],
						black_str[bl_info[playerid][bl_fraction][fMEDICLV]],black_str[bl_info[playerid][bl_fraction][fLSNEWS]],black_str[bl_info[playerid][bl_fraction][fSFNEWS]],
						black_str[bl_info[playerid][bl_fraction][fLVNEWS]],black_str[bl_info[playerid][bl_fraction][fLCN]],black_str[bl_info[playerid][bl_fraction][fYAKUZA]],
						black_str[bl_info[playerid][bl_fraction][fRM]],black_str[bl_info[playerid][bl_fraction][fBALLAS]],black_str[bl_info[playerid][bl_fraction][fVAGOS]],
						black_str[bl_info[playerid][bl_fraction][fGROVE]],black_str[bl_info[playerid][bl_fraction][fAZTEC]],black_str[bl_info[playerid][bl_fraction][fRIFA]],
						black_str[bl_info[playerid][bl_fraction][fWHITEHOUSE]]);
					D(playerid, D_DONATE_BLACK_3, DSTH, ""YELLOW"Донат", string, "Купити", "Назад");
				}
				case 1: {
					D(playerid, D_DONATE_BLACK_2, DSM, ""YELLOW"Донат", "{f6f6d9}Вихід із ЧС всіх організацій\n\n\
						"W"Вартість: "GREEN"300 B-COIN\n\
						{f6f6d9}Ви дійсно хочете Купити цю послугу?", "Купити", "Назад");
				}
			}
		}
		case D_DONATE_BLACK_2: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 300) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			PlayerInfo[playerid][pRouble] -= 300;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно вышли их ЧС всех організацій");
			bl_info[playerid][bl_fraction][fLSPD] = bl_info[playerid][bl_fraction][fSFPD] = bl_info[playerid][bl_fraction][fLVPD] =
			bl_info[playerid][bl_fraction][fFBI] = bl_info[playerid][bl_fraction][fMAYOR] = bl_info[playerid][bl_fraction][fARMYSF] = 
			bl_info[playerid][bl_fraction][fARMYLV] = bl_info[playerid][bl_fraction][fMEDICLS] = bl_info[playerid][bl_fraction][fMEDICSF] = 
			bl_info[playerid][bl_fraction][fMEDICLV] = bl_info[playerid][bl_fraction][fLSNEWS] = bl_info[playerid][bl_fraction][fSFNEWS] =
			bl_info[playerid][bl_fraction][fLVNEWS] = bl_info[playerid][bl_fraction][fLCN] = bl_info[playerid][bl_fraction][fYAKUZA] =
			bl_info[playerid][bl_fraction][fRM] = bl_info[playerid][bl_fraction][fBALLAS] = bl_info[playerid][bl_fraction][fVAGOS] =
			bl_info[playerid][bl_fraction][fGROVE] = bl_info[playerid][bl_fraction][fAZTEC] = bl_info[playerid][bl_fraction][fRIFA] = 
			bl_info[playerid][bl_fraction][fWHITEHOUSE] = false;
			new query[74 + MAX_PLAYER_NAME + 6];
			format(query, sizeof(query), "DELETE FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s'", player_name[playerid]);
			mysql_pquery(connects, query, "", "");
		}
		case D_DONATE_BLACK_3: {
			if(PlayerInfo[playerid][pRouble] < 50) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			new frac;
			switch(listitem) {
				case 0: frac = fLSPD;
				case 1: frac = fSFPD;
				case 2: frac = fLVPD;
				case 3: frac = fFBI;
				case 4: frac = fARMYSF;
				case 5: frac = fARMYLV;
				case 6: frac = fMEDICLS;
				case 7: frac = fMEDICSF;
				case 8: frac = fMEDICLV;
				case 9: frac = fLSNEWS;
				case 10: frac = fSFNEWS;
				case 11: frac = fLVNEWS;
				case 12: frac = fLCN;
				case 13: frac = fYAKUZA;
				case 14: frac = fRM;
				case 15: frac = fBALLAS;
				case 16: frac = fVAGOS;
				case 17: frac = fGROVE;
				case 18: frac = fAZTEC;
				case 19: frac = fRIFA;
				case 20: frac = fWHITEHOUSE;
			}
			if(bl_info[playerid][bl_fraction][frac] == false) return ErrorMessage(playerid,"Ви не знаходитесь в ЧС цієї організації");
			bl_info[playerid][bl_fraction][frac] = false;
			new query[74 + MAX_PLAYER_NAME + 6];
			format(query, sizeof(query), "DELETE FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s' AND `f_bl_id` = '%d'", player_name[playerid], frac);
			mysql_pquery(connects, query, "", "");
			PlayerInfo[playerid][pRouble] -= 50;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно вийшли із ЧС організації");
		}
		case D_DONATE_NUMBER: {
			if(!response) return pc_cmd_donate(playerid);
			SetPVarInt(playerid, "donate_number", listitem);
			new price_number[4] = {200,300,400,500};
			if(PlayerInfo[playerid][pRouble] < price_number[listitem]) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			static const f_str[] = "{f6f6d9}Купівля номера телефону\n\n\
Введіть %d значний номер телефону, який ви бажаєте придбати:\n\
"W"Вартість: "GREEN"%d B-COIN\n";
			new string[sizeof(f_str) +7];
			format(string,sizeof(string),f_str,5-listitem,price_number[listitem]);
			D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат",string,"Купити","Закрити");
		}
		case D_DONATE_NUMBER_2: {
			if(!response) return pc_cmd_donate(playerid);
			new price_number[4] = {200,300,400,500};
			if(PlayerInfo[playerid][pRouble] < price_number[GetPVarInt(playerid, "donate_number")]) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(strval(inputtext) == 111 || strval(inputtext) == 222 || strval(inputtext) == 333 || strval(inputtext) == 911) {
				D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
Введіть 3 значний номер телефону, який ви бажаєте придбати:\n\
"W"Вартість: "GREEN"400 B-COIN\n\n"NO"*{f6f6d9} Вказаний номер зайнятий\n\n","Купити","Закрити");
				return true;
			}
			switch(GetPVarInt(playerid, "donate_number")) {
				case 0: {
					if(isNumeric(inputtext) || strlen(inputtext) != 5 || inputtext[0] == '0') {
						D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
Введіть 5 значний номер телефону, який ви бажаєте придбати:\n\
"W"Вартість: "GREEN"200 B-COIN\n\n"NO"*{f6f6d9} Номер должен состоять из 5 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купити","Закрити");
						return true;
					}
				}
				case 1: {
					if(isNumeric(inputtext) || strlen(inputtext) != 4 || inputtext[0] == '0') {
						D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
Введіть 4 значний номер телефону, який ви бажаєте придбати:\n\
"W"Вартість: "GREEN"300 B-COIN\n\n"NO"*{f6f6d9} Номер должен состоять из 4 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купити","Закрити");
						return true;
					}
				}
				case 2: {
					if(isNumeric(inputtext) || strlen(inputtext) != 3 || inputtext[0] == '0') {
						D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
Введіть 3 значний номер телефону, який ви бажаєте придбати:\n\
"W"Вартість: "GREEN"400 B-COIN\n\n"NO"*{f6f6d9} Номер должен состоять из 3 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купити","Закрити");
						return true;
					}
				}
				case 3: {
					if(isNumeric(inputtext) || strlen(inputtext) != 2 || inputtext[0] == '0') {
						D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
Введіть 2 значний номер телефону, який ви бажаєте придбати:\n\
"W"Вартість: "GREEN"500 B-COIN\n\n"NO"*{f6f6d9} Номер должен состоять из 2 цифр. Первая цифра не должны быть \"ноль\"\n\n","Купити","Закрити");
						return true;
					}
				}
			}
			new query[128];
			format(query,sizeof(query),"SELECT `pPhone` FROM `accounts` WHERE `pPhone` = '%i'",strval(inputtext));
			mysql_tquery(connects, query, "donate_shop", "dddd", playerid, strval(inputtext), GetPVarInt(playerid, "donate_number"), price_number[GetPVarInt(playerid, "donate_number")]);
		}
		case D_DONATE_TUNE_CAR: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 50) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У вас немає Т/С");
			new string[128];
			format(string,sizeof(string),""W"1. автомобіль №1 "YELLOW"[%s]\n"W"2. автомобіль №2 "YELLOW"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
			D(playerid,D_DONATE_TUNE_CAR_2,DSL,""YELLOW"Убрать тюнинг с личного Т/С",string,"Вибрати","Закрити");
		}
		case D_DONATE_TUNE_CAR_2: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 50) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom] && house_car[playerid][listitem] == INVALID_VEHICLE_ID) return ErrorMessage(playerid,"У вас немає Т/С");
			RemoveTuning(playerid,house_car[playerid][listitem],listitem);
			save_perf_sell(playerid,listitem);
			if(house_car[playerid][listitem] != INVALID_VEHICLE_ID) {
				for(new i; i < 5; i ++) {
					VehicleInfo[house_car[playerid][listitem]][vPEngine][i] = 0;	
					VehicleInfo[house_car[playerid][listitem]][vPBrake][i] = 0;		
				}
			}
			save_car(playerid,listitem);

			PlayerInfo[playerid][pRouble] -= 50;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Тюнинг с личного Т/С успішно видалений");
		}
		case D_DONATE_BOX: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pBox] == 3) return ErrorMessage(playerid,"У Вас изучены все стили боя");
			if(PlayerInfo[playerid][pRouble] < 2) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			PlayerInfo[playerid][pRouble] -= 2;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			if(floatround(PlayerInfo[playerid][pSnow]) < 1000) {
				PlayerInfo[playerid][pSnow] += 2;
			}
			else if(floatround(PlayerInfo[playerid][pSnow]) >= 1000) {
				PlayerInfo[playerid][pBox] ++;
				UpdatePlayerData(playerid,"pBox",PlayerInfo[playerid][pBox]);
				PlayerInfo[playerid][pSnow] = 0;
				SendOk(playerid,"Ви изучили новый стиль боя. Для переключения введіть: "W"/mm > особисті налаштування > стиль боя");
			}
			SendClientMessage(playerid,CGOLD,"Ви успішно придбали навички боєвих мистецтв");
			new style_box[3][9] = {"Бокс","Кунг-Фу","Кік-Бокс"};
			static const f_str[] = "Стиль боя\tЦіна\tНавички\n\
{f6f6d9}%s\t"GREEN"1р = 2%s\t"YELLOW"%.1f%s / 1000%s";
			new string[sizeof(f_str) +1 + (-2 + 20)];
			format(string,sizeof(string),f_str,style_box[PlayerInfo[playerid][pBox]],"%",PlayerInfo[playerid][pSnow],"%","%");
			D(playerid, D_DONATE_BOX, DSTH, ""YELLOW"Донат", string, "Купити", "Назад");
		}
		case D_DONATE_BH: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 100) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(PlayerInfo[playerid][pDonateBh]) return ErrorMessage(playerid,"У Вас уже є ця послуга");
			PlayerInfo[playerid][pRouble] -= 100;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			PlayerInfo[playerid][pDonateBh] = 1;
			UpdatePlayerData(playerid,"pDonateBh",PlayerInfo[playerid][pDonateBh]);
			SendClientMessage(playerid,CGOLD,"Ви успішно придбали послугу - Анті Банни Хоп");
		}
		case D_DONATE_ZV: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 10) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(!PlayerInfo[playerid][pSearch]) return ErrorMessage(playerid,"Ви не знаходитесь в розшуку");
			PlayerInfo[playerid][pSearch] --;
			SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pSearch]);
			PlayerInfo[playerid][pRouble] -= 10;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно зняли один рівень розшуку");
		}
		case D_DONATE_SKIN: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 200) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(!CheckSkin(strval(inputtext)) || strval(inputtext) < 1 || strval(inputtext) > 311) {
				D(playerid, D_DONATE_SKIN, DSI, ""YELLOW"Донат", "{f6f6d9}Покупка унікального скіна\n\n\
											Введіть ID скіна, який ви хочете придбати:\n\
											"W"Вартість: "GREEN"200 B-COIN\n\n"NO"*{f6f6d9} Вибраний скін відсутній в продажі", "Купити", "Назад");
				return 1;
			}
			PlayerInfo[playerid][pRouble] -= 200;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			PlayerInfo[playerid][pSkin] = strval(inputtext);
			UpdatePlayerData(playerid,"Skin",PlayerInfo[playerid][pSkin]);
			if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
				A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
				SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
			SendClientMessage(playerid,CGOLD,"Ви успішно придбали унікальний скін");
		}
		case D_DONATE_BANK: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 150) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			if(PlayerInfo[playerid][pDonateBank]) return ErrorMessage(playerid,"У вас уже є ця послуга");
			PlayerInfo[playerid][pRouble] -= 150;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			PlayerInfo[playerid][pDonateBank] = 1;
			UpdatePlayerData(playerid,"pDonateBank",PlayerInfo[playerid][pDonateBank]);
			SendClientMessage(playerid,CGOLD,"Ви успішно купили послугу - мобільний банк. Скористатися послугою: "W"/call 0000");
		}
		case D_BUY_CAR_DONATE: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < donate_car[listitem][1]) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			SetPVarInt(playerid, "car_donate", listitem);
			new string[128];
			format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]\n"W"2. Автомобіль №2 "YELLOW"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
			D(playerid,D_BUY_CAR_DONATE_2,DSL,""YELLOW"Донат",string,"Купити","Закрити");
		}
		case D_BUY_CAR_DONATE_2: {
			if(!response) return DeletePVar(playerid, "car_donate");
			new carid = GetPVarInt(playerid, "car_donate");
			DeletePVar(playerid, "car_donate");
			if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У вас немає будинку/номера в готелі");
			if(gPlayerCars[playerid][carModel][listitem] != 481) return ErrorMessage(playerid,"Для начала продайте автомобіль на данном слоте");

			if(PlayerInfo[playerid][pRouble] < donate_car[carid][1]) return ErrorMessage(playerid,"У Вас недостаточно коштів");

			gPlayerCars[playerid][carModel][listitem] = donate_car[carid][0];
			gPlayerCars[playerid][carFuel][listitem] = 30;
			gPlayerCars[playerid][carDrived][listitem] = 0;
			save_car(playerid,listitem);
			loading_cars(playerid,listitem);

			PlayerInfo[playerid][pRouble] -= donate_car[carid][1];
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);

			new string[200];
			format(string,sizeof(string),""W"Вітаємо з покупкою автомобіля: "YELLOW"%s\n\n\
										"W"Автомобіль куплений за: "GREEN"$%d\n\
										"W"Та доставлений до вашого будинку",gTransport[donate_car[carid][0]-400][trName],donate_car[carid][1]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Донат",string,"Дякую","");
		}
		case D_DONATE_LICENSES: {
			if(!response) return pc_cmd_donate(playerid);
			new price[] = {20,30,30,50};
			if(PlayerInfo[playerid][pRouble] < price[listitem]) return ErrorMessage(playerid,"Недостаточно коштів");
			if(lic[playerid][listitem]) return ErrorMessage(playerid,"У Вас уже є ця ліцензія");
			lic[playerid][listitem] = 1;
			UpdateLicenses(playerid);
			PlayerInfo[playerid][pRouble] -= price[listitem];
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно придбали ліцензію");
		}
		case D_DONATE_SKILLS: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 2) return ErrorMessage(playerid,"Недостаточно коштів");
			if(PlayerInfo[playerid][pGunSkill][listitem] +2 >= 100) return ErrorMessage(playerid,"Вибранный навык владения зброєю прокачен полностью");
			PlayerInfo[playerid][pRouble] -= 2;
			PlayerInfo[playerid][pGunSkill][listitem] += 2;
			if(PlayerInfo[playerid][pGunSkill][listitem] > 100) PlayerInfo[playerid][pGunSkill][listitem] = 100;
			SaveAccount(playerid);
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно придбали навички володіння зброєю");
			static const f_str[] = "Зброя\tЦіна\tСкілл\n\
{f6f6d9}SD-Pistol\t"GREEN"1р = 2\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}Desert Eagle\t"GREEN"1р = 2\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}ShotGun\t"GREEN"1р = 2\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}MP5\t"GREEN"1р = 2\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}AK-47\t"GREEN"1р = 2\t"YELLOW"%d%s / 100%s\n\
{f6f6d9}M4\t"GREEN"1р = 2\t"YELLOW"%d%s / 100%s";
			new string[sizeof(f_str) +1 + (-2 + 20)];
			format(string,sizeof(string),f_str,PlayerInfo[playerid][pGunSkill][0],"%","%",PlayerInfo[playerid][pGunSkill][1],"%","%",PlayerInfo[playerid][pGunSkill][2],"%","%",PlayerInfo[playerid][pGunSkill][3],"%","%",PlayerInfo[playerid][pGunSkill][4],"%","%",PlayerInfo[playerid][pGunSkill][5],"%","%");
			D(playerid, D_DONATE_SKILLS, DSTH, ""YELLOW"Донат", string, "Купити", "Назад");
		}
		case D_DONATE_DISEASE: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 150) return D(playerid, D_DONATE_DISEASE, DSM, ""YELLOW"Донат", "{f6f6d9}Імунітет\n\n"W"Імунітет від усіх хвороб \nВартість: "GREEN"150 B-COIN\n{f6f6d9}Ви дійсно хочете Купити цю послугу?\n\n"NO"*{f6f6d9} Недостаточно коштів", "Купити", "Назад");
			if(PlayerInfo[playerid][pDDisease] == 1) return D(playerid, D_DONATE_DISEASE, DSM, ""YELLOW"Донат", "{f6f6d9}Імунітет\n\n"W"Імунітет від усіх хвороб \nВартість: "GREEN"150 B-COIN\n{f6f6d9}Ви дійсно хочете Купити цю послугу?\n\n"NO"*{f6f6d9} У Вас вже куплено дану послугу", "Купити", "Назад");
			PlayerInfo[playerid][pDDisease] = 1;
			UpdatePlayerData(playerid,"pDDisease",1);
			PlayerInfo[playerid][pDisease][0] = 0;
			PlayerInfo[playerid][pDisease][1] = 0;
			UpdatePlayerData(playerid,"pDisease_0",0);
			UpdatePlayerData(playerid,"pDisease_1",0);
			PlayerInfo[playerid][pRouble] -= 150;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно придбали Імунітет");
		}
		case D_DONATE_SATIETY: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 150) return D(playerid, D_DONATE_SATIETY, DSM, ""YELLOW"Донат", "{f6f6d9}Анті-голод\n\n"W"Анті-голод [100% шкала ситості]\nВартість: "GREEN"150 B-COIN\n{f6f6d9}Ви дійсно хочете купити цю послугу?\n\n"NO"*{f6f6d9} Недостаточно коштів", "Купити", "Назад");
			if(PlayerInfo[playerid][pDSatiety] == 1) return D(playerid, D_DONATE_SATIETY, DSM, ""YELLOW"Донат", "{f6f6d9}Анті-голод\n\n"W"Анті-голод [100% шкала ситості]\nВартість: "GREEN"150 B-COIN\n{f6f6d9}Ви дійсно хочете купити цю послугу?\n\n"NO"*{f6f6d9} У Вас вже куплено дану послугу", "Купити", "Назад");
			PlayerInfo[playerid][pDSatiety] = 1;
			UpdatePlayerData(playerid,"pDSatiety",1);
			SetFullness(playerid, 100);
			PlayerInfo[playerid][pRouble] -= 150;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно придбали Анті-голод");
		}
		case D_DONATE_ZAKON: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 10) return D(playerid, D_DONATE_ZAKON, DSM, ""YELLOW"Донат", "{f6f6d9}Підвищення законослухняності\n\n"W"Додавання: "YELLOW"+15"W" к законопослушности\nВартість: "GREEN"10 B-COIN\n{f6f6d9}Ви дійсно хочете Купити цю послугу?\n\n"NO"*{f6f6d9} Недостаточно коштів", "Купити", "Назад");
			if(PlayerInfo[playerid][pZakonp]+15 > 100) return D(playerid, D_DONATE_ZAKON, DSM, ""YELLOW"Донат", "{f6f6d9}Підвищення законослухняності\n\n"W"Додавання: "YELLOW"+15"W" к законопослушности\nВартість: "GREEN"10 B-COIN\n{f6f6d9}Ви дійсно хочете Купити цю послугу?\n\n"NO"*{f6f6d9} Нельзя иметь більше 100 законопослушности", "Купити", "Назад");
			PlayerInfo[playerid][pZakonp] += 15;
			UpdatePlayerData(playerid,"pZakonp",PlayerInfo[playerid][pZakonp]);
			PlayerInfo[playerid][pRouble] -= 10;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно додали +10 до законопослушності");
		}
		case D_DONATE_UNWARN: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 100) return D(playerid, D_DONATE_UNWARN, DSM, ""YELLOW"Донат", "{f6f6d9}Зняття попередження\n\n"W"Вартість: "GREEN"100 B-COIN\n{f6f6d9}Ви дійсно хочете зняти попередження?\n\n"NO"*{f6f6d9} Недостаточно коштів", "Зняти", "Назад");
			if(!PlayerInfo[playerid][pWarns]) return D(playerid, D_DONATE_UNWARN, DSM, ""YELLOW"Донат", "{f6f6d9}Зняття попередження\n\n"W"Вартість: "GREEN"100 B-COIN\n{f6f6d9}Ви дійсно хочете зняти попередження?\n\n"NO"*{f6f6d9} На вашому аккаунті немає попереджень", "Зняти", "Назад");
			PlayerInfo[playerid][pWarns] --;
			UpdatePlayerData(playerid,"pWarns",PlayerInfo[playerid][pWarns]);
			PlayerInfo[playerid][pRouble] -= 100;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			SendClientMessage(playerid,CGOLD,"Ви успішно зняли 1 попередження");
		}
		case D_DONATE_VIP: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0: D(playerid, D_DONATE_VIP_GHETTO, DSTH, ""YELLOW"Беззаконник", "№ Найменування\tДни\tЦіна\tВигода\n\
																					"YELLOW"1."W" V.I.P.Беззаконник\t7 днів\t80 B-COIN.\t-\n\
																					"YELLOW"2."W" V.I.P.Беззаконник\t15 днів\t150 B-COIN.\t21 B-COIN.\n\
																					"YELLOW"3."W" V.I.P.Беззаконник\t30 днів\t280 B-COIN.\t63 B-COIN.\n\
																					"YELLOW"4."W" V.I.P.Беззаконник\t60 днів\t540 B-COIN.\t146 B-COIN.\n\
																					"YELLOW"5."W" Інформація", "Вибрати", "Назад");
				case 1: D(playerid, D_DONATE_VIP_BAZE, DSTH, ""YELLOW"V.I.P. Начальный", "№ Найменування\tДні\tЦіна\tВыгода\n\
																					"YELLOW"1."W" V.I.P. Начальный\t7 днів\t50 B-COIN.\t-\n\
																					"YELLOW"2."W" V.I.P. Начальный\t15 днів\t90 B-COIN.\t17 B-COIN.\n\
																					"YELLOW"3."W" V.I.P. Начальный\t30 днів\t160 B-COIN.\t54 B-COIN.\n\
																					"YELLOW"4."W" V.I.P. Начальный\t60 днів\t300 B-COIN.\t129 B-COIN.\n\
																					"YELLOW"5."W" Інформація", "Вибрати", "Назад");
				case 2: D(playerid, D_DONATE_VIP_SILVER, DSTH, ""YELLOW"V.I.P. Бронзовый", "№ Найменування\tДни\tЦіна\tВыгода\n\
																					"YELLOW"1."W" V.I.P. Бронзовый\t7 днів\t60 B-COIN.\t-\n\
																					"YELLOW"2."W" V.I.P. Бронзовый\t15 днів\t100 B-COIN.\t29 B-COIN.\n\
																					"YELLOW"3."W" V.I.P. Бронзовый\t30 днів\t180 B-COIN.\t77 B-COIN.\n\
																					"YELLOW"4."W" V.I.P. Бронзовый\t60 днів\t350 B-COIN.\t164 B-COIN.\n\
																					"YELLOW"5."W" Інформація", "Вибрати", "Назад");
				case 3: D(playerid, D_DONATE_VIP_GOLD, DSTH, ""YELLOW"V.I.P. Серебряный", "№ Найменування\tДни\tЦіна\tВыгода\n\
																					"YELLOW"1."W" V.I.P. Серебряный\t7 днів\t70 B-COIN.\t-\n\
																					"YELLOW"2."W" V.I.P. Серебряный\t15 днів\t120 B-COIN.\t30 B-COIN.\n\
																					"YELLOW"3."W" V.I.P. Серебряный\t30 днів\t220 B-COIN.\t80 B-COIN.\n\
																					"YELLOW"4."W" V.I.P. Серебряный\t60 днів\t420 B-COIN.\t180 B-COIN.\n\
																					"YELLOW"5."W" Інформація", "Вибрати", "Назад");
				case 4: {
					if(PlayerInfo[playerid][pVips] == VIP_PLATINA) {
						D(playerid, D_DONATE_VIP_PLATIN, DSTH, ""YELLOW"V.I.P. Золотой", "№ Найменування\tДни\tЦіна\tВыгода\n\
																						"YELLOW"1."W" V.I.P. Золотой\t7 днів\t80 B-COIN.\t-\n\
																						"YELLOW"2."W" V.I.P. Золотой\t15 днів\t150 B-COIN.\t21 B-COIN.\n\
																						"YELLOW"3."W" V.I.P. Золотой\t30 днів\t290 B-COIN.\t53 B-COIN.\n\
																						"YELLOW"4."W" V.I.P. Золотой\t60 днів\t570 B-COIN.\t116 B-COIN.\n\
																						"YELLOW"6."W" Інформація\n\
																						"YELLOW"7."W" Смена ника", "Вибрати", "Назад");
					}
					else {
						D(playerid, D_DONATE_VIP_PLATIN, DSTH, ""YELLOW"V.I.P. Золотой", "№ Найменування\tДни\tЦіна\tВыгода\n\
																						"YELLOW"1."W" V.I.P. Золотой\t7 днів\t80 B-COIN.\t-\n\
																						"YELLOW"2."W" V.I.P. Золотой\t15 днів\t150 B-COIN.\t21 B-COIN.\n\
																						"YELLOW"3."W" V.I.P. Золотой\t30 днів\t290 B-COIN.\t53 B-COIN.\n\
																						"YELLOW"4."W" V.I.P. Золотой\t60 днів\t570 B-COIN.\t116 B-COIN.\n\
																						"YELLOW"5."W" Інформація", "Вибрати", "Назад");
					}
				}
				case 5: {
					if(PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE) {
						D(playerid, D_DONATE_VIP_ECSCLUSIVE, DSTH, ""YELLOW"V.I.P. Платиновый", "№ Найменування\tДни\tЦіна\tВыгода\n\
																						"YELLOW"1."W" V.I.P. Платиновый\t7 днів\t90 B-COIN.\t-\n\
																						"YELLOW"2."W" V.I.P. Платиновый\t15 днів\t170 B-COIN.\t23 B-COIN.\n\
																						"YELLOW"3."W" V.I.P. Платиновый\t30 днів\t329 B-COIN.\t66 B-COIN.\n\
																						"YELLOW"4."W" V.I.P. Платиновый\t60 днів\t620 B-COIN.\t151 B-COIN.\n\
																						"YELLOW"5."W" Інформація\n\
																						"YELLOW"6."W" Смена ника", "Вибрати", "Назад");
					}
					else {
						D(playerid, D_DONATE_VIP_ECSCLUSIVE, DSTH, ""YELLOW"V.I.P. Платиновый", "№ Найменування\tДни\tЦіна\tВыгода\n\
																					"YELLOW"1."W" V.I.P. Платиновый\t7 днів\t90 B-COIN.\t-\n\
																					"YELLOW"2."W" V.I.P. Платиновый\t15 днів\t170 B-COIN.\t23 B-COIN.\n\
																					"YELLOW"3."W" V.I.P. Платиновый\t30 днів\t329 B-COIN.\t66 B-COIN.\n\
																					"YELLOW"4."W" V.I.P. Платиновый\t60 днів\t620 B-COIN.\t151 B-COIN.\n\
																					"YELLOW"5."W" Інформація", "Вибрати", "Назад");
					}
				}
				case 6: {
					if(PlayerInfo[playerid][pVips] == VIP_FOREVER) {
						D(playerid, D_DONATE_VIP_FOREVER, DSTH, ""YELLOW"V.I.P. Екстра", "№ Найменування\tДні\tЦіна\n\
																						"YELLOW"1."W" V.I.P. Екстра\tНазавжди\t2000 B-COIN.\t\n\
																						"YELLOW"2."W" Інформація\n\
																						"YELLOW"3."W" Зміна ніка", "Вибрати", "Назад");
					}
					else {
						D(playerid, D_DONATE_VIP_FOREVER, DSTH, ""YELLOW"V.I.P. Люкс", "№ Найменування\tДні\tЦіна\n\
																						"YELLOW"1."W" V.I.P. Екстра\tНазавжди\t2000 B-COIN.\t\n\
																						"YELLOW"2."W" Інформація", "Вибрати", "Назад");
					}
				}
			}
		}
		case D_DONATE_VIP_GHETTO: {
			if(!response) return pc_cmd_donate(playerid);
			if(listitem != 4) {
				new price_vip[] = {80,150,280,540};
				new vip_day[] = {7,15,30,60};
				if(PlayerInfo[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно коштів");
				PlayerInfo[playerid][pVips] = VIP_KING;
				PlayerInfo[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
				PlayerInfo[playerid][pRouble] -= price_vip[listitem];
				UpdatePlayerData(playerid,"pVips",PlayerInfo[playerid][pVips]);
				UpdatePlayerData(playerid,"pVipTime",PlayerInfo[playerid][pVipTime]);
				UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
				SendClientMessage(playerid, CGOLD, "Вітаємо з покупкою V.I.P. Беззаконник");
			}
			else show_vip(playerid,VIP_KING);
		}
		case D_DONATE_VIP_BAZE: {
			if(!response) return pc_cmd_donate(playerid);
			if(listitem != 4) {
				new price_vip[] = {50,90,160,300};
				new vip_day[] = {7,15,30,60};
				if(PlayerInfo[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно коштів");
				PlayerInfo[playerid][pVips] = VIP_BAZE;
				PlayerInfo[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
				PlayerInfo[playerid][pRouble] -= price_vip[listitem];
				UpdatePlayerData(playerid,"pVips",PlayerInfo[playerid][pVips]);
				UpdatePlayerData(playerid,"pVipTime",PlayerInfo[playerid][pVipTime]);
				UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
				SendClientMessage(playerid, CGOLD, "Вітаємо з покупкою V.I.P. Начальный");
			}
			else show_vip(playerid,VIP_BAZE);
		}
		case D_DONATE_VIP_SILVER: {
			if(!response) return pc_cmd_donate(playerid);
			if(listitem != 4) {
				new price_vip[] = {60,100,180,350};
				new vip_day[] = {7,15,30,60};
				if(PlayerInfo[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно коштів");
				PlayerInfo[playerid][pVips] = VIP_SILVER;
				PlayerInfo[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
				PlayerInfo[playerid][pRouble] -= price_vip[listitem];
				UpdatePlayerData(playerid,"pVips",PlayerInfo[playerid][pVips]);
				UpdatePlayerData(playerid,"pVipTime",PlayerInfo[playerid][pVipTime]);
				UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
				SendClientMessage(playerid, CGOLD, "Вітаємо з покупкою V.I.P. Бронзовый");
			}
			else show_vip(playerid,VIP_SILVER);
		}
		case D_DONATE_VIP_GOLD: {
			if(!response) return pc_cmd_donate(playerid);
			if(listitem != 4) {
				new price_vip[] = {70,120,220,420};
				new vip_day[] = {7,15,30,60};
				if(PlayerInfo[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно коштів");
				PlayerInfo[playerid][pVips] = VIP_GOLD;
				PlayerInfo[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
				PlayerInfo[playerid][pRouble] -= price_vip[listitem];
				UpdatePlayerData(playerid,"pVips",PlayerInfo[playerid][pVips]);
				UpdatePlayerData(playerid,"pVipTime",PlayerInfo[playerid][pVipTime]);
				UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
				SendClientMessage(playerid, CGOLD, "Вітаємо з покупкою V.I.P. Серебряный");
			}
			else show_vip(playerid,VIP_GOLD);
		}
		case D_DONATE_VIP_PLATIN: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0..3: {
					new price_vip[] = {80,150,290,570};
					new vip_day[] = {7,15,30,60};
					if(PlayerInfo[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно коштів");
					PlayerInfo[playerid][pVips] = VIP_PLATINA;
					PlayerInfo[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
					PlayerInfo[playerid][pRouble] -= price_vip[listitem];
					UpdatePlayerData(playerid,"pVips",PlayerInfo[playerid][pVips]);
					UpdatePlayerData(playerid,"pVipTime",PlayerInfo[playerid][pVipTime]);
					UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
					SendClientMessage(playerid, CGOLD, "Вітаємо з покупкою V.I.P. Золотой");
				}
				case 4: show_vip(playerid,VIP_PLATINA);
				case 5: {
					if(PlayerInfo[playerid][pVipName] > unix) return ErrorMessage(playerid,"Міняти нік можно раз в 10 днів");
					D(playerid, D_DONATE_CHANGENAME_2, DSI, ""YELLOW"Донат", "{f6f6d9}Зміна ігрового імені\n\n"W"Введіть нове ігрове ім'я:", "Змінити", "Назад");
				}
			}
		}
		case D_DONATE_VIP_ECSCLUSIVE: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0..3: {
					new price_vip[] = {90,170,320,620};
					new vip_day[] = {7,15,30,60};
					if(PlayerInfo[playerid][pRouble] < price_vip[listitem]) return ErrorMessage(playerid,"Недостаточно коштів");
					PlayerInfo[playerid][pVips] = VIP_ECSCLUSIVE;
					PlayerInfo[playerid][pVipTime] = (unix + 86400 * vip_day[listitem]);
					PlayerInfo[playerid][pRouble] -= price_vip[listitem];
					UpdatePlayerData(playerid,"pVips",PlayerInfo[playerid][pVips]);
					UpdatePlayerData(playerid,"pVipTime",PlayerInfo[playerid][pVipTime]);
					UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
					SendClientMessage(playerid, CGOLD, "Вітаємо з покупкою V.I.P. Платиновый");
				}
				case 4: show_vip(playerid,VIP_ECSCLUSIVE);
				case 5: {
					if(PlayerInfo[playerid][pVipName] > unix) return ErrorMessage(playerid,"Менять ник можно раз в 5 днів");
					D(playerid, D_DONATE_CHANGENAME_2, DSI, ""YELLOW"Донат", "{f6f6d9}Зміна ігрового імені\n\n"W"Введіть нове ігрове ім'я:", "Змінити", "Назад");
				}
			}
		}
		case D_DONATE_VIP_FOREVER: {
			if(!response) return pc_cmd_donate(playerid);
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pRouble] < 2000) return ErrorMessage(playerid,"Недостаточно коштів");
					PlayerInfo[playerid][pVips] = VIP_FOREVER;
					PlayerInfo[playerid][pVipTime] = (unix + 86400 * 90);
					PlayerInfo[playerid][pRouble] -= 2000;
					UpdatePlayerData(playerid,"pVips",PlayerInfo[playerid][pVips]);
					UpdatePlayerData(playerid,"pVipTime",PlayerInfo[playerid][pVipTime]);
					UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
					SendClientMessage(playerid, CGOLD, "Вітаємо з покупкою V.I.P. Екстра");
				}
				case 1: show_vip(playerid,VIP_FOREVER);
				case 2: {
					if(PlayerInfo[playerid][pVipName] > unix) return ErrorMessage(playerid,"Змінювати нік можно раз в 3 дні");
					D(playerid, D_DONATE_CHANGENAME_2, DSI, ""YELLOW"Донат", "{f6f6d9}Зміна ігрового імені\n\n"W"Введіт нове ігрове ім'я:", "Змінити", "Назад");
				}
			}
		}
		case D_DONATE_POINT: {
			if(!response) return pc_cmd_donate(playerid);
			if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
			new moneys;
			if(sscanf(inputtext,"i", moneys)) {
				static const f_str[] = "\
{f6f6d9}Покупка EXP + поинтов в сім'ю\n\n\
"W"На рахунку вашого аккаунта "O"%d "W"B-COIN.\n\
Введіть суму, яку ви хочете отримати:\n\
Курс: "GREEN"1 B-COIN = 10 поинтов";
				new string[sizeof(f_str) +1 + (-2 + 13)];
				format(string, sizeof(string), f_str,PlayerInfo[playerid][pRouble]);
				D(playerid, D_DONATE_POINT, DSI, ""YELLOW"Донат", string, "Купити", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][pRouble] < moneys) {
				static const f_str[] = "\
{f6f6d9}Покупка EXP + поинтов в сім'ю\n\n\
"W"На рахунку вашого аккаунта "O"%d "W"B-COIN.\n\
Введіть суму, яку ви хочете отримати:\n\
Курс: "GREEN"1 B-COIN = 10 поинтов\n\
\n"NO"*{f6f6d9} Недостаточно коштів";
				new string[sizeof(f_str) +1 + (-2 + 13)];
				format(string, sizeof(string), f_str,PlayerInfo[playerid][pRouble]);
				D(playerid, D_DONATE_POINT, DSI, ""YELLOW"Донат", string, "Купити", "Назад");
				return 1;
			}
			if(moneys > 10000 || moneys < 1) return ErrorMessage(playerid, "От 1 до 10000");
			reputation_family(PlayerInfo[playerid][pFamily]-1,10*moneys);
			SendClientMessage(playerid, CGOLD, "Операция успішно произведена");
			PlayerInfo[playerid][pRouble] -= moneys;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);

			new string[128];
	
			format(string,sizeof(string),"[!] %s %s: поповнив рахунок сім'ї(EXP+Поінти) на %d",GetFamName(PlayerInfo[playerid][pFamily]-1,PlayerInfo[playerid][pFamRank]),player_name[playerid],10*moneys);
			FamMSG(PlayerInfo[playerid][pFamily],string);
			return 1;
		}
		case D_DONATE_CONVERT: {
			if(!response) return pc_cmd_donate(playerid);
			new moneys;
			if(sscanf(inputtext,"i", moneys)) {
				static const f_str[] = "\
{f6f6d9}Купівля ігрової валюти\n\n\
"W"На рахунку вашого аккаунта "O"%d "W"B-COIN.\n\
Введіть суму, яку ви хочете отримати:\n\
Курс: "GREEN"1 B-COIN = $3000";
				new string[sizeof(f_str) +1 + (-2 + 13)];
				format(string, sizeof(string), f_str, PlayerInfo[playerid][pRouble]);
				D(playerid, D_DONATE_CONVERT, DSI, ""YELLOW"Донат", string, "Купити", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][pRouble] < moneys) {
				static const f_str[] = "\
{f6f6d9}Покупка ігрової валюти\n\n\
"W"На рахунку вашого аккаунта "O"%d "W"B-COIN.\n\
Введіть суму, яка ви хочете отримати:\n\
Курс: "GREEN"1 B-COIN = $3000\n\
\n"NO"*{f6f6d9} Недостаточно коштів";
				new string[sizeof(f_str) +1 + (-2 + 13)];
				format(string, sizeof(string), f_str, PlayerInfo[playerid][pRouble]);
				D(playerid, D_DONATE_CONVERT, DSI, ""YELLOW"Донат", string, "Купити", "Назад");
				return 1;
			}
			if(moneys > 10000 || moneys < 1) return ErrorMessage(playerid, "Від 1 до 10000");
			GiveMoney(playerid,moneys * 3000,"донат конверт");
			SendClientMessage(playerid, CGOLD, "Операция успішно виконана. Ваш рахунок поповнений");
			PlayerInfo[playerid][pRouble] -= moneys;
			UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
			return 1;
		}
		case D_DONATE_CHANGENAME: {
			if(!response) return pc_cmd_donate(playerid);
			if(PlayerInfo[playerid][pRouble] < 20) return D(playerid, D_DONATE_CHANGENAME, DSI, ""YELLOW"Донат", "{f6f6d9}Зміна ігрового імені\n\n"W"Введіть нове ігрове ім'я:\nВартість: "GREEN"20 B-COIN\n\n"NO"*{f6f6d9} Недостаточно коштів", "Змінити", "Назад");
			if(!strlen(inputtext) || IsTextInvalid(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 20 || !IsARPName(inputtext) || strfind(inputtext, " ") != -1) return D(playerid, D_DONATE_CHANGENAME, DSI, ""YELLOW"Донат", "{f6f6d9}Зміна ігрового імені\n\n"W"Введіть нове ігрове ім'я:\nВартість: "GREEN"20 B-COIN\n\n"NO"*{f6f6d9} Не коректний формат ігрового імені", "Змінити", "Назад");
			SetPVarString(playerid,"WantNickChange", inputtext);
			new query[128];
			format(query,sizeof(query), "SELECT `Name` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", inputtext);
			mysql_tquery(connects, query, "GrandChangeName", "d", playerid);
			return 1;
		}
		case D_DONATE_CHANGENAME_2: {
			if(!response) return pc_cmd_donate(playerid);
			if(!strlen(inputtext) || IsTextInvalid(inputtext) || strlen(inputtext) < 6 || strlen(inputtext) > 20 || !IsARPName(inputtext) || strfind(inputtext, " ") != -1) return D(playerid, D_DONATE_CHANGENAME_2, DSI, ""YELLOW"Донат", "{f6f6d9}Зміна ігрового імені\n\n"W"Введіть нове ігрове ім'я:\n\n"NO"*{f6f6d9} Не коректний формат ігрового імені", "Змінити", "Назад");
			SetPVarString(playerid,"WantNickChange", inputtext);
			new query[128];
			format(query,sizeof(query), "SELECT `Name` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", inputtext);
			mysql_tquery(connects, query, "GrandChangeName2", "d", playerid);
			return 1;
		}
		case D_DJMAKE: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 15) {
				D(playerid,D_DJMAKE,DSI, ""YELLOW"Введіть ник DJ","\n\n"W"Введіть ник DJ:\n\n\
																Мінімальна кількість символів: "YELLOW"3\n\
																"W"Максимальна кількість символів: "YELLOW"15","Змінити","Відміна");
				return true;
			}
			new query[128], string[100];
			new iddj = 	GetPVarInt(playerid, "makeDJ");
			mysql_format(connects, query, sizeof(query), "INSERT INTO `rjlist` (`pid`, `lvl`, `nick`) VALUES ('%d', '1', '%e')", PlayerInfo[iddj][pID],inputtext);
 			mysql_tquery(connects, query, "", "");

			format(string, sizeof(string), "%s успішно добавлен в список DJ под ником %s", player_name[iddj],inputtext);
			SendOk(playerid, string);
			format(string, sizeof(string), "[DJ]"W" %s(DJ %s) добавив в команду %s (DJ %s)",player_name[playerid],DJname[playerid],player_name[iddj],inputtext);
			SendDJMessage(COLOR_YELLOW, string);
		}
		case D_SELL_SIM: {
			if(response) {
				new sell_sim_id = GetPVarInt(playerid, "sim_id_sell")-1;
				new sell_sim_sum = GetPVarInt(playerid, "sim_summ");
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
				if(!IsPlayerConnected(sell_sim_id)) return ErrorMessage(playerid,"Гравець который хотел продати Вам SIM-карту оффлайн");
				if(PlayerInfo[playerid][pCash] < sell_sim_sum) {
					ErrorMessage(playerid,"У вас немає столько грошей");
					SendOk(sell_sim_id,"У покупця недостаточно коштів");
					return 1;
				}
				new string[128];
				format(string, sizeof(string), "Ви приобрели SIM-карту у "YELLOW"%s {f6f6d9}за "ORANGE"$%i", player_name[sell_sim_id],sell_sim_sum);
				SendUse(playerid, string);
				format(string, sizeof(string), ""YELLOW"%s {f6f6d9}купил у Вас SIM-карту за "ORANGE"$%i", player_name[playerid],sell_sim_sum);
				SendUse(sell_sim_id, string);
				
				string[0] = EOS;
				format(string,64,"продал симку %s",player_name[playerid]);
				GiveMoney(sell_sim_id, sell_sim_sum, string);
				string[0] = EOS;
				format(string,64,"купил симку у %s",player_name[sell_sim_id]);
				GiveMoney(playerid, -sell_sim_sum, string);

				PlayerInfo[playerid][pPhone] = PlayerInfo[sell_sim_id][pPhone];
				PlayerInfo[sell_sim_id][pPhone] = 0;
				UpdatePlayerData(playerid,"pPhone",PlayerInfo[playerid][pPhone]);
				UpdatePlayerData(sell_sim_id,"pPhone",PlayerInfo[sell_sim_id][pPhone]);
				format(string, sizeof(string), "Ваш новый номер: "W"%i",PlayerInfo[playerid][pPhone]);
				SendClientMessage(playerid, CGOLD, string);
			}
			else {
				SendOk(GetPVarInt(playerid, "sim_id_sell")-1, "Гравець отказался от покупки SIM-карти");
				SendOk(playerid, "Ви отказались от покупки SIM-карти");
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
			}
		}
		case D_AMMOSG: { //тир
			if(!response) return 1;
			CreateShootingBox(playerid);
		}
		case D_BIZZ_TAXI_INFO: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][bizz_work];
			switch(listitem) {
				case 0: showstattaxi(playerid,bizz);
				case 1: {
					if(PlayerInfo[playerid][bizz_status] == 6) return ErrorMessage(playerid,"Ви не можете уволиться из таксопарка");
					PlayerInfo[playerid][bizz_work] = 0;
					UpdatePlayerData(playerid,"bizz_work",0);
					PlayerInfo[playerid][bizz_status] = 0;
					UpdatePlayerData(playerid,"bizz_status",0);
					SendOk(playerid,"Ви уволились из таксопарка");
				}
			}
		}
		case D_BIZZ_TAXI: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][bizz_work];
			dialog_taxi(playerid,bizz,listitem);
		}
		case D_BIZZ_TAXI_ZAM: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][bizz_work];
			switch(listitem) {
				case 0: dialog_taxi(playerid,bizz,0);
				case 1: dialog_taxi(playerid,bizz,10);
				case 2: dialog_taxi(playerid,bizz,11);
			}
		}
		case D_BIZZ_TAXI_CAR: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(!bizz) return 1;
			SetPVarInt(playerid,"func_car_taxi",listitem);
			switch(FuncBizz[bizz+1][funcbCar][listitem]) {
				case 0: {
					new string[328],str[128];
					if(gBusiness[bizz][bizzType] == 11) {
						strcat(string,"№. Модель\tКласс\tВартість\n");
						for(new i; i < sizeof(taxi_car); i ++) {
							format(str, sizeof(str), ""ORANGE"%d."W" %s\t%s\t%d\n", i+1,gTransport[taxi_car[i][0]-400][trName],taxi_class[taxi_car[i][1]],gTransport[taxi_car[i][0]-400][trPrice]),strcat(string,str);
						}
					}
					else if(gBusiness[bizz][bizzType] == 14) {
						strcat(string,"№. Модель\tГрузоподъемность\tВартість\n");
						for(new i; i < sizeof(tk_car); i ++) {
							format(str, sizeof(str), ""ORANGE"%d."W" %s\t%d\t%d\n", i+1,gTransport[tk_car[i][0]-400][trName],tk_car[i][1],gTransport[tk_car[i][0]-400][trPrice]),strcat(string,str);
						}
					}
					D(playerid,D_BIZZ_TAXI_CAR_2,DSTH,"Покупка машини",string,"Купити","Відміна");
				}
				default: {
					if(gBusiness[bizz][bizzType] == 11) {
						static const f_str[] = ""W"Ви збираєтеся продати автомобіль "YELLOW"%s\n\n"YELLOW"Ви дійсно хочете продати данный автомобіль за "GREEN"$%d?";
						new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
						format(string,sizeof(string),f_str,gTransport[FuncBizz[bizz+1][funcbCar][listitem]-400][trName],gTransport[FuncBizz[bizz+1][funcbCar][listitem]-400][trPrice]/2);
						D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""YELLOW"Продажа машини",string,"Так","Відміна");
					}
					else if(gBusiness[bizz][bizzType] == 14) {
						static const f_str[] = ""W"Ви збираєтеся продати автомобіль "YELLOW"%s\n\n"YELLOW"Ви дійсно хочете продати данный автомобіль за "GREEN"$%d?";
						new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
						format(string,sizeof(string),f_str,gTransport[FuncBizz[bizz+1][funcbCar][listitem]-400][trName],gTransport[FuncBizz[bizz+1][funcbCar][listitem]-400][trPrice]/2);
						D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""YELLOW"Продажа машини",string,"Так","Відміна");
					}
				}
			}
		}
		case D_BIZZ_TAXI_CAR_2: {
			if(!response) return DeletePVar(playerid,"func_car_taxi");
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(!bizz) return 1;
			SetPVarInt(playerid,"func_car_taxi_2",listitem);
			new id_slot = GetPVarInt(playerid,"func_car_taxi");
			new id_car = GetPVarInt(playerid,"func_car_taxi_2");
			if(FuncBizz[bizz+1][funcbCar][id_slot] != 0) return ErrorMessage(playerid,"На данном слоте уже есть автомобіль");
			if(gBusiness[bizz][bizzType] == 11) {
				static const f_str[] = ""W"Ви собираетесь приобрести автомобіль "YELLOW"%s "YELLOW"[%s]\n\n"YELLOW"Ви дійсно хочете Купити данный автомобіль за "GREEN"$%d?";
				new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
				format(string,sizeof(string),f_str,gTransport[taxi_car[id_car][0]-400][trName],taxi_class[taxi_car[id_car][1]],gTransport[taxi_car[id_car][0]-400][trPrice]);
				D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""YELLOW"Покупка машини",string,"Так","Відміна");
			}
			else if(gBusiness[bizz][bizzType] == 14) {
				static const f_str[] = ""W"Ви собираетесь приобрести автомобіль "YELLOW"%s "YELLOW"[%d]\n\n"YELLOW"Ви дійсно хочете Купити данный автомобіль за "GREEN"$%d?";
				new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 9) + (-2 + 10)];
				format(string,sizeof(string),f_str,gTransport[tk_car[id_car][0]-400][trName],tk_car[id_car][1],gTransport[tk_car[id_car][0]-400][trPrice]);
				D(playerid,D_BIZZ_TAXI_CAR_3,DSM, ""YELLOW"Покупка машини",string,"Так","Відміна");
			}
		}
		case D_BIZZ_TAXI_CAR_3: {
			if(!response) return DeletePVar(playerid,"func_car_taxi"),DeletePVar(playerid,"func_car_taxi_2");
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(!bizz) return 1;
			new id_slot = GetPVarInt(playerid,"func_car_taxi");
			new id_car = GetPVarInt(playerid,"func_car_taxi_2");
			DeletePVar(playerid,"func_car_taxi");
			DeletePVar(playerid,"func_car_taxi_2");
			switch(FuncBizz[bizz+1][funcbCar][id_slot]) {
				case 0: {
					if(gBusiness[bizz][bizzType] == 11) {
						if(gBusiness[bizz][bizzBank] < gTransport[taxi_car[id_car][0]-400][trPrice]) return ErrorMessage(playerid,"В кассе таксопарка недостаточно коштів для покупки");
						FuncBizz[bizz+1][funcbCar][id_slot] = taxi_car[id_car][0];
						gBusiness[bizz][bizzBank] -= gTransport[taxi_car[id_car][0]-400][trPrice];
						UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);
					}
					if(gBusiness[bizz][bizzType] == 14) {
						if(gBusiness[bizz][bizzBank] < gTransport[tk_car[id_car][0]-400][trPrice]) return ErrorMessage(playerid,"В кассе транспортной компании недостаточно коштів для покупки");
						FuncBizz[bizz+1][funcbCar][id_slot] = tk_car[id_car][0];
						gBusiness[bizz][bizzBank] -= gTransport[tk_car[id_car][0]-400][trPrice];
						UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);
					}
					creare_funccar(bizz+1,id_slot);
					SendOk(playerid,"Автомобіль успішно куплен");
				}
				default: {
					if(gBusiness[bizz][bizzType] == 11) {
						gBusiness[bizz][bizzBank] += gTransport[FuncBizz[bizz+1][funcbCar][id_slot]-400][trPrice]/2;
						UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);

						DestroyDynamicObject(tuningtaxi[FuncBizz[bizz+1][funcbSlot]][id_slot]);
						DestroyDynamicObject(tuningtaxi_1[FuncBizz[bizz+1][funcbSlot]][id_slot]);
						DestroyDynamicObject(tuningtaxi_shash[FuncBizz[bizz+1][funcbSlot]][id_slot]);
						DestroyDynamicObject(tuningtaxi_text[FuncBizz[bizz+1][funcbSlot]][id_slot]);
						DestroyDynamicObject(tuningtaxi_text_1[FuncBizz[bizz+1][funcbSlot]][id_slot]);
					}
					if(gBusiness[bizz][bizzType] == 14) {
						gBusiness[bizz][bizzBank] += gTransport[FuncBizz[bizz+1][funcbCar][id_slot]-400][trPrice]/2;
						UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);
					}
					FuncBizz[bizz+1][funcbCar][id_slot] = 0;
					A_DestroyVehicle(FuncBizz[bizz+1][funcbCars][id_slot]);
					FuncBizz[bizz+1][funcbCars][id_slot] = INVALID_VEHICLE_ID;
					SendOk(playerid,"Автомобіль успішно продано");
				}
			}
			save_funcar(bizz+1);
		}
		case D_BIZZ_TAXI_NAME: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][pBusiness];
			if(!bizz) return 1;
			if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 20) {
				if(gBusiness[bizz][bizzType] == 11) {
					D(playerid,D_BIZZ_TAXI_NAME,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть нову назву таксопарка:\n\n\
																	Мінімальна кількість символів: "YELLOW"3\n\
																	"W"Максимальна кількість символів: "YELLOW"20","Змінити","Відміна");
					return true;
				}
				else if(gBusiness[bizz][bizzType] == 14){
					D(playerid,D_BIZZ_TAXI_NAME,DSI, ""YELLOW"Назва транспортної компанії","\n\n"W"Введіть нову назву транспортної компанії:\n\n\
														Мінімальна кількість символів: "YELLOW"3\n\
														"W"Максимальна кількість символів: "YELLOW"20","Змінити","Відміна");
					return true;
				}
				else if(gBusiness[bizz][bizzType] == 15){
					D(playerid,D_BIZZ_TAXI_NAME,DSI, ""YELLOW"Назва банківського відділення","\n\n"W"Введіть нову назву банківського відділення:\n\n\
														Мінімальна кількість символів: "YELLOW"3\n\
														"W"Максимальна кількість символів: "YELLOW"20","Змінити","Відміна");
					return true;
				}
			}
			if(is_text_invalid(inputtext)) return ErrorMessage(playerid,"Присутствуют запрещенные символы");
			strmid(FuncBizz[bizz][funcbName],inputtext, 0, strlen(inputtext));
			new query[128];
			format(query,sizeof(query),"UPDATE `business_func` SET `name` = '%s' WHERE `bizzID` = '%i'",FuncBizz[bizz][funcbName],bizz);
 			mysql_tquery(connects, query, "", "");

			new string[54];
			format(string,sizeof(string),"{%s}%s",color_td[FuncBizz[bizz][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
			SetDynamicObjectMaterialText(biz_text[FuncBizz[bizz][funcbSlot]], 0, string, 130, "Segoe Script", 50, 1, 0xFF000000, 0x00000000, 1);
			UpdateBusinessText(bizz-1);
			if(gBusiness[bizz][bizzType] == 15) {
				static const f_str[] = "Новое назва Вашого банківського відділення: {%s}%s";
				new str[sizeof(f_str) +1 + (-2 + 21) + (-2 + 20)];
				format(str,sizeof(str),f_str,color_td[FuncBizz[FuncBizz[bizz][funcbID]][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
				SendUse(playerid,str);
				return 1;
			}
			else {
				static const f_str[] = "Новое назва %s: {%s}%s";
				new str[sizeof(f_str) +1 + (-2 + 21) + (-2 + 21) + (-2 + 20)];
				format(str,sizeof(str),f_str,(gBusiness[bizz][bizzType] == 11) ? ("Вашого таксопарка") : ("Вашої транспортної компанії"),color_td[FuncBizz[FuncBizz[bizz][funcbID]][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
				SendUse(playerid,str);
			}
		}
		case D_BIZZ_TAXI_NAMECAR: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(!bizz) return 1;
			if(!strlen(inputtext) || strlen(inputtext) < 3 || strlen(inputtext) > 12) {
				D(playerid,D_BIZZ_TAXI_NAMECAR,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть нову назву на автомобілях:\n\n\
																Мінімальна кількість символів: "YELLOW"3\n\
																"W"Максимальна кількість символів: "YELLOW"12","Змінити","Відміна");
				return true;
			}
			if(is_text_invalid(inputtext)) return ErrorMessage(playerid,"Присутствуют запрещенные символы");
			strmid(FuncBizz[bizz+1][funcbNameCar],inputtext, 0, strlen(inputtext));
			new query[128];
			format(query,sizeof(query),"UPDATE `business_func` SET `name_car` = '%s' WHERE `bizzID` = '%i'",FuncBizz[bizz+1][funcbNameCar],bizz+1);
 			mysql_tquery(connects, query, "", "");

			update_bfunc(2,bizz+1,-1);
			static const f_str[] = "Новый текст на автомобілях таксі: "ORANGE"%s";
			new string[sizeof(f_str) +1 + (-2 + 13)];
			format(string,sizeof(string),f_str,FuncBizz[bizz+1][funcbNameCar]);
			SendUse(playerid,string);
		}
		case D_BIZZ_TAXI_TARIF: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			switch(listitem) {
				case 0: D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть тариф для класса "YELLOW"Эконом\n\n\
"W"Доступный диапазон: от "GREEN"$50"W" до "GREEN"$200"W" за 1 км.","Змінити","Відміна");
				case 1: D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть тариф для класса "YELLOW"Комфорт\n\n\
"W"Доступный диапазон: от "GREEN"$100"W" до "GREEN"$400"W" за 1 км.","Змінити","Відміна");
				case 2: D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть тариф для класса "YELLOW"Микроавтобус\n\n\
"W"Доступный диапазон: от "GREEN"$100"W" до "GREEN"$400"W" за 1 км.","Змінити","Відміна");
				case 3: D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть тариф для класса "YELLOW"Бізнес\n\n\
"W"Доступный диапазон: от "GREEN"$150"W" до "GREEN"$600"W" за 1 км.","Змінити","Відміна");
			}
			SetPVarInt(playerid,"select_tarif",listitem+1);
		}
		case D_BIZZ_TAXI_TARIF_2: {
			if(!response) return DeletePVar(playerid,"select_tarif");
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			new list = GetPVarInt(playerid,"select_tarif")-1;
			new tarif = strval(inputtext);
			switch(list) {
				case 0: {
					if(tarif < 50 || tarif > 200) {
						D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть тариф для класса "YELLOW"Эконом\n\n\
																"W"Доступный диапазон: от "GREEN"$50"W" до "GREEN"$200"W" за 1 км.","Змінити","Відміна");
						return 1;
					}
				}
				case 1: {
					if(tarif < 100 || tarif > 400) {
						D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть тариф для класса "YELLOW"Комфорт\n\n\
																"W"Доступный диапазон: от "GREEN"$100"W" до "GREEN"$400"W" за 1 км.","Змінити","Відміна");
						return 1;
					}
				}
				case 2: {
					if(tarif < 100 || tarif > 400) {
						D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть тариф для класса "YELLOW"Микроавтобус\n\n\
																"W"Доступный диапазон: от "GREEN"$100"W" до "GREEN"$400"W" за 1 км.","Змінити","Відміна");
						return 1;
					}
				}
				case 3: {
					if(tarif < 150 || tarif > 600) {
						D(playerid,D_BIZZ_TAXI_TARIF_2,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть тариф для класса "YELLOW"Бізнес\n\n\
																"W"Доступный диапазон: от "GREEN"$150"W" до "GREEN"$600"W" за 1 км.","Змінити","Відміна");
						return 1;
					}
				}
			}
			FuncBizz[PlayerInfo[playerid][pBusiness]][funcbTarif][list] = tarif;
			save_funtarif(PlayerInfo[playerid][pBusiness]);
			static const f_str[] =  "Ви установили новый тариф "ORANGE"%d{f6f6d9} для класса "YELLOW"%s";
			new str[sizeof(f_str) +1 + (-2 + 4) + (-2 + 24)];
			format(str,sizeof(str),f_str,tarif,taxi_class[list]);
			SendUse(playerid,str);

			static const f_string[] =  "Руководитель таксопарка установил тариф "GREEN"%d"YELLOW" для класса %s";
			new string[sizeof(f_string) +1 + (-2 + 4) + (-2 + 24)];
			format(string,sizeof(string),f_string,tarif,taxi_class[list]);
			BizzMSG(PlayerInfo[playerid][pBusiness],COLOR_YELLOW,string);
		}
		case D_BIZZ_TAXI_PERCENT: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			new percent = strval(inputtext);
			if(percent < 1 || percent > 50) {
				if(gBusiness[bizz][bizzType] == 11) {
					D(playerid,D_BIZZ_TAXI_PERCENT,DSI, ""YELLOW"Процент от прибыли","\n\n"W"Введіть процент взымаемый от прибыли таксістів Вашого таксопарка\n\n\
Доступный диапазон: от "YELLOW"1% "W"до "YELLOW"50%","Змінити","Відміна");
					return 1;
				}
				else if(gBusiness[bizz][bizzType] == 14) {
					D(playerid,D_BIZZ_TAXI_PERCENT,DSI, ""YELLOW"Процент от прибыли","\n\n"W"Введіть процент взымаемый от прибыли работников вашій транспортной компании\n\n\
Доступный диапазон: от "YELLOW"1% "W"до "YELLOW"50%","Змінити","Відміна");
					return 1;
				}
			}
			FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent] = percent;
			UpdateFuncBizzData(PlayerInfo[playerid][pBusiness],"percent",FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent]);
			static const f_string[] = "Руководитель %s установил процент от прибыли в розмірі: %d процент(а)";
			new str[sizeof(f_string) +1 + (-2 + 20) + (-2 + 4)];
			format(str,sizeof(str),f_string,(gBusiness[bizz][bizzType] == 11) ? ("таксопарка") : ("транспортной компании"),FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent]);
			BizzMSG(PlayerInfo[playerid][pBusiness],COLOR_YELLOW,str);
		}
		case D_BIZZ_BO_PERCENT: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			switch(listitem) {
				case 0: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.1;
				case 1: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.2;
				case 2: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.3;
				case 3: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.4;
				case 4: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.5;
				case 5: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.6;
				case 6: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.7;
				case 7: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.8;
				case 8: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 0.9;
				case 9: FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2] = 1.0;
			}
			new query[128];
			format(query,sizeof(query),"UPDATE `business_func` SET `percent2` = '%.1f' WHERE `bizzID` = '%d'",FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2],PlayerInfo[playerid][pBusiness]);
			mysql_tquery(connects, query,"","");
			static const f_str[] = "Ви изменили процент комиссий переводов: "ORANGE"%.1f процент(а)";
			new string[sizeof(f_str) +1 + (-2 + 4)];
			format(string,sizeof(string),f_str,FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent2]);
			SendUse(playerid,string);
		}
		case D_BIZZ_BO_PERCENT_2: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			new percent = strval(inputtext);
			if(percent < 1 || percent > 5) {
				D(playerid,D_BIZZ_BO_PERCENT_2,DSI, ""YELLOW"Комісія за оплату недвижимости","\n\n"W"Введіть процент комиссии взымаемый с человека во время опаты недвижимости\n\n\
Доступный диапазон: от "YELLOW"1% "W"до "YELLOW"5%","Змінити","Відміна");
				return 1;
			}
			FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent] = percent;
			UpdateFuncBizzData(PlayerInfo[playerid][pBusiness],"percent",FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent]);
			static const f_str[] = "Ви установили новый процент комиссии за оплату недвижимости: "ORANGE"%d процент(а)";
			new string[sizeof(f_str) +1 + (-2 + 4)];
			format(string,sizeof(string),f_str,FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent]);
			SendUse(playerid,string);
		}
		case D_BIZZ_BO_PERCENT_3: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pBusiness]) return 1;
			new percent = strval(inputtext);
			if(percent < 1 || percent > 5) {
				D(playerid,D_BIZZ_BO_PERCENT_3,DSI, ""YELLOW"Комісія за пользование банкоматом","\n\n"W"Введіть процент комиссии взымаемый с человека во время пользования банкоматом\n\n\
Доступный диапазон: от "YELLOW"1% "W"до "YELLOW"5%","Змінити","Відміна");
				return 1;
			}
			FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent3] = percent;
			UpdateFuncBizzData(PlayerInfo[playerid][pBusiness],"percent3",FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent3]);
			static const f_str[] = "Ви установили новый процент комиссии за пользование банкоматом: "ORANGE"%d процент(а)";
			new string[sizeof(f_str) +1 + (-2 + 4)];
			format(string,sizeof(string),f_str,FuncBizz[PlayerInfo[playerid][pBusiness]][funcbPercent3]);
			SendUse(playerid,string);
		}
		case D_BIZZ_TAXI_PHONE: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pBusiness]) return 1;
		    if(isNumeric(inputtext) || strval(inputtext) < 1000 || strval(inputtext) > 9900) {
				static const f_str[] = "\n\n"W"Текущий номер Вашого таксопарка: "YELLOW"%d\n\n\
"W"Введіть желаемый новый номер телефона для Вашого таксопарка\n\
Доступный диапазон: от "YELLOW"1000"W" до "YELLOW"9900\n\
"W"Вартість номера: "GREEN"$50000\n\
"W"Вартість номера с 4 одинаоквыми числами: "GREEN"$300000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 5)];
				format(string,sizeof(string),f_str,FuncBizz[PlayerInfo[playerid][pBusiness]][funcbNum]);
				D(playerid,D_BIZZ_TAXI_PHONE,DSI, ""YELLOW"Купівля номера телефону",string,"Купити","Відміна");
				return 1;
			}
			new query[128];
			format(query,sizeof(query),"SELECT `number` FROM `business_func` WHERE `number` = '%i'",strval(inputtext));
			mysql_tquery(connects, query, "sim_bizz", "dd", playerid, strval(inputtext));
		}
		case D_BIZZ_TAXI_MEM: {
			if(!response) return 1;
			GetWord(inputtext[3],0, select_member[playerid], strlen(inputtext[3])+1);
			new id = GetPlayerID(select_member[playerid]);
			new names[24],status,query[128];
			format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
			new Cache:result = mysql_query(connects, query);
			new rows = cache_num_rows();
			if(rows > 0) {
				cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
				cache_get_value_name_int(0, "bizz_status",status);
				if(PlayerInfo[playerid][bizz_status] == 6 || PlayerInfo[playerid][bizz_status] == 5) {
					if(id == playerid) return ErrorMessage(playerid,"Неможливо применить на себе");
					if(status == 6) return ErrorMessage(playerid,"Неможливо применить на Руководителе");
					if(PlayerInfo[playerid][bizz_status] == 5) {
						if(status == 5 || status == 6) return ErrorMessage(playerid,"Неможливо применить на Руководителе");
					}
					static const f_str[] = "\t%s\n\
"YELLOW"1. "W"Изменить доступ:\n\
\t%s- Эконом\n\
\t%s- Комфорт\n\
\t%s- Микроавтобус\n\
\t%s- бізнес\n\
\t%s- Управляющий\n\
"YELLOW"2. "NO"Уволить";
					new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
					format(str,sizeof(str),f_str,names,(status == 1) ? (""YELLOW"") : (""W""),(status == 2) ? (""YELLOW"") : (""W""),(status == 3) ? (""YELLOW"") : (""W""),(status == 4) ? (""YELLOW"") : (""W""),(status == 5) ? (""YELLOW"") : (""W""));
					D(playerid,D_BIZZ_TAXI_MEM_2,DSL,""YELLOW"Сотрудник",str,"Далі","Закрити");
				}
			}
			else ErrorMessage(playerid, "Сотрудник не знайдений");
			cache_delete(result);
		}
		case D_BIZZ_TAXI_MEM_2: {
			if(!response) return 1;
			new id = GetPlayerID(select_member[playerid]);
			if(PlayerInfo[playerid][bizz_status] == 5 || PlayerInfo[playerid][bizz_status] == 6) {
				switch(listitem) {
					case 2..6: {
						if(id == playerid) return ErrorMessage(playerid,"Неможливо применить на себе");
						if(IsPlayerConnected(id)) {
							PlayerInfo[id][bizz_status] = listitem-1;
							UpdatePlayerData(id,"bizz_status",PlayerInfo[id][bizz_status]);
						}
						else {
							new query[350];
							format(query,sizeof(query), "UPDATE `accounts` SET `bizz_status` = '%d' WHERE `Name` = '%s' LIMIT 1",listitem-1,select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Ви изменили доступ к автомобілям таксопарка для сотрудника "ORANGE"%s{f6f6d9} на "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
						format(string,sizeof(string),f_str,select_member[playerid],taxi_class[listitem-2]);
						SendUse(playerid,string);
						SetTimerEx("members_funcbizz", 150, 0, "ii", playerid,PlayerInfo[playerid][bizz_work]);
						return 1;
					}
					case 7: {
						if(id == playerid) return ErrorMessage(playerid,"Неможливо применить на себе");
						if(IsPlayerConnected(id)) {
							if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PlayerInfo[id][bizz_work]) RemovePlayerFromVehicleAC(id);
							PlayerInfo[id][bizz_work] = 0;
							UpdatePlayerData(id,"bizz_work",0);
							SendOk(id,"Управляющий таксопарка уволил вас из предприятия");
						}
						else {
							new query[350];
							format(query,sizeof(query), "UPDATE `accounts` SET `bizz_work` = '0',`bizz_cash` = '0',`bizz_status` = '0' WHERE `Name` = '%s' LIMIT 1",select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Ви уволили сотрудника таксопарка "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
						format(string,sizeof(string),f_str,select_member[playerid]);
						SendUse(playerid,string);
						SetTimerEx("members_funcbizz", 150, 0, "ii", playerid,PlayerInfo[playerid][bizz_work]);
						return 1;
					}
					default: {
						new names[24],status,query[128];
						format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
							cache_get_value_name_int(0, "bizz_status",status);
							if(PlayerInfo[playerid][bizz_status] == 6) {
								if(id == playerid) return ErrorMessage(playerid,"Неможливо применить на себе");
								if(status == 6 || status == 5) return ErrorMessage(playerid,"Неможливо применить на Руководителе");
								static const f_str[] = "\t%s\n\
"YELLOW"1. "W"Изменить доступ:\n\
\t%s- Эконом\n\
\t%s- Комфорт\n\
\t%s- Микроавтобус\n\
\t%s- бізнес\n\
\t%s- Управляющий\n\
"YELLOW"2. "NO"Уволить";
								new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
								format(str,sizeof(str),f_str,names,(status == 1) ? (""YELLOW"") : (""W""),(status == 2) ? (""YELLOW"") : (""W""),(status == 3) ? (""YELLOW"") : (""W""),(status == 4) ? (""YELLOW"") : (""W""),(status == 5) ? (""YELLOW"") : (""W""));
								D(playerid,D_BIZZ_TAXI_MEM_2,DSL,""YELLOW"Сотрудник",str,"Далі","Закрити");
							}
						}
						else ErrorMessage(playerid, "Сотрудник не знайдений");
						cache_delete(result);
						return 1;
					}
				}
			}
			members_funcbizz(playerid,PlayerInfo[playerid][bizz_work]);
		}
		case D_TAXI_CALL: {
			if(!response) return DeletePVar(playerid,"taxi_call_bizz");
			new bizz = GetPVarInt(playerid,"taxi_call_bizz");
			DeletePVar(playerid,"taxi_call_bizz");
			new ids[4];
			if(GetPlayerVirtualWorld(playerid) != 0) return ErrorMessage(playerid,"Для вызова таксі выйдите из помещения");
			if(GetPVarInt(playerid,"taxi_time") > gettime()) return ErrorMessage(playerid,"Ви уже вызвали таксі, попробуйте позже");
			for(new i = GetVehiclePoolSize()+1; --i != 0;) {
				if(!IsValidVehicle(i)) continue;
				if(VehicleInfo[i][vBizz] != bizz) continue;
				if(!IsVehicleOccupied(i)) continue;
				switch(GetVehicleModel(i)) {
					case 426,438: ids[0] ++;
					case 540,550: ids[1] ++;
					case 560,580: ids[3] ++;
					case 483: ids[2] ++;
				}
			}
			if(listitem < 2) return 1;
			if(!ids[listitem-2]) return ErrorMessage(playerid,"Немає свободних таксістів даного класа");
			SendOk(playerid,"Ви викликали таксі, очікуйте підтвердження заказу");

			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(PlayerInfo[i][bizz_work] != bizz) continue;
				if(GetPlayerVirtualWorld(i) != 0) continue;
				static const f_str[] = ""W"%s"YELLOW" вызывает таксі класса "W"%s. "YELLOW"Расстояние: "W"%.2f км";
				new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 12) + (-2 + 6)];
				format(str,sizeof(str),f_str,player_name[playerid],taxi_class[listitem-2],GetDistanceBetweenPlayers(playerid,i));
				SendClientMessage(i,COLOR_YELLOW,str);
				SendClientMessage(i,COLOR_YELLOW,"Введіть "W"/taxilist"YELLOW" для перегляду заказов");
			}
			SetPVarInt(playerid,"taxi_class",listitem-1);
			SetPVarInt(playerid,"taxi_bizz",bizz);
			SetPVarInt(playerid,"taxi_time",gettime()+60);
		}
		case D_TAXIST: {
			if(!response) return 1;
			new id = GetPlayerID(inputtext[3]);
			DeletePVar(id,"taxi_class");
			DeletePVar(id,"taxi_bizz");
			DeletePVar(id,"taxi_time");
			static const f_str[] = "[TAXI] "W"%s"YELLOW" принял Ваш заказ. Автомобіль: "W"%s";
			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 12)];
			format(str,sizeof(str),f_str,player_name[playerid],gTransport[GetVehicleModel(GetPlayerVehicleID(playerid))-400][trName]);
			SendClientMessage(id,COLOR_YELLOW,str);

			static const f_string[] = "[TAXI] "W"%s"YELLOW" принял заказ "W"%s";
			new string[sizeof(f_string) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + MAX_PLAYER_NAME)];
			format(string,sizeof(string),f_string,player_name[playerid],player_name[id]);
			BizzMSG(PlayerInfo[playerid][bizz_work],COLOR_YELLOW,string);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(id, X, Y, Z);
			EnableGPSForPlayer(playerid, X, Y, Z);
		}
		case D_TAXI_COUNT: {
			if(!response) return 1;
			new id = GetPlayerID(inputtext[3]);
			TI[playerid][tTaxiGoing] = true;
			TI[playerid][tTaxiPass] = id;
			TI[playerid][tTaxiStart] = VehicleInfo[GetPlayerVehicleID(playerid)][vDrived];
			SendOk(playerid,"Ви включили рахунокчик");
			SendOk(playerid,""ORANGE"/taxi{f6f6d9} запросить у пассажира місце призначення");
		}
		case D_GPS: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 7) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Розташування найближчого АЗС успішно зазначено у вашому GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
				case 1: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 1) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Розташування найближчої Закусочної успішно відзначено у вашому GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
				case 2: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 2) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Розташування найближчого 24-7 успішно відзначено у вашому GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
				case 3: {
					new max_distance = 100000;
					new id_atm = -1;
					for(new i = 1; i < MAX_ATM; i ++) {
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, ATMData[i][ATM_Pos][0],ATMData[i][ATM_Pos][1],ATMData[i][ATM_Pos][2])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), ATMData[i][ATM_Pos][0],ATMData[i][ATM_Pos][1],ATMData[i][ATM_Pos][2]));
						if(here_distance < max_distance) {
							id_atm = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_atm == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Розташування найближчого банкомату успішно відзначено у вашому GPS");
					EnableGPSForPlayer(playerid,ATMData[id_atm][ATM_Pos][0],ATMData[id_atm][ATM_Pos][1],ATMData[id_atm][ATM_Pos][2]);
					return 1;
				}
				case 4: {
					new max_distance = 100000;
					new id_biz = -1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 5) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]));
						if(here_distance < max_distance) {
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					SendClientMessage(playerid,CGOLD,"Розташування найближчого магазину одягу успішно відзначено у вашому GPS");
					EnableGPSForPlayer(playerid,gBusiness[id_biz][bizzX],gBusiness[id_biz][bizzY],gBusiness[id_biz][bizzZ]);
					return 1;
				}
				case 5: {
					D(playerid,D_GPS_O,DSL,""YELLOW"Громадські місця",""YELLOW"1."W" Автошкола\n\
"YELLOW"2."W" Військомат\n\
"YELLOW"3."W" ЗД Вокзал м. ЛС\n\
"YELLOW"4."W" ЗД Вокзал м. СФ\n\
"YELLOW"5."W" ЗД Вокзал м. ЛВ\n\
"YELLOW"6."W" Церква\n\
"YELLOW"7."W" Казино\n\
"YELLOW"8."W" Ловля риби\n\
"YELLOW"9."W" Спорт-зал\n\
"YELLOW"10."W" Центр розваг","Вибрати","Назад");
					
				}
				case 6: {
					D(playerid,D_GPS_WORK,DSL,""YELLOW"Роботи",""YELLOW"1."W" Яблуневий сад\n\
"YELLOW"2."W" Зброяний завод\n\
"YELLOW"3."W" Нефтезавод\n\
"YELLOW"4."W" Лісопилка\n\
"YELLOW"5."W" Аренда автобусів м. ЛС\n\
"YELLOW"6."W" Аренда автобусів м. СФ\n\
"YELLOW"7."W" Аренда автобусів м. ЛВ\n\
"YELLOW"8."W" Аренда розвозчиків продуктів\n\
"YELLOW"9."W" Аренда розвозчиків топлива\n\
"YELLOW"10."W" Аренда розвозчиків їжі м. ЛС\n\
"YELLOW"11."W" Аренда розвозчиків їжі м. СФ\n\
"YELLOW"12."W" Аренда транспорта механіків м. ЛС №1\n\
"YELLOW"13."W" Аренда транспорта механіків м. ЛС №2\n\
"YELLOW"14."W" Аренда транспорта механіків м. СФ №1\n\
"YELLOW"15."W" Аренда транспорта механіків м. СФ №2\n\
"YELLOW"16."W" Аренда транспорта механіків м. ЛВ №1\n\
"YELLOW"17."W" Аренда транспорта механіків м. ЛВ №2\n\
"YELLOW"18."W" Аренда транспорта для прибирання вулиць\n\
"YELLOW"19."W" Аренда транспорта для скошеня трави","Вибрати","Назад");
				}
				case 7: {
					D(playerid,D_GPS_AUTOSALON,DSL,""YELLOW"Автосалони та тюнінг","\
"YELLOW"1."W" Автосалон [Економ]\n\
"YELLOW"2."W" Автосалон [Стандарт]\n\
"YELLOW"3."W" Автосалон [Спорт]\n\
"YELLOW"4."W" Мотосалон\n\
"YELLOW"5."W" Тюнінг м. ЛС\n\
"YELLOW"6."W" Тюнінг м. СФ\n\
"YELLOW"7."W" Тюнінг м. ЛВ\n\
"YELLOW"8."W" Perfomance Tuning [м. ЛС]","Вибрати","Назад");
				}
				case 8: {
					D(playerid,D_GPS_GOS,DSL,""YELLOW"Державні організації","\
"YELLOW"1."W" Білий дім\n\
"YELLOW"2."W" Мерія\n\
"YELLOW"3."W" Поліцейський відділок м. ЛС\n\
"YELLOW"4."W" Поліцейський відділок м. СФ\n\
"YELLOW"5."W" Поліцейський відділок м. ЛВ\n\
"YELLOW"6."W" Лікарня м. ЛС\n\
"YELLOW"7."W" Лікарня м. СФ\n\
"YELLOW"8."W" Лікарня м. ЛВ\n\
"YELLOW"9."W" ФБР\n\
"YELLOW"10."W" Армія [Сухопутні війська]\n\
"YELLOW"11."W" Армія [Воєно-морський флот]\n\
"YELLOW"12."W" Ліцензери\n\
"YELLOW"13."W" Радіоцентр м. ЛС\n\
"YELLOW"14."W" Радіоцентр м. СФ\n\
"YELLOW"15."W" Радіоцентр м. ЛВ","Вибрати","Назад");
				}
				case 9: {
					D(playerid,D_GPS_NOLEGAL,DSL,""YELLOW"Нелегальні організації","\
"YELLOW"1."W" The Ballas Gang\n\
"YELLOW"2."W" The Vagos Gang\n\
"YELLOW"3."W" The Grove Gang\n\
"YELLOW"4."W" The Aztecas Gang\n\
"YELLOW"5."W" The Rifa Gang\n\
"YELLOW"6."W" Італійська мафія\n\
"YELLOW"7."W" Японська мафія\n\
"YELLOW"8."W" Українська мафія\n\
"YELLOW"9."W" Чорний ринок\n\
"YELLOW"10."W" Магазин зброї [LS]\n\
"YELLOW"11."W" Магазин зброї [SF]\n\
"YELLOW"12."W" Магазин зброї [LV]\n\
"YELLOW"13."W" Поєдинки\n\
"YELLOW"14."W" Пограбування будинків","Вибрати","Назад");
				}
				case 10: {
					D(playerid,D_GPS_BANK,DSL,""YELLOW"Банки","\
"YELLOW"1."W" Банк м. ЛС\n\
"YELLOW"2."W" Банк м. СФ\n\
"YELLOW"3."W" Банк м. ЛВ","Вибрати","Назад");
				}
				case 11: {
					new string[2512];
					new count_ammo = 1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzUpgrade][1] != 1) continue;
						format(string,sizeof(string),"%s"YELLOW"%d."W" %s\n",string,count_ammo,gBusiness[i][bizzName]);
						count_ammo++;
					}
					if(count_ammo > 1) D(playerid, D_GPS_BIZZ, DSL, ""YELLOW"Бізнеси", string, "Вибрати", "Назад");
					else ErrorMessage(playerid,"Бізнеси не знайдені");
				}
				case 12: {
					new string[256];
					new count_ammo = 1;
					for(new i = 0; i < gHotelCount; i ++) {
						format(string,sizeof(string),"%s"YELLOW"%d."W" %s\n",string,count_ammo,gHotels[i][hotelName]);
						count_ammo++;
					}
					D(playerid, D_GPS_HOTEL, DSL, ""YELLOW"Отели", string, "Вибрати", "Назад");
				}
				case 13: {
					D(playerid,D_GPS_AIRPORT,DSL,""YELLOW"Аеропорти","\
"YELLOW"1."W" Аеропорт м. ЛС\n\
"YELLOW"2."W" Аеропорт м. СФ\n\
"YELLOW"3."W" Аеропорт м. ЛВ","Вибрати","Назад");
				}
				case 14: {
					new string[512];
					new count_ammo = 1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 11) continue;
						format(string,sizeof(string),"%s"YELLOW"%d."W" %s\n",string,count_ammo,FuncBizz[i+1][funcbName]);
						count_ammo++;
					}
					D(playerid, D_GPS_TAXI, DSL, ""YELLOW"Таксопарки", string, "Вибрати", "Назад");
				}
				case 15: {
					new string[700];
					new count_ammo = 1;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzType] != 14) continue;
						format(string,sizeof(string),"%s"YELLOW"%d."W" %s\n",string,count_ammo,FuncBizz[i+1][funcbName]);
						count_ammo++;
					}
					strcat(string,""YELLOW"4."W" [Загрузка] Збройний завод\n"YELLOW"5."W" [Загрузка] Нефтезавод\n"YELLOW"6."W" [Розгрузка] Порт м. СФ\n"YELLOW"7."W" [Розгрузка] Порт м. ЛС");
					D(playerid, D_GPS_TK, DSL, ""YELLOW"Транспортні компанії", string, "Вибрати", "Назад");
				}
				case 16: {
					D(playerid,D_GPS_GAME,DSL,""YELLOW"Розваги","\
"YELLOW"1."W" Комп'ютерний клуб\n"YELLOW"2."W" Лотарея SAMP UKRAINE", "Вибрати", "Назад");
				}
				case 17: {
					D(playerid,D_GPS_RIELTOR,DSL,""YELLOW"Риэлторские агенства","\
"YELLOW"1."W" Ріелторська агенція м. ЛС\n\
"YELLOW"2."W" Ріелторська агенція м. СФ\n\
"YELLOW"3."W" Ріелторська агенція м. ЛВ","Вибрати","Назад");
				}
			}
		}
		case D_GPS_O: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[28];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,747.1273,-1390.9849,13.4882), str = "Автошколи";
				case 1: EnableGPSForPlayer(playerid,-318.0250,1068.1536,19.5907), str = "Військомата";
				case 2: EnableGPSForPlayer(playerid,1814.4481,-1890.3649,13.4141), str = "З/Д Вокзала м. ЛС";
				case 3: EnableGPSForPlayer(playerid,-1994.8622,112.8504,27.5391), str = "З/Д Вокзала м. СФ";
				case 4: EnableGPSForPlayer(playerid,2806.9531,1312.4647,10.7500), str = "З/Д Вокзала м. ЛВ";
				case 5: EnableGPSForPlayer(playerid,-1970.0964,1118.4404,53.1299), str = "Церкви";
				case 6: EnableGPSForPlayer(playerid,2156.2654,2155.5183,10.6719), str = "Казино";
				case 7: EnableGPSForPlayer(playerid,-424.3238,-437.3412,17.2794), str = "Ловлі риби";
				case 8: EnableGPSForPlayer(playerid,2225.3281,-1725.0433,13.5620), str = "Спорт-зала";
				case 9: EnableGPSForPlayer(playerid,2218.9026,1838.8079,10.8203), str = "Центра розваг";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_WORK: {
			if(!response) return pc_cmd_gps(playerid);
			new string[144],str[40];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,-118.2737,7.1584,3.1172), str = "Яблучного саду";
				case 1: EnableGPSForPlayer(playerid,2675.6917,-2405.5618,13.4675), str = "Збройного завода";
				case 2: EnableGPSForPlayer(playerid,302.3781,1411.4307,9.3229), str = "Нефтезавода";
				case 3: EnableGPSForPlayer(playerid,-495.1036,-1568.1460,9.8474), str = "Лісопилки";
				case 4: EnableGPSForPlayer(playerid,1269.4330,-1846.6799,13.3974), str = "Оренди автобусів м. ЛС";
				case 5: EnableGPSForPlayer(playerid,-1986.1086,192.0124,27.7047), str = "Оренди автобусів м. СФ";
				case 6: EnableGPSForPlayer(playerid,2784.5828,1274.3229,10.7500), str = "Оренди автобусів м. ЛВ";
				case 7: EnableGPSForPlayer(playerid,1071.2417,1948.1721,10.8203), str = "Оренди розвозників продуктів";
				case 8: EnableGPSForPlayer(playerid,-10.1753,-314.8848,5.4229), str = "Оренди топлива продуктів";
				case 9: EnableGPSForPlayer(playerid,218.3788,-1443.7483,13.2123), str = "Оренди розвізників їди м. ЛС";
				case 10: EnableGPSForPlayer(playerid,-2416.5146,-604.9440,132.5625), str = "Оренди Розвізників їди м. СФ";
				case 11: EnableGPSForPlayer(playerid,1636.6709,-1106.8654,23.9063), str = "Оренди транспорта механіків м. ЛС №1";
				case 12: EnableGPSForPlayer(playerid,-82.6767,-1155.2017,1.7500), str = "Оренди транспорта механіків м. ЛС №2";
				case 13: EnableGPSForPlayer(playerid,-2026.8943,142.5349,28.8359), str = "Оренди транспорта механіків м. СФ №1";
				case 14: EnableGPSForPlayer(playerid,-1648.2657,436.3811,7.1797), str = "Оренди транспорта механіків м. СФ №2";
				case 15: EnableGPSForPlayer(playerid,2127.3828,953.3461,10.8130), str = "Оренди транспорта механіків м. ЛС №1";
				case 16: EnableGPSForPlayer(playerid,2624.8748,1072.8818,10.8203), str = "Оренди транспорта механіків м. ЛВ №2";
				case 17: EnableGPSForPlayer(playerid,1400.2572,-1796.6935,13.5469), str = "Оренди транспорта для прибирання вулиць";
				case 18: EnableGPSForPlayer(playerid,1427.5365,-1837.8632,13.5469), str = "Оренди транспорта для скошування трави";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_GOS: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[32];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,1270.4175,-2053.0439,59.1521), str = "Білого дому";
				case 1: EnableGPSForPlayer(playerid,1480.9188,-1740.3135,13.5469), str = "Мерії";
				case 2: EnableGPSForPlayer(playerid,1539.1508,-1675.5208,13.5469), str = "Поліцейского відділка м. ЛС";
				case 3: EnableGPSForPlayer(playerid,-1604.8586,724.6096,11.6933), str = "Поліцейского відділка м. СФ";
				case 4: EnableGPSForPlayer(playerid,2292.0945,2421.0532,10.8203), str = "Поліцейского відділка м. ЛВ";
				case 5: EnableGPSForPlayer(playerid,1184.2065,-1325.4333,13.5755), str = "Лікарні м. ЛС";
				case 6: EnableGPSForPlayer(playerid,-2654.8313,623.7918,14.4531), str = "Лікарні м. СФ";
				case 7: EnableGPSForPlayer(playerid,1607.5950,1831.1354,10.8203), str = "Лікарні м. ЛВ";
				case 8: EnableGPSForPlayer(playerid,-1980.5592,-1012.2474,32.1719), str = "ФБР";
				case 9: EnableGPSForPlayer(playerid,107.3565,2072.0569,17.4144), str = "Армії [сухопутних військ]";
				case 10: EnableGPSForPlayer(playerid,-1529.3359,502.5937,7.1797), str = "Армії [воєнно-морскит флот]";
				case 11: EnableGPSForPlayer(playerid,747.1273,-1390.9849,13.4882), str = "Ліцензерів";
				case 12: EnableGPSForPlayer(playerid,1589.3326,-1317.3939,17.5201), str = "Радіоцентра м. ЛС";
				case 13: EnableGPSForPlayer(playerid,-2482.1636,-616.2321,132.5656), str = "Радіоцентра м. СФ";
				case 14: EnableGPSForPlayer(playerid,2615.1035,1172.8719,10.7614), str = "Радіоцентра м. ЛВ";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_NOLEGAL: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[24];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,1933.5902,-1130.1890,25.3224), str = "The Ballas Gang";
				case 1: EnableGPSForPlayer(playerid,2742.2312,-1177.2218,69.2422), str = "The Vagos Gang";
				case 2: EnableGPSForPlayer(playerid,2461.8611,-1658.8733,13.3047), str = "The Grove Gang";
				case 3: EnableGPSForPlayer(playerid,1696.4821,-2112.6555,13.4739), str = "The Aztecas Gang";
				case 4: EnableGPSForPlayer(playerid,2720.2114,-1946.7925,13.5469), str = "The Rifa Gang";
				case 5: EnableGPSForPlayer(playerid,1447.0746,657.3666,10.8671), str = "Італійської мафії";
				case 6: EnableGPSForPlayer(playerid,2514.0728,1824.1353,10.7868), str = "Японської мафії";
				case 7: EnableGPSForPlayer(playerid,1004.1752,1755.4628,10.7734), str = "Української мафії";
				case 8: EnableGPSForPlayer(playerid,2310.4119,-1218.0474,23.9775), str = "Чорного ринку";
				case 9: EnableGPSForPlayer(playerid,1365.1133,-1279.5537,13.5469), str = "Магазина зброї [LS]";
				case 10: EnableGPSForPlayer(playerid,-2626.2219,211.8794,4.6090), str = "Магазина зброї [SF]";
				case 11: EnableGPSForPlayer(playerid,2155.0334,943.2148,10.8203), str = "Магазина зброї [LV]";
				case 12: EnableGPSForPlayer(playerid,2194.1531,-2279.8872,13.5469), str = "Поєдинки";
				case 13: EnableGPSForPlayer(playerid,2339.5876,-1313.6565,24.0629), str = "Пограбування будинків";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_BANK: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[14];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,1709.3918,-1343.1489,13.5469), str = "Банка м. ЛС";
				case 1: EnableGPSForPlayer(playerid,-2361.9106,493.2753,30.7346), str = "Банка м. СФ";
				case 2: EnableGPSForPlayer(playerid,2577.3542,1317.7053,10.6999), str = "Банка м. ЛВ";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_RIELTOR: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[28];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,777.3998,-1041.3154,24.1305), str = "Ріелторської агенції м. ЛС";
				case 1: EnableGPSForPlayer(playerid,-2545.3013,320.7252,19.6200), str = "Ріелторської агенції м. СФ";
				case 2: EnableGPSForPlayer(playerid,2016.7900,1101.9283,10.8203), str = "Ріелторської агенції м. ЛВ";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_AIRPORT: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[16];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,1910.6567,-2326.6270,13.5469), str = "Аеропорта м. ЛС";
				case 1: EnableGPSForPlayer(playerid,-1280.7502,8.5439,14.1484), str = "Аеропорта м. СФ";
				case 2: EnableGPSForPlayer(playerid,1695.4163,1446.6281,10.7626), str = "Аеропорта м. ЛВ";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_TAXI: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 0; i < gBusinessCount; i ++) {
				if(gBusiness[i][bizzType] != 11) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",FuncBizz[i+1][funcbName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_TK: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[200],str[28];
			for(new i = 0; i < gBusinessCount; i ++) {
				if(gBusiness[i][bizzType] != 14) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",FuncBizz[i+1][funcbName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			switch(listitem) {
				case 3: EnableGPSForPlayer(playerid,2653.8486,-2387.8660,13.6328), str = "[Загрузка] Зброяний завод";
				case 4: EnableGPSForPlayer(playerid,253.3007,1396.0299,10.5859), str = "[Загрузка] Нефтезавод";
				case 5: EnableGPSForPlayer(playerid,-1744.4447,149.4602,3.5496), str = "[Розгрузка] Порт м. СФ";
				case 6: EnableGPSForPlayer(playerid,2616.7119,-2226.7627,13.3819), str = "[Розгрузка] Порт м. ЛС";
				//case 7: EnableGPSForPlayer(playerid,2687.9753,-2480.1912,13.5008), str = "[Розгрузка] Зброяний завод";
			}
			if(listitem >= 3) {
				format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
				SendClientMessage(playerid,CGOLD,string);
			}
			return 1;
		}
		case D_GPS_HOTEL: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 0; i < gHotelCount; i ++) {
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",gHotels[i][hotelName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gHotels[i][hotelAreaX],gHotels[i][hotelAreaY],gHotels[i][hotelAreaZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_BIZZ: {
			if(!response) return pc_cmd_gps(playerid);
			new count_ammo = 1,string[128];
			for(new i = 0; i < gBusinessCount; i ++) {
				if(gBusiness[i][bizzUpgrade][1] != 1) continue;
				if((count_ammo-1) == listitem) {
					format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",gBusiness[i][bizzName]);
					SendClientMessage(playerid, CGOLD, string);
					EnableGPSForPlayer(playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
					break;
				}
				count_ammo++;
			}
			return 1;
		}
		case D_GPS_AUTOSALON: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[40];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,557.0374,-1264.0369,17.2422), str = "Автосалона [Економ]";
				case 1: EnableGPSForPlayer(playerid,-1980.1460,289.2669,35.1719), str = "Автосалона [Стандарт]";
				case 2: EnableGPSForPlayer(playerid,2107.0535,1377.9354,10.8607), str = "Автосалона [Спорт]";
				case 3: EnableGPSForPlayer(playerid,2126.6680,-1119.6429,25.3591), str = "Мотосалона";
				case 4: EnableGPSForPlayer(playerid,1151.0156,-1224.6001,17.4627), str = "Тюнінга м. ЛС";
				case 5: EnableGPSForPlayer(playerid,-1787.5232,1197.9948,25.1194), str = "Тюнінга м. СФ";
				case 6: EnableGPSForPlayer(playerid,1643.3086,2187.9753,10.8203), str = "Тюнінга м. ЛВ";
				case 7: EnableGPSForPlayer(playerid,642.2348,-1488.5830,14.1320), str = "Perfomance Tuning [м. ЛС]";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case D_GPS_GAME: {
			if(!response) return pc_cmd_gps(playerid);
			new string[120],str[22];
			switch(listitem) {
				case 0: EnableGPSForPlayer(playerid,1022.5626,-1130.8978,23.8281), str = "Компьютерного клуба";
				case 1: EnableGPSForPlayer(playerid,-2027.7181,-40.9085,38.8046), str = "Лотарея SAMP UKRAINE";
			}
			format(string,sizeof(string),"Розташування %s успішно зазначено у вашому GPS",str);
			SendClientMessage(playerid,CGOLD,string);
		}
		case DIALOG_ATM_EDIT: {
			if(!response) {
				EdittingATM[playerid] = 0;
				return 1;
			}
			new string[128], atmID = EdittingATM[playerid];
			switch (listitem) {
				case 0: {
					EditDynamicObject(playerid, ATMData[atmID][atm_Object]);
					format(string, sizeof(string), "Ви изменяете позицию ATM (ID: %d).", atmID);
					SendOk(playerid, string);
				}
				case 1: {
					new vw, Float:ATMPosa[4], int;
					GetPlayerPos(playerid, ATMPosa[0], ATMPosa[1], ATMPosa[2]);
					GetPlayerFacingAngle(playerid, ATMPosa[3]);
					vw  = GetPlayerVirtualWorld(playerid);
					int = GetPlayerInterior(playerid);
					ATMData[atmID][ATM_Pos][0]   = ATMPosa[0];
					ATMData[atmID][ATM_Pos][1]   = ATMPosa[1];
					ATMData[atmID][ATM_Pos][2]   = ATMPosa[2];
					ATMData[atmID][ATM_Pos][3]   = 0;
					ATMData[atmID][ATM_Pos][4]   = 0;
					ATMData[atmID][ATM_Pos][5]   = ATMPosa[3];
					ATMData[atmID][atm_VW]  	 = vw;
					ATMData[atmID][atm_INT]  	 = int;
					ATMData[atmID][atm_Taken]    = 1;
					if (ATMData[atmID][atm_Object]) DestroyDynamicObject(ATMData[atmID][atm_Object]);
					ATMData[atmID][atm_Object] = CreateDynamicObject(2754, ATMData[atmID][ATM_Pos][0]+2, ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], 0.0, 0.0, ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);
					UpdateATMLabel(atmID);
					SaveATM(atmID);
				}
				case 2: D(playerid, DIALOG_ATM_EDIT_DELETE, DSM, ""YELLOW"Удаление ATM", "Видалити банкомат?", "Так", "Ні");
			}
		}
		case DIALOG_ATM_EDIT_DELETE: {
			new title[128], atmID = EdittingATM[playerid];
			if(!response) {
				format(title, sizeof(title), "Изменение ATM: (ID: %d)", atmID);
				D(playerid, DIALOG_ATM_EDIT, DSL, title, "Изменение позиции(редактор)\nПеренести позицию на свои координаты\nУдаление ATM", "Далі", "Відміна");
			}
			else DeleteATM(playerid, atmID);
		}
		case D_FREE: {
			if(!response) return 1;
			new id = GetPVarInt(playerid,"FreeOffer") - 1;
			new price = GetPVarInt(playerid,"FreePrice");
			new percent = floatround(price/100*15);
			DeletePVar(playerid,"FreePrice");
			DeletePVar(playerid,"FreeOffer");
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pCash] < price) {
						SendOk(id, "У гравця недостаточно коштів для оплаты Ваших услуг");
						ErrorMessage(playerid, "Недостаточно коштів для оплаты");
						return 1;
					}
					GiveMoney(playerid,-price,"оплата адвокату");
					GiveMoney(id,percent,"услуги адвоката");
				}
				case 1: {
					if(PlayerInfo[playerid][pBank] < price) {
						SendOk(id, "У гравця недостаточно коштів для оплаты Ваших услуг");
						ErrorMessage(playerid, "Недостаточно коштів для оплаты");
						return 1;
					}
					PlayerInfo[playerid][pBank] -= price;
					PlayerInfo[id][pBank] += percent;
					UpdatePlayerData(playerid,"pBank",PlayerInfo[playerid][pBank]);
					UpdatePlayerData(id,"pBank",PlayerInfo[id][pBank]);
				}
			}
			FI[fWHITEHOUSE][fBank] += (price-percent);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			new string[156];
			format(string, sizeof(string), "Адвокат "YELLOW"%s{f6f6d9} освободил Вас за "ORANGE"$%d",player_name[id], price);
			SendUse(playerid,string);
			
			format(string, sizeof(string), "Ви выпустили "YELLOW"%s{f6f6d9} за "ORANGE"$%d.{f6f6d9} Способ оплаты: "W"%s",player_name[playerid], percent,(listitem == 0) ? ("готівка") : ("банк. рахунок"));
			SendUse(id,string);
			SetPlayerPosAC(playerid, camExit[PlayerInfo[playerid][pJail]-1][0],camExit[PlayerInfo[playerid][pJail]-1][1],camExit[PlayerInfo[playerid][pJail]-1][2], 0, 0);
			SetPlayerFacingAngle(playerid,camExit[PlayerInfo[playerid][pJail]-1][3]);
			SetCameraBehindPlayer(playerid);
			PlayerInfo[playerid][pJailTime] = 0;
			PlayerInfo[playerid][pJail] = 0;
			UpdatePlayerData(playerid,"pJailTime",0);
			UpdatePlayerData(playerid,"pJail",0);
			GameTextForPlayer(playerid, "~g~~h~FREEDOM", 5000, 1);
			return 1;
		}
		case D_ECONOMY: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Казна штата: \t\t\t\t\t"YELLOW"$%d\n\n\
"W"Заробітна плата збройний завод:\t"GREEN"$%d\n\
"W"Заробітна плата нефтезавод:\t\t"GREEN"$%d\n\
"W"Заробітна плата яблуневий сад:\t\t"GREEN"$%d\n\
"W"Заробітна плата лісопилка:\t\t"GREEN"$%d\n\
"W"Заробітна плата алькатрас:\t\t\t"GREEN"$%d\n\
"W"Налогообложение бізнесов:\t\t"ORANGE"%d%%\n\
"W"Налоги заработных плат гос.структур:\t"ORANGE"%d%%";
					new string[sizeof(f_str) +1 + (-2 + 13) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3)];
					format(string,sizeof(string),f_str,FI[fWHITEHOUSE][fBank],WorkSalary[0],WorkSalary[1],WorkSalary[3],WorkSalary[2],WorkSalary[4],Nalog[3],Nalog[0]);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Інформація",string,"Закрити","");
				}
				case 1: {
					static const f_str[] = "\n\n"W"Заробітна плата на оружейном заводе составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату на оружейном заводе:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[0]);
					D(playerid,D_ECONOMY_GUN,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
				case 2: {
					static const f_str[] = "\n\n"W"Заробітна плата на нефтезаводе составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату на нефтезаводе:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[1]);
					D(playerid,D_ECONOMY_OIL,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
				case 3: {
					static const f_str[] = "\n\n"W"Заробітна плата в яблочном саду составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату в яблочном саду:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[3]);
					D(playerid,D_ECONOMY_APPLE,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
				case 4: {
					static const f_str[] = "\n\n"W"Заробітна плата на лесопилке составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату на лесопилке:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[4]);
					D(playerid,D_ECONOMY_WOOD,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
				case 5: {
					static const f_str[] = "\n\n"W"Заробітна плата в алькатрасе составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату в алькатрасе:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,WorkSalary[2]);
					D(playerid,D_ECONOMY_ALCO,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
				case 6: {
					static const f_str[] = "\n\n"W"Налогообложение бізнесов составляет: "GREEN"$%d\n\
Установите новое налогообложение бізнесов:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[3]);
					D(playerid,D_ECONOMY_BIZZ,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
				case 7: {
					static const f_str[] = "\n\n"W"Налоги заработных плат гос.структур составляют: "GREEN"$%d\n\
Установите новые налоги заработных плат гос.структур:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[0]);
					D(playerid,D_ECONOMY_NALOG,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
				case 8: D(playerid,D_ECONOMY_SALARY,DSL,"Керування штатом",""YELLOW"1."W" Поліція/n"YELLOW"2."W" ФБР\n"YELLOW"3."W" Армии\n"YELLOW"4."W" МЧС\n"YELLOW"5."W" Новостные студии\n"YELLOW"6."W" Білий дім","Вибрати", "Відміна");
				case 9: D(playerid,D_ECONOMY_PREM,DSL,""YELLOW"Керування штатом",""YELLOW"1."W" Поліція ЛС\n"YELLOW"2."W" Поліція СФ\n"YELLOW"3."W" Поліція ЛВ\n"YELLOW"4."W" ФБР\n"YELLOW"5."W" Армія СФ\n"YELLOW"6."W" Армія ЛВ\n"YELLOW"7."W" Лікарня м.ЛС\n"YELLOW"8."W" Лікарня м.СФ\n"YELLOW"9."W" Лікарня м.ЛВ\n"YELLOW"10."W" Радиоцентр ЛС\n"YELLOW"11."W" Радиоцентр СФ\n"YELLOW"12."W" Радиоцентр ЛВ","Вибрати", "Відміна");
				case 10: D(playerid,D_ECONOMY_PENS,DSL,""YELLOW"Керування штатом",""YELLOW"1."W" Розмір пенсії\n"YELLOW"2."W" Пенсійний вік","Вибрати", "Відміна");
				case 11: D(playerid,D_ECONOMY_PUT,DSI,""YELLOW"Керування штатом","\n\n"W"Укажите сумму, на которую хочете пополнить казну штата\n\n","Поповнити", "Відміна");
				case 12: D(playerid,D_ECONOMY_INPUT,DSI,""YELLOW"Керування штатом","\n\n"W"Укажите сумму, которую хочете зняти с казны штата\n\n","Зняти", "Відміна");
			}
		}
		case D_ECONOMY_PENS: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = "\n\n"W"Розмір пенсії составляет: "GREEN"$%d\n\
Установите новый розмір пенсії:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[2]);
					D(playerid,D_ECONOMY_PENS_1,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
				case 1: {
					static const f_str[] = "\n\n"W"Пенсійний возраст составляет: "GREEN"%d\n\
Установите новый пенсійний возраст:\n\n";
					new string[sizeof(f_str) +1 + (-2 + 3)];
					format(string,sizeof(string),f_str,Nalog[1]);
					D(playerid,D_ECONOMY_PENS_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				}
			}
		}
		case D_ECONOMY_PENS_1: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 5000 || salary > 9000) {
				static const f_str[] = "\n\n"W"Розмір пенсії составляет: "GREEN"$%d\n\
Установите новый розмір пенсії:\n\n"NO"*{f6f6d9} От $5000 до $9000\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[2]);
				D(playerid,D_ECONOMY_PENS_1,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			Nalog[2] = salary;
			UpdateEconomyData("nalog_3",salary);
			static const f_string[] = "Розмір пенсії в розмірі "GREEN"$%d{f6f6d9} встановлений";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[2]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_PENS_2: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 15 || salary > 25) {
				static const f_str[] = "\n\n"W"Пенсійний вік составляет: "GREEN"%d\n\
Установите новый пенсійний вік:\n\n"NO"*{f6f6d9} От 15 до 25\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[1]);
				D(playerid,D_ECONOMY_PENS_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			Nalog[1] = salary;
			UpdateEconomyData("nalog_2",salary);
			static const f_string[] = "Пенсійний вік "GREEN"$%d{f6f6d9} вік встановлений";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[1]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_GUN: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 60 || salary > 160) {
				static const f_str[] = "\n\n"W"Заробітна плата на оружейном заводе составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату на оружейном заводе:\n\n"NO"*{f6f6d9} От $60 до $160\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[0]);
				D(playerid,D_ECONOMY_GUN,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			WorkSalary[0] = salary;
			UpdateEconomyData("work_gun",salary);
			static const f_string[] = "Заробітна плата на оружейном заводе в розмірі "ORANGE"$%d{f6f6d9} встановлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[0]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_OIL: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 120 || salary > 220) {
				static const f_str[] = "\n\n"W"Заробітна плата на нефтезаводе составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату на нефтезаводе:\n\n"NO"*{f6f6d9} От $120 до $220\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[1]);
				D(playerid,D_ECONOMY_OIL,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			WorkSalary[1] = salary;
			UpdateEconomyData("work_oil",salary);
			static const f_string[] = "Заробітна плата на нефтезаводе в розмірі "ORANGE"$%d{f6f6d9} встановлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[1]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_APPLE: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 30 || salary > 120) {
				static const f_str[] = "\n\n"W"Заробітна плата в яблочном саду составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату в яблочном саду:\n\n"NO"*{f6f6d9} От $30 до $120\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[3]);
				D(playerid,D_ECONOMY_APPLE,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			WorkSalary[3] = salary;
			UpdateEconomyData("work_apple",salary);
			static const f_string[] = "Заробітна плата в яблочном саду в розмірі "ORANGE"$%d{f6f6d9} встановлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[3]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_WOOD: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 30 || salary > 120) {
				static const f_str[] = "\n\n"W"Заробітна плата на лесопилке составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату на лесопилке:\n\n"NO"*{f6f6d9} От $30 до $120\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[4]);
				D(playerid,D_ECONOMY_WOOD,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			WorkSalary[4] = salary;
			UpdateEconomyData("work_wood",salary);
			static const f_string[] = "Заробітна плата на лесопилке в розмірі "ORANGE"$%d{f6f6d9} встановлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[4]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_ALCO: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 20 || salary > 40) {
				static const f_str[] = "\n\n"W"Заробітна плата в алькатрасе составляет: "GREEN"$%d\n\
Встановіть нову заробітну плату в алькатрасе:\n\n"NO"*{f6f6d9} От $20 до $40\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,WorkSalary[2]);
				D(playerid,D_ECONOMY_ALCO,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			WorkSalary[2] = salary;
			UpdateEconomyData("work_alco",salary);
			static const f_string[] = "Заробітна плата в алькатрасе в розмірі "ORANGE"$%d{f6f6d9} встановлена";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,WorkSalary[2]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_BIZZ: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 1 || salary > 15) {
				static const f_str[] = "\n\n"W"Налогообложение бізнесов составляет: "YELLOW"%d%%\n\
Установите новое налогообложение бізнесов:\n\n"NO"*{f6f6d9} От 1%% до 15%%\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[3]);
				D(playerid,D_ECONOMY_BIZZ,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			Nalog[3] = salary;
			UpdateEconomyData("nalog_4",salary);
			static const f_string[] = "Налогообложение бізнесов в розмірі "ORANGE"%d%%{f6f6d9} встановлено";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[3]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_NALOG: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 5 || salary > 15) {
				static const f_str[] = "\n\n"W"Налоги заработных плат гос.структур составляют: "YELLOW"%d%%\n\
Установите новые налоги заработных плат гос.структур:\n\n"NO"*{f6f6d9} От 5%% до 15%%\n\n";
				new string[sizeof(f_str) +1 + (-2 + 3)];
				format(string,sizeof(string),f_str,Nalog[0]);
				D(playerid,D_ECONOMY_NALOG,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
				return 1;
			}
			Nalog[0] = salary;
			UpdateEconomyData("nalog_1",salary);
			static const f_string[] = "Налоги заработных плат гос.структур в розмірі "ORANGE"%d%%{f6f6d9} встановлені";
			new str[sizeof(f_string) +1 + (-2 + 4)];
			format(str,sizeof(str),f_string,Nalog[0]);
			SendUse(playerid,str);
		}
		case D_ECONOMY_SALARY: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			switch(listitem) {
				case 0: {
					new string[555];
					string = "Посада\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fLSPD][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fLSPD,i),i,FracSalary[0][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
					}
				}
				case 1: {
					new string[555];
					string = "Посада\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fFBI][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fFBI,i),i,FracSalary[1][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
					}
				}
				case 2: {
					new string[555];
					string = "Посада\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fARMYSF][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fARMYSF,i),i,FracSalary[3][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
					}
				}
				case 3: {
					new string[555];
					string = "Посада\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fMEDICLS][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fMEDICLS,i),i,FracSalary[4][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
					}
				}
				case 4: {
					new string[555];
					string = "Посада\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fLSNEWS][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fLSNEWS,i),i,FracSalary[5][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
					}
				}
				case 5: {
					new string[555];
					string = "Посада\tРанг\tЗарплата\n";
					for(new i = 1; i <= FI[fWHITEHOUSE][fMaxRang]; i++) {
						format(string,sizeof(string),"%s%s\t%i\t%d\n",string,GetRankName(fWHITEHOUSE,i),i,FracSalary[8][i-1]);
						D(playerid,D_ECONOMY_SALARY_1,DSTH,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
					}
				}
			}
			SetPVarInt(playerid, "variable_zp", listitem);
		}
		case D_ECONOMY_SALARY_1: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			SetPVarInt(playerid, "variable_rang", listitem);
			switch(GetPVarInt(playerid, "variable_zp")) {
				case 0: {
					static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - Поліція/n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fLSPD,listitem+1),listitem+1,FracSalary[0][listitem],GetRankName(fLSPD,listitem+1),salary_pd[listitem]/2,salary_pd[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
					return 1;
				}
				case 1: {
					static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - ФБР\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fFBI,listitem+1),listitem+1,FracSalary[1][listitem],GetRankName(fFBI,listitem+1),salary_fbi[listitem]/2,salary_fbi[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
					return 1;
				}
				case 2: {
					static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - Армии\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fARMYSF,listitem+1),listitem+1,FracSalary[3][listitem],GetRankName(fARMYSF,listitem+1),salary_army[listitem]/2,salary_army[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
					return 1;
				}
				case 3: {
					static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - МЧС\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fMEDICLS,listitem+1),listitem+1,FracSalary[4][listitem],GetRankName(fMEDICLS,listitem+1),salary_medics[listitem]/2,salary_medics[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
					return 1;
				}
				case 4: {
					static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - Новостная студия\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fLSNEWS,listitem+1),listitem+1,FracSalary[5][listitem],GetRankName(fLSNEWS,listitem+1),salary_news[listitem]/2,salary_news[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
					return 1;
				}
				case 5: {
					static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - Білий дім\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
					new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,GetRankName(fWHITEHOUSE,listitem+1),listitem+1,FracSalary[8][listitem],GetRankName(fWHITEHOUSE,listitem+1),salary_wh[listitem]/2,salary_wh[listitem]);
					D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
					return 1;
				}
			}
		}
		case D_ECONOMY_SALARY_2: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			new list = GetPVarInt(playerid, "variable_rang");
			switch(GetPVarInt(playerid, "variable_zp")) {
				case 0: {
					if(salary < salary_pd[list]/2 || salary > salary_pd[list]) {
						static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - Поліція/n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fLSPD,list+1),list+1,FracSalary[0][list],GetRankName(fLSPD,list+1),salary_pd[list]/2,salary_pd[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
						return 1;
					}
					FracSalary[0][list] = salary;
					save_salary(0);
				}
				case 1: {
					if(salary < salary_fbi[list]/2 || salary > salary_fbi[list]) {
						static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - ФБР\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fFBI,list+1),list+1,FracSalary[1][list],GetRankName(fFBI,list+1),salary_fbi[list]/2,salary_fbi[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
						return 1;
					}
					FracSalary[1][list] = salary;
					save_salary(1);
				}
				case 2: {
					if(salary < salary_army[list]/2 || salary > salary_army[list]) {
						static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - Армии\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fARMYSF,list+1),list+1,FracSalary[3][list],GetRankName(fARMYSF,list+1),salary_army[list]/2,salary_army[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
						return 1;
					}
					FracSalary[3][list] = salary;
					save_salary(3);
				}
				case 3: {
					if(salary < salary_medics[list]/2 || salary > salary_medics[list]) {
						static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - МЧС\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fMEDICLS,list+1),list+1,FracSalary[4][list],GetRankName(fMEDICLS,list+1),salary_medics[list]/2,salary_medics[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
						return 1;
					}
					FracSalary[4][list] = salary;
					save_salary(4);
				}
				case 4: {
					if(salary < salary_news[list]/2 || salary > salary_news[list]) {
						static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - Новостная студия\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fLSNEWS,list+1),list+1,FracSalary[5][list],GetRankName(fLSNEWS,list+1),salary_news[list]/2,salary_news[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
						return 1;
					}
					FracSalary[5][list] = salary;
					save_salary(5);
				}
				case 5: {
					if(salary < salary_wh[list]/2 || salary > salary_wh[list]) {
						static const f_str[] = "\n\n"W"Заробітна плата %s(%d) $%d - Білий дім\n\
Встановіть нову заробітну плату для ранга %s:\n\n"NO"*{f6f6d9} От %d до %d\n\n";
						new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + 4) + (-2 + 6) + (-2 + 24) + (-2 + 5) + (-2 + 5)];
						format(string,sizeof(string),f_str,GetRankName(fWHITEHOUSE,list+1),list+1,FracSalary[8][list],GetRankName(fWHITEHOUSE,list+1),salary_wh[list]/2,salary_wh[list]);
						D(playerid,D_ECONOMY_SALARY_2,DSI, ""YELLOW"Керування штатом",string,"Установить", "Відміна");
						return 1;
					}
					FracSalary[8][list] = salary;
					save_salary(8);
				}
			}
			SendOk(playerid,"Заробітна плата изменена");
		}
		case D_ECONOMY_PREM: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new frac;
			switch(listitem) {
				case 0: frac = fLSPD;
				case 1: frac = fSFPD;
				case 2: frac = fLVPD;
				case 3: frac = fFBI;
				case 4: frac = fARMYSF;
				case 5: frac = fARMYLV;
				case 6: frac = fMEDICLS;
				case 7: frac = fMEDICSF;
				case 8: frac = fMEDICLV;
				case 9: frac = fLSNEWS;
				case 10: frac = fSFNEWS;
				case 11: frac = fLVNEWS;
			}
			SetPVarInt(playerid,"prem_fration",frac);
			new string[156];
			format(string,sizeof(string),"\n\n"W"Укажите сумму перевода:\nОрганізація: "ORANGE"%s\n\n",FI[frac][fName]);
			D(playerid,D_ECONOMY_PREM_1,DSI, ""YELLOW"Керування штатом",string,"Перевести", "Відміна");
		}
		case D_ECONOMY_PREM_1: {
			if(!response) return DeletePVar(playerid,"prem_fration");
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 50000 || salary > 500000) {
				new string[156];
				format(string,sizeof(string),"\n\n"W"Укажите сумму перевода:\nОрганізація: "ORANGE"%s\n\n"NO"*{f6f6d9} От $50.000 до $500.000\n\n",FI[GetPVarInt(playerid,"prem_fration")][fName]);
				D(playerid,D_ECONOMY_PREM_1,DSI, ""YELLOW"Керування штатом",string,"Перевести", "Відміна");
				return 1;
			}
			if(FI[fWHITEHOUSE][fBank] - salary < 0) return ErrorMessage(playerid,"В казні недостаточно коштів");
			if(FI[fWHITEHOUSE][fBankCash] + salary > 500000) {
				new string[128];
				format(string,sizeof(string),"Суточный лимит на перевод/снятие коштів с казны - $500.000. Доступный лимит: $%d",500000-FI[fWHITEHOUSE][fBankCash]);
				ErrorMessage(playerid,string);
				return 1;
			}
			FI[fWHITEHOUSE][fBankCash] += salary;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);
			FI[GetPVarInt(playerid,"prem_fration")][fBank] += salary;
			UpdateFraction(GetPVarInt(playerid,"prem_fration"),"Bank",FI[GetPVarInt(playerid,"prem_fration")][fBank]);
			FI[fWHITEHOUSE][fBank] -= salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			static const f_string[] = "Перевод денежных коштів в розмірі "ORANGE"$%d{f6f6d9} організації "YELLOW"%s{f6f6d9} выполнен успішно";
			new str[sizeof(f_string) +1 + (-2 + 4) + (-2 + 24)];
			format(str,sizeof(str),f_string,salary,FI[GetPVarInt(playerid,"prem_fration")][fName]);
			SendUse(playerid,str);
			DeletePVar(playerid,"prem_fration");
		}
		case D_ECONOMY_PUT: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 1 || salary > 500000) {
				D(playerid,D_ECONOMY_PUT,DSI, ""YELLOW"Керування штатом","\n\n"W"Укажите сумму, на которую хочете пополнить казну штата\n\n"NO"*{f6f6d9} От $1 до $500.000\n\n","Поповнити", "Відміна");
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < salary) {
				D(playerid,D_ECONOMY_PUT,DSI, ""YELLOW"Керування штатом","\n\n"W"Укажите сумму, на которую хочете пополнить казну штата\n\n"NO"*{f6f6d9} У Вас недостаточно коштів\n\n","Поповнити", "Відміна");
				return 1;
			}
			GiveMoney(playerid,-salary,"Поповнення казны");
			FI[fWHITEHOUSE][fBank] += salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			FI[fWHITEHOUSE][fBankCash] -= salary;
			if(FI[fWHITEHOUSE][fBankCash] < 0) FI[fWHITEHOUSE][fBankCash] = 0;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);

			static const f_string[] = "Ви пополнили казну штата на "ORANGE"$%d";
			new str[sizeof(f_string) +1 + (-2 + 5)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
		case D_ECONOMY_INPUT: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return 1;
			new salary = strval(inputtext);
			if(salary < 1 || salary > 500000) {
				D(playerid,D_ECONOMY_INPUT,DSI, ""YELLOW"Керування штатом","\n\n"W"Укажите сумму, которую хочете зняти с казны штата\n\n"NO"*{f6f6d9} От $1 до $500.000\n\n","Зняти", "Відміна");
				return 1;
			}
			if(FI[fWHITEHOUSE][fBank] < salary) {
				D(playerid,D_ECONOMY_INPUT,DSI, ""YELLOW"Керування штатом","\n\n"W"Укажите сумму, которую хочете зняти с казны штата\n\n"NO"*{f6f6d9} В казні недостаточно коштів\n\n","Зняти", "Відміна");
				return 1;
			}
			if(FI[fWHITEHOUSE][fBankCash] + salary > 500000) {
				static const f_str[] = "\n\n"W"Укажите сумму, которую хочете зняти с казны штата\n\n"NO"*{f6f6d9} Суточный лимит на перевод/снятие коштів с казны - $500.000. Доступный лимит: $%d\n\n";
				new string[sizeof(f_str) +1 + (-2 + 6)];
				format(string,sizeof(string),f_str,500000-FI[fWHITEHOUSE][fBankCash]);
				D(playerid,D_ECONOMY_INPUT,DSI, ""YELLOW"Керування штатом",string,"Зняти", "Відміна");
				return 1;
			}
			GiveMoney(playerid,salary,"снятие с казны");
			FI[fWHITEHOUSE][fBank] -= salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			FI[fWHITEHOUSE][fBankCash] += salary;
			UpdateFraction(fWHITEHOUSE,"BankCash",FI[fWHITEHOUSE][fBankCash]);

			static const f_string[] = "Ви сняли с казны штата "ORANGE"$%d";
			new str[sizeof(f_string) +1 + (-2 + 5)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
		case D_REC_KICK: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Произоша помилка");
			if(!strlen(inputtext)) return D(playerid,D_REC_KICK,DSI, ""YELLOW"KICK","\n\n"W"Введіть причину, по которой хочете кикнуть гравця с сервера:\n\n","Кикнуть","Відміна");
			new string[64];
			format(string,sizeof(string),"%d %s",SERIU[playerid][sID],inputtext);
			pc_cmd_kick(playerid,string);
		}
		case D_REC_WARN: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Произоша помилка");
			if(!strlen(inputtext)) return D(playerid,D_REC_WARN,DSI, ""YELLOW"WARN","\n\n"W"Введіть причину, по которой хочете выдать Warn гравцю:\n\n","Варн","Відміна");
			new string[64];
			format(string,sizeof(string),"%d %s",SERIU[playerid][sID],inputtext);
			pc_cmd_warn(playerid,string);
		}
		case D_REC_BAN: {
			if(!response) return 1;
			if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Произоша помилка");
			new Days,Reason[31];
			if(sscanf(inputtext, "p<,>is[30]",Days,Reason)) return D(playerid,D_REC_BAN,DSI, ""YELLOW"BAN","\n\n"W"Введіть причину, по которой хочете заблокировать аккаунт гравцю:\n"NO"УВАГА!"W" Введіть время и причину через запятую без пробелов (15,читер)\nВремя блокировки аккаунта: от 7 до 30 днів\n\n","Бан","Відміна");
			new string[78];
			format(string,sizeof(string),"%d %d %s",SERIU[playerid][sID],Days,Reason);
			pc_cmd_ban(playerid,string);
		}
		case D_UNBAN: {
		    if(!response) return 1;
		    if(!IsBannedName(UnbanName[playerid])) return ErrorMessage(playerid,"Цей гравець не заблокирован");
			UnBanName(UnbanName[playerid]);
			new string[144];
			format(string,sizeof(string),"[A] Адміністратор %s разблокировал гравця %s",player_name[playerid],UnbanName[playerid]);
			AdmMSG(0xAFAFAFAA, string,1);
			WriteLog(LOG_UNBAN,player_name[playerid],UnbanName[playerid],"разблокировка");
		}
		case D_ELECTION: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					new string[512];
					string = ""W"";
					for(new i = 0; i < MAX_VOTES; i++) {
						if(strlen(vote_name[i])) {
							format(string, sizeof(string), "%s%i. %s (%i голосов)\n", string, i+1, vote_name[i],vote_count[i]);
						}
						else format(string,sizeof(string),"%s%i. -\n",string, i+1);
					}
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Список кандидатов",string,"Закрити","");
				}
				case 1: {
					for(new i = 0; i < MAX_VOTES; i++) {
						if(!strlen(vote_name[i])) {
							SetPVarInt(playerid,"vote_slot", i);
							D(playerid,D_ELECTION_1, DSI, ""YELLOW"Додавання кандитата", "\n\nВведіть имя кандитата:\n\n","Ввід","Відміна");
							return 1;
						}
					}
					return ErrorMessage(playerid,"Достигнут лимит кандитатов");
				}
				case 2: {
					new string[512];
					for(new i = 0; i < MAX_VOTES; i++) {
						if(strlen(vote_name[i])) {
							format(string,sizeof(string), "%s%s\n",string,vote_name[i]);
						}
						else strcat(string,"-\n");
					}
					if(!strlen(string)) return ErrorMessage(playerid,"Кандитатов нет");
					D(playerid,D_ELECTION_3, DSL, ""YELLOW"Удаление кандитата", string, "Вибрати", "Закрити");
				}
				case 3: {
					if(election) return ErrorMessage(playerid,"Пикап для голосований уже встановдений");
					election = CreateDynamicPickup(19134,1,-1333.8834,1927.8076,1087.7546,44);	
					election3D = CreateDynamic3DTextLabel(""YELLOW"Голосование", -1, -1333.8834,1927.8076,1087.7546+1.0, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
					new string[144];
					format(string, sizeof(string), "[ВИБОРИ] %s [%d]: Дорогі жителі штата", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_YELLOW, string);
					format(string, sizeof(string), "[ВИБОРИ] %s [%d]: Розпочалися вибори президента", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_YELLOW, string);
					format(string, sizeof(string), "[ВИБОРИ] %s [%d]: Голосування доступно з 3-х років проживання в штаті", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_YELLOW, string);
					format(string, sizeof(string), "[ВИБОРИ] %s [%d]: Дякую за увагу", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_YELLOW, string);
				}
				case 4: {
					new win_count = 0;
					new win_slot = 0;
					for(new i = 0; i < MAX_VOTES; i++) {
						if(strlen(vote_name[i])) {
							if(vote_count[i] > win_count) {
								win_count = vote_count[i];
								win_slot = i;
								new query[128];
								format(query,sizeof(query),"DELETE FROM `vote` WHERE `vote_name` = '%s'",vote_name[i]);
								mysql_pquery(connects, query, "", "");
								vote_count[i] = 0;
							}
						}
					}
					new string[144];
					format(string, sizeof(string), "[ВИБОРИ] %s [%d]: Дорогі жителі штата", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_YELLOW, string);
					format(string, sizeof(string), "[ВИБОРИ] %s [%d]: Вибори закінчені. Новий президент штата: "W"%s "YELLOW"(%i голосів)", player_name[playerid], playerid, vote_name[win_slot], win_count);
					SendClientMessageToAll(COLOR_YELLOW, string);
					format(string, sizeof(string), "[ВИБОРИ] %s [%d]: Дякую за увагу.", player_name[playerid], playerid);
					SendClientMessageToAll(COLOR_YELLOW, string);
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(PlayerInfo[i][pGolos]) PlayerInfo[i][pGolos] = 0;
					}
					mysql_pquery(connects, "UPDATE `accounts` SET `pGolos` = '0'", "", "");
					for(new i = 0; i < MAX_VOTES; i++) {
						if(strlen(vote_name[i])) {
							strmid(vote_name[i],"",strlen(""),MAX_PLAYER_NAME);
						}
					}
					if(election) DestroyDynamicPickup(election),election = 0;
					DestroyDynamic3DTextLabel(election3D);
				}
			}
			return 1;
		}
		case D_ELECTION_3: {
			if(!response) return 1;
			if(!strcmp(inputtext,"-")) return 1;
			new string[1120];
			format(string, sizeof(string), "Ви убрали "YELLOW"%s{f6f6d9} с выборов", vote_name[listitem]);
			SendUse(playerid,string);
			new query[70];
			format(query,sizeof(query),"DELETE FROM `vote` WHERE `vote_name` = '%s'",vote_name[listitem]);
			mysql_pquery(connects, query, "", "");
			strmid(vote_name[listitem],"",strlen(""),MAX_PLAYER_NAME);
			vote_count[listitem] = 0;
			return 1;
		}
		case D_ELECTION_1: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext)>23) return ErrorMessage(playerid,"От 1 до 23");
			new slot = GetPVarInt(playerid,"vote_slot");
			strmid(vote_name[slot],inputtext,0,strlen(inputtext), MAX_PLAYER_NAME);
			new string[110];
			format(string,sizeof(string),"Ви додали кандитата: "W"%s", inputtext);
			SendOk(playerid,string);
			new query[256];
			format(query,sizeof(query),"INSERT INTO `vote`(`vote_name`, `vote_count`) VALUES ('%s','%i')",vote_name[slot],vote_count[slot]);
			mysql_pquery(connects, query, "", "");
			DeletePVar(playerid,"vote_slot");
			return 1;
		}
		case D_ELECTION_2: {
			if(!response) return 1;
			if(!strlen(vote_name[listitem])) return ErrorMessage(playerid,"Кандитат не назначен");
			vote_count[listitem]++;
			new query[128];
			format(query,sizeof(query),"UPDATE `vote` SET `vote_count` = '%i' WHERE `vote_name` = '%s'",vote_count[listitem],vote_name[listitem]);
			mysql_pquery(connects, query, "", "");
			new string[144];
			format(string,sizeof(string),"Ви отдали свой голос за "YELLOW"%s. {f6f6d9}Дякую за участие в голосовании!",vote_name[listitem]);
			SendOk(playerid,string);
			PlayerInfo[playerid][pGolos] = 1;
			UpdatePlayerData(playerid,"pGolos",PlayerInfo[playerid][pGolos]);
			if(GetPVarInt(playerid,"anti_sbiv_time") <= unix) ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
			return 1;
		}
		case D_MAYOR: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					static const f_str[] = ""W"Казна штата: \t\t\t\t\t"YELLOW"$%d\n\n\
"W"Заробітна плата збройний завод:\t"GREEN"$%d\n\
"W"Заробітна плата нефтезавод:\t\t"GREEN"$%d\n\
"W"Заробітна плата Яблуневий сад:\t\t"GREEN"$%d\n\
"W"Заробітна плата алькатрас:\t\t\t"GREEN"$%d\n\
"W"Налогообложение бізнесов:\t\t"ORANGE"%d%%\n\
"W"Налоги заработных плат гос.структур:\t"ORANGE"%d%%";
					new string[sizeof(f_str) +1 + (-2 + 13) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3) + (-2 + 3)];
					format(string,sizeof(string),f_str,FI[fWHITEHOUSE][fBank],WorkSalary[0],WorkSalary[1],WorkSalary[3],WorkSalary[2],Nalog[3],Nalog[0]);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Інформація",string,"Закрити","");
				}
				case 1: D(playerid,D_MAYOR_BLAGO,DSI, ""YELLOW"Благотворительность","\n\n"W"Введіть сумму, которую хочете пожертвовать в казну штата:\n\n","Перевести", "Відміна");
				case 2: {
					new name[24],rows;
					new blago;
					new Cache:result = mysql_query(connects, "SELECT `Name`,`pBlago` FROM `accounts` WHERE `pBlago` > '10000' ORDER BY `pBlago` DESC LIMIT 5");
					cache_get_row_count(rows);
					if(rows) {
						new string[300];
	       				string = ""YELLOW"№ Имя\t"YELLOW"Пожертвовал\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"$%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
							cache_get_value_name_int(i, "pBlago",blago);
							format(str, sizeof(str), f_str, i+1, name,blago);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, "Самые щедрые", string, "Закрити", "");
					}
					else ErrorMessage(playerid, "Ещё никто не пожертвовал більше $10.000");
					cache_delete(result);
				}
			}
		}
		case D_MAYOR_BLAGO: {
			if(!response) return 1;
			new salary = strval(inputtext);
			if(salary < 1000 || salary > 1000000) {
				D(playerid,D_MAYOR_BLAGO,DSI, ""YELLOW"Благотворительность","\n\n"W"Введіть сумму, которую хочете пожертвовать в казну штата:\n\n"NO"*{f6f6d9} От $1.000 до $1.000.000\n\n","Перевести", "Відміна");
				return 1;
			}
			if(GetPlayerMoneyEx(playerid) < salary) return ErrorMessage(playerid,"У Вас недостаточно коштів");
			GiveMoney(playerid,-salary,"пожертвование");
			PlayerInfo[playerid][pBlago] += salary;
			UpdatePlayerData(playerid,"pBlago",PlayerInfo[playerid][pBlago]);
			FI[fWHITEHOUSE][fBank] += salary;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
			static const f_string[] = "Ви успішно пожертвовали "ORANGE"$%d{f6f6d9} в казну штата";
			new str[sizeof(f_string) +1 + (-2 + 9)];
			format(str,sizeof(str),f_string,salary);
			SendUse(playerid,str);
		}
		case dRentCar: {
		    if(!response) return DeletePVar(playerid,"rent_carid");
			new arid = GetArendCarID(GetPVarInt(playerid, "rent_carid"));
			DeletePVar(playerid,"rent_carid");
			if(!lic[playerid][0]) return ErrorMessage(playerid,"У вас немає водительских прав");
			if(arid != -1) {
				if(TI[playerid][tArendKey] == -1) {
					if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID])) {
						if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
							new seller = floatround(ArendInfo[arid][aCost]/100*vip_status[PlayerInfo[playerid][pVips]][vip_rentcar]);
							if(PlayerInfo[playerid][pCash] < (ArendInfo[arid][aCost]-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
							GiveMoney(playerid,-(ArendInfo[arid][aCost]-seller),"аренда ТС");
						}
						else {
							if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
								new seller = floatround(ArendInfo[arid][aCost]/100*BonusInfo[act_rentcar]);
								if(PlayerInfo[playerid][pCash] < (ArendInfo[arid][aCost]-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
								GiveMoney(playerid,-(ArendInfo[arid][aCost]-seller),"аренда ТС");
							}
							else if(BonusInfo[act_select] == 2) {
								new seller = floatround(ArendInfo[arid][aCost]/100*BonusInfo[act_rentcar]);
								if(PlayerInfo[playerid][pCash] < (ArendInfo[arid][aCost]-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
								GiveMoney(playerid,-(ArendInfo[arid][aCost]-seller),"аренда ТС");
							}
						    else {
						    	if(PlayerInfo[playerid][pCash] < ArendInfo[arid][aCost]) return ErrorMessage(playerid,"У Вас недостаточно коштів");
						    	GiveMoney(playerid,-ArendInfo[arid][aCost],"аренда ТС");
						    }
						}

						bizz_pay(ArendInfo[arid][aBizz],floatround(ArendInfo[arid][aCost]*0.2));
						TI[playerid][tArendKey] = arid;

						ArendInfo[arid][aPlayerID] = playerid;
						D(playerid, DIALOG_NONE, DSM, ""YELLOW"транспортний засіб арендовано", ""W"Список доступних команд:\n\n"YELLOW"/lock 3"W" - Закрити/Відкрити арендований транспорт\n"YELLOW"/unrent"W" - Відмовитись від оренди\n\n"NO"При віддаленні від Т/С на 2км контракт автоматично розривається", "Закрити", "");
					}
					else ErrorMessage(playerid, "Цей транспорт уже арендуют");
				}
				else ErrorMessage(playerid,"Ви уже арендуете транспорт");
			}
		}
		case D_COP_GUN: {
			if(!response) return 1;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 40: {

				}
				case 41: {}
				case 42: {}
			}
			switch(listitem) {
				case 0: AC_GivePlayerWeapon(playerid,24,21);
				case 1: AC_GivePlayerWeapon(playerid,25,30);
				case 2: AC_GivePlayerWeapon(playerid,29,90);
				case 3: AC_GivePlayerWeapon(playerid,31,150);
				case 4: AC_GivePlayerWeapon(playerid,3,1);
				case 5: SetPlayerArmour(playerid,100);
			}

		}
		case dGiveGunTD: {
			if(!response) return true;
			if(!PlayerInfo[playerid][pMember]) return 1;

			if(strfind(inputtext, "Бронежилет") != -1) {
				SetPlayerArmour(playerid, 100.0);
				return true;
			}
			if(listitem >= 9) return true;
			if(GunTickGet[playerid][listitem] > unix) return ErrorMessage(playerid,"Не можна брати зброю дуже часто");
			GunTickGet[playerid][listitem] = unix+20;
			new team;
			switch(GetPlayerVirtualWorld(playerid)) {
				case 40: team = fLSPD;
				case 41: team = fSFPD;
				case 42: team = fLVPD;
				case 43: team = fFBI;
			}
			for(new i = 0 ; i < 9 ; i++) {
				if(strfind(inputtext, FW[i][team][fwName]) != -1) {
					new count_minus = 100;
					switch(FW[i][team][fwGunID]) {
						case 24: count_minus = 60;
						case 25: count_minus = 60;
						case 29: count_minus = 80;
						case 31: count_minus = 100;
						case 30: count_minus = 100;
						case 34: count_minus = 250;
						case 99: count_minus = 30;
						default: count_minus = 90;
					}
					if(FI[team][fMats] < count_minus) return ErrorMessage(playerid,"Недостаточно боєприпасів");
					if(IsACop(playerid) && PlayerInfo[playerid][pRank] == 1 && FW[i][team][fwGunID] != 3) {
						ErrorMessage(playerid,"Для Вашого ранга доступна только дубинка");
						return true;
					}
					FI[team][fMats] -= count_minus;
					UpdateFraction(team,"Mats",FI[team][fMats]);
					if(FW[i][team][fwGunID] == 99) {
						if(PlayerInfo[playerid][pMask] == vip_status[PlayerInfo[playerid][pVips]][vip_mask]) {
							new string[128];
							format(string,sizeof(string),"Не можна хранить більше %d масок",vip_status[PlayerInfo[playerid][pVips]][vip_mask]);
							ErrorMessage(playerid, string);
							return 1;
						}
						PlayerInfo[playerid][pMask] += 1;
						UpdatePlayerData(playerid,"pMask",PlayerInfo[playerid][pMask]);
						SendUse(playerid,"Использовать маску - "W"/mask");
						return 1;
					}
					AC_GivePlayerWeapon(playerid,FW[i][team][fwGunID],FW[i][team][fwGunAmmo]);
					break;
				}
			}
			ShowGetGun(playerid);
			return true;
		}
		case D_MATERIALS_BUY: {
			if(!response) return 1;
			if(!IsAMafia(playerid)) return ErrorMessage(playerid,"Ви не мафиози");
			if(GetPlayerMoneyEx(playerid) < 50000) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			if(GetPlayerMoneyEx(playerid) < 50000) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			if(FI[GetTeamID(playerid)][fMats]+10000 > 300000) return ErrorMessage(playerid,"На склад вашої мафії не поміститься стільки боєприпасів");
			FI[GetTeamID(playerid)][fMats] += 10000;
			UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
			GiveMoney(playerid,-50000,"покупка матов мафии");
			SendOk(playerid, "Ви купили 10000 боєприпасів за 50000 вирт");
		}
		case dEContract: {
			if(!response) return 1;
			if(isNumeric(inputtext) || !strlen(inputtext)) return ErrorMessage(playerid,"От 5 и до 50 хот-догов");
			new litres = strval(inputtext);
			new price = litres*gBusiness[GetPVarInt(playerid,"e_biz")][bizzPrice]*50;
			if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			if(GetPVarInt(playerid,"eatcolvo") + litres > 50) return ErrorMessage(playerid,"В машину не поместится більше 50 хот-догов");
			GiveMoney(playerid,-price,"развозчик еды контракт");
			if(gBusiness[GetPVarInt(playerid,"e_biz")][bizzProduct] - litres > 0) {
				gBusiness[GetPVarInt(playerid,"e_biz")][bizzProduct] -= litres;
				bizz_pay(GetPVarInt(playerid,"e_biz"),price);
			}
			new string[128];
			format(string, sizeof(string),"{f6f6d9}Хот-догов: "YELLOW"%d ед.",GetPVarInt(playerid,"eatcolvo") + litres);
			UpdateDynamic3DTextLabelText(PlayerEatText[playerid], -1, string);
			SetPVarInt(playerid,"eatcolvo",GetPVarInt(playerid,"eatcolvo") + litres);
			DeletePVar(playerid,"e_biz");
			return 1;
		}
		case dFContract: {
			if(!response) return 1;
			if(isNumeric(inputtext) || !strlen(inputtext)) return ErrorMessage(playerid,"От 1л и до 50л");
			new litres = strval(inputtext);
			new price = litres*gBusiness[GetPVarInt(playerid,"f_biz")][bizzPrice];
			if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			if(GetPVarInt(playerid,"toplivo") + litres > 100) return ErrorMessage(playerid,"В машину не поместится більше 100л топлива");
			GiveMoney(playerid,-price,"механик контракт");
			if(gBusiness[GetPVarInt(playerid,"f_biz")][bizzProduct] - litres > 0) {
				gBusiness[GetPVarInt(playerid,"f_biz")][bizzProduct] -= litres;
				bizz_pay(GetPVarInt(playerid,"f_biz"),price);
			}
			new string[128];
			format(string, sizeof(string),"{f6f6d9}Топливо: "YELLOW"%d л.",GetPVarInt(playerid,"toplivo") + litres);
			UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, string);
			SetPVarInt(playerid,"toplivo",GetPVarInt(playerid,"toplivo") + litres);
			DeletePVar(playerid,"f_biz");
			return 1;
		}
		case dRefill: {
			new id_mhnk = GetPVarInt(playerid,"id_refill")-1;
			new price_mhnk = GetPVarInt(id_mhnk,"price_refill");
			new litres = GetPVarInt(id_mhnk,"litres_refill");
			DeletePVar(id_mhnk,"id_repair");
			DeletePVar(id_mhnk,"price_repair");
			DeletePVar(playerid,"id_repair");
			if(!response) {
				SendOk(id_mhnk,"Гравець отказался от предложения");
				SendOk(playerid,"Ви отказались от предложения");
			}
			else {
				if(GetPlayerMoneyEx(playerid) < price_mhnk) {
					SendOk(id_mhnk,"У гравця недостаточно коштів");
					ErrorMessage(playerid,"У Вас недостаточно коштів для оплаты");
					return 1;
				}
				new string[144];
				format(string,sizeof(string), "Механик "YELLOW"%s{f6f6d9} заправил Вам автомобіль на "W"%d{f6f6d9} литров за "ORANGE"$%i",player_name[id_mhnk],litres,price_mhnk);
				SendUse(playerid,string);

				format(string,sizeof(string), "Ви заправили автомобіль "YELLOW"%s {f6f6d9}на "W"%d{f6f6d9} литров за "ORANGE"$%i",player_name[playerid],litres,price_mhnk);
				SendUse(id_mhnk,string);

				GiveMoney(playerid,-price_mhnk,"оплата механику заправка");
				GiveMoney(id_mhnk,price_mhnk,"ЗП механику заправка");
				new vehicleid = GetPlayerVehicleID(playerid);

				if(vehicleid) VehicleInfo[vehicleid][vFuel] += float(litres);
				SetPVarInt(id_mhnk,"toplivo",GetPVarInt(id_mhnk,"toplivo") - litres);

				format(string, sizeof(string),"{f6f6d9}Топливо: "YELLOW"%d л.",GetPVarInt(id_mhnk,"toplivo"));
				UpdateDynamic3DTextLabelText(PlayerMehText[id_mhnk], -1, string);
			}
			return 1;
		}
		case dEHotDog: {
			new id_mhnk = GetPVarInt(playerid,"id_hotdog")-1;
			new price_mhnk = GetPVarInt(id_mhnk,"price_hotdog");
			DeletePVar(id_mhnk,"id_hotdog");
			DeletePVar(id_mhnk,"price_hotdog");
			DeletePVar(playerid,"id_hotdog");
			if(!response) {
				SendOk(id_mhnk,"Гравець отказался от предложения");
				SendOk(playerid,"Ви отказались от предложения");
			}
			else {
				if(GetPlayerMoneyEx(playerid) < price_mhnk) {
					SendOk(id_mhnk,"У гравця недостаточно коштів");
					ErrorMessage(playerid,"У Вас недостаточно коштів для оплаты");
					return 1;
				}
				new string[144];
				format(string,sizeof(string), "Продавец хот-догов "YELLOW"%s{f6f6d9} продал Вам хот-дог за "ORANGE"$%i",player_name[id_mhnk],price_mhnk);
				SendUse(playerid,string);

				format(string,sizeof(string), "Ви продали хот-дог "YELLOW"%s{f6f6d9} за "ORANGE"$%i",player_name[playerid],price_mhnk);
				SendUse(id_mhnk,string);

				GiveMoney(playerid,-price_mhnk,"оплата продавцу еды");
				GiveMoney(id_mhnk,price_mhnk,"ЗП продавцу еды");

				GiveFullness(playerid, 40);
				
				SetPVarInt(id_mhnk,"eatcolvo",GetPVarInt(id_mhnk,"eatcolvo") - 1);

				format(string, sizeof(string),"{f6f6d9}Хот-Догов: "YELLOW"%d ед.",GetPVarInt(id_mhnk,"eatcolvo"));
				UpdateDynamic3DTextLabelText(PlayerEatText[id_mhnk], -1, string);
			}
			return 1;
		}
		case D_MARRIED: {
			new id_marriage = GetPVarInt(playerid,"ProposeOffer")-1;
			DeletePVar(id_marriage,"ProposeOffer");
			if(!response) {
				SendOk(id_marriage,"Гравець отказался от предложения");
				SendOk(playerid,"Ви отказались от предложения");
			}
			else {
				if(!GetPVarInt(playerid,"ProposeOffer")) return ErrorMessage(playerid, "Вам ни кто не предлагал выйти замуж/жениться");
				if(!PlayerToPoint(10.0, playerid, -1988.6638,1117.8837,54.4726)) return ErrorMessage(playerid, "Ви не у церкви");
				if(!IsPlayerConnected(id_marriage)) return ErrorMessage(playerid, not_id);
				if(!IsPlayerStream(10.0, playerid, id_marriage)) return ErrorMessage(playerid, "Жених/Невеста не рядом с Вам");
				new string[144];
				format(string, sizeof(string), "Ви приняли предложение от "W"%s's", player_name[id_marriage]);
				SendOk(playerid, string);
				format(string, sizeof(string), "%s принял(а) Ваш запрос бути вашим(ою) Дружиною/Чоловіком", player_name[playerid]);
				SendClientMessage(id_marriage, 0x6ab1ffaa, string);
				format(string, sizeof(string), "{FC6DEC}::: Вітаємо! %s и %s теперь ви чоловік в дружина! :::", player_name[playerid], player_name[id_marriage]);
				SendClientMessageToAll(-1,string);

				strmid(PlayerInfo[playerid][pMarried], player_name[id_marriage], 0, strlen(player_name[id_marriage]));
				strmid(PlayerInfo[id_marriage][pMarried], player_name[playerid], 0, strlen(player_name[playerid]));

				new query[156];
				format(query, sizeof(query), "UPDATE `accounts` SET `pMarried` = '%s' WHERE `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pMarried],PlayerInfo[playerid][pID]);
				mysql_pquery(connects, query, "", "");

				format(query, sizeof(query), "UPDATE `accounts` SET `pMarried` = '%s' WHERE `pID` = '%d' LIMIT 1",PlayerInfo[id_marriage][pMarried],PlayerInfo[id_marriage][pID]);
				mysql_pquery(connects, query, "", "");
			}
			return 1;
		}
		case D_BUYNARKO: {
			if(!response) return 1;
		    if(strval(inputtext) < 1 || strval(inputtext) > 51) {
				static const f_str[] = ""W"Укажите количество наркотиків для покупки:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1г"W" наркотиків: "GREEN"$%d"W"\n\
\tВ кишеню поміститься: "YELLOW"%d"W"\n";
				new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];

				format(string,sizeof(string),f_str,pricedrugs,50-PlayerInfo[playerid][pDrugs]);
				D(playerid,D_BUYNARKO,DSI, ""YELLOW"Покупка наркотиків", string, "Купити", "Відміна");
				return 1;
			}
		    if(PlayerInfo[playerid][pDrugs] + strval(inputtext) > vip_status[PlayerInfo[playerid][pVips]][vip_drugs]) return ErrorMessage(playerid,"Ви не можете взяти багато");
			if(GetPlayerMoneyEx(playerid) < pricedrugs*strval(inputtext)) return ErrorMessage(playerid,"У Вас недостаточно грошей");
			GiveMoney(playerid,-pricedrugs*strval(inputtext),"покупка нарко притон");
			PlayerInfo[playerid][pDrugs] += strval(inputtext);
			UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
			new string[128];
			format(string,sizeof(string),"Ви купили "YELLOW"%dг {f6f6d9}наркотиків за "ORANGE"$%d",strval(inputtext),pricedrugs*strval(inputtext));
			SendUse(playerid,string);
		}
		case D_ADMC: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pAdmin] < listitem+1) return ErrorMessage(playerid,"Ты еще маленький");
			new string[1500],str[120];
			for(new adm = 0;adm < MAX_ADM_CMDS;adm++) {
				if(AdminCommand[adm][cmdLVL] != listitem+1) continue;
				format(str, sizeof(str), "\n\t{70c425}%s"W" - %s", AdminCommand[adm][cmdName], AdminCommand[adm][cmdInfo]);
				strcat(string, str);
			}
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Адмін команды",string,"Закрити","");
		}
		case D_MP: {
	        if(!response) return 1;
        	switch(listitem) {
				case 0: {
					if(!Teleport) {
						new string[200];
						if(!Teleport_Players[0]) return ErrorMessage(playerid,"Необхідно указать кількість учасників мероприятия");
					    if(strcmp(Teleport_text,"None",true) == 0) return ErrorMessage(playerid,"Необхідно ввести назва мероприятия");
						format(string,sizeof(string),""YELLOW"[МП]"W" створено мероприятие "YELLOW"%s"W". Количество участников: "YELLOW"%d",Teleport_text,Teleport_Players[0]);
						SendClientMessageToAll(-1,string);
						SendClientMessageToAll(-1,""YELLOW"[МП]"W"Для телепорта введіть: "YELLOW"'/mp'");
      					GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
				        TeleportInfo[0] = GetPlayerInterior(playerid);
				        TeleportInfo[1] = GetPlayerVirtualWorld(playerid);
            			Teleport = true;
						format(string, sizeof(string), "[A] %s[%d] создал мероприятие",player_name[playerid],playerid);
						AdmMSG(0xAFAFAFAA, string,1);
					}
					else {
						new string[128];
                        format(string,sizeof(string),""YELLOW"[МП]"W" Мероприятие "YELLOW"%s"W" телепорт удалён",Teleport_text);
						SendClientMessageToAll(-1,string);
						strmid(Teleport_text, "None", 0, strlen("None"), 36);
						Teleport = false;
						Teleport_Players[0] = Teleport_Players[1] = 0;
						foreach(new i: Player)
						{
							Teleport_Plus[i] = 0;
						}
					}
				}
				case 1: D(playerid, D_MP_1, DSI, ""YELLOW"Видача зброї", "\n\n"W"Введіть "YELLOW"ID"W" зброї и патрони\nПример: 31,500\nГде 31 M4, а 500 патрони\n\n", "Видать", "Виход");
				case 2: {
     				foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
						SetPlayerHealth(i, 100);
						SendOk(i, "Адміністратор выдал Вам жизни");
					}
				}
    			case 3: {
     				foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
						SetPlayerArmour(i, 100);
						SendOk(i, "Адміністратор выдал вам броню");
					}
				}
				case 4: {
     				foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						ResetPlayerWeapons(i);
						SendOk(i, "Адміністратор забрав у вас зброю");
					}
				}
    			case 5: {
     				foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						SetPlayerArmour(i, 0);
						SendOk(i, "Адміністратор забрав у вас броню");
					}
				}
				case 6: {
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						if(i == playerid) continue;
						TogglePlayerControllable(i, 0);
						SendOk(i, "Адміністратор заморозив вас");
					}
					SendOk(playerid,"Гравець заморожений");
				}
				case 7: {
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(GetDistanceBetweenPlayers(playerid,i) > 50) continue;
						if(i == playerid) continue;
						TogglePlayerControllable(i, 1);
						SendOk(i, "Адміністратор разморозил Вас");
					}
					SendOk(playerid,"Гравці розморожені");
				}
				case 8: D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Назва", "\n\n"W"Введіть ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n\n", "Ввід", "Відміна");
				case 9: D(playerid, D_MP_2, DIALOG_STYLE_INPUT, "Назва", "\n\n"W"Введіть назву заходу:\n\n", "Ввід", "Відміна");
				case 10: D(playerid, D_MP_4, DIALOG_STYLE_INPUT, "кількість учасників", "\n\n"W"Введіть кількість участников:\n\n", "Ввід", "Відміна");
			}
		}
		case D_MP_5: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Назва", "\n\n"W"Введіть ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n\n", "Ввід", "Відміна");
			else if(strfind(inputtext,",", true) != -1) {
				new razdel[2][24];
				split(inputtext, razdel, ',');
				if(!(5 <= strval(razdel[1]) <= 50)) return D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Назва", "\n\n"W"Введіть ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n"NO"*{f6f6d9} Радиус от 5 до 50\n\n", "Ввід", "Відміна");
				if(!(1 <= strval(razdel[0]) <= 311)) return D(playerid, D_MP_5, DIALOG_STYLE_INPUT, "Назва", "\n\n"W"Введіть ID временного скина и радиус:\nПример: 299,10\nГде 299 ID скина, а 10 радиус\n"NO"*{f6f6d9} Скины от 1 до 311\n\n", "Ввід", "Відміна");
    			foreach(new i:Player) {
					if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
					if(GetDistanceBetweenPlayers(playerid, i) > strval(razdel[1])) continue;
					if(i == playerid) continue;
					A_SetPlayerSkin(i, strval(razdel[0]));
					SendOk(i, "Адміністратор видав вам тимчасовий скін");
				}
				SendOk(playerid,"Временные скины выданы");
			}
			return 1;
		}
      	case D_MP_1: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_1, DSI, ""YELLOW"Видача зброї", "\n\nВведіть "YELLOW"ID"W" зброї и патрони\nПример: 31,500\nГде 31 M4, а 500 патрони\n\n", "Видать", "Виход");
			else if(strfind(inputtext,",", true) != -1) {
				new razdel[2][24];
				split(inputtext, razdel, ',');
    			foreach(new i:Player) {
					if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
					if(GetDistanceBetweenPlayers(playerid, i) > 50) continue;
					AC_GivePlayerWeapon(i, strval(razdel[0]), strval(razdel[1]));
					SendOk(i, "Адміністратор выдал вам зброю");
				}
			}
			return 1;
		}
    	case D_MP_3: {
            if(!response) return 1;
            SetPlayerPosAC(playerid, TeleportFloat[0], TeleportFloat[1]+2, TeleportFloat[2],TeleportInfo[1],TeleportInfo[0]);
			Teleport_Players[1]++;
			Teleport_Plus[playerid] = 0;
            return 1;
        }
        case D_MP_4: {
			if(!response) return 1;
			if(!strlen(inputtext)) return D(playerid, D_MP_4, DSI, "кількість учасників", "\n\n"W"Введіть кількість участников:\n\n", "Ввід", "Відміна");
			if(!(5 <= strval(inputtext) <= 100)) {
				return D(playerid, D_MP_4, DSI, "кількість учасників", "\n\n"W"Введіть кількість участников:\n\n"NO"*{f6f6d9} От 5 до 100 мест\n\n", "Ввід", "Відміна");
			}
			new string[128];
			format(string,sizeof(string),"Ліміт учасників: "YELLOW"%d"W" створений",strval(inputtext));
			SendOk(playerid,string);
			Teleport_Players[0] = strval(inputtext);
			return 1;
		}
		case D_MP_2: {
			if(!response) return 1;
			if(!strlen(inputtext)) D(playerid, D_MP_2, DSI, ""YELLOW"Назва", "\n\n"W"Введіть назву заходу\n\n", "Ввід", "Відміна");
			else if(strfind(inputtext,"", true) != 0) {
			    strmid(Teleport_text,inputtext,0,strlen(inputtext),36);
			}
			new string[128];
			format(string,sizeof(string),"Назва: "YELLOW"%s"W" створено",inputtext);
			SendOk(playerid,string);
			return 1;
		}
		case D_PROMO: {
			if(!response) return 1;
	        switch(listitem) {
	            case 0: mysql_tquery(connects, "SELECT * FROM promocode", "promo_show", "i", playerid);
	            case 1: D(playerid, D_PROMO_1, DSI, ""YELLOW"Створення промокода", "\n\n"W"Введіть промокод який хочете створити:\n\n", "Далі", "Назад");
	            case 2: D(playerid, D_PROMO_2, DSI, ""YELLOW"Видалення промокода", "\n\n"W"Введіть промокод який хочете видалити:\n\n", "Далі", "Назад");
	        }
		}
		case D_PROMO_1: {
            if(!response) return 1;
            if(!strlen(inputtext)) return D(playerid, D_PROMO_1, DSI, ""YELLOW"Створення промокода", "\n\n"W"Введіть промокод який хочете створити\n{f6f6d9}Від 3 до 16 символів\n\n", "Далі", "Назад");
            for(new i = strlen(inputtext); i != 0; --i) {
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я', ' ': {
					    D(playerid, D_PROMO_1, DSI, ""YELLOW"Створення промокода", "\n\n"W"Введіть промокод який хочете створити\n\n"NO"*{f6f6d9} Від 3 до 16 символів\n"NO"*{f6f6d9} Включіть англійську розкладку\n\n", "Далі", "Назад");
						return 1;
					}
				}
			}
			if(!(3 <= strlen(inputtext) <= 16)) {
			    D(playerid, D_PROMO_1, DSI, ""YELLOW"Створення промокода", "\n\n"W"Введіть промокод який хочете створити\n\n"NO"*{f6f6d9} Від 3 до 16 символів\n\n", "Далі", "Назад");
				return 1;
			}
            SetPVarString(playerid, "promoname", inputtext);
            D(playerid, D_PROMO_3, DSL, ""YELLOW"Створення промокода", ""YELLOW"1."W" SD-Pistol\n"YELLOW"2."W" Deagle\n"YELLOW"3."W" ShotGun\n"YELLOW"4."W" MP5\n"YELLOW"5."W" AK-47\n"YELLOW"6."W" M4\n"NO"7. Не выдавать", "Вибрати", "Відміна");
	    }
		case D_PROMO_3: {
            if(!response) return 1;
            SetPVarInt(playerid, "promoskills", listitem);
			D(playerid, D_PROMO_4, DSL, ""YELLOW"Створення промокода", ""YELLOW"1."W" Водійське посвідчення\n"YELLOW"2."W" Ліцензія на виліт\n"YELLOW"3."W" Ліцензія на водний транспорт\n"YELLOW"4."W" Ліцензія на зброю\n"NO"5. Не видавати", "Вибрати", "Відміна");
	    }
    	case D_PROMO_4: {
            if(!response) return 1;
            SetPVarInt(playerid, "promolic", listitem);
            D(playerid, D_PROMO_5, DSI, ""YELLOW"Створення промокода", "\n\n"W"Укажіть кількість грошей, які буде видано за використання промокода\n{f6f6d9}Від $5.000$ До $50.000\n\n", "Готово", "Відміна");
        }
    	case D_PROMO_5:  {
            if(!response) return 1;
            if(!strlen(inputtext)) return D(playerid, D_PROMO_5, DSI, ""YELLOW"Створення промокода", "\n\n"W"Вкажіть кількість грошей, які буде видано за використання промокода\n{f6f6d9}Від $5.000$ до $50.000\n\n", "Готово", "Відміна");
            if(!(5000 <= strval(inputtext) <= 50000)) {
				return D(playerid, D_PROMO_5, DSI, ""YELLOW"Створення промокода", "\n\n"W"Вкажіть кількість грошей, які буде видано за використання промокода\n\n"NO"*{f6f6d9} Від $5.000$ до $50.000\n\n", "Готово", "Відміна");
            }
            SetPVarInt(playerid, "promomoney", strval(inputtext));
            new promoname[16];
            GetPVarString(playerid, "promoname", promoname, sizeof(promoname));
			new str2[7][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4","Не видавати"};
			new str3[5][20] = {"Вод.права","виліт","Вод.транспорт","Зброя","Не видавати"};

			new string[360];
			format(string, sizeof(string), "\
				"W"Ви хочете створити промокод "YELLOW"%s"W"?\n\
				Кількість грошей: "GREEN"$%i"W"\n\
				Навички володіння зброєю: "GREEN"%s"W"\n\
				Ліцензія: "GREEN"%s",
			promoname,GetPVarInt(playerid, "promomoney"), str2[GetPVarInt(playerid, "promoskills")], str3[GetPVarInt(playerid, "promolic")]);
            D(playerid, D_PROMO_6, DSM, ""YELLOW"Створення промокода", string, "Створити", "Скасувати");
        }
		case D_PROMO_6: {
            if(!response) return 1;
            new promoname[16];
            GetPVarString(playerid, "promoname", promoname, sizeof(promoname));
            mysql_tquery(connects, "SELECT * FROM "T_PROMOCODE"", "promo_create", "is", playerid, promoname);
	    }
    	case D_PROMO_2: {
            if(!response) return 1;
            if(!strlen(inputtext)) return D(playerid, D_PROMO_2, DSI, ""YELLOW"Видалення промокода", "\n\n"W"Введіть промокод який хочете видалити:\n\n", "Далі", "Назад");
            for(new i = strlen(inputtext); i != 0; --i) {
				switch(inputtext[i]) {
					case 'А'..'Я', 'а'..'я', ' ': {
						return D(playerid, D_PROMO_2, DSI, ""YELLOW"Видалення промокода", "\n\n"W"Введіть промокод який хочете видалити:\n\n"NO"*{f6f6d9} Включіть англійську розкладку\n\n", "Далі", "Назад");
					}
				}
			}
			mysql_tquery(connects, "SELECT * FROM "T_PROMOCODE"", "promo_dell", "is", playerid, inputtext);
	    }
		case D_USE_PROMO: {
	        if(!response) return 1;
			if(strlen(inputtext) < 1 || strlen(inputtext) > 15) return ErrorMessage(playerid,"Довжина промокода повинна бути від 1 до 15 символів");
			if(is_text_invalid(inputtext)) return ErrorMessage(playerid,"Присутні заборонені символи");
	        new query[128];
            format(query, 128, "SELECT * FROM "T_PROMOCODE" WHERE code LIKE '%s'", inputtext);
            mysql_tquery(connects, query, "promo_check", "is", playerid, inputtext);
	    }
		case D_COMP_GAME: {
	    	if(!response) return 1;
	    	switch(listitem) {
	    	    case 0: D(playerid,D_COMP_GAME_1,DSL,""YELLOW"Capture Blocks",""YELLOW"1."W" Играть\n"YELLOW"2."W" Інформація", "Вибрати", "Закрити");
	    	    case 1: D(playerid,D_COMP_GAME_2,DSL,""YELLOW"DM - Арена",""YELLOW"1."W" Играть\n"YELLOW"2."W" Інформація\n"YELLOW"3."W" TOP - 5", "Вибрати", "Закрити");
	    	    case 2: D(playerid,D_COMP_GAME_3,DSL,""YELLOW"Гонка Вооружений",""YELLOW"1."W" Играть\n"YELLOW"2."W" Інформація\n"YELLOW"3."W" TOP - 5", "Вибрати", "Закрити");
			}
		}
		case D_COMP_GAME_1: {
	    	if(!response) return 1;
	    	switch(listitem) {
	    	    case 0: {
	          		if(g_game_status != 2) {
						new Float:pos[3];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						SetPVarFloat(playerid, "pos_comp_x", pos[0]);
						SetPVarFloat(playerid, "pos_comp_y", pos[1]);
						SetPVarFloat(playerid, "pos_comp_z", pos[2]);
						SetPVarInt(playerid, "comp_int", GetPlayerInterior(playerid));
						SetPVarInt(playerid, "comp_vw", GetPlayerVirtualWorld(playerid));
						if(g_game_status == 0) {
							g_sign_up_timer = SetTimer("MinigamePrepare", 30000, false);
							g_game_status = 1;
							SendOk(playerid,"Ви створили сервер. Очікуйте підключення інших гравців [30 секунд]");
							TI[playerid][tBlockWars] = true;
						}
						else if(g_game_status == 1) {
			    			if(!TI[playerid][tBlockWars]) {
								TI[playerid][tBlockWars] = true;
								SendOk(playerid, "Ви присоеденились к игре");
								new null;
				    			foreach(new i:Player) {
									if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
									if(!TI[i][tBlockWars]) continue;
									null++;
								}
								if(null == 4) {
									KillTimer(g_sign_up_timer);
									MinigamePrepare();
								}
							}
							else ErrorMessage(playerid,"Ви уже записались на гру");
						}
					}
					else ErrorMessage(playerid,"Гра уже началась");
				}
	    	    case 1: {
					static const f_str[] = "\t\t\t{FFFF00}- Capture Blocks -"W"\n\n\
Суть данной мини-ігри {FFFF00}'Capture Blocks'"W" такова:\n\
За {FFFF00}1"W" хвилину захватити велику кількість квадратов,\n\
квадрат захватывается и красится в {FFFF00}Ваш"W" колір,\n\
свой колір можно узнать на текстдрайве при начале мини-ігри.\n\
Максимальна кількість гравців - {FFFF00}4"W", минимальное - {FFFF00}2"W".";
				    new string[sizeof(f_str)];
					format(string,sizeof(string),f_str);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Capture Blocks",string, "Закрити", "");
				}
			}
		}
		case D_COMP_GAME_2: {
	    	if(!response) return 1;
	    	if(TI[playerid][tBlockWars]) return ErrorMessage(playerid,"Ви записаны на гру Capture Blocks");
	    	switch(listitem) {
	    	    case 0: {
					TI[playerid][tDMArea][0] = 1;
					TI[playerid][tDMArea][1] = 0;
					TI[playerid][tDMArea][2] = 0;
					new Float:pos[3];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					SetPVarFloat(playerid, "pos_comp_x", pos[0]);
					SetPVarFloat(playerid, "pos_comp_y", pos[1]);
					SetPVarFloat(playerid, "pos_comp_z", pos[2]);
					SetPVarInt(playerid, "comp_int", GetPlayerInterior(playerid));
					SetPVarInt(playerid, "comp_vw", GetPlayerVirtualWorld(playerid));
					new string[100];
     				format(string, sizeof(string), "Присоединился новый гравець - "ORANGE"%s",player_name[playerid]);
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(!TI[i][tDMArea][0]) continue;
						SendClientMessage(i,-1,string);
					}
					SendOk(playerid,"Для выхода из DM-Арены,використовуйте: "W"/power");
					DelGun(playerid);
					AC_GivePlayerWeapon(playerid, PaintGun[random(sizeof(PaintGun))], 3000);
	    	    	new rand = random(sizeof(DmArenaSpawns));
					SetPlayerPosAC(playerid, DmArenaSpawns[rand][0], DmArenaSpawns[rand][1], DmArenaSpawns[rand][2],8,0);
					SetPlayerHealth(playerid, 100.0);
					SetPlayerColor(playerid,0x56FB4EFF);
					format(string,sizeof(string),"{1bd12f}Вбивств:{ffffff}%d\n{1bd12f}Смертей:{ffffff}%d",TI[playerid][tDMArea][1],TI[playerid][tDMArea][2]);
					DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
					DMSTATUS[playerid] = CreateDynamic3DTextLabel(string, 0xFF6347FF, 0,0,0.4,10.0,playerid,INVALID_VEHICLE_ID,1,-1,-1,-1,10);
				}
				case 1: {
				    static const f_str[] = "\t\t\t\t{FFFF00}- DM - Арена -"W"\n\n\
Добро пожаловать на {FFFF00}'DM - Арену'"W".\n\
Данный режим предназначен для отдыха души и разума от повседневных забот.\n\
Зброя: {FFFF00}Рандомное"W"\n\
После убийства ваше здоровье пополняется на {FFFF00}25 хп"W".\n\
Цель ігри: Набрати найбільшу кількість вбивств\n\n\
Приз - {FFFF00}ВСЕОБЩЕЕ УВАЖЕНИЕ";
				    new string[sizeof(f_str)];
					format(string,sizeof(string),f_str);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"DM - Арена",string, "Закрити", "");
				}
				case 2: {
					new name[24],rows;
					new kills;
					new Cache:result = mysql_query(connects, "SELECT `Name`,`pKills` > 0 FROM `accounts` ORDER BY `pKills` DESC LIMIT 5");
					cache_get_row_count(rows);
					if(rows) {
						new string[300];
	       				string = ""YELLOW"№ Имя\t"YELLOW"Убийств\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
							cache_get_value_name_int(i, "pKills",kills);
							format(str, sizeof(str), f_str, i+1, name,kills);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, "ТОП гравців", string, "Закрити", "");
					}
					else ErrorMessage(playerid,"Список еще не составлен");
					cache_delete(result);
				}
			}
		}
		case D_COMP_GAME_3: {
	    	if(!response) return 1;
	    	if(TI[playerid][tBlockWars]) return ErrorMessage(playerid,"Ви записаны на гру Capture Blocks");
	    	switch(listitem) {
	    	    case 0: {
					TI[playerid][tGunArea][0] = 1;
					TI[playerid][tGunArea][1] = 0;
					TI[playerid][tGunArea][2] = 0;
					TI[playerid][tGunArea][3] = 1;
					new Float:pos[3];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					SetPVarFloat(playerid, "pos_comp_x", pos[0]);
					SetPVarFloat(playerid, "pos_comp_y", pos[1]);
					SetPVarFloat(playerid, "pos_comp_z", pos[2]);
					SetPVarInt(playerid, "comp_int", GetPlayerInterior(playerid));
					SetPVarInt(playerid, "comp_vw", GetPlayerVirtualWorld(playerid));
					new string[100];
     				format(string, sizeof(string), "Присоединился новый гравець - "ORANGE"%s",player_name[playerid]);
					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(!TI[i][tGunArea][0]) continue;
						SendClientMessage(i,-1,string);
					}
					SendOk(playerid,"Для выхода из Гонки Вооружений, використовуйте: "W"/power");
					DelGun(playerid);
					AC_GivePlayerWeapon(playerid, ArenaGun[5], 3000);
	    	    	new rand = random(sizeof(DMPositions));
					SetPlayerPosAC(playerid, DMPositions[rand][0], DMPositions[rand][1], DMPositions[rand][2],141,141);
					SetPlayerHealth(playerid, 100.0);
					SetPlayerColor(playerid,0x56FB4EFF);
					format(string,sizeof(string),"{1bd12f}Kills Gun:{ffffff}%d/3\n{1bd12f}Guns:{ffffff}%d/6",TI[playerid][tGunArea][1],TI[playerid][tGunArea][3]);
					DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
					DMSTATUS[playerid] = CreateDynamic3DTextLabel(string, 0xFF6347FF, 0,0,0.4,10.0,playerid,INVALID_VEHICLE_ID,1,-1,-1,-1,10);
				}
				case 1: {
				    static const f_str[] = "\t{FFFF00}    - Гонка Вооружений -"W"\n\n\
Суть данной ігри {FFFF00}'Гонка Вооружений'"W" такова:\n\
Пройти всю лесенку зміни зброї.\n\
Всего оружий {FFFF00}6"W".\n\
Для зміни зброї потрібно убийств {FFFF00}3"W".\n\
Зброя №1 {FFFF00}M4"W".\n\
Зброя №2 {FFFF00}AK-47"W".\n\
Зброя №3 {FFFF00}MP5"W".\n\
Зброя №4 {FFFF00}Shotgun"W".\n\
Зброя №5 {FFFF00}Deagle"W".\n\
Зброя №6 {FFFF00}USP"W".\n\n\
Приз - {FFFF00}ВСЕОБЩЕЕ УВАЖЕНИЕ";
					new string[sizeof(f_str)];
					format(string,sizeof(string),f_str);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Гонка Вооружений",string, "Закрити", "");
				}
    			case 2: {
					new name[24],rows;
					new kills;
					new Cache:result = mysql_query(connects, "SELECT `Name`,`pWinArea` > 0 FROM `accounts` ORDER BY `pWinArea` DESC LIMIT 5");
					cache_get_row_count(rows);
					if(rows) {
						new string[300];
	       				string = ""YELLOW"№ Имя\t"YELLOW"Побед\n\n";
						static const f_str[] = ""YELLOW"%i. "W"%s\t"GREEN"%d\n";
	        			new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
						for(new i; i < rows; i ++) {
							cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
							cache_get_value_name_int(i, "pWinArea",kills);
							format(str, sizeof(str), f_str, i+1, name,kills);
	            			strcat(string, str);
						}
						D(playerid, DIALOG_NONE, DSTH, "ТОП гравців", string, "Закрити", "");
					}
					else ErrorMessage(playerid,"Список еще не составлен");
					cache_delete(result);
				}
			}
		}
		case D_DISEASE: {
			if(!response) return true;
			new i = GetPVarInt(playerid,"gheal");
			new string[156];

			new price_1,price_2;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller_1 = floatround(1500/100*vip_status[PlayerInfo[playerid][pVips]][vip_disease]);
				new seller_2 = floatround(2500/100*vip_status[PlayerInfo[playerid][pVips]][vip_disease]);
				price_1 = (1500-seller_1);
				price_2 = (2500-seller_2);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
					new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
					price_1 = (1500-seller_1);
					price_2 = (2500-seller_2);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
					new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
					price_1 = (1500-seller_1);
					price_2 = (2500-seller_2);
				}
			    else {
			    	price_1 = 1500;
			    	price_1 = 2500;
			    }
			}

			switch(take_items[playerid][listitem]) {
				case 0: {
					if(GetPlayerMoneyEx(i) < price_1) return ErrorMessage(playerid,"У гравця недостаточно коштів");
					format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} лікування захворювання грипп",player_name[i]);
					SendUse(playerid,string);

					static const f_str[] = "\n"W"Доктор: "YELLOW"%s"W" пропонує вилікувати Вас від захворювання грипп.\n\
Вартість процедур: "GREEN"$%d.\n\n"YELLOW"\tВи згодні пройти курс лікування?";
					new str[sizeof(f_str) +1 + (-2 + 25) + (-2 + 6)];
					format(str, sizeof(str), f_str,player_name[playerid],price_1);
					D(i,D_DISEASE_2,DSM, ""YELLOW"Лікування",str,"Так", "Ні");
				}
				case 1: {
					if(GetPlayerMoneyEx(i) < price_2) return ErrorMessage(playerid,"У гравця недостаточно коштів");
					format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} лікування хвороби анорексия",player_name[i]);
					SendUse(playerid,string);

					static const f_str[] = "\n"W"Доктор: "YELLOW"%s"W" пропонує вилікувати Вас від захворювання анорексия.\n\
Вартість процедур: "GREEN"$%d.\n\n"YELLOW"\tВи згодні пройти курс лікування?";
					new str[sizeof(f_str) +1 + (-2 + 25) + (-2 + 6)];
					format(str, sizeof(str), f_str,player_name[playerid],price_2);
					D(i,D_DISEASE_2,DSM, ""YELLOW"Лікування",str,"Так", "Ні");
				}
			}
			SetPVarInt(i,"gheal2",take_items[playerid][listitem]);
			SetPVarInt(i,"gheal2p",playerid);
		}
		case D_DISEASE_2: {
			new id = GetPVarInt(playerid,"gheal2p");
			new switem = GetPVarInt(playerid,"gheal2");
			DeletePVar(playerid,"gheal2p");
			DeletePVar(playerid,"gheal2");
			if(!response) {
				SendOk(playerid,"Ви отказались от лечения");
				SendOk(id,"Гравець отказался от лечения");
			}
			else {
				new price_1,price_2;
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
					new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
					price_1 = (1500-seller_1);
					price_2 = (2500-seller_2);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
					new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
					price_1 = (1500-seller_1);
					price_2 = (2500-seller_2);
				}
			    else {
			    	price_1 = 1500;
			    	price_1 = 2500;
			    }

				new string[144];
				switch(switem) {
					case 0: {
						SendOk(playerid,"Ви пройшли курс лікування від хвороби "W"грипп");
						format(string, sizeof(string),"Гравець "YELLOW"%s {f6f6d9}прошел курс лечения від хвороби "W"грипп{f6f6d9} за "ORANGE"%d", player_name[playerid],price_1);
						SendUse(id,string);
						GiveMoney(playerid,-price_1,"лікування от гриппа");
						GiveMoney(id,225,"лікування от гриппа");
						FI[fWHITEHOUSE][fBank] += 1275;
						UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
						PlayerInfo[playerid][pDisease][0] = 0;
						UpdatePlayerData(playerid,"pDisease_0",0);
					}
					case 1: {
						SendOk(playerid,"Ви пройшли курс лікування від хвороби "W"анорексия");
						format(string, sizeof(string),"Гравець "YELLOW"%s {f6f6d9}прошел курс лечения від хвороби "W"анорексия{f6f6d9} за "ORANGE"%d", player_name[playerid],price_2);
						SendUse(id,string);
						GiveMoney(playerid,-price_2,"лікування от анорексии");
						GiveMoney(id,375,"лікування от гриппа");
						FI[fWHITEHOUSE][fBank] += 2125;
						UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
						PlayerInfo[playerid][pDisease][1] = 0;
						UpdatePlayerData(playerid,"pDisease_1",0);
						SetFullness(playerid, 100);
					}
				}
			}
		}
		case D_QUEST: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512];
			if(QuestProgress[playerid][id] == 100) return SendBotMessage(playerid,"Друже, ти уже виконав це задання");
			switch(id) {
				case 2,3,4: {
					if(QuestProgress[playerid][id-1] != 100) return SendBotMessage(playerid,"Для початку виконай попередні завдання");
				}
			}
			if(AcceptQuest[playerid][id] == 0) {
				format(string,sizeof(string),"%s\n\n"YELLOW"Ви дійсно хочете почати данный квест?",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, ""YELLOW"Квест",string,"Почати","Відміна");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
						case 1: {
							SendBotMessage(playerid,"А ты молодец! Быстрота выполнения задания меня шокирует! Держи награду!");
							GiveMoney(playerid,8000,"квест яблоки");
						}
						case 2: {
							SendBotMessage(playerid,"Отлично! Получите и распишитесь!");
							GiveMoney(playerid,8000,"квест оружейка");
						}
						case 3: {
							SendBotMessage(playerid,"Молодчина! Осталось последнее задание для тебя!");
							GiveMoney(playerid,8000,"квест нефтезавод");
						}
						case 4: {
							SendBotMessage(playerid,"Было приятно иметь дело с тобой! Хорошего настроения и верных друзей в нашем штаті!");
							GiveMoney(playerid,10000,"квест лісопилка");
						}
					}
					if(PlayerInfo[playerid][pFamily]) reputation_family(PlayerInfo[playerid][pFamily]-1,1);
					QuestProgress[playerid][id] = 100;
					new query[256];
					format(query, sizeof(query), "UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
		case D_QUEST_GANG: {
			if(!response) return 1;
			new id = QuestShow[playerid][listitem],string[512];
			if(QuestProgress[playerid][id] == 100) return SendBotMessage(playerid,"Друже, ти уже виконав це задання");
			switch(id) {
				case 6,7,8,9: {
					if(QuestProgress[playerid][id-1] != 100) return SendBotMessage(playerid,"Для початку виконай попередні завдання");
				}
			}
			if(AcceptQuest[playerid][id] == 0) {
				format(string,sizeof(string),"%s\n\n"YELLOW"Ви дійсно хочете почати данный квест?",QI[id][QuestText]);
				D(playerid,D_QUEST_1,DSM, ""YELLOW"Квест",string,"Почати","Відміна");
				QuestClick[playerid] = id;
			}
			else {
				if(QuestProgress[playerid][id] == QI[id][LastProgress]) {
					switch(id) {
						case 5: {
							SendBotMessage(playerid,"Красавчик. Получи бабосики");
							GiveMoney(playerid,5000,"квест вор");
						}
						case 6: {
							SendBotMessage(playerid,"Отлично! Из тебя получился хороший грабитель!");
							GiveMoney(playerid,7000,"квест грабитель");
						}
						case 7: {
							SendBotMessage(playerid,"Ты не перестаешь меня удивлять! Я надеюсь ты еще и на продаже заработал!");
							GiveMoney(playerid,7000,"квест продавец");
						}
						case 8: {
							SendBotMessage(playerid,"А ты меткий стрелок! Быстро справился! У меня для тебя награда!");
							GiveMoney(playerid,10000,"квест тащер");
						}
						case 9: {
							SendBotMessage(playerid,"Поздравляю! Ты прошёл все задания у меня! Удачи!");
							GiveMoney(playerid,20000,"квест Провокатор");
						}
					}
					if(PlayerInfo[playerid][pFamily]) reputation_family(PlayerInfo[playerid][pFamily]-1,1);
					QuestProgress[playerid][id] = 100;
					new query[256];
					format(query, sizeof(query), "UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
					mysql_tquery(connects, query);
				}
			}
			return 1;
		}
		case D_QUEST_1: {
			if(!response) return 1;
			new id = QuestClick[playerid];
			if(QuestProgress[playerid][id]==100) return ErrorMessage(playerid,"Ви уже выполняли у меня это задание!");//Вы уже его выполнили
			if(QuestProgress[playerid][id]>=0 && AcceptQuest[playerid][id]!=0) return ErrorMessage(playerid,"Ви уже приняли это задание!"); //Вы уже его приняли
			if(AcceptQuest[playerid][id]==0) {
				new query[256];
				format(query, sizeof(query), "INSERT IGNORE INTO `questsprogress` (`idquest`, `name`, `progress`, `accept`) VALUES ('%d', '%s', '%d', '%d')", id, player_name[playerid], 0, 1);
				mysql_tquery(connects, query, "SaveQuests", "dd", playerid, id);
				AcceptQuest[playerid][id] = 1;
				QuestProgress[playerid][id] = 0;
				SendBotMessage(playerid,"Бажаю удачі! Для перегляду завдань введи: /quest");
				NextStapQI(playerid,id);
			}
			return 1;
		}
		case D_QUEST_2: {
		    if(!response) return 1;
			new id = QuestShow[playerid][listitem];
			if(QuestProgress[playerid][id]==100) return ErrorMessage(playerid,"Вибранный квест уже выполнен");
			new string[512];
			if(QuestProgress[playerid][id] < QI[id][LastProgress]) format(string,sizeof(string),"{f6f6d9}Прогресс: "ORANGE"%d/%d"W"",QuestProgress[playerid][id],QI[id][LastProgress]);
			else format(string,sizeof(string),"{f6f6d9}Прогресс: "NO"Можно завершить"W"");
			format(string,sizeof(string),"%s\n\n%s",QI[id][QuestText],string);
			D(playerid,D_QUEST_3,DSM,QI[id][QuestName],string,"Почати","Закрити");
			QuestClick[playerid] = id;
		}
		case D_QUEST_3: {
		    if(!response) return 1;
			NextStapQI(playerid,QuestClick[playerid]);
		}
		case D_RIELTOR: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					drieltorka[playerid] = 0;
					new string[1512],houseidd = 0,classname[20];
					for(new i = 0; i < gHouseCount; i ++) {
						if(gHouses[i][houseOwnerID] != 0) continue;
						switch(gHouses[i][houseClass]) {
							case 0:classname = "Эконом";
							case 1:classname = "Cредний";
							case 2:classname = "Элитный";
							case 3:classname = "Особняк";
							default: classname = "Неизвестно";
						}
						format(string, sizeof(string), "%sДом "ORANGE"№%d "W"[%s]\n",string,i+1,classname);
						houseidd++;
						if(houseidd == 30) {
							format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
							break;
						}
					}
					if(!houseidd) return ErrorMessage(playerid,"Свободных домов нет");
					D(playerid, D_RIELTOR_HOUSE, DSL, ""YELLOW"Виберите дом", string, "Вибрати", "Назад");
					return 1;
				}
				case 1: {
					drieltorka[playerid] = 0;
					new string[1512],bizzid = 0;
					for(new i = 0; i < gBusinessCount; i ++) {
						if(gBusiness[i][bizzOwnerID] != 0) continue;
						format(string, sizeof(string), "%sбізнес "ORANGE"№%d "W"[%s] [%s]\n",string,i+1,gBusiness[i][bizzName],gBusinessTypeName[gBusiness[i][bizzType]-1]);
						bizzid++;
						if(bizzid == 20) {
							format(string, sizeof(string), "%s{AFAFAF}Далее >>>\n", string);
							break;
						}
					}
					if(!bizzid) return ErrorMessage(playerid,"Свободных бізнесов нет");
					D(playerid, D_RIELTOR_BIZZ, DSL, ""YELLOW"Виберите бізнес", string, "Вибрати", "Назад");
					return 1;
				}
			}
		}
		case D_RIELTOR_HOUSE: {
			if(!response) return 1;
			if(listitem == 30 || listitem == 31) CheckHouses(playerid,listitem);
			else {
				new bizz = TI[playerid][tSelectedBusinessID];
				if(bizz < 0) return 1;
				new price = gBusiness[bizz][bizzPrice]*150;
				new houseid = strval(inputtext[4])-1;
				SetPVarInt(playerid,"hrieltor",houseid+1);
				if(GetString(inputtext, "<<< Назад")) return CheckHouses(playerid,31);
				new classname[20];
				switch(gHouses[houseid][houseClass]) {
					case 0:classname = "Эконом";
					case 1:classname = "Cредний";
					case 2:classname = "Элитный";
					case 3:classname = "Особняк";
					default: classname = "Неизвестно";
				}
				static const f_str[] = ""W"Дом № \t\t"YELLOW"%d\n\
"W"Клас: \t\t\t"YELLOW"%s\n\
"W"Гос.Ціна: \t\t"GREEN"$%d\n\n\
"W"Вартість осмотра будинку - "GREEN"$%d";
				new string[sizeof(f_str) +1 + (-2 + 10) + (-2 + 20) + (-2 + 7)];

				format(string,sizeof(string),f_str,houseid+1, classname, gHouses[houseid][housePrice],price);
				D(playerid,D_RIELTOR_HOUSE_2,DSM, ""YELLOW"Ріелторська агенція",string,"Осмотреть","Відміна");
			}
		}
		case D_RIELTOR_HOUSE_2: {
			if(!response) return DeletePVar(playerid,"hrieltor");
			new bizz = TI[playerid][tSelectedBusinessID];
			if(bizz < 0) return 1;
			new price = gBusiness[bizz][bizzPrice]*150;
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно коштів");
			bizz_pay(bizz,price);
			GiveMoney(playerid,-price,"осмотр риэлторка");
			new houseid = GetPVarInt(playerid,"hrieltor")-1,Float:pos[3];

			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);

			SetPVarFloat(playerid,"rielX",pos[0]);
			SetPVarFloat(playerid,"rielY",pos[1]);
			SetPVarFloat(playerid,"rielZ",pos[2]);
			SetPVarInt(playerid,"rielVW",GetPlayerVirtualWorld(playerid));

			SetPlayerPosAC(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ]-50.0,0,0);
			TogglePlayerControllable(playerid,0);

			SetPlayerCameraPos(playerid,gHouses[houseid][houseX] + (-8.0 * floatsin(gHouses[houseid][houseR], degrees)),gHouses[houseid][houseY] + (5.0 * floatcos(gHouses[houseid][houseR], degrees)), gHouses[houseid][houseZ]+0.3);
			SetPlayerCameraLookAt(playerid, gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);

			SendOk(playerid,"Для выхода натисніть: "ORANGE"ENTER");
			SendOk(playerid,"Позначити місцезнаходження будинку на Вашій карті: "ORANGE"/label");
		}
		case D_RIELTOR_BIZZ: {
			if(!response) return 1;
			if(listitem == 20 || listitem == 21) CheckBusiness(playerid,listitem);
			else {
				new bizz = TI[playerid][tSelectedBusinessID];
				if(bizz < 0) return 1;
				new price = gBusiness[bizz][bizzPrice]*150;
				new bizzid = strval(inputtext[4])-1;
				SetPVarInt(playerid,"bizzrielor",bizzid+1);
				if(GetString(inputtext, "<<< Назад")) return CheckBusiness(playerid,21);
				static const f_str[] = ""W"Бізнес № \t\t"YELLOW"%d [%s]\n\
"W"Тип: \t\t\t"YELLOW"%s\n\
"W"Гос.Ціна: \t\t"GREEN"$%d\n\n\
"W"Вартість осмотра бізнеса - "GREEN"$%d";
				new string[sizeof(f_str) +1 + (-2 + 15) + (-2 + 20) + (-2 + 7)];

				format(string,sizeof(string),f_str,bizzid+1, gBusiness[bizzid][bizzName],gBusinessTypeName[gBusiness[bizzid][bizzType]-1], gBusiness[bizzid][bizzSellPrice],price);
				D(playerid,D_RIELTOR_BIZZ_2,DSM, ""YELLOW"Ріелторська агенція",string,"Осмотреть","Відміна");
			}
		}
		case D_RIELTOR_BIZZ_2: {
			if(!response) return DeletePVar(playerid,"bizzrielor");
			new bizz = TI[playerid][tSelectedBusinessID];
			if(bizz < 0) return 1;
			new price = gBusiness[bizz][bizzPrice]*150;
			if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"Недостаточно коштів");
			bizz_pay(bizz,price);
			GiveMoney(playerid,-price,"осмотр риэлторка");
			new bizzid = GetPVarInt(playerid,"bizzrielor")-1,Float:pos[3];

			GetPlayerPos(playerid,pos[0],pos[1],pos[2]);

			SetPVarFloat(playerid,"rielX",pos[0]);
			SetPVarFloat(playerid,"rielY",pos[1]);
			SetPVarFloat(playerid,"rielZ",pos[2]);
			SetPVarInt(playerid,"rielVW",GetPlayerVirtualWorld(playerid));

			SetPlayerPosAC(playerid,gBusiness[bizzid][bizzX],gBusiness[bizzid][bizzY],gBusiness[bizzid][bizzZ]-50.0,0,0);
			TogglePlayerControllable(playerid,0);

			SetPlayerCameraPos(playerid,gBusiness[bizzid][bizzX] + (-8.0 * floatsin(gBusiness[bizzid][bizzR], degrees)),gBusiness[bizzid][bizzY] + (5.0 * floatcos(gBusiness[bizzid][bizzR], degrees)), gBusiness[bizzid][bizzZ]+0.3);
			SetPlayerCameraLookAt(playerid, gBusiness[bizzid][bizzX], gBusiness[bizzid][bizzY], gBusiness[bizzid][bizzZ]);

			SendOk(playerid,"Для выхода натисніть: "ORANGE"ENTER");
			SendOk(playerid,"Відзначити розташування бізнесу на Вашій карті: "ORANGE"/label");
		}
		case D_VEH_NUMBER: {
			if(!response) return 1;
			if(!IsACarNumber(gPlayerCars[playerid][carModel][listitem])) return ErrorMessage(playerid, "На данное Т/С нельзя установить гос.номер");
			if(!GetString(NumberVehicle[playerid][listitem],"TRANSIT")) return ErrorMessage(playerid,"У Вас уже получен гос.номер на данное Т/С");
			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(1000/100*vip_status[PlayerInfo[playerid][pVips]][vip_number]);
				if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
				price = (1000-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(1000/100*BonusInfo[act_buynubmbercar]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
					price = (1000-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(1000/100*BonusInfo[act_buynubmbercar]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
					price = (1000-seller);
				}
			    else price = 1000;
			}

			new string[156];
			format(string,sizeof(string),"\n\n"W"Ви дійсно хочете установить гос.номер на Т/С "YELLOW"%s"W" вартістю - "ORANGE"%d"W"?\n\n",gTransport[gPlayerCars[playerid][carModel][listitem]-400][trName],price);
			D(playerid,D_VEH_NUMBER_2,DSM, ""YELLOW"Купівля гос.номера", string, "Купити", "Назад");
			SetPVarInt(playerid,"buy_carnumber",listitem);
		}
		case D_VEH_NUMBER_2: {
			if(!response) return DeletePVar(playerid,"buy_carnumber");
			if(!IsACarNumber(gPlayerCars[playerid][carModel][GetPVarInt(playerid,"buy_carnumber")])) return ErrorMessage(playerid, "На данное Т/С нельзя установить гос.номер");
			if(!GetString(NumberVehicle[playerid][GetPVarInt(playerid,"buy_carnumber")],"TRANSIT")) return ErrorMessage(playerid,"У Вас уже получен гос.номер на данное Т/С");

			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(1000/100*vip_status[PlayerInfo[playerid][pVips]][vip_number]);
				if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
				price = (1000-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(1000/100*BonusInfo[act_buynubmbercar]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
					price = (1000-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(1000/100*BonusInfo[act_buynubmbercar]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів");
					price = (1000-seller);
				}
			    else price = 1000;
			}

			GiveMoney(playerid,-price,"покупка гос.номера");
			new numbers[64],a1[32],a2[32],a3[32];
			a1 = ABC[random(20)];
			a2 = ABC[random(20)];
			a3 = ABC[random(20)];
			format(numbers,10, "%c %i %c%c", a1, 100 + random(900), a2, a3) ;
			format(NumberVehicle[playerid][GetPVarInt(playerid,"buy_carnumber")],MAX_PLAYER_NAME,"%s",numbers);
			new string[128];
			format(string,sizeof(string),"Вітаємо, с получением гос. номера: "W"%s",numbers);
			SendClientMessage(playerid,CGOLD,string);
			save_car(playerid,GetPVarInt(playerid,"buy_carnumber"));
			DeletePVar(playerid,"buy_carnumber");
		}
		case D_WORK: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
			if(!start_work[playerid]) {
				A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
				SendOk(playerid,"Робочий день розпочатий");
				TI[playerid][tMasked] = 0;
				SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
				start_work[playerid] = 1;
				PlayerInfo[playerid][pJob] = 0;
				return 1;
			}
			if(IsAArm(playerid)) if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
			DelGun(playerid);
			SendOk(playerid, "робочий день закінчений");
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
			start_work[playerid] = 0;
			A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
			SetPlayerArmour(playerid, 0);
		}
		case D_RADIO: {
			if(!response) return 1;
			switch(listitem) {
				case 0: PlayAudioStreamForPlayer(playerid, "http://91.218.213.49:8000/ur2-mp3"),SendOk(playerid, "Онлайн радіо включено");
				case 1: PlayAudioStreamForPlayer(playerid, "http://online.fm.stryi.com:8000/stryi-fm_mp3"),SendOk(playerid, "Онлайн радіо включено");
				case 2: PlayAudioStreamForPlayer(playerid, "http://178.93.125.230:8000/newday.mp3"),SendOk(playerid, "Онлайн радіо включено");
				case 3: PlayAudioStreamForPlayer(playerid, "http://193.53.83.3:8000/fresh-fm_mp3"), SendOk(playerid, "Онлайн радіо включено");
				case 4: PlayAudioStreamForPlayer(playerid, "http://main.inf.fm:9101/;"), SendOk(playerid, "Онлайн радіо включено");
				case 5: PlayAudioStreamForPlayer(playerid, "http://hot.groza.ua:8000/neoradio"), SendOk(playerid, "Онлайн радіо включено");
				case 6: StopAudioStreamForPlayer(playerid), SendOk(playerid,"Радио выключено");
			}
		}
		case D_BL: {
			if(!response ) return 1;
			switch(listitem) {
				case 0: {
					if(PlayerInfo[playerid][pRank] < FI[PlayerInfo[playerid][pMember]][fInviteRang]) {
						new string[128];
						format(string, sizeof(string), "Доступно с %d ранга", FI[PlayerInfo[playerid][pMember]][fInviteRang]);
						ErrorMessage(playerid, string);
						return 1 ;
					}
					D(playerid,D_BL_ADD,DSI, ""YELLOW"Додавання в ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете внести в ЧС організації\n\n", "Далі", "Назад");
				}
				case 1: {
					if(PlayerInfo[playerid][pRank] < FI[PlayerInfo[playerid][pMember]][fInviteRang]) {
						new string[128];
						format(string, sizeof(string), "Доступно с %d ранга", FI[PlayerInfo[playerid][pMember]][fInviteRang]);
						ErrorMessage(playerid, string);
						return 1 ;
					}
					D(playerid, D_BL_DELL, DSI, ""YELLOW"Удаление из ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете вычеркнуть из ЧС організації\n\n", "Прийняти", "Назад");
				}
				case 2: {
					new query[76];
					SetPVarInt(playerid, "bl_page", 1);

					format(query, sizeof(query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PlayerInfo[playerid][pMember]);
					mysql_pquery(connects, query, "bl_callback", "i", playerid );
				}
				case 3: {
					new string[2056];
					string = "Имя\t\t\t\tПричина\n\n"W"";
					new COUNT_MEMBERS = 0 ;

					foreach(new i:Player) {
						if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
						if(!bl_info[i][bl_fraction][PlayerInfo[playerid][pMember]]) continue;

						format(string, sizeof(string), "%s%s(%i)\t\t\t%s\n", string, player_name[i], i, bl_info[i][bl_reason][PlayerInfo[playerid][pMember]]);
						COUNT_MEMBERS ++ ;
					}
					if(COUNT_MEMBERS == 0) return ErrorMessage(playerid, "Чорний список пуст");
					D(playerid, DIALOG_NONE, DSM, ""YELLOW"Черный список онлайн", string, "Закрити", "");
				}
			}
			return 1 ;
		}
		case D_BL_ADD: {
			if(!response ) return pc_cmd_bl(playerid);
			if(!strlen(inputtext) || strlen(inputtext)>23) return D(playerid, D_BL_ADD, DSI, ""YELLOW"Додавання в ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете внести в ЧС організації\n"NO"*{f6f6d9} От 10 до 24 символов\n\n", "Далі", "Назад");
			strmid(bl_name,inputtext,0,strlen(inputtext), MAX_PLAYER_NAME);
			if(!IsBannedNameReg(bl_name)) return D(playerid, D_BL_ADD, DSI, ""YELLOW"Додавання в ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете внести в ЧС організації\n"NO"*{f6f6d9} Данный гравець не зарегистрирован на сервере\n\n", "Далі", "Назад");
			if(IsBLName(bl_name,PlayerInfo[playerid][pMember])) return D(playerid, D_BL_ADD, DSI, ""YELLOW"Додавання в ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете внести в ЧС організації\n"NO"*{f6f6d9} Данный гравець уже в ЧС\n\n", "Далі", "Назад");
			if(IsBLNameMember(bl_name,PlayerInfo[playerid][pMember])) return D(playerid, D_BL_ADD, DSI, ""YELLOW"Додавання в ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете внести в ЧС організації\n"NO"*{f6f6d9} Цей гравець співробітник вашої організації\n\n", "Далі", "Назад");
			D(playerid, D_BL_ADD_REASON, DSI, ""YELLOW"Причина внесения", "\n\n"W"Введіть причину, по которой Ви хочете внести гравця в ЧС організації\n\n", "Прийняти", "Назад");
		}
		case D_BL_ADD_REASON: {
			if(!response) return D(playerid, D_BL_ADD, DSI, ""YELLOW"Додавання в ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете внести в ЧС організації\n\n", "Далі", "Назад");
			if(strlen(inputtext) < 2 || strlen(inputtext) > 32) return D(playerid, D_BL_ADD_REASON, DSI, ""YELLOW"Причина внесения", "\n\n"W"Введіть причину, по которой Ви хочете внести гравця в ЧС організації\n"NO"*{f6f6d9} Причина повинна бути от 2 до 32 символов\n\n", "Прийняти", "Назад");
			new pl_id = GetCheckID(bl_name);

			new query[356];
			format(query, sizeof(query), "INSERT INTO `fraction_bl` (`f_bl_id`, `f_bl_accused`, `f_bl_accuser`, `f_bl_date`, `f_bl_reason`) VALUES ('%i','%s','%s',NOW(),'%s')",
			PlayerInfo[playerid][pMember], bl_name, player_name[playerid], inputtext);
			mysql_pquery(connects, query, "", "");

			new string[128];
			if(pl_id != INVALID_PLAYER_ID) {
				bl_info[pl_id][bl_fraction][PlayerInfo[playerid][pMember]] = true;
				bl_info[pl_id][bl_reason][PlayerInfo[playerid][pMember]] = strlen(inputtext);

				format(string, sizeof(string), "[ЧС] %s внёс Вас в чорний список %s. Причина: %s", player_name[playerid], FI[PlayerInfo[playerid][pMember]][fName], inputtext);
				SendClientMessage(pl_id, COLOR_LIGHTRED, string) ;
			}
			format(string, sizeof(string), "[ЧС] %s внёс %s в чорний список %s. Причина: %s",  player_name[playerid], bl_name, FI[PlayerInfo[playerid][pMember]][fName], inputtext);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
		}
		case D_BL_DELL: {
			if(!response ) return pc_cmd_bl(playerid);
			if(!strlen(inputtext) || strlen(inputtext)>23) return D(playerid, D_BL_DELL, DSI, ""YELLOW"Удаление из ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете вычеркнуть из ЧС організації\n"NO"*{f6f6d9} От 10 до 24 символов\n\n", "Далі", "Назад");
			strmid(bl_name,inputtext,0,strlen(inputtext), MAX_PLAYER_NAME);
			if(!IsBLName(bl_name,PlayerInfo[playerid][pMember])) return D(playerid, D_BL_DELL, DSI, ""YELLOW"Удаление из ЧС", "\n\n"W"Введіть Nick_Name гравця, которого хочете вычеркнуть из ЧС організації\n"NO"*{f6f6d9} Данный гравець не в ЧС\n\n", "Далі", "Назад");

			//bl_info[pl_id][bl_fraction][PlayerInfo[playerid][pMember]] = false;
			new query[74 + MAX_PLAYER_NAME + 6];
			format(query, sizeof(query), "DELETE FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s' AND `f_bl_id` = '%d'", bl_name, PlayerInfo[playerid][pMember]);
			mysql_pquery(connects, query, "", "");

			new string[128];
			new pl_id = GetCheckID(bl_name);
			if(pl_id != INVALID_PLAYER_ID) {
				format(string, sizeof(string), "[ЧС] %s вычеркнул Вас из чёрного списка %s", player_name[playerid], FI[PlayerInfo[playerid][pMember]][fName]);
				SendClientMessage(pl_id, COLOR_LIGHTRED, string);
				bl_info[pl_id][bl_fraction][PlayerInfo[playerid][pMember]] = false;
			}
			format(string, sizeof(string), "[ЧС] %s вычеркнул %s из чёрного списка %s",  player_name[playerid], bl_name, FI[PlayerInfo[playerid][pMember]][fName]);
			SendFamilyMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTRED, string);
		 }
		 case D_BL_ALL: {
			if(!response) {
				DeletePVar(playerid,"bl_page");
				DeletePVar(playerid,"bl_rows");
				return pc_cmd_bl(playerid);
			}
			if(listitem == 0) {
				new rows_list = GetPVarInt(playerid, "bl_page") - 1;
				new query[128];
				if(rows_list == 0) {
					format(query, sizeof (query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PlayerInfo[playerid][pMember]);
					mysql_pquery(connects, query, "bl_callback", "i", playerid );
					ErrorMessage(playerid, "Ви на 1-шій сторінці");
					return 1 ;
				}
				SetPVarInt(playerid, "bl_page", rows_list ) ;
				format(query, sizeof(query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PlayerInfo[playerid][pMember]);
				mysql_pquery(connects, query, "bl_callback", "i", playerid);
			}
			else if(listitem == 1) {
				new rows_list = GetPVarInt ( playerid, "bl_page" ) - 1;
				new query[128];
				if((rows_list + 1 )*10 >= GetPVarInt(playerid, "bl_rows" )) {
					ErrorMessage(playerid, "Ви на останній сторінці");
					format(query, sizeof (query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PlayerInfo[playerid][pMember]);
					mysql_pquery(connects, query, "bl_callback", "i", playerid);
					return 1 ;
				}
				SetPVarInt(playerid, "bl_page", rows_list + 2);
				format(query, sizeof (query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PlayerInfo[playerid][pMember]);
				mysql_pquery(connects, query, "bl_callback", "i", playerid);
			}
			else {
				new query[128];
				format(query, sizeof (query), "SELECT * FROM `fraction_bl` WHERE `f_bl_id` = '%d'", PlayerInfo[playerid][pMember]);
				mysql_pquery(connects, query, "bl_callback", "i", playerid);
			}
		}
		case D_REFERALS: {
		    if(response) FirstReferal[playerid] += 10;
		    else {
		        if(FirstReferal[playerid] >= 10) FirstReferal[playerid] -= 10;
		        else return true;
		    }
		    new string[1024], Name[MAX_PLAYER_NAME], Level,rows,query[156];
		    format(query, sizeof(query), "SELECT `Name`,`pLevel` FROM `accounts` WHERE `pDrug` = '%s' ORDER BY `pLevel` DESC LIMIT %i, 10", player_name[playerid], FirstReferal[playerid]);
		    new Cache:result = mysql_query(connects, query);
      		cache_get_row_count(rows);
			if(rows) {
				for(new i; i < rows; i ++) {
					cache_get_value_name(i, "Name", Name, MAX_PLAYER_NAME);
					cache_get_value_name_int(i, "pLevel",Level);

					if(Level < 3) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+FirstReferal[playerid]+1, Name, Level);
					else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+FirstReferal[playerid]+1, Name, Level);
				}
				if(!D(playerid, D_REFERALS, 0, "Приглашенные", string, "Далі", "Назад")) ErrorMessage(playerid, "Недоступно, попробуйте повторить заного");
			}
			else ErrorMessage(playerid,"Більше Вас никто не указывал как пригласившего на сервер");
      		cache_delete(result);
		}
		case D_FAMILY_OFFLINE: {
		    if(response) FirstFamily[playerid] += 20;
		    else {
		        if(FirstFamily[playerid] >= 20) FirstFamily[playerid] -= 20;
		        else return true;
		    }
		    new names[24],query[64],rows,string[1256],Level;
		    format(query, sizeof(query), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `family` = '%d' LIMIT %i, 20", PlayerInfo[playerid][pFamily], FirstFamily[playerid]);
		    new Cache:result = mysql_query(connects, query);
      		cache_get_row_count(rows);
			if(rows > 0) {
				for(new i; i < rows; i ++) {
					cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
					cache_get_value_name_int(i, "pLevel",Level);
					if(IsPlayerConnected(GetPlayerID(names))) continue;
					if(Level < 3) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+FirstFamily[playerid]+1, names, Level);
					else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+FirstFamily[playerid]+1, names, Level);
				}
				if(!D(playerid, D_FAMILY_OFFLINE, 0, "Сім'я offline", string, "Далі", "Назад")) ErrorMessage(playerid, "Недоступно, попробуйте повторити знову");
			}
			else ErrorMessage(playerid, "Більше в вашій сім'ї нікого немає");
			cache_delete(result);
		}
		case D_BIZZ_BO_BANK: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(!bizz) return 1;
			SetPVarInt(playerid,"atm_listitem",listitem+1);
			if(!ATMData[listitem+1][atm_Bank]) {
				new string[328];
				format(string, sizeof(string), "\n\n"W"Ви собираетесь арендовать банкомат "YELLOW"[%s]"W"\nВартість оренди: "ORANGE"$%d / 7 днів\n\n", ATMNames[listitem],15000);
				D(playerid,D_BIZZ_BO_BANK_2,DSM, ""YELLOW"Аренда банкомата",string,"Арендовать","Відміна");
			}
			else return ErrorMessage(playerid,"Вибранный банкомат арендован");
		}
		case D_BIZZ_BO_BANK_2: {
			if(!response) return DeletePVar(playerid,"atm_listitem");
			new bizz = PlayerInfo[playerid][pBusiness]-1;
			if(!bizz) return 1;
			new id_slot = GetPVarInt(playerid,"atm_listitem");
			DeletePVar(playerid,"atm_listitem");
			if(ATMData[id_slot][atm_Bank]) return ErrorMessage(playerid,"Вибранный банкомат арендован");
			if(gBusiness[bizz][bizzBank] < 15000) return ErrorMessage(playerid,"В кассе банківського відділення недостаточно коштів для оренди");
			gBusiness[bizz][bizzBank] -= 15000;
			UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);
			ATMData[id_slot][atm_Bank] = bizz;
			ATMData[id_slot][atm_BankTime] = (unix + 86400 * 7);
			UpdateAtmData(id_slot,"ATM_BANK",ATMData[id_slot][atm_Bank]);
			UpdateAtmData(id_slot,"ATM_BANKTIME",ATMData[id_slot][atm_BankTime]);
			SendOk(playerid,"Вибранный банкомат успішно арендован");
		}
		case D_BIZZ_BO: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][pBusiness];
			switch(listitem) {
				case 0: {
					new day;
					day = (gBusiness[bizz-1][bizzDay]-gettime())/86400;
					static const f_str[] = ""W"Назва:\t\t"YELLOW"%s\n\
"W"Власник:\t\t"YELLOW"%s\n\
"W"Количество днів:\t"YELLOW"%d\n\
"W"Гос. ціна\t\t"YELLOW"%d\n\
"W"Касса:\t\t\t"YELLOW"$%d\n\
"W"Оплата:\t\t"YELLOW"$%d/день\n\
"W"Налогообложение:\t"YELLOW"%d%";
					new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 3) + (-2 + 3) + (-2 + 8) + (-2 + 8) + (-2 + 8) + (-2 + 5) + (-2 + 5)];
					format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz-1][bizzOwner],day,gBusiness[bizz-1][bizzSellPrice],gBusiness[bizz-1][bizzBank],floatround(gBusiness[bizz-1][bizzSellPrice]*bizz_rent/2),Nalog[3]);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Банківське відділення",string,"Закрити","");
				}
				case 1: {
					static const f_str[] = ""W"Стан рахунку: "GREEN"$%d\n"YELLOW"1."W" Зняти гроші\n"YELLOW"2."W" Покласти гроші";
					new string[sizeof(f_str) +1 + (-2 + 10)];
					format(string,sizeof(string),f_str,gBusiness[PlayerInfo[playerid][pBusiness] - 1][bizzBank]);
					D(playerid,D_BIZZ_BANK,DSL,""YELLOW"Керування касою",string,"Далі","Назад");
				}
				case 2: {
					load_color(playerid);
					SetPVarInt(playerid,"color_allcolor",1);
				}
				case 3: {
					D(playerid,D_BIZZ_TAXI_NAME,DSI, ""YELLOW"Назва банківського відділення","\n\n"W"Введіть нову назву банківського відділення:\n\n\
																Мінімальна кількість символів: "YELLOW"3\n\
																"W"Максимальна кількість символів: "YELLOW"20","Змінити","Відміна");
				}
				case 4: {
					D(playerid,D_BIZZ_BO_PERCENT,DSL,""YELLOW"Комісія за переводы",""YELLOW"1."W" 0.1%\n"YELLOW"2."W" 0.2%\n"YELLOW"3."W" 0.3%\n"YELLOW"4."W" 0.4%\n"YELLOW"5."W" 0.5%\n"YELLOW"6."W" 0.6%\n"YELLOW"7."W" 0.7%\n"YELLOW"8."W" 0.8%\n"YELLOW"9."W" 0.9%\n"YELLOW"10."W" 1.0%","Змінити","Відміна");
				}
				case 5: {
					D(playerid,D_BIZZ_BO_PERCENT_2,DSI, ""YELLOW"Комісія за оплату недвижимости","\n\n"W"Введіть процент комиссии взымаемый с человека во время опаты недвижимости\n\n\
																Доступный диапазон: от "YELLOW"1% "W"до "YELLOW"5%","Змінити","Відміна");
				}
				case 6: {
					D(playerid,D_BIZZ_BO_PERCENT_3,DSI, ""YELLOW"Комісія за пользование банкоматом","\n\n"W"Введіть процент комиссии взымаемый с человека во время пользования банкоматом\n\n\
																Доступный диапазон: от "YELLOW"1% "W"до "YELLOW"5%","Змінити","Відміна");
				}
				case 7: {
					new string[1512],str[128];
					strcat(string,"№\tБанкомат\tСтатус\tАренда\n");
					for(new i = 1; i < 16; i ++) {
						if(ATMData[i][atm_Bank] == 0) format(str, sizeof(str), ""GREEN"%d\t%s\tНе арендован\t---\n", i,ATMNames[i-1]),strcat(string,str);
						else {
							new year, month, day, hour, minute, second;
							timestamp_to_date(ATMData[i][atm_BankTime]-unix, year, month, day, hour, minute, second);
							format(str, sizeof(str), ""NO"%d\t%s\t{%s}%s\t"YELLOW"%dд %dч %dм\n", i,ATMNames[i-1],color_td[FuncBizz[ATMData[i][atm_Bank]+1][funcbColor]][col_rgb],FuncBizz[ATMData[i][atm_Bank]+1][funcbName],day-1, hour, minute),strcat(string,str);
						}
					}
					D(playerid, D_BIZZ_BO_BANK, DSTH, "Керування банкоматами", string, "Вибрати", "Відміна");
				}
				case 8: {
					new query[156];
					format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", PlayerInfo[playerid][pBusiness]-1);
					mysql_tquery(connects, query, "bizz_stats", "ii", playerid,PlayerInfo[playerid][pBusiness]-1);
				}
				case 9: {
					new string[230];
					format(string,sizeof(string),""W"Ви хочете продати банківське відділення государству за "GREEN"$%d?\n\n{f6f6d9}Для продажи банківського відділення гравцю введіть: /sellbusiness [ID гравця] [Сумма]",floatround(gBusiness[bizz-1][bizzSellPrice]/100*80));
					D(playerid,D_BIZZ_SELL,DSM, ""YELLOW"Бізнесс",string,"Продати","Відміна");
				}
			}
		}
		case D_BIZZ_TK: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][bizz_work];
			dialog_tk(playerid,bizz,listitem);
		}
		case D_BIZZ_TK_ZAM: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][bizz_work];
			switch(listitem) {
				case 0: dialog_tk(playerid,bizz,0);
				case 1: dialog_tk(playerid,bizz,6);
				case 2: dialog_tk(playerid,bizz,7);
			}
		}
		case D_BIZZ_TK_MEM: {
			if(!response) return 1;
			GetWord(inputtext[3],0, select_member[playerid], strlen(inputtext[3])+2);
			new id = GetPlayerID(select_member[playerid]);
			new names[24],status,query[128];
			format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
			new Cache:result = mysql_query(connects, query);
			new rows = cache_num_rows();
			if(rows > 0) {
				cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
				cache_get_value_name_int(0, "bizz_status",status);
				if(PlayerInfo[playerid][bizz_status] == 3 || PlayerInfo[playerid][bizz_status] == 2) {
					if(id == playerid) return ErrorMessage(playerid,"Неможливо применить на себе");
					if(status == 3) return ErrorMessage(playerid,"Неможливо применить на Руководителе");
					if(PlayerInfo[playerid][bizz_status] == 2) {
						if(status == 2) return ErrorMessage(playerid,"Неможливо применить на Руководителе");
					}
					static const f_str[] = "\t%s\n\
"YELLOW"1. "W"Изменить доступ:\n\
\t%s- Водитель\n\
\t%s- Управляющий\n\
"YELLOW"2. "NO"Уволить";
					new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
					format(str,sizeof(str),f_str,names,(status == 1) ? (""YELLOW"") : (""W""),(status == 2) ? (""YELLOW"") : (""W""));
					D(playerid,D_BIZZ_TK_MEM_2,DSL,""YELLOW"Сотрудник",str,"Далі","Закрити");
				}
			}
			else ErrorMessage(playerid, "Сотрудник не знайдений");
			cache_delete(result);
		}
		case D_BIZZ_TK_MEM_2: {
			if(!response) return 1;
			new id = GetPlayerID(select_member[playerid]);
			if(PlayerInfo[playerid][bizz_status] == 3 || PlayerInfo[playerid][bizz_status] == 2) {
				if(PlayerInfo[playerid][bizz_status] == 2 && listitem == 3) return ErrorMessage(playerid,"Неможливо применить");
				switch(listitem) {
					case 2,3: {
						if(id == playerid) return ErrorMessage(playerid,"Неможливо применить на себе");
						if(IsPlayerConnected(id)) {
							PlayerInfo[id][bizz_status] = listitem-1;
							UpdatePlayerData(id,"bizz_status",PlayerInfo[id][bizz_status]);
						}
						else {
							new query[350];
							format(query,sizeof(query), "UPDATE `accounts` SET `bizz_status` = '%d' WHERE `Name` = '%s' LIMIT 1",listitem-1,select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Ви змінили посаду співробітника "ORANGE"%s{f6f6d9} на "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 24)];
						format(string,sizeof(string),f_str,select_member[playerid],tk_class[listitem-2]);
						SendUse(playerid,string);
						SetTimerEx("members_funcbizz_tk", 100, 0, "ii", playerid,PlayerInfo[playerid][bizz_work]);
						return 1;
					}
					case 4: {
						if(id == playerid) return ErrorMessage(playerid,"Неможливо применить на себе");
						if(IsPlayerConnected(id)) {
							if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PlayerInfo[id][bizz_work]) RemovePlayerFromVehicleAC(id);
							PlayerInfo[id][bizz_work] = 0;
							UpdatePlayerData(id,"bizz_work",0);
							SendOk(id,"Управляющий транспортной компании уволил вас из предприятия");
						}
						else {
							new query[350];
							format(query,sizeof(query), "UPDATE `accounts` SET `bizz_work` = '0',`bizz_cash` = '0',`bizz_lcash` = '0',`bizz_status` = '0' WHERE `Name` = '%s' LIMIT 1",select_member[playerid]);
							mysql_tquery(connects, query, "", "");
						}
						static const f_str[] = "Ви уволили сотрудника транспортной компании "ORANGE"%s";
						new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
						format(string,sizeof(string),f_str,select_member[playerid]);
						SendUse(playerid,string);
						SetTimerEx("members_funcbizz_tk", 100, 0, "ii", playerid,PlayerInfo[playerid][bizz_work]);
						members_funcbizz_tk(playerid,PlayerInfo[playerid][bizz_work]);
						return 1;
					}
					default: {
						new names[24],status,query[128];
						format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", select_member[playerid]);
						new Cache:result = mysql_query(connects, query);
						new rows = cache_num_rows();
						if(rows > 0) {
							cache_get_value_name(0, "Name", names, MAX_PLAYER_NAME);
							cache_get_value_name_int(0, "bizz_status",status);
							if(PlayerInfo[playerid][bizz_status] == 3 || PlayerInfo[playerid][bizz_status] == 2) {
								if(id == playerid) return ErrorMessage(playerid,"Неможливо применить на себе");
								if(status == 3) return ErrorMessage(playerid,"Неможливо применить на Руководителе");
								if(PlayerInfo[playerid][bizz_status] == 2) {
									if(status == 2) return ErrorMessage(playerid,"Неможливо применить на Руководителе");
								}
								static const f_str[] = "\t%s\n\
"YELLOW"1. "W"Изменить доступ:\n\
\t%s- Водитель\n\
\t%s- Управляющий\n\
"YELLOW"2. "NO"Уволить";
								new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 40)];
								format(str,sizeof(str),f_str,names,(status == 1) ? (""YELLOW"") : (""W""),(status == 2) ? (""YELLOW"") : (""W""));
								D(playerid,D_BIZZ_TK_MEM_2,DSL,""YELLOW"Сотрудник",str,"Далі","Закрити");
							}
						}
						else ErrorMessage(playerid, "Сотрудник не знайдений");
						cache_delete(result);
						return 1;
					}
				}
			}
		}
		case D_BIZZ_TK_INFO: {
			if(!response) return 1;
			new bizz = PlayerInfo[playerid][bizz_work];
			switch(listitem) {
				case 0: showstattk(playerid,bizz);
				case 1: {
					new string[128];
					format(string,sizeof(string),"Доход за сутки:\t"ORANGE"$%d\nДоход за всё время:\t"ORANGE"$%d",PlayerInfo[playerid][bizz_lcash],PlayerInfo[playerid][bizz_cash]);
					D(playerid,DIALOG_NONE,DST,""YELLOW"Доходы",string,"Закрити","");
				}
				case 2: {
					if(PlayerInfo[playerid][bizz_status] == 3) return ErrorMessage(playerid,"Ви не можете уволиться из транспортной компании");
					PlayerInfo[playerid][bizz_work] = 0;
					UpdatePlayerData(playerid,"bizz_work",0);
					PlayerInfo[playerid][bizz_status] = 0;
					UpdatePlayerData(playerid,"bizz_status",0);
					SendOk(playerid,"Ви уволились из транспортной компании");
				}
			}
		}
		case D_TRUCK: {
			if(!response) {
				new Veh = GetPlayerVehicleID(playerid);
				if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(TK_Trailer[playerid]);
					TK_Trailer[playerid] = INVALID_VEHICLE_ID;
					TI[playerid][tTrucker][3] = 0;
					TI[playerid][tTrucker][2] = 0;
					TI[playerid][tTrucker][1] = 0;
					TI[playerid][tTrucker][0] = 0;
				}
				new rand = random(sizeof(tk_gun));
				SetVehiclePos(Veh, tk_gun[rand][0],tk_gun[rand][1],tk_gun[rand][2]);
				SetVehicleZAngle(Veh, tk_gun[rand][3]);
				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				SetPlayerVirtualWorld(playerid,0);	
				SetVehicleVirtualWorld(Veh,0);
				return 1;
			}
			new veh = GetPlayerVehicleID(playerid),prods;
			switch(GetVehicleModel(veh)) {
				case 403: prods = 10000;
				case 514: prods = 12000;
				case 515: prods = 15000;
			}
			if(strval(inputtext) > prods) {
				static const f_str[] = ""W"Сколько боєприпасів Ви хочете загрузить?\n\n\
Максимальная грузоподъемность фуры: "ORANGE"%d"W" кг\n\
боєприпасів На складі: "ORANGE"%d"W" ед\n\n\
"W"Количество загружаемых боєприпасів должно быть кратное: "ORANGE"1000"W" кг\n\n\
"NO"*{f6f6d9} В Вашу фуру столько не поместится";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,zavodsklad);

				D(playerid,D_TRUCK,DSI, ""YELLOW"Збройний завод",string,"Загрузити","Відміна");
				return 1;
			}
			if(strval(inputtext) > zavodsklad) {
				static const f_str[] = ""W"Сколько боєприпасів Ви хочете загрузить?\n\n\
Максимальная грузоподъемность фуры: "ORANGE"%d"W" кг\n\
боєприпасів На складі: "ORANGE"%d"W" ед\n\n\
"W"Количество загружаемых боєприпасів должно быть кратное: "ORANGE"1000"W" кг\n\n\
"NO"*{f6f6d9} На складі оружейного завода недостаточно боєприпасів";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,zavodsklad);

				D(playerid,D_TRUCK,DSI, ""YELLOW"Зброяний завод",string,"Загрузити","Відміна");
				return 1;
			}
			if((isNumeric(inputtext) || strlen(inputtext) > 6) || (strval(inputtext) != 1000 && strval(inputtext) != 2000 && strval(inputtext) != 3000 && strval(inputtext) != 4000 &&
				strval(inputtext) != 5000 && strval(inputtext) != 6000 && strval(inputtext) != 7000 && strval(inputtext) != 8000 && strval(inputtext) != 9000 && strval(inputtext) != 10000 &&
				strval(inputtext) != 11000 && strval(inputtext) != 12000 && strval(inputtext) != 13000 && strval(inputtext) != 14000 && strval(inputtext) != 15000)) {
				static const f_str[] = ""W"Сколько боєприпасів Ви хочете загрузить?\n\n\
Максимальная грузоподъемность фуры: "ORANGE"%d"W" кг\n\
боєприпасів На складі: "ORANGE"%d"W" ед\n\n\
"W"Количество загружаемых боєприпасів должно быть кратное: "ORANGE"1000"W" кг";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,zavodsklad);

				D(playerid,D_TRUCK,DSI, ""YELLOW"Зброяний завод",string,"Загрузити","Відміна");
				return 1;
			}
			SetPVarInt(playerid,"tk_spawn",1);
			SetTimerEx("tk_load",0,false,"ii",playerid,strval(inputtext));
			SendOk(playerid,"Загрузка фури розпочата. Очікуйте завершения загрузки");
		}
		case D_TRUCK_2: {
			if(!response) {
				new Veh = GetPlayerVehicleID(playerid);
				if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
					A_DestroyVehicle(TK_Trailer[playerid]);
					TK_Trailer[playerid] = INVALID_VEHICLE_ID;
					TI[playerid][tTrucker][3] = 0;
					TI[playerid][tTrucker][2] = 0;
					TI[playerid][tTrucker][1] = 0;
					TI[playerid][tTrucker][0] = 0;
				}
				new rand = random(sizeof(tk_wood));
				SetVehiclePos(Veh, tk_wood[rand][0],tk_wood[rand][1],tk_wood[rand][2]);
				SetVehicleZAngle(Veh, tk_wood[rand][3]);
				TogglePlayerControllable(playerid, true);
				SetCameraBehindPlayer(playerid);
				SetPlayerVirtualWorld(playerid,0);	
				SetVehicleVirtualWorld(Veh,0);
				return 1;
			}
			new veh = GetPlayerVehicleID(playerid),prods;
			switch(GetVehicleModel(veh)) {
				case 403: prods = 10000;
				case 514: prods = 12000;
				case 515: prods = 15000;
			}
			if(strval(inputtext) > prods) {
				static const f_str[] = ""W"Сколько тонн нефти Ви хочете загрузить?\n\n\
Максимальная грузоподъемность фуры: "ORANGE"%d"W" т.\n\
Нефти На складі: "ORANGE"%d"W" т.\n\n\
"W"Количество загружаемого бензина должно быть кратное: "ORANGE"1000"W" т.\n\n\
"NO"*{f6f6d9} В Вашу фуру столько не поместится";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,oilsklad*10000);

				D(playerid,D_TRUCK_2,DSI, ""YELLOW"Нефтезавод",string,"Загрузити","Відміна");
				return 1;
			}
			if(strval(inputtext) > oilsklad*10000) {
				static const f_str[] = ""W"Сколько тонн нефти Ви хочете загрузить?\n\n\
Максимальная грузоподъемность фуры: "ORANGE"%d"W" т.\n\
Нефти На складі: "ORANGE"%d"W" т.\n\n\
"W"Количество загружаемого бензина должно быть кратное: "ORANGE"1000"W" т.\n\n\
"NO"*{f6f6d9} На складі нефтезавода недостаточно нефти";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,oilsklad*10000);

				D(playerid,D_TRUCK_2,DSI, ""YELLOW"Нефтезавод",string,"Загрузити","Відміна");
				return 1;
			}
			if((isNumeric(inputtext) || strlen(inputtext) > 6) || (strval(inputtext) != 1000 && strval(inputtext) != 2000 && strval(inputtext) != 3000 && strval(inputtext) != 4000 &&
				strval(inputtext) != 5000 && strval(inputtext) != 6000 && strval(inputtext) != 7000 && strval(inputtext) != 8000 && strval(inputtext) != 9000 && strval(inputtext) != 10000 &&
				strval(inputtext) != 11000 && strval(inputtext) != 12000 && strval(inputtext) != 13000 && strval(inputtext) != 14000 && strval(inputtext) != 15000)) {
				static const f_str[] = ""W"Сколько тонн нефти Ви хочете загрузить?\n\n\
Максимальная грузоподъемность фуры: "ORANGE"%d"W" т.\n\
Нефти На складі: "ORANGE"%d"W" т.\n\n\
"W"Количество загружаемого бензина должно быть кратное: "ORANGE"1000"W" т.";
				new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
				format(string,sizeof(string),f_str,prods,oilsklad*10000);

				D(playerid,D_TRUCK_2,DSI, ""YELLOW"Нефтезавод",string,"Загрузити","Відміна");
				return 1;
			}
			SetPVarInt(playerid,"tk_spawn",2);
			SetTimerEx("tk_load",0,false,"ii",playerid,strval(inputtext));
			SendOk(playerid,"Загрузка фуры начата. Очікуйте завершення загрузки");
		}
		case D_TRUCK_UNLOAD: {
			SetPlayerCheckpoint(playerid, -1744.4447,149.4602,3.5496, 5);
			SendOk(playerid,"Отправляйтесь к порту м. СФ");
			TI[playerid][tTrucker][1] = 1;
			TI[playerid][tTrucker][2] = tk_unloading[0];
		}
		case D_TRUCK_UNLOAD_2: {
			switch(listitem) {
				case 0: {
					SetPlayerCheckpoint(playerid, -1744.4447,149.4602,3.5496, 5);
					SendOk(playerid,"Отправляйтесь к порту м. СФ");
					TI[playerid][tTrucker][2] = tk_unloading[1];
				}
				case 1: {
					SetPlayerCheckpoint(playerid, 2616.7119,-2226.7627,13.3819, 5);
					SendOk(playerid,"Отправляйтесь к порту м. ЛС");
					TI[playerid][tTrucker][2] = tk_unloading[2];
				}
				case 2: {
					SetPlayerCheckpoint(playerid, 2687.9753,-2480.1912,13.5008, 5);
					SendOk(playerid,"Отправляйтесь к оружейному заводу");
					TI[playerid][tTrucker][2] = tk_unloading[3];
				}
			}
			TI[playerid][tTrucker][1] = listitem+1;
		}
		case D_SPY: {
			if(!response) return 1;
			new string[1024];
			switch(listitem) {
				case 0: TI[playerid][tMasked] = fLSPD;
				case 1: TI[playerid][tMasked] = fSFPD;
				case 2: TI[playerid][tMasked] = fLVPD;
				case 3: TI[playerid][tMasked] = fMAYOR;
				case 4: TI[playerid][tMasked] = fARMYSF;
				case 5: TI[playerid][tMasked] = fARMYLV;
				case 6: TI[playerid][tMasked] = fMEDICLS;
				case 7: TI[playerid][tMasked] = fMEDICSF;
				case 8: TI[playerid][tMasked] = fMEDICLV;
				case 9: TI[playerid][tMasked] = fLSNEWS;
				case 10: TI[playerid][tMasked] = fSFNEWS;
				case 11: TI[playerid][tMasked] = fLVNEWS;
				case 12: TI[playerid][tMasked] = fLCN;
				case 13: TI[playerid][tMasked] = fYAKUZA;
				case 14: TI[playerid][tMasked] = fRM;
				case 15: TI[playerid][tMasked] = fBALLAS;
				case 16: TI[playerid][tMasked] = fVAGOS;
				case 17: TI[playerid][tMasked] = fGROVE;
				case 18: TI[playerid][tMasked] = fAZTEC;
				case 19: TI[playerid][tMasked] = fRIFA;
				case 20: TI[playerid][tMasked] = fWHITEHOUSE;
			}
			for(new i = 0; i < 10; i++) {
				if(!gFractionSkin[TI[playerid][tMasked]][i]) continue;
				format(string, sizeof(string), "%s%i\n",string,gFractionSkin[TI[playerid][tMasked]][i]);
			}
			D(playerid, D_SPY_2, DSL, ""YELLOW"Виберите скин", string, "Вибрати", "Закрити");
			return 1;
		}
		case D_SPY_2: {
			if(!response) return TI[playerid][tMasked] = 0;
			new fraction = TI[playerid][tMasked];
			A_SetPlayerSkin(playerid,gFractionSkin[fraction][listitem]);
			SetPlayerColor(playerid,gFractionSpawn[fraction][fracColor]);
			new string[128];
			format(string, sizeof(string), "Ви взяли шпионскую одежду - "W"%s", FI[fraction][fName]);
			SendOk(playerid,string);
			SendOk(playerid,"Щоб переодеться обратно, встаньте ще раз на пикап");
			return 1;
		}
		case D_FBI_LIFT: {
			if(!response) return 1;
			new pic;
			switch(listitem) {
				case 0: pic = 40;
				case 1: pic = 41;
				case 2: pic = 8;
			}
			SetPlayerFacingAngle(playerid, gTeleportsToD[pic][tpExitPos_A]);
			SetPlayerPosAC(playerid, gTeleportsToD[pic][tpExitPos_X], gTeleportsToD[pic][tpExitPos_Y], gTeleportsToD[pic][tpExitPos_Z],gTeleportsToD[pic][tpExitWorld],gTeleportsToD[pic][tpExitInt]);
			SetCameraBehindPlayer(playerid);
		}
		case D_FBI_LIFT_1: {
			if(!response) return 1;
			new pic;
			switch(listitem) {
				case 0: pic = 41;
				case 1: pic = 9;
				case 2: pic = 8;
			}
			SetPlayerFacingAngle(playerid, gTeleportsToD[pic][tpExitPos_A]);
			SetPlayerPosAC(playerid, gTeleportsToD[pic][tpExitPos_X], gTeleportsToD[pic][tpExitPos_Y], gTeleportsToD[pic][tpExitPos_Z],gTeleportsToD[pic][tpExitWorld],gTeleportsToD[pic][tpExitInt]);
			SetCameraBehindPlayer(playerid);
		}
		case D_FBI_LIFT_2: {
			if(!response) return 1;
			new pic;
			switch(listitem) {
				case 0: pic = 40;
				case 1: pic = 9;
				case 2: pic = 8;
			}
			SetPlayerFacingAngle(playerid, gTeleportsToD[pic][tpExitPos_A]);
			SetPlayerPosAC(playerid, gTeleportsToD[pic][tpExitPos_X], gTeleportsToD[pic][tpExitPos_Y], gTeleportsToD[pic][tpExitPos_Z],gTeleportsToD[pic][tpExitWorld],gTeleportsToD[pic][tpExitInt]);
			SetCameraBehindPlayer(playerid);
		}
		case D_DUEL: {
			if(!response) return 1;
			switch(listitem) {
				case 0: {
					if(TI[playerid][tDuel] != -1) {
						if(DI[TI[playerid][tDuel]][duel_type] == 0) return ErrorMessage(playerid,"Ви создатель лобби/уже состоите в лобби");
						else if(DI[TI[playerid][tDuel]][duel_type] == 1) return duel_lobby_2(playerid,TI[playerid][tDuel]);
						else if(DI[TI[playerid][tDuel]][duel_type] == 2) return duel_lobby_3(playerid,TI[playerid][tDuel]);
					}
					new string[1024];
					strcat(string,"№ | Создатель\tТип | Взнос\tКарта | Зброя | ХП | Броня\tСтатус\n");
					new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
					new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
					new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
					new bool:duel_lobby = false;
					for(new d = 0; d < MAX_DUELS; d++) {
						if(DI[d][duel_create] == false || DI[d][duel_start] == true) continue;
						if(!DI[d][duel_password]) format(string,sizeof(string),"%s%d | %s\t%s | %d\t%s | %s | %d | %d\t"GREEN"OPEN"W"\n",string,d,player_name[DI[d][duel_owner_id]],duel_types[DI[d][duel_type]],DI[d][duel_money],duel_maps[DI[d][duel_map]],duel_guns[DI[d][duel_gun]],DI[d][duel_health],DI[d][duel_armour]);
						else format(string,sizeof(string),"%s%d | %s\t%s | %d\t%s | %s | %d | %d\t"NO"CLOSE"W"\n",string,d,player_name[DI[d][duel_owner_id]],duel_types[DI[d][duel_type]],DI[d][duel_money],duel_maps[DI[d][duel_map]],duel_guns[DI[d][duel_gun]],DI[d][duel_health],DI[d][duel_armour]);
						duel_lobby = true;
					}
					if(!duel_lobby) return SendBotMessage(playerid,"Доступных лобби нет");
					D(playerid,D_DUEL_2,DSTH,""YELLOW"Лобби",string,"Вибрати","Закрити");
				}
				case 1: {
					if(TI[playerid][tDuel] != -1) {
						if(playerid != DI[TI[playerid][tDuel]][duel_owner_id]) return ErrorMessage(playerid,"Ви состоите в лобби");
						else {
							duel_message(playerid,TI[playerid][tDuel]);
							return 1;
						}
					}
					new duel_t = 0;
					for(new d = 0; d < MAX_DUELS; d++) {
						if(DI[d][duel_owner_id] != INVALID_PLAYER_ID) continue;
						TI[playerid][tDuel] = d;
						DI[d][duel_owner_id] = playerid;
						duel_t++;
						break;
					}
					if(!duel_t) return SendBotMessage(playerid,"В данный момент нельзя создать лобби. Все слоты переполнены");
					duel_message(playerid,TI[playerid][tDuel]);
				}
			}
		}
		case D_DUEL_2: {
			if(!response) return 1;
			new id = strval(inputtext[0]);
			SetPVarInt(playerid,"duel_number",id);
			if(DI[id][duel_owner_id] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Вибранное лобби недоступно");
			if(DI[id][duel_start] == true) return ErrorMessage(playerid,"Вибранное лобби недоступно");
			if(!DI[id][duel_password]) {
				duel_enter(playerid,id);
				return 1;
			}
			else D(playerid,D_DUEL_ENTER_PSW,DSI,""YELLOW"Лобби | Вход","\n\n"W"Для входа в лобби введіть пароль:\n\n","Увійти","Відміна");
		}
		case D_DUEL_3: {
			if(!response) return 1;
			new id = GetPVarInt(playerid, "duel_number");
			DeletePVar(playerid, "duel_number");
			if(DI[id][duel_owner_id] == INVALID_PLAYER_ID) return 1;
			if(GetPlayerMoneyEx(playerid) < DI[id][duel_money]) return ErrorMessage(playerid,"Недостаточно коштів");
			GiveMoney(playerid,-DI[id][duel_money],"взнос дуэль");
			DI[id][duel_cash] += DI[id][duel_money];
			TI[playerid][tDuel] = id;
			switch(DI[id][duel_type]) {
				case 0: {
					DI[id][duel_id][1] = playerid;
					
					start_duel_1(id);
					new Float:pos[3];
					GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
					SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
					GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
					SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				}
				case 1: duel_lobby_2(playerid,id);
				case 2: duel_lobby_3(playerid,id);
			}
		}
		case D_DUEL_4: {
			if(TI[playerid][tDuel]) return 1;
			if(DI[TI[playerid][tDuel]][duel_start] == true) return 1;
			if(!response) {
				if(DI[TI[playerid][tDuel]][duel_owner_id] == playerid) duel_delete(TI[playerid][tDuel],false);
				if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,TI[playerid][tDuel]);
				TI[playerid][tDuel] = -1;
				return 1;
			}
			if(TI[playerid][tDuel] == -1) return 1;
			new id = TI[playerid][tDuel];
			switch(listitem) {
				case 0: {
					if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][0] = playerid,TI[playerid][tDuelLobby] = 0;
						SendOk(playerid,"Ви заняли место "W"№1{f6f6d9} в команде "W"№1");
					}
					else duel_lobby_2(playerid,id);
				}
				case 1: {
					if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][1] = playerid,TI[playerid][tDuelLobby] = 1;
						SendOk(playerid,"Ви заняли место "W"№2{f6f6d9} в команде "W"№1");
					}
					else duel_lobby_2(playerid,id);
				}
				case 2: duel_lobby_2(playerid,id);
				case 3: {
					if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][2] = playerid,TI[playerid][tDuelLobby] = 2;
						SendOk(playerid,"Ви заняли место "W"№1{f6f6d9} в команде "W"№2");
					}
					else duel_lobby_2(playerid,id);
				}
				case 4: {
					if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][3] = playerid,TI[playerid][tDuelLobby] = 3;
						SendOk(playerid,"Ви заняли место "W"№2{f6f6d9} в команде "W"№2");
					}
					else duel_lobby_2(playerid,id);
				}
			}
			if(DI[id][duel_id][0] != INVALID_PLAYER_ID && DI[id][duel_id][1] != INVALID_PLAYER_ID && DI[id][duel_id][2] != INVALID_PLAYER_ID && DI[id][duel_id][3] != INVALID_PLAYER_ID) {
				new Float:pos[3];
				GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][2], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][3], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_z", pos[2]);
				DI[id][duel_vw] = DI[id][duel_id][0]+1;
				start_duel_2(id);
			}
		}
		case D_DUEL_5: {
			if(TI[playerid][tDuel]) return 1;
			if(DI[TI[playerid][tDuel]][duel_start] == true) return 1;
			if(!response) {
				if(DI[TI[playerid][tDuel]][duel_owner_id] == playerid) duel_delete(TI[playerid][tDuel],false);
				if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,TI[playerid][tDuel]);
				TI[playerid][tDuel] = -1;
				return 1;
			}
			if(TI[playerid][tDuel] == -1) return 1;
			new id = TI[playerid][tDuel];
			switch(listitem) {
				case 0: {
					if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][0] = playerid,TI[playerid][tDuelLobby] = 0;
						SendOk(playerid,"Ви заняли место "W"№1{f6f6d9} в команде "W"№1");
					}
					else duel_lobby_3(playerid,id);
				}
				case 1: {
					if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][1] = playerid,TI[playerid][tDuelLobby] = 1;
						SendOk(playerid,"Ви заняли место "W"№2{f6f6d9} в команде "W"№1");
					}
					else duel_lobby_3(playerid,id);
				}
				case 2: {
					if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][2] = playerid,TI[playerid][tDuelLobby] = 2;
						SendOk(playerid,"Ви заняли место "W"№3{f6f6d9} в команде "W"№1");
					}
					else duel_lobby_3(playerid,id);
				}
				case 3: duel_lobby_3(playerid,id);
				case 4: {
					if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][3] = playerid,TI[playerid][tDuelLobby] = 3;
						SendOk(playerid,"Ви заняли место "W"№1{f6f6d9} в команде "W"№2");
					}
					else duel_lobby_3(playerid,id);
				}
				case 5: {
					if(DI[id][duel_id][4] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][4] = playerid,TI[playerid][tDuelLobby] = 4;
						SendOk(playerid,"Ви заняли место "W"№2{f6f6d9} в команде "W"№2");
					}
					else duel_lobby_3(playerid,id);
				}
				case 6: {
					if(DI[id][duel_id][5] == INVALID_PLAYER_ID) {
						if(TI[playerid][tDuelLobby] != -1) duel_exit(playerid,id);
						DI[id][duel_id][5] = playerid,TI[playerid][tDuelLobby] = 5;
						SendOk(playerid,"Ви заняли место "W"№3{f6f6d9} в команде "W"№2");
					}
					else duel_lobby_3(playerid,id);
				}
			}
			if(DI[id][duel_id][0] != INVALID_PLAYER_ID && DI[id][duel_id][1] != INVALID_PLAYER_ID && DI[id][duel_id][2] != INVALID_PLAYER_ID && DI[id][duel_id][3] != INVALID_PLAYER_ID && DI[id][duel_id][4] != INVALID_PLAYER_ID && DI[id][duel_id][5] != INVALID_PLAYER_ID) {
				new Float:pos[3];
				GetPlayerPos(DI[id][duel_id][0], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][0], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][1], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][1], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][2], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][2], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][3], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][3], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][4], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][4], "pos_comp_z", pos[2]);
				GetPlayerPos(DI[id][duel_id][5], pos[0], pos[1], pos[2]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_x", pos[0]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_y", pos[1]);
				SetPVarFloat(DI[id][duel_id][5], "pos_comp_z", pos[2]);
				DI[id][duel_vw] = DI[id][duel_id][0]+1;
				start_duel_3(id);
			}
		}
		case D_DUEL_ENTER_PSW: {
			if(!response) return 1;
			if(DI[GetPVarInt(playerid, "duel_number")][duel_owner_id] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Вибранное лобби недоступно");
			if(DI[GetPVarInt(playerid, "duel_number")][duel_start] == true) return ErrorMessage(playerid,"Вибранное лобби недоступно");
			if(strval(inputtext) != DI[GetPVarInt(playerid, "duel_number")][duel_password]) {
				D(playerid,D_DUEL_ENTER_PSW,DSI,""YELLOW"Лобби | Вход","\n\n"W"Для входа в лобби введіть пароль:\n"NO"*{f6f6d9} Неверный пароль\n\n","Увійти","Відміна");
				return 1;
			}
			duel_enter(playerid,GetPVarInt(playerid, "duel_number"));
		}
		case D_DUEL_1: {
			if(!response) {
				duel_delete(TI[playerid][tDuel],true);
				return 1;
			}
			if(listitem != 9) {
				if(DI[TI[playerid][tDuel]][duel_create] == true) return ErrorMessage(playerid,"Запрещено изменять, после создания лобби");
			}
			switch(listitem) {
				case 0: {
					//DI[TI[playerid][tDuel]][duel_type] = 0;
					DI[TI[playerid][tDuel]][duel_type] = (DI[TI[playerid][tDuel]][duel_type] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_type] == 1) ? 2 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 1: {
					DI[TI[playerid][tDuel]][duel_raund] = (DI[TI[playerid][tDuel]][duel_raund] == 1) ? 3 : (DI[TI[playerid][tDuel]][duel_raund] == 3) ? 5 : (DI[TI[playerid][tDuel]][duel_raund] == 5) ? 11 : 1;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 2: {
					D(playerid,D_DUEL_MONEY,DSI, ""YELLOW"Взнос","\n\n"W"Введіть сумму взноса:\n\n\
																Миниальный взнос: "ORANGE"$1000\n\
																"W"Максимальный взнос: "ORANGE"$50000","Змінити","Відміна");
				}
				case 3: {
					DI[TI[playerid][tDuel]][duel_gun] = (DI[TI[playerid][tDuel]][duel_gun] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_gun] == 1) ? 2 : (DI[TI[playerid][tDuel]][duel_gun] == 2) ? 3 : (DI[TI[playerid][tDuel]][duel_gun] == 3) ? 4 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 4: {
					DI[TI[playerid][tDuel]][duel_gun_2] = (DI[TI[playerid][tDuel]][duel_gun_2] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_gun_2] == 1) ? 2 : (DI[TI[playerid][tDuel]][duel_gun_2] == 2) ? 3 : (DI[TI[playerid][tDuel]][duel_gun_2] == 3) ? 4 : (DI[TI[playerid][tDuel]][duel_gun_2] == 4) ? 5 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 5: {
					DI[TI[playerid][tDuel]][duel_map] = 0;
					//DI[TI[playerid][tDuel]][duel_map] = (DI[TI[playerid][tDuel]][duel_map] == 0) ? 1 : (DI[TI[playerid][tDuel]][duel_map] == 1) ? 2 : 0;
					duel_message(playerid,TI[playerid][tDuel]);
				}
				case 6: {
					D(playerid,D_DUEL_HEALTH,DSI, ""YELLOW"Здоровье","\n\n"W"Введіть состояние здоровья на дуэли:\n\n\
																Мінімальний стан: "YELLOW"10\n\
																"W"Максимальний стан: "YELLOW"200","Змінити","Відміна");
				}
				case 7: {
					D(playerid,D_DUEL_ARMOUR,DSI, ""YELLOW"Броня","\n\n"W"Введіть состояние брони на дуэли:\n\n\
																Мінімальний стан: "YELLOW"0\n\
																"W"Максимальний стан: "YELLOW"100","Змінити","Відміна");
				}
				case 8: {
					D(playerid,D_DUEL_PASSWORD,DSI, ""YELLOW"Пароль","\n\n"W"Введіть пароль для входа в лобби:\n\n\
																Пароль должен состоять из 4х цифр:","Змінити","Відміна");
				}
				case 9: {
					if(DI[TI[playerid][tDuel]][duel_create] == false) {
						if(GetPlayerMoneyEx(playerid) < DI[TI[playerid][tDuel]][duel_money]) {
							ErrorMessage(playerid,"У Вас недостаточно коштів для взноса");
							new id = TI[playerid][tDuel];
							DI[id][duel_owner_id] = DI[id][duel_id][0] = DI[id][duel_id][1] = DI[id][duel_id][2] = DI[id][duel_id][3] = DI[id][duel_id][4] = DI[id][duel_id][5] = INVALID_PLAYER_ID;
							DI[id][duel_gun] = DI[id][duel_gun_2] = 0;
							DI[id][duel_money] = 1000;
							DI[id][duel_raund] = 1;
							DI[id][duel_type] = 0;
							DI[id][duel_map] = 0;
							DI[id][duel_health] = 100;
							DI[id][duel_armour] = 0;
							DI[id][duel_start] = false;
							DI[id][duel_create] = false;
							DI[id][duel_point_1] = DI[id][duel_point_2] = 0;
							TI[playerid][tDuel] = -1;
							return 1;
						}
						GiveMoney(playerid,-DI[TI[playerid][tDuel]][duel_money],"взнос дуэль");
						DI[TI[playerid][tDuel]][duel_owner_id] = playerid;
						DI[TI[playerid][tDuel]][duel_id][0] = playerid;
						DI[TI[playerid][tDuel]][duel_create] = true;
						TI[playerid][tDuelLobby] = 0;
						if(DI[TI[playerid][tDuel]][duel_type] == 1) SendOk(playerid,"Ви заняли место "W"№1{f6f6d9} в команде "W"№1");
						else if(DI[TI[playerid][tDuel]][duel_type] == 2) SendOk(playerid,"Ви заняли место "W"№1{f6f6d9} в команде "W"№1");
						SendOk(playerid,"Лобби успішно створено");
					}
					else {
						DI[TI[playerid][tDuel]][duel_create] = false;
						SendOk(playerid,"Лобби успішно удалено");
						duel_delete(TI[playerid][tDuel],false);
					}
				}
			}
		}
		case D_DUEL_PASSWORD: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strlen(inputtext) != 4 || isNumeric(inputtext)) return D(playerid,D_DUEL_PASSWORD,DSI, ""YELLOW"Пароль","\n\n"W"Введіть пароль для входа в лобби:\n\n\
																Пароль должен состоять из 4х цифр:","Змінити","Відміна");
			DI[TI[playerid][tDuel]][duel_password] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
		case D_DUEL_HEALTH: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 10 || strval(inputtext) > 200) return D(playerid,D_DUEL_HEALTH,DSI, ""YELLOW"Здоровье","\n\n"W"Введіть состояние здоровья на дуэли:\n\n\
																Мінімальний стан: "YELLOW"10\n\
																"W"Максимальний стан: "YELLOW"200","Змінити","Відміна");
			DI[TI[playerid][tDuel]][duel_health] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
		case D_DUEL_ARMOUR: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 0 || strval(inputtext) > 100) return D(playerid,D_DUEL_ARMOUR,DSI, ""YELLOW"Броня","\n\n"W"Введіть состояние брони на дуэли:\n\n\
																Мінімальний стан: "YELLOW"0\n\
																"W"Максимальний стан: "YELLOW"100","Змінити","Відміна");
			DI[TI[playerid][tDuel]][duel_armour] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
		case D_DUEL_MONEY: {
			if(!response) {
				duel_message(playerid,TI[playerid][tDuel]);
				return 1;
			}
			if(strval(inputtext) < 1000 || strval(inputtext) > 50000) return D(playerid,D_DUEL_MONEY,DSI, ""YELLOW"Взнос","\n\n"W"Введіть сумму взноса:\n\n\
																Миниальный взнос: "ORANGE"$1000\n\
																"W"Максимальный взнос: "ORANGE"$50000","Змінити","Відміна");
			DI[TI[playerid][tDuel]][duel_money] = strval(inputtext);
			duel_message(playerid,TI[playerid][tDuel]);
		}
		case D_REPORT_1: {
			new i = ReportID[playerid];
			if(!response) {
			    ReportSlot[i] = -1, ReportID[playerid] = -1;
			    new string[156];
				format(string, sizeof string, "Адміністратор %s[%d] відмовився відповідати на вашу жалобу. Очікуйте відповідь від іншого адміністратора",player_name[playerid], playerid);
				ErrorMessage(PlayerReport[i], string);
				return 1;
			}
			if(!strlen(inputtext) || strlen(inputtext)>130) {
			    new string[300];
				format(string, sizeof(string), ""W"Жалоба от %s[%i]\n\n{f6f6d9}%s\n\n"NO"*{f6f6d9} От 1 до 130 символов", player_name[PlayerReport[i]], PlayerReport[i], TextReport[i]);
		        D(playerid,D_REPORT_1,DSI, ""YELLOW"Репорт",string,"Прийняти","Відміна");
			    return 1;
			}
			if(!IsPlayerConnected(PlayerReport[i])) {
				ReportDell(i);
				ReportID[playerid] = -1;
				ErrorMessage(playerid, "Гравець вийшов с ігри");
				return 1;
			}
            new string[400];
			if(!IsAGang(PlayerReport[i])) {
				if(GetPVarInt(PlayerReport[i],"adchecking_fix")) {
					gAdvert[GetPVarInt(PlayerReport[i],"adchecking_fix")-1][adCheking]=false;
					DeletePVar(PlayerReport[i],"adchecking_fix");
				}
				format(string, sizeof(string), ""W"Рассмотрена Ваша жалоба: {f6f6d9}%s\n"W"Ответ от адміністратора %s: "YELLOW"%s\n\n", TextReport[i], player_name[playerid], inputtext);
				D(PlayerReport[i],D_REPORT_3,DSM, ""YELLOW"Репорт",string,"Дякую","");
				ReportAdmin[PlayerReport[i]] = playerid;
			}
			else {
				format(string, sizeof(string), "Ответ от %s[%i]: %s",player_name[playerid],playerid,inputtext);
				SendClientMessage(PlayerReport[i], 0xffa141FF, string);
			}
			format(string,sizeof(string),"Адміністратор %s[%d] відповів гравцю %s[%d]: %s",player_name[playerid], playerid, player_name[PlayerReport[i]], PlayerReport[i], inputtext);
			SendAdminMessage(0xFfa500AA,string);
			gAdmin[playerid][ADMIN_PM] ++;
			
			strmid(TextReportAdmin[i], (inputtext),0,strlen(inputtext),130);
			ReportDell(i);
			ReportID[playerid] = -1;
			//if(GetString(player_name[playerid],"Oscar_Floyd")) D(playerid,D_REPORT_4,DSL,"Быстрый ответ","Нет, это временный ответ\nДа, цей ответ может использоватся как быстрый ответ","Прийняти","Відміна");
			return 1;
		}
		case D_REPORT_4: {
		    new i = ReportID[playerid];
		    switch(listitem) {
		        case 0: {
			 		SendOk(playerid, "Ви вибрали временный ответ");
			 		ReportID[playerid] = -1;
					ReportDell(i);
		        }
		        case 1: {
					new query[300];
		        	format(query, sizeof(query), "INSERT INTO `reports` (`rText`, `rOtvet`, `rNick`) VALUE ('%s','%s','%s')", TextReport[i], TextReportAdmin[i], player_name[playerid]);
					mysql_tquery(connects, query);
					SendOk(playerid, "Ви вибрали как быстрый ответ");
					ReportID[playerid] = -1;
					ReportDell(i);
		        }
		    }
		}
		case D_REPORT_3: return D(playerid, D_REPORT_2, DSL, ""YELLOW"Оцінка роботи", "Гарна відповідь\nПогана відповіть", "Вибрати", "Відміна");
		case D_REPORT_2: {
			if(!response) {
			    D(playerid, D_REPORT_2, DSL, ""YELLOW"Оцінка роботи", "Гарна відповідь\nПогана відповіть", "Вибрати", "Відміна");
			    return 1;
			}
			SendOk(playerid, "Дякую! Ваш отзыв учтён!");
			if(ReportAdmin[playerid] == INVALID_PLAYER_ID) return 1;
			switch(listitem) {
				case 0: gAdmin[ReportAdmin[playerid]][8] ++;
				case 1: gAdmin[ReportAdmin[playerid]][8] --;
			}
			ReportAdmin[playerid] = INVALID_PLAYER_ID;
			return 1;
		}
		case D_ASK_1: {
			new i = ReportIDAsk[playerid];
			if(!response) {
			    ReportSlot[i] = -1, ReportIDAsk[playerid] = -1;
			    new string[156];
				format(string, sizeof string, "Game Support %s[%d] відмовився відповідати на ваше питання. Очікуйте відповідь від іншого Game Support'a'",player_name[playerid], playerid);
				ErrorMessage(PlayerReportAsk[i], string);
				return 1;
			}
			if(!strlen(inputtext) || strlen(inputtext)>130) {
			    new string[300];
				format(string, sizeof(string), ""W"Вопрос от %s[%i]\n\n{f6f6d9}%s\n\n"NO"*{f6f6d9} От 1 до 130 символов", player_name[PlayerReportAsk[i]], PlayerReportAsk[i], TextAsk[i]);
		        D(playerid,D_ASK_1,DSI, ""YELLOW"Репорт",string,"Прийняти","Відміна");
			    return 1;
			}
			if(!IsPlayerConnected(PlayerReportAsk[i])) {
				ReportDellAsk(i);
				ReportIDAsk[playerid] = -1;
				ErrorMessage(playerid, "Гравець вийшов с ігри");
				return 1;
			}
			if(!strcmp(inputtext,"adm",true)){
				new bool:report = false,reps = 0;
				for(new id;id<MAX_REPORTS;id++) {
					if(PlayerReport[id] != -1) reps++;
				}
				for(new id;id<MAX_REPORTS;id++) {
					if(PlayerReport[reps] != -1) {
						reps++;
						continue;
					} 
					PlayerReport[reps] = PlayerReportAsk[i];
					strmid(TextReport[reps], (TextAsk[i]),0,strlen(TextAsk[i]),150);
					new string[143];
					format(string, sizeof(string), "[PM] %s[%i]: %s."W" [%d] "ORANGE"(s-%d)", player_name[PlayerReportAsk[i]], PlayerReportAsk[i], TextAsk[i], reps+1,playerid);
					SendAdminMessage(0x008e8cff,string);
					format(string, sizeof(string), "Game Support %s[%d] передал ваш вопрос адміністрації проекта",player_name[playerid],playerid);
					SendClientMessage(PlayerReportAsk[i], 0xffa141FF, string);
					format(string, sizeof string, "Ваше обращение: {f6f6d9}%s"YELLOW" — успішно отправлено.", TextAsk[i]);
					SendClientMessage(PlayerReportAsk[i], COLOR_YELLOW, string);
					format(string, sizeof(string), "Найближчим чамом вам відповість адміністратор. Ви в черзі репортів: "YELLOW"%d", reps+1);
					SendOk(PlayerReportAsk[i], string);
					report = true;
					ReportDellAsk(i);
					ReportIDAsk[playerid] = -1;
					break;
				}
				if(!report) {
					ReportSlot[i] = -1, ReportIDAsk[playerid] = -1;
					return ErrorMessage(playerid,"Ви не можете перенаправити питання адміністрації проекта");
				} 
				return true;
			}
            new string[400];
			format(string, sizeof(string), "Відповіть від %s[%i]: %s",player_name[playerid],playerid,inputtext);
			SendClientMessage(PlayerReportAsk[i], 0xffa141FF, string);

			format(string,sizeof(string),"Game Support %s[%d] відповів гравцю %s[%d]: %s",player_name[playerid], playerid, player_name[PlayerReportAsk[i]], PlayerReportAsk[i], inputtext);
			SendGSMessage(0xFfa500AA,string);
			PlayerInfo[playerid][pAsk]++;
			ReportDellAsk(i);
			ReportIDAsk[playerid] = -1;
			return 1;
		}
		case D_LEAVE: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Лідеру заборонено");
			if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
			if(start_work[playerid]) {
				SendOk(playerid,"робочий день закінчений");
				start_work[playerid] = 0;
			}
			add_jobinfo(playerid,"Особисте бажання");
			PlayerInfo[playerid][pRank] = 0;
			PlayerInfo[playerid][pMember] = 0;
			PlayerInfo[playerid][pJob] = 0;
			PlayerInfo[playerid][pFracSkin] = 0;
			DelGun(playerid);
			SetPlayerArmour(playerid, 0);
			SetPlayerColor(playerid,0xFFFFFF11);
			skin_player(playerid);
			SaveAccount(playerid);
			FracLog(LOGS_LEAVE,player_name[playerid],player_name[playerid],"С/Ж LEAVE");
		}
		case 839:
                {
                    if(response)
                    {
                    new Float:X, Float:Y, Float:Z;
                    GetPlayerPos(playerid, X, Y, Z);
                    new Float:A;
                    GetPlayerFacingAngle(playerid, A);
                    {
                    DestroyVehicle(velik[playerid]);
                    velik[playerid] = AddStaticVehicleEx(462, 99999, 99999, 99999, A, 1, 1, 600);
                    SetVehiclePosition(velik[playerid], X, Y, Z);
                    new vehicleid = GetPlayerVehicleID(playerid);
		            VehicleInfo[vehicleid][vFuel] = 100;
                    GetVehicleParamsEx(velik[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
                    SetVehicleParamsEx(velik[playerid], true, true, alarm, doors, bonnet, boot, objective);
                    PutPlayerInVehicle(playerid, velik[playerid], 0);
                    RCars[velik[playerid]] = playerid;
                    PlayerInfo[playerid][pCash] -= 0;
                        }
                    }
                }
		case D_LICENSES: {
			if(!response) return 1;
			new string[144];
			if(TI[playerid][tAutoSchool]) {
				new ekzamen[] = {"наземний транспорт","повітряний транспорт","водний транспорт"};
				format(string,sizeof(string),"%s завершите активный экзамен (%s)",player_name[playerid],ekzamen[TI[playerid][tAutoSchool]-1]);
				SendBotMessage(playerid,string);
				return 1;
			}
			switch(listitem) {
				case 0: {
					if(lic[playerid][0]) {
						format(string,sizeof(string),"%s у вас уже є ця ліцензія",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(500/100*BonusInfo[act_buylic]);
						if(PlayerInfo[playerid][pCash] < (500-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(500-seller),"покупка ліцензії");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(500/100*BonusInfo[act_buylic]);
						if(PlayerInfo[playerid][pCash] < (500-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(500-seller),"покупка ліцензії");
					}
				    else {
				    	if(PlayerInfo[playerid][pCash] < 500) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
				    	GiveMoney(playerid,-500,"покупка ліцензії");
				    }

					FI[fWHITEHOUSE][fBank] += 500;

					format(string,sizeof(string),"%s пройдите в компьютерный класс для проходження теоретической части",player_name[playerid]);
					SendBotMessage(playerid,string);
				}
				case 1: {
					if(lic[playerid][1]) {
						format(string,sizeof(string),"%s у вас уже є ця ліцензія",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(15000/100*BonusInfo[act_buylic]);
						if(PlayerInfo[playerid][pCash] < (15000-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(15000-seller),"покупка ліцензії");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(15000/100*BonusInfo[act_buylic]);
						if(PlayerInfo[playerid][pCash] < (15000-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(15000-seller),"покупка ліцензії");
					}
				    else {
				    	if(PlayerInfo[playerid][pCash] < 15000) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
				    	GiveMoney(playerid,-15000,"покупка ліцензії");
				    }

					FI[fWHITEHOUSE][fBank] += 15000;
					format(string,sizeof(string),"%s пройдите в класс для проходження практической части",player_name[playerid]);
					SendBotMessage(playerid,string);
				}
				case 2: {
					if(lic[playerid][2]) {
						format(string,sizeof(string),"%s у вас уже є ця ліцензія",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(10000/100*BonusInfo[act_buylic]);
						if(PlayerInfo[playerid][pCash] < (10000-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(10000-seller),"покупка ліцензії");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(10000/100*BonusInfo[act_buylic]);
						if(PlayerInfo[playerid][pCash] < (10000-seller)) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(10000-seller),"покупка ліцензії");
					}
				    else {
				    	if(PlayerInfo[playerid][pCash] < 10000) {
							format(string,sizeof(string),"%s у вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
				    	GiveMoney(playerid,-10000,"покупка ліцензії");
				    }
				    FI[fWHITEHOUSE][fBank] += 10000;
				    if(PlayerInfo[playerid][pVips] != VIP_NONE && PlayerInfo[playerid][pVips] != VIP_KING) {
					    SendClientMessage(playerid,CGOLD,"Вітаємо с получением ліцензії на виліт");
						lic[playerid][1] = 1;
						UpdateLicenses(playerid);
						return 1;
					}
					else {
						format(string,sizeof(string),"%s пройдите в класс для проходження практической части",player_name[playerid]);
						SendBotMessage(playerid,string);
					}
				}
				case 3: {
					if(lic[playerid][3]) {
						format(string,sizeof(string),"%s у вас уже є ця ліцензія",player_name[playerid]);
						SendBotMessage(playerid,string);
						return 1;
					}
					if(PlayerInfo[playerid][pVips] != VIP_PLATINA && PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE && PlayerInfo[playerid][pVips] != VIP_FOREVER) {
						if(!PlayerInfo[playerid][pGunLic]) {
							format(string,sizeof(string),"%s щоб получить лицензию на зброю требуется печать одного из врачей в любой лікарні",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
					}
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(20000/100*BonusInfo[act_buylic]);
						if(PlayerInfo[playerid][pCash] < (20000-seller)) {
							format(string,sizeof(string),"%s у Вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(20000-seller),"покупка ліцензії");
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(20000/100*BonusInfo[act_buylic]);
						if(PlayerInfo[playerid][pCash] < (20000-seller)) {
							format(string,sizeof(string),"%s у Вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
						GiveMoney(playerid,-(20000-seller),"покупка ліцензії");
					}
				    else {
				    	if(PlayerInfo[playerid][pCash] < 20000) {
							format(string,sizeof(string),"%s у Вас недостаточно коштів на покупку данной ліцензії",player_name[playerid]);
							SendBotMessage(playerid,string);
							return 1;
						}
				    	GiveMoney(playerid,-20000,"покупка ліцензії");
				    }
					FI[fWHITEHOUSE][fBank] += 20000;
					
					format(string,sizeof(string),"%s Ваша ліцензія готова",player_name[playerid]);
					SendBotMessage(playerid,string);
					lic[playerid][3] = 1;
					UpdateLicenses(playerid);
				}
			}
			if(listitem != 3) TI[playerid][tAutoSchool] = listitem + 1;
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
		}
		case D_BILL_ADMIN: {
			if(!response) return pc_cmd_apanel(playerid,"");
			SetPVarInt(playerid,"SelectBildID",listitem);
			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "bild_x", pos[0]);
			SetPVarFloat(playerid, "bild_y", pos[1]);
			SetPVarFloat(playerid, "bild_z", pos[2]);
			BildIntro(playerid, listitem, -30);
			D(playerid,D_BILL_AUNRENT,DSM,""YELLOW"Аренда билборда","\n\n"W"Ви уверены, что хочете разорвать аренду у данного билборда?\n\n","Так","Ні");
		}
		case D_BILL_MAIN: {
	   		if(!response) return 1;
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = 1000*gBusiness[id][bizzPrice];
		   	SetPVarInt(playerid,"SelectBildID",listitem);

			new Float:pos[3];
			GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
			SetPVarFloat(playerid, "bild_x", pos[0]);
			SetPVarFloat(playerid, "bild_y", pos[1]);
			SetPVarFloat(playerid, "bild_z", pos[2]);   
			
		   	if(!BildInfo[listitem][bOwned]) {
		       	new z, string[256];
		       	for(new x; x<MAX_BILLBORDS; x++) if(strfind(player_name[playerid],BildInfo[x][bOwner],false) == 0) z++;
		    	BildIntro(playerid, listitem, -30);
		    	format(string, sizeof(string),"\n\n"W"Ціна оренди рекламного щита: "ORANGE"$%d\n"W"Ви уверены, что хочете арендовать данный рекламный щит на "YELLOW"7"W" днів?\n",price);
		       	D(playerid,D_BILL_RENT,DSM,""YELLOW"Аренда билборда",string,"Так","Ні");
		   	}
		   	else if(GetString(BildInfo[listitem][bOwner],player_name[playerid])) ShowPlayerEditMenu(playerid);
  		}
		case D_BILL_RENT: {
		    if(!response) return BildExit(playerid);
			new id = TI[playerid][tSelectedBusinessID];
			if(id < 0) return 1;
			new price = 1000*gBusiness[id][bizzPrice];
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid,"У Вас недостаточно коштів"), BildExit(playerid);
			GiveMoney(playerid,-price,"аренда билборда");
			bizz_pay(id,price);
			format(BildInfo[p_var][bOwner],MAX_PLAYER_NAME,player_name[playerid]);
			SendOk(playerid, "Ви успішно арендовали билборд на 7 днів");
			BildInfo[p_var][bOwned] = 1;
			BildInfo[p_var][bDay] = (unix + 86400 * 7);
			ShowPlayerEditMenu(playerid);
			format(query,sizeof(query),"UPDATE `billboards` SET `bDay` = '%d',`bOwned` = 1, `bOwner` = '%s' WHERE `id` = '%i'",BildInfo[p_var][bDay],player_name[playerid],p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_SETTING: {
		    if(!response) return BildExit(playerid);
		    switch(listitem) {
		        case 0: D(playerid,D_BILL_TEXT,DSI,""YELLOW"Изменение текста","\n\n"W"Введіть текст оголошення в поле ниже:\n\n","Змінити","Назад");
		        case 1: {
					new str[24],string[1524];
				    for(new i, z = sizeof(Colors_LOW); i<z; i++) format(str,24,"{%s}Фон\n",Colors_LOW[i]), strcat(string, str);
					D(playerid,D_BILL_FON,DSL,""YELLOW"Колір фона",string,"Змінити","Назад");
				}
				case 2: D(playerid,D_BILL_FONT,DSL,""YELLOW"Шрифт",""YELLOW"1."W" Arial\n"YELLOW"2."W" Calibri\n"YELLOW"3."W" Tahoma\n"YELLOW"4."W" Verdana","Вибрати","Назад");
				case 3: D(playerid,D_BILL_SIZE,DSI,""YELLOW"Розмір текста","\n\n"W"Укажите розмір текста (от 1 до 255):\n\n","Змінити","Назад");
				case 4: D(playerid,D_BILL_TEXT_2,DSL,""YELLOW"Виравнивания текста",""YELLOW"1."W" По левому краю\n"YELLOW"2."W" По центру\n"YELLOW"3."W" По правому краю","Вибрати","Назад");
				case 5: D(playerid,D_BILL_UNRENT,DSM,""YELLOW"Расторжение договора","\n\n"W"Ви дійсно хочете разорвать договор оренди с этим билбордом?\n\n","Так","Ні");
		    }
		}
		case D_BILL_TEXT: {
            if(!response) return ShowPlayerEditMenu(playerid);
            new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			for(new i; i<5; i++) {
				new pos = strfind(inputtext,"/",false);
				if(pos != -1) strdel(inputtext, pos, pos+1), strins(inputtext, "\n", pos, 2);
			}
			format(BildInfo[p_var][bText],144,inputtext);
			SendOk(playerid,"Ви успішно змінили текст билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			format(query,144+64,"UPDATE `billboards` SET `bText` = '%s' WHERE `id` = %i",inputtext,p_var);
			mysql_tquery(connects,query,"","");
  		}
		case D_BILL_FON: {
  		    if(!response) return ShowPlayerEditMenu(playerid);
  		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
			BildInfo[p_var][bBackColor] = listitem;
			SendOk(playerid,"Ви успішно змінили фон билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			format(query,96,"UPDATE `billboards` SET `bBackColor` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_FONT: {
            if(!response) return ShowPlayerEditMenu(playerid);
            new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
            BildInfo[p_var][bFontFace] = listitem;
            SendOk(playerid,"Ви успішно змінили шрифт билборда");
			ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			format(query,96,"UPDATE `billboards` SET `bFontFace` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_SIZE: {
		    if(!response) return ShowPlayerEditMenu(playerid);
			new size = strval(inputtext), query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    if(size < 0 || size > 255) return D(playerid,D_BILL_SIZE,DSI,""YELLOW"Розмір текста","\n\n"W"Укажите розмір текста (от 1 до 255):\n\n","Змінити","Назад");
		    BildInfo[p_var][bFontSize] = size;
		    SendOk(playerid,"Ви успішно змінили розмір текста билборда");
		    ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

		    format(query,96,"UPDATE `billboards` SET `bFontSize` = %i WHERE `id` = %i",size,p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_TEXT_2: {
		    if(!response) return ShowPlayerEditMenu(playerid);
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    BildInfo[p_var][bAligment] = listitem;
		   	SendOk(playerid,"Ви успішно змінили выравнивание текста билборда");
		    ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);

			format(query,96,"UPDATE `billboards` SET `bAligment` = %i WHERE `id` = %i",listitem,p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_UNRENT: {
		    if(!response) return ShowPlayerEditMenu(playerid);
		    new query[256], p_var = GetPVarInt(playerid,"SelectBildID");
		    BildInfo[p_var][bFontSize] = 0;
		    BildInfo[p_var][bBackColor] = 0;
			BildInfo[p_var][bFontFace] = 0;
			BildInfo[p_var][bOwned] = 0;
			BildInfo[p_var][bDay] = 0;
			format(BildInfo[p_var][bOwner],1,"-");
		    SendOk(playerid,"Договор с одним из рекламных билбордов успішно расторгнут");
		    UpdateBuildText(p_var);
            BildExit(playerid);

		    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",p_var);
			mysql_tquery(connects,query,"","");
		}
		case D_BILL_AUNRENT: {
			if(!response) return SetCameraBehindPlayer(playerid),TogglePlayerControllable(playerid, 1),pc_cmd_apanel(playerid,"");
		    new query[256], ID = GetPVarInt(playerid,"SelectBildID");
		    BildInfo[ID][bFontSize] = 0;
		    BildInfo[ID][bBackColor] = 0;
			BildInfo[ID][bFontFace] = 0;
			BildInfo[ID][bOwned] = 0;
			BildInfo[ID][bDay] = 0;
			format(BildInfo[ID][bOwner],1,"-");
		    SendOk(playerid,"Договор с одним из рекламных билбордов успішно расторгнут");
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		    UpdateBuildText(ID);

		    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",ID);
			mysql_tquery(connects,query,"","");
		}
		case D_ADMIN_TIME: {
			if(!response) return 1;
	        if(!strlen(inputtext)) return D(playerid, D_ADMIN_TIME, DSI, ""YELLOW"Статистика адміністратора", "\n\n"W"Для перегляду статистики адміністратора\nукажите его ник:\n\n", "Ввід", "Відміна");
			new query[200];
			format(query, sizeof(query), "SELECT * FROM admin WHERE Name = '%s' LIMIT 1", inputtext);
			mysql_tquery(connects, query, "OnCheckStatsAdmin", "is", playerid, inputtext);
		}
		case D_TUNE_UPDATE: {
			if(!response) return 1;
			new str[64],value,model,vehicleid = GetPlayerVehicleID(playerid);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			format(str,64,"TUN[%d][Value]",CustomListNum[playerid]);
			value = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) return ErrorMessage(playerid, "Неможливо установить данную деталь");
			if(CheckTuning(playerid,GetNearestCar(playerid),model)) return ErrorMessage(playerid, "Данная деталь уже встановлена");

			new price;

			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}
		    if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid, "У Вас недостаточно коштів");

			new string[128];
			format(string,sizeof(string),"Ви установили деталь за "ORANGE"$%d",price);
			SendOk(playerid,string);
			ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
			SaveTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
			GiveMoney(playerid,-price,"Тюннинг");
			PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
		}
		case D_AMEMBERS: {
			if(!response) return 1;
			new ids = 0;
			new string[3000],str[128];
			strcat(str,"ID\tРанг\tТелефон\tДогани\tІм'я"W"\n\n");
			strcat(string,str);
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(PlayerInfo[i][pMember] != listitem+1) continue;
				if(PlayerInfo[i][pRank] < 1 || PlayerInfo[i][pMember] < 1) continue;
				format(str, sizeof(str), "%d\t%d\t%d\t\t%d/3\t\t%s %s %s\n",i,PlayerInfo[i][pRank],PlayerInfo[i][pPhone],PlayerInfo[i][pfWarn],player_name[i],(start_work[i]) ? ("[На роботі]") : ("[Не на роботі]"),(TI[i][tAFK] > 3) ? (""YELLOW"[AFK]"W""):(""));
				strcat(string,str);
				ids++;
			}
			D(playerid, DIALOG_NONE, DSM, ""YELLOW"Члени організації онлайн", string, "Закрити", "");
			string = "";
			format(string,128,"Всього гравців в організації: "ORANGE"%d",ids);
			SendOk(playerid,string);
		}
		case D_LAB: {
			if(!response) return 1;
			if(!PlayerInfo[playerid][pLeader]) return 1;
			new string[512],member = -1;
			if(PlayerInfo[playerid][pMember] == fLCN) member = 0;
			else if(PlayerInfo[playerid][pMember] == fYAKUZA) member = 1;
			else if(PlayerInfo[playerid][pMember] == fRM) member = 2;
			if(member == -1) return 1;
			if(l_actor[member][listitem]) return ErrorMessage(playerid,"Рабочий уже нанят");
			format(string,sizeof(string),"\n\n"W"Ви дійсно хочете нанять рабочего "YELLOW"№%d"W" за "ORANGE"$25000"W" на "YELLOW"7"W" днів?",listitem+1);
			D(playerid, D_LAB_2, DSM, ""YELLOW"Найм работника", string, "Нанять", "Закрити");
			SetPVarInt(playerid,"lactor",listitem);
		}
		case D_LAB_2: {
			if(!response) return 1;
			new member = -1,list = GetPVarInt(playerid,"lactor");
			DeletePVar(playerid,"lactor");
			if(PlayerInfo[playerid][pMember] == fLCN) member = 0;
			else if(PlayerInfo[playerid][pMember] == fYAKUZA) member = 1;
			else if(PlayerInfo[playerid][pMember] == fRM) member = 2;
			if(member == -1) return 1;
			if(l_actor[member][list]) return ErrorMessage(playerid,"Рабочий уже нанят");
			if(FI[PlayerInfo[playerid][pMember]][fBank] < 25000) return ErrorMessage(playerid,"В общаге мафии недостаточно коштів");
			FI[GetTeamID(playerid)][fBank]-= 25000;
			UpdateFraction(GetTeamID(playerid),"Bank",FI[GetTeamID(playerid)][fBank]);
			SendOk(playerid,"Рабочий нанят");
			l_actort[member][list] = unix + 7*86400;
			l_actor[member][list] = 1;
			SaveLabrary(member);
			UseLabrary(member,list,1);
		}
		case D_FAKEPASS: {
			if(!response) return 1;
			if(PlayerInfo[playerid][pMember] != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Ви не агент FBI");
			if(!TI[playerid][tMasked]) return ErrorMessage(playerid,"На Вас нет маскировочной формы");
			new id = GetPVarInt(playerid,"fpass2");
			DeletePVar(playerid,"fpass2");
			if(!IsPlayerConnected(id)) return ErrorMessage(playerid,not_id);
			if(GetPlayerDistanceToPlayer(playerid, id) > 5.0  || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return ErrorMessage(playerid, "Гравець слишком далеко");
			if(active_accept(id)) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
			TI[playerid][tFakePass] = listitem;
			new string[144];
				
			format(string, sizeof(string), ""YELLOW"%s {f6f6d9}хочет показать Вам паспорт", player_name[playerid]);
			SendUse(id, string);
			SendClientMessage(id,COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

			format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}показать Ваш паспорт", player_name[id]);
			SendUse(playerid, string);
			SetPVarInt(id,"fpass", playerid + 1);
		}
		case D_BUYACS: {
	        if(!response) {
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				DeletePVar(playerid,"buy_accses");
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"),80,1);
				SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
				TogglePlayerControllable(playerid, 1);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "posx");
				DeletePVar(playerid, "posy");
				DeletePVar(playerid, "posz");
				DeletePVar(playerid, "posa");
	        	return true;
			}
			new price;
	        switch(listitem) {
	        	case 0: {
	        		type_acces[playerid] = 1;
	        		SetPVarInt(playerid, "slot_acs", 1);
	        		PlayerInfo[playerid][pSlotItem_Use][1] = 1;
	        		AtachPlayerAcces(playerid, acces_id_glass[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_glass[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_glass[0][0]);
	        	}
		    	case 1: {
		    	    type_acces[playerid] = 2;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PlayerInfo[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_hat[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_hat[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_hat[0][0]);
		    	}
		    	case 2: {
		    	    type_acces[playerid] = 3;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PlayerInfo[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_bonnet[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_bonnet[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_bonnet[0][0]);
		    	}
		    	case 3: {
		    	    type_acces[playerid] = 4;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PlayerInfo[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_cap[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_cap[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_cap[0][0]);
		    	}
		    	case 4: {
		    	    type_acces[playerid] = 5;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PlayerInfo[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_beret[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_beret[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_beret[0][0]);
		    	}
		    	case 5: {
		    	    type_acces[playerid] = 6;
			    	SetPVarInt(playerid, "slot_acs", 3);
	        		PlayerInfo[playerid][pSlotItem_Use][3] = 1;
	        		AtachPlayerAcces(playerid, acces_id_bandanas[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_bandanas[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_bandanas[0][0]);
		    	}
		    	case 6: {
		    	    type_acces[playerid] = 7;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PlayerInfo[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_panam[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_panam[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_panam[0][0]);
		    	}
		    	case 7: {
		    	    type_acces[playerid] = 8;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PlayerInfo[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_sporthat[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_sporthat[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_sporthat[0][0]);
		    	}
		    	case 8: {
		    	    type_acces[playerid] = 9;
			    	SetPVarInt(playerid, "slot_acs", 0);
	        		PlayerInfo[playerid][pSlotItem_Use][0] = 1;
	        		AtachPlayerAcces(playerid, acces_id_kask[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_kask[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_kask[0][0]);
		    	}
		    	case 9: {
		    	    type_acces[playerid] = 10;
			    	SetPVarInt(playerid, "slot_acs", 3);
	        		PlayerInfo[playerid][pSlotItem_Use][3] = 1;
	        		AtachPlayerAcces(playerid, acces_id_mask[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_mask[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_mask[0][0]);
		    	}
		    	case 10: {
		    	    type_acces[playerid] = 11;
			    	SetPVarInt(playerid, "slot_acs", 6);
	        		PlayerInfo[playerid][pSlotItem_Use][6] = 1;
	        		AtachPlayerAcces(playerid, acces_id_headphones[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 210.877365, -41.594570, 1002.757446, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 215.576373, -41.584163, 1002.658569, 1300);
					price = acces_id_headphones[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_headphones[0][0]);
		    	}
		    	case 11: {
		    	    type_acces[playerid] = 12;
			    	SetPVarInt(playerid, "slot_acs", 7);
	        		PlayerInfo[playerid][pSlotItem_Use][7] = 1;
	        		AtachPlayerAcces(playerid, acces_id_watch[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 211.655944, -41.365447, 1002.099304, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 216.590118, -41.735664, 1001.380371, 1300);
					price = acces_id_watch[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_watch[0][0]);
		    	}
		    	case 12: {
		    	    type_acces[playerid] = 13;
			    	SetPVarInt(playerid, "slot_acs", 5);
	        		PlayerInfo[playerid][pSlotItem_Use][5] = 1;
	        		AtachPlayerAcces(playerid, acces_id_backpack[0][0],GetPlayerSkin(playerid));
	        		InterpolateCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234, 214.039825, -41.529178, 1002.489135, 1300);
					InterpolateCameraLookAt(playerid, 212.5107,-41.5253,1002.0234, 209.092712, -41.541694, 1001.763916, 1300);
					price = acces_id_backpack[0][1];
					SetPVarInt(playerid, "id_acs", acces_id_backpack[0][0]);
		    	}
			}
			SetPVarInt(playerid, "price_acs", price);
			for(new i=0; i<9; i++) {
				TextDrawShowForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawShow(playerid,buy_player_skins[playerid]);
			new string[12];
			format(string,sizeof(string),"$%d",price);
			PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
			SelectTextDraw(playerid, 0x0080FFFF);
	    }
	    case D_BUYACS_3: {
	        if(!response) {
	            AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
	        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
	        	buyacces(playerid);
	        	return true;
			}
			if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
	            AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
	        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
	        	buyacces(playerid);
	        	return true;
			}
			if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
				gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
				bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
			}
			SendOk(playerid, "Вітаємо з покупкою Аксесуара");
			SendOk(playerid, "Меню керування аксесуарами: "W"(/mm > особисті налаштування > Аксесуари)");
			GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксесуара");
			PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] = GetPVarInt(playerid, "id_acs"); // записуємо ид об'єкта в слой
			PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs")] = 1;
			save_slotitem(playerid);
			save_slotitem_use(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
			buyacces(playerid);
			accs_close(playerid);
	    }
		case D_BUYACS_4: {
	        if(!response) return pc_cmd_menu(playerid,"");
			switch(listitem) {
			    case 0:  {
			        SetPVarInt(playerid, "slot_acs_",0);
			        D(playerid, D_BUYACS_5, DSL,""YELLOW"Керування аксесурами: Головні убори",""YELLOW"1."W" Одягнути\n"YELLOW"2."W" Зняти\n"YELLOW"3."W" Видалити" , "Вибрати", "Відміна");
				}
				case 1: {
			        SetPVarInt(playerid, "slot_acs_",1);
			        D(playerid, D_BUYACS_5, DSL,""YELLOW"Керування аксесурами: Очки",""YELLOW"1."W" Одягнути\n"YELLOW"2."W" Зняти\n"YELLOW"3."W" Видалити" , "Вибрати", "Відміна");
				}
				case 2: {
			        SetPVarInt(playerid, "slot_acs_",3);
			        D(playerid, D_BUYACS_5, DSL,""YELLOW"Керування аксесурами: Бандани",""YELLOW"1."W" Одягнути\n"YELLOW"2."W" Зняти\n"YELLOW"3."W" Видалити" , "Вибрати", "Відміна");
				}
				case 3:  {
			        SetPVarInt(playerid, "slot_acs_",6);
			        D(playerid, D_BUYACS_5, DSL,""YELLOW"Керування аксесурами: Навушники",""YELLOW"1."W" Одягнути\n"YELLOW"2."W" Зняти\n"YELLOW"3."W" Видалити" , "Вибрати", "Відміна");
				}
				case 4:  {
			        SetPVarInt(playerid, "slot_acs_",7);
			        D(playerid, D_BUYACS_5, DSL,""YELLOW"Керування аксесурами: Годинники",""YELLOW"1."W" Одягнути\n"YELLOW"2."W" Зняти\n"YELLOW"3."W" Видалити" , "Вибрати", "Відміна");
				}
				case 5:  {
			        SetPVarInt(playerid, "slot_acs_",5);
			        D(playerid, D_BUYACS_5, DSL,""YELLOW"Керування аксесурами: Рюкзаки",""YELLOW"1."W" Одягнути\n"YELLOW"2."W" Зняти\n"YELLOW"3."W" Видалити" , "Вибрати", "Відміна");
				}
			}
	    }
	    case D_BUYACS_5: {
	        if(!response) return true;
			switch(listitem) {
			    case 0: {
					if(PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")] == 0) return ErrorMessage(playerid, "У Вас немає цього аксесуару");
					if(PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs_")] == 1) return ErrorMessage(playerid, "Цей аксесуар уже знаходиться на вашому персонажі");
					PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs_")] = 1;
					save_slotitem_use(playerid);
					AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")],GetPlayerSkin(playerid));
					SendOk(playerid,"Аксесуар успішно одягнутий");
				}
				case 1: {
			        if(PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")] == 0) return ErrorMessage(playerid, "У Вас немає цьогор аксесуру");
					if(PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs_")] == 0) return ErrorMessage(playerid, "Цей аксесуар уже знятий");
					PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs_")] = 0;
					save_slotitem_use(playerid);
					RemovePlayerAttachedObject(playerid, GetPVarInt(playerid, "slot_acs_"));
					SendOk(playerid,"Аксессуар успішно знятий");
				}
				case 2: {
					if(PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")] == 0) return ErrorMessage(playerid, "У Вас немає цього аксесура");
					PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs_")] = 0;
					save_slotitem(playerid);
					RemovePlayerAttachedObject(playerid, GetPVarInt(playerid, "slot_acs_"));
					SendOk(playerid,"Аксессуар успішно видалений");
				}
			}
			D(playerid, D_BUYACS_4, DSL,""YELLOW"Керування аксесурами",""YELLOW"1."W" Головні убори\n"YELLOW"2."W" Очки\n"YELLOW"3."W" Бандани\n"YELLOW"4."W" Навушники\n"YELLOW"5."W" Годинники\n"YELLOW"6."W" Рюкзаки" , "Вибрати", "Відміна");
	    }
		case D_GAME_DM: {
		    if(!response) return true;
		    switch(listitem) {
    			case 0: {
					if(!lic[playerid][3]) return ErrorMessage(playerid,"У вас немає ліцензій на зброю");
					if(open_game != 1) return  ErrorMessage(playerid, "В данний момент реєстрація закрита");
					new string[256];
					format(string, sizeof(string), "\n\n"W"Для реєстрації, необхідно зробити взнос.\nВ данный момент, мінімальний взнос складає "ORANGE"$1000\n"W"Всього зареєстровано "YELLOW"%d "W"гравців\nОбщий взнос складає "ORANGE"$%d\n\n", players_in_game,money_in_game);
				    D(playerid,D_GAME_DM_2,DSI,""YELLOW"Регистрация",string,"Внести","Назад");
				    return 1;
				}
				case 1: {
    		        new game_info1[650];
    		        for(new i; i < sizeof(game_info); i++) {
						strcat(game_info1,game_info[i]);
			  			D(playerid,DIALOG_NONE,DSM,""YELLOW"Інформація", game_info1, "Закрити", "");
					}
				}
			}
		}
		case D_GAME_DM_2: {
			if(!response) return 1;
			if(open_game != 1) return ErrorMessage(playerid, "В данный момент регистрация закрыта");
			if(player_to_game[playerid] == 1) return ErrorMessage(playerid, "Ви уже зарегистрировались");
			if(strval(inputtext) < 1000 ||strval(inputtext) > 10000) {
				new string[356];
				format(string, sizeof(string), "\n\n"W"Для регистрации, необхідно сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "YELLOW"%d "W"гравців\nОбщий взнос составляет "ORANGE"$%d\n\n"NO"*{f6f6d9} Розмір взноса от $1000 до $10000", players_in_game,money_in_game);
				D(playerid,D_GAME_DM_2,DSI,""YELLOW"Регистрация",string,"Внести","Назад");
				return 1;
			}
			if(strval(inputtext) > PlayerInfo[playerid][pCash]) return ErrorMessage(playerid, "У Вас недостаточно коштів");
			GiveMoney(playerid,-strval(inputtext),"взнос на сумасшедшие войны");
			TI[playerid][tCashDM] = strval(inputtext);
            SendOk(playerid, "Ви успішно зарегистрировались");
			players_in_game++;

            money_in_game += strval(inputtext);

			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_game);
			UpdateDynamic3DTextLabelText(gamedm_text,-1,string);

            player_to_game[playerid] = 1;
			new query[148];
			format(query, sizeof(query), "INSERT INTO `dm_arena` (Name, kills_dm) VALUES ('%s', '0')", player_name[playerid]);
			mysql_tquery(connects, query);
		}
		case D_GAME_RACE: {
		    if(!response) return true;
		    switch(listitem) {
    			case 0: {
					if(!lic[playerid][0]) return ErrorMessage(playerid,"У вас немає водительских прав");
    		        if(open_race_lv != 1) return ErrorMessage(playerid,"В данный момент регистрация закрыта");
					if(players_in_race_lv >= 25) return ErrorMessage(playerid,"Нет места для регистрации! Всего 25 участников");
					new string[256];
					format(string, sizeof(string), "\n\n"W""W"Для регистрации, необхідно сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "YELLOW"%d "W"гравців\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n", players_in_race_lv,money_in_race_lv);
				    D(playerid,D_GAME_RACE_2,DSI,""YELLOW"Регистрация",string,"Внести","Назад");
				    return 1;
				}
				case 1: {
    		        new game_info2[650];
    		        for(new i; i < sizeof(game_info_race_lv); i++) {
						strcat(game_info2,game_info_race_lv[i]);
			  			D(playerid,DIALOG_NONE,DSM,""YELLOW"Інформація", game_info2, "Закрити", "");
					}
				}
			}
		}
		case D_GAME_RACE_2: {
			if(!response) return 1;
			if(player_to_race_lv[playerid] == 1) return ErrorMessage(playerid, "Ви уже зарегистрировались");
			if(players_in_race_lv >= 25) return ErrorMessage(playerid, "Нет места для регистрации! Всего 25 участников");
			if(open_race_lv != 1) return ErrorMessage(playerid, "В данный момент регистрация закрыт!");
			if(strval(inputtext) < 1000 ||strval(inputtext) > 10000) {
				new string[356];
				format(string, sizeof(string), "\n\n"W""W"Для регистрации, необхідно сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "YELLOW"%d "W"гравців\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n"NO"*{f6f6d9} Розмір взноса от $1000 до $10000", players_in_race_lv,money_in_race_lv);
				D(playerid,D_GAME_RACE_2,DSI,""YELLOW"Регистрация",string,"Внести","Назад");
				return 1;
			}
			if(strval(inputtext) > PlayerInfo[playerid][pCash]) return ErrorMessage(playerid, "У Вас недостаточно коштів");
			GiveMoney(playerid,-strval(inputtext),"взнос на безумные гонки");
			TI[playerid][tCashRace] = strval(inputtext);
            SendOk(playerid, "Ви успішно зарегистрировались");
			players_in_race_lv ++;
            money_in_race_lv += strval(inputtext);
            player_to_race_lv[playerid] = 1;
            player_to_race_lv_id[playerid] = players_in_race_lv;

			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_race_lv);
			UpdateDynamic3DTextLabelText(gamerace_text,-1,string);
		}
		case D_GAME_GOLOD: {
		    if(!response) return true;
		    switch(listitem) {
    			case 0: {
    		        if(!open_gamegolod) return ErrorMessage(playerid,"В данный момент регистрация закрыта");
					if(players_in_golod >= 21) return ErrorMessage(playerid,"Нет места для регистрации! Всего 21 участников");
					new string[256];
					format(string, sizeof(string), "\n\n"W""W"Для регистрации, необхідно сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "YELLOW"%d "W"гравців\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n", players_in_golod,money_in_golod);
				    D(playerid,D_GAME_GOLOD_2,DSI,""YELLOW"Регистрация",string,"Внести","Назад");
				    return 1;
				}
				case 1: {
    		        new game_info2[650];
    		        for(new i; i < sizeof(golod_info); i++) {
						strcat(game_info2,golod_info[i]);
			  			D(playerid,DIALOG_NONE,DSM,""YELLOW"Інформація", game_info2, "Закрити", "");
					}
				}
			}
		}
		case D_GAME_GOLOD_2: {
			if(!response) return 1;
			if(player_to_golod[playerid]) return ErrorMessage(playerid, "Ви уже зарегистрировались");
			if(players_in_golod >= 21) return ErrorMessage(playerid, "Нет места для регистрации! Всего 21 участников");
			if(!open_gamegolod) return ErrorMessage(playerid, "В данный момент регистрация закрыта");
			if(strval(inputtext) < 1000 ||strval(inputtext) > 10000) {
				new string[356];
				format(string, sizeof(string), "\n\n"W""W"Для регистрации, необхідно сделать взнос.\nВ данный момент, минимальный взнос составляет "ORANGE"$1000\n"W"Всего зарегистрировались "YELLOW"%d "W"гравців\n\n"W"Общий взнос составляет "ORANGE"$%d\n\n"NO"*{f6f6d9} Розмір взноса от $1000 до $10000", players_in_golod,money_in_golod);
				D(playerid,D_GAME_GOLOD_2,DSI,""YELLOW"Регистрация",string,"Внести","Назад");
				return 1;
			}
			if(strval(inputtext) > PlayerInfo[playerid][pCash]) return ErrorMessage(playerid, "У Вас недостаточно коштів");
			GiveMoney(playerid,-strval(inputtext),"взнос на голодні ігри");
			TI[playerid][tCashRace] = strval(inputtext);
            SendOk(playerid, "Ви успішно зарегистрировались");
			players_in_golod ++;
            money_in_golod += strval(inputtext);
            player_to_golod[playerid] = 1;
            player_to_golod_id[playerid] = players_in_golod;
            golod_use_pickup[playerid] = 0;

			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_golod);
			UpdateDynamic3DTextLabelText(golod_text,-1,string);
		}
		case D_GIVE: {
		    if(!response) return true;
		    switch(listitem) {
    			case 0: D(playerid,D_GIVE_2,DSI,""YELLOW"Передача аптечки","\n\n"W"Укажите количество аптечок, которое хочете передать:\n\n","Передать","Відміна");
				case 1: D(playerid,D_GIVE_2,DSI,""YELLOW"Передача маски","\n\n"W"Укажите количество масок, которое хочете передать:\n\n","Передать","Відміна");
				case 2: D(playerid,D_GIVE_2,DSI,""YELLOW"Передача материалов","\n\n"W"Укажите количество материалов, которое хочете передать:\n\n","Передать","Відміна");
				case 3: D(playerid,D_GIVE_2,DSI,""YELLOW"Передача наркотиків","\n\n"W"Укажите количество наркотиків, которое хочете передать:\n\n","Передать","Відміна");
				case 4: D(playerid,D_GIVE_2,DSI,""YELLOW"Передача ремкомплекта","\n\n"W"Укажите количество ремкомплектов, которое хочете передать:\n\n","Передать","Відміна");
			}
			SetPVarInt(playerid, "Give_Tupe",listitem+1);
		}
		case D_GIVE_2: {
		    if(!response) return DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		    switch(GetPVarInt(playerid, "Give_Tupe")) {
		        case 1: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 5) {
						D(playerid,D_GIVE_2,DSI,""YELLOW"Передача аптечки","\n\n"W"Укажите количество аптечок, которое хочете передать:\n\n"NO"*{f6f6d9}От 1 до 5 аптечок","Передать","Відміна");
						return 1;
					}
					if(strval(inputtext) > PlayerInfo[playerid][pMedKit]) return ErrorMessage(playerid, "У вас немає столько аптечок"), DeletePVar(playerid, "Give_ID");
					if((strval(inputtext)+PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMedKit]) > vip_status[PlayerInfo[GetPVarInt(playerid, "Give_ID")][pVips]][vip_heal]) return ErrorMessage(playerid, "Гравець не унесет столько аптечок"),DeletePVar(playerid, "Give_ID");
		            PlayerInfo[playerid][pMedKit] -=strval(inputtext);
					UpdatePlayerData(playerid,"pMedKit",PlayerInfo[playerid][pMedKit]);
					PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMedKit] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pMedKit",PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMedKit]);
		            new string[128];
		            format(string,sizeof(string),"Ви передали "W"%s "ORANGE"%d{f6f6d9} аптечку(и)",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%d{f6f6d9} аптчечку(и)",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
				case 2: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 3) {
						D(playerid,D_GIVE_2,DSI,""YELLOW"Передача маски","\n\n"W"Укажите количество масок, которое хочете передать:\n\n"NO"*{f6f6d9}От 1 до 3 масок","Передать","Відміна");
						return 1;
					}
					if(strval(inputtext) > PlayerInfo[playerid][pMask]) return ErrorMessage(playerid, "У вас немає столько масок"),  DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
					if((strval(inputtext)+PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMask]) > vip_status[PlayerInfo[GetPVarInt(playerid, "Give_ID")][pVips]][vip_mask]) return ErrorMessage(playerid, "Гравець не унесет столько масок"),DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		            PlayerInfo[playerid][pMask] -=strval(inputtext);
					UpdatePlayerData(playerid,"pMask",PlayerInfo[playerid][pMask]);
					PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMask] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pMask",PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMask]);
		            new string[128];
		            format(string,sizeof(string),"Ви передали "W"%s "ORANGE"%d{f6f6d9} маску(и)",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%d{f6f6d9} маску(и)",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
				case 3: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 500) {
						D(playerid,D_GIVE_2,DSI,""YELLOW"Передача материалов","\n\n"W"Укажите количество материалов, которое хочете передать:\n\n"NO"*{f6f6d9}От 1 до 500 боєприпасів","Передать","Відміна");
						return 1;
					}
					if(strval(inputtext) > PlayerInfo[playerid][pMats]) return ErrorMessage(playerid, "У вас немає столько боєприпасів"),  DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
					if((strval(inputtext)+PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMats]) > vip_status[PlayerInfo[GetPVarInt(playerid, "Give_ID")][pVips]][vip_mats]) return ErrorMessage(playerid, "Гравець не унесет столько боєприпасів"),DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		            PlayerInfo[playerid][pMats] -=strval(inputtext);
					UpdatePlayerData(playerid,"pMats",PlayerInfo[playerid][pMats]);
				    PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMats] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pMats",PlayerInfo[GetPVarInt(playerid, "Give_ID")][pMats]);
		            new string[128];
		            format(string,sizeof(string),"Ви передали "W"%s "ORANGE"%d{f6f6d9} боєприпасів",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%d{f6f6d9} боєприпасів",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
				case 4: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 50) {
						D(playerid,D_GIVE_2,DSI,""YELLOW"Передача наркотиків","\n\n"W"Укажите количество наркотиків, которое хочете передать:\n\n"NO"*{f6f6d9}От 1 до 50 наркотиків","Передать","Відміна");
						return 1;
					}
					if(strval(inputtext) > PlayerInfo[playerid][pDrugs]) return  ErrorMessage(playerid, "У вас немає столько наркотиків"),  DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
					if((strval(inputtext)+PlayerInfo[GetPVarInt(playerid, "Give_ID")][pDrugs]) > vip_status[PlayerInfo[GetPVarInt(playerid, "Give_ID")][pVips]][vip_drugs]) return ErrorMessage(playerid, "Гравець не унесет столько наркотиків"),DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		            PlayerInfo[playerid][pDrugs] -=strval(inputtext);
					UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
					PlayerInfo[GetPVarInt(playerid, "Give_ID")][pDrugs] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pDrugs",PlayerInfo[GetPVarInt(playerid, "Give_ID")][pDrugs]);
		            new string[128];
		            format(string,sizeof(string),"Ви передали "W"%s "ORANGE"%dг{f6f6d9} наркотиків",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%dг{f6f6d9} наркотиків",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
				case 5: {
					if(!response) return DeletePVar(playerid, "Give_ID");
					if(strval(inputtext) < 1 || strval(inputtext) > 5) {
						D(playerid,D_GIVE_2,DSI,""YELLOW"Передача ремкомплекта","\n\n"W"Укажите количество ремкомплектов, которое хочете передать:\n\n"NO"*{f6f6d9}От 1 до 5 ремкомплектов","Передать","Відміна");
						return 1;
					}
					if(strval(inputtext) > PlayerInfo[playerid][pInstrument]) return  ErrorMessage(playerid, "У вас немає столько ремкомплектов"),  DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
					if((strval(inputtext)+PlayerInfo[GetPVarInt(playerid, "Give_ID")][pInstrument]) > 5) return ErrorMessage(playerid, "Гравець не унесет столько ремкомплектов"),DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		            PlayerInfo[playerid][pInstrument] -=strval(inputtext);
					UpdatePlayerData(playerid,"pInstr",PlayerInfo[playerid][pInstrument]);
					PlayerInfo[GetPVarInt(playerid, "Give_ID")][pInstrument] +=strval(inputtext);
					UpdatePlayerData(GetPVarInt(playerid, "Give_ID"),"pInstr",PlayerInfo[GetPVarInt(playerid, "Give_ID")][pInstrument]);
		            new string[128];
		            format(string,sizeof(string),"Ви передали "W"%s "ORANGE"%d{f6f6d9} ремкомплектов",player_name[GetPVarInt(playerid, "Give_ID")],strval(inputtext));
					SendOk(playerid,string);
				 	format(string,sizeof(string),""W"%s передал Вам "ORANGE"%d{f6f6d9} ремкомплектов",player_name[playerid],strval(inputtext));
					SendOk(GetPVarInt(playerid, "Give_ID"),string);
				}
			}
			SetPlayerChatBubble(playerid, "Что-то передал", COLOR_PURPLE, 30.0, 5000);
			ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
			DeletePVar(playerid, "Give_ID"),DeletePVar(playerid, "Give_Tupe");
		}
		case D_REPAIR_LIST: {
			if(!response) return true;
			if(PlayerInfo[playerid][pInstrument] < 1) return ErrorMessage(playerid,"Недостаточно инструментов");
			new veh = GetPVarInt(playerid,"MechOsmotrVEHID");
			new Float:vhealth;
			GetVehicleHealth(veh, vhealth);
			new panels_job,doors_job,lights_job,tires_job;
			GetVehicleDamageStatus(veh,panels_job,doors_job,lights_job,tires_job);
			switch(listitem) {
				case 0: {
					if(!doors_job) return ErrorMessage(playerid,"Починка дверей не требуется");
					D(playerid,D_REPAIR,DSM,""YELLOW"Починка дверей","\n\n"W"Ви уверены, что хочете починить двери?\n\n","Так","Ні");
				}
				case 1: {
					if(!panels_job) return ErrorMessage(playerid,"Починка корпуса не требуется!");
					D(playerid,D_REPAIR,DSM,""YELLOW"Починка корпуса","\n\n"W"Ви уверены, что хочете починить корпус?\n\n","Так","Ні");
				}
				case 2: {
					if(!lights_job) return ErrorMessage(playerid,"Починка фар не требуется");
					new Float:pos[6];
					GetCoordBonnetVehicle(veh, pos[0], pos[1], pos[2]);
					GetCoordBootVehicle(veh, pos[3], pos[4], pos[5]);
					if(!IsPlayerInRangeOfPoint(playerid,2.5,pos[0], pos[1], pos[2]) && !IsPlayerInRangeOfPoint(playerid,3.5,pos[3], pos[4], pos[5])) return ErrorMessage(playerid,"Ви далеко від фар Т/С");
					D(playerid,D_REPAIR,DSM,""YELLOW"Починка фар","\n\n"W"Ви уверены, что хочете починить фары?\n\n","Так","Ні");
				}
				case 3: {
					if(!tires_job) return ErrorMessage(playerid,"Починка колёс не требуется");
					D(playerid,D_REPAIR,DSM,""YELLOW"Починка колес","\n\n"W"Ви уверены, что хочете заменить колеса?\n\n","Так","Ні"),SetPVarInt(playerid,"JOBOSMOTR",4);
				}
	   			case 4: {
					if(vhealth >= 1000) return ErrorMessage(playerid,"Починка не требуется");
					new Float:pos[6];
					GetCoordBonnetVehicle(veh, pos[0], pos[1], pos[2]);
					GetCoordBootVehicle(veh, pos[3], pos[4], pos[5]);
					if(!IsPlayerInRangeOfPoint(playerid,2.5,pos[0], pos[1], pos[2]) && !IsPlayerInRangeOfPoint(playerid,3.5,pos[3], pos[4], pos[5])) return ErrorMessage(playerid,"Ви далеко від двигателя Т/С");
					D(playerid,D_REPAIR,DSM,""YELLOW"Починка двигателя","\n\n"W"Ви уверены, что хочете починить двигатель?\n\n","Так","Ні"),SetPVarInt(playerid,"JOBOSMOTR",5);
				}
				case 5: pc_cmd_remp(playerid,"");
			}
			SetPVarInt(playerid,"JOBOSMOTR",listitem+1);
			return 1;
		}
		case D_REPAIR: {
			if(!response) return true;
			new vehydid = GetPVarInt(playerid,"MechOsmotrVEHID");
			switch(GetPVarInt(playerid,"JOBOSMOTR")) {
				case 1: SetPlayerChatBubble(playerid, "осматривает двери транспорта", COLOR_PURPLE, 15, 5000);
				case 2: SetPlayerChatBubble(playerid, "осматривает копус транспорта", COLOR_PURPLE, 15, 5000);
				case 3: SetPlayerChatBubble(playerid, "осматривает фары транспорта", COLOR_PURPLE, 15, 5000);
				case 4: SetPlayerChatBubble(playerid, "осматривает колёса транспорта", COLOR_PURPLE, 15, 5000);
				case 5: {
					SetPlayerChatBubble(playerid, "осматривает двигатель транспорта", COLOR_PURPLE, 15, 5000);
					GetVehicleParamsEx(vehydid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehydid,engine,lights,alarm,doors,true,boot,objective);
				}
			}
			TogglePlayerControllable(playerid, false);
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			JobTempProcess[playerid] = 8;
			RandomYareNforJOBS(playerid);
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			return true;
		}
		case D_VACANCY: {
			if(!response) return 1;
			new vacancies = 0;
			for(new i = 0; i < 14; i++) {
			    if(VacancyInfo[i][VacancyStatus]) vacancies++;
			}
			if(PlayerInfo[playerid][pMember] && PlayerInfo[playerid][pRank] >= FI[GetTeamID(playerid)][fInviteRang] && !IsAGang(playerid) && !IsAMafia(playerid)) {
			    if(listitem == 0 && vacancies == 0) return D(playerid, D_VACANCY_2,DSI, ""YELLOW"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n", "Прийняти", "Відміна");
				else if(vacancies != 14 && listitem == vacancies) return D(playerid, D_VACANCY_2, DIALOG_STYLE_INPUT, ""YELLOW"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n", "Прийняти", "Відміна");
			}
			if(vacancies == 0) return ErrorMessage(playerid, "Сейчас нет доступных вакансий");
			if(listitem == vacancies + 1) pc_cmd_vacancy(playerid);
			new items = 0;
			for(new i = 0; i < 14; i++) {
			    if(VacancyInfo[i][VacancyStatus] == true) items++;
			    if(items - 1 == listitem) {
			        new string[63+28+100];
					format(string, sizeof(string), ""W"Організація: %s\n"W"Критерии: {f6f6d9}%s\n"W"Время: {f6f6d9}%s\n", FI[VacancyInfo[i][VacancyFraction]][fName], VacancyInfo[i][VacancyText], VacancyInfo[i][VacancyTime]);
					if(VacancyInfo[i][VacancyFraction] != PlayerInfo[playerid][pLeader]) return D(playerid, DIALOG_NONE, DSM, ""YELLOW"Вакансия", string, "Закрити", "");
					return D(playerid, D_VACANCY_4, DSM, ""YELLOW"Вакансия", string, "Видалити", "Відміна");
			    }
			}
		}
		case D_VACANCY_2: {
			if(!response) return 1;
			new text[120];
			if(sscanf(inputtext, "s[120]", text) || strlen(inputtext) > 120) return D(playerid, D_VACANCY_2, DSI, ""YELLOW"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n"NO"*{f6f6d9} Не более 120 символов", "Прийняти", "Відміна");
			SetPVarString(playerid, "texted", text);
			return D(playerid, D_VACANCY_3, DSL, ""YELLOW"Вибрать время", "\
8:00\n8:30\n9:00\n9:30\n10:00\n10:30\n11:00\n11:30\n12:00\n12:30\n13:00\n13:30\n\
14:00\n14:30\n15:00\n15:30\n16:00\n16:30\n17:00\n17:30\n18:00\n18:30\n19:00\n19:30\n20:00", "Прийняти", "Відміна");
		}
		case D_VACANCY_3: {
			if(!response) return 1;
			new time[6], text[120];
			switch(listitem) {
				case 0: time = "8:00";
				case 1: time = "8:30";
				case 2: time = "9:00";
				case 3: time = "9:30";
				case 4: time = "10:00";
				case 5: time = "10:30";
				case 6: time = "11:00";
				case 7: time = "11:30";
				case 8: time = "12:00";
				case 9: time = "12:30";
				case 10: time = "13:00";
				case 11: time = "13:30";
				case 12: time = "14:00";
				case 13: time = "14:30";
				case 14: time = "15:00";
				case 15: time = "15:30";
				case 16: time = "16:00";
				case 17: time = "16:30";
				case 18: time = "17:00";
				case 19: time = "17:30";
				case 20: time = "18:00";
				case 21: time = "18:30";
				case 22: time = "19:00";
				case 23: time = "19:30";
				case 24: time = "20:00";
			}
			for(new i = 0; i < 14; i++) {
			    if(VacancyInfo[i][VacancyFraction] == PlayerInfo[playerid][pMember] && VacancyInfo[i][VacancyStatus] == true)
			        return ErrorMessage(playerid, "Вакансия вашої організації уже добавлена, удалите старую");
            }
			for(new i = 0; i < 14; i++)  {
			    if(VacancyInfo[i][VacancyStatus] == false) {
					GetPVarString(playerid, "texted", text, 120);
			        VacancyInfo[i][VacancyText] = text;
                    VacancyInfo[i][VacancyFraction] = PlayerInfo[playerid][pMember];
                    VacancyInfo[i][VacancyStatus] = true;
					VacancyInfo[i][VacancyCreator] = playerid;
					VacancyInfo[i][VacancyTime] = time;

                    SendOk(playerid, "Вакансия успішно добавлена");
                    return pc_cmd_vacancy(playerid);
				}
			}
			return pc_cmd_vacancy(playerid);
		}
		/*case D_VACANCY_2: {
			if(!response) return 1;
			new text[120];
			if(sscanf(inputtext, "s[120]", text) || strlen(inputtext) > 120) return D(playerid, D_VACANCY_3, DSI, ""YELLOW"Добавить вакансию", "\n\n"W"Укажите требования для приёма в Вашу организацию:\n\n"NO"*{f6f6d9} Не более 120 символов", "Прийняти", "Відміна");
            //SetPVarString(playerid, "textex", text);
            ShowPlayerDialog(playerid, D_VACANCY_3, DIALOG_STYLE_LIST, "Вибрать время собеседования", "\
8:00\n8:30\n9:00\n9:30\n10:00\n10:30\n11:00\n11:30\n12:00\n12:30\n13:00\n13:30\n\
14:00\n14:30\n15:00\n15:30\n16:00\n16:30\n17:00\n17:30\n18:00\n18:30\n19:00\n19:30\n20:00", "Прийняти", "Відміна");
		}
		case D_VACANCY_3: {
			if(!response) return 1;
			new time[5], text[120];
			switch(listitem){
				case 0: format(time, 5, "8:00");
				case 1: format(time, 5, "8:30");
				case 2: format(time, 5, "9:00");
				case 3: format(time, 5, "9:30");
				case 4: format(time, 5, "10:00");
				case 5: format(time, 5, "10:30");
				case 6: format(time, 5, "11:00");
				case 7: format(time, 5, "11:30");
				case 8: format(time, 5, "12:00");
				case 9: format(time, 5, "12:30");
				case 10: format(time, 5, "13:00");
				case 11: format(time, 5, "13:30");
				case 12: format(time, 5, "14:00");
				case 13: format(time, 5, "14:30");
				case 14: format(time, 5, "15:00");
				case 15: format(time, 5, "15:30");
				case 16: format(time, 5, "16:00");
				case 17: format(time, 5, "16:30");
				case 18: format(time, 5, "17:00");
				case 19: format(time, 5, "17:30");
				case 20: format(time, 5, "18:00");
				case 21: format(time, 5, "18:30");
				case 22: format(time, 5, "19:00");
				case 23: format(time, 5, "19:30");
				case 24: format(time, 5, "20:00");
			}
			for(new i = 0; i < 14; i++) {
			    if(VacancyInfo[i][VacancyFraction] == PlayerInfo[playerid][pMember] && VacancyInfo[i][VacancyStatus] == true)
			        return ErrorMessage(playerid, "Вакансия вашої організації уже добавлена, удалите старую");
            }
			for(new i = 0; i < 14; i++)  {
			    if(VacancyInfo[i][VacancyStatus] == false) {
			        VacancyInfo[i][VacancyText] = text;
                    VacancyInfo[i][VacancyFraction] = PlayerInfo[playerid][pMember];
                    VacancyInfo[i][VacancyStatus] = true;
					VacancyInfo[i][VacancyCreator] = playerid;

                    SendOk(playerid, "Вакансия успішно добавлена");
                    return pc_cmd_vacancy(playerid);
				}
			}
			return pc_cmd_vacancy(playerid);
		}*/
		case D_VACANCY_4: {
		    if(!response) return pc_cmd_vacancy(playerid);
			for(new i = 0; i < 14; i++)  {
			    if(VacancyInfo[i][VacancyFraction] == PlayerInfo[playerid][pLeader]) {
			        VacancyInfo[i][VacancyStatus] = false;
					VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;
			        return SendClientMessage(playerid, COLOR_GREEN, "Вакансия успішно удалена");
			     }
			}
		}
		case D_OBJ: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_OBJ_2,DSL,""YELLOW"Ограждения",""YELLOW"1."W" Преграда №1\n"YELLOW"2."W" Преграда №2\n"YELLOW"3."W" Отбойник\n"YELLOW"4."W" Конус\n"YELLOW"5."W" Табличка\n"YELLOW"6."W" Лежачий полицеский\n"YELLOW"7."W" Железный забор №1\n"YELLOW"8."W" Железный забор №2","Вибрати","Відміна");
				case 1: D(playerid,D_OBJ_3,DSL,""YELLOW"Ограждения",""YELLOW"1."W" Ограничение скорости\n"YELLOW"2."W" Запрет движения прямо\n"YELLOW"3."W" Закрыто\n"YELLOW"4."W" Стоп\n"YELLOW"5."W" Уступить дорогу\n"YELLOW"6."W" Ремонт дороги\n"YELLOW"7."W" Направление движения прямо\n"YELLOW"8."W" Поворот налево\n"YELLOW"9."W" Поворот направо","Вибрати","Відміна");
				case 2: D(playerid,D_OBJ_4,DSL,""YELLOW"Ограждения",""YELLOW"1."W" Радар","Вибрати","Відміна");
				case 3: {
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					for(new i;i<MAX_OGRAD;i++) {
						if(object[i]!=-1) {
							GetDynamicObjectPos(object[i],x,y,z);
							if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
								if(objectrot[i] != -1) {
									DestroyDynamicObject(objectrot[i]);
									objectrot[i]=-1;
								}
								DestroyDynamicObject(object[i]);
								object[i]=-1;
								SendOk(playerid,"Ограждение успішно убрано");
								return 1;
							}
						}
					}
				}
			}
		}
		case D_OBJ_2: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
				case 0: object[idobject] = CreateDynamicObject(1423, x, y, z-0.25, 0, 0, angle);
				case 1: object[idobject] = CreateDynamicObject(1282, x,y,z-0.3,0, 0, angle-90);
				case 2: object[idobject] = CreateDynamicObject(1237, x,y,z-1.0,0, 0, angle);
				case 3: object[idobject] = CreateDynamicObject(1238, x,y,z-0.65,0, 0, angle);
				case 4: D(playerid,D_OBJ_5,DSI,""YELLOW"Ограждения","\n\n"W"Введіть текст, который будет отображаться на ограждении\n\n","Ввід","Відміна");
				case 5: object[idobject] = CreateDynamicObject(19425, x,y,z-0.9,0, 0, angle);
				case 6: object[idobject] = CreateDynamicObject(983, x,y,z-0.3,0, 0, angle-90);
				case 7: object[idobject] = CreateDynamicObject(970, x,y,z-0.5,0, 0, angle);
			}
			if(listitem != 4) ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0),Streamer_Update(playerid);
		}
		case D_OBJ_3: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
				case 0: object[idobject] = CreateDynamicObject(11699, x,y,z-1.1,0, 0, angle);
				case 1: object[idobject] = CreateDynamicObject(19950, x,y,z-1.1,0, 0, angle);
				case 2: object[idobject] = CreateDynamicObject(19967, x,y,z-1.1,0, 0, angle);
				case 3: object[idobject] = CreateDynamicObject(19966, x,y,z-1.1,0, 0, angle);
				case 4: object[idobject] = CreateDynamicObject(19976 , x,y,z-1.1,0, 0, angle);
				case 5: object[idobject] = CreateDynamicObject(19974, x,y,z-1.1,0, 0, angle);
				case 6: object[idobject] = CreateDynamicObject(19957, x,y,z-1.1,0, 0, angle);
				case 7: object[idobject] = CreateDynamicObject(19955, x,y,z-1.1,0, 0, angle);
				case 8: object[idobject] = CreateDynamicObject(19956, x,y,z-1.1,0, 0, angle);
			}
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
		case D_OBJ_4: {
			if(!response) return pc_cmd_fences(playerid,"");
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			switch(listitem) {
				case 0: object[idobject] = CreateDynamicObject(18880, x,y,z-1.3,0, 0, angle);
			}
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
		case D_OBJ_5: {
			if(!response) return pc_cmd_fences(playerid,"");
			if(strlen(inputtext) < 5 || strlen(inputtext) > 40) {
				D(playerid,D_OBJ_5,DSI,""YELLOW"Ограждения","\n\n"W"Введіть текст, который будет отображаться на ограждении\n\n"NO"*{f6f6d9} От 5 до 40 символов","Ввід","Відміна");
				return 1;
			}
			new idobject;
			for(idobject = 0;idobject<MAX_OGRAD;idobject++) {
				if(object[idobject]==-1) break;
			}
			if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
			new Float:x, Float:y, Float:z, Float:angle,Float:rx, Float:ry, Float:rz,Float:ox, Float:oy, Float:oz;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			object[idobject] = CreateDynamicObject(19980, x,y,z-1.0,0, 0, angle);
			SetDynamicObjectMaterial(object[idobject], 2, 2823, "gb_kitchtake", "deep_red64", 0);
			GetDynamicObjectPos(object[idobject], ox, oy, oz);
			GetDynamicObjectRot(object[idobject], rx, ry, rz);
			objectrot[idobject] = CreateDynamicObject(19477,ox - 0.05 * floatsin(-rz, degrees), oy - 0.05 * floatcos(-rz, degrees), oz + 2.6, 0.000, 0.000, rz - 90.0);
			SetDynamicObjectMaterialText(objectrot[idobject], 0, inputtext,  120, "Ariel", 15, 1, COLOR_WHITE, 0 , 1);
			Streamer_Update(playerid);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0);
		}
		case D_TUNE_LIST: {
			if(!response) return 1;
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			switch(listitem) {
				case 0: perfomans_engine(playerid);
				case 1: perfomans_brake(playerid);
			}
		}
		case D_PERF_ENGINE: {
			if(!response) return D(playerid, D_TUNE_LIST, DSL, ""YELLOW"Perfomance Tune", ""YELLOW"1."W" Покращення двигуна\n"YELLOW"2."W" Покращення гальмів", "Далі", "Закрити");
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vPEngine][listitem]) {
				ErrorMessage(playerid, "Данная деталь уже встановлена");
				perfomans_engine(playerid);
				return 1 ;
			}			
			SetPVarInt(playerid, "performance_list", listitem);

			new price[5],seller[5];

			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				seller[listitem] = floatround(engine_name_price[listitem]/100*vip_status[PlayerInfo[playerid][pVips]][vip_perfonans]);
				price[listitem] = (engine_name_price[listitem]-seller[listitem]);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[listitem] = floatround(engine_name_price[listitem]/100*BonusInfo[act_perfomance]);
					price[listitem] = (engine_name_price[listitem]-seller[listitem]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[listitem] = floatround(engine_name_price[listitem]/100*BonusInfo[act_perfomance]);
					price[listitem] = (engine_name_price[listitem]-seller[listitem]);
				}
			    else price[listitem] = engine_name_price[listitem];
			}

			new string[144];
			format(string, sizeof(string), "\n\n"W"Ви дійсно желаете установить "YELLOW"%s"W"?\nВартість "ORANGE"$%d\n\n", engine_name[listitem], price[listitem]);
			D(playerid, D_PERF_ENGINE_2, DIALOG_STYLE_MSGBOX, ""YELLOW"Установка детали",string, "Купити", "Назад");
		}
		case D_PERF_ENGINE_2: {
			if(!response) {
				DeletePVar(playerid, "performance_list");
				perfomans_engine(playerid);
				return 1 ;
			}
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			new list_item = GetPVarInt(playerid, "performance_list");
			DeletePVar(playerid, "performance_list");

			new price[5],seller[5];
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				seller[list_item] = floatround(engine_name_price[list_item]/100*vip_status[PlayerInfo[playerid][pVips]][vip_perfonans]);
				price[list_item] = (engine_name_price[list_item]-seller[list_item]);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[list_item] = floatround(engine_name_price[list_item]/100*BonusInfo[act_perfomance]);
					price[list_item] = (engine_name_price[list_item]-seller[list_item]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[list_item] = floatround(engine_name_price[list_item]/100*BonusInfo[act_perfomance]);
					price[list_item] = (engine_name_price[list_item]-seller[list_item]);
				}
			    else price[list_item] = engine_name_price[list_item];
			}

			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetPlayerMoneyEx(playerid) < price[list_item]) {
				ErrorMessage(playerid, "У Вас недостаточно коштів");
				perfomans_engine(playerid);
				return 1 ;
			}
			new b_price = floatround(engine_name_price[list_item]/10);
			if(gBusiness[81][bizzProduct]-70 > 0) {
				gBusiness[81][bizzProduct] -= 70;
				bizz_pay(81,b_price);
			}
			GiveMoney(playerid, -price[list_item],"Покупка тюнинга (Perfomance)");
			VehicleInfo[vehicleid][vEngineBoost] += engine_name_boost[list_item];
			SendOk(playerid, "Вітаємо з покупкою улучшения. Для переключения стиля езды в режим спорт, використовуйте: "W"E (/mode)");
			VehicleInfo[vehicleid][vPEngine][list_item] = 1;
			perfomans_engine(playerid);
			new car = GetNearestCar(playerid);
			save_perf(playerid,car);
			//if(VehicleInfo[vehicleid][vEngineBoost] == 4) perf_engine_object(vehicleid);
		}
		case D_PERF_BRAKE: {
			if(!response) return D(playerid, D_TUNE_LIST, DSL, ""YELLOW"Perfomance Tune", ""YELLOW"1."W" Покращення двигуна\n"YELLOW"2."W" Покращення гальмів", "Далі", "Закрити");
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			if(VehicleInfo[GetPlayerVehicleID(playerid)][vPBrake][listitem]) {
				ErrorMessage(playerid, "Данная деталь уже встановлена");
				perfomans_brake(playerid);
				return 1 ;
			}			
			SetPVarInt(playerid, "performance_list", listitem);

			new price[5],seller[5];

			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				seller[listitem] = floatround(brake_name_price[listitem]/100*vip_status[PlayerInfo[playerid][pVips]][vip_perfonans]);
				price[listitem] = (brake_name_price[listitem]-seller[listitem]);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[listitem] = floatround(brake_name_price[listitem]/100*BonusInfo[act_perfomance]);
					price[listitem] = (brake_name_price[listitem]-seller[listitem]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[listitem] = floatround(brake_name_price[listitem]/100*BonusInfo[act_perfomance]);
					price[listitem] = (brake_name_price[listitem]-seller[listitem]);
				}
			    else price[listitem] = brake_name_price[listitem];
			}

			new string[144];
			format(string, sizeof(string), ""W"\n\nВи дійсно желаете установить "YELLOW"%s"W"?\nВартість "ORANGE"$%d", brake_name[listitem],price[listitem]);
			D(playerid,D_PERF_BRAKE_2, DSM, ""YELLOW"Установка детали", string, "Купити", "Назад");
		}
		case D_PERF_BRAKE_2: {
			if(!response) {
				DeletePVar(playerid, "performance_list");
				perfomans_brake(playerid);
				return 1 ;
			}
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
			new list_item = GetPVarInt (playerid, "performance_list");
			DeletePVar(playerid, "performance_list");
			new vehicleid = GetPlayerVehicleID(playerid);

			new price[5],seller[5];

			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				seller[list_item] = floatround(brake_name_price[list_item]/100*vip_status[PlayerInfo[playerid][pVips]][vip_perfonans]);
				price[list_item] = (brake_name_price[list_item]-seller[list_item]);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[list_item] = floatround(brake_name_price[list_item]/100*BonusInfo[act_perfomance]);
					price[list_item] = (brake_name_price[list_item]-seller[list_item]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[list_item] = floatround(brake_name_price[list_item]/100*BonusInfo[act_perfomance]);
					price[list_item] = (brake_name_price[list_item]-seller[list_item]);
				}
			    else price[list_item] = brake_name_price[list_item];
			}

			if(GetPlayerMoneyEx(playerid) < price[list_item]) {
				ErrorMessage(playerid, "У Вас недостаточно коштів");
				perfomans_brake(playerid);
				return 1 ;
			}
			new b_price = floatround(brake_name_price[list_item]/20);
			if(gBusiness[81][bizzProduct]-80 > 0) {
				gBusiness[81][bizzProduct] -= 80;
				bizz_pay(81,b_price);
			}
			GiveMoney(playerid, -price[list_item],"Покупка тюнинга (Perfomance)");
			VehicleInfo[vehicleid][vBrakeBoost] += brake_name_boost[list_item];
			SendOk(playerid, "Вітаємо з покупкою улучшения. Для переключения стиля езды в режим спорт, використовуйте: "W"E (/mode)");
			VehicleInfo[vehicleid][vPBrake][list_item] = 1;
			perfomans_brake(playerid);
			new car = GetNearestCar(playerid);
			save_perf(playerid,car);
		}
		case D_FIND: {
			if(!response) return 1;
			new frac;
			switch(PlayerInfo[playerid][pRank]) {
				case MINISTRE_NEWS: {
					switch(listitem) {
						case 0: frac = fLSNEWS;
						case 1: frac = fSFNEWS;
						case 2: frac = fLVNEWS;
					}
				}
				case MINISTRE_ARMY: {
					switch(listitem) {
						case 0: frac = fARMYSF;
						case 1: frac = fARMYLV;
					}
				}
				case MINISTRE_PD: {
					switch(listitem) {
						case 0: frac = fLSPD;
						case 1: frac = fSFPD;
						case 2: frac = fLVPD;
						case 3: frac = fFBI;
					}
				}
				case MINISTRE_MEDICS: {
					switch(listitem) {
						case 0: frac = fMEDICLS;
						case 1: frac = fMEDICSF;
						case 2: frac = fMEDICLV;
					}
				}
				default: return 1;
			}
			new ids = 0;
			new string[3000],str[128];
			strcat(str,"ID\tРанг\tТелефон\tДогани\tІм'я"W"\n\n");
			strcat(string,str);
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(PlayerInfo[i][pMember] != frac)continue;
				if(PlayerInfo[i][pRank] < 1 || PlayerInfo[i][pMember] < 1) continue;
				if(PlayerInfo[i][pAdmin]) continue;
				format(str, sizeof(str), "%d\t%d\t%d\t\t%d/3\t\t%s %s %s\n",i,PlayerInfo[i][pRank],PlayerInfo[i][pPhone],PlayerInfo[i][pfWarn],player_name[i],(start_work[i]) ? ("[На роботі]") : ("[Не на роботі]"),(TI[i][tAFK] > 3) ? (""YELLOW"[AFK]"W""):(""));
				strcat(string,str);
				ids++;
			}
			D(playerid, DIALOG_NONE, DSM, ""YELLOW"Члени організації онлайн", string, "Закрити", "");
			new strr[128];
			format(strr,sizeof(strr),"Всього гравців в організації: "ORANGE"%d",ids);
			SendOk(playerid,strr);
		}
		case D_SHOWALL_2: {
			if(!response) return 1;
			new frac;
			switch(PlayerInfo[playerid][pRank]) {
				case MINISTRE_NEWS: {
					switch(listitem) {
						case 0: frac = fLSNEWS;
						case 1: frac = fSFNEWS;
						case 2: frac = fLVNEWS;
					}
				}
				case MINISTRE_ARMY: {
					switch(listitem) {
						case 0: frac = fARMYSF;
						case 1: frac = fARMYLV;
					}
				}
				case MINISTRE_PD: {
					switch(listitem) {
						case 0: frac = fLSPD;
						case 1: frac = fSFPD;
						case 2: frac = fLVPD;
						case 3: frac = fFBI;
					}
				}
				case MINISTRE_MEDICS: {
					switch(listitem) {
						case 0: frac = fMEDICLS;
						case 1: frac = fMEDICSF;
						case 2: frac = fMEDICLV;
					}
				}
				default: return 1;
			}
			SALLROWS[playerid] = 0;
			new query[200];
			format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i' ORDER BY `pRank` LIMIT 0, 20", frac);
			mysql_pquery(connects, query, "showall_callback", "i", playerid);
		}
		case D_GANG_PAY: {
			if(!response) return DeletePVar(playerid, "prem_gang_money");
			new money = GetPVarInt(playerid, "prem_gang_money");
			DeletePVar(playerid, "prem_gang_money");
			
			new count = 0;
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(GetTeamID(i) != GetTeamID(playerid) || i == playerid) continue;
				count ++;
			}
			
			if(!count)
			    return ErrorMessage(playerid, "В банде нет онлайна!");
			if(FI[GetTeamID(playerid)][fBankCash] < count*money)
				return ErrorMessage(playerid, "В обшаке недостаточно коштів!");
				
			foreach(new i:Player) {
				if(!TI[i][tLogin]) continue;
				if(GetTeamID(i) != GetTeamID(playerid) || i == playerid) continue;
				GiveMoney(i, money,"получение премии в банде");
		
				new string[128];
				format(string, sizeof(string), ""W"%s {f6f6d9}Видал Вам премию в розмірі "ORANGE"$%d", player_name[playerid], money);
				SendOk(i,string);
			}
			FI[GetTeamID(playerid)][fBankCash] -= count*money;
			UpdateFraction(GetTeamID(playerid),"BankCash",FI[GetTeamID(playerid)][fBankCash]);
			
			SendOk(playerid, "Премиальные успішно выданы членам вашої банди");
		}
		case D_AUTONEWS: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_BUY, DSL, ""YELLOW"Оголошення | Купити", ""YELLOW"1."W" Дом\n"YELLOW"2."W" бізнес\n"YELLOW"3."W" Отель\n"YELLOW"4."W" Аэропорт\n"YELLOW"5."W" Автомобіль\n"YELLOW"6."W" Мотоцикл\n"YELLOW"7."W" Сим-Карту", "Вибрати", "Відміна");
				case 1: D(playerid, D_AUTONEWS_SELL, DSL, ""YELLOW"Оголошення | Продати", ""YELLOW"1."W" Дом\n"YELLOW"2."W" бізнес\n"YELLOW"3."W" Отель\n"YELLOW"4."W" Аэропорт\n"YELLOW"5."W" А/М\n"YELLOW"6."W" М/Ц\n"YELLOW"7."W" Сим-Карту", "Вибрати", "Відміна");
				case 2: D(playerid, D_AUTONEWS_CHANGE, DSL, ""YELLOW"Оголошення | Обменять", ""YELLOW"1."W" Дом\n"YELLOW"2."W" бізнес\n"YELLOW"3."W" Отель\n"YELLOW"4."W" Аэропорт\n"YELLOW"5."W" А/М\n"YELLOW"6."W" М/Ц\n"YELLOW"7."W" Сим-Карту", "Вибрати", "Відміна");
				case 3: D(playerid, D_AUTONEWS_SERVICES, DSL, ""YELLOW"Оголошення | Услуги", ""YELLOW"1."W" Объявить о собеседовании", "Вибрати", "Відміна");
			}
		}
		case D_AUTONEWS_SERVICES: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_SERVICES_2, DSL, ""YELLOW"Оголошення | Послуги | Співбесіда", ""YELLOW"1."W" Українська мафія\n"YELLOW"2."W" Японська мафія\n"YELLOW"3."W" Італійська мафія\n"YELLOW"4."W" The Ballas\n"YELLOW"5."W" The Vagos\n"YELLOW"6."W" The Grove\n"YELLOW"7."W" The Aztec\n"YELLOW"8."W" The Rifa\n"YELLOW"9."W" Таксопарк\n"YELLOW"10."W" Транспортная компания", "Вибрати", "Відміна");
			}
		}
		case D_AUTONEWS_SERVICES_2: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			switch(listitem) {
				case 0: format(gAdvert[slot][adText],100,"Проходит співбесіда в \"Українське посольство\". Більш докладно по телефону");
				case 1: format(gAdvert[slot][adText],100,"Іде набір официантів в \"Японський ресторан\". Докладніше по телефону");
				case 2: format(gAdvert[slot][adText],100,"Італьянська сувенирная лавка шукає співробітників. Докладніше по телефону");
				case 3: format(gAdvert[slot][adText],100,"Проходить набір в баскетбольну команду \"Ballas\". Бажаючим прибути на площадку");
				case 4: format(gAdvert[slot][adText],100,"Проходить набір в баскетбольну команду \"Vagos\". Бажаючим прибути на площадку");
				case 5: format(gAdvert[slot][adText],100,"Проходить набір в баскетбольну команду \"Grove\". Бажаючим прибути на площадку");
				case 6: format(gAdvert[slot][adText],100,"Проходить набір в баскетбольну команду \"Aztec\". Бажаючим прибути на площадку");
				case 7: format(gAdvert[slot][adText],100,"Проходить набір в баскетбольну команду \"Rifa\". Бажаючим прибути на площадку");
				case 8: format(gAdvert[slot][adText],100,"Проходить співбесіда в таксі. Докладніше по телефону");
				case 9: format(gAdvert[slot][adText],100,"Проходить співбесіда в транспортну компанію. Докладніше по телефону");
			}
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_BUY_HOUSE, DSL, ""YELLOW"Оголошення | Купити | Дом", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Эконом\n"YELLOW"3."W" Cредний\n"YELLOW"4."W" Элитный\n"YELLOW"5."W" Особняк", "Вибрати", "Відміна");
				case 1: D(playerid, D_AUTONEWS_BUY_BIZZ, DSL, ""YELLOW"Оголошення | Купити | бізнес", ""YELLOW"1."W" Пропустить\n"YELLOW"2. "W"Закусочная\n"YELLOW"3. "W"24/7\n"YELLOW"4. "W"Бар\n"YELLOW"5. "W"Клуб\n"YELLOW"6. "W"Магазин одежды\n"YELLOW"7. "W"АММО\n"YELLOW"8. "W"АЗС\n"YELLOW"9. "W"Автосалон\n"YELLOW"10. "W"Рыболовный бізнес\n"YELLOW"11. "W"Компьютерный клуб\n"YELLOW"12. "W"Таксопарк\n"YELLOW"13. "W"Ріелторська агенція\n"YELLOW"14. "W"Спорт-зал\n"YELLOW"15. "W"Транспортная компания\n"YELLOW"16. "W"Банк\n"YELLOW"17. "W"Рекламное агенство\n"YELLOW"18. "W"Магазин Аксесуарів\n"YELLOW"19. "W"Perfomance Tune", "Вибрати", "Відміна");
				case 2: D(playerid, D_AUTONEWS_BUY_HOTEL, DSI, ""YELLOW"Оголошення | Купити | Отель", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести отель:\n\n", "Ввід", "Відміна");
				case 3: D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""YELLOW"Оголошення | Купити | Аэропорт", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести аэропорт:\n\n", "Ввід", "Відміна");
				case 4: D(playerid, D_AUTONEWS_BUY_CAR, DSL, ""YELLOW"Оголошення | Купити | Автомобіль", ""YELLOW"1."W" Без тюнинга\n"YELLOW"2."W" FT\n"YELLOW"3."W" PT\n"YELLOW"4."W" FT and PT", "Вибрати", "Відміна");
				case 5: D(playerid, D_AUTONEWS_BUY_MOTO, DSL, ""YELLOW"Оголошення | Купити | Мотоцикл", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Bike\n"YELLOW"3."W" BMX\n"YELLOW"4."W" Fagio\n"YELLOW"5."W" FCR-900\n"YELLOW"6."W" Freeway\n"YELLOW"7."W" Mountain-Bike\n"YELLOW"8."W" NRG-500\n"YELLOW"9."W" PCJ-600\n"YELLOW"10."W" Quad\n"YELLOW"11."W" Sanchez\n"YELLOW"12."W" Wayfarer", "Вибрати", "Відміна");
				case 6: D(playerid, D_AUTONEWS_BUY_SIM, DSL, ""YELLOW"Оголошення | Купити | Сим-Карту", ""YELLOW"1."W" Без формата\n"YELLOW"2."W" Указать формат", "Вибрати", "Відміна");
			}
		}
		case D_AUTONEWS_SELL: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_SELL_HOUSE, DSL, ""YELLOW"Оголошення | Продати | Дом", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Эконом\n"YELLOW"3."W" Cредний\n"YELLOW"4."W" Элитный\n"YELLOW"5."W" Особняк", "Вибрати", "Відміна");
				case 1: D(playerid, D_AUTONEWS_SELL_BIZZ, DSL, ""YELLOW"Оголошення | Продати | бізнес", ""YELLOW"1."W" Пропустить\n"YELLOW"2. "W"Закусочная\n"YELLOW"3. "W"24/7\n"YELLOW"4. "W"Бар\n"YELLOW"5. "W"Клуб\n"YELLOW"6. "W"Магазин одежды\n"YELLOW"7. "W"АММО\n"YELLOW"8. "W"АЗС\n"YELLOW"9. "W"Автосалон\n"YELLOW"10. "W"Рыболовный бізнес\n"YELLOW"11. "W"Компьютерный клуб\n"YELLOW"12. "W"Таксопарк\n"YELLOW"13. "W"Ріелторська агенція\n"YELLOW"14. "W"Спорт-зал\n"YELLOW"15. "W"Транспортная компания\n"YELLOW"16. "W"Банк\n"YELLOW"17. "W"Рекламное агенство\n"YELLOW"18. "W"Магазин Аксесуарів\n"YELLOW"19. "W"Perfomance Tune", "Вибрати", "Відміна");
				case 2: D(playerid, D_AUTONEWS_SELL_HOTEL, DSL, ""YELLOW"Оголошення | Продати | Отель", "\n\n"W"Введіть вартість, за яку Ви хочете продати отель:\n\n", "Ввід", "Відміна");
				case 3: D(playerid, D_AUTONEWS_SELL_AIRPORT, DSL, ""YELLOW"Оголошення | Продати | Аэропорт", "\n\n"W"Введіть вартість, за яку Ви хочете продати аэропорт:\n\n", "Ввід", "Відміна");
				case 4: D(playerid, D_AUTONEWS_SELL_CAR, DSL, ""YELLOW"Оголошення | Продати | Автомобіль", ""YELLOW"1."W" Без тюнинга\n"YELLOW"2."W" FT\n"YELLOW"3."W" PT\n"YELLOW"4."W" FT and PT", "Вибрати", "Відміна");
				case 5: D(playerid, D_AUTONEWS_SELL_MOTO, DSL, ""YELLOW"Оголошення | Продати | Мотоцикл", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Bike\n"YELLOW"3."W" BMX\n"YELLOW"4."W" Fagio\n"YELLOW"5."W" FCR-900\n"YELLOW"6."W" Freeway\n"YELLOW"7."W" Mountain-Bike\n"YELLOW"8."W" NRG-500\n"YELLOW"9."W" PCJ-600\n"YELLOW"10."W" Quad\n"YELLOW"11."W" Sanchez\n"YELLOW"12."W" Wayfarer", "Вибрати", "Відміна");
				case 6: D(playerid, D_AUTONEWS_SELL_SIM, DSL, ""YELLOW"Оголошення | Продати | Сим-Карту", ""YELLOW"1."W" Без формата\n"YELLOW"2."W" Указать формат", "Вибрати", "Відміна");
			}
		}
		case D_AUTONEWS_CHANGE: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_CHANGE_HOUSE, DSL, ""YELLOW"Оголошення | Обменять | Дом", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Эконом\n"YELLOW"3."W" Cредний\n"YELLOW"4."W" Элитный\n"YELLOW"5."W" Особняк", "Вибрати", "Відміна");
				case 1: D(playerid, D_AUTONEWS_CHANGE_BIZZ, DSL, ""YELLOW"Оголошення | Обменять | бізнес", ""YELLOW"1."W" Пропустить\n"YELLOW"2. "W"Закусочная\n"YELLOW"3. "W"24/7\n"YELLOW"4. "W"Бар\n"YELLOW"5. "W"Клуб\n"YELLOW"6. "W"Магазин одежды\n"YELLOW"7. "W"АММО\n"YELLOW"8. "W"АЗС\n"YELLOW"9. "W"Автосалон\n"YELLOW"10. "W"Рыболовный бізнес\n"YELLOW"11. "W"Компьютерный клуб\n"YELLOW"12. "W"Таксопарк\n"YELLOW"13. "W"Ріелторська агенція\n"YELLOW"14. "W"Спорт-зал\n"YELLOW"15. "W"Транспортная компания\n"YELLOW"16. "W"Банк\n"YELLOW"17. "W"Рекламное агенство\n"YELLOW"18. "W"Магазин Аксесуарів\n"YELLOW"19. "W"Perfomance Tune", "Вибрати", "Відміна");
				case 2: {
					if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
					if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
					new slot = -1;
					for(new i;i<MAX_ADVERT_COUNT;i++) {
						if(!gAdvert[i][adBusy]) {slot = i; break;}
					}
					if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
					gAdvertCount ++;
					GiveMoney(playerid,-1000,"подача оголошення");

					format(gAdvert[slot][adText],100,"Обменяю отель",strval(inputtext));
					auto_news(slot,playerid);
				}
				case 3: {
					if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
					if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
					new slot = -1;
					for(new i;i<MAX_ADVERT_COUNT;i++) {
						if(!gAdvert[i][adBusy]) {slot = i; break;}
					}
					if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
					gAdvertCount ++;
					GiveMoney(playerid,-1000,"подача оголошення");

					format(gAdvert[slot][adText],100,"Обменяю аэропорт",strval(inputtext));
					auto_news(slot,playerid);
				}
				case 4: D(playerid, D_AUTONEWS_CHANGE_CAR, DSL, ""YELLOW"Оголошення | Обменять | Автомобіль", ""YELLOW"1."W" Без тюнинга\n"YELLOW"2."W" FT\n"YELLOW"3."W" PT\n"YELLOW"4."W" FT and PT", "Вибрати", "Відміна");
				case 5: D(playerid, D_AUTONEWS_CHANGE_MOTO, DSL, ""YELLOW"Оголошення | Обменять | Мотоцикл", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Bike\n"YELLOW"3."W" BMX\n"YELLOW"4."W" Fagio\n"YELLOW"5."W" FCR-900\n"YELLOW"6."W" Freeway\n"YELLOW"7."W" Mountain-Bike\n"YELLOW"8."W" NRG-500\n"YELLOW"9."W" PCJ-600\n"YELLOW"10."W" Quad\n"YELLOW"11."W" Sanchez\n"YELLOW"12."W" Wayfarer", "Вибрати", "Відміна");
				case 6: D(playerid, D_AUTONEWS_CHANGE_SIM, DSL, ""YELLOW"Оголошення | Обменять | Сим-Карту", ""YELLOW"1."W" Без формата\n"YELLOW"2."W" Указать формат", "Вибрати", "Відміна");
			}
		}
		case D_AUTONEWS_BUY_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_BUY_HOUSE_2, DSL, ""YELLOW"Оголошення | Купити | Дом", ""YELLOW"1."W" м. Лос Сантос\n"YELLOW"2."W" м. Сан Фиерро\n"YELLOW"3."W" м. Лас Вентурас\n"YELLOW"4."W" Гетто\n"YELLOW"5."W" Паломино-Крик\n"YELLOW"6."W" Диллимор\n"YELLOW"7."W" Блуберри\n"YELLOW"8."W" Монтгомери\n"YELLOW"9."W" Форт Карсон\n"YELLOW"10."W" Лас-Паясадас\n"YELLOW"11."W" Энджел-Пайн\n"YELLOW"12."W" Бэйсайд\n"YELLOW"13."W" Лас-Барранкас\n"YELLOW"14."W" Валле-Окультадо\n"YELLOW"15."W" Эль-Квебрадос", "Вибрати", "Відміна");
		}
		case D_AUTONEWS_BUY_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_class");
			SetPVarInt(playerid, "auto_house_city", listitem);
			D(playerid, D_AUTONEWS_BUY_HOUSE_3, DSI, ""YELLOW"Оголошення | Купити | Дом", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести дом:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_BUY_HOUSE_3: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_HOUSE_3, DSI, ""YELLOW"Оголошення | Купити | Дом", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести дом:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"м. Лос Сантос","м. Сан Фиерро","м. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
 				format(gAdvert[slot][adText],100,"Куплю дом в %s. Ціна: $%d",house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Куплю дом класса \"%s\" в %s. Ціна: $%d",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
		case D_AUTONEWS_SELL_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_SELL_HOUSE_2, DSL, ""YELLOW"Оголошення | Продати | Дом", ""YELLOW"1."W" м. Лос Сантос\n"YELLOW"2."W" м. Сан Фиерро\n"YELLOW"3."W" м. Лас Вентурас\n"YELLOW"4."W" Гетто\n"YELLOW"5."W" Паломино-Крик\n"YELLOW"6."W" Диллимор\n"YELLOW"7."W" Блуберри\n"YELLOW"8."W" Монтгомери\n"YELLOW"9."W" Форт Карсон\n"YELLOW"10."W" Лас-Паясадас\n"YELLOW"11."W" Энджел-Пайн\n"YELLOW"12."W" Бэйсайд\n"YELLOW"13."W" Лас-Барранкас\n"YELLOW"14."W" Валле-Окультадо\n"YELLOW"15."W" Эль-Квебрадос", "Вибрати", "Відміна");
		}
		case D_AUTONEWS_SELL_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_class");
			SetPVarInt(playerid, "auto_house_city", listitem);
			D(playerid, D_AUTONEWS_SELL_HOUSE_3, DSI, ""YELLOW"Оголошення | Продати | Дом", "\n\n"W"Введіть вартість, за яку Ви хочете продати дом:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_SELL_HOUSE_3: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_HOUSE_3, DSI, ""YELLOW"Оголошення | Продати | Дом", "\n\n"W"Введіть вартість, за яку Ви хочете продати дом:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"м. Лос Сантос","м. Сан Фиерро","м. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
 				format(gAdvert[slot][adText],100,"Продам дом в %s. Ціна: $%d",house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Продам дом класса \"%s\" в %s. Ціна: $%d",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
		case D_AUTONEWS_CHANGE_HOUSE: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_house_class", listitem);
			D(playerid, D_AUTONEWS_CHANGE_HOUSE_2, DSL, ""YELLOW"Оголошення | Обменять | Дом", ""YELLOW"1."W" м. Лос Сантос\n"YELLOW"2."W" м. Сан Фиерро\n"YELLOW"3."W" м. Лас Вентурас\n"YELLOW"4."W" Гетто\n"YELLOW"5."W" Паломино-Крик\n"YELLOW"6."W" Диллимор\n"YELLOW"7."W" Блуберри\n"YELLOW"8."W" Монтгомери\n"YELLOW"9."W" Форт Карсон\n"YELLOW"10."W" Лас-Паясадас\n"YELLOW"11."W" Энджел-Пайн\n"YELLOW"12."W" Бэйсайд\n"YELLOW"13."W" Лас-Барранкас\n"YELLOW"14."W" Валле-Окультадо\n"YELLOW"15."W" Эль-Квебрадос", "Вибрати", "Відміна");
		}
		case D_AUTONEWS_CHANGE_HOUSE_2: {
			if(!response) return DeletePVar(playerid, "auto_house_city");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new house_class[5][13] = {"no","эконом","средний","элитный","особняк"};
			new house_city[15][17] = {"м. Лос Сантос","м. Сан Фиерро","м. Лас Вентурас","опасном районе","Паломино-Крик","Диллимор","Блуберри","Монтгомери","Форт Карсон","Лас-Паясадас","Энджел-Пайн","Бэйсайд","Лас-Барранкас","Валле-Окультадо","Эль-Квебрадос"};

			if(!GetPVarInt(playerid, "auto_house_class")) {
 				format(gAdvert[slot][adText],100,"Обменяю дом в %s",house_city[GetPVarInt(playerid, "auto_house_city")]);
			}
			else format(gAdvert[slot][adText],100,"Обменяю дом класса %s в %s",house_class[GetPVarInt(playerid, "auto_house_class")],house_city[GetPVarInt(playerid, "auto_house_city")]);
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_house_city");
			DeletePVar(playerid, "auto_house_class");
		}
		case D_AUTONEWS_BUY_BIZZ: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_bizz_type", listitem);
			D(playerid, D_AUTONEWS_BUY_BIZZ_2, DSI, ""YELLOW"Оголошення | Купити | бізнес", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести бізнес:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_BUY_BIZZ_2: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_BIZZ_2, DSI, ""YELLOW"Оголошення | Купити | бізнес", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести бізнес:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new bizz_type[19][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бізнес","Компьютерный клуб","Таксопарк","Ріелторська агенція","Спорт-зал","Транспортная компания","Банк","Рекламное агенство","Магазин Аксесуарів","Perfomance Tune"};
			if(!GetPVarInt(playerid, "auto_bizz_type")) format(gAdvert[slot][adText],100,"Куплю прибыльное предприятие. Ціна: $%d",strval(inputtext));
			else format(gAdvert[slot][adText],100,"Куплю предприятие \"%s\". Ціна: $%d",bizz_type[GetPVarInt(playerid, "auto_bizz_type")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
		case D_AUTONEWS_SELL_BIZZ: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_bizz_type", listitem);
			D(playerid, D_AUTONEWS_SELL_BIZZ_2, DSI, ""YELLOW"Оголошення | Продати | бізнес", "\n\n"W"Введіть вартість, за яку Ви хочете продати бізнес:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_SELL_BIZZ_2: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_BIZZ_2, DSI, ""YELLOW"Оголошення | Продати | бізнес", "\n\n"W"Введіть вартість, за яку Ви хочете продати бізнес:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new bizz_type[19][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бізнес","Компьютерный клуб","Таксопарк","Ріелторська агенція","Спорт-зал","Транспортная компания","Банк","Рекламное агенство","Магазин Аксесуарів","Perfomance Tune"};
			if(!GetPVarInt(playerid, "auto_bizz_type")) format(gAdvert[slot][adText],100,"Продам предприятие. Ціна: $%d",strval(inputtext));
			else format(gAdvert[slot][adText],100,"Продам предприятие \"%s\". Ціна: $%d",bizz_type[GetPVarInt(playerid, "auto_bizz_type")],strval(inputtext));
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
		case D_AUTONEWS_CHANGE_BIZZ: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new bizz_type[19][28] = {"no","Закусочная","24/7","Бар","Клуб","Магазин одежды","АММО","АЗС","Автосалон","Рыболовный бізнес","Компьютерный клуб","Таксопарк","Ріелторська агенція","Спорт-зал","Транспортная компания","Банк","Рекламное агенство","Магазин Аксесуарів","Perfomance Tune"};
			if(!listitem) format(gAdvert[slot][adText],100,"Обменяю предприятие");
			else format(gAdvert[slot][adText],100,"Обменяю предприятие \"%s\"",bizz_type[listitem]);
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_bizz_type");
		}
		case D_AUTONEWS_BUY_HOTEL: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_HOTEL, DSI, ""YELLOW"Оголошення | Купити | Отель", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести отель:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			format(gAdvert[slot][adText],100,"Куплю отель. Ціна: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY_AIRPORT: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""YELLOW"Оголошення | Купити | Аэропорт", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести аэропорт:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			format(gAdvert[slot][adText],100,"Куплю аэропорт. Ціна: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_SELL_HOTEL: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_HOTEL, DSI, ""YELLOW"Оголошення | Продати | Отель", "\n\n"W"Введіть вартість, за яку Ви хочете продати отель:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			format(gAdvert[slot][adText],100,"Продам отель. Ціна: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_SELL_AIRPORT: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_AIRPORT, DSI, ""YELLOW"Оголошення | Продати | Аэропорт", "\n\n"W"Введіть вартість, за яку Ви хочете продати аэропорт:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			format(gAdvert[slot][adText],100,"Продам аэропорт. Ціна: $%d",strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_BUY_CAR_2, DSL, ""YELLOW"Оголошення | Купити | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Эконом\n"YELLOW"3."W" Средний\n"YELLOW"4."W" Спорт", "Вибрати", "Відміна");
		}
		case D_AUTONEWS_BUY_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""YELLOW"Оголошення | Купити | Автомобіль", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести автомобіль:\n\n", "Ввід", "Відміна");
				case 1: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""YELLOW"Оголошення | Купити | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Bravura\n"YELLOW"3."W" Broadway\n"YELLOW"4."W" Clover\n"YELLOW"5."W" Emperor\n"YELLOW"6."W" Glendale\n"YELLOW"7."W" Greenwood\n"YELLOW"8."W" Hermes\n"YELLOW"9."W" Hustler\n"YELLOW"10."W" Majestic\n"YELLOW"11."W" Manana\n"YELLOW"12."W" Oceanic\n"YELLOW"13."W" Perenniel\n"YELLOW"14."W" Picador\n"YELLOW"15."W" Regina\n"YELLOW"16."W" Sadler\n"YELLOW"17."W" Stallion\n"YELLOW"18."W" Tampa\n"YELLOW"19."W" Tornado\n"YELLOW"20."W" Voodoo", "Вибрати", "Відміна");
				case 2: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""YELLOW"Оголошення | Купити | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Admiral\n"YELLOW"3."W" Blist-Compact\n"YELLOW"4."W" Cadrona\n"YELLOW"5."W" Club\n"YELLOW"6."W" Feltzer\n"YELLOW"7."W" Huntley\n"YELLOW"8."W" Landstalker\n"YELLOW"9."W" Mesa\n"YELLOW"10."W" Phoenix\n"YELLOW"11."W" Premier\n"YELLOW"12."W" Rancher\n"YELLOW"13."W" Remington\n"YELLOW"14."W" Sabre\n"YELLOW"15."W" Savanna\n"YELLOW"16."W" Sentinel\n"YELLOW"17."W" Slamvan\n"YELLOW"18."W" Solair\n"YELLOW"19."W" Stafford\n"YELLOW"20."W" Tahoma\n"YELLOW"20."W" Uranus\n"YELLOW"20."W" Washington\n"YELLOW"20."W" Windsor\n"YELLOW"20."W" Yosemite", "Вибрати", "Відміна");
				case 3: D(playerid, D_AUTONEWS_BUY_CAR_3, DSL, ""YELLOW"Оголошення | Купити | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Alpha\n"YELLOW"3."W" Banshee\n"YELLOW"4."W" Buffalo\n"YELLOW"5."W" Bullet\n"YELLOW"6."W" Cheetah\n"YELLOW"7."W" Comet\n"YELLOW"8."W" Elegy\n"YELLOW"9."W" Euros\n"YELLOW"10."W" Hotknife\n"YELLOW"11."W" Hotring\n"YELLOW"12."W" Infernus\n"YELLOW"13."W" Jester\n"YELLOW"14."W" SandKing\n"YELLOW"15."W" Sultan\n"YELLOW"16."W" Super GT\n"YELLOW"17."W" Turismo\n"YELLOW"18."W" ZR-350", "Вибрати", "Відміна");
			}
		}
		case D_AUTONEWS_BUY_CAR_3: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class_2", listitem);
			D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""YELLOW"Оголошення | Купити | Автомобіль", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести автомобіль:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_BUY_CAR_4: {
			if(!response) return DeletePVar(playerid, "auto_bizz_type");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_CAR_4, DSI, ""YELLOW"Оголошення | Купити | Автомобіль", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести автомобіль:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Куплю автомобіль [%s]. Ціна: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Куплю автомобіль [%s] класса \"%s\". Ціна: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")],strval(inputtext));
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
					case 1: {
						new car_name[20][13] = {"No","Bravura","Broadway","Clover","Emperor","Glendale","Greenwood","Hermes","Hustler","Majestic","Manana","Oceanic","Perenniel","Picador","Regina","Sadler","Stallion","Tampa","Tornado","Voodoo"};
						format(gAdvert[slot][adText],100,"Куплю автомобіль марки \"%s\" [%s]. Ціна: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
					case 2: {
						new car_name[24][15] = {"No","Admiral","Blist-Compact","Cadrona","Club","Feltzer","Huntley","Landstalker","Mesa","Phoenix","Premier","Rancher","Remington","Sabre","Savanna","Sentinel","Slamvan","Solair","Stafford","Tahoma","Uranus","Washington","Windsor","Yosemite"};
						format(gAdvert[slot][adText],100,"Куплю автомобіль марки \"%s\" [%s]. Ціна: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
					case 3: {
						new car_name[18][13] = {"No","Alpha","Banshee","Buffalo","Bullet","Cheetah","Comet","Elegy","Euros","Hotknife","Hotring","Infernus","Jester","SandKing","Sultan","Super GT","Turismo","ZR-350"};
						format(gAdvert[slot][adText],100,"Куплю автомобіль марки \"%s\" [%s]. Ціна: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				}
			}
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_SELL_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_SELL_CAR_2, DSL, ""YELLOW"Оголошення | Продати | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Эконом\n"YELLOW"3."W" Средний\n"YELLOW"4."W" Спорт", "Вибрати", "Відміна");
		}
		case D_AUTONEWS_SELL_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
				case 0: D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""YELLOW"Оголошення | Продати | Автомобіль", "\n\n"W"Введіть вартість, за яку Ви хочете продати автомобіль:\n\n", "Ввід", "Відміна");
				case 1: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""YELLOW"Оголошення | Продати | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Bravura\n"YELLOW"3."W" Broadway\n"YELLOW"4."W" Clover\n"YELLOW"5."W" Emperor\n"YELLOW"6."W" Glendale\n"YELLOW"7."W" Greenwood\n"YELLOW"8."W" Hermes\n"YELLOW"9."W" Hustler\n"YELLOW"10."W" Majestic\n"YELLOW"11."W" Manana\n"YELLOW"12."W" Oceanic\n"YELLOW"13."W" Perenniel\n"YELLOW"14."W" Picador\n"YELLOW"15."W" Regina\n"YELLOW"16."W" Sadler\n"YELLOW"17."W" Stallion\n"YELLOW"18."W" Tampa\n"YELLOW"19."W" Tornado\n"YELLOW"20."W" Voodoo", "Вибрати", "Відміна");
				case 2: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""YELLOW"Оголошення | Продати | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Admiral\n"YELLOW"3."W" Blist-Compact\n"YELLOW"4."W" Cadrona\n"YELLOW"5."W" Club\n"YELLOW"6."W" Feltzer\n"YELLOW"7."W" Huntley\n"YELLOW"8."W" Landstalker\n"YELLOW"9."W" Mesa\n"YELLOW"10."W" Phoenix\n"YELLOW"11."W" Premier\n"YELLOW"12."W" Rancher\n"YELLOW"13."W" Remington\n"YELLOW"14."W" Sabre\n"YELLOW"15."W" Savanna\n"YELLOW"16."W" Sentinel\n"YELLOW"17."W" Slamvan\n"YELLOW"18."W" Solair\n"YELLOW"19."W" Stafford\n"YELLOW"20."W" Tahoma\n"YELLOW"20."W" Uranus\n"YELLOW"20."W" Washington\n"YELLOW"20."W" Windsor\n"YELLOW"20."W" Yosemite", "Вибрати", "Відміна");
				case 3: D(playerid, D_AUTONEWS_SELL_CAR_3, DSL, ""YELLOW"Оголошення | Продати | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Alpha\n"YELLOW"3."W" Banshee\n"YELLOW"4."W" Buffalo\n"YELLOW"5."W" Bullet\n"YELLOW"6."W" Cheetah\n"YELLOW"7."W" Comet\n"YELLOW"8."W" Elegy\n"YELLOW"9."W" Euros\n"YELLOW"10."W" Hotknife\n"YELLOW"11."W" Hotring\n"YELLOW"12."W" Infernus\n"YELLOW"13."W" Jester\n"YELLOW"14."W" SandKing\n"YELLOW"15."W" Sultan\n"YELLOW"16."W" Super GT\n"YELLOW"17."W" Turismo\n"YELLOW"18."W" ZR-350", "Вибрати", "Відміна");
			}
		}
		case D_AUTONEWS_SELL_CAR_3: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class_2", listitem);
			D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""YELLOW"Оголошення | Продати | Автомобіль", "\n\n"W"Введіть вартість, за яку Ви хочете продати автомобіль:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_SELL_CAR_4: {
			if(!response) return DeletePVar(playerid, "auto_car_class_2");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_CAR_4, DSI, ""YELLOW"Оголошення | Продати | Автомобіль", "\n\n"W"Введіть вартість, за яку Ви хочете продати автомобіль:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Продам автомобіль [%s]. Ціна: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Продам автомобіль [%s] класса \"%s\". Ціна: $%d",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")],strval(inputtext));
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
					case 1: {
						new car_name[20][13] = {"No","Bravura","Broadway","Clover","Emperor","Glendale","Greenwood","Hermes","Hustler","Majestic","Manana","Oceanic","Perenniel","Picador","Regina","Sadler","Stallion","Tampa","Tornado","Voodoo"};
						format(gAdvert[slot][adText],100,"Продам автомобіль марки \"%s\" [%s]. Ціна: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
					case 2: {
						new car_name[24][15] = {"No","Admiral","Blist-Compact","Cadrona","Club","Feltzer","Huntley","Landstalker","Mesa","Phoenix","Premier","Rancher","Remington","Sabre","Savanna","Sentinel","Slamvan","Solair","Stafford","Tahoma","Uranus","Washington","Windsor","Yosemite"};
						format(gAdvert[slot][adText],100,"Продам автомобіль марки \"%s\" [%s]. Ціна: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
					case 3: {
						new car_name[18][13] = {"No","Alpha","Banshee","Buffalo","Bullet","Cheetah","Comet","Elegy","Euros","Hotknife","Hotring","Infernus","Jester","SandKing","Sultan","Super GT","Turismo","ZR-350"};
						format(gAdvert[slot][adText],100,"Продам автомобіль марки \"%s\" [%s]. Ціна: $%d",car_name[GetPVarInt(playerid, "auto_car_class_2")],car_tune[GetPVarInt(playerid, "auto_car_tune")],strval(inputtext));
					}
				}
			}
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_CHANGE_CAR: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_tune", listitem);
			D(playerid, D_AUTONEWS_CHANGE_CAR_2, DSL, ""YELLOW"Оголошення | Обменять | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Эконом\n"YELLOW"3."W" Средний\n"YELLOW"4."W" Спорт", "Вибрати", "Відміна");
		}
		case D_AUTONEWS_CHANGE_CAR_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_car_class", listitem);
			switch(listitem) {
				case 0: {
					if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
					if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
					new slot = -1;
					for(new i;i<MAX_ADVERT_COUNT;i++) {
						if(!gAdvert[i][adBusy]) {slot = i; break;}
					}
					if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
					gAdvertCount ++;
					GiveMoney(playerid,-1000,"подача оголошення");

					new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
					format(gAdvert[slot][adText],100,"Обменяю автомобіль [%s]",car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					auto_news(slot,playerid);
				}
				case 1: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""YELLOW"Оголошення | Обменять | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Bravura\n"YELLOW"3."W" Broadway\n"YELLOW"4."W" Clover\n"YELLOW"5."W" Emperor\n"YELLOW"6."W" Glendale\n"YELLOW"7."W" Greenwood\n"YELLOW"8."W" Hermes\n"YELLOW"9."W" Hustler\n"YELLOW"10."W" Majestic\n"YELLOW"11."W" Manana\n"YELLOW"12."W" Oceanic\n"YELLOW"13."W" Perenniel\n"YELLOW"14."W" Picador\n"YELLOW"15."W" Regina\n"YELLOW"16."W" Sadler\n"YELLOW"17."W" Stallion\n"YELLOW"18."W" Tampa\n"YELLOW"19."W" Tornado\n"YELLOW"20."W" Voodoo", "Вибрати", "Відміна");
				case 2: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""YELLOW"Оголошення | Обменять | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Admiral\n"YELLOW"3."W" Blist-Compact\n"YELLOW"4."W" Cadrona\n"YELLOW"5."W" Club\n"YELLOW"6."W" Feltzer\n"YELLOW"7."W" Huntley\n"YELLOW"8."W" Landstalker\n"YELLOW"9."W" Mesa\n"YELLOW"10."W" Phoenix\n"YELLOW"11."W" Premier\n"YELLOW"12."W" Rancher\n"YELLOW"13."W" Remington\n"YELLOW"14."W" Sabre\n"YELLOW"15."W" Savanna\n"YELLOW"16."W" Sentinel\n"YELLOW"17."W" Slamvan\n"YELLOW"18."W" Solair\n"YELLOW"19."W" Stafford\n"YELLOW"20."W" Tahoma\n"YELLOW"20."W" Uranus\n"YELLOW"20."W" Washington\n"YELLOW"20."W" Windsor\n"YELLOW"20."W" Yosemite", "Вибрати", "Відміна");
				case 3: D(playerid, D_AUTONEWS_CHANGE_CAR_3, DSL, ""YELLOW"Оголошення | Обменять | Автомобіль", ""YELLOW"1."W" Пропустить\n"YELLOW"2."W" Alpha\n"YELLOW"3."W" Banshee\n"YELLOW"4."W" Buffalo\n"YELLOW"5."W" Bullet\n"YELLOW"6."W" Cheetah\n"YELLOW"7."W" Comet\n"YELLOW"8."W" Elegy\n"YELLOW"9."W" Euros\n"YELLOW"10."W" Hotknife\n"YELLOW"11."W" Hotring\n"YELLOW"12."W" Infernus\n"YELLOW"13."W" Jester\n"YELLOW"14."W" SandKing\n"YELLOW"15."W" Sultan\n"YELLOW"16."W" Super GT\n"YELLOW"17."W" Turismo\n"YELLOW"18."W" ZR-350", "Вибрати", "Відміна");
			}
		}
		case D_AUTONEWS_CHANGE_CAR_3: {
			if(!response) return DeletePVar(playerid, "auto_car_class_2");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new car_tune[4][8] = {"No Tune","FT","PT","FT/PT"};
			new car_class[4][8] = {"no","эконом","средний","спорт"};
			if(!GetPVarInt(playerid, "auto_car_class")) {
				format(gAdvert[slot][adText],100,"Обменяю автомобіль [%s]",car_tune[GetPVarInt(playerid, "auto_car_tune")]);
			}
			else if(!GetPVarInt(playerid, "auto_car_class_2")) {
				format(gAdvert[slot][adText],100,"Обменяю автомобіль [%s] класса \"%s\"",car_tune[GetPVarInt(playerid, "auto_car_tune")],car_class[GetPVarInt(playerid, "auto_car_class")]);
			}
			else {
				switch(GetPVarInt(playerid, "auto_car_class")) {
					case 1: {
						new car_name[20][13] = {"No","Bravura","Broadway","Clover","Emperor","Glendale","Greenwood","Hermes","Hustler","Majestic","Manana","Oceanic","Perenniel","Picador","Regina","Sadler","Stallion","Tampa","Tornado","Voodoo"};
						format(gAdvert[slot][adText],100,"Обменяю автомобіль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
					case 2: {
						new car_name[24][15] = {"No","Admiral","Blist-Compact","Cadrona","Club","Feltzer","Huntley","Landstalker","Mesa","Phoenix","Premier","Rancher","Remington","Sabre","Savanna","Sentinel","Slamvan","Solair","Stafford","Tahoma","Uranus","Washington","Windsor","Yosemite"};
						format(gAdvert[slot][adText],100,"Обменяю автомобіль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
					case 3: {
						new car_name[18][13] = {"No","Alpha","Banshee","Buffalo","Bullet","Cheetah","Comet","Elegy","Euros","Hotknife","Hotring","Infernus","Jester","SandKing","Sultan","Super GT","Turismo","ZR-350"};
						format(gAdvert[slot][adText],100,"Обменяю автомобіль марки \"%s\" [%s]",car_name[listitem],car_tune[GetPVarInt(playerid, "auto_car_tune")]);
					}
				}
			}
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				SetPVarString(playerid, "auto_sim_format", "NONE");
				D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""YELLOW"Оголошення | Купити | Сим-Карту", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести сим-карту:\n\n", "Ввід", "Відміна");
			}
			else D(playerid, D_AUTONEWS_BUY_SIM_2, DSI, ""YELLOW"Оголошення | Купити | Сим-Карту", "\n\n"W"Введіть формат номера сим-карти:\n"NO"*{f6f6d9} Примечание: формат сим-карти: ABCDEF (6 букв)\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_BUY_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_BUY_SIM, DSI, ""YELLOW"Оголошення | Купити | Сим-Карту", "\n\n"W"Введіть формат номера сим-карти:\n"NO"*{f6f6d9} Примечание: формат сим-карти: ABCDEF (6 букв)\n\n", "Ввід", "Відміна");
			SetPVarString(playerid, "auto_sim_format", inputtext);
			D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""YELLOW"Оголошення | Купити | Сим-Карту", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести сим-карту:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_BUY_SIM_3: {
			if(!response) return DeletePVar(playerid, "auto_sim_format");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_SIM_3, DSI, ""YELLOW"Оголошення | Купити | Сим-Карту", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести сим-карту:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new format_sim[7];
			GetPVarString(playerid,"auto_sim_format",format_sim,15);
			if(GetString(format_sim,"NONE")) {
				format(gAdvert[slot][adText],100,"Куплю сим-карту. Ціна: $%d",strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Куплю сим-карту формата \"%s\". Ціна: $%d",format_sim,strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_SELL_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				SetPVarString(playerid, "auto_sim_format", "NONE");
				D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""YELLOW"Оголошення | Продати | Сим-Карту", "\n\n"W"Введіть вартість, за яку Ви хочете продати сим-карту:\n\n", "Ввід", "Відміна");
			}
			else D(playerid, D_AUTONEWS_SELL_SIM_2, DSI, ""YELLOW"Оголошення | Продати | Сим-Карту", "\n\n"W"Введіть формат номера сим-карти:\n"NO"*{f6f6d9} Примечание: формат сим-карти: ABCDEF (6 букв)\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_SELL_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_SELL_SIM, DSI, ""YELLOW"Оголошення | Продати | Сим-Карту", "\n\n"W"Введіть формат номера сим-карти:\n"NO"*{f6f6d9} Примечание: формат сим-карти: ABCDEF (6 букв)\n\n", "Ввід", "Відміна");
			SetPVarString(playerid, "auto_sim_format", inputtext);
			D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""YELLOW"Оголошення | Продати | Сим-Карту", "\n\n"W"Введіть вартість, за яку Ви хочете продати сим-карту:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_SELL_SIM_3: {
			if(!response) return DeletePVar(playerid, "auto_sim_format");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_SIM_3, DSI, ""YELLOW"Оголошення | Продати | Сим-Карту", "\n\n"W"Введіть вартість, за яку Ви хочете продати сим-карту:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			new format_sim[7];
			GetPVarString(playerid,"auto_sim_format",format_sim,15);
			if(GetString(format_sim,"NONE")) {
				format(gAdvert[slot][adText],100,"Продам сим-карту. Ціна: $%d",strval(inputtext));
			}
			else format(gAdvert[slot][adText],100,"Продам сим-карту формата \"%s\". Ціна: $%d",format_sim,strval(inputtext));
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_CHANGE_SIM: {
			if(!response) return 1;
			if(listitem == 0) {
				if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
				if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
				new slot = -1;
				for(new i;i<MAX_ADVERT_COUNT;i++) {
					if(!gAdvert[i][adBusy]) {slot = i; break;}
				}
				if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
				gAdvertCount ++;
				GiveMoney(playerid,-1000,"подача оголошення");
				format(gAdvert[slot][adText],100,"Обменяю сим-карту");
				auto_news(slot,playerid);
			}
			else D(playerid, D_AUTONEWS_CHANGE_SIM_2, DSI, ""YELLOW"Оголошення | Обменять | Сим-Карту", "\n\n"W"Введіть формат номера сим-карти:\n"NO"*{f6f6d9} Примечание: формат сим-карти: ABCDEF (6 букв)\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_CHANGE_SIM_2: {
			if(!response) return 1;
			if(!strlen(inputtext) || strlen(inputtext) != 6 || !CheckSim(inputtext)) return D(playerid, D_AUTONEWS_CHANGE_SIM_2, DSI, ""YELLOW"Оголошення | Обменять | Сим-Карту", "\n\n"W"Введіть формат номера сим-карти:\n"NO"*{f6f6d9} Примечание: формат сим-карти: ABCDEF (6 букв)\n\n", "Ввід", "Відміна");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			format(gAdvert[slot][adText],100,"Обменяю сим-карту формата %s",inputtext);
			auto_news(slot,playerid);
		}
		case D_AUTONEWS_BUY_MOTO: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_moto_class", listitem);
			D(playerid, D_AUTONEWS_BUY_MOTO_2, DSI, ""YELLOW"Оголошення | Купити | Мотоцикл", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести мотоцикл:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_BUY_MOTO_2: {
			if(!response) return DeletePVar(playerid, "auto_moto_class");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_BUY_MOTO_2, DSI, ""YELLOW"Оголошення | Купити | Мотоцикл", "\n\n"W"Введіть вартість, за яку Ви хочете приобрести мотоцикл:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			if(!GetPVarInt(playerid, "auto_moto_class")) {
				format(gAdvert[slot][adText],100,"Куплю мотоцикл. Ціна: $%d",strval(inputtext));
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Куплю мотоцикл марки \"%s\". Ціна: $%d",car_name[GetPVarInt(playerid, "auto_moto_class")],strval(inputtext));
			}
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_moto_class");
		}
		case D_AUTONEWS_SELL_MOTO: {
			if(!response) return 1;
			SetPVarInt(playerid, "auto_moto_class", listitem);
			D(playerid, D_AUTONEWS_SELL_MOTO_2, DSI, ""YELLOW"Оголошення | Продати | Мотоцикл", "\n\n"W"Введіть вартість, за яку Ви хочете продати мотоцикл:\n\n", "Ввід", "Відміна");
		}
		case D_AUTONEWS_SELL_MOTO_2: {
			if(!response) return DeletePVar(playerid, "auto_moto_class");
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(strval(inputtext) < 1 || strval(inputtext) > 50000000) return D(playerid, D_AUTONEWS_SELL_MOTO_2, DSI, ""YELLOW"Оголошення | Продати | Мотоцикл", "\n\n"W"Введіть вартість, за яку Ви хочете продати мотоцикл:\n"NO"*{f6f6d9} От $1 и до $50.000.000\n\n", "Ввід", "Відміна");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			if(!GetPVarInt(playerid, "auto_moto_class")) {
				format(gAdvert[slot][adText],100,"Продам мотоцикл. Ціна: $%d",strval(inputtext));
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Продам мотоцикл марки \"%s\". Ціна: $%d",car_name[GetPVarInt(playerid, "auto_moto_class")],strval(inputtext));
			}
			auto_news(slot,playerid);
			DeletePVar(playerid, "auto_moto_class");
		}
		case D_AUTONEWS_CHANGE_MOTO: {
			if(!response) return 1;
			if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			if(PlayerInfo[playerid][pCash] < 1000) return ErrorMessage(playerid,"У вас не достаточно грошей. Для публікації об'яви необхідно мати $1000");
			new slot = -1;
			for(new i;i<MAX_ADVERT_COUNT;i++) {
				if(!gAdvert[i][adBusy]) {slot = i; break;}
			}
			if(slot == -1) return ErrorMessage(playerid,"На жаль, чергана оголошення занята, спробуйте пізніше");
			gAdvertCount ++;
			GiveMoney(playerid,-1000,"подача оголошення");

			if(!listitem) {
				format(gAdvert[slot][adText],100,"Обменяю мотоцикл");
			}
			else {
				new car_name[12][14] = {"No","Bike","BMX","Fagio","FCR-900","Freeway","Mountain-Bike","NRG-500","PCJ-600","Quad","Sanchez","Wayfarer"};
				format(gAdvert[slot][adText],100,"Обменяю мотоцикл марки \"%s\"",car_name[listitem]);
			}
			auto_news(slot,playerid);
		}
		case D_JOB_CLEAR: {
			if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PlayerInfo[playerid][pCash] < 500) {
				ErrorMessage(playerid, "У Вас не достаточно грошей для оренди авто для продажи їди");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда уборщик улиц");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
		    D(playerid, D_JOB_CLEAR_2, DSL,""YELLOW"Вибір маршрута",""YELLOW"1."W" Лос-Сантос №1\n"YELLOW"2."W" Лос-Сантос №2\n"YELLOW"3."W" Лос-Сантос №3", "Вибрати", "Відміна");
		}
		case D_JOB_CLEAR_2: {
		    if(!response) return D(playerid, D_JOB_CLEAR_2, DSL,""YELLOW"Вибір маршрута",""YELLOW"1."W" Лос-Сантос №1\n"YELLOW"2."W" Лос-Сантос №2\n"YELLOW"3."W" Лос-Сантос №3", "Вибрати", "Відміна");
		    SetPVarInt(playerid,"clear_id",GetPlayerVehicleID(playerid));
		    switch(listitem) {
			    case 0: SendOk(playerid,"Ви вибрали маршрут: Лос-Сантос №1. Розпочинайте прибирання");
				case 1: SendOk(playerid,"Ви вибрали маршрут: Лос-Сантос №2. Розпочинайте прибирання");
				case 2: SendOk(playerid,"Ви вибрали маршрут: Лос-Сантос №3. Розпочинайте прибирання");
			}
			SetPVarInt(playerid,"route_job_cleaner",listitem);
			SetNextJobClearCP(playerid,GetPVarInt(playerid, "route_job_cleaner"));
		}
		case D_JOB_CLEAR_3: {
		    if(response) return D(playerid, D_JOB_CLEAR_2, DSL,""YELLOW"Вибір маршрута",""YELLOW"1."W" Лос-Сантос №1\n"YELLOW"2."W" Лос-Сантос №2\n"YELLOW"3."W" Лос-Сантос №3" , "Вибрати", "Відміна");
		    SetVehicleToRespawn(GetPVarInt(playerid, "clear_id"));
		}
		case D_JOB_GAZON: {
		   	if(!response) return RemovePlayerFromVehicleAC(playerid);
			if(PlayerInfo[playerid][pCash] < 500) {
				ErrorMessage(playerid, "У Вас не достаточно грошей для оренди авто для продажі їжі");
				RemovePlayerFromVehicleAC(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			GiveMoney(playerid,-500,"аренда газонокосильщик");
			TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
			VehicleInfo[TI[playerid][tArendaCar]][vPlayer] = playerid;
		    SetPVarInt(playerid, "start_job_mower",1);
		    SendOk(playerid,"Ви почали робочий день. Виберіть зону для роботи");
		    pc_cmd_zonestatus(playerid);
		   	SetPVarInt(playerid, "veh_id_cleaner",GetPlayerVehicleID(playerid));
		}
		case D_JOB_GAZON_2: {
		    if(!response) return pc_cmd_zonestatus(playerid);
		    switch(listitem) {
		        case 0: {
		            SendOk(playerid, "Ви вибрали таксопарк Лос-Сантос.");
		            EnableGPSForPlayer(playerid,1161.606689, -1724.153809, 12.916358);
		        }
		        case 1: {
		            SendOk(playerid, "Ви вибрали пляж Verona Beach.");
		            EnableGPSForPlayer(playerid,484.773346, -1783.324585, 5.595574);
		        }
		        case 2: {
		            SendOk(playerid, "Ви вибрали білий дім.");
		            EnableGPSForPlayer(playerid,1140.843628, -2078.608398, 68.357811);
		        }
		        case 3: {
		            SendOk(playerid, "Ви вибрали лікарню Лос-Сантос.");
		            EnableGPSForPlayer(playerid,1220.061279, -1295.611450, 12.820630);
		        }
		        case 4: {
		            SendOk(playerid, "Ви вибрали мерію Лос-Сантос.");
		            EnableGPSForPlayer(playerid,1484.405396, -1701.025513, 12.723542);
		        }
		        case 5: {
		            SendOk(playerid, "Ви вибрали Глен-парк №1.");
		            EnableGPSForPlayer(playerid,1867.358276, -1246.167114, 13.221643);
		        }
		        case 6: {
		            SendOk(playerid, "Ви вибрали Глен-парк №2.");
		            EnableGPSForPlayer(playerid, 2052.105957, -1248.333984, 23.101965);
		        }
			}
		}
		case D_DONATE_BANK_2: {
			if(!response) return 1;
			SetPVarInt(playerid, "donate_bank", listitem);
			D(playerid,D_DONATE_BANK_3,DSL, ""YELLOW"Банк", ""YELLOW"1."W" Банковские услуги\n"YELLOW"2."W" Недвижимость", "Вибрати", "Назад");
		}
		case D_DONATE_BANK_3: {
			if(!response) return 1;
			switch(listitem) {
				case 0: D(playerid,D_BANK,DSL, ""YELLOW"Банк", "Активные рахунку\nВідкрити новый рахунок", "Вибрати", "Назад");
				case 1: D(playerid,D_BANK_OPLATA,DSL,""YELLOW"Оплата недвижимости",""YELLOW"1."W" Дом\n"YELLOW"2."W" бізнес\n"YELLOW"3."W" Отель\n"YELLOW"4."W" Аэропорт","Вибрати","Відміна");
			}
		}
	}
	while(strfind(inputtext, "%s",true)!=-1) {
		strdel(inputtext,strfind(inputtext, "%s",true),strfind(inputtext, "%s",true)+2);
	}
	return true;
}//диалоги
public OnPlayerEnterDynamicCP(playerid, checkpointid) {
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) return 1;
	if(checkpointid == gPlayerProdCP[playerid] && GetPVarInt(playerid,"prod_id") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 403 && !GetVehicleTrailer(GetPlayerVehicleID(playerid))) return ErrorMessage(playerid,"У вас немає цистерны с топливом");
		new string[286];
		new bizid = GetPVarInt(playerid,"prod_id")-1;
		format(string, sizeof(string), ""W"Бізнес: "YELLOW"%s\n\n\
										"W"Требуется продуктов: "O"%d\n\
										"W"Доступно для разгрузки: "O"%d\n\
										"W"Введіть кількість продуктов для продажи:"
										,gBusiness[bizid][bizzName],gBusiness[bizid][bizzProdOrder],GetPVarInt(playerid,"count_prod"));
		return D(playerid,dProdSell,DSI, ""YELLOW"Доставка",string,"Продати","Відміна");
	}
	if(RingCP[0] <= checkpointid <= RingCP[1]) {
		if(RingInfo[0][rgPlayer][0] != playerid && RingInfo[0][rgPlayer][1] != playerid) return ErrorMessage(playerid,"В данный момент не Ваша очередь");
		//if(RingInfo[0][rgTime]) return ErrorMessage(playerid, "В данный момент недоступно");
		if(IsPlayerInDynamicCP(RingInfo[0][rgPlayer][1], RingCP[1]) || IsPlayerInDynamicCP(RingInfo[0][rgPlayer][0], RingCP[0])) return ErrorMessage(playerid, "Данное место для Вашого соперника");
		else SendOk(playerid, "Очікуйте супротивника");
		return true;
	}
	if(checkpointid == theftCheck[playerid][0]) { //угон
		if(theftCheck[playerid][1] == 1){
			DestroyDynamicCP(theftCheck[playerid][0]);
			if(theftIDveh[playerid][1] != 1010)	SendOk(theftIDveh[playerid][1],"У вашої машини запрацювала сигналізація!");	
			TogglePlayerControllable(playerid, false);
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			JobTempProcess[playerid] = 15;
			RandomYareNforJOBS(playerid);
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
		
		}
		else if(theftCheck[playerid][1] == 4){
			DestroyDynamicCP(theftCheck[playerid][0]);
			SendOk(playerid,"Щоб взломать дом введіть /theftrob");
		}
		else {
			switch(GetPlayerState(playerid)){
				case PLAYER_STATE_ONFOOT:{
					SendClientMessage(playerid,  COLOR_YELLOW, "SMS: Где машина? « Отправитель: Jackson_Young [т. 1218181 ]");
				}	
				case PLAYER_STATE_DRIVER:{
					if(GetPlayerVehicleID(playerid) != theftIDveh[playerid][0]) return SendClientMessage(playerid,  COLOR_YELLOW, "SMS: Ты привез не ту машину! « Отправитель: Jackson_Young [т. 1218181]");
					theftCheck[playerid][1] = 3;
					DestroyDynamicCP(theftCheck[playerid][0]);
					A_DestroyVehicle(theftIDveh[playerid][0]);
					theftIDveh[playerid][0] = INVALID_VEHICLE_ID;
					SendOk(playerid,"Отлично, получай свои гроші и вали от сюда, мы не хотим проблем с копами");
					thefttime[playerid] = 0;
					PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
					theftCheck[playerid][1] = 3;
					PlayerInfo[playerid][ptheftExp]++;
					PlayerInfo[playerid][ptheftTime] = gettime()+GetLimitTheeft(playerid);
					UpdatePlayerData(playerid,"theftTime",PlayerInfo[playerid][ptheftTime]);
					UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
					GiveMoney(playerid, GetSalaryTheeft(playerid), "Получение с помощью угона");

					if(PlayerInfo[playerid][pMember]) add_gang_points(PlayerInfo[playerid][pMember],1);

					if(TheftSkillMax[PlayerInfo[playerid][ptheftSkill]] == PlayerInfo[playerid][ptheftExp] && PlayerInfo[playerid][ptheftSkill] != 25){
						PlayerInfo[playerid][ptheftSkill] ++, UpdatePlayerData(playerid,"theftSkill",PlayerInfo[playerid][ptheftSkill]);
						PlayerInfo[playerid][ptheftExp] = 0, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
						SendOk(playerid,"Ваш навык автоугонщика повысился. Перегляд своих навыков /theftprogress");
					} 
				}
				default: SendClientMessage(playerid,  COLOR_YELLOW, "SMS: Ну и где машина? « Отправитель: Jackson_Young [т. 1218181]");
			}

		}
	}
	if(checkpointid == TI[playerid][tRaceCP]) {
		srace_end(playerid,0);
	}
	return 1;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid) {
	return true;
}
public OnPlayerEnterDynamicArea(playerid, areaid) {
	if(!TI[playerid][tLogin]) return 1;
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) return 1;
	if(GetPVarInt(playerid,"ChangingSkin")) {
		A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
		cancel_skin(playerid);
	}
    new pstate = GetPlayerState(playerid);
	if(areaid >= TeleportPickup[0] && areaid <= TeleportPickup[sizeof(gTeleportsToD)-1] && pstate == PLAYER_STATE_ONFOOT) {
		new tp = areaid - TeleportPickup[0];
		switch(tp) {
			case 3,5,7: {
				if(PlayerInfo[playerid][pHospital]) return ErrorMessage(playerid, "Ви не прошли полный курс лечения");
				TI[playerid][tHeal] = false;
			}
			case 8: {
				if(PlayerInfo[playerid][pMember] != fFBI && !TI[playerid][tEnter][fFBI]) return ErrorMessage(playerid,"Ви не знаходитесь в данной організації/У вас немає пропуска");
				return D(playerid,D_FBI_LIFT,DSL,""YELLOW"Лифт","1 этаж\n2 этаж\nКрыша","Вибрати","Відміна");
			}
			case 10,12,14: {
				if(!IsAMedic(playerid)) return ErrorMessage(playerid,"Доступно для работников МЧС");
				if(PlayerInfo[playerid][pHospital]) return ErrorMessage(playerid, "Ви не прошли полный курс лечения");
				TI[playerid][tHeal] = false;
			}
			case 40: {
				if(PlayerInfo[playerid][pMember] != fFBI && !TI[playerid][tEnter][fFBI]) return ErrorMessage(playerid,"Ви не знаходитесь в данной організації/У вас немає пропуска");
				return D(playerid,D_FBI_LIFT_1,DSL,""YELLOW"Лифт","2 этаж\n3 этаж\nКрыша","Вибрати","Відміна");
			}
			case 41: return D(playerid,D_FBI_LIFT_2,DSL,""YELLOW"Лифт","1 этаж\n3 этаж\nКрыша","Вибрати","Відміна");
			case 58: if(PlayerInfo[playerid][pMember] != fBALLAS && !TI[playerid][tEnter][fBALLAS]) return ErrorMessage(playerid,"Ви не знаходитесь в данной організації/У вас немає пропуска");
			case 60: if(PlayerInfo[playerid][pMember] != fVAGOS && !TI[playerid][tEnter][fVAGOS]) return ErrorMessage(playerid,"Ви не знаходитесь в данной організації/У вас немає пропуска");
			case 62: if(PlayerInfo[playerid][pMember] != fGROVE && !TI[playerid][tEnter][fGROVE]) return ErrorMessage(playerid,"Ви не знаходитесь в данной організації/У вас немає пропуска");
			case 64: if(PlayerInfo[playerid][pMember] != fAZTEC && !TI[playerid][tEnter][fAZTEC]) return ErrorMessage(playerid,"Ви не знаходитесь в данной організації/У вас немає пропуска");
			case 66: if(PlayerInfo[playerid][pMember] != fRIFA && !TI[playerid][tEnter][fRIFA]) return ErrorMessage(playerid,"Ви не знаходитесь в данной організації/У вас немає пропуска");
			case 68: {
				TI[playerid][tClothesWork][0] = 1;
				TI[playerid][tClothesWork][1] = 1;
				SendOk(playerid,"Можете приступать к работе");
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawShow(playerid,work_td[playerid][i]);
				}
				PlayerTextDrawSetString(playerid,work_td[playerid][1],"MONEY:_$0");
			}
			case 69: {
				TI[playerid][tClothesWork][0] = 0;
				TI[playerid][tClothesWork][1] = 0;
				if(GetPVarInt(playerid,"zp_clothes")) PlayerInfo[playerid][pSalary] += GetPVarInt(playerid,"zp_clothes"),SendClientMessage(playerid,CGOLD,"Гроші будуть зачисдені на вашу банківську карту під час зарплати (PayDay)");
				DeletePVar(playerid,"zp_clothes");
				UpdatePlayerData(playerid,"salary",PlayerInfo[playerid][pSalary]);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
				for(new i = 0;i < 4;i++) {
					PlayerTextDrawHide(playerid,work_td[playerid][i]);
				}
			}
			case 75: {
				if(player_to_race_lv[playerid]) return ErrorMessage(playerid,"Участнику гонок запрещено покидать помещение");
				if(player_to_golod[playerid]) return ErrorMessage(playerid,"Участнику голодных игр запрещено покидать помещение");
			}
			case 76: {
				if(PlayerInfo[playerid][pLevel] < 3) return ErrorMessage(playerid,"Вход в казино возможен с 3 рівня");
				if(!casino) return ErrorMessage(playerid, "Вход в казино временно закрыт");
			}
			case 77: if(GetPVarInt(playerid,"krup")) return ErrorMessage(playerid, "Необхідно закінчити роботу круп'є");
			case 78,80: if(!IsAArm(playerid)) return ErrorMessage(playerid,"У вас немає доступу");
			case 92,94: if(!IsAArm(playerid) || !start_work[playerid]) return ErrorMessage(playerid,"У Вас немає доступу");
			case 93,95: if(PlayerInfo[playerid][pHospital]) return ErrorMessage(playerid, "Ви не пройшли повний курс лікування");
			case 96..99: if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid,"У Вас немає доступа");
			case 28,32,36: if(!IsACop(playerid)) return ErrorMessage(playerid,"У Вас немає доступа");
			case 84: if(PlayerInfo[playerid][pMember] != fLCN && TI[playerid][tMasked] != fLCN) return ErrorMessage(playerid,"У Вас немає доступа");
			case 108: if(PlayerInfo[playerid][pMember] != fYAKUZA && TI[playerid][tMasked] != fYAKUZA) return ErrorMessage(playerid,"У вас немає доступу");
			case 110: if(PlayerInfo[playerid][pMember] != fRM && TI[playerid][tMasked] != fRM) return ErrorMessage(playerid,"У вас немає доступу");
			case 112,114,116: {
				//return ErrorMessage(playerid,"В разработке. Уже скоро...");
				if(!TI[playerid][tTir]) return ErrorMessage(playerid,"У вас немає пропуска в тир. Приобрести пропуск можно на кассе");
			}
			case 113,115,117,119,121,123,125,127,129,131,133,135: { //тир //выход
				if(ShootingStart[playerid]) return ErrorMessage(playerid,"Ви не закончили тренування");
			}
		}
		if(tp > 1 && gTeleportsToD[tp][tpExitInt] != 6 && tp != 95 && tp != 89 && tp != 17 && tp != 113 && tp != 115 && tp != 117 && tp != 112 && tp != 114 && tp != 116) OnPlayerUpdateLoadingMode(playerid);
		SetPlayerFacingAngle(playerid, gTeleportsToD[tp][tpExitPos_A]);
		SetPlayerPosAC(playerid, gTeleportsToD[tp][tpExitPos_X], gTeleportsToD[tp][tpExitPos_Y], gTeleportsToD[tp][tpExitPos_Z],gTeleportsToD[tp][tpExitWorld],gTeleportsToD[tp][tpExitInt]);
		SetCameraBehindPlayer(playerid);
		return true;
	}
	if(areaid >= gPickID[0] && areaid <= gPickID[PICKUPS_COUNT-1] && pstate == PLAYER_STATE_ONFOOT) { // ПИКАПЫ
		new pick = areaid - gPickID[0];
		switch(pick) {
			case 0: {
				static const f_str[] =
					""GREEN"1.Общие положения:"W"\n\
1.1 Участники дорожного движения обязаны знать и неукоснительно выполнять требования этих Правил,\n\
\tа также быть взаимно вежливыми.\n\
1.2 Обгон транспортного коштіва разрешен только с левой стороны, при этом водитель обязан убедиться,\n\
\tчто встречная полоса свободна на достаточном для обгона расстоянии.\n\
1.3 Управлять транспортным засібм имеет право особа достигшая возраста 18 років при этом имея вод.удостоверение.\n\
1.4 При ДТП водители обязаны немедленно остановиться на месте случившегося, вызвать и дождаться полицию.\n\
1.5 Ближний свет фар требуется включать в любое время суток.\n\
1.6 Гос. Номера должны быть всегда видимыми спереди и сзади.\n\n\
"GREEN"2.швидкість движения:"W"\n\
2.1 В пределах города разрешается движение транспортных коштів со швидкістью не более 60 км/ч\n\
2.2 За пределами города разрешается движение транспортных коштів со швидкістью не более 120 км/ч\n\n\
"GREEN"3. Остановка и стоянка:"W"\n\
3.1 Остановка на магистрали разрешена только на спец. площадках для стоянки\n\n\
"GREEN"4. Спец. Сигналы:"W"\n\
4.1 В случае приближения транспортного коштіва с включенным проблесковым маячком и (или)\n\
\tспециальным звуковым сигналом водители других транспортных коштів,\n\
\tкоторые могут создавать ему препятствие для движения, обязаны уступить ему дорогу.";
				new string[sizeof(f_str)];
				format(string,sizeof(string),"%s",f_str);
				D(playerid,DIALOG_NONE,DSM, ""YELLOW"Правила Дорожного Движения",string,"Закрити","");
			}
			case 1: D(playerid,D_JOB,DSL,""YELLOW"Працевлаштування",""W"1. Автобусник\t\t\t\t| "YELLOW"2 лвл\n"W"2. Механік\t\t\t\t| "YELLOW"3 лвл\n"W"3. Развозчик їжі\t\t\t| "YELLOW"3 лвл\n"W"4. Развозчик продуктів/пального\t| "YELLOW"4 лвл\n"W"5. Мойщик доріг\t\t\t| "YELLOW"4 лвл\n"W"6. Газонокосильщик\t\t\t| "YELLOW"5 лвл", "Вибрати", "Закрити");
			case 2: {
				new price_car,price_gun,price_boat,price_air;
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller_car = floatround(500/100*BonusInfo[act_buylic]);
					new seller_air = floatround(15000/100*BonusInfo[act_buylic]);
					new seller_boat = floatround(10000/100*BonusInfo[act_buylic]);
					new seller_gun = floatround(20000/100*BonusInfo[act_buylic]);
					price_car = (500-seller_car);
					price_air = (15000-seller_air);
					price_boat = (10000-seller_boat);
					price_gun = (20000-seller_gun);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller_car = floatround(500/100*BonusInfo[act_buylic]);
					new seller_air = floatround(15000/100*BonusInfo[act_buylic]);
					new seller_boat = floatround(10000/100*BonusInfo[act_buylic]);
					new seller_gun = floatround(20000/100*BonusInfo[act_buylic]);
					price_car = (500-seller_car);
					price_air = (15000-seller_air);
					price_boat = (10000-seller_boat);
					price_gun = (20000-seller_gun);
				}
			    else {
					price_car = 500;
					price_air = 15000;
					price_boat = 10000;
					price_gun = 20000;
			    }
				new string[512];
				format(string,sizeof(string),""YELLOW"1."W" Водійське посвідчення [%s] - "ORANGE"$%d\n"YELLOW"2."W" Ліцензія на виліт [%s] - "ORANGE"$%d\n"YELLOW"3."W" Ліцензія на водний транспорт [%s] - "ORANGE"$%d\n"YELLOW"4."W" Ліцензія на зброю [%s] - "ORANGE"$%d",lic[playerid][0] == 1 ? (""YELLOW"Є"W""):("{f6f6d9}Відсутня"W""),price_car,lic[playerid][1] == 1 ? (""YELLOW"Є"W""):("{f6f6d9}Відсутня"W""),price_air,lic[playerid][2] == 1 ? (""YELLOW"Є"W""):("{f6f6d9}Відсутня"W""),price_boat,lic[playerid][3] == 1 ? (""YELLOW"Є"W""):("{f6f6d9}Відсутня"W""),price_gun);
				D(playerid,D_LICENSES,DSL,""YELLOW"Покупка ліцензій",string, "Купити", "Відміна");
			}
			case 3: {
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				new otelid = GetPVarInt(playerid,"selectedhotel");
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid,gHotels[otelid][hotelAreaX],gHotels[otelid][hotelAreaY],gHotels[otelid][hotelAreaZ],0,0);
				SetCameraBehindPlayer(playerid);
			}
			case 4: {
				new hotel = -1;
				switch(GetPlayerVirtualWorld(playerid)) {
					case 0: hotel = 1;
					case 1: hotel = 2;
					case 2: hotel = 3;
					case 3: hotel = 4;
					default: hotel = -1;
				}
				if(hotel == PlayerInfo[playerid][pHotel]) return D(playerid,D_HOTEL,DSL,""YELLOW"Ресепшн",""YELLOW"1."W" Список номерів\n"YELLOW"2."W" Керування отелем","Вибрати","Відміна");
				else ShowHotelRooms(playerid);
			}
			case 5: {
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				D(playerid,D_HOTEL_LIFT_1,DSL,""YELLOW"Лифт","2 этаж\n3 этаж\n4 этаж\n5 этаж\n6 этаж\n7 этаж","Перейти","Відміна");
			}
			case 6: {
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				D(playerid,D_HOTEL_LIFT_2,DSL,""YELLOW"Лифт","Ресепшн\n2 этаж\n3 этаж\n4 этаж\n5 этаж\n6 этаж\n7 этаж","Перейти","Відміна");
			}
			case 7: {
				if(PlayerInfo[playerid][pMedCard]) return ErrorMessage(playerid,"У Вас уже есть мед. карта");
				new price;
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(1000/100*BonusInfo[act_medcard]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів. Вартість мед.карти - $1.000");
					price = (1000-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(1000/100*BonusInfo[act_medcard]);
					if(GetPlayerMoneyEx(playerid) < (1000-seller)) return ErrorMessage(playerid,"У Вас недостаточно коштів. Вартість мед.карти - $1.000");
					price = (1000-seller);
				}
			    else price = 1000;
			    new string[128];
			    format(string,sizeof(string),""W"Вартість медицинської карти - "GREEN"$1.000\n"W"Ви дійсно хочете получить мед. карту?",price);
				D(playerid,D_MEDCARD,DSM, ""YELLOW"Медична карта",string,"Получить","Відміна");
			}
			case 8: {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необхідно закінчити робочий день в організації");

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(50000/100*vip_status[PlayerInfo[playerid][pVips]][vip_changesex]);
					if(GetPlayerMoneyEx(playerid) < (50000-seller)) return ErrorMessage(playerid,"У Вас недостаточно грошей для операции. Вартість операции - $50.000");
					price = (50000-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(50000/100*BonusInfo[act_changesex]);
						if(GetPlayerMoneyEx(playerid) < (50000-seller)) return ErrorMessage(playerid,"У Вас недостаточно грошей для операции. Вартість операции - $50.000");
						price = (50000-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(50000/100*BonusInfo[act_changesex]);
						if(GetPlayerMoneyEx(playerid) < (50000-seller)) return ErrorMessage(playerid,"У Вас недостаточно грошей для операции. Вартість операции - $50.000");
						price = (50000-seller);
					}
				    else price = 50000;
				}
				
				static const f_str[] = ""W"Трансгендерный переход может включать в себя социализацию в новой гендерной роли,\n\
медицинские процедуры по коррекции пола,\n\
смену паспортного имени и юридического пола\n\
"W"Вартість хирургического вмешательства - "GREEN"$%d\n\n\
"NO"Примечание: при смене пола будет изменен Ваш скин";
				new string[sizeof(f_str) +1 + (-2 + 5)];
				format(string,sizeof(string),f_str,price);
				D(playerid,D_MEDSEX,DSM,""YELLOW"Трансгендерный переход", string ,"Операция","Відміна");
			}
			case 9: {
				if(start_work[playerid]) return ErrorMessage(playerid,"Необхідно закінчити робочий день в організації");
				new string[105];
				format(string,sizeof(string),""W"Ви хочете "ORANGE"%s"W" роботу крупье?", (GetPVarInt(playerid,"krup")) ? ("закінчити") : ("Почати"));
				D(playerid,D_CASINO,DSM, ""YELLOW"Казино",string,"Так","Ні");
			}
			case 10,11: {
				static const f_str[] =
					""GREEN"1. Про проект:"W"\n\
"FullServName" - це місце де тебе завжди раді бачити. \n\
Тільки у нас ви можете поринути в захоплюючий світ легендарної гри GTA San Andreas в жанрі Role Play. \n\
Поринувшись в ігровий процесс на нашому сервері, ви зможете спробувати себе в різних ігрових ролях, \n\
влаштуватися в поліцію, брати участь в виборах, стати мером або вообще президентом та керувати штатом, \n\
піти проти закону та стати лідером небезпечного групування та завоювати всі территорії небезпечних районів в Лос-Сантосі\n\
або стати крутим мафіози, створити імперію оборота наркотиків в штаті та взяти під контроль своєї мафії всі бізнеси штата!\n\
Тільки у нас ви отримаєте якісний ігровий мод, приємну атмосферу ігри максимально приближеної до реальності.\n\
Вас чекають захоплюючі знайомства на сервері, будь-який гравець надалі може стати вашим другом\n\
на якого ви завжди зможете покластися - все це чекає на вас на ігровому сервері "FullServName".\n\n\
"GREEN"захист аккаунта:"W"\n\
Шановний гравець, пам'ятайте, що обліковий запис - це Ваша власність і ніхто інший за неї не відповідає!\n\
Адміністрація ніколи не попросить пароль від Вашого облікового запису, ключ і т.д. ніколи не повідомляйте свої дані про обліковий запис третім особам.\n\
Не користуйтеся автоматичними установками мод та інших додатків для GTA San Andreas, радимо користуватися тільки перевіреними\n\
і надійними джерелами, тому що в сторонніх модах/доповненнях може міститися шкідливий вірус\n\
через який зловмисник зможе читати Ваші паролі - Ваш обліковий запис у Ваших руках.\n\
Для того щоб максимально захистити свій обліковий запис радимо зайти в налаштування безпеки та встановити захисний код.\n\
( /mm - Безпека - Захисний код )\n\n\
"GREEN"3. Основи ігри:"W"\n\
Проводячи час на нашому сервері Ви набиратиметеся досвіду, після накопичення потрібного досвіду для певного рівня\n\
Вам буде доступний перехід на новий рівень, який відкриє нові можливості гри на нашому сервері.\n\
Ви можете переглянути статистику свого персонажа увійшовши до меню.\n\
( /mm - Статистика гравця )";
				new string[sizeof(f_str)];
				format(string,sizeof(string),"%s",f_str);
				D(playerid,DIALOG_NONE,DSM, ""YELLOW""FullServName"",string,"Добре","");
			}
			case 12,13: {
				if(PlayerInfo[playerid][pLevel] != 1) return ErrorMessage(playerid,"Тільки для новачків (1 рівень)");
				if(GetPVarInt(playerid,"anti_eat") > unix) return ErrorMessage(playerid,"Можно перекусить один раз в хвилину");
				SetPlayerHealth(playerid, 100);
				GiveFullness(playerid, 30);
				MeAction(playerid,"перекусил(а)");
				ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0,0,0,0,0,5000,1);
				SetPVarInt(playerid, "anti_eat", unix+60);
			}
			case 14: {
				if(!PlayerInfo[playerid][pSearch]) return ErrorMessage(playerid,"Ви не знаходитесь в розшуку");
				static const f_str[] = ""W"Ви хочете здатись з повинною\n\
Це зменшить ваш срок в двічі\n\
Ваш рівень розшуку: "YELLOW"%d\n\
"W"Приблизний час заключення: "YELLOW"%d сек\n\
"W"При добровільній здачі час заключення складе: "GREEN"%d сек\n\n\
"YELLOW"Ви дійсно хочете здатися добровільно?";
				new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 4) + (-2 + 5)];
				format(string,sizeof(string),f_str,PlayerInfo[playerid][pSearch],PlayerInfo[playerid][pSearch]*600,PlayerInfo[playerid][pSearch]*600/2);
				D(playerid,D_COP_ARREST,DSM, ""YELLOW"Здача з повинною",string,"Так","Відміна");
			}
			case 15: {
				new bizz = TI[playerid][tSelectedBusinessID];
				switch(GetPlayerVirtualWorld(playerid)) {
					case 2..4: {
						if(PlayerInfo[playerid][bizz_work] == bizz+1) {
							static const f_str[] = "Таксопарк {%s}%s";
							new string[sizeof(f_str) +1 + (-2 + 36)];
							format(string,sizeof(string),f_str,color_td[FuncBizz[bizz+1][funcbColor]][col_rgb],FuncBizz[bizz+1][funcbName]);
							D(playerid,D_BIZZ_TAXI_INFO,DSL,string,""ORANGE"1."W" Інформація\n"ORANGE"2."W" Уволиться из таксопарка","Вибрати","Відміна");
						}
						else showstattaxi(playerid,bizz+1);
					}
					case 5..7: {
						if(PlayerInfo[playerid][bizz_work] == bizz+1) {
							static const f_str[] = "Транспортная компания {%s}%s";
							new string[sizeof(f_str) +1 + (-2 + 36)];
							format(string,sizeof(string),f_str,color_td[FuncBizz[bizz+1][funcbColor]][col_rgb],FuncBizz[bizz+1][funcbName]);
							D(playerid,D_BIZZ_TK_INFO,DSL,string,""ORANGE"1."W" Інформація\n"ORANGE"2."W" Узнать свой доход\n"ORANGE"3."W" Уволиться из транспортной компании","Вибрати","Відміна");
						}
						else showstattk(playerid,bizz+1);
					}
					case 8..10: {
						static const f_str[] = "\n\n"ORANGE"Назва:\t\t"W"%s\n\
"ORANGE"Власник:\t\t"W"%s\n\
"ORANGE"Гос. ціна\t\t"W"%d\n\n\n\
"ORANGE"Процент комиссии за переводы:\t\t\t"W"%.1f%\n\
"ORANGE"Процент комиссии за оплату недвижимости:\t"W"%d\n\
"ORANGE"Процент комиссии пользования банкоматами:\t"W"%d";
						new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 8) + (-2 + 5) + (-2 + 4) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 4) + (-2 + 4)];
						format(string,sizeof(string),f_str,FuncBizz[bizz+1][funcbName],gBusiness[bizz][bizzOwner],gBusiness[bizz][bizzSellPrice],
						FuncBizz[bizz+1][funcbPercent2],FuncBizz[bizz+1][funcbPercent],FuncBizz[bizz+1][funcbPercent3]);
						D(playerid,DIALOG_NONE,DSM, ""YELLOW"Банківське відділення",string,"Закрити","");
					}
				}
			}
			case 16: {
				switch(GetPlayerVirtualWorld(playerid)) {
					case 49: if(PlayerInfo[playerid][pLeader] != fLCN) return ErrorMessage(playerid,"Доступно лідеру організації");
					case 50: if(PlayerInfo[playerid][pLeader] != fYAKUZA) return ErrorMessage(playerid,"Доступно лідеру організації");
					case 51: if(PlayerInfo[playerid][pLeader] != fRM) return ErrorMessage(playerid,"Доступно лідеру організації");
				}
				new string[512],member = -1;
				if(PlayerInfo[playerid][pMember] == fLCN) member = 0;
				else if(PlayerInfo[playerid][pMember] == fYAKUZA) member = 1;
				else if(PlayerInfo[playerid][pMember] == fRM) member = 2;
				if(member == -1) return ErrorMessage(playerid,"Временно недоступно");

				new year, month, day, hour, minute, second;

				strcat(string,"Рабочий №\tСтатус\tСрок найма\n");
				for(new i; i < 8; i ++) {
					if(!l_actor[member][i]) format(string,sizeof(string),"%sРабочий №%d\t{f6f6d9}Не нанят\t--\n",string,i+1);
					else {
						timestamp_to_date(l_actort[member][i]-unix, year, month, day, hour, minute, second);
						format(string,sizeof(string), "%sРабочий №%d\t"NO"Нанят\t%dд %dч %dм\n",string,i+1,day-1,hour,minute);
					}
				}
				D(playerid,D_LAB,DSTH,""YELLOW"Найм работников",string,"Вибрати","Закрити");
			}
			case 17: return D(playerid, D_GAME_DM, DSL, ""YELLOW"Сумасшедшие войны",""YELLOW"1."W" Регистрация на сумасшедшие войны\n"YELLOW"2."W" Інформація о данном мероприятии", "Вибрати", "Закрити");
			case 18: {
				if(PlayerInfo[playerid][pLeader] != fWHITEHOUSE) return ErrorMessage(playerid,"Доступно только Президенту штата");
				D(playerid,D_ECONOMY,DSL,""YELLOW"Керування штатом","\
"YELLOW"1."W" Інформація\n\
"YELLOW"2."W" Зарплата на оружейном заводе\n\
"YELLOW"3."W" Зарплата на нефтезаводе\n\
"YELLOW"4."W" Зарплата яблуневий сад\n\
"YELLOW"5."W" Зарплата лісопилка\n\
"YELLOW"6."W" Зарплата в алькатрасе\n\
"YELLOW"7."W" Налогообложение бізнесов\n\
"YELLOW"8."W" Налоги заработных плат гос.структур\n\
"YELLOW"9."W" Заработные платы\n\
"YELLOW"10."W" Переводы денежных коштів организациям\n\
"YELLOW"11."W" Керування пенсією\n\
"YELLOW"12."W" Пополнить казну\n\
"YELLOW"13."W" Зняти гроші с казны","Вибрати","Відміна");
			}
			case 19: {
				if(!TI[playerid][tJobGun][0]) {
					static const f_str[] = "\n\n"W"Ви дійсно хочете почати роботу "ORANGE"збірник зброї?\n"W"Вартість сборки 1 ящика - "GREEN"$%d\n"W"Приблизний час роботи - "YELLOW"25 сек\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,WorkSalary[0]);
					D(playerid,D_JOB_GUNS,DSM, ""YELLOW"Збірник зброї",string,"Так","Ні");
				}
				else {
					static const f_str[] = "\n\n"W"Ви хочете закінчити роботу та забрати "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_GUNS,DSM, ""YELLOW"Закінчення роботи",string,"Так","Ні");
				}
			}
			case 20: {
				if(!TI[playerid][tJobGun][0]) return 1;
				if(TI[playerid][tJobGun][1] != 1 || TI[playerid][tJobGun][2]) return 1;
				SendOk(playerid,"Ви взяли заготовку. Підійдіть до вільного стола, для виробництва зброї");
				new objectmodel = GunWorkWeapon[Random(0,6)];
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid,8,objectmodel,6);
				SetPVarInt(playerid,"pgunmodel",objectmodel);
				TI[playerid][tJobGun][1] = 2;
			}
			case 21: {
				if(!TI[playerid][tJobOil][0]) {
					static const f_str[] = "\n\n"W"Ви дійсно хочете почати роботу "ORANGE"нефтяника?\n"W"Вартість переноса 1 бочки - "GREEN"$%d\n"W"Приблизний час роботи - "YELLOW"1мин 10 сек\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,WorkSalary[1]);
					D(playerid,D_JOB_OIL,DSM, ""YELLOW"Нефте-Завод",string,"Так","Ні");
				}
				else {
					static const f_str[] = "\n\n"W"Ви хочете закінчити роботу та забрати "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_OIL,DSM, ""YELLOW"Закінчення роботи",string,"Так","Ні");
				}
			}
			case 22: {
				if(!TI[playerid][tJobSad][0]) return 1;
				if(GetPVarInt(playerid,"bailer_1") == 1) return ErrorMessage(playerid,"У Вас в руках лійка");
				if(GetPVarInt(playerid,"bailer_2") == 1 || GetPVarInt(playerid,"bailer_3") == 1) return ErrorMessage(playerid,"Ви уже взяли ящик");
				SetPlayerAttachedObject(playerid, 4, 19639, 5, 0.342999,-0.158999,0.041999, 0.000000,177.799957,-0.300001, 1.000000,0.520000,0.699000);
				SetPVarInt(playerid,"bailer_2",1);
			}
			case 23: {
				if(!TI[playerid][tJobSad][0]) return ErrorMessage(playerid,"Необхідно одягнути робочу форму");
				if(GetPVarInt(playerid,"sad_uxod") == 1) return ErrorMessage(playerid,"Ви уже доглядаєте за деревом");
				if(GetPVarInt(playerid,"bailer") == 1) return ErrorMessage(playerid,"Ви уже взяли лейку");
				SetPlayerAttachedObject(playerid, 7, 19621, 6, 0.068000, 0.040999, 0.001000, 0.000000, 0.000000, 94.299972, 1.000000, 1.000000, 1.000000); //
				SetPVarInt(playerid,"bailer",1);
			}
			case 24: {
				if(!TI[playerid][tJobSad][0]) {
					static const f_str[] = "\n\n"W"Ви дійсно хочете почати роботу в "ORANGE"яблочневом саду?\n"W"Вартість збору яблук з 1 дерева - "GREEN"$%d/кг\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,WorkSalary[3]);
					D(playerid,D_JOB_SAD,DSM, ""YELLOW"Яблучний сад",string,"Так","Ні");
				}
				else {
					static const f_str[] = "\n\n"W"Ви хочете закінчити роботу та забрати "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_SAD,DSM, ""YELLOW"Закінчення роботи",string,"Так","Ні");
				}
			}
			case 25: {
				D(playerid,D_MAYOR,DSL,""YELLOW"Інформація","\
"YELLOW"1."W" Інформація о налогах\n\
"YELLOW"2."W" Пожертвовать гроші в казну\n\
"YELLOW"3."W" Самые щедрые жители","Вибрати","Відміна");
			}
			case 26: {
				if(!IsACop(playerid) || !start_work[playerid]) return 1;
				ShowGetGun(playerid);
			}
			case 27: {
				if(GetTeamID(playerid) != fFBI || !start_work[playerid]) return 1;
				ShowGetGun(playerid);
			}
			case 28: {
				if(!IsAArm(playerid) || !start_work[playerid]) return 1;
				switch(GetPlayerVirtualWorld(playerid)) {
					case 30: if(FI[fARMYLV][fMats] < 100) return ErrorMessage(playerid,"Недостаточно боєприпасів");
					case 31: if(FI[fARMYSF][fMats] < 100) return ErrorMessage(playerid,"Недостаточно боєприпасів");
					case 35: if(zavodsklad < 100) return ErrorMessage(playerid,"Недостаточно боєприпасів");
				}
				if(GunTickGet[playerid][0] > unix) return ErrorMessage(playerid,"Не можна брати зброю дуже часто");
				switch(GetPlayerVirtualWorld(playerid)) {
					case 30: FI[fARMYLV][fMats] -= 100,UpdateFraction(fARMYLV,"Mats",FI[fARMYLV][fMats]);
					case 31: FI[fARMYSF][fMats] -= 100,UpdateFraction(fARMYSF,"Mats",FI[fARMYSF][fMats]);
					case 35: zavodsklad -= 100;
				}
				GunTickGet[playerid][0] = unix+20;
				AC_GivePlayerWeapon(playerid,31,150);
				AC_GivePlayerWeapon(playerid,24,30);
				SetPlayerArmour(playerid, 100.0);
				SetPlayerHealth(playerid,100);
				SetFullness(playerid, 100);
				SendOk(playerid,"Вам выдано: M4(150пт), Deagle(30пт), бронежилет, сух.паек");
			}
			        case 86,87,88: {
			            static const f_str[] =
""W"Ви дійсно хочете взяти мопед?";
                        new string[sizeof(f_str)];
                        format(string,sizeof(string),"%s",f_str);
                        D(playerid,839,DSM, ""YELLOW"Прокат мопедів",string,"Так","Ні");
		    }
			case 29: {
				new string[128];
				format(string,sizeof(string),""W"1. автомобіль №1 "YELLOW"[%s]\n"W"2. автомобіль №2 "YELLOW"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
				D(playerid,D_VEH_NUMBER,DSL,""YELLOW"Покупка гос. номера",string,"Вибрати","Закрити");
			}
			case 30: {
				if(TI[playerid][tClothesWork][1] != 1) return 1;
				SendOk(playerid,"Ви взяли заготовку. Підходить до вільного столу, для пошива одяга");
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid, 8, 2384, 5,  0.100000, 0.100000, 0.200000,  100.000000, 170.0, 100.000000,  1.000000, 1.000000, 1.000000); // 155
				TI[playerid][tClothesWork][1] = 2;
			}
			case 31: {
				if(TI[playerid][tClothesWork][1] != 3) return 1;
				if(GetPVarInt(playerid,"pOff9") > gettime()) return 1;
				ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
				SetPVarInt(playerid,"zp_clothes",GetPVarInt(playerid,"zp_clothes") + WorkSalary[2]);

				new string[24];
				format(string,sizeof(string),"MONEY:_$%d",GetPVarInt(playerid,"zp_clothes"));
				PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 8))RemovePlayerAttachedObject(playerid,8);
				TI[playerid][tClothesWork][1] = 1;
			}
			case 32..37: {
				new vw = GetPlayerVirtualWorld(playerid);

				if(pick == 32 && vw == 40 && PlayerInfo[playerid][pMember] != fLSPD) return ErrorMessage(playerid,"Ви не знаходитесь в Поліції м. ЛС");
				if(pick == 32 && vw == 41 && PlayerInfo[playerid][pMember] != fSFPD) return ErrorMessage(playerid,"Ви не знаходитесь в Поліції м. СФ");
				if(pick == 32 && vw == 42 && PlayerInfo[playerid][pMember] != fLVPD) return ErrorMessage(playerid,"Ви не знаходитесь в Поліції м. ЛВ");
				if(pick == 33 && PlayerInfo[playerid][pMember] != fFBI) return ErrorMessage(playerid,"Ви не знаходитесь в ФБР");
				if(pick == 34 && vw == 20 && PlayerInfo[playerid][pMember] != fMEDICLS) return ErrorMessage(playerid,"Ви не знаходитесь в Лікарні м. ЛС");
				if(pick == 34 && vw == 21 && PlayerInfo[playerid][pMember] != fMEDICSF) return ErrorMessage(playerid,"Ви не знаходитесь в Лікарні м. СФ");
				if(pick == 34 && vw == 22 && PlayerInfo[playerid][pMember] != fMEDICLV) return ErrorMessage(playerid,"Ви не знаходитесь в Лікарні м. ЛВ");
				if(pick == 35 && vw == 60 && PlayerInfo[playerid][pMember] != fARMYLV) return ErrorMessage(playerid,"Ви не знаходитесь в Армии м. ЛВ");
				if(pick == 35 && vw == 59 && PlayerInfo[playerid][pMember] != fARMYSF) return ErrorMessage(playerid,"Ви не знаходитесь в Армии м. СФ");
				if(pick == 36 && vw == 10 && PlayerInfo[playerid][pMember] != fLSNEWS) return ErrorMessage(playerid,"Ви не знаходитесь в Радиоцентре м. ЛС");
				if(pick == 36 && vw == 11 && PlayerInfo[playerid][pMember] != fSFNEWS) return ErrorMessage(playerid,"Ви не знаходитесь в Радиоцентре м. СФ");
				if(pick == 36 && vw == 12 && PlayerInfo[playerid][pMember] != fLVNEWS) return ErrorMessage(playerid,"Ви не знаходитесь в Радиоцентре м. ЛВ");
				if(pick == 37 && PlayerInfo[playerid][pMember] != fWHITEHOUSE) return ErrorMessage(playerid,"Ви не знаходитесь в Белом Доме");
				new string[128];
				format(string,sizeof(string),"\n\n"W"Ви дійсно хочете %s"W" рабочий день?\n\n",(!start_work[playerid]) ? (""ORANGE"Почати") : (""ORANGE"закінчити"));
				D(playerid,D_WORK,DSM, ""YELLOW"Раздевалка",string,"Так","Ні");
			}
			case 38: return D(playerid,D_FAMILY_CREATE_2,DSL, ""YELLOW"сім'ї",""YELLOW"1."W" ТОП сімей\n"YELLOW"2."W" Создание сім'ї","Вибрати","Відміна");
			case 39: {
				return ErrorMessage(playerid,"Поединки в разработке");
				/*static const f_str[] = ""W"%s "NO"VS"W" %s\n\
										"W"%s "NO"VS"W" %s\n\
										"W"%s "NO"VS"W" %s\n\
										"W"%s "NO"VS"W" %s\n\
										"W"%s "NO"VS"W" %s\n";
				new string[512];
				new name[25];
				if(RingInfo[0][rgPlayer][0] == -1) name = "None";
				else name = player_name[RingInfo[0][rgPlayer][0]];
				new name1[25];
				if(RingInfo[0][rgPlayer][1] == -1) name1 = "None";
				else name1 = player_name[RingInfo[0][rgPlayer][1]];

				new name2[25];
				if(RingInfo[1][rgPlayer][0] == -1) name2 = "None";
				else name2 = player_name[RingInfo[1][rgPlayer][0]];
				new name3[25];
				if(RingInfo[1][rgPlayer][1] == -1) name3 = "None";
				else name3 = player_name[RingInfo[1][rgPlayer][1]];

				new name4[25];
				if(RingInfo[2][rgPlayer][0] == -1) name4 = "None";
				else name4 = player_name[RingInfo[2][rgPlayer][0]];
				new name5[25];
				if(RingInfo[2][rgPlayer][1] == -1) name5 = "None";
				else name5 = player_name[RingInfo[2][rgPlayer][1]];

				new name6[25];
				if(RingInfo[3][rgPlayer][0] == -1) name6 = "None";
				else name6 = player_name[RingInfo[3][rgPlayer][0]];
				new name7[25];
				if(RingInfo[3][rgPlayer][1] == -1) name7 = "None";
				else name7 = player_name[RingInfo[3][rgPlayer][1]];

				new name8[25];
				if(RingInfo[4][rgPlayer][0] == -1) name8 = "None";
				else name8 = player_name[RingInfo[4][rgPlayer][0]];
				new name9[25];
				if(RingInfo[4][rgPlayer][1] == -1) name9 = "None";
				else name9 = player_name[RingInfo[4][rgPlayer][1]];

				format(string,sizeof(string),f_str,name,name1,name2,name3,name4,name5, name6,name7,name8,name9);
				return D(playerid,DIALOG_NONE,DSM, ""YELLOW"Інформація",string,"Скрыть","");*/
			}
			case 40: {
				if(PlayerInfo[playerid][pMember] != fWHITEHOUSE || !start_work[playerid]) return 1;
				if(PlayerInfo[playerid][pRank] != 3 && PlayerInfo[playerid][pRank] != 4) return ErrorMessage(playerid,"Доступно тільки охоронцям");
				if(GunTickGet[playerid][0] > unix) return ErrorMessage(playerid,"Не можна брати зброю дуже часто");
				GunTickGet[playerid][0] = unix+20;
				AC_GivePlayerWeapon(playerid,24,30);
				SetPlayerArmour(playerid, 100.0);
				SetPlayerHealth(playerid,100);
				SetFullness(playerid, 100);
				SendOk(playerid,"Вам выдано: Deagle(30пт), бронежилет, сух.паек");
			}
			case 41: {
				if(!TI[playerid][tJobWood][0]) {
					static const f_str[] = "\n\n"W"Ви дійсно хочете почати роботу "ORANGE"лесоруб?\n"W"Вартість спила 1 дерева - "GREEN"$%d\n"W"Приблизний час роботи - "YELLOW"30 сек\n\n";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,WorkSalary[4]);
					D(playerid,D_JOB_WOOD,DSM, ""YELLOW"лісопилка",string,"Так","Ні");
				}
				else {
					static const f_str[] = "\n\n"W"Ви хочете закінчити роботу та забрати "GREEN"$%d?\n\n";
					new string[sizeof(f_str) +1 + (-2 + 7)];
					format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
					D(playerid,D_JOB_WOOD,DSM, ""YELLOW"Закінчення роботи",string,"Так","Ні");
				}
			}
			case 42: return D(playerid, D_GAME_GOLOD, DSL, ""YELLOW"Голодні ігри",""YELLOW"1."W" Реєстрація на голодні ігри\n"YELLOW"2."W" Інформація о данном мероприятии", "Вибрати", "Закрити");
			case 43: {
				if(PlayerInfo[playerid][pMember] != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Ви не агент FBI");
				if(TI[playerid][tMasked]) {
					A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
					SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
					TI[playerid][tMasked] = 0;
					return 1;
				}
				if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с должности Агент FBI");
				new string[1024];
				for(new i = 1;i < MAX_FRACTIONS;i ++) {
					if(i == fFBI) continue;
					if(i == fINSTRUCTORS) continue;
					format(string,sizeof(string),"%s%s\n", string, FI[i][fName]);
				}
				D(playerid, D_SPY, DSL, ""YELLOW"Виберите фракцию", string, "Вибрати", "Закрити");
			}
			case 44..48: {
				switch(pick) {
					case 44: if(PlayerInfo[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У вас немає доступу к этому складу");
					case 45: if(PlayerInfo[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У вас немає доступу к этому складу");
					case 46: if(PlayerInfo[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У вас немає доступу к этому складу");
					case 47: if(PlayerInfo[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У вас немає доступу к этому складу");
					case 48: if(PlayerInfo[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У вас немає доступу к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складі недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				else if(IsAGang(playerid)) return D(playerid,D_BAND_STOCK,DSL,""YELLOW"Склад",""YELLOW"1."W" Покласти гроші в банк банди\n"YELLOW"2."W" Зняти гроші з банка банди\n"YELLOW"3."W" Покласти боєприпаси на склад\n"YELLOW"4."W" Взяти боєприпаси зі складу\n"YELLOW"5."W" Покласти наркотики на склад\n"YELLOW"6."W" Взяти наркотики зі складу\n"YELLOW"7."W" Взяти зброю\n"YELLOW"8."W" Заказати наркотики", "Вибрати", "Закрити");
			}
			case 49: {
				switch(GetPlayerVirtualWorld(playerid)) {
					case 49: if(PlayerInfo[playerid][pMember] != fLCN) return ErrorMessage(playerid,"У вас немає доступу к этому складу");
					case 50: if(PlayerInfo[playerid][pMember] != fYAKUZA) return ErrorMessage(playerid,"У вас немає доступу к этому складу");
					case 51: if(PlayerInfo[playerid][pMember] != fRM) return ErrorMessage(playerid,"У вас немає доступу к этому складу");
				}
				new gunamount = GetPVarInt(playerid,"carrygun")*500;
				if(gunamount) {
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(FI[GetTeamID(playerid)][fMats] + gunamount > 300000) return ErrorMessage(playerid,"На складі недостаточно места");
					else FI[GetTeamID(playerid)][fMats] += gunamount;
					UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
					return 1;
				}
				if(IsAMafia(playerid)) return D(playerid,D_MAFIA_STOCK,DSL,""YELLOW"Склад",""YELLOW"1."W" Покласти гроші в банк мафии\n"YELLOW"2."W" Зняти гроші з банка мафии\n"YELLOW"3."W" Покласти боєприпаси на склад\n"YELLOW"4."W" Взяти боєприпаси зі складу\n"YELLOW"5."W" Покласти наркотики на склад\n"YELLOW"6."W" Взяти наркотики зі складу", "Вибрати", "Закрити");
			}
			case 50,51: return bank_dialog(playerid);
			case 52: return D(playerid,D_BANK_OPLATA,DSL,""YELLOW"Оплата недвижимости",""YELLOW"1."W" Дом\n"YELLOW"2."W" бізнес\n"YELLOW"3."W" Отель\n"YELLOW"4."W" Аэропорт","Вибрати","Відміна");
			case 53: return GetTickets(playerid);
			case 54..57: {
				new houseid = TI[playerid][tSelectHouse];
				SetPlayerPosAC(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2],houseid+1,hinterior_info[gHouses[houseid][houseHint]][h_interior]);
				SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
				SetCameraBehindPlayer(playerid);
				TI[playerid][tInHouse] = true;
			}
			case 58: {
				new id = TI[playerid][tSelectedBusinessID];
				switch(GetPlayerVirtualWorld(playerid)) {
					case 1: D(playerid,D_AUTOSALON,DSL,""YELLOW"Автосалон","2 этаж\nВыход","Перейти","Відміна");
					case 2: D(playerid,D_AUTOSALON,DSL,""YELLOW"Автосалон","1 этаж\nВыход","Перейти","Відміна");
					case 3: D(playerid,D_AUTOSALON,DSL,""YELLOW"Автосалон","2 этаж\nВыход","Перейти","Відміна");
					case 4: D(playerid,D_AUTOSALON,DSL,""YELLOW"Автосалон","1 этаж\nВыход","Перейти","Відміна");
					case 5..6: {
						TI[playerid][tTPpick] = true;
						SetPlayerPosAC(playerid,gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ],0,0);
						SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);
						SetCameraBehindPlayer(playerid);
					}
				}
			}
			case 59: return D(playerid, D_GAME_RACE, DSL, ""YELLOW"Гонки",""YELLOW"1."W" Регистрация на гонки\n"YELLOW"2."W" Інформація о данном мероприятии", "Вибрати", "Закрити");
			case 60: {
				SetPlayerPosAC(playerid,1680.2532,693.7829,589.5544,GetPVarInt(playerid, "selectedhotel"),101);
				SetPlayerFacingAngle(playerid,179.9865);
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
			}
			case 61: {
				SetPlayerPosAC(playerid,1405.0586,-28.2474,1000.8589,GetPVarInt(playerid, "selectedhotel"),79);
				SetPlayerFacingAngle(playerid,2.6381);
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
			}
			case 62..66: {
				switch(pick) {
					case 62: if(PlayerInfo[playerid][pMember] != fBALLAS) return ErrorMessage(playerid,"У вас немає доступу до цієї аптечки");
					case 63: if(PlayerInfo[playerid][pMember] != fVAGOS) return ErrorMessage(playerid,"У вас немає доступу до цієї аптечки");
					case 64: if(PlayerInfo[playerid][pMember] != fGROVE) return ErrorMessage(playerid,"У вас немає доступу до цієї аптечки");
					case 65: if(PlayerInfo[playerid][pMember] != fAZTEC) return ErrorMessage(playerid,"У вас немає доступу до цієї аптечки");
					case 66: if(PlayerInfo[playerid][pMember] != fRIFA) return ErrorMessage(playerid,"У вас немає доступу до цієї аптечки");
				}
				if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив доступ до складу");
				if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
					new str[128];
					format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
					ErrorMessage(playerid,str);
					return 1;
				}
				if(!FI[GetTeamID(playerid)][fHealth]) return ErrorMessage(playerid,"На складі недостаточно аптечок");
				if(GetPVarInt(playerid, "gang_heal") > gettime()) return ErrorMessage(playerid,"Брати аптечку можно один раз в 15 секунд");
				new Float:health;
				GetPlayerHealth(playerid,health);
				if(health >= 160) return ErrorMessage(playerid,"Ви здоровы");
				if(health + 60.0 < 160.0 ) health += 60.0;
				else health = 160.0;
				SetPlayerHealth(playerid,health);
				MeAction(playerid,"использовал(а) аптечку");
				SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
				ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
				FI[GetTeamID(playerid)][fHealth] --;
				UpdateFraction(GetTeamID(playerid),"Health",FI[GetTeamID(playerid)][fHealth]);
				SetPVarInt(playerid, "gang_heal", gettime()+15);

				static const f_str[] = "[F] %s[%d] использовал аптечку";
				new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4)];
				
	         	format(string,sizeof(string),f_str,player_name[playerid],playerid);
				SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
				return 1;
			}
			case 67: IsPlayerShootingBox(playerid, 6, pick);
			case 68,69,70: {
				if(!TI[playerid][tTir]) return ErrorMessage(playerid,"У вас немаєу пропуска в тир");
				SetPVarInt(playerid, "shootingpl", pick);
				if(!ShootingStart[playerid])  {
					return D(playerid, D_AMMOSG, DSM, ""YELLOW"Тир",""W" Ви дійсно хочете почати тренування?", "Так", "Ні");
				}
				else return D(playerid, D_AMMOSG, DSM, ""YELLOW"Тир",""W" Ви дійсно хочете закінчити тренування?", "Так", "Ні");
			}
			case 71: IsPlayerShootingBox(playerid, 18, pick);
			case 72: IsPlayerShootingBox(playerid, 21, pick);
			case 73: IsPlayerShootingBox(playerid, 20, pick);
			case 74: IsPlayerShootingBox(playerid, 19, pick);
			case 75: IsPlayerShootingBox(playerid, 22, pick);
			case 76: IsPlayerShootingBox(playerid, 1, pick);
			case 77: IsPlayerShootingBox(playerid, 2, pick);
			case 78: IsPlayerShootingBox(playerid, 7, pick);
			case 79..83: {
				if(!IsAGang(playerid)) return ErrorMessage(playerid,"Ви не бандит");
				ghetto_info(playerid);
			}
			case 84,85: {
				if(!TI[playerid][tJobWood][1]) return 1;
		        ClearAnimations(playerid);
		        RemovePlayerAttachedObject(playerid,9);
		        DisablePlayerCheckpoint(playerid);
		        TI[playerid][tJobWood][1] = 0;
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		        SetPlayerAttachedObject(playerid,8,341,6);
		        if(pick == 84) {
		        	new obj = CreateDynamicObject(1463,-539.6312, -1584.1210, 10.3435, 0.00000, 0.00000, 0.00000);
			        SetGVarInt("WoodConv",1,obj);
			        MoveDynamicObject(obj,-539.6312, -1581.4810, 10.3435,1,0.00000, 0.00000, 0.00000);
		        }
		        else if(pick == 85) {
		        	new obj = CreateDynamicObject(1463,-531.6816, -1584.0610, 10.3435,   0.00000, 0.00000, 0.00000);
			        SetGVarInt("WoodConv",1,obj);
			        MoveDynamicObject(obj,-531.6816, -1581.4810, 10.3435,1,0.00000, 0.00000, 00.00000);
		        }
		        TI[playerid][tJobWood][3] = 1;
				TI[playerid][tJobSalary] += WorkSalary[4];
				new string[24];
				format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
				PlayerTextDrawSetString(playerid,work_td[playerid][1],string);

				if(QuestProgress[playerid][4] < 20 && AcceptQuest[playerid][4] != 0) QuestProgress[playerid][4] ++,save_quest(playerid,4);
				if(QuestProgress[playerid][4] == 20 && AcceptQuest[playerid][4] != 0) {
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Квест",""W"Ви успішно нарубили и перенесли 20ед древесины. Це завдання можна закінчити та забрати за нього нагороду","Закрити","");
					NextStapQI(playerid,4);
				}
		    }
		}
	}
	else if(areaid >= gHouseArea[0] && areaid <= gHouseArea[gHouseCount-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new houseid = areaid - gHouseArea[0];
		if(houseid == -1) return true;
		TI[playerid][tSelectHouse] = houseid;
		//TI[playerid][tTPpick] = true;
		new classname[20], mes2[200];
		switch(gHouses[houseid][houseClass]) {
			case 0:classname = "Эконом";
			case 1:classname = "Cредний";
			case 2:classname = "Элитный";
			case 3:classname = "Особняк";
			default: classname = "Неизвестно";
		}
		if(!gHouses[houseid][houseOwner]) {			
			format(mes2,sizeof(mes2),""W"Ціна: "ORANGE"$%d\n\
									"W"Клас: "YELLOW"%s\n\
									"W"Номер будинку: "YELLOW"№%d",
									gHouses[houseid][housePrice],
									classname,
									gHouses[houseid][houseID]);
			D(playerid,D_HOUSE,DSM, ""YELLOW"Будинок",mes2,"Купити","Відміна");
		}
		else {
			format(mes2,sizeof(mes2),""W"Власник: "ORANGE"%s\n\
									"W"Будинок: "YELLOW"№%d\n\
									"W"Клас: "YELLOW"%s",
									gHouses[houseid][houseOwner],
									gHouses[houseid][houseID],
									classname);
			D(playerid,D_HOUSE,DSM, ""YELLOW"Будинок",mes2,"Увійти","Відміна");
		}
	}
	else if(areaid >= gHotelArea[0] && areaid <= gHotelArea[HOTEL_COUNT-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new otelid=areaid - gHotelArea[0];
		if(otelid == -1) return true;
		SetPVarInt(playerid,"selectedhotel",otelid);
		if(!gHotels[otelid][hotelOwnerID]) {
			new string[128];
			format(string,sizeof(string),""W"Цей отель продається за "GREEN"$%d",gHotels[otelid][hotelPrice]);
			D(playerid,D_HOTEL_BUY,DSM, ""YELLOW"Отель",string,"Купити","Увійти");
		}
		else {
			TI[playerid][tTPpick] = true;
			SetPlayerPosAC(playerid,1405.3140,-15.8006,1000.9132,otelid,79);
			SetPlayerFacingAngle(playerid,90.1475);
			SetCameraBehindPlayer(playerid);
			gHotels[otelid][hotelVisitors]++;
			UpdateHotelData(otelid+1,"visitors",gHotels[otelid][hotelVisitors]);
			OnPlayerUpdateLoadingMode(playerid);
		}
	}
	else if(areaid >= gAirArea[0] && areaid <= gAirArea[AIR_COUNT-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new airs=areaid - gAirArea[0];
		if(airs == -1) return true;
		SetPVarInt(playerid,"selectedair",airs);
		if(!gAirs[airs][airOwnerID]) {
			new string[128];
			format(string,sizeof(string),""W"Цей аэропорт продається за "GREEN"$%d",gAirs[airs][airPrice]);
			D(playerid,D_AIRPORT_BUY,DSM, ""YELLOW"Аэропорт",string,"Купити","Відміна");
			return 1;
		}
		if(GetString(player_name[playerid],gAirs[airs][airOwner])) D(playerid,D_AIRPORT,DSL,""YELLOW"Аэропорт",""YELLOW"1."W" Баланс аэропорта\n"YELLOW"2."W" Зняти гроші\n"YELLOW"3."W" Статистика аэропорта\n"YELLOW"4."W" Установить цену за аренду\n"YELLOW"5."NO" Продати аэропорт","Вибрати","Відміна");
	}
    else if(areaid >= b_area[0] && areaid <= b_area[gBusinessCount - 1] && pstate == PLAYER_STATE_ONFOOT) {
  		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}	
		new businessid = areaid - b_area[0];
		new mes2[128];
		if(businessid < 0) return SendClientMessage(playerid,COLOR_GREY,"Помилка (#100)");
		if(!gBusiness[businessid][bizzStatus]) return true;
		TI[playerid][tSelectedBusinessID] = businessid;
		if((!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 7) && (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 11) && (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 14) && (!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] != 15)) {
			format(mes2,sizeof(mes2),""W"Цей бізнес продається за "GREEN"$%d",gBusiness[businessid][bizzSellPrice]);
			return D(playerid,D_BIZZ_BUY,DSM, ""YELLOW"Бізнес",mes2,"Купити","Увійти");
		}
		else {
			if(gBusiness[businessid][bizzType] == 8) {
				if(IsPlayerInRangeOfPoint(playerid,5.0, 545.7042,-1293.4833,17.2422)) SetPVarInt(playerid,"sellcarClass",1);
				if(IsPlayerInRangeOfPoint(playerid,5.0, -1965.6605,293.9383,35.4688)) SetPVarInt(playerid,"sellcarClass",3);
				if(IsPlayerInRangeOfPoint(playerid,5.0, 2200.8638,1394.8074,11.0625)) SetPVarInt(playerid,"sellcarClass",5);
				if(IsPlayerInRangeOfPoint(playerid,5.0, 2131.8152,-1151.3242,24.0600)) SetPVarInt(playerid,"sellcarClass",6);
				return D(playerid,dBuyCarSalon,DSM, ""YELLOW"Автосалон","\n\n"W"Ви бажаєте переглянути список автомобілів?\n\n","Так","Ні");
			}
			else {
				if(gBusiness[businessid][bizzEnter] && gBusiness[businessid][bizzOwnerID] != PlayerInfo[playerid][pID]) {
					new string[128];
					format(string,sizeof(string),""W"Вартість входа "GREEN"$%d",gBusiness[businessid][bizzEnter]);
					D(playerid,D_BIZZ_ENTERS,DSM, ""YELLOW"Бізнес",string,"Увійти","Відміна");
					return 1;
				}
				new bint = gBusiness[businessid][bizzBint]-1;
				if(bint < 0 || bint >= BINT_COUNT) return 1;
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid,gBints[bint][bintX],gBints[bint][bintY],gBints[bint][bintZ],businessid+1,gBints[bint][bintInterior]);
				SetPlayerFacingAngle(playerid,gBints[bint][bintR]);
				gBusiness[businessid][bizzVisitors]++;
				SetCameraBehindPlayer(playerid);
				if(gBusiness[businessid][bizzType] == 10 || gBusiness[businessid][bizzType] == 11 || gBusiness[businessid][bizzType] == 14 || gBusiness[businessid][bizzType] == 15) OnPlayerUpdateLoadingMode(playerid);
			}
		}
	}
	else if(areaid >= car_pickup[0] && areaid <= car_pickup[78-1]) {
		new carid = areaid - car_pickup[0];
		new model = autosaloncar[carid][autoCars];
		new modelid = model - 400;
		new classname[10]; 
		switch(autosaloncar[carid][autoClass]) {
			case 0: strcat(classname,"эконом");
			case 1: strcat(classname,"стандарт");
			case 2: strcat(classname,"спорт");
			case 3: strcat(classname,"мото");
		}
		SetPVarInt(playerid,"car_number",modelid);

		new price;
		if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(gTransport[modelid][trPrice]/100*vip_status[PlayerInfo[playerid][pVips]][vip_buycar]);
			price = gTransport[modelid][trPrice]-seller;
		}
		else {
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(gTransport[modelid][trPrice]/100*BonusInfo[act_buycar]);
				price = gTransport[modelid][trPrice]-seller;
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(gTransport[modelid][trPrice]/100*BonusInfo[act_buycar]);
				price = gTransport[modelid][trPrice]-seller;
			}
		    else price = gTransport[modelid][trPrice];
		}

		new string[256];
		format(string,sizeof(string),""W"Назва автомобіля: "YELLOW"%s "W"[%s класс]\n\n\
										"W"Ціна автомобіля: "GREEN"$%d\n\
										"W"Ємкість бензобака: "O"%d\n\
										"W"Росход топлива на 100 КМ: "O"%d",gTransport[modelid][trName],
										classname,price,gTransport[modelid][trTank],gTransport[modelid][trConsumption]);
		D(playerid,D_BUY_CAR,DSM, ""YELLOW"Інформація",string,"Купити","Відміна");
		return 1;
	}
	else if(areaid >= gBintEnterArea[0] && areaid <= gBintEnterArea[BINT_COUNT-1]) {
  		if(TI[playerid][tTPpick]) {
			TI[playerid][tTPpick] = false;
			return 1;
		}
		new id = TI[playerid][tSelectedBusinessID];
		if(id < 0) return true;
		if(id == 75 && TI[playerid][tGym]) return ErrorMessage(playerid,"необхідно закінчити тренування");
		new vw, int;
		switch(id) {
			case 7: vw = 46,int = 78;
			case 8: vw = 47,int = 78;
			case 9: vw = 48,int = 78;
			default: vw = 0,int = 0;
		}
		TI[playerid][tTPpick] = true;
		SetPlayerPosAC(playerid,gBusiness[id][bizzX],gBusiness[id][bizzY],gBusiness[id][bizzZ],vw,int);
		SetPlayerFacingAngle(playerid,gBusiness[id][bizzR]);
		SetCameraBehindPlayer(playerid);
		if(gBusiness[id][bizzType] == 15) OnPlayerUpdateLoadingMode(playerid);
	}
	else if(areaid >= gBintBuyArea[0] && areaid <= gBintBuyArea[BINT_COUNT-1]) {
		new id = TI[playerid][tSelectedBusinessID];
		if(id < 0) return true;
		new products = gBusiness[id][bizzProduct];
		if(!products) return ErrorMessage(playerid,"К сожалению, товара не осталось");
		new type = gBusiness[id][bizzType];
		switch(type) {
			case 1: show_tavern(playerid,id);// закусочная
			case 2:	show_24(playerid,id);
			case 3..4: {
			    new string[128];
				format(string,sizeof(string),"Найменування\tВартість\nПиво \t$%d\nВодка \t$%d\nШампанское \t$%d\nВино \t$%d\nТекила \t$%d\nКоньяк \t$%d", gBusiness[id][bizzPrice] * 10 * gBarCosts[0],gBusiness[id][bizzPrice] * 10 * gBarCosts[1],gBusiness[id][bizzPrice] * 10 * gBarCosts[2],gBusiness[id][bizzPrice] * 10 * gBarCosts[3],gBusiness[id][bizzPrice] * 10 * gBarCosts[4],gBusiness[id][bizzPrice] * 10 * gBarCosts[5]);
				D(playerid, D_BIZZ_BAR, DSTH, "Меню", string, "Купити", "Відміна");
			}
			case 5: {
		  		if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				else {
					if(GetPVarInt(playerid,"ChangingSkin") == 0) {
						SetPVarInt(playerid,"ChangingSkin",1);
						new Float: pos[4];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						GetPlayerFacingAngle(playerid, pos[3]);
						SetPVarFloat(playerid, "posx", pos[0]);
						SetPVarFloat(playerid, "posy", pos[1]);
						SetPVarFloat(playerid, "posz", pos[2]);
						SetPVarFloat(playerid, "posa", pos[3]);
						SetPVarInt(playerid, "interior", GetPlayerInterior(playerid));
						SetPVarInt(playerid, "vw", GetPlayerVirtualWorld(playerid));
						TogglePlayerControllable(playerid, 0);
						SetPlayerPosAC(playerid, 258.7497, -41.3828, 1002.0234,playerid + 1,14);
						SetPlayerFacingAngle(playerid, 70.0);
						SetPlayerCameraPos(playerid, 258.7498 + (2.5 * floatsin(-70.0, degrees)), -41.3828 + (2.5 * floatcos(-70.0, degrees)), 1002.5);
						SetPlayerCameraLookAt(playerid, 258.7497, -41.3828, 1002.0234);
					}
					SetPVarInt(playerid, "curskin", GetPlayerSkin(playerid));
					switch(PlayerInfo[playerid][pSex]) {
						case 1: SetPVarInt(playerid,"join_ped_item",0);
						case 2: SetPVarInt(playerid,"join_ped_item",71);
					}
					A_SetPlayerSkin(playerid,ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0]);

					for(new i=0; i<9; i++) {
						TextDrawShowForPlayer(playerid,buy_skins[i]);
					}
					PlayerTextDrawShow(playerid,buy_player_skins[playerid]);

					new price;
					if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
						new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*vip_status[PlayerInfo[playerid][pVips]][vip_chose]);
						price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
					}
					else {
				    	if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
							new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
							price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
						}
						else if(BonusInfo[act_select] == 2) {
							new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
							price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
						}
					    else price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
					}

					new string[12];
					format(string,sizeof(string),"$%d",price);
					PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);

					SelectTextDraw(playerid, 0x0080FFFF);
				}
			}
			case 6: {
				if(!lic[playerid][3]) return ErrorMessage(playerid,"У вас немає ліцензій на зброю");
				new gun_name[32 + 1],string[512];
				string = ""W"Зброя\t"W"Вартість\n";
				for(new i = 0; i < 12; i++) {
					GetWeaponName(gSellGun[i],gun_name,32);
					format(string, 1500, "%s\t%s\t$%i\n",string, gun_name, gSellGunPrice[i] * gBusiness[id][bizzPrice]);
				}
				new str[90];
				format(str, sizeof(str), "Armour\t$%i\nПропуск в тир\t$%i", gSellGunPrice[12] * gBusiness[id][bizzPrice], gSellGunPrice[13] * gBusiness[id][bizzPrice]);
				strcat(string, str);
				D(playerid, D_AMMO, DSTH, "Меню аммо", string, "Далі", "Відміна");
			}
			case 7: return true;//авиа
			case 9: show_fish(playerid);
			case 10: {
			    new string[256];
				format(string,sizeof(string),""YELLOW"Найменування\t"YELLOW"Вартість\n"W"Білет [30 мин] \t"GREEN"$%d\n"W"Білет [1 час] \t"GREEN"$%d\n\t"W"Білет [2 часа] \t"GREEN"$%d\n"W"Білет [3 часа] \t"GREEN"$%d", gBusiness[id][bizzPrice] * gCompCosts[0],gBusiness[id][bizzPrice] * gCompCosts[1],gBusiness[id][bizzPrice] * gCompCosts[2],gBusiness[id][bizzPrice] * gCompCosts[3]);
				D(playerid, D_BIZZ_COMP, DSTH, "Меню", string, "Купити", "Відміна");
			}
			case 11,14,15: {
				new businessid = TI[playerid][tSelectedBusinessID];
				if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 11) {
					new string[128];
					format(string,sizeof(string),"\n\n"W"Цей таксопарк продається за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
					return D(playerid,D_BIZZ_UPDATE,DSM, ""YELLOW"Таксопарк",string,"Купити","Відміна");
				}
				else if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 14) {
					new string[128];
					format(string,sizeof(string),"\n\n"W"Эта транспортная компания продається за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
					return D(playerid,D_BIZZ_UPDATE,DSM, ""YELLOW"Транспортная компания",string,"Купити","Відміна");
				}
				else if(!gBusiness[businessid][bizzOwnerID] && gBusiness[businessid][bizzType] == 15) {
					new string[128];
					format(string,sizeof(string),"\n\n"W"Це банківське відділення продається за "GREEN"$%d\n\n",gBusiness[businessid][bizzSellPrice]);
					return D(playerid,D_BIZZ_UPDATE,DSM, ""YELLOW"Банківське відділення",string,"Купити","Відміна");
				}
				else {
					switch(businessid) {
						case 1..3: {
							if(PlayerInfo[playerid][pBusiness]-1 == businessid) {
								return D(playerid, D_BIZZ_TAXI, DSL, ""YELLOW"Меню таксопарка", ""YELLOW"1."W" Інформація\n"YELLOW"2."W" Керування касою\n"YELLOW"3."W" Керування автомобілями\n"YELLOW"4."W" Керування кольором\n"YELLOW"5."W" Керування кольором шашки\n"YELLOW"6."W" Керування назвам таксопарка\n"YELLOW"7."W" Керування текстом на автомобілях\n"YELLOW"8."W" Изменение тарифов\n"YELLOW"9."W" Изменение процента от прибыли\n"YELLOW"10."W" Покупка номера телефона\n"YELLOW"11."W" Сотрудники\n"YELLOW"12."W" Статистика\n"YELLOW"13."W" Продати таксопарк", "Вибрати", "Відміна");
							}
							else if(PlayerInfo[playerid][bizz_work]-1 == businessid && PlayerInfo[playerid][bizz_status] == 5) {
								return D(playerid, D_BIZZ_TAXI_ZAM, DSL, ""YELLOW"Меню таксопарка", ""YELLOW"1."W" Інформація\n"YELLOW"2."W" Сотрудники\n"YELLOW"3."W" Статистика", "Вибрати", "Відміна");
							}
							else return ErrorMessage(playerid,"Керування таксопарком доступно только руководителю бізнеса и управляющему");
						}
						case 4..6: {
							if(PlayerInfo[playerid][pBusiness]-1 == businessid) {
								return D(playerid, D_BIZZ_TK, DSL, ""YELLOW"Меню транспортной компании", ""YELLOW"1."W" Інформація\n"YELLOW"2."W" Керування касою\n"YELLOW"3."W" Керування автомобілями\n"YELLOW"4."W" Керування кольором\n"YELLOW"5."W" Керування назвам транспортной компании\n"YELLOW"6."W" Изменение процента от прибыли\n"YELLOW"7."W" Сотрудники\n"YELLOW"8."W" Статистика\n"YELLOW"9."W" Продати транспортную компанию", "Вибрати", "Відміна");
							}
							else if(PlayerInfo[playerid][bizz_work]-1 == businessid && PlayerInfo[playerid][bizz_status] == 2) {
								return D(playerid, D_BIZZ_TK_ZAM, DSL, ""YELLOW"Меню транспортной компании", ""YELLOW"1."W" Інформація\n"YELLOW"2."W" Сотрудники\n"YELLOW"3."W" Статистика", "Вибрати", "Відміна");
							}
							else return ErrorMessage(playerid,"Керування транспортной компанией доступно только руководителю бізнеса и управляющему");
						}
						case 7..9: {
							if(PlayerInfo[playerid][pBusiness]-1 == businessid) {
								return D(playerid, D_BIZZ_BO, DSL, ""YELLOW"Меню банківського відділення", ""YELLOW"1."W" Інформація\n"YELLOW"2."W" Керування касою\n"YELLOW"3."W" Керування кольором\n"YELLOW"4."W" Керування назвою банківського відділення\n"YELLOW"5."W" Изменение комиссии переводов\n"YELLOW"6."W" Изменение комиссии за оплату недвижимости\n"YELLOW"7."W" Изменение комиссии за пользование банкоматами\n"YELLOW"8."W" Керування банкоматами\n"YELLOW"9."W" Статистика\n"YELLOW"10."W" Продати банківське відділення", "Вибрати", "Відміна");
							}
							/*else if(PlayerInfo[playerid][bizz_work]-1 == businessid && PlayerInfo[playerid][bizz_status] == 2) {
								return D(playerid, D_BIZZ_BO_ZAM, DSL, "Меню банківського відділення", ""YELLOW"1."W" Інформація\n"YELLOW"2."W" Сотрудники\n"YELLOW"3."W" Статистика", "Вибрати", "Відміна");
							}*/
							else return ErrorMessage(playerid,"Керування банковским отделением доступно только руководителю бізнеса и управляющему");
						}
					}
				}
				return 1;
			}
			case 12: D(playerid, D_RIELTOR, DSL, ""YELLOW"Ріелторська агенція", ""YELLOW"1."W" будинку\n"YELLOW"2."W" бізнесы", "Вибрати", "Відміна");
			case 13: {
				if(TI[playerid][tGym]) {
					static const f_str[] = ""YELLOW"Найменування\t"YELLOW"Вартість\n"YELLOW"1."W" Спортивная форма\t"ORANGE"$%d\n"YELLOW"2."W" Стиль боя Бокс\t"ORANGE"$5000\n"YELLOW"3."W" Стиль боя Кунг-Фу\t"ORANGE"$5000\n"YELLOW"4."W" Стиль боя Кик-Бокс\t"ORANGE"$5000\n"YELLOW"5."W" Шейкер Smart [0.25л/250ударов]\t"ORANGE"$200\n"YELLOW"6."W" Шейкер BSN [0.5л/500ударов]\t"ORANGE"$350\n"YELLOW"7."W" Шейкер Biotech [0.75л/750ударов]\t"ORANGE"$500\n"YELLOW"-"W" Інформація\n"YELLOW"-"W" Закінчити тренування";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]*150);
					D(playerid,D_BOX_2,DSTH, "Спорт-зал",string,"Вибрати","Відміна");
				}
				else {
					static const f_str[] = ""YELLOW"Найменування\t"YELLOW"Вартість\n"YELLOW"1."W" Спортивная форма\t"ORANGE"$%d\n"YELLOW"2."W" Стиль боя Бокс\t"ORANGE"$5000\n"YELLOW"3."W" Стиль боя Кунг-Фу\t"ORANGE"$5000\n"YELLOW"4."W" Стиль боя Кик-Бокс\t"ORANGE"$5000\n"YELLOW"5."W" Шейкер Smart [0.25л/250ударов]\t"ORANGE"$200\n"YELLOW"6."W" Шейкер BSN [0.5л/500ударов]\t"ORANGE"$350\n"YELLOW"7."W" Шейкер Biotech [0.75л/750ударов]\t"ORANGE"$500\n"YELLOW"-"W" Інформація";
					new string[sizeof(f_str) +1 + (-2 + 6)];
					format(string,sizeof(string),f_str,gBusiness[id][bizzPrice]*150);
					D(playerid,D_BOX_2,DSTH, "Спорт-зал",string,"Вибрати","Відміна");
				}
			}
			case 16: {
				if(PlayerInfo[playerid][pLevel] < 3) return ErrorMessage(playerid, "Заказ рекламного місця доступний з 3 рівня");
				new string[3200] = ""YELLOW"Место размещения\t"YELLOW"Статус\t"YELLOW"Власник", str[124];
				for(new x; x<MAX_BILLBORDS; x++) {
					if(!BildInfo[x][bOwned]) format(str,124,"\n%s\t"GREEN"Свободний\t"GREEN"Відсутній",BildInfo[x][bPosText]);
					else format(str,124,"\n%s\t"NO"Арендован\t{f6f6d9}%s",BildInfo[x][bPosText],BildInfo[x][bOwner]);
					strcat(string,str);
				}
				return D(playerid,D_BILL_MAIN,DSTH,""YELLOW"Заказ билборда",string,"Вибрати","Закрити");
			}
			case 17: {//sanek228
				if(TI[playerid][tTPpick]) {
					TI[playerid][tTPpick] = false;
					return 1;
				}
				if(!GetPVarInt(playerid,"buy_accses")) {
					SetPVarInt(playerid,"buy_accses",1);
					new Float: pos[4];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					GetPlayerFacingAngle(playerid, pos[3]);
					SetPVarFloat(playerid, "posx", pos[0]);
					SetPVarFloat(playerid, "posy", pos[1]);
					SetPVarFloat(playerid, "posz", pos[2]);
					SetPVarFloat(playerid, "posa", pos[3]);
					TogglePlayerControllable(playerid, 0);
					SetPlayerPosAC(playerid, 212.5107,-41.5253,1002.0234,playerid + 1,1);
					SetPlayerFacingAngle(playerid, 89.8527);
					SetPlayerCameraPos(playerid, 212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234);
					SetPlayerCameraLookAt(playerid, 212.5107,-41.5253,1002.0234);
					buyacces(playerid);
				}
			}
		}// ПК ТРАНСПОРТ
	}
	else if(areaid == gAreas[arZavod] && TI[playerid][tJobGun][0] && TI[playerid][tJobGun][2] && pstate == PLAYER_STATE_ONFOOT) {
	    if(GetPVarInt(playerid,"pOff9") > gettime()) return ErrorMessage(playerid,"Подождите");
		ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
		TI[playerid][tJobSalary] += WorkSalary[0];

		if(QuestProgress[playerid][2] < 15 && AcceptQuest[playerid][2] != 0) QuestProgress[playerid][2] ++,save_quest(playerid,2);
		if(QuestProgress[playerid][2] == 15 && AcceptQuest[playerid][2] != 0) {
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Квест",""W"Ви успішно собрали 15ед зброї. Це завдання можна закінчити та забрати за нього нагороду","Закрити","");
			NextStapQI(playerid,2);
		}

		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
		
		zavodsklad += 500;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
		TI[playerid][tJobGun][2] = 0;
		SetPVarInt(playerid,"pOff9",gettime()+20);
		TI[playerid][tJobGun][1] = 1;
	}
 	else if(areaid == gAreas[arZavodSklad] && IsAGang(playerid) || areaid == gAreas[arArmyLVSklad] && IsAGang(playerid) || areaid == gAreas[arArmyLVSklad] && IsAMafia(playerid) || areaid == gAreas[arArmyLVSklad] && GetTeamID(playerid) == fARMYLV && pstate == PLAYER_STATE_ONFOOT) {
		SendOk(playerid,"Натисніть "ORANGE"'ALT'{f6f6d9} щоб взяти боєприпаси зі складу");
	}
	else if(areaid == gAreas[arArmySFSklad] && IsAGang(playerid) || areaid == gAreas[arArmySFSklad] && IsAMafia(playerid) && pstate == PLAYER_STATE_ONFOOT) {
		SendOk(playerid,"Натисніть "ORANGE"'ALT'{f6f6d9} щоб взяти боєприпаси зі складу");
	}
	else if(areaid == gAreas[arArmySFSklad]) {
		if(GetTeamID(playerid) == fARMYSF) {
			new gunamount = GetPVarInt(playerid,"carrygun")*500;
			if(gunamount) {
				DeletePVar(playerid,"carrygun");
				RemovePlayerAttachedObject(playerid,1);
				ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
				if(FI[fARMYSF][fMats] + gunamount > 1000000) return ErrorMessage(playerid,"На складі недостаточно места");
				else FI[fARMYSF][fMats] += gunamount;
			}
		}
	}
	else if((areaid == gAreas[arOil][0] || areaid == gAreas[arOil][1]) && TI[playerid][tJobOil][0] && !TI[playerid][tJobOil][1] && pstate == PLAYER_STATE_ONFOOT) {
		ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
		SetPlayerAttachedObject(playerid, 8 , 3632, 1, 0.051999,0.418000,-0.008999, -85.699913,94.600028,-5.600045, 0.701999,0.684000,0.805999);
		SetTimerEx("CarryDelay",1000,false,"i",playerid);
		RemovePlayerMapIcon(playerid, 2);
		SetPlayerMapIcon(playerid,1,281.5784,1446.3842,10.6189,56,-1,MAPICON_GLOBAL);
		TI[playerid][tJobOil][1] = true;
	}
	else if(areaid == gAreas[arOil][2] && TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && pstate == PLAYER_STATE_ONFOOT) {
		if(GetPVarInt(playerid,"pOff9") > gettime()) return 1;
		TI[playerid][tJobOil][1] = false;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		TI[playerid][tJobSalary] += WorkSalary[1];

		if(QuestProgress[playerid][3] < 10 && AcceptQuest[playerid][3] != 0) QuestProgress[playerid][3] ++,save_quest(playerid,3);
		if(QuestProgress[playerid][3] == 10 && AcceptQuest[playerid][3] != 0) {
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Квест",""W"Ви успішно перенесли 10 бочок з нафтою. Це завдання можна закінчити та забрати за нього нагороду","Закрити","");
			NextStapQI(playerid,3);
		}
		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);

		SetPlayerMapIcon(playerid,1,415.0787,1405.1608,8.5656,11,-1,MAPICON_GLOBAL);
		SetPlayerMapIcon(playerid,2,401.2273,1456.7953,8.1906,11,-1,MAPICON_GLOBAL);
		if(PlayerInfo[playerid][pProgress] <= 150) PlayerInfo[playerid][pProgress]++;
		oilsklad ++;
		SetPVarInt(playerid,"pOff9",gettime()+51);
	}
	else if((areaid == gAreas[arOil][3] || areaid == gAreas[arOil][4]) && TI[playerid][tJobOil][0] && !TI[playerid][tJobOil][1] && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 50) {
		object_oil[playerid] = CreateDynamicObject(3633, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
		AttachDynamicObjectToVehicle(object_oil[playerid], GetPlayerVehicleID(playerid), 0.000, 0.670, 0.400, 0.000, 0.000, 0.000);
		RemovePlayerMapIcon(playerid, 1),RemovePlayerMapIcon(playerid, 2);
		SetPlayerMapIcon(playerid,1,274.2075,1447.0771,10.6189,56,-1,MAPICON_GLOBAL);
		TI[playerid][tJobOil][1] = true;
	}
	else if(areaid == gAreas[arOil][5] && TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 50) {
		if(GetPVarInt(playerid,"pOff9") > gettime()) return 1;
		SetPVarInt(playerid,"pOff9",gettime()+40);
		TI[playerid][tJobOil][1] = false;
		DestroyDynamicObject(object_oil[playerid]);
		RemovePlayerMapIcon(playerid, 1);//удаляем склад
		SetPlayerMapIcon(playerid,1,525.7095,1470.6411,4.0315,11,-1,MAPICON_GLOBAL);
		SetPlayerMapIcon(playerid,2,481.0192,1308.8954,9.3572,11,-1,MAPICON_GLOBAL);
		TI[playerid][tJobSalary] += floatround(WorkSalary[1]*1.5);

		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
		oilsklad += 3;
	}
	else if(areaid >= sad_area[0] && areaid <= sad_area[119-1] && pstate == PLAYER_STATE_ONFOOT) {
		if(!TI[playerid][tJobSad][0]) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
		new id = areaid - sad_area[0];
		if(SI[id][sad_temp] != 0 && !GetString(SI[id][sad_fermer],player_name[playerid])) return ErrorMessage(playerid,"Ви не доглядаєте це дерево");
		if(SI[id][sad_temp] == 0 || SI[id][sad_temp] == 4) {
			if(SI[id][sad_temp] == 0) {
				if(GetPVarInt(playerid,"sad_uxod") == 1) return ErrorMessage(playerid,"Ви уже доглядаєте за деревом");
				if(!GetPVarInt(playerid,"bailer")) return ErrorMessage(playerid,"У Вас немає лійки в руках");
				if(GetPVarInt(playerid,"bailer_3")) return ErrorMessage(playerid,"Ви не можете полити дерево з ящиком яблок в руках");
				JobTempProcess[playerid] = 1;
				SI[id][sad_temp] = 1;
				SetString(SI[id][sad_fermer],player_name[playerid]);
				new string[70];
				format(string,sizeof(string),"Дерево\nСтадія - сохне\nФермер - %s",SI[id][sad_fermer]);
				UpdateDynamic3DTextLabelText(SI[id][sad_3dtext],-1,string);
			}
			if(SI[id][sad_temp] == 4 && GetString(SI[id][sad_fermer],player_name[playerid])) {
				if(!GetPVarInt(playerid,"bailer_2")) return ErrorMessage(playerid,"У Вас немає ящика для збору яблук в руках");
				JobTempProcess[playerid] = 2;
				if(SI[id][sad_temp] == 4) {
					if(GetPVarInt(playerid,"bailer_4")) return 1;
					SetPVarInt(playerid,"bailer_4",1);
				}
			}
			TI[playerid][tJobSad][1] = id+1;
			TI[playerid][tProcess][0] = 0;
			TI[playerid][tProcess][1] = 10;
			PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
			for(new YN = 0;YN < 3;YN++) {
				TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			RandomYareNforJOBS(playerid);
		}
		else ErrorMessage(playerid,"Чекайте стадії - збір яблок");
	}
	else if(areaid == gAreas[arLoadProds][0]) {
		if(PlayerInfo[playerid][pJob] != 3) return 1;
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 456) {
			D(playerid,dProdGet,DSI, ""YELLOW"Покупка продуктов","\n\n"W"Введіть кількість продуктів для покупки:\nПримечание: "ORANGE"1"W" продукт = "GREEN"$1\n\n","Купити","Відміна");
		}
	}
	else if(areaid == gAreas[arLoadProds][1]) {
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 403) {
			D(playerid,dProdGet,DSI, ""YELLOW"Покупка бензина","\n\n"W"Введіть кількість літрів для покупки:\nПримечание: "ORANGE"1"W" литр = "GREEN"$1\n\n","Купити","Відміна");
		}
	}
	else if(areaid == theftarea[playerid][0]) { //угон
	   	DisablePlayerCheckpoint(playerid);
  		DestroyDynamicArea(areaid);
	   	if(theftCheck[playerid][1] == 1){
			new Float:vehx, Float:vehy, Float:vehz;
			GetVehiclePos(theftIDveh[playerid][0], vehx, vehy, vehz);
			if(!PlayerToPoint(5.0,playerid,vehx, vehy, vehz)){
				GetCoordDoorVehicle(theftIDveh[playerid][0], vehx, vehy, vehz);
				theftCheck[playerid][0] = CreateDynamicCP(vehx,vehy,vehz, 1.0,0,0,playerid);
			}
			else {

			}
		}
		else if(theftCheck[playerid][1] == 4){
			new houseid = PlayerInfo[theftIDveh[playerid][1]][pHouse]-1;
			theftCheck[playerid][0] = CreateDynamicCP(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 1.0,0,0,playerid);
		}
 		else {
			switch(theftarea[playerid][1]){
				case 0: theftCheck[playerid][0] = CreateDynamicCP(2415.5767,-2467.5305,13.6250, 2.0,0,0,playerid);
				case 1: theftCheck[playerid][0] = CreateDynamicCP(951.9211,2070.2153,10.8203, 2.0,0,0,playerid);
				case 2: theftCheck[playerid][0] = CreateDynamicCP(-2117.7361,-249.2475,35.3203, 2.0,0,0,playerid);
			}
		}
	}	
	else if(areaid == gAreas[arSad] && pstate == PLAYER_STATE_ONFOOT) {
		if(!TI[playerid][tJobSad][0]) return 1;
		if(!GetPVarInt(playerid,"bailer_3")) return ErrorMessage(playerid,"Ви не собрали урожай");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid,4);
		ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
		DeletePVar(playerid,"bailer_3");
		TI[playerid][tJobSalary] += TI[playerid][tJobSad][2]*WorkSalary[3];
		TI[playerid][tJobSad][2] = 0;
		new string[24];
		format(string,sizeof(string),"MONEY:_$%d",TI[playerid][tJobSalary]);
		PlayerTextDrawSetString(playerid,work_td[playerid][1],string);
	}
	else if(areaid >= gAreas[arClothes][0] && areaid <= gAreas[arClothes][8] && TI[playerid][tClothesWork][0]) {
		if(TI[playerid][tClothesWork][1] != 2) return ErrorMessage(playerid,"Необхідно взяти заготовку");
		new id;
		for(new i ;i < 9;i++) {
			if(gAreas[arClothes][i] == areaid) id = i;
		}
		SetPVarInt(playerid,"clothes_id",id);

		JobTempProcess[playerid] = 4;
		TI[playerid][tProcess][0] = 0;
		TI[playerid][tProcess][1] = 10;
		PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
		for(new YN = 0;YN < 3;YN++) {
			TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		RandomYareNforJOBS(playerid);
	}
	else if(areaid == gAreas[arPobeg][0]) {
		D(playerid,DIALOG_NONE,DSM, ""YELLOW"Побег",""W"Думки...\n\nТак, с этого поганого места я выбрался..\nПотрібно где-то найти лодку, щоб покинуть цей чёртов остров..\nТак ще й часу мало..\nПоторопиться бы...","Закрити","");
		SetPlayerPosAC(playerid,-2255.0234,1785.5853,36.6691,0,0);
		SetPlayerFacingAngle(playerid,121.4531);
		SetCameraBehindPlayer(playerid);
		FreezePlayerForTime(playerid,3);
	}
	else if(areaid == gAreas[arPobeg][1] && TI[playerid][tAlcotraz][0] > 0) {
		D(playerid,DIALOG_NONE,DSM, ""YELLOW"Побег",""W"Думки...\n\nУРА!! СВОБОДА!!!","Закрити","");
		SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
			A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
		}
		else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
		PlayerInfo[playerid][pSearch] = 0;
		SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pSearch]);
		PlayerInfo[playerid][pJail] = 0;
		UpdatePlayerData(playerid,"pJail",0);
		PlayerInfo[playerid][pJailTime] = 0;
		UpdatePlayerData(playerid,"pJailTime",0);
		TI[playerid][tAlcotraz][0] = 0;
	}
	else if(areaid >= gAreas[arManiken][0] && areaid <= gAreas[arManiken][17] && TI[playerid][tAlcotraz][2] && TI[playerid][tAlcotraz][1]) {
		new id;
		for(new i ;i < 18;i++) {
			if(gAreas[arManiken][i] == areaid) id = i;
		}
		maniken[playerid] = CreateDynamicObject(3092,alcatraz_maniken[id][0],alcatraz_maniken[id][1],alcatraz_maniken[id][2],90.00,-90.00,90.00);
		TI[playerid][tAlcotraz][1] = 0;
	}
	else if(areaid >= gAreas[arGripp][0] && areaid <= gAreas[arGripp][2]) {
		if(PlayerInfo[playerid][pDisease][0] || PlayerInfo[playerid][pDDisease] || GetPlayerVirtualWorld(playerid) != 0) return 1;
		if(TI[playerid][tDMArea][0] || TI[playerid][tGunArea][0]) return 1;
		new rand = random(9);
		if(rand > 3) return 1;
		if(areaid == gAreas[arGripp][0] && disease == 0) return send_disease(playerid);
		else if(areaid == gAreas[arGripp][1] && disease == 1) return send_disease(playerid);
		else if(areaid == gAreas[arGripp][2] && disease == 2) return send_disease(playerid);
	}
	else if(areaid == gAreas[arPerfomans][0] || areaid == gAreas[arPerfomans][1]) {
		if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return 1;
		if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return 1;
		D(playerid, D_TUNE_LIST, DSL, ""YELLOW"Perfomance Tune", ""YELLOW"1."W" Покращення двигуна\n"YELLOW"2."W" Покращення гальмів", "Далі", "Закрити");
	}
	else if(WD::[0][woodZone] <= areaid <= WD::[MAX_WOODS - 1][woodZone] && pstate == PLAYER_STATE_ONFOOT) {
	    new j = areaid - WD::[0][woodZone];
		if(TI[playerid][tJobWood][1]) return 1;
	    if(TI[playerid][tJobWood][0]) {
			if(TI[playerid][tJobWood][3]) {
				if(WD::[j][woodUse] != false) return ErrorMessage(playerid,"Дерево уже кто-то пилит");
				TI[playerid][tJobWood][2] = j;
				WD::[j][woodUse] = true;
				JobTempProcess[playerid] = 5;
				TI[playerid][tProcess][0] = 0;
				TI[playerid][tProcess][1] = 10;
				PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
				for(new YN = 0;YN < 3;YN++) {
					TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				RandomYareNforJOBS(playerid);
			}
	    }
	}
	else if(areaid == RobPlayer[playerid][RobArea]) {
		if(RobPlayer[playerid][AttachObj]) return 1;
		ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
		switch(random(14)) {
			case 0: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2317, 4, 0.1169, -0.4219, 0.0739, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV5" 
			case 1: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1518, 4, 0.0829, -0.4219, 0.0739, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV4" 
			case 2: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2648, 4, 0.0689, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV3" 
			case 3: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2318, 4, 0.0689, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV2" 
			case 4: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2320, 4, 0.1299, -0.4219, 0.0739, -68.1999, -115.2999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "TV1" 
			case 5: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 19921, 4, 0.3669, -0.5089, 0.0979, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "yashik" 
			case 6: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1738, 4, 0.1219, -0.4249, 0.0419, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "truba" 
			case 7: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2124, 4, 0.1580, -0.4499, 0.0710, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "stul2" 
			case 8: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2120, 4, 0.2660, -0.3600, 0.1139, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "stul" 
			case 9: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2102, 4, 0.3619, -0.3669, 0.1609, -64.8999, -120.6999, -72.7999, 0.9789, 0.9900, 1.0000, 0, 0); // "muzlo" 
			case 10: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2421, 4, 0.2540, -0.1539, 0.3339, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "Mikrov" 
			case 11: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 1727, 4, 0.5619, -0.2700, -0.1969, -64.8999, -120.6999, -72.7999, 0.7850, 0.7200, 0.6640, 0, 0); // "kreslo" 
			case 12: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 19614, 4, 0.3109, -0.2999, 0.1609, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "huyznaetcheeto" 
			case 13: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 2226, 4, 0.3699, -0.3359, 0.1049, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "bumbox" 
			case 14: RobPlayer[playerid][AttachObj] = SetPlayerAttachedObject(playerid, 0, 11743, 4, 0.3109, -0.2999, 0.1609, -66.5999, -120.6999, -78.2999, 1.0000, 1.0000, 1.0000, 0, 0); // "blender"
		}
		RobPlayer[playerid][RobRand]--;
		new string[65];
		format(string,sizeof(string),"Доступно техники: "O"%iед:",RobPlayer[playerid][RobRand]);
		UpdateDynamic3DTextLabelText(RobPlayer[playerid][RobText], COLOR_WHITE, string);
		if(RobPlayer[playerid][RobRand] == 0) {
			DestroyDynamicPickup(RobPlayer[playerid][RobPickup]);
			DestroyDynamicArea(RobPlayer[playerid][RobArea]);
			DestroyDynamic3DTextLabel(RobPlayer[playerid][RobText]);
		}
	}
	else if(areaid == gz_area) {
		for(new i = 0; i < TOTALGZ; i++) {
			if(GZInfo[i][ZoneOnBattle] == 1 && !infight[playerid] && GZInfo[i][gTime] > 300) {
				if(PlayerInfo[playerid][pMember] == GZInfo[i][gNapad] || PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad]) {
					TextDrawShowForPlayer(playerid, inFigh);
					infight[playerid] = true;
				}
			}
		}
	}
	if(IsAGang(playerid) || IsAArm(playerid) || IsAMafia(playerid)) {
		for(new i = GetVehiclePoolSize()+1; --i != 0;) {
			if(areaid == VG[i][vgArea]) {
				if(VG[i][vgLoading] == true && GetPVarInt(playerid,"carrygun")) {
					new gunamount = GetPVarInt(playerid,"carrygun");
					DeletePVar(playerid,"carrygun");
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					switch(GetVehicleModel(i)) {
						case 433: if(VG[i][vgAmount][0] + gunamount > 70) return ErrorMessage(playerid,"Недостаточно места"),FI[fARMYLV][fMats] += 500;
						case 482: if(VG[i][vgAmount][0] + gunamount > 30) return ErrorMessage(playerid,"Недостаточно места"),FI[fARMYLV][fMats] += 500;
						case 573: if(VG[i][vgAmount][0] + gunamount > 200) return ErrorMessage(playerid,"Недостаточно места");
					}
					if(gunamount) VG[i][vgAmount][0] += gunamount;
					
					new string[64];
					switch(GetVehicleModel(i)) {
						case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[i][vgAmount][0]);
						case 482: format(string,sizeof(string),"Ящиков: "O"%i/30",VG[i][vgAmount][0]);
						case 573: format(string,sizeof(string),"Ящиков: "O"%i/200",VG[i][vgAmount][0]);
					}
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
				}
				else if(VG[i][vgUnloading] == true && !GetPVarInt(playerid,"carrygun")) {
					if(VG[i][vgAmount][0] < 1) return ErrorMessage(playerid,"В автомобиле недостаточно боєприпасів");
					VG[i][vgAmount][0] -= 1;
					SetPVarInt(playerid,"carrygun",1);
					new string[64];
					switch(GetVehicleModel(i)) {
						case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[i][vgAmount][0]);
						case 482: format(string,sizeof(string),"Ящиков: "O"%i/30",VG[i][vgAmount][0]);
					}
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);

					ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
					SetTimerEx("CarryDelay",1000,false,"i",playerid);
					SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				}
				else if(VG[i][vgRobHouse] == true && RobPlayer[playerid][AttachObj]) {
					new gunamount = RobPlayer[playerid][AttachObj];
					RemovePlayerAttachedObject(playerid,1);
					ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
					if(gunamount) VG[i][vgAmount][0] += gunamount;
					RobPlayer[playerid][AttachObj] = 0;
					RemovePlayerAttachedObject(playerid, 0);
					ClearAnims(playerid);
					new string[64];
					format(string,sizeof(string),"Техника: "O"%i од",VG[i][vgAmount][0]);
					UpdateDynamic3DTextLabelText(VG[i][vgText],COLOR_WHITE,string);
				}
				return true;
			}
		}
		if(areaid == invent_area && invent_zone_id != -1) {
			if(invent_mats < 5000) return ErrorMessage(playerid, "На корабле недостаточно боєприпасів");
			if(!GetPVarInt(playerid,"carrygun")) {
				invent_mats -= 5000;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
			}
		}
	}
	new state_ship = GetPlayerState(playerid);
	new state_vehicle = GetPlayerVehicleID(playerid);
	foreach(new x:Player) {
		if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
		if(areaid == GetPVarInt(x,"Ships") && state_ship == PLAYER_STATE_DRIVER) {
			new panels, tires;
			GetVehicleDamageStatus(state_vehicle, panels, doors, lights, tires);
			UpdateVehicleDamageStatus(state_vehicle, panels, doors, lights, 15);
			GameTextForPlayer(playerid, "~r~stalling", 1000, 6);
			break;
		}
	}
	for(new c = 0; c < MAX_TABLES_DICE; c++) {
		if(areaid==InfoDice[c][dice_area]) GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~PRESS ENTER",3000,3);
	}
	return true;
}
public OnPlayerLeaveDynamicArea(playerid, areaid) {
	if(areaid == BoxBum[bbBox])
	{
		if(bumboxx[playerid])
		{
			DestroyDynamic3DTextLabel(bumboxtext[playerid]);
			DestroyDynamicObject(bumboxx[playerid]);
			bumboxx[playerid] = 0;
			RadioID[playerid] = 0;
			SendClientMessage(playerid,COLOR_RED,"[Інформація] {FFFFFF}Вы далеко отошли от бумбокса/колонки, он вернулся к вам.");
		}
	}
	if(areaid >= gHouseArea[0] && areaid <= gHouseArea[gHouseCount]) {
		TI[playerid][tSelectHouse] = 0;
	}
	else if(areaid >= b_area[0] && areaid <= b_area[gBusinessCount - 1]) {
		if(TI[playerid][tTPpick] == false) TI[playerid][tSelectedBusinessID] = -1;
	}
	else if(areaid >= sad_area[0] && areaid <= sad_area[119-1]) {
		if(!TI[playerid][tJobSad][0] || !TI[playerid][tJobSad][1]) return 1;
		new field = TI[playerid][tJobSad][1]-1;
		if(SI[field][sad_temp] == 1) {
			UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Відсутнє");
			SI[field][sad_temp] = 0;
		}
		TI[playerid][tJobSad][1] = 0;
		DeletePVar(playerid,"bailer_4");
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		JobTempProcess[playerid] = 0;
	}
	if(areaid >= gAreas[arClothes][0] && areaid <= gAreas[arClothes][8] && TI[playerid][tClothesWork][0]) {
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		if(GetPVarInt(playerid,"id_object")) {
			DestroyDynamicObject(GetPVarInt(playerid,"id_object"));
			DeletePVar(playerid,"id_object");
		}
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		JobTempProcess[playerid] = 0;
	}
	else if(Casino_Flag[playerid][select_casino_table] != -1) {
		if(!InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start]) {
			ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
			Casino_Flag[playerid][select_casino_table] = -1;
		}
	}
	else if(areaid >= gAreas[arNews][0] && areaid <= gAreas[arNews][1] && TI[playerid][tEther]) {
		ether_closed(playerid);
		TI[playerid][tEther] = false;
		SendOk(playerid,"Ви вышли из прямого эфира");
	}
	else if(WD::[0][woodZone] <= areaid <= WD::[MAX_WOODS - 1][woodZone]) {
		if(TI[playerid][tJobWood][2] != -1) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
			TI[playerid][tProcess][0] = -1;
			TI[playerid][tProcess][1] = -1;
			for(new YN = 0;YN < 3;YN++) {
				TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
				if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
			}
			JobTempProcess[playerid] = 0;
			if(TI[playerid][tJobWood][1]) TogglePlayerControllable(playerid,true);
			TI[playerid][tJobWood][2] = -1;
		}
	}
	else if(areaid >= area_golod[0] && areaid <= area_golod[20]) {
		if(time_gamegolod && player_to_golod[playerid]) {
			new Float:POS[3];
		    GetPlayerPos(playerid, POS[0], POS[1], POS[2]);
		    CreateExplosionForPlayer(playerid, POS[0], POS[1], POS[2], 7, 5.0);
		}
	}
	else if(areaid >= gAreas[arJob][0] && areaid <= gAreas[arJob][5]) {
		if(TI[playerid][tJobOil][0]) EndOil(playerid);
		//if(TI[playerid][tJobSad][0]) EndSad(playerid);
		if(TI[playerid][tJobGun][0]) EndGun(playerid);
		if(GetPVarInt(playerid,"fish_place")) EndFish(playerid);
		if(TI[playerid][tJobWood][0]) EndWood(playerid);
		if(TI[playerid][tDMArea][0]) pc_cmd_power(playerid);
	}
	else if(areaid == ShootingArea[playerid]) { //тир зона
		new mapshooting, maxbox;
		switch(GetPVarInt(playerid,"shootingpl")) {
			case 67: mapshooting = 0, maxbox = 4;
			case 78: mapshooting = 11, maxbox = 8;  // lva
		}
		RemovePlayerAttachedObject(playerid, 7);
		SendOk(playerid, "Ви слишком далеко отошли от места, Ваша тренировка окончена");
		for(new i = 0; i < 2; i++)  DestroyDynamicObject(BottleObject[playerid][i]);
		ShootingStart[playerid] = 0;
		ShootingCount[playerid] = 0;
		for(new i = 0; i < maxbox; i++) {
			if(BoxPlayerID[mapshooting][i] == playerid) { 
				BoxStatus[mapshooting][i] = 0;
				BoxPlayerID[mapshooting][i] = -1;
				break;
			}
		}
	}
	else if(areaid == gz_area) {
		for(new i = 0; i < TOTALGZ; i++) {
			if(GZInfo[i][ZoneOnBattle] == 1 && infight[playerid] && GZInfo[i][gTime] > 300) {
				if(PlayerInfo[playerid][pMember] == GZInfo[i][gNapad] || PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad]) {
					TextDrawHideForPlayer(playerid, inFigh);
					infight[playerid] = false;
				}
			}
		}
	}
	return 1;
}

public OnDynamicObjectMoved(objectid) {
	for(new id = 0; id < MAX_OBJECT_MOVED; id++) {
		if(objectid == moved_info[id][moved_id] && moved_info[id][status_moved]) {
			moved_info[id][status_moved]=false;
			SetTimerEx("CheckObjectBarrier", 6000, 0, "i", id);
			return 1;
		}
	}
	if(GetGVarType("WoodConv",objectid) == 1) {
    	DeleteGVar("WoodConv",objectid);
    	DestroyDynamicObject(objectid);
		new rand = Random(10,15);
		woodsklad += rand;
		new string[72];
		format(string,sizeof(string),"Древесины На складі: "ORANGE"%d кг",woodsklad);
		UpdateDynamic3DTextLabelText(wood_3dtext,-1,string);
    }
    for(new id = 0; id < sizeof(pickup_game_golod_2); id++) {
	    if(objectid == objgolod[id]) {
	    	DestroyDynamicObject(objectid);
	    	objgolod[id] = -1;
	    	pickups_game_golod_2[id] = CreateDynamicPickup(11745,23,pickup_game_golod_2[id][0],pickup_game_golod_2[id][1],pickup_game_golod_2[id][2],-1,-1);
	    }
	}
	for(new i = 0; i < sizeof(object_park_ls); i++) {
	    if(objectid == object_park_ls[i]) {
		    if(status_restore_check_job_mower[i] == false) {
		    	MoveDynamicObject(object_park_ls[i],check_job_mower[i][0], check_job_mower[i][1], check_job_mower[i][2],0.001,
				    	check_job_mower[i][3], check_job_mower[i][4], check_job_mower[i][5]);
	    		status_restore_check_job_mower[i] = true;
			}
			else {
			    status_check_job_mower[i] = false;
	            status_restore_check_job_mower[i] = false;
	            if(i <= 32) check_taxi_park--;
				if(i > 32 && i <= 79) check_verona_beach--;
				if(i > 79 && i <= 138) check_white_house--;
				if(i > 138 && i <= 176) check_medic_ls--;
				if(i > 176 && i <= 226) check_mayor_ls--;
				if(i > 226 && i <= 322) check_glenpark_1--;
				if(i > 322) check_glenpark_2--;
			}
		}
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason) {
	leave_robhouse(playerid);
	for(new i;i<10;i++) {
	    if(ChetInfo[i][cheatid1]==playerid) {
			TextDrawSetString(CheatText[i], "-");
			Cheat1 ++;
			if(Cheat1 > 9) Cheat1 = 0;
		}
 	}
	if(actorereg[playerid][0] != -1) DestroyActor(actorereg[playerid][0]);
	if(actorereg[playerid][1] != -1) DestroyActor(actorereg[playerid][1]);
	if(maniken[playerid] != -1) DestroyDynamicObject(maniken[playerid]);
	if(TI[playerid][tRaceID] != INVALID_VEHICLE_ID) srace_end(playerid,1);
	if(player_to_game[playerid] == 1) {
		players_in_game--;
		DelGun(playerid);
	}
	if(TI[playerid][tDuel] != -1) {
		if(DI[TI[playerid][tDuel]][duel_start] == true) end_duel(playerid,1);
		else duel_delete(TI[playerid][tDuel],false);
	}
	//========Відновлення на місце виходу, збереження в БД після вихода===========
	if(GetPlayerInterior(playerid)) { //Якщо гравець вийшов із гри в інтер'єрі
		PlayerInfo[playerid][pSpawnPos][0] = 0.0; //Присвоюємо значній 0 щоб не міг відновитися.
		PlayerInfo[playerid][pSpawnPos][1] = 0.0;
		PlayerInfo[playerid][pSpawnPos][2] = 0.0;
		PlayerInfo[playerid][pSpawnPos][3] = 0.0;
	}
	else {
	GetPlayerPos(playerid, PlayerInfo[playerid][pSpawnPos][0], PlayerInfo[playerid][pSpawnPos][1], PlayerInfo[playerid][pSpawnPos][2]); //Дізнаємось координат гравця та записуємо в масив
	GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pSpawnPos][3]); //Дізнаємось кут повороту гравця та записуємо в масив
	}
	SaveExitPosition(playerid);
	//=====================================================================
	if(TI[playerid][tCashDM]) {
		GiveMoney(playerid,TI[playerid][tCashDM],"возвращение взноса сумасшедших войн");
		TI[playerid][tCashDM] = 0;
		new query[100];
		mysql_format(connects, query, sizeof(query), "DELETE FROM `dm_arena` WHERE BINARY `Name` = '%s'", player_name[playerid]);
		mysql_tquery(connects, query, "", "");
	}
	if(player_to_race_lv[playerid] != 0) {
		players_in_race_lv--;
		player_to_race_lv[playerid] = 0;
		if(player_to_race_lv_id[playerid] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(player_car_race_lv_id[playerid]);
			player_to_race_lv_id[playerid] = INVALID_VEHICLE_ID;
		}
	}
	if(TI[playerid][tCashRace]) {
		GiveMoney(playerid,TI[playerid][tCashRace],"возвращение взноса безумных гонок");
		TI[playerid][tCashRace] = 0;
	}
	if(player_to_golod[playerid] == 1) {
		players_in_golod--;
		golod_deatch(playerid,players_in_golod);
		DelGun(playerid);
	}
	if(GetPVarInt(playerid, "pursuit") == 1)
{
    PlayerInfo[playerid][pJail] = 1;
    PlayerInfo[playerid][pJailTime] = 3600;
    PlayerInfo[playerid][pSearch] = 0;
	UpdatePlayerData(playerid,"pSearch",PlayerInfo[playerid][pSearch]);
}
	if(bumboxx[playerid] != 0)
	{
		DestroyDynamicObject(bumboxx[playerid]);
		DestroyDynamic3DTextLabel(bumboxtext[playerid]);
		bumboxx[playerid] = 0;
		RadioID[playerid] = 0;
		foreach(Player,i)
		{
			if(IsPlayerInRangeOfPoint(playerid,30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
		}
	}
	for(new i = 0; i < 14; i++) {
		if(VacancyInfo[i][VacancyCreator] == playerid) {
			VacancyInfo[i][VacancyStatus] = false;
			VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;
		}
	}
	TI[playerid][tDiceID] = INVALID_PLAYER_ID;
	TI[playerid][tDiceIDs] = INVALID_PLAYER_ID;

	ether_closed(playerid);
	if(reason == 1 && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) {
		arrest(playerid);
		static const f_str[] = "%s вийшов из ігри во время задержания и был посажен в КПЗ";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
		format(string,sizeof(string), f_str, player_name[playerid]);
		SendClientMessageToAll(CBADINFO,string);
	}
	if(car_autoschool[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(car_autoschool[playerid]);
		car_autoschool[playerid] = INVALID_VEHICLE_ID;
	}
	if(TI[playerid][tFight] != -1) {
		GiveMoney(playerid,-RingInfo[0][rgPrice],"поражение поединок");
		GiveMoney(TI[playerid][tFight],(RingInfo[0][rgPrice]*2),"победа поединок");
		PlayerSpawn(TI[playerid][tFight]);
		TI[TI[playerid][tFight]][tFight] = -1;
		TI[playerid][tFight] = -1;
		CheckPlayerRing(playerid);
	}
	if(TI[playerid][tSpectr] != INVALID_PLAYER_ID && SERIU[TI[playerid][tSpectr]][sID] == playerid) {
	 	pc_cmd_reoff(TI[playerid][tSpectr],"");
	 	GameTextForPlayer(TI[playerid][tSpectr], "Player Disconected", 700, 3);
	}
	if(avir[playerid] != -1) {
 	    PlayerInfo[playerid][pMember] = TI[playerid][preOrg];
	    PlayerInfo[playerid][pRank] = TI[playerid][preOrgg];
	    avir[playerid] = -1;
	    SERIU[playerid][sID] = -1;
	    TI[playerid][preOrg] = 0;
	    TI[playerid][preOrgg] = 0;
 	}
	if(TI[playerid][tJobWood][0]) {
        RemovePlayerAttachedObject(playerid,9);
        if(TI[playerid][tJobWood][2] != -1) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
        }
    }
	if(TI[playerid][tArendKey] != -1) {
		new v = TI[playerid][tArendKey];
		if(ArendInfo[v][aPlayerID] == playerid) {
			ArendInfo[v][aPlayerID] = INVALID_PLAYER_ID;
            SetVehicleToRespawn(ArendInfo[v][aID]);
		}
    }
	if(TI[playerid][tJobSad][1]) {
		if(SI[TI[playerid][tJobSad][1]-1][sad_temp] == 1) {
			UpdateDynamic3DTextLabelText(SI[TI[playerid][tJobSad][1]-1][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Відсутнє");
			SI[TI[playerid][tJobSad][1]-1][sad_temp] = 0;
		}
	}
	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) {
	    TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SendOk(GotoInfo[playerid][gtID],"Ви были выпущены с конвоя");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	if(p_mh[playerid]!=PlayerText:-1) {
		PlayerTextDrawHide(playerid,p_mh[playerid]);
		PlayerTextDrawDestroy(playerid,p_mh[playerid]);
		p_mh[playerid]=PlayerText:-1;
	}
	CheckPlayerGoCuff(playerid);
	if(ReportID[playerid] != -1) {
		ReportSlot[ReportID[playerid]] = -1;
		ReportID[playerid] = -1;
	}
	if(ReportIDAsk[playerid] != -1) {
		ReportSlotAsk[ReportIDAsk[playerid]] = -1;
		ReportIDAsk[playerid] = -1;
	}
	for(new i;i<MAX_ASK;i++) {
		if(PlayerReportAsk[i] == -1) continue;
		if(PlayerReportAsk[i] == playerid) ReportDellAsk(i);
	}
	if(TI[playerid][tYoutubcar] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TI[playerid][tYoutubcar]);
		TI[playerid][tYoutubcar] = INVALID_VEHICLE_ID;
	}
	if(rep_system) {
		for(new i;i<MAX_REPORTS;i++) {
			if(PlayerReport[i] == -1) continue;
			if(PlayerReport[i] == playerid) ReportDell(i);
		}
	}
	if(fam_lable[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(fam_lable[playerid]);
		fam_lable[playerid] = Text3D:-1;
	}
	if(TI[playerid][tDMArea][0] || TI[playerid][tGunArea][0]) {
		pc_cmd_power(playerid);
	}
	for(new i; i<3; i++) {
		if(calls_ether[i] == playerid) {
			calls_ether[i] = INVALID_PLAYER_ID;
			SendOk(calls_news[i], "Гравець вийшов из ігри");
		}
		if(calls_news[i] == playerid && calls_ether[i] != INVALID_PLAYER_ID) {
			SendOk(calls_ether[i], "Ведущий вийшов из ігри");
			PhoneStatus(calls_ether[i],false);
			calls_ether[i] = INVALID_PLAYER_ID;
			calls_news[i] = INVALID_PLAYER_ID;
		}
	}
	if(GetPVarInt(playerid,"adchecking_fix")) {
		gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	if(Casino_Flag[playerid][select_casino_table] != -1 ){
		ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		Casino_Flag[playerid][select_casino_table] = -1;
	}
	if(PTD_DiceStat[playerid]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,PTD_DiceStat[playerid]);
		PTD_DiceStat[playerid]=PlayerText:-1;
	}
	if(buy_player_skins[playerid]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,buy_player_skins[playerid]);
		buy_player_skins[playerid]=PlayerText:-1;
	}
	if(skill_player_td[playerid][0]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,skill_player_td[playerid][0]);
		skill_player_td[playerid][0]=PlayerText:-1;
	}
	if(skill_player_td[playerid][1]!=PlayerText:-1){
		PlayerTextDrawDestroy(playerid,skill_player_td[playerid][1]);
		skill_player_td[playerid][1]=PlayerText:-1;
	}
	if(TI[playerid][tAlcotraz][0]) {
		PlayerInfo[playerid][pJailTime] = 4500;
	}
	if(GetPVarInt(playerid,"block")) {
		if(ObjectShip[playerid] != 0x7F800000) {
			DestroyDynamicObject(ObjectShip[playerid]);
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DestroyDynamic3DTextLabel(ShipText[playerid]);
	}
	if(TI[playerid][tPhoneCaller] == playerid || TI[playerid][tPhoneCalled] == playerid) {
		new id;
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];
		else return SendClientMessage(playerid,COLOR_LIGHTRED,"Помилка (#112)");
		SendOk(id,"Абонент отключился, связь прекращена");
		PhoneStatus(id,false);
		TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[id][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[id][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[playerid][tPhone] = false;
		TI[id][tPhone] = false;
	}
	if(thefttime[playerid] != 0) { // угон
		DestroyDynamicArea(theftarea[playerid][0]);
		DisablePlayerCheckpoint(playerid);
		DestroyDynamicCP(theftCheck[playerid][0]);
		A_DestroyVehicle(theftIDveh[playerid][0]);
		theftIDveh[playerid][0] = INVALID_VEHICLE_ID;
		if(theftplayer[theftIDveh[playerid][1]][0] != 1010) theftplayer[theftIDveh[playerid][1]][0] = 1010;
		if(theftveh[playerid][0] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(theftveh[playerid][0]);
			theftveh[playerid][0] = INVALID_VEHICLE_ID;
		}
		theftplayer[playerid][0] = 1010;
		theftplayer[playerid][1] = 0;
		theftCheck[playerid][1] = 0;
		PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
		thefttime[playerid] = 0;
		if(PlayerInfo[playerid][ptheftExp] == 0) {
			if(PlayerInfo[playerid][ptheftSkill] != 0) PlayerInfo[playerid][ptheftSkill]--, UpdatePlayerData(playerid,"theftSkill",PlayerInfo[playerid][ptheftSkill]);
			PlayerInfo[playerid][ptheftExp] = TheftSkillMax[PlayerInfo[playerid][ptheftSkill]]-1, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
		} 
		else {
			if(PlayerInfo[playerid][ptheftExp] != 0) PlayerInfo[playerid][ptheftExp]--, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
		}
	}
	if(youtube_player[playerid] == 1){ //youtube
		youtube_player[playerid] = 0;
		for(new i = 0; i < 100; i++){
			if(youtube[i][you_uid] == PlayerInfo[playerid][pID]) {
				youtube[i][you_name][0] = EOS;
				youtube[i][you_datasub][0] = EOS;
				youtube[i][you_id] = 0;
				youtube[i][you_uid] = 0;
				youtube[i][you_date] = 0;
				youtube[i][you_subsctiptions] = 0;
				youtube[i][you_timestream] = 0;
				break;
			}	
		}
	}
	if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
		gPlayerCars[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
		gPlayerCars[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
		save_car(playerid,0);
		if(theftplayer[playerid][0] == 1010) {
			A_DestroyVehicle(house_car[playerid][0]);
			house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
		if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(house_car[playerid][0]);
			house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
	}
	if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
		gPlayerCars[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
		gPlayerCars[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
		save_car(playerid,1);
	    if(theftplayer[playerid][0] == 1010) {
	    	A_DestroyVehicle(house_car[playerid][1]);
	    	house_car[playerid][1] = INVALID_VEHICLE_ID;
	    }
		if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(house_car[playerid][1]);
			house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
	}
	for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	
	for(new i; i < 16; i++) PlayerTextDrawDestroy(playerid, speedometr[playerid][i]);

	DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
	DMSTATUS[playerid] = Text3D:(0xFFFF);

	format(WantNickChange[playerid],MAX_PLAYER_NAME, "");
	
	new year, month,day;
	getdate(year, month, day);
	new hour, minute, second;
	gettime(hour, minute, second);
	new query[558],string[128];
	
	if(speed_timer[playerid] != -1){
		KillTimer(speed_timer[playerid]);
		speed_timer[playerid] = -1;
	}

	format(query,200,"UPDATE `accounts` SET `pOnline` = '%02d-%02d-%02d' WHERE `pID` = '%d' LIMIT 1",day, month, year,PlayerInfo[playerid][pID]);
	mysql_pquery(connects, query, "", "");

	if(PlayerInfo[playerid][pAdmin] > 0 && dostup[playerid] == 1 || gAdmin[playerid][7] == 1) {
		new saturday = 1310155200, w = gettime(), day_week;
		while(w - saturday > 60 * 60 * 24) {
			w -= 60 * 60 * 24;
			day_week ++;
		}
		while(day_week >= 7) day_week -= 7;
		static const Names_Days[7][22] = {"online_saturday","online_sunday","online_monday","online_tuesday","online_wednesday","online_thursday","online_friday"};

		query = "";
		format(query,sizeof(query),"UPDATE `admin` SET `%s` = '%d', `kick` = '%d', `ban` = '%d', `mute` = '%d', `pm` = '%d', `warn` = '%d', `jail` = '%d',`vig`='%d',`blockadmin`='%d',`rep`='%d',online_status = '0' WHERE `Name` = '%s' LIMIT 1",Names_Days[day_week], gAdminTime[playerid],gAdmin[playerid][0],gAdmin[playerid][1],gAdmin[playerid][2],gAdmin[playerid][3],gAdmin[playerid][4],gAdmin[playerid][5],gAdmin[playerid][6],gAdmin[playerid][7],gAdmin[playerid][8],player_name[playerid]);
		mysql_pquery(connects, query, "", "");

		format(string, sizeof(string), "[A-%d] «{f6f6d9} %s отключился",PlayerInfo[playerid][pAdmin],player_name[playerid]);
		if(gAdmin[playerid][7] != 1) SendAdminMessage(CGOLD, string);
		dostup[playerid] = 0;
	}
	if(IsValid3DTextLabel(gPlayerBusText[playerid])) DestroyDynamic3DTextLabelEx(gPlayerBusText[playerid]);
	if(PlayerMehText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(PlayerMehText[playerid]);
		PlayerMehText[playerid] = Text3D:-1;
	}
	if(PlayerEatText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(PlayerEatText[playerid]);
		PlayerEatText[playerid] = Text3D:-1;
	}
	if(GetPVarInt(playerid,"veh_id_cleaner")) EndGazon(playerid);
	if(GetPVarInt(playerid,"clear_id")) EndClear(playerid);
	if(GetPVarInt(playerid,"bus_id")) EndBus(playerid);
	if(TI[playerid][tJobSad][0]) EndSad(playerid);
	if(TI[playerid][tJobOil][0]) EndOil(playerid);
	if(TI[playerid][tJobGun][0]) EndGun(playerid);
	if(GetPVarInt(playerid,"track_id")) EndTrack(playerid);
	if(GetPVarInt(playerid,"mehjob")) EndMeh(playerid);
	if(GetPVarInt(playerid,"eatjob")) EndEat(playerid);
	if(gPlayerProdText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(gPlayerProdText[playerid]);
		gPlayerProdText[playerid] = Text3D:-1;
	}
	if(gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);

	if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(TK_Trailer[playerid]);
		TK_Trailer[playerid] = INVALID_VEHICLE_ID;
	}
	if(Teleport_Plus[playerid] == 1) Teleport_Plus[playerid] = 0;
	SaveAccount(playerid);
	
	PlayerInfo[playerid][pAdmin] = 0;
	score_number[playerid] = 0;
	TI[playerid][tLogin] = false;
	TI[playerid][tSpawn] = false;
	TI[playerid][tJoined] = false;
	TI[playerid][tSelectSkin] = false;

    mysql_format(connects,query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET `online_status` = '1001' WHERE pID = '%d'",PlayerInfo[playerid][pID]);
 	mysql_tquery(connects,query, "", "");

	PlayerInfo[playerid][pPhone] = 0;

	if(gOnlinePlayer[playerid][0] > 1) {
		format(query,256,"SELECT * FROM online_player WHERE date >= CURDATE() AND accountid = %d",PlayerInfo[playerid][pID]);
		new Cache:result = mysql_query(connects, query);
		new rows = cache_num_rows();
		if(!rows) {
			format(query,sizeof(query),"INSERT INTO online_player (accountid,date,online_sec,afk_sec) VALUES (%d, CURDATE(), %d, %d)", PlayerInfo[playerid][pID], gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0]);
			mysql_tquery(connects,query);
		}
		else {
			format(query,sizeof(query),"UPDATE online_player SET online_sec = %d, afk_sec = %d WHERE accountid = %d AND date >= CURDATE()", gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0], PlayerInfo[playerid][pID]);
			mysql_tquery(connects,query);
		}
		cache_delete(result);
	}
	return true;
}
public OnPlayerDeath(playerid, killerid, reason) {
    DelGun(playerid);
	DisablePlayerCheckpoint(playerid);

	DeletePVar(playerid, "SettingGraffiti");

	if(GetPVarInt(playerid,"ChangingSkin")) {
		A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
		cancel_skin(playerid);
	}

	for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; i++) if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);

	TI[playerid][tMasked] = 0;
	DeletePVar(playerid,"carrygun");
	DeletePVar(playerid,"use_mats");
	DeletePVar(playerid,"takephone");
	DeletePVar(playerid,"takeradio");

	if(IsPlayerInAnyVehicle(playerid)) RemovePlayerFromVehicleAC(playerid);

	if(GetPVarInt(playerid,"adchecking_fix")) {
		gAdvert[GetPVarInt(playerid,"adchecking_fix")-1][adCheking]=false;
		DeletePVar(playerid,"adchecking_fix");
	}
	if(GotoInfo[playerid][gtGoID]!=INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID]!=INVALID_PLAYER_ID) {
	    TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SendOk(GotoInfo[playerid][gtID],"Ви были выпущены с конвоя");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	if(p_mh[playerid]!=PlayerText:-1) {
		PlayerTextDrawHide(playerid,p_mh[playerid]);
		PlayerTextDrawDestroy(playerid,p_mh[playerid]);
		p_mh[playerid]=PlayerText:-1;
	}
	if(thefttime[playerid] != 0) { // угон
		SendOk(playerid,"Ви провалили задание, ваш навык угона понижен.");
		DestroyDynamicArea(theftarea[playerid][0]);
		DisablePlayerCheckpoint(playerid);
		DestroyDynamicCP(theftCheck[playerid][0]);
		A_DestroyVehicle(theftIDveh[playerid][0]);
		theftIDveh[playerid][0] = INVALID_VEHICLE_ID;
		if(theftveh[playerid][0] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(theftveh[playerid][0]);
			theftveh[playerid][0] = INVALID_VEHICLE_ID;
		}
		if(theftplayer[theftIDveh[playerid][1]][0] != 1010) theftplayer[theftIDveh[playerid][1]][0] = 1010;
		theftplayer[playerid][1] = 0;
		theftCheck[playerid][1] = 0;
		PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
		thefttime[playerid] = 0;
		if(PlayerInfo[playerid][ptheftExp] == 0) {
			if(PlayerInfo[playerid][ptheftSkill] != 0) PlayerInfo[playerid][ptheftSkill]--, UpdatePlayerData(playerid,"theftSkill",PlayerInfo[playerid][ptheftSkill]);
			PlayerInfo[playerid][ptheftExp] = TheftSkillMax[PlayerInfo[playerid][ptheftSkill]]-1, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
		} 
		else {
			if(PlayerInfo[playerid][ptheftExp] != 0) PlayerInfo[playerid][ptheftExp]--, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
		}
	}
	if(killerid != INVALID_PLAYER_ID) {
		if(TI[killerid][tDMArea][0] && TI[playerid][tDMArea][0]) {
			new Float:health;
			TI[killerid][tDMArea][1]++;
			TI[playerid][tDMArea][2]++;
			GetPlayerHealth(killerid,health);
			if(health + 25 > 100) SetPlayerHealth(killerid,100);
			else SetPlayerHealth(killerid,health+25);
			new string[156];
			format(string,sizeof(string),"{1bd12f}Вбивств:{ffffff}%d\n{1bd12f}Смертей:{ffffff}%d",TI[playerid][tDMArea][1],TI[playerid][tDMArea][2]);
			UpdateDynamic3DTextLabelText(DMSTATUS[playerid],0xFF6347FF,string);

			format(string,sizeof(string),"{1bd12f}Вбивств:{ffffff}%d\n{1bd12f}Смертей:{ffffff}%d",TI[killerid][tDMArea][1],TI[killerid][tDMArea][2]);
			UpdateDynamic3DTextLabelText(DMSTATUS[killerid],0xFF6347FF,string);
		}
		if(TI[killerid][tGunArea][0] && TI[playerid][tGunArea][0]) {
			new Float:health;
			TI[killerid][tGunArea][1]++;
			TI[playerid][tGunArea][2]++;
			GetPlayerHealth(killerid,health);
			if(health + 25 > 100) SetPlayerHealth(killerid,100);
			else SetPlayerHealth(killerid,health+25);
			if(TI[killerid][tGunArea][1] == 3) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[4], 5000),TI[killerid][tGunArea][3] = 2,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 6) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[3], 5000),TI[killerid][tGunArea][3] = 3,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 9) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[2], 5000),TI[killerid][tGunArea][3] = 4,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 12) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[1], 5000),TI[killerid][tGunArea][3] = 5,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 15) DelGun(killerid), AC_GivePlayerWeapon(killerid, ArenaGun[0], 5000),TI[killerid][tGunArea][3] = 6,TI[killerid][tGunArea][1] = 0;
			else if(TI[killerid][tGunArea][1] == 18) {
				new string[100];
			    format(string, sizeof(string), "Победителем Гонки Вооружений стал - "W"%s",player_name[killerid]);
				foreach(new i:Player) {
					if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
					if(!TI[i][tGunArea][0]) continue;
					SendClientMessage(i,CGOLD,string);
				}
				new query[156];
				format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pWinArea = pWinArea + 1 WHERE pID = '%d'",PlayerInfo[killerid][pID]);
				mysql_tquery(connects,query,"","");
			    ResetGunsArena();
			}
			new string[128];
			format(string,sizeof(string),"{1bd12f}Kills Gun:{ffffff}%d/3\n{1bd12f}Guns:{ffffff}%d/6",TI[playerid][tGunArea][1],TI[playerid][tGunArea][3]);
			UpdateDynamic3DTextLabelText(DMSTATUS[playerid],0xFF6347FF,string);

			format(string,sizeof(string),"{1bd12f}Kills Gun:{ffffff}%d/3\n{1bd12f}Guns:{ffffff}%d/6",TI[killerid][tGunArea][1],TI[killerid][tGunArea][3]);
			UpdateDynamic3DTextLabelText(DMSTATUS[killerid],0xFF6347FF,string);
		}
		if(!IsACop(killerid) && !IsAArm(killerid) && IsAGang(playerid) != IsAGang(killerid) && IsAMafia(playerid) != IsAMafia(killerid) && !TI[killerid][tDMArea][0] && !TI[killerid][tGunArea][0] && !TI[killerid][tGym] && !player_to_golod[killerid] && !player_to_game[killerid] && TI[killerid][tDuel] == -1) {
			PlayerInfo[killerid][pZakonp] --;
			if(PlayerInfo[killerid][pZakonp] < -100) PlayerInfo[killerid][pZakonp] = -100;
			UpdatePlayerData(killerid,"pZakonp",PlayerInfo[killerid][pZakonp]);
			SetPlayerCriminal(killerid,"Неизвестный", "Вбивство человека");
			if(PlayerInfo[killerid][pSearch] < 2) {
				PlayerInfo[killerid][pSearch] = 2;
				SetPlayerWantedLevel(killerid,PlayerInfo[killerid][pSearch]);
				new string[156];
				format(string,sizeof(string),"[Увага] %s объявлен(а) в розшук. Обвинитель: неизвестно. Причина: вбивство",player_name[killerid]);
				SendTeamMessage(CDEPARTMENT,string);

				format(string,sizeof(string),"Ви объявлены в розшук. Причина: вбивство. Рівень: %d",PlayerInfo[killerid][pSearch]);
				SendClientMessage(killerid,CBADINFO,string);
			}
		}
		if(game_start == 1 && player_to_game[playerid] == 1 && player_to_game[killerid] == 1) {
			kills_player_game[killerid]++;
			new string[128];
			mysql_format(connects, string, sizeof(string),"UPDATE `dm_arena` SET `kills_dm` = '%d' WHERE `Name` = '%e'", kills_player_game[killerid], player_name[killerid]);
			mysql_tquery(connects, string, "", "");
		}
		if(!TI[playerid][tDMArea][0] && !TI[playerid][tGunArea][0] && !TI[killerid][tGym] && !player_to_game[playerid]) {
			if(PlayerInfo[playerid][pSearch] > 0) {
				if(IsACop(killerid)) {
					new search,src = PlayerInfo[playerid][pSearch];
					if(PlayerInfo[playerid][pSearch] <= 5) search = 600;
					else search = 750;
					arrest(playerid);

					static const f_str_1[] = "Ви были посажены в тюрьму офицером %s на %d секунд";
					new string_1[sizeof(f_str_1)  +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

					format(string_1,sizeof(string_1),f_str_1,player_name[killerid],(src * search));
					SendClientMessage(playerid,COLOR_LIGHTRED,string_1);

					static const f_str_2[] = "Ви посадили в тюрьму преступника %s на %d секунд";
					new string_2[sizeof(f_str_2) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

					format(string_2,sizeof(string_2),f_str_2,player_name[playerid],(src * search));
					SendClientMessage(killerid,COLOR_LIGHTRED,string_2);
				}
			}
		}
	}
	new bool:spawn = false;
	if(IsAGang(killerid) && IsAGang(playerid) && GetPlayerVirtualWorld(playerid) == 0) {
		for(new i = 0; i < TOTALGZ; i++) {
			if(GZInfo[i][ZoneOnBattle] == 1) {
				if(PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember]) {
					if(PlayerInfo[killerid][pMember] == GZInfo[i][gNapad] || PlayerInfo[killerid][pMember] == GZInfo[i][gFrakVlad]) {
						if(PlayerInfo[playerid][pMember] == GZInfo[i][gNapad] || PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad]) {
							if(GZInfo[i][gTime] > 600) {
								if(infight[killerid] && infight[playerid]) {
									SendDead(PlayerInfo[killerid][pMember],PlayerInfo[playerid][pMember],killerid,playerid,reason);
									switch(reason) {
										case 0: CountOnZone[PlayerInfo[killerid][pMember]]+=10;
										case 23: CountOnZone[PlayerInfo[killerid][pMember]]+=4;
										case 24,25,31,33: CountOnZone[PlayerInfo[killerid][pMember]]++;
										case 29,30: CountOnZone[PlayerInfo[killerid][pMember]]+=2;
										case 5: CountOnZone[PlayerInfo[killerid][pMember]]+=8;
										default: CountOnZone[PlayerInfo[killerid][pMember]]++;
									}
									SetPVarInt(killerid,"killed_shot",GetPVarInt(killerid,"killed_shot")+1);
									if(PlayerInfo[killerid][pFamily]) reputation_family(PlayerInfo[killerid][pFamily]-1,1);
									if(PlayerInfo[playerid][pFamily]) reputation_family(PlayerInfo[playerid][pFamily]-1,-1);
									GameTextForPlayer(killerid, "~r~+Kill", 5000, 6);
									if(PlayerInfo[killerid][pMember]) add_gang_points(PlayerInfo[killerid][pMember],1);
									break;
								}
							}
							else {
								SendDead(PlayerInfo[killerid][pMember],PlayerInfo[playerid][pMember],killerid,playerid,reason);
								switch(reason) {
									case 0: CountOnZone[PlayerInfo[killerid][pMember]]+=10;
									case 23: CountOnZone[PlayerInfo[killerid][pMember]]+=4;
									case 24,25,31,33: CountOnZone[PlayerInfo[killerid][pMember]]++;
									case 29,30: CountOnZone[PlayerInfo[killerid][pMember]]+=2;
									case 5: CountOnZone[PlayerInfo[killerid][pMember]]+=8;
									default: CountOnZone[PlayerInfo[killerid][pMember]]++;
								}
								SetPVarInt(killerid,"killed_shot",GetPVarInt(killerid,"killed_shot")+1);
								if(PlayerInfo[killerid][pFamily]) reputation_family(PlayerInfo[killerid][pFamily]-1,1);
								if(PlayerInfo[playerid][pFamily]) reputation_family(PlayerInfo[playerid][pFamily]-1,-1);
								GameTextForPlayer(killerid, "~r~+Kill", 5000, 6);
								if(PlayerInfo[killerid][pMember]) add_gang_points(PlayerInfo[killerid][pMember],1);
								break;
							}
						}
					}
				}
			}
		}
	}
	if(BizWarTime[1] > 0) {
		if(PlayerInfo[killerid][pMember] != PlayerInfo[playerid][pMember]) {
			if(PlayerInfo[killerid][pMember] == MZInfo[bNapad] || PlayerInfo[killerid][pMember] == MZInfo[bFrakVlad]) {
				if(PlayerInfo[playerid][pMember] == MZInfo[bNapad] || PlayerInfo[playerid][pMember] == MZInfo[bFrakVlad]) {
					if(PlayerToKvadrat(killerid, mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3]) && PlayerToKvadrat(playerid, mafia_zone[war_gangzone][0], mafia_zone[war_gangzone][1], mafia_zone[war_gangzone][2], mafia_zone[war_gangzone][3])) {
						SendDead(PlayerInfo[killerid][pMember],PlayerInfo[playerid][pMember],killerid,playerid,reason);
						MZInfo[bCountDead][PlayerInfo[killerid][pMember]]++;
						SetPVarInt(killerid,"m_killed_shot",GetPVarInt(killerid,"m_killed_shot") + 1);
						if(PlayerInfo[killerid][pFamily]) reputation_family(PlayerInfo[killerid][pFamily]-1,1);
						if(PlayerInfo[playerid][pFamily]) reputation_family(PlayerInfo[playerid][pFamily]-1,-1);
					}
				}
			}
		}
	}
	if(IsAArm(killerid)) {
		if(IsAGang(playerid) || IsAMafia(playerid)) {
		    if(PlayerToKvadrat(killerid, -1544.892, 270.5747, -1232.015, 558.557) || PlayerToKvadrat(killerid, -49.979476, 1695.982177, 414.020507, 2175.982177)) {
		        if(PlayerToKvadrat(playerid, -1544.892, 270.5747, -1232.015, 558.557) || PlayerToKvadrat(playerid, -49.979476, 1695.982177, 414.020507, 2175.982177)) {
		            GiveMoney(killerid,500,"Вбивство бандита на территории армии");
				}
			}
		}
	}
	if(IsAGang(killerid) || IsACop(killerid) || IsAArm(killerid)) {
		if(invent_zone_id != -1) {
 			if(PlayerToKvadrat(playerid,invent_place[invent_zone_id][0], invent_place[invent_zone_id][1],invent_place[invent_zone_id][2],invent_place[invent_zone_id][3])) {
	 			if((IsACop(playerid) || IsAArm(playerid)) && IsAGang(killerid)) {
	 				GiveMoney(killerid,1500,"Вбивство госника на территории корабля");
	 				if(PlayerInfo[killerid][pMember]) add_gang_points(PlayerInfo[killerid][pMember],2);
	 			}
	 			else if(IsAGang(playerid) && (IsACop(killerid) || IsAArm(killerid))) {
	 				GiveMoney(killerid,3000,"Вбивство бандита на территории корабля");
	 			}
	 		}
 		}
	}
 	if(IsAGang(killerid) && killerid != INVALID_PLAYER_ID) {
 		if(IsAArm(playerid) && start_work[playerid]) {
			for(new i = 0; i < TOTALGZ; i++) {
				if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
					if(GetPlayerSkin(playerid) != 252 || PlayerInfo[playerid][pFracSkin] != 252) {
						if(!PlayerInfo[killerid][pArmSkin]) {
							PlayerInfo[playerid][pFracSkin] = 252;
							SendOk(playerid, "Ви потеряли армейскую форму");
							SendOk(killerid, "Ви cняли с армейца форму, введіть /dress, щоб переодеться");
							PlayerInfo[killerid][pZakonp] -= 2;
							if(PlayerInfo[killerid][pZakonp] < -100) PlayerInfo[killerid][pZakonp] = -100;
							PlayerInfo[killerid][pArmSkin] = 1;
							UpdatePlayerData(killerid,"ArmSkin",1);
						}
					}
				}
			}
		}
	}
	TI[playerid][tMaskTime] = 0;
	TI[playerid][tTazers][0] = 0;

	if(!PlayerInfo[playerid][pAdmin] && !TI[playerid][tDMArea][0] && !TI[playerid][tGunArea][0] && !TI[playerid][tGym] && !player_to_game[playerid] && !player_to_golod[playerid] && !IsAGang(playerid) && PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE && PlayerInfo[playerid][pVips] != VIP_FOREVER) SetPlayerHospital(playerid,spawn);
	//else SetPlayerHealth(playerid,100);
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pAdmin] > 0 && dostup[i] && PlayerInfo[i][pAdmKL]) {
			SendDeathMessageToPlayer(i, killerid, playerid, reason);
		}
	}
	SettingSpawn(playerid);
	return true;
}
public OnPlayerSpawn(playerid) {
	leave_robhouse(playerid);
	DeletePVar(playerid,"carrygun");
	DeletePVar(playerid, "SettingGraffiti");
	TI[playerid][tProcess][0] = -1;
	TI[playerid][tProcess][1] = -1;
    SetPlayerSkills(playerid);
	SetPlayerColor(playerid,0xFFFFFF11);
	TI[playerid][tSpawn] = true;
	if(!TI[playerid][tLogin] || !TI[playerid][tJoined]) return 1;
	if(TI[playerid][tClothesWork][0]) {
		for(new i = 0;i < 4;i++) {
			PlayerTextDrawHide(playerid,work_td[playerid][i]);
		}
	}
	if(GetTeamID(playerid) == 0) start_work[playerid] = 0;
	if(IsAGang(playerid) && IsAMafia(playerid)) start_work[playerid] = 1;
	if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	
	if(GetPlayerHP(playerid) < 10) SetPlayerHealth(playerid, 10);
	else SetPlayerHealth(playerid, GetPlayerHP(playerid));

	if(IsAGang(playerid)) {
		SetPlayerHealth(playerid, 95);
		AC_GivePlayerWeapon(playerid,5, 1);
	}

	if(TI[playerid][tLogin] == true) {
		for(new i; i < 10 ; i ++) {
			if(GunPlayer[playerid][i][0] == 0 || GunPlayer[playerid][i][1] == 0) continue;
			AC_GivePlayerWeapon(playerid,GunPlayer[playerid][i][0], GunPlayer[playerid][i][1]);
		}
		if(PlayerInfo[playerid][pSearch] >= 1) SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pSearch]);
	}
	switch(PlayerInfo[playerid][pSettings][5]) {
	    case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	    case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	    case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	    case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	}
	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) CheckPlayerGoCuff(playerid);
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) {
	    TI[GotoInfo[playerid][gtID]][tCuffed] = false;
		TI[GotoInfo[playerid][gtID]][tCuffedTime] = 0;
		TogglePlayerControllable(GotoInfo[playerid][gtID],true);
		SetPlayerSpecialAction(GotoInfo[playerid][gtID], 0);
	    ClearAnims(GotoInfo[playerid][gtID]);
     	SendOk(GotoInfo[playerid][gtID],"Ви были выпущены с конвоя");
        CheckPlayerGoCuff(GotoInfo[playerid][gtID]);
        CheckPlayerGoCuff(playerid);
	}
	else if(player_to_race_lv[playerid]) {
		new random_spawn = random(sizeof spawns_pos_game_end);
		SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
		SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
		return 1;
	}
	else if(player_to_golod[playerid]) {
		players_in_golod--;
		new random_spawn = random(sizeof spawns_pos_game_end);
		SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
		SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
		golod_deatch(playerid,players_in_golod);
		return 1;
	}
	else if(TI[playerid][tDuel] != -1) {
		end_duel(playerid,0);
		return 1;
	}
	SetPlayerPosAC(playerid, setX[playerid], setY[playerid], setZ[playerid], TI[playerid][tVirtualWorld], TI[playerid][tInterior], true);
	
	//==========Ділог при вході відновлення на місце останнього виходу=========
	
	static const f_str[] = ""W"Чи хочете ви опиниться на місці останнього виходу?\n\
	"YELLOW"Так - "W"означає продовжити гру з останнього вашого місця.\n\
	"YELLOW"Ні - "W"означає що ви заспавнетесь на місці спавна в налаштуваннях.";
	
	new string[sizeof(f_str)];
	format(string,sizeof(string), "%s",f_str);
	D(playerid, D_SPAWN_POSITION, DSM, ""YELLOW"Зробіть Ваш вибір", string, "Так", "Ні");
	//==================================================================
	SettingSpawn(playerid);
	return true;
}
SettingSpawn(playerid) {
	if(TI[playerid][tDuel] != -1 || player_to_golod[playerid] || player_to_race_lv[playerid]) return 1;
	SetFullness(playerid, PlayerInfo[playerid][pSatiety]);
	DollahScoreUpdate(playerid);
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	new skin;
	if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
		skin = PlayerInfo[playerid][pFracSkin];
	}
	else skin = PlayerInfo[playerid][pSkin];
	/*else if(TI[playerid][tGym]) {
		if(PlayerInfo[playerid][pSex] == 1) A_SetPlayerSkin(playerid, 80);
		else A_SetPlayerSkin(playerid,192);
		SetPlayerPosAC(playerid,762.6036,5.7514,1000.7126);
		SetPlayerFacingAngle(playerid,269.2828);
		SetPlayerInterior(playerid,5);
		SetPlayerVirtualWorld(playerid, 97);
		if(TI[playerid][tFight] != -1) {
			GiveMoney(playerid,-RingInfo[0][rgPrice],"поражение поединок");
			GiveMoney(TI[playerid][tFight],(RingInfo[0][rgPrice]*2),"победа поединок");
			PlayerSpawn(TI[playerid][tFight]);
			TI[TI[playerid][tFight]][tFight] = -1;
			TI[playerid][tFight] = -1;
			CheckPlayerRing(playerid);
		}
		return 1;
	}*/
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID && PlayerInfo[playerid][pAdmin] != 0) {
		HideMenuForPlayer(specmenu,playerid);
		PlayerTextDrawHide(playerid,RECON[playerid]);
		TI[SERIU[playerid][sID]][tSpectr] = INVALID_PLAYER_ID;
		SERIU[playerid][sID] = INVALID_PLAYER_ID;
		if(avir[playerid] != -1) {
	 	    PlayerInfo[playerid][pMember] = TI[playerid][preOrg];
		    PlayerInfo[playerid][pRank] = TI[playerid][preOrgg];
		    SetSpawnInfoEx(playerid, TI[playerid][pOldSkin], TI[playerid][Admin_X],TI[playerid][Admin_Y],TI[playerid][Admin_Z], 0);
			TI[playerid][tVirtualWorld] = avir[playerid];
			TI[playerid][tInterior] = aint[playerid];
			//A_SetPlayerSkin(playerid, TI[playerid][pOldSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
		    avir[playerid]=-1;
			TI[playerid][preOrg]=0;
		    TI[playerid][preOrgg]=0;
			if(!PlayerInfo[playerid][pMember]) start_work[playerid] = false;
	 	    if(Lastspec[playerid]!=-1) {
	 	        new str[10];
	 	        format(str,10,"%d",Lastspec[playerid]);
		  		pc_cmd_goto(playerid,str);
	 	        Lastspec[playerid]=-1;
	 	    }
	 	}
		TogglePlayerControllable(playerid,true);
	}
	else if(game_start == 1 && player_to_game[playerid] == 1) {
	    new random_spawn = random(sizeof spawns_pos_game);
		SetPlayerPosAC(playerid, spawns_pos_game[random_spawn][0],spawns_pos_game[random_spawn][1],spawns_pos_game[random_spawn][2],201,10);
		SetPlayerFacingAngle(playerid, spawns_pos_game[random_spawn][4]);
		SetPlayerHealth(playerid,100.0);
		new random_weapon = random(sizeof weapon_id_game);
		AC_GivePlayerWeapon(playerid, weapon_id_game[random_weapon], 999);
		SetPlayerColor(playerid,0xBC2C2CFF);
		return 1;
	}
	else if(TI[playerid][tDMArea][0]) {
		AC_GivePlayerWeapon(playerid, PaintGun[random(sizeof(PaintGun))], 3000);
		new rand = random(sizeof(DmArenaSpawns));
		SetSpawnInfoEx(playerid, skin, DmArenaSpawns[rand][0], DmArenaSpawns[rand][1], DmArenaSpawns[rand][2], 180.0);//куды
		TI[playerid][tVirtualWorld] = 8;
		TI[playerid][tInterior] = 0;
		SetPlayerColor(playerid,0x56FB4EFF);
		SetPlayerHealth(playerid,100);
		return 1;
	}
	else if(TI[playerid][tGunArea][0]) {
		if(TI[playerid][tGunArea][1] < 3) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[5], 3000);
		else if(TI[playerid][tGunArea][1] < 6) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[4], 3000);
		else if(TI[playerid][tGunArea][1] < 9) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[3], 3000);
		else if(TI[playerid][tGunArea][1] < 12) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[2], 3000);
		else if(TI[playerid][tGunArea][1] < 15) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[1], 3000);
		else if(TI[playerid][tGunArea][1] < 18) DelGun(playerid), AC_GivePlayerWeapon(playerid, ArenaGun[0], 3000);
		new rand = random(sizeof(DMPositions));
		SetSpawnInfoEx(playerid, skin, DMPositions[rand][0], DMPositions[rand][1], DMPositions[rand][2], 180.0);
		TI[playerid][tVirtualWorld] = 141;
		TI[playerid][tInterior] = 141;
		SetPlayerColor(playerid,0x56FB4EFF);
		SetPlayerHealth(playerid,100);
		return 1;
	}
	else if(PlayerInfo[playerid][pJailTime] > 0) {
		switch(PlayerInfo[playerid][pJail]) {
			case 0..3: {
				new rand = random(sizeof(PoliceSpawn));
				SetSpawnInfoEx(playerid, skin, PoliceSpawn[rand][0], PoliceSpawn[rand][1], PoliceSpawn[rand][2], PoliceSpawn[rand][3]);
				TI[playerid][tVirtualWorld] = PlayerInfo[playerid][pJail] + 39;
				TI[playerid][tInterior] = 99;
			}
			case 4: {
				new rand = random(sizeof(AlcatrazSpawns));
				SetSpawnInfoEx(playerid, 8, AlcatrazSpawns[rand][0], AlcatrazSpawns[rand][1], AlcatrazSpawns[rand][2], AlcatrazSpawns[rand][3]);
				TI[playerid][tVirtualWorld] = 203;
				TI[playerid][tInterior] = 85;
			}
			case 5: {
				SetSpawnInfoEx(playerid, 8, 5512.2275,1248.5988,8.8505, 90.0);
				TI[playerid][tVirtualWorld] = 999;
				TI[playerid][tInterior] = 999;
			}
		}
		DelGun(playerid);
		SetCameraBehindPlayer(playerid);
		return 1;
	}
 	else if(PlayerInfo[playerid][pHospital] != 0) {
		new hosp = PlayerInfo[playerid][pHospital];
		switch(PlayerInfo[playerid][pHospital]) {
			case 1,2,3: {
				new rand = random(sizeof(HospitalSpawns));
				SetSpawnInfoEx(playerid, skin, HospitalSpawns[rand][0], HospitalSpawns[rand][1], HospitalSpawns[rand][2], HospitalSpawns[rand][3]);
				TI[playerid][tVirtualWorld] = hosp + 19;
				TI[playerid][tInterior] = 92;
			}
			case 4,5: {
				new rand = random(sizeof(HospitalArmSpawns));
				SetSpawnInfoEx(playerid, skin, HospitalArmSpawns[rand][0], HospitalArmSpawns[rand][1], HospitalArmSpawns[rand][2], HospitalArmSpawns[rand][3]);
				TI[playerid][tVirtualWorld] = hosp + 29;
				TI[playerid][tInterior] = 90;
			}
		}
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(PlayerInfo[playerid][pSpawn] == 3 && PlayerInfo[playerid][pFamily] && gHouses[gFamily[PlayerInfo[playerid][pFamily]-1][famHouse]-1][houseFamily]) {
		new houseid = gFamily[PlayerInfo[playerid][pFamily]-1][famHouse] -1;
		new interior, Float:r;
		new hint = gHouses[houseid][houseHint];
		TI[playerid][tSelectHouse] = houseid;
		x = hinterior_info[hint][h_pos_spawn][0];
		y = hinterior_info[hint][h_pos_spawn][1];
		z = hinterior_info[hint][h_pos_spawn][2];
		r = hinterior_info[hint][h_pos_spawn][3];
		interior = hinterior_info[hint][h_interior];
		SetSpawnInfoEx(playerid, skin, x, y, z, r);
		TI[playerid][tVirtualWorld] = houseid;
		TI[playerid][tInterior] = interior;
		TI[playerid][tInHouse] = true;
	}
	else if((PlayerInfo[playerid][pHouse] > 0 && PlayerInfo[playerid][pSpawn] == 1) || (PlayerInfo[playerid][pTempKey] > 0 && PlayerInfo[playerid][pSpawn] == 1)) {
		if(PlayerInfo[playerid][pTempKey] > 0) {
			new interior, Float:r;
			new houseid = PlayerInfo[playerid][pTempKey] - 1;
			new hint = gHouses[houseid][houseHint];
			TI[playerid][tSelectHouse] = houseid;
			x = hinterior_info[hint][h_pos_spawn][0];
			y = hinterior_info[hint][h_pos_spawn][1];
			z = hinterior_info[hint][h_pos_spawn][2];
			r = hinterior_info[hint][h_pos_spawn][3];
			interior = hinterior_info[hint][h_interior];
			SetSpawnInfoEx(playerid, skin, x, y, z, r);
			TI[playerid][tVirtualWorld] = PlayerInfo[playerid][pTempKey];
			TI[playerid][tInterior] = interior;
			TI[playerid][tInHouse] = true;
		}
		else {
			new interior, Float:r;
			new houseid = PlayerInfo[playerid][pHouse] - 1;
			new hint = gHouses[houseid][houseHint];
			TI[playerid][tSelectHouse] = houseid;
			x = hinterior_info[hint][h_pos_spawn][0];
			y = hinterior_info[hint][h_pos_spawn][1];
			z = hinterior_info[hint][h_pos_spawn][2];
			r = hinterior_info[hint][h_pos_spawn][3];
			interior = hinterior_info[hint][h_interior];
			SetSpawnInfoEx(playerid, skin, x, y, z, r);
			TI[playerid][tVirtualWorld] = PlayerInfo[playerid][pHouse];
			TI[playerid][tInterior] = interior;
			TI[playerid][tInHouse] = true;
		}
		return 1;
	}
	else if(PlayerInfo[playerid][pRoom] && PlayerInfo[playerid][pSpawn] == 1) {
		new hotel = PlayerInfo[playerid][pRoom]-1;
		SetPVarInt(playerid, "selectedhotel",gRooms[hotel][roomsHotel]-1);
		SetSpawnInfoEx(playerid, skin, 1415.7454,-1206.2939,130.2086, 89.5632);
		TI[playerid][tInterior] = 81;
        SetPlayerInterior(playerid,81);
		if(PlayerInfo[playerid][pRoom] > 0) TI[playerid][tVirtualWorld] = gRooms[hotel][roomsID];
		else TI[playerid][tVirtualWorld] = 0;
		SetCameraBehindPlayer(playerid);
		return 1;
	}
	else if(PlayerInfo[playerid][pMember] && PlayerInfo[playerid][pSpawn] == 2 && start_work[playerid]) {
		new fractionid = PlayerInfo[playerid][pMember];
		SetSpawnInfoEx(playerid, skin, gFractionSpawn[fractionid][fracCoordsX],gFractionSpawn[fractionid][fracCoordsY],gFractionSpawn[fractionid][fracCoordsZ], gFractionSpawn[fractionid][fracCoordsA]);
		TI[playerid][tVirtualWorld] = gFractionSpawn[fractionid][fracWorld];
		TI[playerid][tInterior] = gFractionSpawn[fractionid][fracInt];
		SetCameraBehindPlayer(playerid);
		SetPlayerColor(playerid,gFractionSpawn[fractionid][fracColor]);
		return 1;
	}
	else {
		if(PlayerInfo[playerid][pLevel] < 3) {
			new rand = random(sizeof(spawn_ls));
			SetSpawnInfoEx(playerid, skin, spawn_ls[rand][0], spawn_ls[rand][1], spawn_ls[rand][2], spawn_ls[rand][3]);
		}
		else if(PlayerInfo[playerid][pLevel] >= 3 && PlayerInfo[playerid][pLevel] <= 6) {
			new rand = random(sizeof(spawn_sf));
			SetSpawnInfoEx(playerid, skin, spawn_sf[rand][0], spawn_sf[rand][1], spawn_sf[rand][2], spawn_sf[rand][3]);
		}
		else if(PlayerInfo[playerid][pLevel] >= 7) {
			new rand = random(sizeof(spawn_lv));
			SetSpawnInfoEx(playerid, skin, spawn_lv[rand][0], spawn_lv[rand][1], spawn_lv[rand][2], spawn_lv[rand][3]);
		}
		TI[playerid][tVirtualWorld] = 0;
		TI[playerid][tInterior] = 0;
		SetCameraBehindPlayer(playerid);
	}
	return 1;
}
public OnPlayerEnterCheckpoint(playerid) {
    if(TI[playerid][tJobGun][0]) {
		if(TI[playerid][tJobGun][1] != 2) return ErrorMessage(playerid,"Необхідно взяти заготовку");
		for(new id = 0;id < 24;id++) {
			if(IsPlayerInDynamicCP(playerid, gun_pickup[id])) {
		        SetPVarInt(playerid,"loadid",id);

				JobTempProcess[playerid] = 3;
				TI[playerid][tProcess][0] = 0;
				TI[playerid][tProcess][1] = 10;
				PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
				for(new YN = 0;YN < 3;YN++) {
					TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				RandomYareNforJOBS(playerid);
			}
		}
	}
	new vehicleid = GetPlayerVehicleID(playerid);
	switch(GetPVarInt(playerid,"MatsArmyCar")) {
		case 1..4: {
			DisablePlayerCheckpoint(playerid);
			if(GetPVarInt(playerid,"MatsArmyCar") == 1 && !IsPlayerInRangeOfPoint(playerid, 10.0, 1535.8534,-1674.4445,13.3828)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 2 && !IsPlayerInRangeOfPoint(playerid, 10.0, -1606.6760,726.5093,12.0220)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 3 && !IsPlayerInRangeOfPoint(playerid, 10.0, 2288.5105,2421.4209,10.8203)) return 1;
			if(GetPVarInt(playerid,"MatsArmyCar") == 4 && !IsPlayerInRangeOfPoint(playerid, 10.0, -1978.0072,-1008.3723,32.0234)) return 1;
			new string[96];
			if(VG[vehicleid][vgAmount][0] <= 0) return ErrorMessage(playerid,"Грузовик пуст");
			switch(GetPVarInt(playerid,"MatsArmyCar")) {
				case 1: {
					FI[fLSPD][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fLSPD][fMats] > 500000) FI[fLSPD][fMats] = 500000;
					format(string,sizeof(string),"Боєприпаси успішно выгружены! На складі Поліції ЛС: "W"%i",FI[fLSPD][fMats]);
					SendOk(playerid,string);
				}
				case 2: {
					FI[fSFPD][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fSFPD][fMats] > 500000) FI[fSFPD][fMats] = 500000;
					format(string,sizeof(string),"Боєприпаси успішно выгружены! На складі Поліції СФ: "W"%i",FI[fSFPD][fMats]);
					SendOk(playerid,string);
				}
				case 3: {
					FI[fLVPD][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fLVPD][fMats] > 500000) FI[fLVPD][fMats] = 500000;
					format(string,sizeof(string),"Боєприпаси успішно выгружены! На складі Поліції ЛВ: "W"%i",FI[fLVPD][fMats]);
					SendOk(playerid,string);
				}
				case 4: {
					FI[fFBI][fMats] += VG[vehicleid][vgAmount][0]*500;
					if(FI[fFBI][fMats] > 500000) FI[fFBI][fMats] = 500000;
					format(string,sizeof(string),"Боєприпаси успішно выгружены! На складі ФБР: "W"%i",FI[fFBI][fMats]);
					SendOk(playerid,string);
				}
			}
			GiveMoney(playerid,1500,"доставка боєприпасів");
			VG[vehicleid][vgAmount][0] = 0;
			DeletePVar(playerid,"MatsArmyCar");
		}
		case 5: {
			static const f_str[] = ""W"Введіть кількість боєприпасів, яку хочете загрузити в матоліт:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"В матоліт вміститься: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,zavodsklad,30000-VG[vehicleid][vgAmount][0]);
			D(playerid, D_ARMY_CARM_SF_4, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 6: {
			static const f_str[] = ""W"Введіть кількість боєприпасів, яку хочете загрузити в матоліт:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"В матоліт вміститься: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,FI[fARMYSF][fMats],30000-VG[vehicleid][vgAmount][0]);
			D(playerid, D_ARMY_CARM_SF_5, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 7: {
			static const f_str[] = ""W"Введіть кількість боєприпасів, которое хочете разгрузить на склад:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"На склад поміститься: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYSF][fMats]);
			D(playerid, D_ARMY_CARM_SF_6, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 8: {
			static const f_str[] = ""W"Введіть кількість боєприпасів, которое хочете разгрузить на склад:\n\n\
Доступно боєприпасів: "ORANGE"%d\n\
"W"На склад поміститься: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgAmount][0],1000000-FI[fARMYLV][fMats]);
			D(playerid, D_ARMY_CARM_SF_7, DSI, ""YELLOW"Загрузка боєприпасів",string, "Загрузити", "Відміна");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 10: {
			if(VG[vehicleid][vgAmount][0]) return ErrorMessage(playerid,"В автомобиле уже есть боєприпаси");
			if(FI[fARMYLV][fMats] < 12500) return ErrorMessage(playerid,"На складі армии недостаточно боєприпасів");
			VG[vehicleid][vgAmount][0] = 25;
			FI[fARMYLV][fMats] -= 500*25;
			SendOk(playerid,"Боєприпаси успішно завантажені! Доступно ящиков: "W"25");
			SendOk(playerid,"Для разгрузки боєприпасів введіть: "W"/unload");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 11: {
			if(VG[vehicleid][vgAmount][0]) return ErrorMessage(playerid,"В автомобиле уже есть боєприпаси");
			if(FI[fARMYSF][fMats] < 12500) return ErrorMessage(playerid,"На складі армии недостаточно боєприпасів");
			VG[vehicleid][vgAmount][0] = 25;
			FI[fARMYSF][fMats] -= 500*25;
			SendOk(playerid,"Боєприпаси успішно завантажені! Доступно ящиков: "W"25");
			SendOk(playerid,"Для разгрузки боєприпасів введіть: "W"/unload");
			DeletePVar(playerid,"MatsArmyCar");
			DisablePlayerCheckpoint(playerid);
		}
	}
	switch(GetPVarInt(playerid,"DrugsMafiaCar")) {
		case 1: {
			if(VG[vehicleid][vgDrugs] >= 500) return ErrorMessage(playerid,"Грузовик полон");
			static const f_str[] = ""W"Введіть кількість наркотиків, которое хочете загрузить в грузовик:\n\n\
Доступно наркотиків: "ORANGE"%d\n\
"W"В грузовик поміститься: "ORANGE"%d";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,FI[PlayerInfo[playerid][pMember]][fDrugs],500-VG[vehicleid][vgDrugs]);
			D(playerid, D_MAFIA_CARM_2, DSI, ""YELLOW"Загрузка наркотиків",string, "Загрузити", "Відміна");
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
		}
		case 2: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fBALLAS][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиків") ;
			static const f_str[] = ""W"Введіть кількість наркотиків, которое хочете продати The Ballas:\n\n\
Доступно наркотиків: "ORANGE"%d"W"\n\
Склад банди: "ORANGE"%d\n\
"W"Заказ банди: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fBALLAS][fDrugs],FI[fBALLAS][fDrugsBuy],FI[fBALLAS][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""YELLOW"Продажа наркотиків",string, "Продати", "Відміна");
			SetPVarInt(playerid,"sell_gdrugs",1);
		}
		case 3: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fVAGOS][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиків") ;
			static const f_str[] = ""W"Введіть кількість наркотиків, которое хочете продати The Vagos:\n\n\
Доступно наркотиків: "ORANGE"%d"W"\n\
Склад банди: "ORANGE"%d\n\
"W"Заказ банди: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fVAGOS][fDrugs],FI[fVAGOS][fDrugsBuy],FI[fVAGOS][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""YELLOW"Продажа наркотиків",string, "Продати", "Відміна");
			SetPVarInt(playerid,"sell_gdrugs",2);
		}
		case 4: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fGROVE][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиків") ;
			static const f_str[] = ""W"Введіть кількість наркотиків, которое хочете продати The Grove:\n\n\
Доступно наркотиків: "ORANGE"%d"W"\n\
Склад банди: "ORANGE"%d\n\
"W"Заказ банди: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fGROVE][fDrugs],FI[fGROVE][fDrugsBuy],FI[fGROVE][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""YELLOW"Продажа наркотиків",string, "Продати", "Відміна");
			SetPVarInt(playerid,"sell_gdrugs",3);
		}
		case 5: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fAZTEC][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиків") ;
			static const f_str[] = ""W"Введіть кількість наркотиків, которое хочете продати The Aztec:\n\n\
Доступно наркотиків: "ORANGE"%d"W"\n\
Склад банди: "ORANGE"%d\n\
"W"Заказ банди: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fAZTEC][fDrugs],FI[fAZTEC][fDrugsBuy],FI[fAZTEC][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""YELLOW"Продажа наркотиків",string, "Продати", "Відміна");
			SetPVarInt(playerid,"sell_gdrugs",4);
		}
		case 6: {
			DeletePVar(playerid,"DrugsMafiaCar");
			DisablePlayerCheckpoint(playerid);
			if(!FI[fRIFA][fDrugsBuy]) return ErrorMessage(playerid,"Банда не нуждается в покупке наркотиків") ;
			static const f_str[] = ""W"Введіть кількість наркотиків, которое хочете продати The Rifa:\n\n\
Доступно наркотиків: "ORANGE"%d"W"\n\
Склад банди: "ORANGE"%d\n\
"W"Заказ банди: "ORANGE"%d / $%d 1г";
			new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,VG[vehicleid][vgDrugs],FI[fRIFA][fDrugs],FI[fRIFA][fDrugsBuy],FI[fRIFA][fDrugsPrice]);
			D(playerid, D_MAFIA_CARM_3, DSI, ""YELLOW"Продажа наркотиків",string, "Продати", "Відміна");
			SetPVarInt(playerid,"sell_gdrugs",5);
		}
	}
	if(TI[playerid][tTrucker][0]) {
		SendOk(playerid,"Посигнальте для разгрузки груза");
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	if(gpss[playerid]) {
		gpss[playerid] = 0;
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		DisablePlayerCheckpoint(playerid);
		return 1;
	}
	return 1;
}
public OnPlayerLeaveCheckpoint(playerid) {
	if(TI[playerid][tJobGun][0]) {
		if(TI[playerid][tProcess][0] == -1) return 1;
		for(new id = 0;id < 24;id++) {
			if(!IsPlayerInDynamicCP(playerid, gun_pickup[id])) {
				TI[playerid][tProcess][0] = -1;
				TI[playerid][tProcess][1] = -1;
				for(new YN = 0;YN < 3;YN++) {
					TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
					if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
				}
				JobTempProcess[playerid] = 0;
			}
		}
	}
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid) {
	if(gpss[playerid]) gpss[playerid] = 0;
	if(!GetPVarInt(playerid,"route") && !GetPVarInt(playerid,"check_job_cleaner")) DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid,"WaitExam")) {
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlot");
		if(slot == AUTO_CP_COUNT) {
			new Float:health;
			GetVehicleHealth(GetPlayerVehicleID(playerid),health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Вітаємо с получением водительского удостоверения");
				lic[playerid][0] = 1;
				UpdateLicenses(playerid);
			}
			else SendOk(playerid,"Тест по вождению завален, Вы еще плохо водите автомобіль");
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);
			DeletePVar(playerid,"LessonSlot");
			DeletePVar(playerid,"WaitExam");
			DeletePVar(playerid,"pWaitingExam");
			TI[playerid][tAutoSchool] = 0;
		}
		else if(slot >= AUTO_CP_COUNT - 1) SetPlayerRaceCheckpoint(playerid, 1, AutoCP[AUTO_CP_COUNT - 1][0], AutoCP[AUTO_CP_COUNT - 1][1], AutoCP[AUTO_CP_COUNT - 1][2], 0.0,0.0,0.0, 3.0);
		else SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot+1][0], AutoCP[slot+1][1], AutoCP[slot+1][2], 3.0);
		SetPVarInt(playerid,"LessonSlot", slot + 1);
		return 1;
	}
	if(TI[playerid][tAutoSchool] == 2) {
		if(car_autoschool[playerid] == INVALID_VEHICLE_ID) return 1;
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlotMav");
		if(slot == 16) {
			new Float:health;
			GetVehicleHealth(car_autoschool[playerid],health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Вітаємо с получением ліцензії на виліт");
				lic[playerid][1] = 1;
				UpdateLicenses(playerid);
			}
			else SendOk(playerid,"Тест по завален, Вы еще плохо управляете воздушным транспортом");
			A_DestroyVehicle(car_autoschool[playerid]);
			car_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			DeletePVar(playerid,"LessonSlotMav");
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76,true);
			TI[playerid][tAutoSchool] = 0;
		}
		else if(slot >= 16 - 1) SetPlayerRaceCheckpoint(playerid, 4, AutoCPMav[16 - 1][0], AutoCPMav[16 - 1][1], AutoCPMav[16 - 1][2], 0.0,0.0,0.0, 5.0);
		else SetPlayerRaceCheckpoint(playerid, 3, AutoCPMav[slot][0], AutoCPMav[slot][1], AutoCPMav[slot][2], AutoCPMav[slot+1][0], AutoCPMav[slot+1][1], AutoCPMav[slot+1][2], 5.0);
		SetPVarInt(playerid,"LessonSlotMav", slot + 1);
		return 1;
	}
	if(TI[playerid][tAutoSchool] == 3) {
		if(car_autoschool[playerid] == INVALID_VEHICLE_ID) return 1;
		if(GetPlayerState(playerid) != 2) return 1;
		new slot = GetPVarInt(playerid,"LessonSlotBoat");
		if(slot == 17) {
			new Float:health;
			GetVehicleHealth(car_autoschool[playerid],health);
			if(health >= 850) {
				SendClientMessage(playerid,CGOLD,"Вітаємо с получением ліцензії на водний транспорт");
				lic[playerid][2] = 1;
				UpdateLicenses(playerid);
			}
			else SendOk(playerid,"Тест по завален, Вы еще плохо управляете водным транспортом");
			A_DestroyVehicle(car_autoschool[playerid]);
			car_autoschool[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			DeletePVar(playerid,"LessonSlotBoat");
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76,true);
			TI[playerid][tAutoSchool] = 0;
		}
		else if(slot >= 17 - 1) SetPlayerRaceCheckpoint(playerid, 1, AutoCPBoat[17 - 1][0], AutoCPBoat[17 - 1][1], AutoCPBoat[17 - 1][2], 0.0,0.0,0.0, 4.5);
		else SetPlayerRaceCheckpoint(playerid, 0, AutoCPBoat[slot][0], AutoCPBoat[slot][1], AutoCPBoat[slot][2], AutoCPBoat[slot+1][0], AutoCPBoat[slot+1][1], AutoCPBoat[slot+1][2], 4.5);
		SetPVarInt(playerid,"LessonSlotBoat", slot + 1);
		return 1;
	}
	else if(GetPlayerState(playerid) == 2 && GetPlayerVehicleID(playerid) != 0 && GetPVarInt(playerid, "id_cp") && GetPVarInt(playerid,"route") && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 1) {
		//if(!IsPlayerInRangeOfPoint(playerid,30,gBusCPs[GetPVarInt(playerid,"route")][GetPVarInt(playerid, "id_cp")][1],gBusCPs[GetPVarInt(playerid,"route")][GetPVarInt(playerid, "id_cp")][2],gBusCPs[GetPVarInt(playerid,"route")][GetPVarInt(playerid, "id_cp")][3])) Kick(playerid);
		SetNextBusCP(playerid);
		return 1;
	}
	if(GetPVarInt(playerid,"RaceCP") != 0) {
		SetNextRaceCP(playerid,race_type);
		return 1;
	}
	if(GetPVarInt(playerid,"check_job_cleaner") && GetPVarInt(playerid, "check_job_cleaner") && GetPlayerState(playerid) == 2 && GetPlayerVehicleID(playerid) != 0 && VehicleInfo[GetPlayerVehicleID(playerid)][vJob] == 5) {
		SetNextJobClearCP(playerid,GetPVarInt(playerid, "route_job_cleaner"));
		return 1;
	}
	return 1;
}
public OnPlayerLeaveRaceCheckpoint(playerid) {
	return 1;
}
public OnRconCommand(cmd[]) {
	return true;
}
CB: CarryDelay(playerid) ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
CB: PlayerDelayBailer(playerid) {
	SendClientMessage(playerid,CGOLD,"Ви полили дерево. Дочекайтеся стадії - збір яблук");
	ClearAnimations(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7))RemovePlayerAttachedObject(playerid, 7);
	SetPVarInt(playerid,"sad_uxod",1);
}
CB: PlayerUdostover(playerid) {
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2))RemovePlayerAttachedObject(playerid, 2);
}
public OnRconLoginAttempt(ip[], password[], success) return false;

public OnPlayerPickUpPickup(playerid, pickupid) {
	return 1;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid) {
	if(!TI[playerid][tLogin]) return 1;
	if(pickupid == oldpickup[playerid]) return true;
	oldpickup[playerid] = pickupid;
	timepickup[playerid] = 3;
	new Float:zx;
	GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], zx);
	if(pickupid == pickups_game_dm[0]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[1]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[2]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[3]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[4]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[5]) return SetPlayerHealth(playerid,100);
	else if(pickupid == pickups_game_dm[6]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[7]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[8]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[9]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[10]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[11]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[12]) return SetPlayerArmour(playerid,100);
	else if(pickupid == pickups_game_dm[13]) return SetPlayerArmour(playerid,100);

	else if(golod_start) {
		for(new id; id <= 20; id++) {
			if(pickups_game_golod[id] == -1) continue;
			if(pickupid == pickups_game_golod[id]) {
				if(golod_use_pickup[playerid]) return ErrorMessage(playerid,"Ви уже брали начальный пикап");
				DestroyDynamicPickup(pickups_game_golod[id]);
				SetPlayerHealth(playerid, 100);
				SetPlayerArmour(playerid, 100);
				pickups_game_golod[id] = -1;
				golod_use_pickup[playerid] = 1;
				return 1;
			}
		}
		for(new id; id <= 20; id++) {
			if(pickups_game_golod_2[id] == -1) continue;
			if(pickupid == pickups_game_golod_2[id]) {
				DestroyDynamicPickup(pickups_game_golod_2[id]);
				pickups_game_golod_2[id] = -1;
				new random_weapon = random(sizeof weapon_id_game);
				new random_ammo = Random(10,35);
				AC_GivePlayerWeapon(playerid, weapon_id_game[random_weapon], random_ammo);
				return 1;
			}
		}
	}
	else if(g_arena_created) {
		for(new blockid; blockid < 64; blockid++) {
			if(pickupid == b_pickupid[blockid]) return OnPlayerCaptureBlock(playerid, blockid);
		}
	}
	else if(pickupid == fork_pickup) {
		fork_pickups = 0;
		DestroyDynamicPickup(fork_pickup);
		TI[playerid][tAlcotraz][2] = 1;
		D(playerid,DIALOG_NONE,DSM, ""YELLOW"Побег",""W"Думки...\n\nТак-так, вилка..\nИнтересно, где ее можно использовать..\nМожет попробовать відкрити что-то..","Закрити","");
		return 1;
	}
	else if(pickupid == election) {
		if(PlayerInfo[playerid][pLevel] < 3) return ErrorMessage(playerid,"Голосовать можно с 3 рівня");
		if(PlayerInfo[playerid][pGolos]) return ErrorMessage(playerid,"Ви уже голосовали");
		new string[1024];
		for(new i = 0; i < MAX_VOTES; i++) {
			if(strlen(vote_name[i])) {
				format(string,sizeof(string), "%s%i. %s (Голосов: %i)\n", string, i+1, vote_name[i],vote_count[i]);
			}
			else format(string,sizeof(string),"%s%i. -\n",string, i+1);
		}
		return D(playerid,D_ELECTION_2,DSL,""YELLOW"Список кандидатов",string,"Вибрати","Закрити");
	}
	return true;
}
public OnPlayerSelectedMenuRow(playerid, row) {
	new Menu:Current = GetPlayerMenu(playerid);
	if(Current == specmenu) {
		switch(row) {
			case 0: SpecPlayer(playerid,SERIU[playerid][sID]);
			case 1: return D(playerid,D_REC_KICK,DSI, ""YELLOW"KICK","\n\n"W"Введіть причину, по которой хочете кикнуть гравця с сервера:\n\n","Кикнуть","Відміна"),ShowMenuForPlayer(specmenu,playerid);
			//case 2: return D(playerid,D_REC_WARN,DSI, ""YELLOW"WARN","\n\n"W"Введіть причину, по которой хочете выдать Warn гравцю:\n\n","Варн","Відміна"),ShowMenuForPlayer(specmenu,playerid);
			case 3: return D(playerid,D_REC_BAN,DSI, ""YELLOW"BAN","\n\n"W"Введіть причину, по которой хочете заблокировать аккаунт гравцю:\n"NO"УВАГА!"W" Введіть время и причину через запятую без пробелов (15,читер)\nВремя блокировки аккаунта: от 7 до 30 днів\n\n","Бан","Відміна"),ShowMenuForPlayer(specmenu,playerid);
			case 4: {
				new stm[11];
				format(stm,10,"%d",SERIU[playerid][sID]);
				pc_cmd_slap(playerid,stm);
				ShowMenuForPlayer(specmenu,playerid);
				return 1;
			}
			case 5: return ShowStats(playerid,SERIU[playerid][sID],1),ShowMenuForPlayer(specmenu,playerid);//stats
			case 6: {
				for(new plid = SERIU[playerid][sID]+1; plid<MAX_PLAYERS; plid++) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				for(new plid; plid<=SERIU[playerid][sID]; plid++) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				return 1;
			}
			case 7:  {
				for(new plid = SERIU[playerid][sID]-1; plid>=0; plid--) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				for(new plid=MAX_PLAYERS-1; plid>=SERIU[playerid][sID]; plid--) {
					if(!TI[plid][tLogin] || plid == playerid || SERIU[plid][sID] != INVALID_PLAYER_ID) continue;
					SERIU[playerid][sID]=plid;
					SpecPlayer(playerid,SERIU[playerid][sID]);
					return 1;
				}
				return 1;
			}
			case 8: Lastspec[playerid] = SERIU[playerid][sID],pc_cmd_reoff(playerid,"");//exit
		}
	}
	return true;
}
public OnPlayerExitedMenu(playerid) {
	if(!IsValidMenu(GetPlayerMenu(playerid))) return true;
	ShowMenuForPlayer(GetPlayerMenu(playerid), playerid);
	TogglePlayerControllable(playerid,0);
	return true;
}
public OnPlayerStateChange(playerid, newstate, oldstate) {
	if(newstate == PLAYER_STATE_PASSENGER && (GetPlayerWeapon( playerid ) == 24 || GetPlayerWeapon( playerid ) == 25)) SetPlayerArmedWeapon(playerid, 0);
	if(!ac_1{playerid} && newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_NONE) return Kick(playerid),printf("%d",55555);
	if(newstate == oldstate) return Kick(playerid),printf("%d",333333);

	if(newstate == PLAYER_STATE_DRIVER) {
		LastVeh[playerid] = GetPlayerVehicleID(playerid);
		new tr = GetVehicleTrailer(LastVeh[playerid]);
		if(tr != 0) VehTrailer[playerid] = tr;
	}
	if(oldstate == PLAYER_STATE_DRIVER) {
		LastVeh[playerid] = INVALID_VEHICLE_ID;
		VehTrailer[playerid] = INVALID_VEHICLE_ID;

		if(player_to_race_lv[playerid] == 1) {
			A_DestroyVehicle(player_car_race_lv_id[playerid]);
			player_car_race_lv_id[playerid] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(playerid);
			player_to_race_lv[playerid] = 0;
			for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, td_game[t]);
			new random_spawn = random(sizeof spawns_pos_game_end);
			SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
			SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
			ErrorMessage(playerid,"Ви вышли из автомобіля и были дисквалифицированы с гонки");
		}
		if(theftveh[playerid][0] != INVALID_VEHICLE_ID && theftveh[playerid][2] == 1){ //угон
			theftveh[playerid][1] = 120;
			PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
		}
		if(TI[playerid][tRaceID] != INVALID_VEHICLE_ID) srace_end(playerid,2);
	}
	if((oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER) && newstate == PLAYER_STATE_WASTED) {
		new vid = GetPlayerVehicleID(playerid);
		if(vid) {
			new Float:x, Float:y, Float:z;
			GetVehiclePos(vid, x, y, z),
			SetPlayerPosAC(playerid, x, y, z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
		}
	}
	if(newstate == PLAYER_STATE_DRIVER) {
	    new carid = GetPlayerVehicleID(playerid);
		if(VehicleInfo[carid][vFuel] <= 0 && !IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid)) {
			ErrorMessage(playerid, "В автомобілі закінчився бензин");
			VehicleInfo[carid][vFuel] = 0;
		}
		if(IsAVelik(carid)) {
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(carid,true,lights,alarm,doors,bonnet,boot,objective);
		}
		if(IsAPlane(carid) || IsABoat(carid)) SendClientMessage(playerid,COLOR_WHITE, "Завести/заглушити двигун, використовуйте: "YELLOW"/en");
  		if(!IsABoat(carid) && !IsAPlane(carid) && !IsABikeSped(carid)) {
			SendClientMessage(playerid, COLOR_WHITE, "Для того щоб завести/заглушити натисніть кнопку "YELLOW"\"CTRL\"{f6f6d9}, Керування фарами: "YELLOW"\"ALT\"");
			if(!IsABike(carid) && !IsAVelik(carid)) SendClientMessage(playerid, COLOR_WHITE, "Керування поворотніками "YELLOW"\"NUM4 | NUM6\"");
			SendClientMessage(playerid, COLOR_WHITE, "Установка обмеження швидкості: "YELLOW"\"/slimit\"");
			update_speedometer(playerid);
			speed_timer[playerid] = SetTimerEx("update_speedometer", 200, true, "i",playerid);
			GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
			for(new i; i != 16; i++) {
				if(i == 10) {
					if(engine) PlayerTextDrawColor(playerid, speedometr[playerid][10], 780799999);
					else PlayerTextDrawColor(playerid, speedometr[playerid][10], -1523963137);
				}
				if(i == 11) {
					if(lights) PlayerTextDrawColor(playerid, speedometr[playerid][11], 780799999);
					else PlayerTextDrawColor(playerid, speedometr[playerid][11], -1523963137);
				}
				if(i == 15) {
					if(doors) PlayerTextDrawColor(playerid, speedometr[playerid][15], -1523963137);
					else PlayerTextDrawColor(playerid, speedometr[playerid][15], 780799999);
				}
				PlayerTextDrawShow(playerid, speedometr[playerid][i]);
			}
		}
		if(theftveh[playerid][0] == GetPlayerVehicleID(playerid)){ //угон
			theftveh[playerid][1] = 0;
			theftveh[playerid][2] = 1;
			PlayerTextDrawHide(playerid, theft_PTD[playerid][1]);
		}
		if(TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && GetVehicleModel(carid) != 530) {
			SendOk(playerid,"Ви уронили бочку");
			ClearAnimations(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
			SetPlayerMapIcon(playerid,1,415.0787,1405.1608,8.5656,11,-1,MAPICON_GLOBAL);
			SetPlayerMapIcon(playerid,2,401.2273,1456.7953,8.1906,11,-1,MAPICON_GLOBAL);
			TI[playerid][tJobOil][1] = false;
		}
		if(GetVehicleModel(carid) == 433) {
		    static const f_str[] = "Загружено боєприпасів: "W"%d/40{f6f6d9} ящиков";
		    new string[sizeof(f_str) +4];
		    
			format(string,sizeof(string),f_str,VG[carid][vgAmount][0]);
			SendOk(playerid,string);
			if(PlayerInfo[playerid][pMember] == fARMYLV) {
				SendOk(playerid,"Для загрузки/разгрузки боєприпасів введіть: "W"/load | /unload");
				SendOk(playerid,"Для транспортировки боєприпасів на склады фракций: "W"/carm");
			}
			if(PlayerInfo[playerid][pMember] == fARMYSF) SendOk(playerid,"Використовуйте: "W"/carm");
			if(IsAGang(playerid)) SendOk(playerid,"Для загрузки боєприпасів введіть: "W"/load");
		} 
		if(GetVehicleModel(carid) == 548) {
		    static const f_str[] = "Загружено боєприпасів: "W"%d";
		    new string[sizeof(f_str) +7];

			format(string,sizeof(string),f_str,VG[carid][vgAmount][0]);
			SendOk(playerid,string);
			SendOk(playerid,"Використовуйте: "W"/carm");
		}
		if(VehicleInfo[carid][vTeam] == fINSTRUCTORS && GetVehicleModel(carid) == 426) {
			if(GetPVarInt(playerid,"WaitExam")) {
				new slot = GetPVarInt(playerid,"LessonSlot");
				if(!slot) SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], AutoCP[slot+1][0], AutoCP[slot+1][1], AutoCP[slot+1][2], 3.0);
				else SetPlayerRaceCheckpoint(playerid, 0, AutoCP[slot - 1][0], AutoCP[slot - 1][1], AutoCP[slot - 1][2], AutoCP[slot][0], AutoCP[slot][1], AutoCP[slot][2], 3.0);
				return 1;
			}
		}
		if(VehicleInfo[carid][vTeam] != 0) {
			if(GetTeamID(playerid) != VehicleInfo[carid][vTeam] && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) {
				ErrorMessage(playerid, "У вас немає ключей");
				RemovePlayerFromVehicleAC(playerid);
				return false;
			}
			if(!start_work[playerid]) {
		        ErrorMessage(playerid, "Службовий транспорт Вам недоступний");
	   			RemovePlayerFromVehicleAC(playerid);
				return false;
			}
			else {
			    if(PlayerInfo[playerid][pRank] < VehicleInfo[carid][vRank]) {
			        ErrorMessage(playerid, "Недоступно для Вашого ранга");
					RemovePlayerFromVehicleAC(playerid);
			    }
			}
		}
		if(VG[carid][vgLoading] || VG[carid][vgUnloading]) {
			if((VehicleInfo[carid][vTeam] == fARMYSF && GetTeamID(playerid) == fARMYSF) || 
				(VehicleInfo[carid][vTeam] == fARMYLV && GetTeamID(playerid) == fARMYLV) || 
				(VehicleInfo[carid][vTeam] == fBALLAS && GetTeamID(playerid) == fBALLAS)	||
				(VehicleInfo[carid][vTeam] == fVAGOS && GetTeamID(playerid) == fVAGOS)	||
				(VehicleInfo[carid][vTeam] == fGROVE && GetTeamID(playerid) == fGROVE)	||
				(VehicleInfo[carid][vTeam] == fAZTEC && GetTeamID(playerid) == fAZTEC)	||
				(VehicleInfo[carid][vTeam] == fRIFA && GetTeamID(playerid) == fRIFA)		||
				(VehicleInfo[carid][vTeam] == fLCN && GetTeamID(playerid) == fLCN)		||
				(VehicleInfo[carid][vTeam] == fYAKUZA && GetTeamID(playerid) == fYAKUZA)	||
				(VehicleInfo[carid][vTeam] == fRM && GetTeamID(playerid) == fRM)			||
				(IsAGang(playerid) || IsAArm(playerid) || IsAMafia(playerid) || GetPlayerSkin(playerid) == 191) && (IsAGang(playerid) || GetPlayerSkin(playerid) == 287)) {
				D(playerid,D_STOP_LOAD,DSM, ""YELLOW"Погрузка","\n\n"W"Ви хочете прекратить загрузку/разгрузку боєприпасів?\n\n","Так","Ні");
			}
		}
		if(VG[carid][vgRobHouse]) D(playerid,D_STOP_LOAD_ROBHOUSE,DSM, ""YELLOW"Погрузка","\n\n"W"Ви хочете прекратить загрузку награбленной техники?\n\n","Так","Ні");
		/*if(VehicleInfo[carid][vType] == VEHICLE_TYPE_SPAWN) {
			if(PlayerInfo[playerid][pLevel] > 1) {
				ErrorMessage(playerid,"Цей транспорт Тільки для новачків (1 рівень)");
				return RemovePlayerFromVehicleAC(playerid);
			}
		}*/
		if(VehicleInfo[carid][vType] == VEHICLE_TYPE_INVENT) {
			if(!IsAGang(playerid) && !IsAMafia(playerid) && !IsAArm(playerid)) {
				ErrorMessage(playerid,"Цей транспорт доступний тільки: бандам/мафіям/Арміям");
				return RemovePlayerFromVehicleAC(playerid);
			}
			SendOk(playerid,"Для загрузки/разгрузки боєприпасів введіть: "W"/load | /unload");
		}
	    if(VehicleInfo[carid][vJob] > 0) {
		    switch(VehicleInfo[carid][vJob]) {
				case 1: {
					if((VehicleInfo[carid][vPlayer] !=-1 ) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим гравцем"),RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Ви не працюєте водителем автобуса"), RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Ви уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < BUS_PRICE_RENT) {
							ErrorMessage(playerid,"Для оренди автобуса необхідно $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Ви хочете арендовать цей автобус за "GREEN"$%i"W"?",BUS_PRICE_RENT);
						D(playerid,dBusRent,DSM, ""YELLOW"Аренда",string,"Так","Ні");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 2: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим гравцем"),RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Ви не працюєте механіком"), RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Ви уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Ви хочете арендовать буксир за "GREEN"$%i"W"?",500);
						D(playerid,D_BUKSIR,DSM, ""YELLOW"Аренда",string,"Так","Ні");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 3: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим гравцем"),RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Ви не працюєте развозчиком продуктов/топлива"), RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Ви уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Ви хочете арендовать авто для развозки продуктов за "GREEN"$%i"W"?",500);
						D(playerid,dProdRent,DSM, ""YELLOW"Аренда",string,"Так","Ні");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 4: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим гравцем"),RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Ви не працюєте развозчиком еды"), RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Ви уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Ви хочете арендовать авто для развозки еды за "GREEN"$%i"W"?",500);
						D(playerid,dEatRent,DSM, ""YELLOW"Аренда",string,"Так","Ні");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 5: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим гравцем"),RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Ви не працюєте мойщиком"), RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Ви уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < 500) {
							ErrorMessage(playerid,"Для оренди робочого транспорта необхідно $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[124];
						format(string,sizeof(string),""W"Ви хочете арендовать авто для мойки улиц за "GREEN"$%i"W"?\n\nСостояние дорог: "YELLOW"%s",500,condition_of_roads[condition_of_roads_]);
						D(playerid,D_JOB_CLEAR,DSM, ""YELLOW"Аренда",string,"Так","Ні");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 6: {
					if((VehicleInfo[carid][vPlayer] != -1) && VehicleInfo[carid][vPlayer] != playerid) return ErrorMessage(playerid,"Транспорт арендован другим гравцем"),RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] != VehicleInfo[carid][vJob]) return ErrorMessage(playerid,"Ви не працюєте газонокосильщиком"), RemovePlayerFromVehicleAC(playerid);
					if(PlayerInfo[playerid][pJob] == VehicleInfo[carid][vJob] && TI[playerid][tArendaCar] != carid) {
						if(TI[playerid][tArendaCar] != -1) {
							ErrorMessage(playerid,"Ви уже арендуете рабочий транспорт");
							return RemovePlayerFromVehicleAC(playerid);
						}
						if(GetPlayerMoneyEx(playerid) < 500) {
							ErrorMessage(playerid,"Для оренди робочого транспорта необхідно $500");
							return RemovePlayerFromVehicleAC(playerid);
						}
						new string[128];
						format(string, sizeof(string), ""W"Ви хочете арендовать авто для скашивания травы за "GREEN"$%i"W"?",500);
						D(playerid,D_JOB_GAZON,DSM, ""YELLOW"Аренда",string,"Так","Ні");
					}
					TI[playerid][tSpcarTime] = 0;
				}
				case 50: {
					if(!TI[playerid][tJobOil][0]) return RemovePlayerFromVehicleAC(playerid), ErrorMessage(playerid,"Ви не начали роботу на нефтезаводе");
					if(PlayerInfo[playerid][pProgress] < 150) return RemovePlayerFromVehicleAC(playerid),ErrorMessage(playerid,"Рівень мастерства мал. Введіть: /progress");
					if((VehicleInfo[carid][vPlayer]!=-1) && VehicleInfo[carid][vPlayer] != playerid) return RemovePlayerFromVehicleAC(playerid),ErrorMessage(playerid,"Транспорт занят другим гравцем");
					if(GetPVarInt(playerid,"track_id") != 0 && GetPVarInt(playerid,"track_id") != carid) {
						ErrorMessage(playerid,"Ви уже арендуете рабочий транспорт");
						return RemovePlayerFromVehicleAC(playerid);
					}
					DisablePlayerRaceCheckpoint(playerid);

					SetPlayerMapIcon(playerid,1,525.7095,1470.6411,4.0315,11,-1,MAPICON_GLOBAL);
					SetPlayerMapIcon(playerid,2,481.0192,1308.8954,9.3572,11,-1,MAPICON_GLOBAL);
					TI[playerid][tArendaCar] = GetPlayerVehicleID(playerid);
					SetPVarInt(playerid,"track_id",carid);
					TI[playerid][tSpcarTime] = 0;
				}
				case 70: {
					if(!GetPVarInt(playerid,"fish_yes")) return ErrorMessage(playerid,"У вас немає білета для ловли рыбы. Купити его можно в рыболовном магазине"),RemovePlayerFromVehicleAC(playerid);
					SendOk(playerid,"Для ловили рыбы отправляйтесь в Вказаний квадрат на карте");
					SendOk(playerid,"Используй команду - "W"/fish");
					if(!GetPVarInt(playerid,"fish_place")) {
						new rand = random(sizeof(fish_place));
						GangZoneShowForPlayer(playerid,fish_zone[rand],COLOR_RED);
						SetPVarInt(playerid,"fish_place",rand+1);
					}
				}
				case 71: {
					if(!TI[playerid][tAlcotraz][0]) return ErrorMessage(playerid,"Лодка доступна только для побега с алькатраса"),RemovePlayerFromVehicleAC(playerid);
					D(playerid,DIALOG_NONE,DSM, ""YELLOW"Побег",""W"Думки...\n\nВот я и в лодке..\nГлавно не свалиться в воду, иначе замерзну и меня быстро поймают..\nЧасу маловато...\nЯ близок к свободе...","Закрити","");
					EnableGPSForPlayer(playerid, -2412.9822,2314.3362,0.3909);
				}
		        case 99: {
					for(new i = 1; i <= gPlaneCount; i++) {
						if(carid == gAirplanes[i][aCar]) {
							if(GetString(gAirplanes[i][aOwner],"State")) {
								SetPVarInt(playerid,"SelectPlane", gAirplanes[i][aID]);
								static const f_str[] = ""W"Вартість оренди цього повітряного транспорта: "GREEN"$%d"W"\n\
								Ви дійсно хочете взяти під аренду повітряний транспорт на 10 днів?";
								new string[sizeof(f_str) +1 + 11];
								format(string,sizeof(string),f_str,gAirs[gAirplanes[i][aAirport]-1][airCoast] * gAirplanes[i][aPrice]);
								return D(playerid,D_ARENDA,DSM, ""YELLOW"Аренда",string,"Аренда","Відміна");
							}
							else {
								if(GetString(gAirplanes[i][aOwner],player_name[playerid])) return SendOk(playerid,"Для відмови від оренди, введіть: "W"/norent");
								else if(!GetString(player_name[playerid],gAirplanes[i][aOwner])) {
									ErrorMessage(playerid, "Ви не арендуете данный самолёт");
									return RemovePlayerFromVehicleAC(playerid);
								}
							}
						}
					}
				}
			}
		}
  		if(IsABoat(carid)) {
			if(TI[playerid][tAutoSchool] == 3 && GetPlayerVehicleID(playerid) == car_autoschool[playerid]) return 1;
			if(VehicleInfo[carid][vType] == VEHICLE_TYPE_ALCATRAZ) return 1;
			if(lic[playerid][2] < 1) {
				ErrorMessage(playerid, "У вас немає ліцензій на водний транспорт");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
		}
		if(IsAPlane(carid)) {
			if(TI[playerid][tAutoSchool] == 2 && GetPlayerVehicleID(playerid) == car_autoschool[playerid]) return 1;
			if(lic[playerid][1] < 1) {
				ErrorMessage(playerid,"У вас немає ліцензій на воздушный транспорт");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
		}
		if(CarLic(carid)) {
			if(lic[playerid][0] == 0) {
				ErrorMessage(playerid,"У вас немає водительских прав");
				RemovePlayerFromVehicleAC(playerid);
				return true;
			}
		}
	}
	else if(newstate == PLAYER_STATE_PASSENGER) {
		new carid = GetPlayerVehicleID(playerid);
	    GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);

	    if(doors == 1) return RemovePlayerFromVehicleAC(playerid);

		if(VehicleInfo[carid][vJob] == 1 && VehicleInfo[carid][vPlayer] != -1) {
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(GetPlayerVehicleID(i) != carid) continue;
				if(GetPlayerMoneyEx(playerid) < 100) {
					MeAction(playerid,"показал(а) проездной водителю");
					return 1;
				}
				GiveMoney(playerid,-100,"оплата за проезд автобус");
				if(GetPlayerState(i) == PLAYER_STATE_DRIVER) GiveMoney(i,100,"оплата за проезд автобус");
				break;
			}
		}
		if(TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && GetVehicleModel(carid) != 530) {
			SendOk(playerid,"Ви уронили бочку");
			ClearAnimations(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
			SetPlayerMapIcon(playerid,1,415.0787,1405.1608,8.5656,11,-1,MAPICON_GLOBAL);
			SetPlayerMapIcon(playerid,2,401.2273,1456.7953,8.1906,11,-1,MAPICON_GLOBAL);
			TI[playerid][tJobOil][1] = false;
		}
	}
	else if(newstate == PLAYER_STATE_ONFOOT) {
		if(speed_timer[playerid] != -1) {
			KillTimer(speed_timer[playerid]);
			speed_timer[playerid] = -1;
		}
		for(new i; i < 16; i++) PlayerTextDrawHide(playerid, speedometr[playerid][i]);

		if(TI[playerid][tJobOil][0]) {
			SetPlayerMapIcon(playerid,1,415.0787,1405.1608,8.5656,11,-1,MAPICON_GLOBAL);
			SetPlayerMapIcon(playerid,2,401.2273,1456.7953,8.1906,11,-1,MAPICON_GLOBAL);
		}
		if(TI[playerid][tEther]) {
			TI[playerid][tEther] = false;
			SendOk(playerid,"Ви вышли из прямого эфира");
		}
	}
	return true;
}
stock lights_status(carid,status, playerid=-1) {
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(carid,engine,status,alarm,doors,bonnet,boot,objective);

    VehicleInfo[carid][vLights] = status;

    if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
        if(status) {
			PlayerTextDrawHide(playerid,speedometr[playerid][11]);
			PlayerTextDrawColor(playerid, speedometr[playerid][11], 780799999);
			PlayerTextDrawShow(playerid,speedometr[playerid][11]);
		}
		else {
			PlayerTextDrawHide(playerid,speedometr[playerid][11]);
			PlayerTextDrawColor(playerid, speedometr[playerid][11], -1523963137);
			PlayerTextDrawShow(playerid,speedometr[playerid][11]);
		}
    }
    return true;
}
stock doors_lc(carid, card, playerid = -1) {
    new id = GetNearestCar(playerid);
	if(id == -1) return ErrorMessage(playerid,"Ви далеко від своего Т/С");
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	new string[2+MAX_PLAYER_NAME+27];
	if(doors == 1) {
		SetVehicleParamsEx(carid,engine,lights,alarm,0,bonnet,boot,objective);
		GameTextForPlayer(playerid, "~g~UNLOCK", 5000, 3);
		format(string,sizeof(string),"* %s відкриває особистий транспорт", player_name[playerid]);
		ProxDetector(25.0, playerid, string, COLOR_PURPLE);
		VehicleInfo[house_car[playerid][card]][vLock] = 0;
	}
	else {
		SetVehicleParamsEx(carid,engine,lights,alarm,1,bonnet,boot,objective);
		GameTextForPlayer(playerid, "~r~LOCK", 5000, 3);
		format(string,sizeof(string),"* %s закриває особистий транспорт", player_name[playerid]);
		ProxDetector(25.0, playerid, string, COLOR_PURPLE);
		VehicleInfo[house_car[playerid][card]][vLock] = 1;
	}
    if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	    if(doors) {
			PlayerTextDrawHide(playerid,speedometr[playerid][15]);
			PlayerTextDrawColor(playerid, speedometr[playerid][15], 780799999);
			PlayerTextDrawShow(playerid,speedometr[playerid][15]);
		}
		else {
			PlayerTextDrawHide(playerid,speedometr[playerid][15]);
			PlayerTextDrawColor(playerid, speedometr[playerid][15], -1523963137);
			PlayerTextDrawShow(playerid,speedometr[playerid][15]);
		}
	}
	return 1;
}
stock doors_status(carid, playerid = -1) {
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	new string[2+MAX_PLAYER_NAME+27];
	if(doors == 1) {
		SetVehicleParamsEx(carid,engine,lights,alarm,0,bonnet,boot,objective);
		GameTextForPlayer(playerid, "~g~UNLOCK", 5000, 3);
		format(string,sizeof(string),"* %s відкриває особистий транспорт", player_name[playerid]);
		ProxDetector(25.0, playerid, string, COLOR_PURPLE);
		VehicleInfo[carid][vLock] = 0;
	}
	else {
		SetVehicleParamsEx(carid,engine,lights,alarm,1,bonnet,boot,objective);
		GameTextForPlayer(playerid, "~r~LOCK", 5000, 3);
		format(string,sizeof(string),"* %s закриває особистий транспорт", player_name[playerid]);
		ProxDetector(25.0, playerid, string, COLOR_PURPLE);
		VehicleInfo[carid][vLock] = 1;
	}
    if(playerid != -1 && !IsAVelik(carid) && !IsAPlane(carid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	    if(doors) {
			PlayerTextDrawHide(playerid,speedometr[playerid][15]);
			PlayerTextDrawColor(playerid, speedometr[playerid][15], 780799999);
			PlayerTextDrawShow(playerid,speedometr[playerid][15]);
		}
		else {
			PlayerTextDrawHide(playerid,speedometr[playerid][15]);
			PlayerTextDrawColor(playerid, speedometr[playerid][15], -1523963137);
			PlayerTextDrawShow(playerid,speedometr[playerid][15]);
		}
	}
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid) {
	if(VehicleInfo[vehicleid][vBizz]) {
		for(new i = 0; i < 20; i++) {
			if(vehicleid == FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i]) FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCarID][i] = -1;
		}
	}
	if(GetPVarInt(playerid, "Patrul") == 1) {
		DeletePVar(playerid, "Patrul");
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Ви закончили патрулирование");
		return 1;
	}
	if(vehicleid == car_autoschool[playerid]) {
		A_DestroyVehicle(car_autoschool[playerid]);
		car_autoschool[playerid] = INVALID_VEHICLE_ID;
		DisablePlayerRaceCheckpoint(playerid);
		ErrorMessage(playerid,"Экзамен завален");
		TI[playerid][tAutoSchool] = 0;
		DeletePVar(playerid,"LessonSlotMav");
		DeletePVar(playerid,"LessonSlotBoat");
		SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_x_autos"),GetPVarFloat(playerid,"pos_y_autos"),GetPVarFloat(playerid,"pos_z_autos"),45,76);
	}
	if(GetPVarInt(playerid,"bus_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У вас є 30 секунд щоб повернутися в автобус");
	}
	if(GetPVarInt(playerid,"track_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У вас є 30 секунд щоб повернутися в погрузчик");
	}
	if(GetPVarInt(playerid,"mehjob") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У вас є 30 секунд щоб повернутися в буксир");
	}
	if(GetPVarInt(playerid,"eatjob") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У вас є 30 секунд щоб повернутися в автомобіль для продажи еды");
	}
	if(GetPVarInt(playerid,"clear_id") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У вас є 30 секунд щоб повернутися в автомобіль для чистки улиц");
	}
	if(GetPVarInt(playerid,"veh_id_cleaner") == vehicleid) {
		TI[playerid][tSpcarTime] = 30;
		SendOk(playerid, "У вас є 30 секунд щоб повернутися в автомобіль для скашивания травы");
	}
	return true;
}
public OnPlayerRequestSpawn(playerid) {
    if(!TI[playerid][tLogin]) {
	    ErrorMessage(playerid, "Для ігри на нашем сервере введіть пароль");
	    Kick(playerid);
	    return false;
	}
	return false;
}
public OnPlayerRequestClass(playerid, classid) {
	SetSpawnInfo(playerid, 255, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0);
    if(TI[playerid][tLogin]) {
		SetTimerEx("PlayerSpawn", 200, false, "i", playerid);
		return false;
	}
	else if(!PlayerInfo[playerid][pID]) {
		TI[playerid][tJoined] = true;
		ac_1{playerid} = true;
		new query[137];
		format(query,sizeof query,"SELECT `pID`, `pKey`, `pKeyip`, `GoogleCode`, `pGoogle`, `pvIp` FROM `accounts` WHERE `Name` = '%s' LIMIT 1",player_name[playerid]);
		mysql_tquery(connects, query, "OnPlayerRequestDetect", "d", playerid);
	}
	return true;
}
CB: OnPlayerRequestDetect(playerid,race_check) {
	if(!IsPlayerConnected(playerid)) return 1;
	if(cache_num_rows()) {
		SpecPl(playerid, true);

    	InterpolateCameraPos(playerid, 1326.426269, -818.895751, 79.194717, 6.976511, -2162.627197, 122.978126, 0);
		InterpolateCameraLookAt(playerid, 1323.296020, -822.777343, 78.827857, 10.913708, -2159.674072, 122.096046, 0);

		cache_get_value_name_int(0, "pID", PlayerInfo[playerid][pID]);
		cache_get_value_name(0, "pKey", player_pass[playerid], 64);
		cache_get_value_name(0, "pKeyip", PlayerInfo[playerid][pKeyip],5);
		cache_get_value_name(0, "GoogleCode", PlayerInfo[playerid][pGoogle],63);
		cache_get_value_name_int(0, "pGoogle", PlayerInfo[playerid][pGoogleSec]);
		cache_get_value_name(0, "pvIp", player_ip[playerid],17);
		if(!strlen(player_pass[playerid])) {
			printf("Помилка: Длина пароля гравця равна 0. Name: %s",player_name[playerid]);
			SendClientMessage(playerid,-1,"В Ваш аккаунт возможно войти под любым паролем. (После авторизации, измените его)");
		}
		static const f_str[] = ""W"З поверненням на сервер "YELLOW""FullServName"!"W"\n\n\
Аккаунт "YELLOW"%s"W" успішно знайдений.\n\
Для авторизації, будь-ласка, введіть пароль від аккаунту.\n\n\
Відновити пароль можливо на сайті: "YELLOW""NameSite"";
		new string[sizeof(f_str) + 1 + (-2 + MAX_PLAYER_NAME)];

		format(string,sizeof(string),f_str,player_name[playerid]);
		D(playerid,D_LOGIN,DSP, ""YELLOW"Авторизація",string, "Увійти", "Відміна");
	}
	else {
		SpecPl(playerid, true);
		actorereg[playerid][0] = -1;
		actorereg[playerid][1] = -1;

		InterpolateCameraPos(playerid, 1326.426269, -818.895751, 79.194717, 6.976511, -2162.627197, 122.978126, 0);
		InterpolateCameraLookAt(playerid, 1323.296020, -822.777343, 78.827857, 10.913708, -2159.674072, 122.096046, 0);

		PreloadAnimLib(playerid,"MISC");
		SetPlayerDrunkLevel(playerid, 2500);

		actorereg[playerid][1] = CreateActor(142,237.0683,-27.1575,1206.2128,107.3760);
		SetActorVirtualWorld(actorereg[playerid][1],playerid+1);
		ApplyActorAnimation(actorereg[playerid][1],"MISC","seat_LR",4,1,0,0,1,0);
		actorereg[playerid][0] = CreateActor(90,236.5260,-26.9791,1206.2153,265.9242);
		SetActorVirtualWorld(actorereg[playerid][0],playerid+1);
		ApplyActorAnimation(actorereg[playerid][0],"MISC","seat_LR",4,1,0,0,1,0);

	   	static const f_str[] = "\
"YELLOW"Загальні положення:{f6f6d9}\n\
"NO"- {f6f6d9}Кожен гравець,який відвідав ресурс "FullServName" в своих же інтересах повинен бути ознайомлений з цими правилами.\n\
"NO"- {f6f6d9}Адміністратор має право змінювати степінь покарання на свій розсуд.\n\
"NO"- {f6f6d9}Правила діють для усіх гравців, незалежно від ігрового статуса на сервері.\n\
"NO"- {f6f6d9}Правила можуть бути змінені/відредаговані власником сервера.\n\n\
"YELLOW"Ігровий аккаунт:"W"\n\
"NO"- {f6f6d9}Гравці самостійно відповідають за безпеку своего ігрового аккаунту, а також майно, яке має гравець.\n\
"NO"- {f6f6d9}Для захисту аккаунта від взлому, открім пароля, застосовуйте додаткові засоби, як захист по IP.\n\n\
"YELLOW"Нік в ігровому сервері:"W"\n\
"NO"- {f6f6d9}Нік в грі повинен мати наступний вигляд: 'Ім'я_Прізвище '.(Наприклад: Klaus_Gurren)\n\
"NO"- {f6f6d9}Нік повинен мати повне ім'я, написане на англійській мові.\n\
"NO"- {f6f6d9}Заборонено використовувати чужі (все кимось зайняті) ніки.\n\
"NO"- {f6f6d9}Заборонено використовувати ніки, які містять нецензурні або образливі слова.\n\n\
"YELLOW"Ігровий процес:"W"\n\
"NO"- {f6f6d9}Заборонено використовувати будь-яких програм скрипів читів та.т.п. що дають не чесну перевагу в грі.\n\
"NO"- {f6f6d9}Заборонено використання багів (Ошибок, несправності мода).\n\
"NO"- {f6f6d9}Заборонено використовувати ESC з цілью ухода від погоні/смерті.\n\
"NO"- {f6f6d9}Заборонено вбивати гравців на спавні (Місце відродження, бази организацій).\n\
"NO"- {f6f6d9}Заборонено вбивати гравців за допомогою транспорта (Давити, Стріляти з водійського місця).\n\
"NO"- {f6f6d9}Заборонено вбивство/нанесення фізичної шкоди гравцям без причини (ДМ - Death Match).\n\
"NO"- {f6f6d9}Заборонено зловживати ігровими можливостями для створення неподобств гравцям.";
		new string[sizeof(f_str)];
		format(string,sizeof(string), "%s",f_str);
		D(playerid,D_REG,DSM, ""YELLOW"Правила Серверу", string, "Згоден", "Вийти");
		PlayAudioStreamForPlayer(playerid, "https://ru.files.fm/u/b9wk38dy2");
	}
	return true;
}
stock SetPlayerCriminal(playerid, const killerid[], const reason[]) {
	PlayerInfo[playerid][pCrimes]++;
	UpdatePlayerData(playerid,"pCrimes",PlayerInfo[playerid][pCrimes]);
	strmid(PlayerInfo[playerid][pVictim], killerid, 0, strlen(killerid), MAX_PLAYER_NAME);
	strmid(PlayerInfo[playerid][pAccusedof], reason, 0, strlen(reason), 43);
	if(PlayerInfo[playerid][pSearch] > 6) PlayerInfo[playerid][pSearch] = 6;
	return 1;
}
CB: Timer_Unix() {
	new tickcount1 = GetTickCount();
	if(timers_unix > -1) {
		unix = gettime(tmphour, tmpminute, tmpsecond);//узнаём время.
		if(unix_hour <= unix) {// прошел час
			new string[128];
			format(string, sizeof(string), "Теперішній час %d:00", tmphour);
			SendClientMessageToAll(COLOR_WHITE, string);
			PayDay();
			SetWorldTime(tmphour);
			unix_hour = unix+3600;
		}
		if(unix_min <= unix) {//прошла хвилина
			minute_timer();
			TimeReportBot();
			unix_min = unix+60;
		}
		if(unix_sec <= unix) {//прошла секунда
			second_timer();
			game_dm();
			race_game();
			golod_game();
			start_invets();
			OnUpdateCheatPlayers();
			if(BizWarTime[1]) BizWarTimer();
			unix_sec = unix+1;
		}
		if(unix_three_sec <= unix) {//прошло 3 секунды
			other_timer();
			unix_three_sec = unix + 3;
		}
		if(unix_heal <= unix) {
			heal_timer();
			unix_heal = unix+240;
		}
	}
	time_grandtimer = GetTickCount() - tickcount1;
	if(time_grandtimer > time_grandtimer_max) time_grandtimer_max = time_grandtimer;
	return 1;
}
stock other_timer() {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(SERIU[i][sID] != INVALID_PLAYER_ID) continue;
		if(PlayerToPoint(1.2,i,308.1984,-168.6314,999.5938) && IsAGang(i)) {
			StealMats(i);
		}
		if(PlayerInfo[i][pHouse] && gHouses[PlayerInfo[i][pHouse]-1][houseImprove][2]) {
			if(PlayerToPoint(10,i,gHouses[PlayerInfo[i][pHouse]-1][houseParkX], gHouses[PlayerInfo[i][pHouse]-1][houseParkY], gHouses[PlayerInfo[i][pHouse]-1][houseParkZ]) && ((house_car[i][0] != INVALID_VEHICLE_ID && GetPlayerVehicleID(i) == house_car[i][0]) || (house_car[i][1] != INVALID_VEHICLE_ID && GetPlayerVehicleID(i) == house_car[i][1]))) {
				GameTextForPlayer(i,"~g~PRESS CAPS LOCK",1300,4);
			}
		}
		if(Sounds == 1) {
			new distance = floatround(GetPlayerDistanceFromPoint( i, streampos[0], streampos[1], streampos[2]) );
			if(UseSound[i] == 0 && distance <= rads) {
				PlayAudioStreamForPlayer(i, stream, streampos[0], streampos[1], streampos[2], rads, 1);
				UseSound[i] = 1;
			}
			if(UseSound[i] == 1 && distance > rads) {
				UseSound[i] = 0;
			}
		}
	}
	if(invent_time < unix && invent_zone_id != -1) {
		for(new i; i < 13;i++) {
			if(invent_object[i] != INVALID_OBJECT_ID) DestroyDynamicObject(invent_object[i]);
		}
		DestroyDynamic3DTextLabel(invent_text);
		DestroyDynamicPickup(invent_pickup);
		DestroyDynamicArea(invent_area);
		GangZoneDestroy(invent_zone);
		invent_zone_id = -1;
		invent_time_car = unix + 600*3;
		start_invent = 5;
	}
	if(invent_time_car < unix && start_invent == 5) {
		if(invent_car[0] != INVALID_VEHICLE_ID) A_DestroyVehicle(invent_car[0]),invent_car[0] = INVALID_VEHICLE_ID;
		if(invent_car[1] != INVALID_VEHICLE_ID) A_DestroyVehicle(invent_car[1]),invent_car[1] = INVALID_VEHICLE_ID;
		if(invent_car[2] != INVALID_VEHICLE_ID) A_DestroyVehicle(invent_car[2]),invent_car[2] = INVALID_VEHICLE_ID;
	}
	update3dtext();
	return 1;
}
stock heal_timer() {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pHospital]) continue;
		if(!PlayerInfo[i][pDisease][0] && !PlayerInfo[i][pDisease][1]) continue;
		new Float:health;
		GetPlayerHealth(i,health);
		if(health > 10) SetPlayerHealth(i, GetPlayerHP(i)-3.0);
	}
	return 1;
}
stock minute_timer() {
	new hour, minute, second;
	gettime(hour, minute, second);
	if(minute == 30) fork_start();
	if(hour >= 11) {
		for(new i; i < 18;i++) {
			if(alcatraz[i][alc_posRZ] != 0) MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX]+1.5,alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
			else MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX]-1.5,alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
		}
	}
	else {
		for(new i; i < 18;i++) {
			MoveDynamicObject(alcatraz[i][alc_id],alcatraz[i][alc_posX],alcatraz[i][alc_posY],alcatraz[i][alc_posZ],0.4,alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ]);
		}
	}
	for(new gang = 0; gang < 8; gang ++) {
		if(fracmoroz[gang]) {
			if(fracmoroz[gang] <= unix) {
				new string[128];
				format(string,sizeof(string),"Заморозка с %s %s снята",(gang<5) ? ("банди"):("мафии"),fracmorozName[gang]);
				SendClientMessageToAll(COLOR_LIGHTRED,string);
				fracmoroz[gang]=0;
				UpdateMorozed();
			}
		}
		if(l_actor[0][gang] && l_actort[0][gang] <= unix) l_actor[0][gang] = 0,UseLabrary(0,gang,0);
		if(l_actor[1][gang] && l_actort[1][gang] <= unix) l_actor[1][gang] = 0,UseLabrary(1,gang,0);
		if(l_actor[2][gang] && l_actort[2][gang] <= unix) l_actor[2][gang] = 0,UseLabrary(2,gang,0);
		if(l_actor[0][gang] && l_actort[0][gang] > unix && FI[fLCN][fDrugs] < 20000) FI[fLCN][fDrugs] += 1;
		if(l_actor[1][gang] && l_actort[1][gang] > unix && FI[fYAKUZA][fDrugs] < 20000) FI[fYAKUZA][fDrugs] += 1;
		if(l_actor[2][gang] && l_actort[2][gang] > unix && FI[fRM][fDrugs] < 20000) FI[fRM][fDrugs] += 1;
	}
	for(new i = 0; i < gHouseCount; i ++) {
		if(gHouses[i][houseOwnerID] != 0 && gHouses[i][houseDay] <= unix) {
			new query[512];
			for(new z;z<9;z++) {
				if(z < 3) {
					gHouses[i][houseImprove][z] = 0,gHouses[i][houseSkin][z] = 0;
				}
				gHouses[i][houseGun][z] = 0;
				SaveHouseGun(i);
			}
			gHouses[i][houseDay] = 0;
			gHouses[i][houseSafeCode] = 0;
			gHouses[i][houseSafeMoney] = 0;
			gHouses[i][houseDrugs] = 0;
			gHouses[i][houseHealth] = 0;
			gHouses[i][houseProducts] = 0;
			gHouses[i][houseFamily] = 0;
			DestroyDynamicPickup(gHousePickup[i]);
			gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);	
			DestroyDynamicMapIcon(gHouseIcon[i]);
			gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],31,CWHITE);
			
			FI[fWHITEHOUSE][fBank] += floatround(gHouses[i][housePrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			new ID = GetCheckID(gHouses[i][houseOwner]);
			if(ID != INVALID_PLAYER_ID) {
				if(!strcmp(player_name[ID],gHouses[i][houseOwner],true)) {
					PlayerInfo[ID][pHouse] = 0;
					UpdatePlayerData(ID,"house",0);
					GiveMoney(ID, floatround(gHouses[i][housePrice]/100*80),"продажа будинку");
					SendClientMessage(ID,COLOR_REDD,"Ваш дом продан государству за неуплату");
					if(house_car[ID][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][0]),house_car[ID][0] = INVALID_VEHICLE_ID;
					if(house_car[ID][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][1]),house_car[ID][1] = INVALID_VEHICLE_ID;
				}
			}
			else {
				format(query,sizeof(query),"UPDATE `accounts` SET `house` = '0',`pBank` = `pBank` + %d,`homesell` = '1' WHERE `pID` = '%d'",floatround(gHouses[i][housePrice]/100*80),gHouses[i][houseOwnerID]);
				mysql_tquery(connects, query);
			}
			format(query,sizeof(query),"UPDATE `houses` SET `ownerid` = '0', `owner` = '', improve = '0|0|0|0|0|0', gun = '0|0|0|0|0|0|0|0|0', skin = '0|0|0|0',safecode='0', safemoney='0', drugs='0', medkit='0', products='0',peopleid1 = '0',peopleid2 = '0',peopleid3 = '0',people1='',people2='',people3='',family = '0' WHERE `id` = '%d'",i+1);
			mysql_tquery(connects, query);
			gHouses[i][houseOwnerID] = 0;
			strdel(gHouses[i][houseOwner],0,24);
			arendaor_closed(i);
			strmid(gHouseArendator[i][0],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[i][1],"None",0,strlen("None"),MAX_PLAYER_NAME);
			strmid(gHouseArendator[i][2],"None",0,strlen("None"),MAX_PLAYER_NAME);		
			gHouses[i][houseHabitID][0] = 0;
			gHouses[i][houseHabitID][1] = 0;
			gHouses[i][houseHabitID][2] = 0;
		}
	}
	for(new i = 0; i < gBusinessCount; i ++) {
		if(gBusiness[i][bizzOwnerID] != 0 && gBusiness[i][bizzDay] <= unix) {
			new sum = floatround(gBusiness[i][bizzSellPrice]/100*80);
			new query[282];
			
			FI[fWHITEHOUSE][fBank] += floatround(gBusiness[i][bizzSellPrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			new ID = GetCheckID(gBusiness[i][bizzOwner]);
			if(ID != INVALID_PLAYER_ID) {
				if(!strcmp(player_name[ID],gBusiness[i][bizzOwner],true)) {
					PlayerInfo[ID][pBusiness] = 0;
					UpdatePlayerData(ID,"bussiness",0);
					GiveMoney(ID, sum,"продажа бізнеса");
					SendClientMessage(ID,COLOR_REDD,"Ваш бізнес продан государству за неуплату");
				}
			}
			else {
				format(query,156,"UPDATE `accounts` SET `bussiness` = '0',`pBank` = `pBank` + '%d',`bizzsell` = '1' WHERE `pID` = '%d'",sum,gBusiness[i][bizzOwnerID]);
				mysql_tquery(connects, query);
			}
			if(gBusiness[i][bizzType] == 11 || gBusiness[i][bizzType] == 14) sell_bizztaxi(i+1);
			format(query,sizeof(query),"UPDATE `business` SET `ownerid` = '0', `owner` = '', `status` = '1', `mafia` = '0', `price` = '5',`order` = '0',`orderprice` = '0',`upgrade` = '5000|0|0' WHERE `id` = '%d'",i+1);
			mysql_tquery(connects, query,"","");
			gBusiness[i][bizzOwnerID] = 0;
			gBusiness[i][bizzStatus] = 1;
			gBusiness[i][bizzMafia] = 0;
			gBusiness[i][bizzPrice] = 5;
			gBusiness[i][bizzUpgrade][0] = 5000;
			gBusiness[i][bizzUpgrade][1] = 0;
			gBusiness[i][bizzUpgrade][2] = 0;
			SetString(gBusiness[i][bizzOwner],"");		
			UpdateBusinessText(i);
		}
	}
	for(new i = 0; i < gHotelCount; i ++) {
		if(gHotels[i][hotelOwnerID] != 0 && gHotels[i][hotelDay] <= unix) {
			new sum = floatround(gHotels[i][hotelPrice]/100*80);

			FI[fWHITEHOUSE][fBank] += floatround(gHotels[i][hotelPrice]/100*20);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			new query[156];
			
			new ID = GetCheckID(gHotels[i][hotelOwner]);
			if(ID != INVALID_PLAYER_ID) {
				if(!strcmp(player_name[ID],gHotels[i][hotelOwner],true)) {
					PlayerInfo[ID][pHotel] = 0;
					UpdatePlayerData(ID,"hotelid",0);
					GiveMoney(ID, sum,"продажа отеля");
					SendClientMessage(ID,COLOR_REDD,"Ваш отель продан государству за неуплату");
				}
			}
			else {
				format(query,sizeof(query),"UPDATE `accounts` SET `hotelid` = '0',`pBank` = `pBank` + '%d',`hotelsell` = '1' WHERE `pID` = '%d'",sum,gHotels[i][hotelOwnerID]);
				mysql_tquery(connects, query);
			}
			format(query,sizeof(query),"UPDATE `hotels` SET `ownerid` = '0', `owner` = '', `bank` = '0',`coast` = '400' WHERE `id` = '%d'",i+1);
			mysql_tquery(connects, query,"","");
			gHotels[i][hotelOwnerID] = 0;
			SetString(gHotels[i][hotelOwner],"");		
			UpdateHotelText(i);
		}
	}
	for(new i = 0; i < gRoomsCount; i ++) {
		if(!GetString(gRooms[i][roomsOwner], "None") && gRooms[i][roomsDay] <= unix) {
			new query[128];
			
			new ID = GetCheckID(gRooms[i][roomsOwner]);
			if(ID != INVALID_PLAYER_ID) {
				if(!strcmp(player_name[ID],gRooms[i][roomsOwner],true)) {
					PlayerInfo[ID][pRoom] = 0;
					UpdatePlayerData(ID,"hotelroom",0);
					SendClientMessage(ID,COLOR_REDD,"Аренда номера в отеле истекла");
					if(house_car[ID][0] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][0]),house_car[ID][0] = INVALID_VEHICLE_ID;
					if(house_car[ID][1] != INVALID_VEHICLE_ID) A_DestroyVehicle(house_car[ID][1]),house_car[ID][1] = INVALID_VEHICLE_ID;
				}
			}
			else {
				format(query,sizeof(query),"UPDATE `accounts` SET `hotelroom` = '0',`roomsell` = '1' WHERE `Name` = '%s'",gRooms[i][roomsOwner]);
				mysql_tquery(connects, query, "","");
			}
			format(query,sizeof(query),"UPDATE `rooms` SET `owner` = 'None' WHERE `id` = '%d'",i+1);
			mysql_tquery(connects, query,"","");

			SetString(gRooms[i][roomsOwner], "None");
		}
	}
	for(new i = 0; i < gAirCount; i ++) {
		if(gAirs[i][airOwnerID] != 0 && gAirs[i][airDay] <= unix) {
			new sum = floatround(gAirs[i][airPrice]/100*80);

			FI[fWHITEHOUSE][fBank] += floatround(gAirs[i][airPrice]/100*80);
			UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

			new query[156];
			
			new ID = GetCheckID(gAirs[i][airOwner]);
			if(ID != INVALID_PLAYER_ID) {
				if(!strcmp(player_name[ID],gAirs[i][airOwner],true)) {
					PlayerInfo[ID][pAirport] = 0;
					UpdatePlayerData(ID,"airport",0);
					GiveMoney(ID, sum,"продажа аэропорта");
					SendClientMessage(ID,COLOR_REDD,"Ваш аэропорт продан государству за неуплату");
				}
			}
			else {
				format(query,sizeof(query),"UPDATE `accounts` SET `airport` = '0',`pBank` = `pBank` + '%d',`airsell` = '1' WHERE `pID` = '%d'",sum,gAirs[i][airOwnerID]);
				mysql_tquery(connects, query);
			}
			format(query,sizeof(query),"UPDATE `airports` SET `ownerid` = '0', `owner` = '', `bank` = '0' WHERE `id` = '%d'",i+1);
			mysql_tquery(connects, query,"","");
			gAirs[i][airOwnerID] = 0;
			SetString(gAirs[i][airOwner],"");		
			UpdateAirportsText(i);
		}
	}
	for(new i = 1; i <= gPlaneCount; i ++) {
		if(!GetString(gAirplanes[i][aOwner], "State") && gAirplanes[i][aTime] <= unix) {
			SetString(gAirplanes[i][aOwner], "State");
			gAirplanes[i][aTime] = 0;
			UpdateDynamic3DTextLabelText(gAirplanes[i][aText],-1,"Не арендован");
			SavePlane(i);
			SetVehicleParamsEx(gAirplanes[i][aCar],engine,lights,alarm,0,bonnet,boot,objective);
		}
	}
	for(new i = 1; i < 16; i ++) {
		if(ATMData[i][atm_Bank] && ATMData[i][atm_BankTime] <= unix) {
			ATMData[i][atm_Bank] = 0;
			ATMData[i][atm_BankTime] = 0;
			UpdateAtmData(i,"ATM_BANK",ATMData[i][atm_Bank]);
			UpdateAtmData(i,"ATM_BANKTIME",ATMData[i][atm_BankTime]);
		}
	}
	for(new i; i<MAX_BILLBORDS; i++) {
		if(BildInfo[i][bOwned] && BildInfo[i][bDay] <= unix) {
			BildInfo[i][bFontSize] = 0;
		    BildInfo[i][bBackColor] = 0;
			BildInfo[i][bFontFace] = 0;
			BildInfo[i][bOwned] = 0;
			BildInfo[i][bDay] = 0;
			format(BildInfo[i][bOwner],1,"-");
		    UpdateBuildText(i);
			new query[256];
		    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwned` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",i);
			mysql_tquery(connects,query,"","");
		}
	}
	for(new i=0;i<MAX_DROP_GUNS;i++) {
		if(drop_gun[i][dg_object] == -1) continue;
		if(drop_gun[i][dg_time] < 1) continue;
		drop_gun[i][dg_time] --;
		if(drop_gun[i][dg_time]<=0){
			DestroyDynamicObject(drop_gun[i][dg_object]);
			drop_gun[i][dg_object]=-1;
			if(drop_gun[i][dg_text] != Text3D:-1) {
				Delete3DTextLabel(drop_gun[i][dg_text]);
				drop_gun[i][dg_text] = Text3D:-1;
			}
		}
	}
	for(new i=0;i<50;i++) {
		if(FracVehicle[i][fvehModelNew] == 0) continue;
		if(FracVehicle[i][fvehModelNew] && FracVehicle[i][fvehTime] < unix) {
			FracVehicle[i][fvehTime] = 0;
			FracVehicle[i][fvehModelNew] = 0;
			save_fracveh(i);
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(TI[i][tAFK] <= 5) {
			PlayerInfo[i][pPlayTime][1]++;
			if(PlayerInfo[i][pVips] == VIP_PLATINA || PlayerInfo[i][pVips] == VIP_ECSCLUSIVE || PlayerInfo[i][pVips] == VIP_FOREVER) {
				if(PlayerInfo[i][pPlayTime][1] >= vip_status[PlayerInfo[i][pVips]][vip_rulet]) {
					new query[156];
					format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET lotteryfree = lotteryfree + '1' WHERE pID = '%d'",PlayerInfo[i][pID]);
					mysql_tquery(connects,query,"","");
					PlayerInfo[i][pPlayTime][1] = 0;
				}
			}
			else {
				if(PlayerInfo[i][pPlayTime][1] >= BonusInfo[act_timerullet]) {
					new query[156];
					format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET lotteryfree = lotteryfree + '1' WHERE pID = '%d'",PlayerInfo[i][pID]);
					mysql_tquery(connects,query,"","");
					PlayerInfo[i][pPlayTime][1] = 0;
				}
			}
		}
		PlayerInfo[i][pPlayTime][0]++;
		if(TI[i][tMaskTime] > 0) {
			TI[i][tMaskTime]--;
		    if(TI[i][tMaskTime] == 0) {
			    if(PlayerInfo[i][pMember] && start_work[i]) SetPlayerColor(i,gFractionSpawn[PlayerInfo[i][pMember]][fracColor]);
			    else SetPlayerColor(i,0xFFFFFF11);
				if(TI[i][tMasked]) SetPlayerColor(i,gFractionSpawn[TI[i][tMasked]][fracColor]);
			    SendOk(i,"По истечению 10 хвилин, маска була знята");
				RemovePlayerAttachedObject(i, 8);
		    }
		}
		if(PlayerInfo[i][pSatiety] >= 1) {
			if(PlayerInfo[i][pDSatiety]) continue;
			SetPVarFloat(i,"timer_satiety",GetPVarFloat(i,"timer_satiety") + vip_status[PlayerInfo[i][pVips]][vip_satiety]);
			if(GetPVarFloat(i,"timer_satiety") >= 2) {
				GiveFullness(i,-1);
				DeletePVar(i,"timer_satiety");
			}
		}
		if(PlayerInfo[i][pSatiety] == 15 && !PlayerInfo[i][pDisease][1] && TI[i][tLogin] && PlayerInfo[i][pLevel] > 2) {
			if(PlayerInfo[i][pDDisease]) continue;
			SendOk(i,"Ви дуже голодні. Щоб не захворіти, радимо зайти в закусочну");
			SendOk(i,"Слідіть за своїм станом голоду на прогрес барі");
		}
		if(PlayerInfo[i][pSatiety] < 5 && !PlayerInfo[i][pDisease][1] && TI[i][tLogin] && PlayerInfo[i][pLevel] > 2) {
			if(PlayerInfo[i][pDDisease]) continue;
			new rand = random(5);
			if(rand != 2) continue;
			SendOk(i,"ви захворіли від недостатку харчування (анорексія)");
			SendOk(i,"Радимо вам звернутися до лікарів любого із пунктів МЧС");
			SendOk(i,"(( Увага! Состояние вашій жизни (HP) будет падать значительно быстрее ))");
			PlayerInfo[i][pDisease][1] = 1;
			UpdatePlayerData(i,"pDisease_1",1);
		}
		if(TI[i][tArendKey] != -1) {
			new rc = TI[i][tArendKey];
			if(ArendInfo[rc][aPlayerID] != i) {
				TI[i][tArendKey] = -1;
				continue;
			}
			if(!IsPlayerInVehicle(i, ArendInfo[rc][aID])) {
				new Float:x, Float:y, Float:z;
				GetVehiclePos(ArendInfo[rc][aID], x, y, z);
				if(!IsPlayerInRangeOfPoint(i, 2000.0, x, y, z) && GetPlayerVirtualWorld(i) == 0 && GetPlayerInterior(i) == 0) {
					SendClientMessage(i, COLOR_REDD, "Ви отошли слишком далеко от арендованного Вами транспорта");
					ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
					SetVehicleToRespawn(ArendInfo[rc][aID]);
					TI[i][tArendKey] = -1;
					continue;
				}
			}
		}
	}
}
CB: OnUpdateCheatPlayers() {
	foreach(new playerid:Player) {
		if(!TI[playerid][tLogin] ||  AntiCheatIsKickedWithDesync(playerid)) continue;
		if(TI[playerid][tAFK] >= 3) continue;
		if(AC_GunCheattime[playerid] > unix) break;
		for (new i=0;i<10;i++) {
			new weaponid,ammo;
			GetPlayerWeaponData(playerid,i,weaponid,ammo);
			GunPlayer[playerid][i][1] = ammo;
			GunPlayer[playerid][i][0] = weaponid;
		}
	}
	return 1;
}
stock second_timer() {
	if(second_timerlog > 0) {
		new grandstr[256]; 
		format(grandstr, 256, "Потерялся конец second_timerlog. Этап: %d", second_timerlog);
		printf("%s",grandstr);
	}
	new tickcount1 = GetTickCount();
	new string[156];
	FuelTmier();
	second_timerlog = 1;
	for(new i = 0; i < 119; i ++) {
		if(SI[i][sad_temp] != 4) continue;
		if(SI[i][sad_temp] == 4 && SI[i][sad_time] <= unix) {
			sad_delete(i);
		}
	}
	if(BizWarTime[0] > 0) {
		BizWarTime[0]--;
		if(BizWarTime[0] == 600) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"До начала встречи осталось 10 хвилин");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"До начала встречи осталось 10 хвилин");
		}
		if(BizWarTime[0] == 300) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"До начала встречи осталось 5 хвилин");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"До начала встречи осталось 5 хвилин");
		}
		if(BizWarTime[0] == 180) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"Приготовьтесь! До начала встречи осталось 3 хвилины");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"Приготовьтесь! До начала встречи осталось 3 хвилины");
		}
		if(BizWarTime[0] == 60) {
			SendFamilyMessage(MZInfo[bFrakVlad],COLOR_LIGHTRED,"Увага! До начала встречи осталась 1 хвилина");
			SendFamilyMessage(MZInfo[bNapad],COLOR_LIGHTRED,"Увага! До начала встречи осталась 1 хвилина");
		}
		if(BizWarTime[0] == 0) MafiaTimeCapture(MZInfo[bFrakVlad],MZInfo[bNapad]);
	}
	second_timerlog = 2;
	/*if(RingInfo[0][rgState] == 1 && TOTALSTYLELIST) {
		if(RingInfo[0][rgTime] > 0) {
			RingInfo[0][rgTime] --;
			new player1 = RingInfo[0][rgPlayer][0];
			new player2 = RingInfo[0][rgPlayer][1];
			format(string, sizeof(string), "~r~%i", RingInfo[0][rgTime]);
			GameTextForPlayer(player1, string, 3000, 5);
			GameTextForPlayer(player2, string, 3000, 5);
			if(RingInfo[0][rgTime] <= 0) {
				if((IsPlayerInDynamicCP(RingInfo[0][rgPlayer][0], RingCP[1]) && IsPlayerInDynamicCP(RingInfo[0][rgPlayer][1], RingCP[0])) ||
				(PlayerInfo[RingInfo[0][rgPlayer][1]][pCash] < RingInfo[0][rgPrice] && PlayerInfo[RingInfo[0][rgPlayer][0]][pCash] < RingInfo[0][rgPrice])) {
					format(string, sizeof(string), ""W"[РЭФЕРИ] {f6f6d9}Поединок между "ORANGE"%s{f6f6d9} и "ORANGE"%s{f6f6d9} начался", player_name[player1], player_name[player2]);
					ProxDetector(15.0,player1, string, 0xFFFFFFFF);
					RingInfo[0][rgState] = 2;
					DestroyDynamicCP(RingCP[0]);
		            DestroyDynamicCP(RingCP[1]);
					TOTALSTYLELIST--;

					SetPlayerPosAC(RingInfo[0][rgPlayer][1],762.7578,2.3013,1001.5942);
					SetPlayerFacingAngle(RingInfo[0][rgPlayer][1],130);
					SetPlayerPosAC(RingInfo[0][rgPlayer][0],758.9441,-1.7533,1001.5942);
					SetPlayerFacingAngle(RingInfo[0][rgPlayer][0],315);
					TogglePlayerControllable(RingInfo[0][rgPlayer][1],false);
					TogglePlayerControllable(RingInfo[0][rgPlayer][0],false);
					SetTimerEx("StartFight" , 5000, false, "ii",RingInfo[0][rgPlayer][0],RingInfo[0][rgPlayer][1]);
					SetCameraBehindPlayer(RingInfo[0][rgPlayer][0]);
					SetCameraBehindPlayer(RingInfo[0][rgPlayer][1]);

					TI[RingInfo[0][rgPlayer][0]][tFight] = RingInfo[0][rgPlayer][1];
					TI[RingInfo[0][rgPlayer][1]][tFight] = RingInfo[0][rgPlayer][0];
				}
				else {
					TOTALSTYLELIST--;
					dell_arena();
				}
			}
		}
	}*/
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		ac_Timer(i);
		new Float:xw, Float:yw, Float:zw;
		GetPlayerVelocity(i,xw,yw,zw);
		if(!TI[i][tLogin] && (xw > 0 || yw > 0 || zw > 0)) {
   			Kick(i),printf("%d",999999);
		}
		if(!TI[i][tLogin]) {
     		if(TI[i][tLoginTime] > 0) {
				if(GetPlayerVirtualWorld(i) != i+1 && TI[i][tSelectSkin] == false) Kick(i),print("NOP AC SOB");
				TI[i][tLoginTime]--;
         		if(TI[i][tLoginTime] == 0) {
           			ErrorMessage(i,"Время на авторизацию вышло");
              		Kick(i);
				}
           	}
	    }
		else {
			new hour, minute, second;
			gettime(hour, minute, second);
			if(hour == 0 && minute == 0 && second == 0) {
				if(getDayEx() == 2) {
					if(!PlayerInfo[i][pAdmin]) continue;
					gAdminTime[i] = 0;
					mysql_tquery(connects, "UPDATE admin SET online_monday = 0, online_tuesday = 0, online_wednesday = 0, online_thursday = 0, online_friday = 0, online_saturday = 0, online_sunday = 0, lastpm = pm, lastrep = rep", "", "");
				}
				gOnlinePlayer[i][1] = gOnlinePlayer[i][0];
				gOnlinePlayerAFK[i][1] = gOnlinePlayerAFK[i][0];
				gOnlinePlayer[i][0] = 0;
				gOnlinePlayerAFK[i][0] = 0;
			}
			second_timerlog = 3;
			BumboxSync(i);
			if(spaned[i]==0) ReloadAllAnims(i);
			//if((GetPlayerWeapon(i) == 4 || GetPlayerWeapon(i) == 9 || GetPlayerWeapon(i) == 16 || GetPlayerWeapon(i) == 18 || GetPlayerWeapon(i) == 28 || GetPlayerWeapon(i) == 34 || GetPlayerWeapon(i) == 36 || GetPlayerWeapon(i) == 38 || GetPlayerWeapon(i) == 37 || GetPlayerWeapon(i) == 35 || GetPlayerWeapon(i) == 44 || GetPlayerWeapon(i) == 45) && !player_to_game[i]) DelGun(i),Kick(i),print("AC GUN");
			if(PlayerInfo[i][pHospital] || TI[i][tHeal]) {
				SetPVarInt(i,"timer_heal",GetPVarInt(i,"timer_heal") + 1);
			    if(GetPVarInt(i,"timer_heal") >= 3 && TI[i][tAFK] <= 3) {
					if(TI[i][tHeal]) SetPlayerHealth(i, GetPlayerHP(i) + vip_status[PlayerInfo[i][pVips]][vip_healtime]*3);
					else SetPlayerHealth(i, GetPlayerHP(i) + vip_status[PlayerInfo[i][pVips]][vip_healtime]);
					DeletePVar(i,"timer_heal");
				}
				if(GetPlayerHP(i) >= 75) {
					if(PlayerInfo[i][pHospital]) SendOk(i,"Ви пройшли курс лікування. Можете покинути лікарню");
					PlayerInfo[i][pHospital] = 0;
					DeletePVar(i,"timer_heal");
				}
			}
			if(GetPVarInt(i,"taxi_time") <= gettime()) {
				DeletePVar(i,"taxi_bizz");
				DeletePVar(i,"taxi_class");
				DeletePVar(i,"taxi_time");
			}
			if(TI[i][tGagTime]) {
				TI[i][tGagTime] --;
				if(TI[i][tGagTime] == 1) {
					TI[i][tGag] = false;
					TI[i][tGagTime] = 0;
					SendOk(i, "Кляп стал мокрым и выпал, Вы снова можете говорить");
				}
			}
			if(TI[i][tCuffed] == 1) {
				if(!TI[i][tCuffedTime]) {
					TogglePlayerControllable(i, true);
					TI[i][tCuffed] = 0;
					TI[i][tCuffedTime] = 0;
				}
				else if(TI[i][tCuffedTime]) {
					TI[i][tCuffedTime] --;
					if(TI[i][tCuffedTime] == 1) {
						TI[i][tCuffedTime] = 0;
					}
				}
			}
			if(GotoInfo[i][gtID] != INVALID_PLAYER_ID) {
				new cuffed = GotoInfo[i][gtID];
				if(!IsPlayerConnected(cuffed) || !TI[cuffed][tLogin]) {
					GotoInfo[i][gtID] = INVALID_PLAYER_ID;
					GotoInfo[i][gtTPX] = 0.0;
					GotoInfo[i][gtTPY] = 0.0;
					GotoInfo[i][gtTPZ] = 0.0;
					GotoInfo[cuffed][gtState] = 0;
					GotoInfo[cuffed][gtStayed] = 0;
					GotoInfo[cuffed][gtGoID] = INVALID_PLAYER_ID;
					GotoInfo[cuffed][gtX] = 0.0;
					GotoInfo[cuffed][gtY] = 0.0;
					GotoInfo[cuffed][gtZ] = 0.0;
				}
			}
			if(GotoInfo[i][gtGoID] != INVALID_PLAYER_ID) {
				new goid = GotoInfo[i][gtGoID];
				if(IsPlayerConnected(goid) && TI[goid][tLogin]) {
					new Float:xX, Float:xY, Float:xZ,Float:agle;
					GetPlayerPos(goid, xX, xY, xZ);
					GetPlayerFacingAngle(i, agle);
					if(!IsPlayerInRangeOfPoint(i, 20, xX, xY, xZ)) {
						TI[i][tVirtualWorld] = GetPlayerVirtualWorld(goid);
						TI[i][tInterior] = GetPlayerInterior(goid);
						SetPlayerFacingAngle(i,agle);
						SetPlayerPosAC(i, xX,xY,xZ,TI[i][tVirtualWorld],TI[i][tInterior]);
					}
					if(GetPlayerState(goid)==1) {
						new ANIMATION;
						if(GotoInfo[goid][gtTPX] != 0.0 || GotoInfo[goid][gtTPY] != 0.0) {
							SetPlayerFaceToPoint(i, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY]);
							ANIMATION = GoPlayerAnimation(i, GotoInfo[goid][gtTPX], GotoInfo[goid][gtTPY], GotoInfo[goid][gtTPZ]);
						}
						else {
							TurnPlayerFaceToPlayer(i, goid);
							ANIMATION = GoPlayerAnimation(i, xX, xY, xZ);
						}
						if(ANIMATION != 1) {
							if(IsPlayerInRangeOfPoint(i, 0.05, GotoInfo[i][gtX], GotoInfo[i][gtY], GotoInfo[i][gtZ])) {
								GotoInfo[i][gtStayed] ++;
								if(GotoInfo[i][gtStayed] >= 10) {
									new Float:xA;
									GetPlayerPos(i, xX, xY, xZ);
									GetPlayerFacingAngle(i, xA);
									ShiftCords(0, xX, xY, xZ, xA, 1.5);
									SetPlayerPosAC(i, xX, xY, xZ,TI[i][tVirtualWorld],TI[i][tInterior]);
									GotoInfo[i][gtStayed] = 0;
								}
							}
							else GotoInfo[i][gtStayed] = 0;
							GetPlayerPos(i, GotoInfo[i][gtX], GotoInfo[i][gtY], GotoInfo[i][gtZ]);
						}
					}
				}
				else {
					GotoInfo[i][gtGoID] = INVALID_PLAYER_ID;
					GotoInfo[i][gtX] = 0.0;
					GotoInfo[i][gtY] = 0.0;
					GotoInfo[i][gtZ] = 0.0;
				}
			}
			if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK) {
				Kick(i);
			}
			if(SERIU[i][sID] != INVALID_PLAYER_ID) {
				recon_update(i,SERIU[i][sID]);
			}
			second_timerlog = 4;
			AdvertTimer();
			if(PlayerTrailer[i] != INVALID_VEHICLE_ID && !GetPVarInt(i,"attach_trailer")) {
		        if(PlayerTrailerTime[i]) PlayerTrailerTime[i]--;
          		else if(PlayerTrailerTime[i] < 1) {
					A_DestroyVehicle(PlayerTrailer[i]);
			       	PlayerTrailer[i] = INVALID_VEHICLE_ID;

					if(gPlayerProdText[i] != Text3D:-1) {
						DestroyDynamic3DTextLabel(gPlayerProdText[i]);
						gPlayerProdText[i] = Text3D:-1;
					}
					if(gPlayerProdCP[i] != -1) DestroyDynamicCP(gPlayerProdCP[i]);
					DeletePVar(i,"count_prod2");
					DeletePVar(i,"count_prod");
					DeletePVar(i,"attach_trailer");
				}
		    }
			
			if(IsPlayerInAnyVehicle(i)) {
				if(GetPlayerState(i) == PLAYER_STATE_DRIVER) {
					new veh = GetPlayerVehicleID(i);
					if(veh == LastVeh[i]) {
						new tr = GetVehicleTrailer(veh);
						if(tr != 0) {
							if(VehTrailer[i] != INVALID_VEHICLE_ID) {
								if(VehTrailer[i] != tr) {
									OnPlayerDeattachTrailer(i,veh,VehTrailer[i]);
									VehTrailer[i] = tr;
									OnPlayerAttachTrailer(i,veh,tr);
								}
							}
							else {
								VehTrailer[i] = tr;
								OnPlayerAttachTrailer(i,veh,tr);
							}
						}
						else {
							if(VehTrailer[i] != INVALID_VEHICLE_ID) {
								OnPlayerDeattachTrailer(i,veh,VehTrailer[i]);
								VehTrailer[i] = INVALID_VEHICLE_ID;
							}
						}
					}
					else {
						LastVeh[i] = veh;
						new tr = GetVehicleTrailer(veh);
						if(tr != 0) VehTrailer[i] = tr;
						else VehTrailer[i] = INVALID_VEHICLE_ID;
					}
				}
			}
			if(TI[i][tTrucker][3] != 0 && TK_Trailer[i] != INVALID_VEHICLE_ID) {
				TI[i][tTrucker][3]--;
				format(string,sizeof(string),"%d",TI[i][tTrucker][3]);
				GameTextForPlayer(i, string, 1000, 6);
				if(TI[i][tTrucker][3] == 0) {
					TI[i][tTrucker][3] = 0;
					TI[i][tTrucker][2] = 0;
					TI[i][tTrucker][1] = 0;
					TI[i][tTrucker][0] = 0;
					A_DestroyVehicle(TK_Trailer[i]);
			       	TK_Trailer[i] = INVALID_VEHICLE_ID;
			       	SendOk(i,"Груз удален");
				}
			}
			gOnlinePlayer[i][0]++;
			NoRoof(i);
			second_timerlog = 5;
		    if(TI[i][tAntiDM] > 0) {
			    if(GetPlayerAnimationIndex(i) != 471) ApplyAnimation(i, "FAT", "IDLE_tired",4.0,1,0,0,0,0,1);
			    TI[i][tAntiDM]--;
			    if(TI[i][tAntiDM] == 0) ClearAnims(i);
			}
			if(PlayerInfo[i][pFamily]) {
				if(fam_lable[i] == Text3D:-1 && PlayerInfo[i][pSettings][9]) {
					format(string,sizeof(string),"{%s}%s",FamilyColor[gFamily[PlayerInfo[i][pFamily]-1][famColor]],gFamily[PlayerInfo[i][pFamily]-1][famName]);
					fam_lable[i] = CreateDynamic3DTextLabel(string, -1, 0.0, 0.0, 0.025, 5.0, i,INVALID_VEHICLE_ID,1);
				}
			}
			else if((fam_lable[i] != Text3D:-1 && !PlayerInfo[i][pFamily]) || (fam_lable[i] != Text3D:-1 && !PlayerInfo[i][pSettings][9])) {
				DestroyDynamic3DTextLabel(fam_lable[i]);
				fam_lable[i] = Text3D:-1;
			}
			second_timerlog = 6;
			TI[i][tAFK] ++;
			if(TI[i][tAFK] >= 3) {
				string = "";
				format(string,sizeof(string),""W"На паузе: "NO"%s",Convert(TI[i][tAFK]));
				SetPlayerChatBubble(i,string,0x7FB151AA,10.0,1600);
				gOnlinePlayerAFK[i][0]++;
			}
			if(!PlayerInfo[i][pVips] || PlayerInfo[i][pVips] == VIP_KING || !PlayerInfo[i][pAdmin]) {
				if(TI[i][tAFK] > 1200) {
					SendOk(i,"Ви были отсоединены от сервера - АФК");
					Kick(i);
				}
			}
			else {
				if(!PlayerInfo[i][pAdmin] || TI[i][tAFK] > vip_status[PlayerInfo[i][pVips]][vip_afk]) {
					SendOk(i,"Ви были отсоединены от сервера - АФК");
					Kick(i);
				}
			}
			if(TI[i][tAFK] <= 15) {
				if(PlayerInfo[i][pAdmin] > 0) {
					new reps = 0;
					for(new z;z<MAX_REPORTS;z++) {
						if(PlayerReport[z] != -1) reps++;
					}
					if(reps <= 5) gAdminTime[i]++;
				} 
			}
	   	    if(oldpickup[i] != -1) {
				new Float:z;
				GetPlayerPos(i, z, z, z);
				if(timepickup[i] > 0) timepickup[i]--;
				if(!IsPlayerInRangeOfPoint(i,5.0,PickupX[i],PickupY[i],z) && timepickup[i] == 0) oldpickup[i] = -1;
			}
			second_timerlog = 7;
		    if(CountFloodForPlayer[i] > 0) CountFloodForPlayer[i] = 0;

			if(PlayerInfo[i][pMute] > 0 && TI[i][tAFK] <= 3) {
				PlayerInfo[i][pMute] -= vip_status[PlayerInfo[i][pVips]][vip_mute];
				if(PlayerInfo[i][pMute] <= 0) {
					SendOk(i, "Срок действия бана чата закончился");
					UpdatePlayerData(i,"mute",0);
				}
			}
			if(PlayerInfo[i][pFMute] > 0 && TI[i][tAFK] <= 3) {
				PlayerInfo[i][pFMute] --;
				if(!PlayerInfo[i][pFMute]) {
					UpdatePlayerData(i,"pFMute",0);
					SendOk(i,"Срок действия заглушки в організації закончился");
				}
			}
			if(thefttime[i] > 0) { //угон
				thefttime[i]--;
				new tdstring[10];
				format(tdstring, sizeof(tdstring), "%02d:%02d", thefttime[i]/60,thefttime[i]%60);
				PlayerTextDrawSetString(i, theft_PTD[i][0], tdstring); 
				if(thefttime[i] == 0) {
					SendOk(i,"Ви отменили задание, ваш навык угона понижен.");
					DestroyDynamicArea(theftarea[i][0]);
					DisablePlayerCheckpoint(i);
					DestroyDynamicCP(theftCheck[i][0]);
					A_DestroyVehicle(theftIDveh[i][0]);
					theftIDveh[i][0] = INVALID_VEHICLE_ID;
					if(theftveh[i][0] != INVALID_VEHICLE_ID) {
						A_DestroyVehicle(theftveh[i][0]); 
						theftveh[i][0] = INVALID_VEHICLE_ID;
					}
					theftplayer[i][0] = 1010;
					theftplayer[i][1] = 0;
					theftCheck[i][1] = 0;
					PlayerTextDrawHide(i, theft_PTD[i][0]);
					thefttime[i] = 0;
					if(PlayerInfo[i][ptheftExp] == 0) {
						if(PlayerInfo[i][ptheftSkill] != 0) PlayerInfo[i][ptheftSkill]--, UpdatePlayerData(i,"theftSkill",PlayerInfo[i][ptheftSkill]);
						PlayerInfo[i][ptheftExp] = TheftSkillMax[PlayerInfo[i][ptheftSkill]]-1, UpdatePlayerData(i,"theftExp",PlayerInfo[i][ptheftExp]);
					} 
					else {
						if(PlayerInfo[i][ptheftExp] != 0) PlayerInfo[i][ptheftExp]--, UpdatePlayerData(i,"theftExp",PlayerInfo[i][ptheftExp]);
					}
				}
			}
			if(theftveh[i][1] > 0) { //угон
				theftveh[i][1]--;
				new tdstring[10];
				format(tdstring, sizeof(tdstring), "%02d:%02d", theftveh[i][1]/60,theftveh[i][1]%60);
				PlayerTextDrawSetString(i, theft_PTD[i][1], tdstring); 
				if(theftveh[i][1] == 0) {
					SendOk(i,"Ваш временный транспорт уничтожен.");
					if(theftveh[i][0] != INVALID_VEHICLE_ID) {
						A_DestroyVehicle(theftveh[i][0]);
						theftveh[i][0] = INVALID_VEHICLE_ID;
					}
					PlayerTextDrawHide(i, theft_PTD[i][1]);
				}
			}
			if(PlayerInfo[i][pAskmute] > 0 && TI[i][tAFK] <= 3) {
				PlayerInfo[i][pAskmute]--;
				if(PlayerInfo[i][pAskmute] == 0) {
					UpdatePlayerData(i,"pAskMute",0);
				}
			}
			if(PlayerInfo[i][pJailTime] > 0) {
				PlayerInfo[i][pJailTime] -= vip_status[PlayerInfo[i][pVips]][vip_arrest];
				if(PlayerInfo[i][pJailTime] <= 0) {
					SetPlayerPosAC(i,camExit[PlayerInfo[i][pJail]-1][0],camExit[PlayerInfo[i][pJail]-1][1],camExit[PlayerInfo[i][pJail]-1][2],0,0);
					SetPlayerFacingAngle(i,camExit[PlayerInfo[i][pJail]-1][3]);
					SendClientMessage(i, CGOLD, "Ви заплатили свой долг обществу, теперь Вы свободны");
					PlayerInfo[i][pJailTime] = 0;
					PlayerInfo[i][pJail] = 0;
					UpdatePlayerData(i,"pJailTime",0);
					UpdatePlayerData(i,"pJail",0);
					SetCameraBehindPlayer(i);
					GameTextForPlayer(i,"~g~Freedom", 5000, 1);
				}
			}
			second_timerlog = 8;
			if(PlayerInfo[i][pCash] >= 1000000) {
				if(!TI[i][tShowKeys]) {
					SetPlayerAttachedObject(i,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
					TI[i][tShowKeys] = true;
				}
				if(TI[i][tShowKeys]) {
					if(GetPlayerWeapon(i) > 0 || GetPlayerState(i) != PLAYER_STATE_ONFOOT || !PlayerInfo[i][pSettings][7] || TI[i][tJobSad][0] || GetPVarInt(i,"fish_place") || TI[i][tJobGun][0] || TI[i][tJobOil][0] || TI[i][tClothesWork][0]) {
						if(IsPlayerAttachedObjectSlotUsed(i, 9))
							RemovePlayerAttachedObject(i, 9);
					}
					else {
						if(!IsPlayerAttachedObjectSlotUsed(i, 9))
							SetPlayerAttachedObject(i,9,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
					}
				}
			}
			else if(PlayerInfo[i][pCash] < 1000000) {
				if(IsPlayerAttachedObjectSlotUsed(i, 9)) {
					if(TI[i][tShowKeys]) {
						RemovePlayerAttachedObject(i, 9);
						TI[i][tShowKeys] = false;
					}
				}
			}
			if(TI[i][tSpcarTime]) {
				TI[i][tSpcarTime]--;
				format(string,sizeof(string), "~r~~h~%i",TI[i][tSpcarTime]);
				GameTextForPlayer(i, string, 1000, 6);
				if(TI[i][tSpcarTime] == 1) {
					switch(PlayerInfo[i][pJob]) {
						case 1: if(GetPVarInt(i,"bus_id")) SetVehicleToRespawn(GetPVarInt(i,"bus_id"));
						case 2: if(GetPVarInt(i,"mehjob")) SetVehicleToRespawn(GetPVarInt(i,"mehjob"));
						case 3: if(GetPVarInt(i,"prod_vehicle_id")) SetVehicleToRespawn(GetPVarInt(i,"prod_vehicle_id"));
						case 4: if(GetPVarInt(i,"eatjob")) SetVehicleToRespawn(GetPVarInt(i,"eatjob"));
						case 5: if(GetPVarInt(i,"clear_id")) SetVehicleToRespawn(GetPVarInt(i,"clear_id"));
						case 6: if(GetPVarInt(i,"veh_id_cleaner")) SetVehicleToRespawn(GetPVarInt(i,"veh_id_cleaner"));
					}
					if(GetPVarInt(i,"track_id")) EndTrack(i);
					TI[i][tSpcarTime] = 0;
				}
			}
			if(TI[i][tAlcotraz][0]) {
				TI[i][tAlcotraz][0]--;
				format(string,sizeof(string), "~r~~h~%i",TI[i][tAlcotraz][0]);
				GameTextForPlayer(i, string, 1000, 6);
				if(TI[i][tAlcotraz][0] == 1) {
					SendClientMessage(i,COLOR_REDD,"Побег не удался. Время заключение увеличено на 20 хвилин");
					PlayerInfo[i][pJailTime] += 1200;
					if(GetPlayerState(i) == PLAYER_STATE_DRIVER) SetVehicleToRespawn(GetPlayerVehicleID(i));
					DisablePlayerRaceCheckpoint(i);
					TI[i][tAlcotraz][2] = 0;
					TI[i][tAlcotraz][1] = 0;
					PlayerSpawn(i);
				}
			}
			if(TI[i][tDMArea][0] || TI[i][tGunArea][0]) UpdateInfoTD(i);
			if(TI[i][tDuel] != -1) {
				if(TI[i][tAFK] >= 20) {
					if(DI[TI[i][tDuel]][duel_start] == true) {
						end_duel(i,1);
					}
				}
			}
			if(PlayerInfo[i][pJob] == 6 && GetPVarInt(i, "start_job_mower") && GetPlayerVehicleID(i) == TI[i][tArendaCar]) {
				if(timer_job_mower[i] > 1) {
			        timer_job_mower[i]--;
			        new str[10];
			        format(str, sizeof(str), "~g~ %d", timer_job_mower[i]);
					GameTextForPlayer(i, str, 800, 3);
			    }
			    if(timer_job_mower[i] == 1) {
			        timer_job_mower[i] = 0;
			        TogglePlayerControllable(i, true);
			        SendOk(i,"Ви прибрали куш. Продовжуйте дальше");
			        SetPVarInt(i,"gazon_salary", GetPVarInt(i,"gazon_salary") + 300);
				}
			    for(new x = 0; x < sizeof(object_park_ls); x++) {
				    if(IsPlayerInRangeOfPoint(i, 2.0, check_job_mower[x][0], check_job_mower[x][1], check_job_mower[x][2])) {
				        if(status_check_job_mower[x] == false)  {
							if(i <= 32) check_taxi_park++;
							if(i > 32 && i <= 79) check_verona_beach++;
							if(i > 79 && i <= 138) check_white_house++;
							if(i > 138 && i <= 176) check_medic_ls++;
							if(i > 176 && i <= 226) check_mayor_ls++;
							if(i > 226 && i <= 322) check_glenpark_1++;
							if(i > 322) check_glenpark_2++;
							timer_job_mower[i] = 11;
							//PlayerPlaySound(i,17800,0.0,0.0,0.0);
							TogglePlayerControllable(i, false);
					    	MoveDynamicObject(object_park_ls[x],check_job_mower[x][0], check_job_mower[x][1], check_job_mower[x][2]-1,0.07,
					    	check_job_mower[x][3], check_job_mower[x][4], check_job_mower[x][5]);
		                    status_check_job_mower[x] = true;
		                    status_restore_check_job_mower[x] = false;
						}
			        }
				}
		    }
		}
	}
	checkhour();
	second_timerlog = 9;
	for(new i;i<MAX_ACTORSS;i++) {
		if(actortime[i]>0) {
			actortime[i]--;
			if(actortime[i] == 0) {
				Update3DTextLabelText(tActor[i], COLOR_GREY, "");
				ApplyActorAnimation(i, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1);
				if(i == 6 || i == 7 || i == 8 || i == 9 || i == 10 || i == 11 || i == 12) ApplyActorAnimation(i,"DEALER","Dealer_idle",4.1,0,0,0,1,1);
			}
		}
	}
	second_timerlog = 10;
	GetMoney();
	time_second = GetTickCount() - tickcount1;
	if(time_second > time_second_max) time_second_max = time_second;
	second_timerlog = 0;
	return true;
}
stock checkhour() {
	new hour, minute, second;
	gettime(hour, minute, second);
	if(hour == 05 && minute == 03 && second == 00) {
		SendClientMessageToAll(COLOR_YELLOW, "Через две хвилины произойдет автоматическая перезагрузка сервера");
		SendClientMessageToAll(COLOR_YELLOW, "Прохання закінчити все свои работы. Дякую за розуміння");
	}
	if(hour == 05 && minute == 05 && second == 00) {
		SendClientMessageToAll(COLOR_REDD,""FullServName" | Restart...");
		save_other();
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			SaveAccount(i);
			save_car(i,0);
			save_car(i,1);
			kick(i);
		}
		SendRconCommand("gmx");
		printf("Auto Restart - Reloading...");
		return 1;
	}
	return 1;
}
public OnGameModeExit() {
    SaveServer();
	mysql_close(connects);
	print("Gamemode ended.");
	return true;
}
public OnGameModeInit() {
	gCurDay = GetDayNumber();
	SetGameModeText("UA-RP v1.0 | 24.04.23");
	new MySQLOpt: option_id = mysql_init_options();
	mysql_set_option(option_id, AUTO_RECONNECT, true);
	SendRconCommand("hostname "HostName" | ОБТ");
	SELECT_SERVER = 1;
	if(SELECT_SERVER == 1) connects = mysql_connect(""SqlHost"", ""SqlUser"", ""SqlPass"", ""SqlBase"", option_id);
	else if(SELECT_SERVER == 2) connects = mysql_connect("localhost", "root", "", "arp", option_id);

	switch(SELECT_SERVER) {
		case 1: printf("[Загрузка] База даних MYSQL успішно завантажена! (СЕРВЕР [Основний] | %i)",SELECT_SERVER);
		case 2: printf("[Загрузка] База даних MYSQL успішно завантажена! (СЕРВЕР [Тестовий] | %i)",SELECT_SERVER);
		case 3: printf("[Загрузка] База даних MYSQL успішно завантажена! (СЕРВЕР [LOCALHOST] | %i)",SELECT_SERVER);
	}
	mysql_log(ERROR | WARNING);
	SendRconCommand("ackslimit 7800");
	/*============================================================================*/
	mysql_set_charset("cp1251");
	mysql_tquery(connects, !"SET CHARACTER SET 'utf8'", "", "");
	mysql_tquery(connects, !"SET NAMES 'utf8'", "", "");
	mysql_tquery(connects, !"SET character_set_client = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET character_set_connection = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET character_set_results = 'cp1251'", "", "");
	mysql_tquery(connects, !"SET SESSION collation_connection = 'utf8_general_ci'", "", "");

	load_vehicles();
	load_fvehicle();
	CreateVehicless();
	CreatePickups();
	load_fracfreez();
	load_house();
	load_hotels();
	load_airports();
	load_airplane();
	load_family();
	load_rooms();
	load_bint();
	load_funcbizz();
	load_business();
    load_greenzone();
	load_gangzone();
    load_fractions();
    load_diplomation();
    load_others();
	load_anticheat();
	load_market();
	load_labrary();
	load_economy();
	load_atm();
	load_vote();
	load_fracgun();
	load_bilboards();
	load_bonuses();
	load_graffity();
	load_vip();
	load_trackings();
	mysql_tquery(connects,"UPDATE `accounts` SET `online_status` = '1001'", "", "");
	
	//
	new query[128];
	format(query, sizeof(query), "ALTER TABLE `accounts` ALTER `pCash` SET DEFAULT '%d'", OthersInfo[start_money]);
	mysql_tquery(connects, query, "", "");
	format(query, sizeof(query), "ALTER TABLE `accounts` ALTER `pLevel` SET DEFAULT '%d'", OthersInfo[start_level]);
	mysql_tquery(connects, query, "", "");
	//

	for(new d = 0; d < MAX_DUELS; d++) {
		DI[d][duel_owner_id] = DI[d][duel_id][0] = DI[d][duel_id][1] = DI[d][duel_id][2] = DI[d][duel_id][3] = DI[d][duel_id][4] = DI[d][duel_id][5] = INVALID_PLAYER_ID;
		DI[d][duel_gun] = 0; 
		DI[d][duel_money] = 1000;
		DI[d][duel_raund] = 1;
		DI[d][duel_type] = 0;
		DI[d][duel_map] = 0;
		DI[d][duel_health] = 100;
		DI[d][duel_armour] = 0;
		DI[d][duel_start] = false;
		DI[d][duel_create] = false;
		DI[d][duel_point_1] = 0;
		DI[d][duel_point_2] = 0;
		DI[d][duel_vw] = 0;
	}
	for(new i=0;i<MAX_DROP_GUNS;i++) {
		drop_gun[i][dg_object] = -1;
		drop_gun[i][dg_gun] = -1;
		drop_gun[i][dg_ammo] = -1;
		drop_gun[i][dg_text] = Text3D:-1;
		drop_gun[i][dg_time] = -1;
	}
	calls_news[0] = INVALID_PLAYER_ID;
	calls_news[1] = INVALID_PLAYER_ID;
	calls_news[2] = INVALID_PLAYER_ID;
	calls_ether[0] = INVALID_PLAYER_ID;
	calls_ether[1] = INVALID_PLAYER_ID;
	calls_ether[2] = INVALID_PLAYER_ID;

    //погода
    SetTimer("SetRandomWeather", 60000, false);

	for(new i = 0; i < 14; i++) VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;	

	SetGravity(0.010);

	components_name();
    SetWeather(2);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	ShowPlayerMarkers(PLAYER_MARKERS_MODE_STREAMED);
	ManualVehicleEngineAndLights();
	LimitGlobalChatRadius(13.0);
	LimitPlayerMarkerRadius(12.0);
	SetNameTagDrawDistance(30.0);

	new mi,h;
	gettime(h,mi,gCurHour);
	SetWorldTime(h);

	advertise_price = 2;
	condition_of_roads_ = 1;

	for(new i = 0; i < sizeof(object_park_ls); i++) {
        object_park_ls[i] = CreateDynamicObject(14468, check_job_mower[i][0], check_job_mower[i][1], check_job_mower[i][2], check_job_mower[i][3],
							check_job_mower[i][4], check_job_mower[i][5], -1, -1);
        status_check_job_mower[i] = false;
	}
	check_taxi_park = 0;
	check_verona_beach = 0;
	check_white_house = 0;
	check_medic_ls = 0;
	check_mayor_ls = 0;
	check_glenpark_1 = 0;
	check_glenpark_2 = 0;

	fish_zone[0] = GangZoneCreate(-310.00006103515625, -505.0000762939453, -200.00006103515625, -415.0000762939453);
	fish_zone[1] = GangZoneCreate(-350.00006103515625, -640.0000610351562, -240.00006103515625, -540.0000610351562);
	fish_zone[2] = GangZoneCreate(-246.00006103515625, -763.0000610351562, -136.00006103515625, -673.0000610351562);

	specmenu = CreateMenu("Recon", 1, 15.0, 200.0, 100.0);
    AddMenuItem(specmenu,0,"Refresh");
    AddMenuItem(specmenu,0,"Kick");
    AddMenuItem(specmenu,0,"Warn");
    AddMenuItem(specmenu,0,"Ban");
    AddMenuItem(specmenu,0,"Slap");
    AddMenuItem(specmenu,0,"Stats");
    AddMenuItem(specmenu,0,"Next");
	AddMenuItem(specmenu,0,"Back");
    AddMenuItem(specmenu,0,"-EXIT-");

	Create3dText();
	CreateTexdraw();
	CreateSphree();
	
	Streamer_TickRate(30);

	#include objects
	tmpobjid = CreateObject(4821, 1745.199951, -1882.849975, 26.140600, 0.000000, 0.000000, 0.000000,300.00);
	SetObjectMaterial(tmpobjid, 5, 18029, "genintintsmallrest", "GB_restaursmll03", 0x00000000);
	SetObjectMaterial(tmpobjid, 7, 7555, "bballcpark1", "ws_carparknew2", 0x00000000);
	SetObjectMaterial(tmpobjid, 10, 3979, "civic01_lan", "airportwall_256128", 0x00000000);

	tmpobjid = CreateObject(8577, 2809.320312, 1303.187500, 10.546899, 0.000000, 0.000000, 0.000000,800.00);
	SetObjectMaterial(tmpobjid, 0, 10041, "archybuild10", "copshop5", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 16640, "a51", "plaintarmac1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 4, 10765, "airportgnd_sfse", "white", 0x00000000);
	printf("[Об'єкти] Динамічних об'єктів: (%d шт.)",CountDynamicObjects());
	printf("[Об'єкти] Статистичних об'єктів: (%d шт.)",TotalObject);
	// Синхронизація часу для Timer_Unix

	unix = gettime(tmphour, tmpminute, tmpsecond); // обнволяем unix и tmphour, tmpminute, tmpsecond
	new sunix = unix; // sunix равна unix

	sunix -= tmpminute*60; // в sunix обнуляем хвилины
	sunix -= tmpsecond; // в sunix обнуляем хвилины

	unix_hour = sunix+3600; // добавляем в unix_h - час щоб Timer_Unix сработал кореектно в 00 мин
	unix_min = sunix+60; // добавляем в unix_m - хвилину щоб Timer_Unix сработал кореектно в 00 сек
	unix_heal = sunix+240;
	unix_sec = sunix;
	unix_three_sec = sunix+3;

	if(timers_unix != -1) {
		KillTimer(timers_unix);
		timers_unix = -1;
	}
	if(timers_unix == -1) timers_unix = SetTimer("Timer_Unix",125,true); // 250 ms

	capture_kd[fBALLAS] = capture_kd[fVAGOS] = capture_kd[fGROVE] = capture_kd[fAZTEC] = capture_kd[fRIFA] = unix;

	//Тир SFa
	BoxObject[0][0] = CreateDynamicObject(1271, -1351.95813, 361.11862, 6.36308,   0.00000, 0.00000, 0.00000);
	BoxObject[0][1] = CreateDynamicObject(1271, -1351.90161, 359.47818, 6.36308,   0.00000, 0.00000, 0.00000);
	BoxObject[0][2] = CreateDynamicObject(1271, -1351.91919, 357.98993, 6.36308,   0.00000, 0.00000, 0.00000);
	BoxObject[0][3] = CreateDynamicObject(1271, -1351.94336, 356.40894, 6.36308,   0.00000, 0.00000, 0.00000);
	BoxObject[0][4] = CreateDynamicObject(1271, -1351.96167, 355.03137, 6.36308,   0.00000, 0.00000, 0.00000);
	BoxObject[0][5] = CreateDynamicObject(1271, -1352.11279, 353.57697, 6.36308,   0.00000, 0.00000, 0.00000);
	BoxObject[0][6] = CreateDynamicObject(1271, -1352.13928, 352.19601, 6.36308,   0.00000, 0.00000, 0.00000);
	
	//Тир PD/Army
	CreateDynamicObject(18036, 250.00403, -23.63618, 1002.15552,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18032, 258.65643, -21.74661, 1001.67212,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18000, 258.73724, -21.74746, 1001.64301,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1569, 261.58673, -30.38483, 1000.20886,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1500, 1579.09912, -1690.12561, 5.19954,   0.00000, 0.00000, 180.00000); //Дверь около LSPD
	
	//ammo ls
	BoxObject[1][0] = CreateDynamicObject(1271, 293.63657, -138.65392, 1003.39349, 0.00000, 0.00000, 0.00000, 500, 7);
	BoxObject[1][1] = CreateDynamicObject(1271, 293.68372, -136.82756, 1003.39349, 0.00000, 0.00000, 0.00000, 500, 7);
	BoxObject[1][2] = CreateDynamicObject(1271, 293.64832, -135.31419, 1003.39349, 0.00000, 0.00000, 0.00000, 500, 7);
	BoxObject[1][3] = CreateDynamicObject(1271, 293.65512, -133.69675, 1003.39349, 0.00000, 0.00000, 0.00000, 500, 7);
	BoxObject[1][4] = CreateDynamicObject(1271, 293.63409, -132.14581, 1003.39349, 0.00000, 0.00000, 0.00000, 500, 7);
	BoxObject[1][5] = CreateDynamicObject(1271, 293.62332, -130.72699, 1003.39349, 0.00000, 0.00000, 0.00000, 500, 7);
	BoxObject[1][6] = CreateDynamicObject(1271, 293.62021, -129.16594, 1003.39349, 0.00000, 0.00000, 0.00000, 500, 7);
	BoxObject[1][7] = CreateDynamicObject(1271, 293.61115, -127.61253, 1003.39349, 0.00000, 0.00000, 0.00000, 500, 7);
	
	//ammo sf
	BoxObject[2][0] = CreateDynamicObject(1271, 289.0186, -17.2527, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 1);
	BoxObject[2][1] = CreateDynamicObject(1271, 290.6895, -17.4254, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 1);
	BoxObject[2][2] = CreateDynamicObject(1271, 292.1824, -17.4513, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 1);
	BoxObject[2][3] = CreateDynamicObject(1271, 293.5958, -17.5672, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 1);
	BoxObject[2][4] = CreateDynamicObject(1271, 295.3438, -17.6309, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 1);
	BoxObject[2][5] = CreateDynamicObject(1271, 296.6028, -17.6984, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 1);
	BoxObject[2][6] = CreateDynamicObject(1271, 298.3362, -17.6679, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 1);
	BoxObject[2][7] = CreateDynamicObject(1271, 299.5762, -17.4408, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 1);
	
	//ammo lv
	BoxObject[3][0] = CreateDynamicObject(1271, 309.9084, -70.1491, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 4);
	BoxObject[3][1] = CreateDynamicObject(1271, 310.2221, -68.6183, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 4);
	BoxObject[3][2] = CreateDynamicObject(1271, 310.2103, -67.2711, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 4);
	BoxObject[3][3] = CreateDynamicObject(1271, 310.2319, -65.5986, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 4);
	BoxObject[3][4] = CreateDynamicObject(1271, 310.1317, -64.2226, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 4);
	BoxObject[3][5] = CreateDynamicObject(1271, 310.1579, -62.6547, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 4);
	BoxObject[3][6] = CreateDynamicObject(1271, 310.4261, -61.2069, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 4);
	BoxObject[3][7] = CreateDynamicObject(1271, 309.9816, -59.6168, 1000.90000, 0.00000, 0.00000, 0.00000, 500, 4);
	
	//ammo
	BoxObject[5][0] = CreateDynamicObject(1271, 252.79761, -27.10404, 1000.49921, 0.00000, 0.00000, 0.00000);
	BoxObject[5][1] = CreateDynamicObject(1271, 252.88811, -25.50135, 1000.49921, 0.00000, 0.00000, 0.00000);
	BoxObject[5][2] = CreateDynamicObject(1271, 252.87595, -23.79735, 1000.49921, 0.00000, 0.00000, 0.00000);
	BoxObject[5][3] = CreateDynamicObject(1271, 252.94708, -22.42845, 1000.49921, 0.00000, 0.00000, 0.00000);
	BoxObject[5][4] = CreateDynamicObject(1271, 252.91765, -20.99389, 1000.49921, 0.00000, 0.00000, 0.00000);
	BoxObject[5][5] = CreateDynamicObject(1271, 252.91444, -19.53421, 1000.49921, 0.00000, 0.00000, 0.00000);
	BoxObject[5][6] = CreateDynamicObject(1271, 252.92358, -17.91504, 1000.49921, 0.00000, 0.00000, 0.00000);
	BoxObject[5][7] = CreateDynamicObject(1271, 252.89296, -16.25898, 1000.49933, 0.00000, 0.00000, 0.00000);

//МАПІНГ ПРИ РЕЄСТРАЦІЇ
    CreateObject(11521, -1524.51563, 2145.17188, 326.95947,   356.85840, 0.00000, 3.14160);
    CreateObject(11516, -1557.10425, 2386.02319, 334.86615,   356.85840, 0.00000, 3.14160);
    CreateObject(17029, -1567.51465, 2234.22949, 337.72800,   0.00000, 0.00000, -18.00000);
    CreateObject(17026, -1587.77966, 2302.56836, 339.28891,   0.00000, 0.00000, -40.00000);
    CreateObject(18268, -1572.43970, 2270.70728, 346.73318,   0.00000, 0.00000, -48.00000);
    CreateObject(18270, -1527.40552, 2285.89355, 344.19748,   0.00000, 0.00000, -18.00000);
    CreateObject(1413, -1515.35706, 2264.30591, 335.58389,   0.00000, 0.00000, 57.58003);
    CreateObject(1413, -1516.80554, 2259.64526, 335.78290,   0.00000, 4.00000, 89.00000);
    CreateObject(1413, -1514.82983, 2254.54321, 336.07169,   0.00000, 0.00000, 108.97581);
    CreateObject(1413, -1511.48865, 2251.28076, 336.04630,   0.00000, 0.00000, 164.00000);
    CreateObject(18268, -1550.82788, 2258.28369, 346.73318,   0.00000, 0.00000, -48.00000);
    CreateObject(18270, -1544.76709, 2286.08765, 345.02606,   0.00000, 0.00000, -18.00000);
    CreateObject(18270, -1544.76709, 2286.08765, 345.02606,   0.00000, 0.00000, -18.00000);
    CreateObject(1728, -1514.28674, 2256.41553, 334.59610,   0.00000, 6.00000, 100.61520);
    CreateObject(1758, -1510.66553, 2253.81030, 334.73624,   0.00000, 0.00000, 195.82205);
    CreateObject(2674, -1511.58386, 2255.49121, 334.27023,   -6.00000, 0.00000, 330.26837);
    CreateObject(1347, -1512.48633, 2255.74487, 334.70953,   -4.00000, 6.00000, 0.00000);
    CreateObject(849, -1515.66614, 2260.29150, 334.17654,   2.00000, 4.00000, 331.53091);
    CreateObject(808, -1506.82239, 2253.12305, 335.77075,   10.00000, -10.00000, 13.10864);
    CreateObject(874, -1512.67871, 2261.60718, 332.80008,   0.00000, 0.00000, 0.00000);
    CreateObject(874, -1511.37988, 2252.50879, 334.02032,   0.00000, 0.00000, 17.00000);
    CreateObject(874, -1506.11377, 2258.01099, 333.01428,   4.00000, 0.00000, 0.00000);
    CreateObject(825, -1509.12708, 2257.61743, 332.89230,   0.00000, 0.00000, 0.00000);
    CreateObject(805, -1516.59778, 2252.37695, 335.76538,   0.00000, 0.00000, 12.78235);
    CreateObject(805, -1518.23572, 2264.01147, 335.26987,   0.00000, 0.00000, 0.00000);
    CreateObject(805, -1519.67773, 2258.18530, 335.50525,   0.00000, 0.00000, 0.00000);
    CreateObject(805, -1517.20728, 2265.61499, 335.06995,   0.00000, 0.00000, 0.00000);
    CreateObject(805, -1515.35327, 2249.39575, 336.95813,   0.00000, 0.00000, 1.36825);
    CreateObject(925, -1513.39490, 2253.72461, 335.55649,   0.00000, 6.00000, 110.61285);
    CreateObject(1459, -1508.84534, 2254.17871, 334.44717,   0.00000, 5.00000, 114.00000);
    CreateObject(3092, -1509.12805, 2259.64136, 335.94849,   0.00000, 0.00000, 226.80890);
    CreateObject(834, -1509.71350, 2260.24219, 335.77100,   0.00000, 0.00000, 0.00000);
    CreateObject(17026, -1580.16675, 2309.77393, 333.79572,   0.00000, 0.00000, -40.00000);
    CreateObject(825, -1506.67944, 2257.19385, 332.78012,   0.00000, 0.00000, 0.00000);
    CreateObject(18688, -1512.17786, 2255.83936, 333.75385,   0.00000, 0.00000, 0.00000);
    CreateObject(825, -1513.07715, 2263.08813, 333.09131,   0.00000, 0.00000, 0.00000);
    CreateObject(825, -1514.01160, 2255.97656, 333.19232,   0.00000, 0.00000, 0.00000);
    CreateObject(941, -1507.78247, 2259.83423, 333.81491,   4.00000, 4.00000, -251.00000);
    CreateObject(846, -1512.23315, 2261.02197, 333.87390,   -4.00000, 0.00000, 18.00000);
	//Тир Gangs
	BoxObject[4][0] = CreateDynamicObject(1271, 328.41516, -26.62148, 997.13843, 0.00000, 0.00000, 0.00000);
	BoxObject[4][1] = CreateDynamicObject(1271, 328.44800, -25.08070, 997.13843, 0.00000, 0.00000, 0.00000);
	BoxObject[4][2] = CreateDynamicObject(1271, 328.46509, -23.70515, 997.13843, 0.00000, 0.00000, 0.00000);
	BoxObject[4][3] = CreateDynamicObject(1271, 328.46518, -22.26011, 997.13843, 0.00000, 0.00000, 0.00000);
	BoxObject[4][4] = CreateDynamicObject(1271, 328.47394, -20.68771, 997.13843, 0.00000, 0.00000, 0.00000);
	BoxObject[4][5] = CreateDynamicObject(1271, 328.58234, -19.27366, 997.13843, 0.00000, 0.00000, 0.00000);
	BoxObject[4][6] = CreateDynamicObject(1271, 328.69550, -17.83969, 997.13843, 0.00000, 0.00000, 0.00000);
	BoxObject[4][7] = CreateDynamicObject(1271, 328.71924, -16.38413, 997.13843, 0.00000, 0.00000, 0.00000);
	
	return true;
}


stock CreateVehicless() {
	for(new i = 0; i < sizeof(ArendInfo); i ++) {
	    ArendInfo[i][aID] = A_AddStaticVehicleEx(ArendInfo[i][aModel], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 100000,VEHICLE_TYPE_RENT);
		SetVehicleParamsEx(ArendInfo[i][aID],false,false,false,false,false,false,false);
		VehicleInfo[ArendInfo[i][aID]][vFuel] = gTransport[GetVehicleModel(ArendInfo[i][aID]-400)][trTank];
	}
	CreateSpawnCar(462, 2674.2639, -2413.3423, 13.1436, 358.4811,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД
	CreateSpawnCar(462, 2672.7317, -2413.3423, 13.1436, 358.4811,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД
	CreateSpawnCar(462, 2671.4414, -2413.3423, 13.1436, 358.4811,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД
	CreateSpawnCar(462, 2670.0527, -2413.3423, 13.1436, 358.4811,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД
	CreateSpawnCar(462, 2668.6086, -2413.3423, 13.1436, 358.4811,1,1,60);//ОРУЖЕЙНЫЙ ЗАВОД

	CreateSpawnCar(462,271.8202,1427.1577,10.1645,179.0355,1,1,60);//НЕФТЕЗАВОД
	CreateSpawnCar(462,273.2711,1427.2019,10.1626,180.0503,1,1,60);//НЕФТЕЗАВОД
	CreateSpawnCar(462,274.7584,1427.1423,10.1619,183.0715,1,1,60);//НЕФТЕЗАВОД
	CreateSpawnCar(462,276.2276,1427.1021,10.1622,180.1871,1,1,60);//НЕФТЕЗАВОД
	CreateSpawnCar(462,277.8054,1427.1165,10.1668,180.1018,1,1,60);//НЕФТЕЗАВОД

	CreateSpawnCar(462, -116.5770, -24.1387, 2.6292, 78.0000,1,1,60);//яблуневий сад
	CreateSpawnCar(462, -116.9116, -25.5444, 2.6292, 78.0000,1,1,60);//яблуневий сад
	CreateSpawnCar(462, -117.2150, -26.9563, 2.6292, 78.0000,1,1,60);//яблуневий сад
	CreateSpawnCar(462, -117.5185, -28.3683, 2.6292, 78.0000,1,1,60);//яблуневий сад
	CreateSpawnCar(462, -117.7800, -29.6719, 2.6292, 78.0000,1,1,60);//яблуневий сад

	CreateSpawnCar(462,-498.6563,-1550.3970,7.7650,267.3437,1,1,60);//лісопилка
	CreateSpawnCar(462,-498.7065,-1551.4338,7.7577,266.8539,1,1,60);//лісопилка
	CreateSpawnCar(462,-498.7579,-1552.3701,7.7577,266.8539,1,1,60);//лісопилка
	CreateSpawnCar(462,-498.8036,-1553.2019,7.7580,266.8539,1,1,60);//лісопилка
	CreateSpawnCar(462,-498.8676,-1554.3652,7.7577,266.8539,1,1,60);//лісопилка

	CreateSpawnCar(462,1790.8431,-1922.7661,12.9032,76.2923,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.8594,-1921.2102,12.8840,72.3171,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.8326,-1919.5502,12.8872,78.4634,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.9338,-1917.8159,12.9008,76.8309,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.8260,-1915.6014,12.8830,80.8727,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.9161,-1914.0066,12.8876,76.4954,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.8105,-1912.1239,12.8873,75.9345,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.8209,-1910.5029,12.8930,81.9243,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.7961,-1908.6963,12.8896,78.3456,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.7335,-1906.7058,12.8897,78.3644,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1790.6458,-1904.5139,12.8935,73.3018,1,1,60); // Велик СПАВН ЛС 1
	CreateSpawnCar(462,1974.9814,-2016.6357,13.1694,60.8622,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1975.0144,-2017.5278,13.1676,66.1455,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1974.9801,-2018.5577,13.1701,66.6102,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1974.9991,-2019.5999,13.1701,65.6922,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1975.0041,-2020.6276,13.1703,59.2843,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1974.9713,-2021.6887,13.1702,60.1005,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1975.0577,-2022.7738,13.1711,58.6031,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1975.0241,-2023.7475,13.1708,54.7500,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1974.9802,-2024.8648,13.1705,58.7544,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1974.7967,-2026.0780,13.1697,61.7877,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1974.8338,-2027.3795,13.1706,57.1378,1,1,60); // Велики СПАВН 2
	CreateSpawnCar(462,1974.8510,-2028.9824,13.1708,55.1638,1,1,60); // Велики СПАВН 2

	CreateSpawnCar(462,-1993.2566,82.8969,27.2860,90.2142,1,1,60); // спавн сф
	CreateSpawnCar(462,-1993.2607,84.0124,27.2860,90.2142,1,1,60); // спавн сф
	CreateSpawnCar(462,-1993.2655,85.3536,27.2860,90.2142,1,1,60); // спавн сф
	CreateSpawnCar(462,-1993.2687,86.2130,27.2860,90.2142,1,1,60); // спавн сф
	CreateSpawnCar(462,-1993.2732,87.4867,27.2860,90.2142,1,1,60); // спавн сф
	CreateSpawnCar(462,2835.7261,1266.3748,10.3807,90.8178,1,1,60); // спавн lv
	CreateSpawnCar(462,2835.7429,1265.1968,10.3807,90.8178,1,1,60); // спавн lv
	CreateSpawnCar(462,2835.7612,1263.9366,10.3808,90.8178,1,1,60); // спавн lv
	CreateSpawnCar(462,2835.7874,1262.0920,10.3808,90.8178,1,1,60); // спавн lv
	CreateSpawnCar(462,2835.8115,1260.4039,10.3809,90.8178,1,1,60); // спавн lv

	CreateSpawnCar(462,1182.0991,-1329.3724,13.1847,268.8999,1,1,60); // мчс лс
	CreateSpawnCar(462,1182.0771,-1330.5140,13.1857,268.9000,1,1,60); // мчс лс
	CreateSpawnCar(462,1182.0511,-1331.8663,13.1867,268.9000,1,1,60); // мчс лс
	CreateSpawnCar(462,1182.0260,-1333.1855,13.1878,268.9000,1,1,60); // мчс лс
	CreateSpawnCar(462,1181.9995,-1334.5588,13.1889,268.9000,1,1,60); // мчс лс
	CreateSpawnCar(462,-2635.4229,630.0054,14.0520,180.0844,1,1,60); // мчс sf
	CreateSpawnCar(462,-2633.9866,630.0076,14.0520,180.0844,1,1,60); // мчс sf
	CreateSpawnCar(462,-2632.1309,630.0104,14.0520,180.0844,1,1,60); // мчс sf
	CreateSpawnCar(462,-2630.2559,630.0133,14.0520,180.0844,1,1,60); // мчс sf
	CreateSpawnCar(462,1635.2633,1824.8049,10.4197,88.2549,1,1,60); // мчс lv
	CreateSpawnCar(462,1635.3402,1827.3315,10.4197,88.2549,1,1,60); // мчс lv
	CreateSpawnCar(462,1635.7010,1839.1863,10.4197,88.2549,1,1,60); // мчс lv
	CreateSpawnCar(462,1635.6339,1841.6512,10.4192,88.2577,1,1,60); // мчс lv

	// автобусы ЛВ
	CreateBusVehicle(2,1,437, 2794.6882, 1293.1810, 10.8859, 180.0000, 136, 136, RES_CAR_TIME);
	CreateBusVehicle(2,1,437, 2788.3594, 1293.1810, 10.8859, 180.0000, 136, 136, RES_CAR_TIME);
	CreateBusVehicle(2,1,437, 2781.9868, 1293.1810, 10.8855, 180.0000, 136, 136, RES_CAR_TIME);
	CreateBusVehicle(2,1,437, 2775.5146, 1293.1810, 10.8563, 180.0000, 136, 136, RES_CAR_TIME);
	CreateBusVehicle(2,1,437, 2851.2383, 1351.6852, 10.9355, 90.0000, 136, 136, RES_CAR_TIME);
	CreateBusVehicle(2,1,437, 2851.2383, 1358.0764, 10.9359, 90.0000, 136, 136, RES_CAR_TIME);
	CreateBusVehicle(2,1,437, 2851.2383, 1364.4673, 10.9355, 90.0000, 136, 136, RES_CAR_TIME);

	//автобусы сф
	CreateBusVehicle(3,1,437, -1963.1046, 193.7052, 27.8558, 90.0000, 229, 229, RES_CAR_TIME);
	CreateBusVehicle(3,1,437, -1963.1046, 198.6266, 27.8588, 90.0000, 229, 229, RES_CAR_TIME);
	CreateBusVehicle(3,1,437, -1963.1046, 188.6046, 27.8560, 90.0000, 229, 229, RES_CAR_TIME);
	CreateBusVehicle(3,1,437, -1963.1046, 183.8036, 27.8560, 90.0000, 229, 229, RES_CAR_TIME);

	//автобусы лс
	CreateBusVehicle(1,1,431, 1275.2385, -1799.5630, 13.5189, 180.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1270.7767, -1799.5630, 13.5060, 180.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1266.0929, -1799.5630, 13.5042, 180.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1261.3867, -1799.5630, 13.5268, 180.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1277.1067, -1818.4924, 13.4896, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1277.1067, -1824.2389, 13.4924, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1277.1067, -1829.3267, 13.4947, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1277.1067, -1834.7875, 13.4879, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1255.0709, -1835.8232, 13.5021, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1233.0059, -1835.8339, 13.5134, 90.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1200.6313, -1835.7235, 13.5176, 270.0000, 162, 162, RES_CAR_TIME);
	CreateBusVehicle(1,1,431, 1200.6313, -1829.3834, 13.5182, 270.0000, 162, 162, RES_CAR_TIME);

	///////////////////////////////////////////////////////////////////////////////////////
	CreateJobVehicle(2,525, 1648.3584, -1111.3390, 23.7807, 90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 1648.3584, -1107.0978, 23.7807, 90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 1648.3584, -1102.7109, 23.7807, 90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -74.6398, -1153.8937, 1.6166, 125.5000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -70.1951, -1156.5787, 1.6166, 125.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -2026.6517, 132.9985, 28.7037, -45.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -2032.5632, 133.5336, 28.7037, -45.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -2038.8058, 133.9473, 28.7037, -45.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -1655.1967, 450.7682, 7.0438, -175.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -1650.1825, 446.9225, 7.0438, -175.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, -1645.4277, 443.8788, 7.0438, -175.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 2118.9307, 956.5412, 10.6836, -90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 2118.9307, 950.6811, 10.6836, -90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 2635.4714, 1070.1379, 10.7283, 90.0000, -1, -1, RES_CAR_TIME);//механики
	CreateJobVehicle(2,525, 2635.4714, 1075.6338, 10.7283, 90.0000, -1, -1, RES_CAR_TIME);//механики

	CreateJobVehicle(4,588, 204.7591, -1444.2350, 13.0257, -41.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 200.1640, -1440.1998, 13.0257, -41.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 195.7671, -1436.1971, 13.0257, -41.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 209.6613, -1421.3890, 13.0857, 133.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 213.8766, -1425.7546, 13.0657, 133.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, 217.9863, -1430.0875, 13.0857, 133.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2400.6055, -611.9255, 132.5215, 35.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2392.3738, -602.4990, 132.5215, 125.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2395.7551, -597.6688, 132.5215, 125.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2399.1357, -592.8521, 132.5215, 125.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2402.5354, -588.0103, 132.5215, 125.0000, -1, -1, RES_CAR_TIME);//продажа еды
	CreateJobVehicle(4,588, -2416.1211, -589.9481, 132.5215, -145.0000, -1, -1, RES_CAR_TIME);//продажа еды

	CreateJobVehicle(5,574,1407.6340,-1803.2684,13.2540,89.0988, -1, -1, RES_CAR_TIME);//уборщик дорог
	CreateJobVehicle(5,574,1407.4591,-1800.4585,13.2549,90.8144, -1, -1, RES_CAR_TIME);//уборщик дорог
	CreateJobVehicle(5,574,1407.6857,-1797.5862,13.2536,88.3762, -1, -1, RES_CAR_TIME);//уборщик дорог
	CreateJobVehicle(5,574,1407.6879,-1794.3823,13.2588,87.3894, -1, -1, RES_CAR_TIME);//уборщик дорог
	CreateJobVehicle(5,574,1407.6036,-1791.1024,13.2516,91.0553, -1, -1, RES_CAR_TIME);//уборщик дорог

	CreateJobVehicle(6,572,1423.2306,-1843.2004,13.1142,0.6986, -1, -1, RES_CAR_TIME);//газонокосильщик
	CreateJobVehicle(6,572,1425.3868,-1843.2166,13.0922,358.7812, -1, -1, RES_CAR_TIME);//газонокосильщик
	CreateJobVehicle(6,572,1427.6577,-1843.1534,13.1052,0.5638, -1, -1, RES_CAR_TIME);//газонокосильщик
	CreateJobVehicle(6,572,1430.1062,-1843.0464,13.0986,358.2319, -1, -1, RES_CAR_TIME);//газонокосильщик
	CreateJobVehicle(6,572,1432.6249,-1843.0458,13.1059,359.2083, -1, -1, RES_CAR_TIME);//газонокосильщик

	CreateJobVehicle(70,473, -318.1960, -470.2826, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -315.7645, -467.6689, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -312.5800, -464.3899, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -310.2773, -462.1237, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -307.8019, -459.5046, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -305.1906, -457.0033, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -308.5871, -484.0029, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -306.1579, -481.5451, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -303.9612, -479.2819, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -301.4828, -476.6647, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -299.1614, -474.3165, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -297.0540, -472.0325, 0.0780, -133.0800, -1, -1, 900);
	CreateJobVehicle(70,473, -295.0401, -470.0287, 0.0780, -133.0800, -1, -1, 900);

	CreateOrgsVehicle(fWHITEHOUSE,1,487, 1147.7097, -2053.9636, 69.1780, 270.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,415, 1244.4681, -2014.2249, 59.6431, 180.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,409, 1244.5669, -2023.2958, 59.6699, 180.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,415, 1244.5793, -2031.7722, 59.6409, 180.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,507, 1244.4935, -2039.5679, 59.9891, 180.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,507, 1276.6218, -2038.4324, 58.8482, 90.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,507, 1276.6218, -2032.2852, 58.8237, 90.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,507, 1276.6218, -2026.7562, 58.7994, 90.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,507, 1276.6218, -2021.4860, 58.7829, 90.0000, 1, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fWHITEHOUSE,1,507, 1276.6218, -2015.9333, 58.7760, 90.0000, 1, 1, RES_CAR_TIME);

 	CreateOrgsVehicle(fARMYLV,1,470, 268.4419, 1935.4885, 17.6347, 324.9113, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,470, 272.1119, 1932.7533, 17.6353, 324.9113, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,470, 276.4181, 1929.5566, 17.6389, 324.9113, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,470, 280.4232, 1926.5811, 17.6347, 324.9113, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,470, 284.5529, 1923.7101, 17.6331, 324.9113, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,470, 288.6778, 1920.7625, 17.6336, 324.9113, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,470, 292.8157, 1917.9739, 17.6323, 324.9113, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,500, 301.2961, 1948.4688, 17.7460, 180.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,500, 296.3886, 1948.4688, 17.7501, 180.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,500, 291.2571, 1948.4688, 17.7447, 180.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,433, 362.8168, 1989.0564, 18.2781, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,433, 362.8168, 1954.8677, 18.3227, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,433, 362.8168, 1931.3804, 18.2753, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,433, 362.8168, 1896.3716, 18.2595, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,437, 304.9612, 2003.3536, 17.7745, 180.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,487, 280.1958, 1966.1233, 17.7227, 270.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYLV,1,487, 108.6494, 1958.2063, 21.2978, 90.0000, 77, 77, RES_CAR_TIME);

    CreateOrgsVehicle(fARMYSF,11,520, -1434.5057, 493.8642, 18.9569, 329.5873, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,11,520, -1420.1467, 493.8642, 18.9545, 336.3047, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,11,520, -1407.3956, 493.8642, 18.9524, 338.6350, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,1,500, -1298.1809, 445.3586, 7.3255, 270.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,1,500, -1298.1809, 439.2568, 7.3188, 270.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,1,470, -1276.6373, 430.2199, 6.9925, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,1,470, -1276.6373, 424.5062, 6.9926, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,1,470, -1276.6373, 417.7141, 6.9956, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,1,470, -1276.6373, 411.5981, 6.9933, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,1,470, -1276.6373, 405.0411, 6.9951, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,1,437, -1287.1252, 321.3988, 7.3527, 90.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,3,487, -1455.7255, 506.8724, 18.3539, 270.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,3,487, -1455.7255, 494.6060, 18.3725, 270.0000, 77, 77, RES_CAR_TIME);
    CreateOrgsVehicle(fARMYSF,3,548, -1264.0575, 446.1845, 8.8937, 0.0000, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYSF,3,548, -1248.1761, 446.1845, 8.8937, 0.0000, 77, 77, RES_CAR_TIME);

	CreateOrgsVehicle(fARMYSF,3,452, -1439.9626, 507.3423, -0.2277, 90.0000, 77, 77, RES_CAR_TIME);
	CreateOrgsVehicle(fARMYSF,3,452, -1444.6266, 495.3742, 0.0307, 90.0000, 77, 77, RES_CAR_TIME);

	CreateOrgsVehicle(fLSNEWS,1, 582, 1548.4930,-1324.9818,16.5440,0.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1, 582, 1552.9690,-1324.9818,16.5394,0.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1, 582, 1558.9740,-1324.9818,16.5374,0.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1, 582, 1563.6055,-1324.9818,16.5413,0.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1,	582, 1577.4751, -1315.8938, 16.5327, 90.0000,152,155,RES_CAR_TIME);
	CreateOrgsVehicle(fLSNEWS,1, 488, 1545.1329,-1352.8324,329.6407,270.5792,0,155,RES_CAR_TIME);

	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1167.1061,10.8768,90.0000,152,3,RES_CAR_TIME);
	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1171.3126,10.8746,90.0000,152,3,RES_CAR_TIME);
	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1175.4086,10.8823,90.0000,152,3,RES_CAR_TIME);
	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1179.3368,10.8770,90.0000,152,3,RES_CAR_TIME);
	CreateOrgsVehicle(fLVNEWS,1, 582, 2672.6760,1183.3915,10.8770,90.0000,152,3,RES_CAR_TIME);
	CreateOrgsVehicle(fLVNEWS,1, 488, 2645.8816,1209.9844,27.3821,270.0000,0,3,RES_CAR_TIME);

	CreateOrgsVehicle(fSFNEWS,1, 582, -2520.5928,-602.0733,132.6188,180.0000,152,128,RES_CAR_TIME);
	CreateOrgsVehicle(fSFNEWS,1, 582, -2524.4219,-602.0733,132.6191,180.0000,152,128,RES_CAR_TIME);
	CreateOrgsVehicle(fSFNEWS,1, 582, -2528.0747,-602.0733,132.6203,180.0000,152,128,RES_CAR_TIME);
	CreateOrgsVehicle(fSFNEWS,1, 582, -2531.8828,-602.0733,132.6212,180.0000,152,128,RES_CAR_TIME);
	CreateOrgsVehicle(fSFNEWS,1, 582, -2535.6157,-602.0733,132.6185,180.0000,152,128,RES_CAR_TIME);
	CreateOrgsVehicle(fSFNEWS,1, 488, -2500.6589,-665.8373,139.3712,90.0000,1,128,RES_CAR_TIME);

	CreateOrgsVehicle(fFBI,1, 415, -1937.2799,-1022.4963,31.9282,0.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 415, -1937.2799,-1031.4089,31.9379,0.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 522, -1937.6946,-1041.4673,31.7430,45.0736,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 522, -1937.7007,-1044.9742,31.7419,45.7392,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 522, -1937.7550,-1048.8241,31.7360,46.0861,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 490, -1950.2008,-1046.9810,32.2998,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 490, -1950.2008,-1042.4598,32.3009,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 490, -1950.2008,-1038.1807,32.2442,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 490, -1950.2008,-1033.7538,32.3027,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 490, -1950.2008,-1029.2238,32.2593,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 482, -1941.6862,-1086.3093,30.8959,0.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 482, -1949.0909,-1086.3093,30.8906,0.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 421, -1970.9238,-1010.7789,31.9717,270.9419,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 487, -1955.7759, -1068.0977, 53.4151, -90.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fFBI,1, 487, -1955.7759, -1053.5165, 53.4151, -90.0000,0,0,RES_CAR_TIME);

	CreateOrgsVehicle(fYAKUZA,1, 555, 2631.4116,1845.6924,10.5046,90.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 562, 2631.4116,1842.4629,10.4791,90.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 559, 2631.4116,1838.8984,10.4766,90.0000,0,0,RES_CAR_TIME);//
	CreateOrgsVehicle(fYAKUZA,1, 409, 2618.6370,1824.6866,10.6878,358.9127,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 579, 2602.3064,1836.9595,10.8429,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 579, 2602.3064,1833.6537,10.7534,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 579, 2602.3064,1815.0563,10.8306,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 579, 2602.3064,1811.7317,10.7547,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 555, 2631.7671,1801.2444,10.5043,90.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 562, 2631.7671,1804.4651,10.4790,90.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 559, 2631.7671,1807.6177,10.4976,90.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 468, 2602.4468,1808.6140,10.4892,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 468, 2602.4468,1840.2695,10.4893,270.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 487, 2621.6028, 1885.4277, 11.0703, 180.0000,0,0,RES_CAR_TIME);
	CreateOrgsVehicle(fYAKUZA,1, 482, 2603.1814, 1859.4486, 10.9412, 270.0000,0,0, 300);

	CreateOrgsVehicle(fRM,1, 409, 950.1121, 1731.9393, 8.5123, 180.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 579, 950.1121, 1718.3633, 8.6731, 180.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 468, 954.0751, 1707.1797, 8.3128, 323.5156, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 468, 959.5573, 1707.3156, 8.3164, 322.5422, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 579, 950.1121, 1744.7179, 8.6463, 180.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 487, 960.6819, 1755.3542, 8.8017, 270.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 555, 983.3103, 1746.3994, 8.3857, 90.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 555, 983.3103, 1743.2916, 8.3857, 90.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 562, 983.3100, 1739.6986, 8.2827, 90.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 562, 983.3103, 1735.8705, 8.2823, 90.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 579, 983.3103, 1723.9901, 8.4774, 90.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 579, 983.3103, 1720.0803, 8.5884, 90.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 559, 983.3103, 1727.9392, 8.3110, 90.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 559, 983.3103, 1732.0446, 8.3158, 90.0000, 0, 0,RES_CAR_TIME);
	CreateOrgsVehicle(fRM,1, 482, 972.8477, 1767.6333, 8.7665, 180.0000, 0, 0, 300);

	CreateOrgsVehicle(fLCN,1,409, 1446.2313, 749.2031, 10.6833, 180.0740, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,555, 1413.6937, 755.8825, 10.5609, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,562, 1413.6915, 752.6953, 10.4735, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,559, 1413.6915, 749.4548, 10.5011, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,579, 1413.6937, 746.3412, 10.8052, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,579, 1413.6937, 743.1030, 10.8313, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,468, 1447.4857, 737.9578, 10.4884, 134.0184, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,468, 1447.4219, 735.0457, 10.4776, 135.5245, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,579, 1413.6937, 717.9245, 10.7975, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,579, 1413.6937, 714.6896, 10.7488, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,559, 1413.6937, 711.4326, 10.4825, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,562, 1413.6937, 708.1486, 10.4697, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,555, 1413.6937, 704.9454, 10.5551, 270.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,487, 1428.8878, 787.3394, 10.9727, 180.4051, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLCN,1,482, 1445.5157, 787.6576, 10.9375, 180.0000, 0, 0, 300);

	CreateOrgsVehicle(fLVPD,1,497, 2278.0625, 2473.5723, 38.8575, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,601, 2291.1147, 2444.7144, 10.4793, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,523, 2282.2769, 2444.7144, 10.3939, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,523, 2277.4885, 2444.7144, 10.3926, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,599, 2273.5005, 2444.7144, 10.9246, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,599, 2269.0186, 2444.7144, 10.8988, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,427, 2260.5225, 2444.7144, 10.9761, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,427, 2256.0354, 2444.7144, 10.9760, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,598, 2251.5117, 2459.9065, 10.5944, 178.2610, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,598, 2256.1277, 2460.4294, 10.5944, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,598, 2260.4863, 2460.4294, 10.5944, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,598, 2269.1028, 2460.4294, 10.5043, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,598, 2273.7246, 2460.4294, 10.6009, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,598, 2278.0828, 2460.4294, 10.5042, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,598, 2282.3440, 2460.4294, 10.5941, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,528, 2295.2390, 2477.5283, 10.7858, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,528, 2291.1707, 2477.5283, 10.7860, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,560, 2277.9666, 2477.5283, 10.5250, 180.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,560, 2282.0403, 2477.5283, 10.5257, 180.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,541, 2273.4744, 2477.0938, 10.4234, 180.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLVPD,1,541, 2269.1233, 2477.0938, 10.4234, 180.0000, 0, 0, RES_CAR_TIME);


	CreateOrgsVehicle(fSFPD,1,528, -1622.9227, 653.6722, -5.1983, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,528, -1622.9227, 649.7008, -5.1642, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,601, -1640.1469, 661.8729, -5.4829, 270.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,523, -1604.2440, 693.0329, -5.6739, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,523, -1600.0601, 693.0329, -5.6687, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,427, -1600.1724, 676.6910, -5.1099, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,427, -1595.9003, 676.6910, -5.1097, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,560, -1572.2313, 706.1619, -5.5371, 90.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,560, -1572.2313, 710.1091, -5.5368, 90.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,597, -1572.2313, 714.1777, -5.4738, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,597, -1572.2313, 718.4165, -5.4737, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,597, -1572.2313, 722.3792, -5.4727, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,597, -1572.2313, 726.4285, -5.4727, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,597, -1572.2313, 730.5509, -5.4733, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,597, -1572.2313, 734.7073, -5.4736, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,599, -1612.3265, 732.4606, -5.0585, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,599, -1616.5073, 732.4606, -5.0449, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,497, -1679.1805, 705.8844, 30.8665, 90.6946, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,541, -1579.8966, 749.6949, -5.6392, 180.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fSFPD,1,541, -1584.1494, 749.6949, -5.6392, 180.0000, 0, 0, RES_CAR_TIME);

	CreateOrgsVehicle(fLSPD,1,596, 1595.4889, -1711.5000, 5.6125, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1591.4387, -1711.5000, 5.6116, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1587.4666, -1711.5000, 5.6071, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1583.4468, -1711.5000, 5.6113, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1578.3768, -1711.5000, 5.6356, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1574.4454, -1711.5000, 5.6126, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1570.4323, -1711.5000, 5.6109, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,596, 1566.4204, -1711.5000, 5.6116, 0.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,560, 1562.3646, -1711.5000, 5.6057, 0.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,560, 1558.7681, -1711.5000, 5.5957, 0.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,523, 1544.7458, -1684.5098, 5.4614, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,523, 1544.7458, -1680.1964, 5.4621, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,523, 1544.7458, -1676.3038, 5.4627, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,427, 1545.3319, -1672.1801, 6.0227, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,427, 1545.3319, -1667.7170, 6.0238, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,601, 1545.9602, -1650.9843, 5.6494, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,528, 1530.6144, -1644.1118, 5.8629, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,528, 1526.5190, -1644.1118, 5.8631, 180.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,599, 1528.8228, -1684.0189, 6.0851, 270.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,599, 1528.8228, -1688.0905, 6.0836, 270.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,497, 1567.9802, -1653.7964, 28.5689, 90.0000, 0, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,541, 1601.8314, -1704.2982, 5.4945, 90.0000, 0, 0, RES_CAR_TIME);
	CreateOrgsVehicle(fLSPD,1,541, 1601.8314, -1700.2322, 5.4946, 90.0000, 0, 0, RES_CAR_TIME);

	CreateOrgsVehicle(fMEDICLS,1,416, 1123.8384, -1326.9530, 13.4725, 0.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1110.8032, -1326.9530, 13.3433, 0.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1097.7792, -1326.9530, 13.3344, 0.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1179.4583, -1338.7979, 13.8819, 270.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,487, 1162.2275, -1300.7074, 32.2314, 270.0000, 1, 3, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,487, 1162.2275, -1319.9258, 32.1892, 270.0000, 1, 3, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1184.0970, -1315.7960, 13.8034, 180.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLS,1,416, 1176.9188, -1308.4987, 13.9295, 270.0000, 3, 1, RES_CAR_TIME);

	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 622.3234, 14.4929, 270.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 627.3912, 14.6536, 270.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 632.8304, 14.6029, 270.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 637.8122, 14.4868, 270.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 642.8408, 14.6423, 270.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICSF,1,416, -2588.6016, 647.9203, 14.4876, 270.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICSF,1,487, -2727.4817, 615.3436, 34.0142, 90.0000, 1, 3, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICSF,1,487, -2727.4817, 594.9642, 34.0142, 90.0000, 1, 3, RES_CAR_TIME);

	CreateOrgsVehicle(fMEDICLV,1,416, 1610.7651, 1848.9933, 10.9895, 180.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLV,1,416, 1606.3879, 1848.9933, 10.9216, 180.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLV,1,416, 1602.1953, 1848.9933, 10.9086, 180.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLV,1,416, 1598.0675, 1848.9933, 10.9138, 180.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLV,1,416, 1593.6991, 1848.9933, 11.0052, 180.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLV,1,416, 1589.5984, 1848.9933, 11.0115, 180.0000, 3, 1, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLV,1,487, 1594.7169, 1799.4476, 31.2183, 0.0000, 1, 3, RES_CAR_TIME);
	CreateOrgsVehicle(fMEDICLV,1,487, 1622.0305, 1799.4476, 31.1707, 0.0000, 1, 3, RES_CAR_TIME);

	CreateOrgsVehicle(fINSTRUCTORS,1,426,776.7488,-1341.6019,13.4731,179.0946,79,70, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,771.8151,-1341.6345,13.4736,180.8721,79,70, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,766.5387,-1341.6300,13.4967,180.5028,79,70, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,761.5714,-1341.7915,13.4506,179.4957,79,70, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,756.6149,-1341.8101,13.4815,179.4975,79,70, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,651.7911,-1358.2324,13.7699,179.9638,79,70, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,651.9289,-1372.4252,13.7717,357.5385,79,79, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,657.1716,-1372.5923,13.7715,359.8268,79,79, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,656.7543,-1358.2018,13.7710,180.4858,79,79, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,661.8561,-1357.9684,13.7657,179.1908,79,79, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,426,662.1793,-1372.7102,13.7771,357.2712,79,79, RES_CAR_TIME); // АШ кар
	CreateOrgsVehicle(fINSTRUCTORS,1,487,739.9002,-1370.4344,27.8451,90.0000,79,79, RES_CAR_TIME-200); // АШ вертолет

	CreateJobVehicle(50,530,261.2279,1459.5206,10.3367,178.0600,1,1, RES_CAR_TIME); // Погрузочник
	CreateJobVehicle(50,530,263.1917,1459.4993,10.3365,177.7784,1,1, RES_CAR_TIME); // Погрузочник
	CreateJobVehicle(50,530,265.2363,1459.5050,10.3366,177.8748,1,1, RES_CAR_TIME); // Погрузочник
	CreateJobVehicle(50,530,267.3203,1459.5337,10.3355,178.2702,1,1, RES_CAR_TIME); // Погрузочник
	CreateJobVehicle(50,530,269.2901,1459.4288,10.3161,177.4821,1,1, RES_CAR_TIME); // Погрузочник

	CreateJobVehicle(3,456, 1052.9790, 1917.8970, 10.9935, 0.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1060.5085, 1917.8970, 10.9938, 0.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1067.8171, 1917.8970, 10.9934, 0.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1076.4841, 1917.8970, 10.9935, 0.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1082.7102, 1917.8970, 10.9934, 0.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1091.4449, 1917.8970, 10.9938, 0.0000, -1, -1, RES_CAR_TIME);//развозчики

	CreateJobVehicle(3,456, 1106.8574, 1934.7936, 10.9146, 90.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1106.8574, 1926.1255, 10.9141, 90.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1106.8574, 1920.0426, 10.9140, 90.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1106.8574, 1911.5863, 10.9139, 90.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1106.8574, 1903.9119, 10.9140, 90.0000, -1, -1, RES_CAR_TIME);//развозчики
	CreateJobVehicle(3,456, 1106.8574, 1896.5710, 10.9141, 90.0000, -1, -1, RES_CAR_TIME);//развозчики

	CreateJobVehicle(3,403, -2.3778, -364.5102, 5.9873, 90.0000, -1, -1, RES_CAR_TIME);//развозчики АЗС
	CreateJobVehicle(3,403, -2.3778, -360.0000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME);//развозчики АЗС
	CreateJobVehicle(3,403, -2.3778, -355.5000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME);//развозчики АЗС
	CreateJobVehicle(3,403, -2.3778, -351.0000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME);//развозчики АЗС
	CreateJobVehicle(3,403, -2.3778, -346.5000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME);//развозчики АЗС
	CreateJobVehicle(3,403, -2.3778, -342.0000, 5.9873, 90.0000, -1, -1, RES_CAR_TIME);//развозчики АЗС

	CreateJobVehicle(71,473, -2334.9319, 1689.5669, 0.1308, 180.0000, -1, -1, 100);
	CreateJobVehicle(71,473, -2331.0867, 1691.3357, 0.1308, 180.0000, -1, -1, 100);

	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		SignalTick[i][1] = -1;
		LightsObject[i][0] = -1;
		LightsObject[i][1] = -1;
		SetVehicleParamsEx(i,false,false,false,false,false,false,false);
		if(!VehicleInfo[i][vJob] && !VehicleInfo[i][vTeam]) continue;
		VehicleInfo[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
		VehicleInfo[i][vPlayer] = -1;
	}

	aSellCar[0] = AddStaticVehicle(419, 1448.1471, 708.4460, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(404, 1448.1471, 713.7061, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(401, 1448.1471, 719.3146, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(410, 1448.1471, 724.8481, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(412, 1447.6071, 730.6991, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(413, 1448.1471, 736.4272, 1087.9449, 90.0000, -1, -1);
	AddStaticVehicle(422, 1438.2729, 737.9459, 1087.9449, 180.0000, -1, -1);
	AddStaticVehicle(439, 1427.2094, 737.6930, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(467, 1427.4995, 733.3177, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(466, 1427.4995, 729.1904, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(474, 1427.4395, 724.9910, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(479, 1427.3696, 720.9914, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(492, 1427.3696, 716.6315, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(491, 1427.3696, 711.9934, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(517, 1427.4827, 707.3099, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(518, 1427.3752, 702.1538, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(542, 1427.6852, 697.2802, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(543, 1438.7712, 710.4130, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(545, 1438.7712, 723.2712, 1087.9449, -90.0000, -1, -1);

	aSellCar[1] = AddStaticVehicle(549, 1448.1471, 708.4460, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(575, 1448.1471, 713.7061, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(576, 1447.7671, 719.3146, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(600, 1448.1271, 724.8481, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(585, 1447.6071, 730.6991, 1087.6650, 90.0000, -1, -1);
	/////////////////////////////////////////////////////////////////////////
	aSellCar[2] = AddStaticVehicle(603, 1448.1471, 708.4460, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(579, 1448.1071, 713.7061, 1087.8450, 90.0000, -1, -1);
	AddStaticVehicle(589, 1448.4670, 719.3146, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(580, 1447.9871, 724.8481, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(567, 1448.0071, 730.6991, 1087.7450, 90.0000, -1, -1);
	AddStaticVehicle(566, 1447.8470, 736.4272, 1087.9449, 90.0000, -1, -1);
	AddStaticVehicle(561, 1438.2729, 737.9459, 1087.9449, 180.0000, -1, -1);
	AddStaticVehicle(558, 1427.2094, 737.6930, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(555, 1427.0995, 733.3177, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(554, 1427.4995, 729.1704, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(551, 1427.5195, 724.9910, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(534, 1427.4896, 720.9714, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(527, 1426.8696, 716.5915, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(535, 1427.1696, 711.9934, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(507, 1427.5427, 707.3099, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(505, 1427.2952, 702.1538, 1088.1049, -90.0000, -1, -1);
	AddStaticVehicle(526, 1426.9852, 697.1802, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(533, 1438.7712, 710.4130, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(500, 1438.7712, 723.2712, 1087.9449, -90.0000, -1, -1);

	aSellCar[3] = AddStaticVehicle(496, 1448.5071, 708.4460, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(475, 1448.1071, 713.7061, 1087.8450, 90.0000, -1, -1);
	AddStaticVehicle(445, 1448.0670, 719.3146, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(426, 1448.0471, 724.8481, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(421, 1448.0071, 730.6991, 1087.7450, 90.0000, -1, -1);
	AddStaticVehicle(405, 1447.9670, 736.4272, 1087.9449, 90.0000, -1, -1);
	AddStaticVehicle(400, 1438.2729, 737.9459, 1087.9449, 180.0000, -1, -1);
	//////////////////////////////////////////////////////////////////////////
	aSellCar[4] = AddStaticVehicle(602, 1448.2671, 708.4460, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(587, 1448.2671, 713.7061, 1087.8450, 90.0000, -1, -1);
	AddStaticVehicle(559, 1448.2671, 719.3146, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(560, 1448.2671, 724.8481, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(562, 1448.2671, 730.6991, 1087.7450, 90.0000, -1, -1);
	AddStaticVehicle(541, 1448.2671, 736.4272, 1087.9449, 90.0000, -1, -1);
	AddStaticVehicle(506, 1438.2729, 737.9459, 1087.9449, 180.0000, -1, -1);
	AddStaticVehicle(480, 1427.2094, 737.6930, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(434, 1427.2094, 733.3177, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(477, 1427.2094, 729.1704, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(415, 1427.2094, 724.9910, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(429, 1427.2094, 720.9714, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(402, 1427.2094, 716.5915, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(451, 1427.2094, 711.9934, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(411, 1427.2094, 707.3099, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(495, 1427.2952, 702.1538, 1088.1049, -90.0000, -1, -1);
	AddStaticVehicle(494, 1427.6852, 697.2802, 1087.9449, -90.0000, -1, -1);
	
	////////////////////////////////////////////////////////////////////////////
	aSellCar[5] = AddStaticVehicle(481, 1448.2671, 708.4460, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(509, 1448.2671, 713.7061, 1087.8450, 90.0000, -1, -1);
	AddStaticVehicle(510, 1448.2671, 719.3146, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(462, 1448.2671, 724.8481, 1087.6650, 90.0000, -1, -1);
	AddStaticVehicle(461, 1448.2671, 730.6991, 1087.7450, 90.0000, -1, -1);
	AddStaticVehicle(521, 1448.2671, 736.4272, 1087.9449, 90.0000, -1, -1);
	AddStaticVehicle(463, 1438.2729, 737.9459, 1087.9449, 180.0000, -1, -1);
	AddStaticVehicle(586, 1427.2094, 737.6930, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(471, 1427.2094, 733.3177, 1087.9449, -90.0000, -1, -1);
	AddStaticVehicle(468, 1427.2094, 729.1704, 1087.9449, -90.0000, -1, -1);
	aSellCar[6] = AddStaticVehicle(522, 1427.2094, 724.9910, 1087.9449, -90.0000, -1, -1);

	for(new i = aSellCar[0]; i <= aSellCar[6]; i++) {
		if(i >= aSellCar[5]) SetVehicleVirtualWorld(i,6);
		else if(i >= aSellCar[4]) SetVehicleVirtualWorld(i,5);
		else if(i >= aSellCar[3]) SetVehicleVirtualWorld(i,4);
		else if(i >= aSellCar[2]) SetVehicleVirtualWorld(i,3);
		else if(i >= aSellCar[1]) SetVehicleVirtualWorld(i,2);
		else if(i >= aSellCar[0]) SetVehicleVirtualWorld(i,1);
		LinkVehicleToInterior(i,82);
		SetVehicleParamsEx(i,false,false,false,true,false,false,false);
		VehicleInfo[i][vType] = VEHICLE_TYPE_AUTOSALON;
	}
	return 1;
}
stock CreateSphree() {
	actor[4] = CreateActor(29, 324.3706,1120.0488,1083.8828,110.0615);//[притон] продажа нарко
	SetActorVirtualWorld(actor[4],32);
	actor[5] = CreateActor(289, 851.3233,-223.5411,1001.1949,268.7731);//[комп клуб]
	SetActorVirtualWorld(actor[5],2);

	actor[6] = CreateActor(291, 1981.0763,-2039.7773,13.5708,320.6702);//[КВЕСТ] гетто спавн
	SetActorVirtualWorld(actor[6],0);
	ApplyActorAnimation(actor[6],"DEALER","Dealer_idle",4.1,0,0,0,1,1);
	actor[7] = CreateActor(291, 1770.8281,-1887.7174,13.5600,121.4788);//[КВЕСТ] ЖД ЛС спавн
	SetActorVirtualWorld(actor[7],0);
	ApplyActorAnimation(actor[7],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[8] = CreateActor(104, 1942.2025,-1117.6656,26.4455,168.3886);//[КВЕСТ] Ballas
	SetActorVirtualWorld(actor[8],0);
	ApplyActorAnimation(actor[8],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);
	actor[9] = CreateActor(110, 2747.1582,-1180.8827,69.4016,87.8380);//[КВЕСТ] Vagos
	SetActorVirtualWorld(actor[9],0);
	ApplyActorAnimation(actor[9],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);
	actor[10] = CreateActor(270, 2498.2842,-1687.7340,13.5188,9.7704);//[КВЕСТ] Grove
	SetActorVirtualWorld(actor[10],0);
	ApplyActorAnimation(actor[10],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);
	actor[11] = CreateActor(115, 1669.6034,-2118.1514,13.5469,308.2066);//[КВЕСТ] Aztec
	SetActorVirtualWorld(actor[11],0);
	ApplyActorAnimation(actor[11],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);
	actor[12] = CreateActor(273, 2735.0513,-1949.6676,13.5394,81.6878);//[КВЕСТ] Rifa
	SetActorVirtualWorld(actor[12],0);
	ApplyActorAnimation(actor[12],"BD_FIRE","M_smklean_loop",4.1,0,0,0,1,1);

	actor[13] = CreateActor(86, 2194.1531,-2279.8872,13.5469,4.5468);//[Дуэль]
	SetActorVirtualWorld(actor[13],0);
	ApplyActorAnimation(actor[13],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[14] = CreateActor(91, 1441.9052,696.7106,1087.9011,353.7388);//[автосалоны]
	SetActorVirtualWorld(actor[14],1);
	actor[15] = CreateActor(91, 1441.9052,696.7106,1087.9011,353.7388);//[автосалоны]
	SetActorVirtualWorld(actor[15],2);
	actor[16] = CreateActor(91, 1441.9052,696.7106,1087.9011,353.7388);//[автосалоны]
	SetActorVirtualWorld(actor[16],3);
	actor[17] = CreateActor(91, 1441.9052,696.7106,1087.9011,353.7388);//[автосалоны]
	SetActorVirtualWorld(actor[17],4);
	actor[18] = CreateActor(91, 1441.9052,696.7106,1087.9011,353.7388);//[автосалоны]
	SetActorVirtualWorld(actor[18],5);
	actor[19] = CreateActor(91, 1441.9052,696.7106,1087.9011,353.7388);//[автосалоны]
	SetActorVirtualWorld(actor[19],6);
	actor[20] = CreateActor(91, 1441.9052,696.7106,1087.9011,353.7388);//[автосалоны]
	SetActorVirtualWorld(actor[20],7);

	actor[21] = CreateActor(240, -1232.7095,1578.8801,1112.6555,271.9027);//[АШ] покупка ліцензій (регистратура)
	SetActorVirtualWorld(actor[21],45);
	actor[22] = CreateActor(148, -1231.9373,1561.4098,1114.0768,320.1333);//[АШ] правила дорожного движения
	SetActorVirtualWorld(actor[22],45);

	actor[23] = CreateActor(6, 1611.4192,999.5148,1475.6283,184.6588);//[Итальяснкая мафія] босс нарко
	SetActorVirtualWorld(actor[23],49);
	ApplyActorAnimation(actor[23],"MISC","seat_LR",4.1,0,0,0,1,1);
	actor[24] = CreateActor(6, 1611.4192,999.5148,1475.6283,184.6588);//[Японская мафія] босс нарко
	SetActorVirtualWorld(actor[24],50);
	ApplyActorAnimation(actor[24],"MISC","seat_LR",4.1,0,0,0,1,1);
	actor[25] = CreateActor(6, 1611.4192,999.5148,1475.6283,184.6588);//[Українська мафія] босс нарко
	SetActorVirtualWorld(actor[25],51);
	ApplyActorAnimation(actor[25],"MISC","seat_LR",4.1,0,0,0,1,1);

	actor[26] = CreateActor(217,738.0546,-1520.5520,1415.4099,88.7880);//[LsNews] бот объявы
	SetActorVirtualWorld(actor[26],10);
	actor[27] = CreateActor(217,738.0546,-1520.5520,1415.4099,88.7880);//[LsNews] бот объявы
	SetActorVirtualWorld(actor[27],11);
	actor[28] = CreateActor(217,738.0546,-1520.5520,1415.4099,88.7880);//[LsNews] бот объявы
	SetActorVirtualWorld(actor[28],12);

	actor[29] = CreateActor(30, 2343.9939,-1314.1212,24.0606,85.3731);//Квест для ГЕТТО //Ограбление
	SetActorVirtualWorld(actor[29],0);
	ApplyActorAnimation(actor[29],"DEALER","Dealer_idle",4.1,0,0,0,1,1);

	actor[30] = CreateActor(6, 2508.5442,-1471.2617,24.0337,323.2082);//угон
	SetActorVirtualWorld(actor[30],0); //угон

	actor[31] = CreateActor(6, 2425.8130,-2472.8911,13.6338,46.2516);//угон
	SetActorVirtualWorld(actor[31],0); //угон
	actor[32] = CreateActor(6, 952.2404,2054.9951,10.8203,5.8628);//угон
	SetActorVirtualWorld(actor[32],0); //угон
	actor[33] = CreateActor(6,-2137.6365,-248.1024,36.5156,270.0877);//угон
	SetActorVirtualWorld(actor[33],0); //угон


	for(new i;i<MAX_ACTORSS;i++) {
	    new Float: x,Float:y,Float:z;
	    GetActorPos(i,x,y,z);
	    tActor[i] = Create3DTextLabel("",COLOR_GREY,x, y, z+1,10.0,GetActorVirtualWorld(i));
	}

	gAreas[arJob][0] = CreateDynamicSphere(-131.4120,8.5900,3.1172,1000.0);//[ферма]
	gAreas[arJob][1] = CreateDynamicSphere(337.1608,1408.8275,6.5547,210.0);//[нефтезавод]
	gAreas[arJob][2] = CreateDynamicSphere(2708.9302,-2405.2688,13.5039,70.0);//[оружейный]
	gAreas[arJob][3] = CreateDynamicSphere(-310.8985,-481.1532,1.9255,350.0);//[рыбалка]
	gAreas[arJob][4] = CreateDynamicSphere(-504.1548,-1564.1219,10.3160,350.0);//[лісопилка]
	gAreas[arJob][5] = CreateDynamicSphere(25.6052,2500.2849,16.4922,250.0,8);//[комп зал] DM арена

	gAreas[arGripp][0] = CreateDynamicSphere(2339.7805,-2048.8184,13.3750,100.0);//[болезнь] гетто
	gAreas[arGripp][1] = CreateDynamicSphere(248.5707,2508.2429,16.5046,200.0);//[болезнь] заброшеный аэро
	gAreas[arGripp][2] = CreateDynamicSphere(619.0365,856.9022,-42.9534,350.0);//[болезнь] карьер

	gAreas[arPerfomans][0] = CreateDynamicSphere(663.8903,-1477.1541,15.3989,1.5);//[Perfomans] Стойка 1
	gAreas[arPerfomans][1] = CreateDynamicSphere(663.9086,-1487.6323,15.3989,1.5);//[Perfomans] Стойка 2

	CreateDynamicCP(308.1984,-168.6314,999.5938,1.5, -1, -1, -1,10.0);//[Армія] склад

	CreateDynamicCP(1144.7769,1975.1379,10.8203,5.0, 0, 0, -1,10.0);//[развозчики продуктов] ПРОЧЕЕ
	CreateDynamicCP(-215.4123,-246.7570,2.0283,5.0, 0, 0, -1,10.0);//[развозчики продуктов] АЗС

	gAreas[arLoadProds][0] = CreateDynamicSphere(1144.7769,1975.1379,10.8203,2.0);//[Развозчик продуктов] 24-7
	gAreas[arLoadProds][1] = CreateDynamicSphere(-215.4123,-246.7570,2.0283,2.0);//[Развозчик продуктов] АЗС

	gAreas[arSad] = CreateDynamicSphere(-103.0734,-5.6714,3.1172,2.0);//[Сад] склад

	gAreas[arNews][0] = CreateDynamicSphere(785.3342,-1532.6215,1418.8169,5.0);//[News] студия
	gAreas[arNews][1] = CreateDynamicSphere(779.9375,-1497.9346,1418.8450,5.0);//[News] студия зеленая

    gAreas[arZavod] = CreateDynamicSphere(2731.9482,-2398.6021,13.6328,1.5);//склад
	gAreas[arZavodSklad] = CreateDynamicSphere(308.1984,-168.6314,999.5938,1.3,35);//склад
    gAreas[arArmySFSklad] = CreateDynamicSphere(-1331.0984,407.6659,7.1875,1.9);//склад армии сф
    gAreas[arArmyLVSklad] = CreateDynamicSphere(308.1984,-168.6314,999.5938,1.3,30);//склад армии лв для банд

	gAreas[arPobeg][0] = CreateDynamicSphere(341.8165,539.8337,808.2199,0.7,202,0);//[побег] шахта
	gAreas[arPobeg][1] = CreateDynamicSphere(-2412.9822,2314.3362,0.3909,5.0);//[побег] місце призначення

	CreateDynamicPickup(3633,23,525.7095,1470.6411,4.0315,0,0);//Бочки для погрузчика
	CreateDynamicPickup(3633,23,481.0192,1308.8954,9.3572,0,0);//Бочки для погрузчика

	gAreas[arOil][0] = CreateDynamicSphere(415.0787,1405.1608,8.5656,2.0);//[Нефтяник] работа
	gAreas[arOil][1] = CreateDynamicSphere(401.2273,1456.7953,8.1906,2.0);//[Нефтяник] работа
	gAreas[arOil][2] = CreateDynamicSphere(281.5784,1446.3842,10.6189,3.0);//[Нефтяник] склад

	gAreas[arOil][3] = CreateDynamicSphere(525.7095,1470.6411,4.0315,4.0);//[Нефтяник] работа на погрузчике
	gAreas[arOil][4] = CreateDynamicSphere(481.0192,1308.8954,9.3572,4.0);//[Нефтяник] работа на погрузчике

	gAreas[arOil][5] = CreateDynamicSphere(274.2075,1447.0771,10.6189,4.0);//[Нефтяник] склад на погрузчике
	return 1;
}
stock CreatePickups() {
	for(new i; i != 21; i++) {
		objgolod[i] = -1;
		pickups_game_golod_2[i] = -1;
	}

	CreateDynamicPickup(3632,23,415.0787,1405.1608,8.5656,0,0);//[нефть] пикап бочки
	CreateDynamicPickup(3632,23,401.2273,1456.7953,8.1906,0,0);//[нефть] пикап бочки

	for(new i = 0; i < sizeof(gTeleportsToD); i++) {
		new string[72];
		strcat(string, gTeleportsToD[i][tpName]), strcat(string,"\n\n{f6f6d9}Вcтаньте на пікап, щоб зайти/вийти");
		CreateDynamic3DTextLabel(string, CGOLD, gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, gTeleportsToD[i][tpEnterWorld], gTeleportsToD[i][tpEnterInt]);
		TeleportPickup[i] = CreateDynamicSphere(gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z],1.0,gTeleportsToD[i][tpEnterWorld],gTeleportsToD[i][tpEnterInt]);
		CreateDynamicPickup(1318, 1, gTeleportsToD[i][tpEnterPos_X], gTeleportsToD[i][tpEnterPos_Y], gTeleportsToD[i][tpEnterPos_Z], gTeleportsToD[i][tpEnterWorld],gTeleportsToD[i][tpEnterInt]);
	}
	for(new pick = 0; pick < PICKUPS_COUNT; pick++) {
		CreateDynamicPickup(gPickupData[pick][2],23,gPickup[pick][0], gPickup[pick][1],gPickup[pick][2], gPickupData[pick][1],gPickupData[pick][0]);
		gPickID[pick] = CreateDynamicSphere(gPickup[pick][0], gPickup[pick][1],gPickup[pick][2],1.0,gPickupData[pick][1],gPickupData[pick][0]);
		if(!GetString(gPickupDataName[pick][picName],"None")) CreateDynamic3DTextLabel(gPickupDataName[pick][picName],gPickupDataName[pick][picColor],gPickup[pick][0], gPickup[pick][1],gPickup[pick][2]+0.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, gPickupData[pick][1],gPickupData[pick][0]);
	}
	for(new i; i < sizeof(clothes_checkpoints); i ++) {
		gAreas[arClothes][i] = CreateDynamicSphere(clothes_checkpoints[i][0],clothes_checkpoints[i][1],clothes_checkpoints[i][2],1.0,200,88);
		CreateDynamicPickup(1559,23,clothes_checkpoints[i][0],clothes_checkpoints[i][1],clothes_checkpoints[i][2],200,88);
	}
	for(new i; i < sizeof(pickup_game_dm); i ++) {
		if(i < 7) pickups_game_dm[i] = CreateDynamicPickup(1580, 2, pickup_game_dm[i][0],pickup_game_dm[i][1],pickup_game_dm[i][2],201);
		else pickups_game_dm[i] = CreateDynamicPickup(19131, 2, pickup_game_dm[i][0],pickup_game_dm[i][1],pickup_game_dm[i][2],201);
	}
	for(new i; i < sizeof(spawns_pos_golod); i ++) area_golod[i] = CreateDynamicSphere(spawns_pos_golod[i][0],spawns_pos_golod[i][1],spawns_pos_golod[i][2],2.5);
	for(new i; i < sizeof(alcatraz_maniken); i ++) gAreas[arManiken][i] = CreateDynamicSphere(alcatraz_maniken[i][0],alcatraz_maniken[i][1],alcatraz_maniken[i][2],1.2);
    for(new i; i < sizeof(gun_checkpoints); i ++) gun_pickup[i] = CreateDynamicCP(gun_checkpoints[i][0],gun_checkpoints[i][1],gun_checkpoints[i][2],0.7, 0, 0, -1,3.0);
	for(new i; i < sizeof(sad_objects); i ++) {
		SI[i][sad_object][0] = CreateDynamicObject(765,sad_objects[i][0],sad_objects[i][1],sad_objects[i][2],sad_objects[i][3],sad_objects[i][4],sad_objects[i][5],-1,-1,-1,90.000);
		SI[i][sad_3dtext] = CreateDynamic3DTextLabel("Дерево\nСтадия - сохнет\nФермер - Відсутнє",0xFFFFFFFF,sad_objects[i][0],sad_objects[i][1],sad_objects[i][2]+4,10.0);
		sad_area[i] = CreateDynamicSphere(sad_objects[i][0],sad_objects[i][1],sad_objects[i][2]+2.5,2.0,0,0);
	}
	for(new i; i < sizeof(autosaloncar); i ++) {
		CreateDynamicPickup(1239,23,autosaloncar[i][autoPosX],autosaloncar[i][autoPosY],autosaloncar[i][autoPosZ],autosaloncar[i][autoWorld],82);
		car_pickup[i] = CreateDynamicSphere(autosaloncar[i][autoPosX],autosaloncar[i][autoPosY],autosaloncar[i][autoPosZ],0.5,autosaloncar[i][autoWorld],82);
	}
	for(new i; i != MAX_WOODS; i++) {
		WD::[i][woodZone] = CreateDynamicSphere(Woods[i][0],Woods[i][1],Woods[i][2],2.0);
		WD::[i][woodObject] = CreateDynamicObject(782,Woods[i][0],Woods[i][1],Woods[i][2],Woods[i][3],Woods[i][4],Woods[i][5]);
		WD::[i][woodUse] = false;
	}
	RingCP[0] = CreateDynamicCP(763.0551,8.9309,1001.1639, 1.0, 97);
	RingCP[1] = CreateDynamicCP(758.6935,13.4365,1001.1639, 1.0, 97);
	for(new i = 0; i != 5; i++) {
		RingInfo[i][rgPlayer][0] = -1;
		RingInfo[i][rgPlayer][1] = -1;
	}
	//==========================================================================

	CreateDynamicMapIcon(1555.1647,-1675.6324,16.1953,30,0); // LSPD
	CreateDynamicMapIcon(-1605.5975,710.3373,13.8672,30,0); // SFPD
	CreateDynamicMapIcon(2337.1853,2459.2725,14.9742,30,0); // LVPD
	CreateDynamicMapIcon(-1972.5879,-1020.2689,32.1719,16,0); // FBI
	CreateDynamicMapIcon(1481.0220,-1772.2487,18.7958,19,0); // Mayor
	CreateDynamicMapIcon(1939.1348,-1114.5219,27.4523,59,0); // Ballas//
	CreateDynamicMapIcon(2756.3184,-1182.7939,69.4034,60,0); // Vagos//
	CreateDynamicMapIcon(2495.4343,-1691.0961,14.7656,62,0); // Grove//
	CreateDynamicMapIcon(2736.6187,-1952.5796,13.5469,61,0); // Rifa//
	CreateDynamicMapIcon(1673.6831,-2122.4465,14.1460,58,0); // Aztec
	CreateDynamicMapIcon(1455.8739,751.0579,11.0234,43,0); // LCN
	CreateDynamicMapIcon(937.1491,1732.5082,8.8516,43,0); // RM
	CreateDynamicMapIcon(2634.7048,1824.2144,11.0161,43,0); // YAKUZA
	CreateDynamicMapIcon(747.3283,-1379.0117,14.1992,36,0); // АШ
	CreateDynamicMapIcon(1569.6614,-1334.6711,16.4844,56,0);//LSn
	CreateDynamicMapIcon(-2521.1753,-624.5951,132.7827,56,0);//SFn
	CreateDynamicMapIcon(2645.2136,1185.2959,10.8203,56,0);//LVn

	CreateDynamicMapIcon(1684.5287,-1343.3507,17.4368,52,0); // bank ls
	CreateDynamicMapIcon(-2351.1323,492.5963,30.8144,52,0); // bank sf
	CreateDynamicMapIcon(2577.4541,1325.8289,10.8203,52,0); // bank lv

	CreateDynamicMapIcon(2166.0955,2165.0505,10.8203,25,0); // casino
	CreateDynamicMapIcon(-2027.7181,-40.9085,38.8046,52,0); // лотарея
	return 1;
}
stock Create3dText() {
	new string[128];

	army_text[0] = CreateDynamic3DTextLabel("Для оголошення надзвичайної ситуації, введіть:\n"YELLOW"/fhelp",-1,-1334.3103,373.8245,7.1937,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	army_text[1] = CreateDynamic3DTextLabel("Для оголошення надзвичайної ситуації, введіть:\n"YELLOW"/fhelp",-1,182.2824,1809.9597,17.6406,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	labrary_text = CreateDynamic3DTextLabel("-",-1,1609.4083,995.6047,1475.6283+1.5,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	gamedm_text = CreateDynamic3DTextLabel("Общий взнос: "ORANGE"$0",-1,822.1746,1.8579,1004.1797+0.7,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	gamerace_text = CreateDynamic3DTextLabel("Общий взнос: "ORANGE"$0",-1,822.0088,4.1138,1004.1797+0.7,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	golod_text = CreateDynamic3DTextLabel("Общий взнос: "ORANGE"$0",-1,822.0084,6.3995,1004.1797+0.7,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"Рыбы На складі: "O"%.1f кг\n\n"W"Для продажи риби - "YELLOW"/sellfish\n"W"Вартість 1кг риби - "ORANGE"$160",fish_sklad);
 	fish_text = CreateDynamic3DTextLabel(string,-1,-396.4070,-413.7928,16.0442,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

 	format(string,sizeof(string),"боєприпасів На складі: "ORANGE"%d",zavodsklad);
 	gun_3dtext[0] = CreateDynamic3DTextLabel(string,-1,2731.9482,-2398.6021,13.6328,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"боєприпасів доступно: "ORANGE"%d",zavodsklad);
 	gun_3dtext[1] = CreateDynamic3DTextLabel(string,-1,2693.2300,-2370.8938,16.0798,35.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	format(string,sizeof(string),"боєприпасів На складі: "ORANGE"%d",zavodsklad);
 	gun_3dtext[2] = CreateDynamic3DTextLabel(string,-1,308.1984,-168.6314,999.5938,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 35);

	format(string,sizeof(string),"Бочок на складі: "ORANGE"%d",oilsklad);
 	oil_3dtext = CreateDynamic3DTextLabel(string,-1,278.9342,1445.9097,10.6189,15.0);

	format(string,sizeof(string),"Дерева на складі: "ORANGE"%d кг",woodsklad);
 	wood_3dtext = CreateDynamic3DTextLabel(string,-1,-535.6497,-1582.4492,10.3110,15.0);

 	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fARMYSF][fMats]);
 	sklad_armysf[0] = CreateDynamic3DTextLabel(string,-1,-1331.0984,407.6659,7.1875,20.0);

 	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fARMYSF][fMats]);
 	sklad_armysf[1] = CreateDynamic3DTextLabel(string,-1,-1607.3578,285.5919,7.1875,45.0);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fARMYSF][fMats]);
 	sklad_armysf[2] = CreateDynamic3DTextLabel(string,-1,308.1984,-168.6314,999.5938,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 31);

 	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fARMYLV][fMats]);
 	sklad_armylv[0] = CreateDynamic3DTextLabel(string,-1,308.1984,-168.6314,999.5938,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, 30);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fLSPD][fMats]);
 	sklad_cops[0] = CreateDynamic3DTextLabel(string,-1,1374.6270,1056.6377,1626.4896,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 40);
	
	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fSFPD][fMats]);
 	sklad_cops[1] = CreateDynamic3DTextLabel(string,-1,1374.6270,1056.6377,1626.4896,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 41);
	
	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fLVPD][fMats]);
 	sklad_cops[2] = CreateDynamic3DTextLabel(string,-1,1374.6270,1056.6377,1626.4896,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 42);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fFBI][fMats]);
 	sklad_cops[3] = CreateDynamic3DTextLabel(string,-1,1468.2729,252.4930,1013.5259,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 43);

	CreateDynamic3DTextLabel("Ефір:"YELLOW" /ether",0xFFFFFFFF,785.3342,-1532.6215,1418.8169-0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Ефір:"YELLOW" /ether",0xFFFFFFFF,779.9375,-1497.9346,1418.8450-0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Вхід:\n"YELLOW" ALT",0xFFFFFFFF,1359.5322-0.3,1065.0143,1626.4896+0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Вихід:\n"YELLOW" ALT",0xFFFFFFFF,1356.3823-0.3,1068.3185,1626.4896+0.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Продажа техніки\n1ед = "ORANGE"$250\n\n"YELLOW" Сигнал (H)",0xFFFFFFFF,2343.6523,-1220.3994,22.5000,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Тюнинг-центр\n"YELLOW" Сигнал (H)",0xFFFFFFFF,647.5013,-1477.1318,14.8053,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Тюнинг-центр\n"YELLOW" Сигнал (H)",0xFFFFFFFF,648.1981,-1487.4845,14.8689,8.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Квестовий персонаж:\n"YELLOW" ALT",0xFFFFFFFF,1981.0763,-2039.7773,13.5708,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовий персонаж:\n"YELLOW" ALT",0xFFFFFFFF,1770.8281,-1887.7174,13.5600,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовий персонаж:\n"YELLOW" ALT",0xFFFFFFFF,1942.2025,-1117.6656,26.4455,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовий персонаж:\n"YELLOW" ALT",0xFFFFFFFF,2747.1582,-1180.8827,69.4016,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовий персонаж:\n"YELLOW" ALT",0xFFFFFFFF,2498.2842,-1687.7340,13.5188,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовий персонаж:\n"YELLOW" ALT",0xFFFFFFFF,1669.6034,-2118.1514,13.5469,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Квестовий персонаж:\n"YELLOW" ALT",0xFFFFFFFF,2735.0513,-1949.6676,13.5394,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Waka_Encore\n\nКвестовий персонаж:\n"YELLOW" ALT",0xFFFFFFFF,2343.9939,-1314.1212,24.0606,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Відправити оголошення:\n"YELLOW" ALT",0xFFFFFFFF,738.0546,-1520.5520,1415.4099,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Місце проведения поєдинків\n[BETA]\n"YELLOW" ALT",-1,2194.1531,-2279.8872,13.5469,25.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
         //лотарея
    CreateDynamic3DTextLabel("Придбати швидку лотерейку"YELLOW" [B-COIN]\n"YELLOW" ALT",0xFFFFFFFF,2316.6206,-9.9449,26.7421,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Придбати швидку лотерейку"YELLOW" [$]\n"YELLOW" ALT",0xFFFFFFFF,2316.6213,-12.6678,26.7421,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    CreateDynamic3DTextLabel("Придбати щогодинний лотерейний квиток\n"YELLOW" ALT",0xFFFFFFFF,2316.6213,-15.3174,26.7421,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
     
	CreateDynamic3DTextLabel("Jackson Young\n\n"YELLOW"Натисніть ALT для отримання завдання або транспорта",0xFFFFFFFF,2508.5442,-1471.2617,24.0337,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); //угон
	CreateDynamic3DTextLabel("Jeremiah Williams\n"YELLOW" Натисніть ALT для отримання транспорта",0xFFFFFFFF,2425.8130,-2472.8911,13.6338,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); //угон
	CreateDynamic3DTextLabel("John Thompson\n"YELLOW" Натисніть ALT для отримання транспорта",0xFFFFFFFF,952.2404,2054.9951,10.8203,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); //угон
	CreateDynamic3DTextLabel("Julian Garcia\n"YELLOW" Натисніть ALT для отримання транспорта",0xFFFFFFFF,-2137.6365,-248.1024,36.5156,7.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1); //угон

	CreateDynamic3DTextLabel("Место загрузки\n Посигнальте (H) щоб загрузитись",CGOLD,253.3007,1396.0299,10.5859,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//лісопилка
	CreateDynamic3DTextLabel("Место загрузки\n Посигнальте (H) щоб загрузитись",CGOLD,2653.8486,-2387.8660,13.6328,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//оружейный завод LOAD
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) щоб розгрузитись",CGOLD,2687.9753,-2480.1912,13.5008,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//оружейный завод UNLOAD
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) щоб розгрузитись",CGOLD,2616.7119,-2226.7627,13.3819,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//порт ЛС
	CreateDynamic3DTextLabel("Место разгрузки\n Посигнальте (H) щоб розгрузитись",CGOLD,-1744.4447,149.4602,3.5496,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//порт СФ

	CreateDynamic3DTextLabel("База данных:"YELLOW" /scan",0xFFFFFFFF,1494.6227,281.6257,1020.4926,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, -1, -1);
	CreateDynamic3DTextLabel("База данных:"YELLOW" /scan",0xFFFFFFFF,1490.9877,278.8188,1020.4926,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	for(new i; i < sizeof(med_heal); i ++) CreateDynamic3DTextLabel("Лягти:"YELLOW" ENTER",0xFFFFFFFF,med_heal[i][0],med_heal[i][1],med_heal[i][2],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
    for(new i; i < sizeof(news_edit); i ++) CreateDynamic3DTextLabel("оголошення:"YELLOW" /edit",0xFFFFFFFF,news_edit[i][0],news_edit[i][1],news_edit[i][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	for(new i; i < sizeof(comp_club); i ++) CreateDynamic3DTextLabel("Почати грати:"YELLOW" ALT",0xFFFFFFFF,comp_club[i][0],comp_club[i][1],comp_club[i][2]+0.9,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	for(new i; i < sizeof(auto_exam); i ++) CreateDynamic3DTextLabel("Екзамен:"YELLOW" ALT",0xFFFFFFFF,auto_exam[i][0],auto_exam[i][1],auto_exam[i][2]+0.3,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Место для разгрузки боєприпасів",CGOLD,310.7923,1801.0048,17.6406, 25.0);

	CreateDynamic3DTextLabel("Сделать предложение: "W"/propose",CGOLD,-1988.0447,1117.9020,54.4741, 25.0);

	med_turn_text[0] = CreateDynamic3DTextLabel("Найкращі працівники:",-1,2185.0330,576.8439,1080.4542+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 20, -1);
	med_turn_text[1] = CreateDynamic3DTextLabel("Найкращі працівники:",-1,2185.0330,576.8439,1080.4542+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 21, -1);
	med_turn_text[2] = CreateDynamic3DTextLabel("Найкращі працівники:",-1,2185.0330,576.8439,1080.4542+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 22, -1);
	med_turn_text[3] = CreateDynamic3DTextLabel("Зона зараження:",-1,2188.9634,576.8441,1080.4542+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	advert_turn_text[0] = CreateDynamic3DTextLabel("Найкращі працівники:",-1,740.5614,-1520.5980,1415.4099+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 10, -1);
	advert_turn_text[1] = CreateDynamic3DTextLabel("Найкращі працівники:",-1,740.5614,-1520.5980,1415.4099+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 11, -1);
	advert_turn_text[2] = CreateDynamic3DTextLabel("Найкращі працівники:",-1,740.5614,-1520.5980,1415.4099+1.5, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 12, -1);

	CreateDynamic3DTextLabel(""YELLOW"Для арешту порушника, використовуйте: "NO"/arrest [id]",-1,1560.2266,-1694.2327,5.8970, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//lspd
	CreateDynamic3DTextLabel(""YELLOW"Для арешту порушника, використовуйте: "NO"/arrest [id]",-1,-1590.0127,708.3984,-5.2422, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//sfpd
	CreateDynamic3DTextLabel(""YELLOW"Для арешту порушника, використовуйте: "NO"/arrest [id]",-1,2293.5652,2459.6794,10.8203, 10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);//sfpd

	CreateDynamic3DTextLabel("Виїзд із гаража: "GREEN"H",-1, 1050.0936,-1868.7532,894.0478,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Виїзд із гаража: "GREEN"H",-1, 1123.6130,-1849.0645,894.0478,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Виїзд із гаража: "GREEN"H",-1, 1053.8595,-1785.5875,894.0478,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Виїзд із гаража: "GREEN"H",-1, 1108.8413,-1783.3357,894.0478,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Виїзд із гаража: "GREEN"H",-1, 1646.7213,738.0809,590.4441,17.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	for(new i;i < sizeof(tuning_enter);i ++) {
		CreateDynamic3DTextLabel("Для виїзду в тюнінг центр: "GREEN"H",-1,tuning_enter[i][0],tuning_enter[i][1],tuning_enter[i][2],20.0);
		CreateDynamicMapIcon(tuning_enter[i][0], tuning_enter[i][1], tuning_enter[i][2], 27, 0);
	}
	CreateDynamic3DTextLabel("Для виїзду: "GREEN"H",-1,1909.0234,73.2966,1139.4918,20.0);
	CreateDynamic3DTextLabel("Покраска: "GREEN"H",-1,1905.1360,59.3574,1139.4918,20.0);
	CreateDynamic3DTextLabel("Тюнінг: "GREEN"H",-1,1913.2271,59.1919,1139.4918,20.0);

	CreateDynamic3DTextLabel("Для виходу натисніть:\n"GREEN"ENTER",-1, 1400.8309,-1205.0583,130.2086+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	CreateDynamic3DTextLabel("Гра 1x1:\n"GREEN"/dice",-1, 2080.7615, 1710.6829, 1113.5668+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Гра 1x1:\n"GREEN"/dice",-1, 2073.6392, 1710.6829, 1113.5668+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
	CreateDynamic3DTextLabel("Гра 1x1:\n"GREEN"/dice",-1, 2067.1243, 1710.6829, 1113.5668+0.4,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

	new moved = 0;
	for(moved = 0; moved < MAX_OBJECT_MOVED; moved++) {
		moved_info[moved][moved_id] = CreateDynamicObject(moved_info[moved][moved_modelid],moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ],moved_info[moved][movedPosRotationX],moved_info[moved][movedPosRotationY],moved_info[moved][movedPosRotationZ],moved_info[moved][moved_vw]);
		switch(moved) {
			case 0,5..16,20,23: CreateDynamic3DTextLabel("{f6f6d9}Взаємодія: "YELLOW"'H'", -1, moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+0.8, 8.0);
			case 1,2,3,17,18,19,22,24,29,33..36,38,44..49: CreateDynamic3DTextLabel("{f6f6d9}Взаємодія: "YELLOW"'ALT'", -1, moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+1.5, 8.0);
			case 4,21,25..28,30..32,37,39..43,53: CreateDynamic3DTextLabel(""YELLOW"'H'{f6f6d9} якщо в машині\n"YELLOW"'ALT'{f6f6d9} якщо пішки", -1, moved_info[moved][movedPosX],moved_info[moved][movedPosY],moved_info[moved][movedPosZ]+0.8, 8.0);
		}
	}
    SetDynamicObjectMaterial(moved_info[3][moved_id], 0, -1, "none", "none", 0xFFFFFFFF);
	SetDynamicObjectMaterial(moved_info[4][moved_id], 2, 2990, "arsex", "blackdirt", 0x00000000);
	SetDynamicObjectMaterial(moved_info[23][moved_id], 0, 12980, "sw_block10", "sw_woodslats2", 0);
	SetDynamicObjectMaterial(moved_info[24][moved_id], 0, 1730, "cj_furniture", "CJ_WOOD5", 0x00000000);
	SetDynamicObjectMaterial(moved_info[24][moved_id], 0, 1649, "wglass", "carshowwin2", 0x00000000);
	SetDynamicObjectMaterial(moved_info[36][moved_id], 0, -1, "none", "none", 0xFFFFFFFF);
	SetDynamicObjectMaterial(moved_info[38][moved_id], 0, 14789, "ab_sfgymmain", "gun_ceiling2_128", 0);
	SetDynamicObjectMaterial(moved_info[50][moved_id], 2, 2990, "arsex", "blackdirt", 0x00000000);
	SetDynamicObjectMaterial(moved_info[51][moved_id], 0, 10101, "2notherbuildsfe", "gz_vicdoor1", 0x00000000);
	SetDynamicObjectMaterial(moved_info[52][moved_id], 0, 10101, "2notherbuildsfe", "gz_vicdoor1", 0x00000000);

	for(new i; i < 18; i++) {
		alcatraz[i][alc_id] = CreateDynamicObject(19302,alcatraz[i][alc_posX],alcatraz[i][alc_posY],alcatraz[i][alc_posZ],alcatraz[i][alc_posRX],alcatraz[i][alc_posRY],alcatraz[i][alc_posRZ], -1, -1, -1, 200.00);
		SetDynamicObjectMaterial(alcatraz[i][alc_id], 0, 14407, "carter_block", "mp_carter_bars", 0x00000000);
	}

	gMenu[0] = CreateDynamic3DTextLabel("-", 0x339966AA, 1758.4182,728.0562,1071.0692, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Ballas
	gMenu[1] = CreateDynamic3DTextLabel("-", 0x339966AA, 2707.5825,1761.0266,1215.7363, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Vagos
	gMenu[2] = CreateDynamic3DTextLabel("-", 0x339966AA, 1951.9347,1342.9095,966.4043, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Grove
	gMenu[3] = CreateDynamic3DTextLabel("-", 0x339966AA, 1559.0104,889.8791,922.4379, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Aztec
	gMenu[4] = CreateDynamic3DTextLabel("-", 0x339966AA, 1553.2108,707.3284,915.6003, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Rifa

	gHealth[0] = CreateDynamic3DTextLabel("-", 0x339966AA, 1779.6661,715.8765,1072.5573+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Ballas
	gHealth[1] = CreateDynamic3DTextLabel("-", 0x339966AA, 2687.0530,1750.3890,1215.7085+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Vagos
	gHealth[2] = CreateDynamic3DTextLabel("-", 0x339966AA, 1940.9451,1324.0303,966.4050+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Grove
	gHealth[3] = CreateDynamic3DTextLabel("-", 0x339966AA, 1552.7271,921.2464,924.0771+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Aztec
	gHealth[4] = CreateDynamic3DTextLabel("-", 0x339966AA, 1570.2238,723.8939,915.6011+0.5, 15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);//Rifa

	mMenu[0] = CreateDynamic3DTextLabel("-",0x339966AA, -1793.8373,-671.8163,991.4554,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 49, -1);
	mMenu[1] = CreateDynamic3DTextLabel("-",0x339966AA, -1793.8373,-671.8163,991.4554,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 50, -1);
	mMenu[2] = CreateDynamic3DTextLabel("-",0x339966AA, -1793.8373,-671.8163,991.4554,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 51, -1);

	CreateDynamic3DTextLabel(""W"Натисніть "O"'ALT'",-1,2346.9180,-1245.6836,22.5000,7.0);
	CreateDynamic3DTextLabel(""W"Натисніть "O"'ALT'",-1,2324.0752,-1273.6428,22.5000,7.0);
	CreateDynamic3DTextLabel(""W"Натисніть "O"'ALT'",-1,2347.5073,-1263.8671,22.5095,7.0);
	CreateDynamic3DTextLabel(""W"Натисніть "O"'ALT'",-1,2327.8286,-1255.9642,22.5000,7.0);

	CreateDynamic3DTextLabel("{f6f6d9}Покупка боєприпасів\n "O"'ALT'",-1,1050.3049,2313.1973,10.6818,10.0);
	CreateDynamic3DTextLabel("{f6f6d9}Покупка наркотиків\n "O"'ALT'",-1,324.3706,1120.0488,1083.8828,15.0);

    black_market = CreateDynamic3DTextLabel("-", 0x339966AA, 2333.5620,-1218.3779,22.5000, 10.0);

	SFa = GangZoneCreate(-1544.892, 270.5747, -1232.015, 558.5571);
	Army = GangZoneCreate(-49.979476, 1695.982177, 414.020507, 2175.982177);

	load_heal();
	load_advert();
	return 1;
}
stock CreateTexdraw() {
	td_game[0] = TextDrawCreate(629.555114, 288.220062, "usebox");
	TextDrawLetterSize(td_game[0], 0.000000, 3.759377);
	TextDrawTextSize(td_game[0], 518.444030, 0.000000);
	TextDrawAlignment(td_game[0], 1);
	TextDrawColor(td_game[0], 0);
	TextDrawUseBox(td_game[0], true);
	TextDrawBoxColor(td_game[0], -112);
	TextDrawSetShadow(td_game[0], 0);
	TextDrawSetOutline(td_game[0], 0);
	TextDrawFont(td_game[0], 0);

	td_game[1] = TextDrawCreate(628.221618, 289.713439, "usebox");
	TextDrawLetterSize(td_game[1], 0.000000, 3.403820);
	TextDrawTextSize(td_game[1], 519.777282, 0.000000);
	TextDrawAlignment(td_game[1], 1);
	TextDrawColor(td_game[1], 0);
	TextDrawUseBox(td_game[1], true);
	TextDrawBoxColor(td_game[1], -668447489);
	TextDrawSetShadow(td_game[1], 0);
	TextDrawSetOutline(td_game[1], -156);
	TextDrawFont(td_game[1], 0);

	td_game[2] = TextDrawCreate(525.778076, 291.697692, "time:");
	TextDrawLetterSize(td_game[2], 0.280221, 1.326221);
	TextDrawAlignment(td_game[2], 1);
	TextDrawColor(td_game[2], -1);
	TextDrawSetShadow(td_game[2], 1);
	TextDrawSetOutline(td_game[2], 0);
	TextDrawBackgroundColor(td_game[2], 255);
	TextDrawFont(td_game[2], 2);
	TextDrawSetProportional(td_game[2], 1);

	td_game[3] = TextDrawCreate(526.666931, 304.639923, "bank:");
	TextDrawLetterSize(td_game[3], 0.280221, 1.326221);
	TextDrawAlignment(td_game[3], 1);
	TextDrawColor(td_game[3], -1);
	TextDrawSetShadow(td_game[3], 1);
	TextDrawSetOutline(td_game[3], 0);
	TextDrawBackgroundColor(td_game[3], 255);
	TextDrawFont(td_game[3], 2);
	TextDrawSetProportional(td_game[3], 1);

	td_game[4] = TextDrawCreate(567.555969, 292.195465, "10:00");
	TextDrawLetterSize(td_game[4], 0.280221, 1.326221);
	TextDrawAlignment(td_game[4], 1);
	TextDrawColor(td_game[4], -1);
	TextDrawSetShadow(td_game[4], 1);
	TextDrawSetOutline(td_game[4], 0);
	TextDrawBackgroundColor(td_game[4], 255);
	TextDrawFont(td_game[4], 2);
	TextDrawSetProportional(td_game[4], 1);

	td_game[5] = TextDrawCreate(567.111572, 305.137664, "250000$");
	TextDrawLetterSize(td_game[5], 0.280221, 1.326221);
	TextDrawAlignment(td_game[5], 1);
	TextDrawColor(td_game[5], -1);
	TextDrawSetShadow(td_game[5], 1);
	TextDrawSetOutline(td_game[5], 0);
	TextDrawBackgroundColor(td_game[5], 255);
	TextDrawFont(td_game[5], 2);
	TextDrawSetProportional(td_game[5], 1);

	buy_skins[0] = TextDrawCreate(258.666656, 423.608856, "LD_SPAC:white");
	TextDrawLetterSize(buy_skins[0], 0.000000, 0.000000);
	TextDrawTextSize(buy_skins[0], 40.444458, 14.933320);
	TextDrawAlignment(buy_skins[0], 1);
	TextDrawColor(buy_skins[0], -668447489);
	TextDrawSetShadow(buy_skins[0], 0);
	TextDrawSetOutline(buy_skins[0], 0);
	TextDrawFont(buy_skins[0], 4);
	TextDrawSetSelectable(buy_skins[0], true);

	buy_skins[1] = TextDrawCreate(322.333404, 423.115509, "LD_SPAC:white");
	TextDrawLetterSize(buy_skins[1], 0.000000, 0.000000);
	TextDrawTextSize(buy_skins[1], 40.444458, 14.933320);
	TextDrawAlignment(buy_skins[1], 1);
	TextDrawColor(buy_skins[1], -668447489);
	TextDrawSetShadow(buy_skins[1], 0);
	TextDrawSetOutline(buy_skins[1], 0);
	TextDrawFont(buy_skins[1], 4);
	TextDrawSetSelectable(buy_skins[1], true);

	buy_skins[2] = TextDrawCreate(268.666656, 424.115631, "buy");
	TextDrawLetterSize(buy_skins[2], 0.217999, 1.316264);
	TextDrawAlignment(buy_skins[2], 1);
	TextDrawColor(buy_skins[2], -1);
	TextDrawSetShadow(buy_skins[2], 1);
	TextDrawSetOutline(buy_skins[2], 0);
	TextDrawBackgroundColor(buy_skins[2], 255);
	TextDrawFont(buy_skins[2], 2);
	TextDrawSetProportional(buy_skins[2], 1);

	buy_skins[3] = TextDrawCreate(332.777709, 424.120086, "exit");
	TextDrawLetterSize(buy_skins[3], 0.217999, 1.316264);
	TextDrawAlignment(buy_skins[3], 1);
	TextDrawColor(buy_skins[3], -1);
	TextDrawSetShadow(buy_skins[3], 1);
	TextDrawSetOutline(buy_skins[3], 0);
	TextDrawBackgroundColor(buy_skins[3], 255);
	TextDrawFont(buy_skins[3], 2);
	TextDrawSetProportional(buy_skins[3], 1);

	buy_skins[4] = TextDrawCreate(364.222229, 406.691101, "usebox");
	TextDrawLetterSize(buy_skins[4], 0.000000, 1.066050);
	TextDrawTextSize(buy_skins[4], 256.666656, 0.000000);
	TextDrawAlignment(buy_skins[4], 1);
	TextDrawColor(buy_skins[4], 0);
	TextDrawUseBox(buy_skins[4], true);
	TextDrawBoxColor(buy_skins[4], -668447594);
	TextDrawSetShadow(buy_skins[4], 0);
	TextDrawSetOutline(buy_skins[4], 0);
	TextDrawFont(buy_skins[4], 0);

	buy_skins[5] = TextDrawCreate(361.333221, 398.720062, "LD_BEAT:chit");
	TextDrawLetterSize(buy_skins[5], 0.009777, 0.199110);
	TextDrawTextSize(buy_skins[5], 39.555564, 45.297744);
	TextDrawAlignment(buy_skins[5], 1);
	TextDrawColor(buy_skins[5], -668447489);
	TextDrawSetShadow(buy_skins[5], 0);
	TextDrawSetOutline(buy_skins[5], 0);
	TextDrawFont(buy_skins[5], 4);
	TextDrawSetSelectable(buy_skins[5], true);
	TextDrawSetPreviewModel(buy_skins[5], 19134);
	TextDrawSetPreviewRot(buy_skins[5], 100.000000, -100.000000, 0.000000, 1.000000);

	buy_skins[6] = TextDrawCreate(220.555435, 398.724517, "LD_BEAT:chit");
	TextDrawLetterSize(buy_skins[6], 0.009777, 0.199111);
	TextDrawTextSize(buy_skins[6], 39.555564, 45.297744);
	TextDrawAlignment(buy_skins[6], 1);
	TextDrawColor(buy_skins[6], -668447489);
	TextDrawSetShadow(buy_skins[6], 0);
	TextDrawSetOutline(buy_skins[6], 0);
	TextDrawFont(buy_skins[6], 4);
	TextDrawSetSelectable(buy_skins[6], true);
	TextDrawSetPreviewModel(buy_skins[6], 19134);
	TextDrawSetPreviewRot(buy_skins[6], 100.000000, -100.000000, 0.000000, 1.000000);

	buy_skins[7] = TextDrawCreate(376.889007, 409.191223, ">");
	TextDrawLetterSize(buy_skins[7], 0.494888, 2.754842);
	TextDrawAlignment(buy_skins[7], 1);
	TextDrawColor(buy_skins[7], -1);
	TextDrawSetShadow(buy_skins[7], 1);
	TextDrawSetOutline(buy_skins[7], 0);
	TextDrawBackgroundColor(buy_skins[7], 255);
	TextDrawFont(buy_skins[7], 2);
	TextDrawSetProportional(buy_skins[7], 1);

	buy_skins[8] = TextDrawCreate(233.000167, 408.697814, "<");
	TextDrawLetterSize(buy_skins[8], 0.494888, 2.754842);
	TextDrawAlignment(buy_skins[8], 1);
	TextDrawColor(buy_skins[8], -1);
	TextDrawSetShadow(buy_skins[8], 1);
	TextDrawSetOutline(buy_skins[8], 0);
	TextDrawBackgroundColor(buy_skins[8], 255);
	TextDrawFont(buy_skins[8], 2);
	TextDrawSetProportional(buy_skins[8], 1);


	skill_td[0] = TextDrawCreate(570.444763, 349.944427, "usebox");
	TextDrawLetterSize(skill_td[0], 0.000000, 3.724817);
	TextDrawTextSize(skill_td[0], 454.444458, 0.000000);
	TextDrawAlignment(skill_td[0], 1);
	TextDrawColor(skill_td[0], 0);
	TextDrawUseBox(skill_td[0], true);
	TextDrawBoxColor(skill_td[0], 471604424);
	TextDrawSetShadow(skill_td[0], 0);
	TextDrawSetOutline(skill_td[0], 0);
	TextDrawFont(skill_td[0], 0);

	skill_td[1] = TextDrawCreate(570.555847, 349.948852, "usebox");
	TextDrawLetterSize(skill_td[1], 0.000000, 0.880373);
	TextDrawTextSize(skill_td[1], 454.444458, 0.000000);
	TextDrawAlignment(skill_td[1], 1);
	TextDrawColor(skill_td[1], 0);
	TextDrawUseBox(skill_td[1], true);
	TextDrawBoxColor(skill_td[1], -668447489);
	TextDrawSetShadow(skill_td[1], 0);
	TextDrawSetOutline(skill_td[1], 0);
	TextDrawFont(skill_td[1], 0);

	skill_td[2] = TextDrawCreate(476.110992, 348.448944, "skill information");
	TextDrawLetterSize(skill_td[2], 0.194444, 1.142044);
	TextDrawAlignment(skill_td[2], 1);
	TextDrawColor(skill_td[2], 471604479);
	TextDrawSetShadow(skill_td[2], 0);
	TextDrawSetOutline(skill_td[2], 0);
	TextDrawBackgroundColor(skill_td[2], 51);
	TextDrawFont(skill_td[2], 2);
	TextDrawSetProportional(skill_td[2], 1);

	skill_td[3] = TextDrawCreate(570.666870, 386.291137, "usebox");
	TextDrawLetterSize(skill_td[3], 0.000000, -0.319626);
	TextDrawTextSize(skill_td[3], 454.444396, 0.000000);
	TextDrawAlignment(skill_td[3], 1);
	TextDrawColor(skill_td[3], 0);
	TextDrawUseBox(skill_td[3], true);
	TextDrawBoxColor(skill_td[3], -668447489);
	TextDrawSetShadow(skill_td[3], 0);
	TextDrawSetOutline(skill_td[3], 0);
	TextDrawFont(skill_td[3], 0);

	LoadTextures[0] = TextDrawCreate(641.555297, 1.499999, "usebox");
	TextDrawLetterSize(LoadTextures[0], 0.000000, 49.405799);
	TextDrawTextSize(LoadTextures[0], -2.000000, 0.000000);
	TextDrawAlignment(LoadTextures[0], 1);
	TextDrawColor(LoadTextures[0], 0);
	TextDrawUseBox(LoadTextures[0], true);
	TextDrawBoxColor(LoadTextures[0], 255);
	TextDrawSetShadow(LoadTextures[0], 0);
	TextDrawSetOutline(LoadTextures[0], 0);
	TextDrawFont(LoadTextures[0], 2);

    LoadTextures[1] = TextDrawCreate(213.777755, 179.200042, "samp ukraine");
	TextDrawLetterSize(LoadTextures[1], 0.472220, 2.466133);
	TextDrawAlignment(LoadTextures[1], 1);
	TextDrawColor(LoadTextures[1], COLOR_BLUE);
	TextDrawSetShadow(LoadTextures[1], 1);
	TextDrawSetOutline(LoadTextures[1], 0);
	TextDrawBackgroundColor(LoadTextures[1], COLOR_BLACK);
	TextDrawFont(LoadTextures[1], 2);
	TextDrawSetProportional(LoadTextures[1], 1);
	
	LoadTextures[2] = TextDrawCreate(212.999877, 196.128921, "texture loading");
	TextDrawLetterSize(LoadTextures[2], 0.399776, 1.988263);
	TextDrawAlignment(LoadTextures[2], 1);
	TextDrawColor(LoadTextures[2], COLOR_YELLOW);
	TextDrawSetShadow(LoadTextures[2], 1);
	TextDrawSetOutline(LoadTextures[2], 0);
	TextDrawBackgroundColor(LoadTextures[2], COLOR_BLACK);
	TextDrawFont(LoadTextures[2], 2);
	TextDrawSetProportional(LoadTextures[2], 1);

	LoadTextures[3] = TextDrawCreate(396.666687, 220.024444, "usebox"); //Полоска загрузки текстур 
	TextDrawLetterSize(LoadTextures[3], 0.000000, 0.402345);
	TextDrawTextSize(LoadTextures[3], 210.000000, 0.000000);
	TextDrawAlignment(LoadTextures[3], 1);
	TextDrawColor(LoadTextures[3], COLOR_YELLOW);
	TextDrawUseBox(LoadTextures[3], true);
	TextDrawBoxColor(LoadTextures[3], COLOR_YELLOW);
	TextDrawSetShadow(LoadTextures[3], 0);
	TextDrawSetOutline(LoadTextures[3], 0);
	TextDrawFont(LoadTextures[3], 0);

	AnimDraw = TextDrawCreate(401.00, 419.00, "~w~Press ~g~ENTER~w~ to stop animation");
	TextDrawBackgroundColor(AnimDraw, 0x000000FF);
	TextDrawFont(AnimDraw, 2);
	TextDrawSetOutline(AnimDraw, 1);
	TextDrawLetterSize(AnimDraw, 0.300000, 1.250000);
	TextDrawColor(AnimDraw, 0x0095B6FF);
	TextDrawSetProportional(AnimDraw, 1);

	HungerFon[0] = TextDrawCreate(547.500000, 58.000000, "_");TextDrawBackgroundColor(HungerFon[0], 255);TextDrawFont(HungerFon[0], 1);TextDrawLetterSize(HungerFon[0], 0.500000, 0.399999);
	TextDrawColor(HungerFon[0], -1);TextDrawSetOutline(HungerFon[0], 0);TextDrawSetProportional(HungerFon[0], 1);TextDrawSetShadow(HungerFon[0], 1);
	TextDrawUseBox(HungerFon[0], 1);TextDrawBoxColor(HungerFon[0], 255);TextDrawTextSize(HungerFon[0], 606.000000, 40.000000);TextDrawSetSelectable(HungerFon[0], 0);

	HungerFon[1] = TextDrawCreate(549.500000, 60.000000, "_");TextDrawBackgroundColor(HungerFon[1], 255);TextDrawFont(HungerFon[1], 1);
	TextDrawLetterSize(HungerFon[1], 0.490000, -0.000000);TextDrawColor(HungerFon[1], -1);TextDrawSetOutline(HungerFon[1], 0);TextDrawSetProportional(HungerFon[1], 1);
	TextDrawSetShadow(HungerFon[1], 1);TextDrawUseBox(HungerFon[1], 1);TextDrawBoxColor(HungerFon[1], 1787344480);TextDrawTextSize(HungerFon[1], 604.000000, 40.000000);TextDrawSetSelectable(HungerFon[1], 0);

	YandNsysTD[0] = TextDrawCreate(356.507568, 318.333465, "usebox");
	TextDrawLetterSize(YandNsysTD[0], -0.023426, 4.082155);
	TextDrawTextSize(YandNsysTD[0], 277.000000, 0.000000);
	TextDrawAlignment(YandNsysTD[0], 1);
	TextDrawColor(YandNsysTD[0], 0);
	TextDrawUseBox(YandNsysTD[0], true);
	TextDrawBoxColor(YandNsysTD[0], 102);
	TextDrawSetShadow(YandNsysTD[0], 0);
	TextDrawSetOutline(YandNsysTD[0], 0);
	TextDrawFont(YandNsysTD[0], 0);

	YandNsysTD[1] = TextDrawCreate(285.415283, 334.916687, "LD_SPAC:white");
	TextDrawLetterSize(YandNsysTD[1], 0.000000, 0.000000);
	TextDrawTextSize(YandNsysTD[1], 63.000000, 0.583343);
	TextDrawAlignment(YandNsysTD[1], 1);
	TextDrawColor(YandNsysTD[1], -1061109505);
	TextDrawSetShadow(YandNsysTD[1], 0);
	TextDrawSetOutline(YandNsysTD[1], 0);
	TextDrawFont(YandNsysTD[1], 4);

	YandNsysTD[2] = TextDrawCreate(285.415283, 346.999816, "LD_SPAC:white");
	TextDrawLetterSize(YandNsysTD[2], 0.000000, 0.000000);
	TextDrawTextSize(YandNsysTD[2], 63.000000, 0.583343);
	TextDrawAlignment(YandNsysTD[2], 1);
	TextDrawColor(YandNsysTD[2], -1061109505);
	TextDrawSetShadow(YandNsysTD[2], 0);
	TextDrawSetOutline(YandNsysTD[2], 0);
	TextDrawFont(YandNsysTD[2], 4);

	Bizwar[0] = TextDrawCreate(95.00000, 290.00000, "__");
    TextDrawBackgroundColor(Bizwar[0], 255);
    TextDrawAlignment(Bizwar[0], 2);
    TextDrawLetterSize(Bizwar[0], 0.330000, 1.000000);
    TextDrawFont(Bizwar[0],2);
    TextDrawColor(Bizwar[0], CGREEN);
    TextDrawSetOutline(Bizwar[0],1);
    TextDrawSetProportional(Bizwar[0],1);
    TextDrawSetShadow(Bizwar[0],1);
    //
    Bizwar[2] = TextDrawCreate(95.00000, 300.00000, "__");
    TextDrawBackgroundColor(Bizwar[2], 255);
    TextDrawAlignment(Bizwar[2], 2);
    TextDrawLetterSize(Bizwar[2], 0.330000, 1.000000);
    TextDrawFont(Bizwar[2],2);
    TextDrawColor(Bizwar[2], CGREEN);
    TextDrawSetOutline(Bizwar[2],1);
    TextDrawSetProportional(Bizwar[2],1);
    TextDrawSetShadow(Bizwar[2],1);
    //
    Bizwar[1] = TextDrawCreate(95.00000, 310.00000, "__");
    TextDrawBackgroundColor(Bizwar[1], 255);
    TextDrawAlignment(Bizwar[1], 2);
    TextDrawLetterSize(Bizwar[1], 0.330000, 1.000000);
    TextDrawFont(Bizwar[1],2);
    TextDrawColor(Bizwar[1], CGREEN);
    TextDrawSetOutline(Bizwar[1],1);
    TextDrawSetProportional(Bizwar[1],1);
    TextDrawSetShadow(Bizwar[1],1);

	BG[1] = TextDrawCreate(0, 0, "LD_OTB:bckgrnd");
	TextDrawFont(BG[1], 4);
	TextDrawColor(BG[1],0xFFFFFFFF);
	TextDrawTextSize(BG[1],640,200);
	BG[0] = TextDrawCreate(0, 0, "LD_OTB:trees");
	TextDrawFont(BG[0], 4);
	TextDrawColor(BG[0],0xFFFFFFFF);
	TextDrawTextSize(BG[0],640,480);
	Start2 = TextDrawCreate(-170, 145, "LD_OTB:pole2");
	TextDrawFont(Start2, 4);
	TextDrawColor(Start2,0xFFFFFFFF);
	TextDrawTextSize(Start2,256,200);
	Finish2 = TextDrawCreate(365, 145, "LD_OTB:pole2");
 	TextDrawFont(Finish2, 4);
  	TextDrawColor(Finish2,0xFFFFFFFF);
   	TextDrawTextSize(Finish2,256,200);
	new string[24];
	for(new po = 0;po < 4;po++) {
    	Horse[po] = TextDrawCreate(0, 200+50*po, "LD_OTB:hrs8");
		HorseInfo(Horse[po]);
		HorsePosX[po] = 0;
		format(string,30,"LD_OTB2:Ric%d",po+1);
		HorseNum[po] = TextDrawCreate(15, 204+50*po,string);
    	HorseNumInfo(HorseNum[po]);
	}
   	Start = TextDrawCreate(-170, 338, "LD_OTB:pole2");
    TextDrawFont(Start, 4);
    TextDrawColor(Start,0xFFFFFFFF);
    TextDrawTextSize(Start,256,200);
   	Finish = TextDrawCreate(365, 338, "LD_OTB:pole2");
   	TextDrawFont(Finish, 4);
    TextDrawColor(Finish,0xFFFFFFFF);
    TextDrawTextSize(Finish,256,200);

	new Float:dice_area_pos[4][3]={{2059.381591, 1716.994750, 1113.264038},{2059.381591, 1704.143188, 1113.264038},{2062.664794, 1716.994750, 1113.264038},{2062.664794, 1704.143188, 1113.264038}};
	Casino_TD[Casino_TD_Box] = TextDrawCreate(612.014221, 161.916656, "usebox");
	TextDrawLetterSize(Casino_TD[Casino_TD_Box], 0.000000, 26.097074);
	TextDrawTextSize(Casino_TD[Casino_TD_Box], 457.150817, 0.000000);
	TextDrawAlignment(Casino_TD[Casino_TD_Box], 1);
	TextDrawColor(Casino_TD[Casino_TD_Box], 0);
	TextDrawUseBox(Casino_TD[Casino_TD_Box], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Box], 877622186);
	TextDrawSetShadow(Casino_TD[Casino_TD_Box], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Box], 0);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Box], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Box], 0);
	new casino_formatted_string[500];
	for(new c = 0; c < MAX_TABLES_DICE; c++) {
		format(casino_formatted_string,500,CASINO_TEXT_STRING, c+1, "-", "-", "-", "-", "-", "-", 0, 0, "Гра не начата");
		InfoDice[c][dice_text] = CreateDynamic3DTextLabel(casino_formatted_string,-1,dice_area_pos[c][0],dice_area_pos[c][1],dice_area_pos[c][2]+1.8,2.0);
		InfoDice[c][dice_area] = CreateDynamicSphere(dice_area_pos[c][0],dice_area_pos[c][1],dice_area_pos[c][2],2.0);
		format(casino_formatted_string,144,"Table %d", c+1);
		Casino_TD[Casino_TD_TableName][c] = TextDrawCreate(534.582946, 162.750000, casino_formatted_string);
		TextDrawLetterSize(Casino_TD[Casino_TD_TableName][c], 0.449999, 1.600000);
		TextDrawTextSize(Casino_TD[Casino_TD_TableName][c], -213.645767, 146.999969);
		TextDrawAlignment(Casino_TD[Casino_TD_TableName][c], 2);
		TextDrawColor(Casino_TD[Casino_TD_TableName][c], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_TableName][c], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_TableName][c], -255913558);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableName][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableName][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableName][c], 255);
		TextDrawFont(Casino_TD[Casino_TD_TableName][c], 0);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableName][c], 1);
		///
		Casino_TD[Casino_TD_TableNicks][c] = TextDrawCreate(480.234466, 190.749984, "-~n~-~n~-~n~-~n~-");
		TextDrawLetterSize(Casino_TD[Casino_TD_TableNicks][c], 0.317877, 1.862500);
		TextDrawAlignment(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawColor(Casino_TD[Casino_TD_TableNicks][c], -1);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableNicks][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableNicks][c], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_TableNicks][c], 1);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableNicks][c], 1);

		Casino_TD[Casino_TD_TableScore][c] = TextDrawCreate(593.616333, 191.916687, "0~n~0~n~0~n~0~n~0");
		TextDrawLetterSize(Casino_TD[Casino_TD_TableScore][c], 0.444846, 1.815833);
		TextDrawTextSize(Casino_TD[Casino_TD_TableScore][c], 36.544651, 20.416666);
		TextDrawAlignment(Casino_TD[Casino_TD_TableScore][c], 2);
		TextDrawColor(Casino_TD[Casino_TD_TableScore][c], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_TableScore][c], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_TableScore][c], 1149760170);
		TextDrawSetShadow(Casino_TD[Casino_TD_TableScore][c], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_TableScore][c], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_TableScore][c], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_TableScore][c], 3);
		TextDrawSetProportional(Casino_TD[Casino_TD_TableScore][c], 1);

		InfoDice[c][dice_gamer][0] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][1] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][2] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][3] = INVALID_PLAYER_ID;
		InfoDice[c][dice_gamer][4] = INVALID_PLAYER_ID;
		InfoDice[c][dice_score][0] = 0;
		InfoDice[c][dice_score][1] = 0;
		InfoDice[c][dice_score][2] = 0;
		InfoDice[c][dice_score][3] = 0;
		InfoDice[c][dice_score][4] = 0;
		InfoDice[c][dice_stavka] = 0;
		InfoDice[c][dice_bank] = 0;
		InfoDice[c][dice_game_start] = false;
		InfoDice[c][dice_crup] = INVALID_PLAYER_ID;
		UpdateTextCasino(c);
	}

	Casino_TD[Casino_TD_Enum] = TextDrawCreate(464.304626, 192.500000, "1~n~2~n~3~n~4~n~5");
	TextDrawLetterSize(Casino_TD[Casino_TD_Enum], 0.449531, 1.833333);
	TextDrawAlignment(Casino_TD[Casino_TD_Enum], 1);
	TextDrawColor(Casino_TD[Casino_TD_Enum], -1);
	TextDrawSetShadow(Casino_TD[Casino_TD_Enum], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Enum], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Enum], 255);
	TextDrawFont(Casino_TD[Casino_TD_Enum], 3);
	TextDrawSetProportional(Casino_TD[Casino_TD_Enum], 1);

	Casino_TD[Casino_TD_Set_Bet] = TextDrawCreate(534.583007, 329.583190, "SET_BET");
	TextDrawLetterSize(Casino_TD[Casino_TD_Set_Bet], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Set_Bet], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Set_Bet], 2);
	TextDrawColor(Casino_TD[Casino_TD_Set_Bet], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Set_Bet], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Set_Bet], 933650346);
	TextDrawSetShadow(Casino_TD[Casino_TD_Set_Bet], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Set_Bet], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Set_Bet], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Set_Bet], true);

	Casino_TD[Casino_TD_Dice] = TextDrawCreate(534.583007, 352.749877, "DICE");
	TextDrawLetterSize(Casino_TD[Casino_TD_Dice], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Dice], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Dice], 2);
	TextDrawColor(Casino_TD[Casino_TD_Dice], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Dice], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Dice], 933650346);
	TextDrawSetShadow(Casino_TD[Casino_TD_Dice], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Dice], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Dice], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Dice], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Dice], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Dice], true);

	Casino_TD[Casino_TD_Exit] = TextDrawCreate(534.583007, 377.083251, "EXIT");
	TextDrawLetterSize(Casino_TD[Casino_TD_Exit], 0.449999, 1.600000);
	TextDrawTextSize(Casino_TD[Casino_TD_Exit], 16.600000, 148.749862);
	TextDrawAlignment(Casino_TD[Casino_TD_Exit], 2);
	TextDrawColor(Casino_TD[Casino_TD_Exit], -1);
	TextDrawUseBox(Casino_TD[Casino_TD_Exit], true);
	TextDrawBoxColor(Casino_TD[Casino_TD_Exit], -348178774);
	TextDrawSetShadow(Casino_TD[Casino_TD_Exit], 0);
	TextDrawSetOutline(Casino_TD[Casino_TD_Exit], 1);
	TextDrawBackgroundColor(Casino_TD[Casino_TD_Exit], 0x00000000);
	TextDrawFont(Casino_TD[Casino_TD_Exit], 1);
	TextDrawSetProportional(Casino_TD[Casino_TD_Exit], 1);
	TextDrawSetSelectable(Casino_TD[Casino_TD_Exit], true);


	Casino_TD[Casino_TD_Lines][0] = TextDrawCreate(466.179138, 211.166641, "_____________");
	Casino_TD[Casino_TD_Lines][1] = TextDrawCreate(466.710601, 227.333297, "_____________");
	Casino_TD[Casino_TD_Lines][2] = TextDrawCreate(465.836486, 244.083312, "_____________");
	Casino_TD[Casino_TD_Lines][3] = TextDrawCreate(466.367919, 259.666656, "_____________");
	Casino_TD[Casino_TD_Lines][4] = TextDrawCreate(465.962280, 276.416717, "_____________");
	for(new i = 0; i < 5; i++) {
		TextDrawLetterSize(Casino_TD[Casino_TD_Lines][i], 0.444846, -0.336666);
		TextDrawTextSize(Casino_TD[Casino_TD_Lines][i], 579.560363, -1988.000122);
		TextDrawAlignment(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawColor(Casino_TD[Casino_TD_Lines][i], -1);
		TextDrawUseBox(Casino_TD[Casino_TD_Lines][i], true);
		TextDrawBoxColor(Casino_TD[Casino_TD_Lines][i], 1149760170);
		TextDrawSetShadow(Casino_TD[Casino_TD_Lines][i], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_Lines][i], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_Lines][i], 1);
		TextDrawSetProportional(Casino_TD[Casino_TD_Lines][i], 1);
	}
	Casino_TD[Casino_TD_Modeled][0] = TextDrawCreate(588.462707, 148.166671, "PreviewModel");
	Casino_TD[Casino_TD_Modeled][1] = TextDrawCreate(581.966247, 146.833297, "PreviewModel");
	for(new i = 0;i<2; i++) {
		TextDrawLetterSize(Casino_TD[Casino_TD_Modeled][i], 0.000000, 0.000000);
		TextDrawTextSize(Casino_TD[Casino_TD_Modeled][i], 28.579849, 34.416690);
		TextDrawAlignment(Casino_TD[Casino_TD_Modeled][i], 1);
		TextDrawColor(Casino_TD[Casino_TD_Modeled][i], -86);
		TextDrawSetShadow(Casino_TD[Casino_TD_Modeled][i], 0);
		TextDrawSetOutline(Casino_TD[Casino_TD_Modeled][i], 0);
		TextDrawBackgroundColor(Casino_TD[Casino_TD_Modeled][i], 0x00000000);
		TextDrawFont(Casino_TD[Casino_TD_Modeled][i], 5);
		TextDrawSetPreviewModel(Casino_TD[Casino_TD_Modeled][i], 1851);
	}
	TextDrawSetPreviewRot(Casino_TD[Casino_TD_Modeled][0], 0.000000, 111.000000, 124.000000, 1.000000);
	TextDrawSetPreviewRot(Casino_TD[Casino_TD_Modeled][1], 247.000000, 134.000000, 0.000000, 1.000000);

	load_tune();

	inFigh = TextDrawCreate(569.333679, 96.071090, "In Fight"); // Text element
	TextDrawLetterSize(inFigh, 0.247332, 1.316266);
	TextDrawAlignment(inFigh, 1);
	TextDrawColor(inFigh, -16776961);
	TextDrawSetShadow(inFigh, 0);
	TextDrawSetOutline(inFigh, 0);
	TextDrawBackgroundColor(inFigh, 51);
	TextDrawFont(inFigh, 2);
	TextDrawSetProportional(inFigh, 1);
	TextDrawSetPreviewModel(inFigh, 0);
	TextDrawSetPreviewRot(inFigh, 0.000000, 0.000000, 0.000000, 0.000000);

	Capture[0] = TextDrawCreate(117.724746, 246.500000, "usebox");
	TextDrawLetterSize(Capture[0], 0.000000, 3.585549);
	TextDrawTextSize(Capture[0], 2.216691, 0.000000);
	TextDrawAlignment(Capture[0], 1);
	TextDrawColor(Capture[0], 0);
	TextDrawUseBox(Capture[0], true);
	TextDrawBoxColor(Capture[0], 102);
	TextDrawSetShadow(Capture[0], 0);
	TextDrawSetOutline(Capture[0], 0);
	TextDrawFont(Capture[0], 0);

	Capture[1] = TextDrawCreate(16.866767, 253.750030, "43");
	TextDrawLetterSize(Capture[1], 0.424229, 2.124998);
	TextDrawAlignment(Capture[1], 1);
	TextDrawColor(Capture[1], -1);
	TextDrawSetShadow(Capture[1], 0);
	TextDrawSetOutline(Capture[1], 1);
	TextDrawBackgroundColor(Capture[1], 51);
	TextDrawFont(Capture[1], 3);
	TextDrawSetProportional(Capture[1], 1);

	Capture[2] = TextDrawCreate(78.243041, 253.750045, "39");
	TextDrawLetterSize(Capture[2], 0.448592, 2.084166);
	TextDrawAlignment(Capture[2], 1);
	TextDrawColor(Capture[2], -1);
	TextDrawSetShadow(Capture[2], 0);
	TextDrawSetOutline(Capture[2], 1);
	TextDrawBackgroundColor(Capture[2], 51);
	TextDrawFont(Capture[2], 3);
	TextDrawSetProportional(Capture[2], 1);

	Capture[3] = TextDrawCreate(58.691062, 258.750030, "usebox");
	TextDrawLetterSize(Capture[3], 0.000000, 1.042042);
	TextDrawTextSize(Capture[3], 50.942890, 0.000000);
	TextDrawAlignment(Capture[3], 1);
	TextDrawColor(Capture[3], 1017789500);
	TextDrawUseBox(Capture[3], true);
	TextDrawBoxColor(Capture[3], 579543807);
	TextDrawSetShadow(Capture[3], 0);
	TextDrawSetOutline(Capture[3], 0);
	TextDrawBackgroundColor(Capture[3], 41215);
	TextDrawFont(Capture[3], 0);

	Capture[4] = TextDrawCreate(65.718879, 258.750030, "usebox");
	TextDrawLetterSize(Capture[4], 0.000000, 1.044443);
	TextDrawTextSize(Capture[4], 57.970710, 0.000000);
	TextDrawAlignment(Capture[4], 1);
	TextDrawColor(Capture[4], 0);
	TextDrawUseBox(Capture[4], true);
	TextDrawBoxColor(Capture[4], 531556863);
	TextDrawSetShadow(Capture[4], 0);
	TextDrawSetOutline(Capture[4], 0);
	TextDrawFont(Capture[4], 0);

	Capture[5] = TextDrawCreate(117.724731, 285.000061, "usebox");
	TextDrawLetterSize(Capture[5], 0.000000, 1.142035);
	TextDrawTextSize(Capture[5], 2.216691, 0.000000);
	TextDrawAlignment(Capture[5], 1);
	TextDrawColor(Capture[5], 0);
	TextDrawUseBox(Capture[5], true);
	TextDrawBoxColor(Capture[5], 102);
	TextDrawSetShadow(Capture[5], 0);
	TextDrawSetOutline(Capture[5], 0);
	TextDrawFont(Capture[5], 0);

	Capture[6] = TextDrawCreate(47.789161, 282.333282, "4:02");
	TextDrawLetterSize(Capture[6], 0.208241, 1.506664);
	TextDrawAlignment(Capture[6], 1);
	TextDrawColor(Capture[6], -1);
	TextDrawSetShadow(Capture[6], 0);
	TextDrawSetOutline(Capture[6], 1);
	TextDrawBackgroundColor(Capture[6], 51);
	TextDrawFont(Capture[6], 2);
	TextDrawSetProportional(Capture[6], 1);

	Capture[7] = TextDrawCreate(73.557823, 282.916656, "Aztecas");
	TextDrawLetterSize(Capture[7], 0.186691, 1.320000);
	TextDrawAlignment(Capture[7], 1);
	TextDrawColor(Capture[7], -1);
	TextDrawSetShadow(Capture[7], 0);
	TextDrawSetOutline(Capture[7], 1);
	TextDrawBackgroundColor(Capture[7], 51);
	TextDrawFont(Capture[7], 2);
	TextDrawSetProportional(Capture[7], 1);

	Capture[8] = TextDrawCreate(37.013221, 238.583312, "capture");
	TextDrawLetterSize(Capture[8], 0.226045, 1.354998);
	TextDrawAlignment(Capture[8], 1);
	TextDrawColor(Capture[8], -1);
	TextDrawSetShadow(Capture[8], 0);
	TextDrawSetOutline(Capture[8], 1);
	TextDrawBackgroundColor(Capture[8], 51);
	TextDrawFont(Capture[8], 2);
	TextDrawSetProportional(Capture[8], 1);

	Capture[9] = TextDrawCreate(23.894615, 282.333404, "grove");
	TextDrawLetterSize(Capture[9], 0.215268, 1.372498);
	TextDrawAlignment(Capture[9], 2);
	TextDrawColor(Capture[9], -1);
	TextDrawSetShadow(Capture[9], 0);
	TextDrawSetOutline(Capture[9], -1);
	TextDrawBackgroundColor(Capture[9], 51);
	TextDrawFont(Capture[9], 2);
	TextDrawSetProportional(Capture[9], 1);

	select_skins[0] = TextDrawCreate(352.666778, 366.970367, "");
	TextDrawLetterSize(select_skins[0], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[0], 81.000000, 44.000000);
	TextDrawAlignment(select_skins[0], 1);
	TextDrawColor(select_skins[0], 255);
	TextDrawSetShadow(select_skins[0], 0);
	TextDrawSetOutline(select_skins[0], 0);
	TextDrawBackgroundColor(select_skins[0], 0);
	TextDrawFont(select_skins[0], 5);
	TextDrawSetProportional(select_skins[0], 0);
	TextDrawSetShadow(select_skins[0], 0);
	TextDrawSetPreviewModel(select_skins[0], 806);
	TextDrawSetPreviewRot(select_skins[0], 138.000000, 90.000000, 199.000000, 1.000000);

	select_skins[1] = TextDrawCreate(404.666961, 361.577819, "");
	TextDrawLetterSize(select_skins[1], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[1], 29.000000, 34.000000);
	TextDrawAlignment(select_skins[1], 1);
	TextDrawColor(select_skins[1], 255);
	TextDrawSetShadow(select_skins[1], 0);
	TextDrawSetOutline(select_skins[1], 0);
	TextDrawBackgroundColor(select_skins[1], 0);
	TextDrawFont(select_skins[1], 5);
	TextDrawSetProportional(select_skins[1], 0);
	TextDrawSetShadow(select_skins[1], 0);
	TextDrawSetPreviewModel(select_skins[1], 806);
	TextDrawSetPreviewRot(select_skins[1], 180.000000, 125.000000, 36.000000, 1.000000);

	select_skins[2] = TextDrawCreate(418.333526, 362.822265, "");
	TextDrawLetterSize(select_skins[2], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[2], 38.000000, 36.000000);
	TextDrawAlignment(select_skins[2], 1);
	TextDrawColor(select_skins[2], 255);
	TextDrawSetShadow(select_skins[2], 0);
	TextDrawSetOutline(select_skins[2], 0);
	TextDrawBackgroundColor(select_skins[2], 0);
	TextDrawFont(select_skins[2], 5);
	TextDrawSetProportional(select_skins[2], 0);
	TextDrawSetShadow(select_skins[2], 0);
	TextDrawSetSelectable(select_skins[2], true);
	TextDrawSetPreviewModel(select_skins[2], 19605);
	TextDrawSetPreviewRot(select_skins[2], 0.000000, 87.000000, 0.000000, 1.689259);

	select_skins[3] = TextDrawCreate(406.333648, 378.585327, "");
	TextDrawLetterSize(select_skins[3], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[3], 29.000000, 34.000000);
	TextDrawAlignment(select_skins[3], 1);
	TextDrawColor(select_skins[3], 255);
	TextDrawSetShadow(select_skins[3], 0);
	TextDrawSetOutline(select_skins[3], 0);
	TextDrawBackgroundColor(select_skins[3], 0);
	TextDrawFont(select_skins[3], 5);
	TextDrawSetProportional(select_skins[3], 0);
	TextDrawSetShadow(select_skins[3], 0);
	TextDrawSetPreviewModel(select_skins[3], 806);
	TextDrawSetPreviewRot(select_skins[3], 180.000000, 51.000000, 169.000000, 1.000000);

	select_skins[4] = TextDrawCreate(357.999908, 348.718719, "");
	TextDrawLetterSize(select_skins[4], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[4], 54.000000, 40.000000);
	TextDrawAlignment(select_skins[4], 1);
	TextDrawColor(select_skins[4], 255);
	TextDrawSetShadow(select_skins[4], 0);
	TextDrawSetOutline(select_skins[4], 0);
	TextDrawBackgroundColor(select_skins[4], 0);
	TextDrawFont(select_skins[4], 5);
	TextDrawSetProportional(select_skins[4], 0);
	TextDrawSetShadow(select_skins[4], 0);
	TextDrawSetPreviewModel(select_skins[4], 19836);
	TextDrawSetPreviewRot(select_skins[4], 90.000000, 360.000000, 138.000000, 1.000000);

	select_skins[5] = TextDrawCreate(375.666717, 364.637084, "Next");
	TextDrawLetterSize(select_skins[5], 0.184999, 0.840888);
	TextDrawAlignment(select_skins[5], 1);
	TextDrawColor(select_skins[5], -91);
	TextDrawSetShadow(select_skins[5], 0);
	TextDrawSetOutline(select_skins[5], 0);
	TextDrawBackgroundColor(select_skins[5], 255);
	TextDrawFont(select_skins[5], 2);
	TextDrawSetProportional(select_skins[5], 1);
	TextDrawSetShadow(select_skins[5], 0);

	select_skins[6] = TextDrawCreate(205.622894, 367.780822, "");
	TextDrawLetterSize(select_skins[6], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[6], 102.000000, 37.000000);
	TextDrawAlignment(select_skins[6], 1);
	TextDrawColor(select_skins[6], 255);
	TextDrawSetShadow(select_skins[6], 0);
	TextDrawSetOutline(select_skins[6], 0);
	TextDrawBackgroundColor(select_skins[6], 0);
	TextDrawFont(select_skins[6], 5);
	TextDrawSetProportional(select_skins[6], 0);
	TextDrawSetShadow(select_skins[6], 0);
	TextDrawSetPreviewModel(select_skins[6], 806);
	TextDrawSetPreviewRot(select_skins[6], 173.000000, 270.000000, 199.000000, 1.000000);

	select_skins[7] = TextDrawCreate(209.622924, 361.558685, "");
	TextDrawLetterSize(select_skins[7], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[7], 30.000000, 34.000000);
	TextDrawAlignment(select_skins[7], 1);
	TextDrawColor(select_skins[7], 255);
	TextDrawSetShadow(select_skins[7], 0);
	TextDrawSetOutline(select_skins[7], 0);
	TextDrawBackgroundColor(select_skins[7], 0);
	TextDrawFont(select_skins[7], 5);
	TextDrawSetProportional(select_skins[7], 0);
	TextDrawSetShadow(select_skins[7], 0);
	TextDrawSetPreviewModel(select_skins[7], 806);
	TextDrawSetPreviewRot(select_skins[7], 180.000000, 238.000000, 169.000000, 1.000000);

	select_skins[8] = TextDrawCreate(184.622894, 363.217895, "");
	TextDrawLetterSize(select_skins[8], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[8], 39.000000, 36.000000);
	TextDrawAlignment(select_skins[8], 1);
	TextDrawColor(select_skins[8], 255);
	TextDrawSetShadow(select_skins[8], 0);
	TextDrawSetOutline(select_skins[8], 0);
	TextDrawBackgroundColor(select_skins[8], 0);
	TextDrawFont(select_skins[8], 5);
	TextDrawSetProportional(select_skins[8], 0);
	TextDrawSetShadow(select_skins[8], 0);
	TextDrawSetSelectable(select_skins[8], true);
	TextDrawSetPreviewModel(select_skins[8], 19605);
	TextDrawSetPreviewRot(select_skins[8], 0.000000, 270.000000, 0.000000, 1.689259);

	select_skins[9] = TextDrawCreate(209.622985, 376.906890, "");
	TextDrawLetterSize(select_skins[9], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[9], 30.000000, 34.000000);
	TextDrawAlignment(select_skins[9], 1);
	TextDrawColor(select_skins[9], 255);
	TextDrawSetShadow(select_skins[9], 0);
	TextDrawSetOutline(select_skins[9], 0);
	TextDrawBackgroundColor(select_skins[9], 0);
	TextDrawFont(select_skins[9], 5);
	TextDrawSetProportional(select_skins[9], 0);
	TextDrawSetShadow(select_skins[9], 0);
	TextDrawSetPreviewModel(select_skins[9], 806);
	TextDrawSetPreviewRot(select_skins[9], 180.000000, 297.000000, 195.000000, 1.000000);

	select_skins[10] = TextDrawCreate(229.598800, 353.281768, "");
	TextDrawLetterSize(select_skins[10], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[10], 55.000000, 33.000000);
	TextDrawAlignment(select_skins[10], 1);
	TextDrawColor(select_skins[10], 255);
	TextDrawSetShadow(select_skins[10], 0);
	TextDrawSetOutline(select_skins[10], 0);
	TextDrawBackgroundColor(select_skins[10], 0);
	TextDrawFont(select_skins[10], 5);
	TextDrawSetProportional(select_skins[10], 0);
	TextDrawSetShadow(select_skins[10], 0);
	TextDrawSetPreviewModel(select_skins[10], 19836);
	TextDrawSetPreviewRot(select_skins[10], 90.000000, 360.000000, 0.000000, 1.000000);

	select_skins[11] = TextDrawCreate(247.598953, 364.222320, "Back");
	TextDrawLetterSize(select_skins[11], 0.184999, 0.840888);
	TextDrawAlignment(select_skins[11], 1);
	TextDrawColor(select_skins[11], -91);
	TextDrawSetShadow(select_skins[11], 0);
	TextDrawSetOutline(select_skins[11], 0);
	TextDrawBackgroundColor(select_skins[11], 255);
	TextDrawFont(select_skins[11], 2);
	TextDrawSetProportional(select_skins[11], 1);
	TextDrawSetShadow(select_skins[11], 0);

	select_skins[12] = TextDrawCreate(256.133697, -20.614786, "");
	TextDrawLetterSize(select_skins[12], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[12], 166.000000, 59.000000);
	TextDrawAlignment(select_skins[12], 1);
	TextDrawColor(select_skins[12], 255);
	TextDrawSetShadow(select_skins[12], 0);
	TextDrawSetOutline(select_skins[12], 0);
	TextDrawBackgroundColor(select_skins[12], 0);
	TextDrawFont(select_skins[12], 5);
	TextDrawSetProportional(select_skins[12], 0);
	TextDrawSetShadow(select_skins[12], 0);
	TextDrawSetPreviewModel(select_skins[12], 19837);
	TextDrawSetPreviewRot(select_skins[12], 0.000000, 270.000000, 0.000000, 1.131386);

	select_skins[13] = TextDrawCreate(224.133743, -21.029598, "");
	TextDrawLetterSize(select_skins[13], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[13], 166.000000, 59.000000);
	TextDrawAlignment(select_skins[13], 1);
	TextDrawColor(select_skins[13], 255);
	TextDrawSetShadow(select_skins[13], 0);
	TextDrawSetOutline(select_skins[13], 0);
	TextDrawBackgroundColor(select_skins[13], 0);
	TextDrawFont(select_skins[13], 5);
	TextDrawSetProportional(select_skins[13], 0);
	TextDrawSetShadow(select_skins[13], 0);
	TextDrawSetPreviewModel(select_skins[13], 19837);
	TextDrawSetPreviewRot(select_skins[13], 0.000000, 90.000000, 0.000000, 1.131386);

	select_skins[14] = TextDrawCreate(255.065704, -11.488560, "");
	TextDrawLetterSize(select_skins[14], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[14], 134.000000, 63.000000);
	TextDrawAlignment(select_skins[14], 1);
	TextDrawColor(select_skins[14], 255);
	TextDrawSetShadow(select_skins[14], 0);
	TextDrawSetOutline(select_skins[14], 0);
	TextDrawBackgroundColor(select_skins[14], 0);
	TextDrawFont(select_skins[14], 5);
	TextDrawSetProportional(select_skins[14], 0);
	TextDrawSetShadow(select_skins[14], 0);
	TextDrawSetPreviewModel(select_skins[14], 19836);
	TextDrawSetPreviewRot(select_skins[14], 90.000000, 360.000000, 117.000000, 1.000000);

	select_skins[15] = TextDrawCreate(292.800354, 12.311112, "Select_a_person");
	TextDrawLetterSize(select_skins[15], 0.345999, 1.205924);
	TextDrawAlignment(select_skins[15], 1);
	TextDrawColor(select_skins[15], -92);
	TextDrawSetShadow(select_skins[15], 0);
	TextDrawSetOutline(select_skins[15], 0);
	TextDrawBackgroundColor(select_skins[15], 255);
	TextDrawFont(select_skins[15], 0);
	TextDrawSetProportional(select_skins[15], 1);
	TextDrawSetShadow(select_skins[15], 0);

	select_skins[16] = TextDrawCreate(274.467041, 341.518493, "");
	TextDrawLetterSize(select_skins[16], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[16], 94.000000, 39.000000);
	TextDrawAlignment(select_skins[16], 1);
	TextDrawColor(select_skins[16], 255);
	TextDrawSetShadow(select_skins[16], 0);
	TextDrawSetOutline(select_skins[16], 0);
	TextDrawBackgroundColor(select_skins[16], 0);
	TextDrawFont(select_skins[16], 5);
	TextDrawSetProportional(select_skins[16], 0);
	TextDrawSetShadow(select_skins[16], 0);
	TextDrawSetPreviewModel(select_skins[16], 19837);
	TextDrawSetPreviewRot(select_skins[16], 0.000000, 270.000000, 0.000000, 1.131386);

	select_skins[17] = TextDrawCreate(373.800354, 343.177764, "");
	TextDrawLetterSize(select_skins[17], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[17], -95.000000, 37.000000);
	TextDrawAlignment(select_skins[17], 1);
	TextDrawColor(select_skins[17], 255);
	TextDrawSetShadow(select_skins[17], 0);
	TextDrawSetOutline(select_skins[17], 0);
	TextDrawBackgroundColor(select_skins[17], 0);
	TextDrawFont(select_skins[17], 5);
	TextDrawSetProportional(select_skins[17], 0);
	TextDrawSetShadow(select_skins[17], 0);
	TextDrawSetPreviewModel(select_skins[17], 19837);
	TextDrawSetPreviewRot(select_skins[17], 0.000000, 270.000000, 0.000000, 1.131386);

	select_skins[18] = TextDrawCreate(311.133819, 364.074035, "Select");
	TextDrawLetterSize(select_skins[18], 0.186998, 0.940442);
	TextDrawAlignment(select_skins[18], 1);
	TextDrawColor(select_skins[18], -99);
	TextDrawSetShadow(select_skins[18], 0);
	TextDrawSetOutline(select_skins[18], 0);
	TextDrawBackgroundColor(select_skins[18], 255);
	TextDrawFont(select_skins[18], 2);
	TextDrawSetProportional(select_skins[18], 1);
	TextDrawSetShadow(select_skins[18], 0);
	TextDrawSetSelectable(select_skins[18], true);

	select_skins[19] = TextDrawCreate(302.333496, 384.392730, "");
	TextDrawLetterSize(select_skins[19], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[19], 29.000000, 29.000000);
	TextDrawAlignment(select_skins[19], 1);
	TextDrawColor(select_skins[19], 255);
	TextDrawSetShadow(select_skins[19], 0);
	TextDrawSetOutline(select_skins[19], 0);
	TextDrawBackgroundColor(select_skins[19], 0);
	TextDrawFont(select_skins[19], 5);
	TextDrawSetProportional(select_skins[19], 0);
	TextDrawSetShadow(select_skins[19], 0);
	TextDrawSetPreviewModel(select_skins[19], 806);
	TextDrawSetPreviewRot(select_skins[19], 138.000000, 151.000000, 200.000000, 1.000000);

	select_skins[20] = TextDrawCreate(309.333404, 364.481567, "");
	TextDrawLetterSize(select_skins[20], 0.000000, 0.000000);
	TextDrawTextSize(select_skins[20], 34.000000, 54.000000);
	TextDrawAlignment(select_skins[20], 1);
	TextDrawColor(select_skins[20], 255);
	TextDrawSetShadow(select_skins[20], 0);
	TextDrawSetOutline(select_skins[20], 0);
	TextDrawBackgroundColor(select_skins[20], 0);
	TextDrawFont(select_skins[20], 5);
	TextDrawSetProportional(select_skins[20], 0);
	TextDrawSetShadow(select_skins[20], 0);
	TextDrawSetPreviewModel(select_skins[20], 806);
	TextDrawSetPreviewRot(select_skins[20], 138.000000, 213.000000, 146.000000, 1.000000);

	reg_td[0] = TextDrawCreate(459.633117, 160.962966, "box");
	TextDrawLetterSize(reg_td[0], 0.000000, 19.900018);
	TextDrawTextSize(reg_td[0], 631.000000, 0.000000);
	TextDrawAlignment(reg_td[0], 1);
	TextDrawColor(reg_td[0], -1);
	TextDrawUseBox(reg_td[0], 1);
	TextDrawBoxColor(reg_td[0], 108);
	TextDrawSetShadow(reg_td[0], 0);
	TextDrawSetOutline(reg_td[0], 0);
	TextDrawBackgroundColor(reg_td[0], 255);
	TextDrawFont(reg_td[0], 1);
	TextDrawSetProportional(reg_td[0], 1);
	TextDrawSetShadow(reg_td[0], 0);

	reg_td[1] = TextDrawCreate(435.633148, 95.266685, "");
	TextDrawLetterSize(reg_td[1], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[1], 219.000000, 110.000000);
	TextDrawAlignment(reg_td[1], 1);
	TextDrawColor(reg_td[1], -1);
	TextDrawSetShadow(reg_td[1], 0);
	TextDrawSetOutline(reg_td[1], 0);
	TextDrawBackgroundColor(reg_td[1], 0);
	TextDrawFont(reg_td[1], 5);
	TextDrawSetProportional(reg_td[1], 0);
	TextDrawSetShadow(reg_td[1], 0);
	TextDrawSetPreviewModel(reg_td[1], 1011);
	TextDrawSetPreviewRot(reg_td[1], 90.000000, 0.000000, 180.000000, 1.000000);

	reg_td[2] = TextDrawCreate(433.633148, 292.303833, "");
	TextDrawLetterSize(reg_td[2], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[2], 223.000000, 110.000000);
	TextDrawAlignment(reg_td[2], 1);
	TextDrawColor(reg_td[2], -1);
	TextDrawSetShadow(reg_td[2], 0);
	TextDrawSetOutline(reg_td[2], 0);
	TextDrawBackgroundColor(reg_td[2], 0);
	TextDrawFont(reg_td[2], 5);
	TextDrawSetProportional(reg_td[2], 0);
	TextDrawSetShadow(reg_td[2], 0);
	TextDrawSetPreviewModel(reg_td[2], 1011);
	TextDrawSetPreviewRot(reg_td[2], 270.000000, 0.000000, 180.000000, 1.000000);

	reg_td[3] = TextDrawCreate(494.633178, 289.970581, "");
	TextDrawLetterSize(reg_td[3], -1.104665, 6.718811);
	TextDrawAlignment(reg_td[3], 1);
	TextDrawColor(reg_td[3], 0xe3ff42AA);
	TextDrawSetShadow(reg_td[3], -1);
	TextDrawSetOutline(reg_td[3], 0);
	TextDrawBackgroundColor(reg_td[3], 255);
	TextDrawFont(reg_td[3], 0);
	TextDrawSetProportional(reg_td[3], 0);
	TextDrawSetShadow(reg_td[3], -1);

	reg_td[4] = TextDrawCreate(495.966461, 334.355743, "");
	TextDrawLetterSize(reg_td[4], 0.587997, 2.139259);
	TextDrawAlignment(reg_td[4], 1);
	TextDrawColor(reg_td[4], 0x0048ffAA);
	TextDrawSetShadow(reg_td[4], 0);
	TextDrawSetOutline(reg_td[4], 0);
	TextDrawBackgroundColor(reg_td[4], 255);
	TextDrawFont(reg_td[4], 1);
	TextDrawSetProportional(reg_td[4], 1);
	TextDrawSetShadow(reg_td[4], 0);

	reg_td[5] = TextDrawCreate(559.633728, 341.407562, "UKRAINE");
	TextDrawLetterSize(reg_td[5], 0.213666, 1.226665);
	TextDrawAlignment(reg_td[5], 1);
	TextDrawColor(reg_td[5], 0xe3ff42AA);
	TextDrawSetShadow(reg_td[5], 0);
	TextDrawSetOutline(reg_td[5], 0);
	TextDrawBackgroundColor(reg_td[5], 255);
	TextDrawFont(reg_td[5], 2);
	TextDrawSetProportional(reg_td[5], 1);
	TextDrawSetShadow(reg_td[5], 0);

	reg_td[6] = TextDrawCreate(564.967163, 282.348205, "");
	TextDrawLetterSize(reg_td[6], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[6], 60.000000, 47.000000);
	TextDrawAlignment(reg_td[6], 1);
	TextDrawColor(reg_td[6], 0xe3ff42AA);
	TextDrawSetShadow(reg_td[6], 0);
	TextDrawSetOutline(reg_td[6], 0);
	TextDrawBackgroundColor(reg_td[6], 0);
	TextDrawFont(reg_td[6], 5);
	TextDrawSetProportional(reg_td[6], 0);
	TextDrawSetShadow(reg_td[6], 0);
	TextDrawSetPreviewModel(reg_td[6], 1316);
	TextDrawSetPreviewRot(reg_td[6], 156.000000, 180.000000, 0.000000, 1.000000);


	reg_td[7] = TextDrawCreate(468.433166, 200.574737, "");
	TextDrawLetterSize(reg_td[7], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[7], 34.000000, 38.000000);
	TextDrawAlignment(reg_td[7], 1);
	TextDrawColor(reg_td[7], -16777217);
	TextDrawSetShadow(reg_td[7], 0);
	TextDrawSetOutline(reg_td[7], 0);
	TextDrawBackgroundColor(reg_td[7], 0);
	TextDrawFont(reg_td[7], 5);
	TextDrawSetProportional(reg_td[7], 0);
	TextDrawSetShadow(reg_td[7], 0);
	TextDrawSetPreviewModel(reg_td[7], 1316);
	TextDrawSetPreviewRot(reg_td[7], 90.000000, 180.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(reg_td[7],true);

	reg_td[8] = TextDrawCreate(479.433135, 205.708587, "<");
	TextDrawLetterSize(reg_td[8], 0.603999, 3.002074);
	TextDrawAlignment(reg_td[8], 1);
	TextDrawColor(reg_td[8], 0xe3ff42AA);
	TextDrawSetShadow(reg_td[8], 1);
	TextDrawSetOutline(reg_td[8], 0);
	TextDrawBackgroundColor(reg_td[8], 255);
	TextDrawFont(reg_td[8], 1);
	TextDrawSetProportional(reg_td[8], 1);
	TextDrawSetShadow(reg_td[8], 1);

	reg_td[9] = TextDrawCreate(513.033081, 200.574737, "");
	TextDrawLetterSize(reg_td[9], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[9], 34.000000, 38.000000);
	TextDrawAlignment(reg_td[9], 1);
	TextDrawColor(reg_td[9], -1);
	TextDrawSetShadow(reg_td[9], 0);
	TextDrawSetOutline(reg_td[9], 0);
	TextDrawBackgroundColor(reg_td[9], 0);
	TextDrawFont(reg_td[9], 5);
	TextDrawSetProportional(reg_td[9], 0);
	TextDrawSetShadow(reg_td[9], 0);
	TextDrawSetPreviewModel(reg_td[9], 1316);
	TextDrawSetPreviewRot(reg_td[9], 90.000000, 180.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(reg_td[9],true);

	reg_td[10] = TextDrawCreate(525.733215, 205.708587, ">");
	TextDrawLetterSize(reg_td[10], 0.603999, 3.002074);
	TextDrawAlignment(reg_td[10], 1);
	TextDrawColor(reg_td[10], 0xe3ff42AA);
	TextDrawSetShadow(reg_td[10], 1);
	TextDrawSetOutline(reg_td[10], 0);
	TextDrawBackgroundColor(reg_td[10], 255);
	TextDrawFont(reg_td[10], 1);
	TextDrawSetProportional(reg_td[10], 1);
	TextDrawSetShadow(reg_td[10], 1);

	reg_td[11] = TextDrawCreate(905.967102, 168.274093, "");
	TextDrawLetterSize(reg_td[11], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[11], -467.000000, -13.000000);
	TextDrawAlignment(reg_td[11], 1);
	TextDrawColor(reg_td[11], 0x0047ccAA);//сменилООО
	TextDrawSetShadow(reg_td[11], 0);
	TextDrawSetOutline(reg_td[11], 0);
	TextDrawBackgroundColor(reg_td[11], 0);
	TextDrawFont(reg_td[11], 5);
	TextDrawSetProportional(reg_td[11], 0);
	TextDrawSetShadow(reg_td[11], 0);
	TextDrawSetPreviewModel(reg_td[11], 1591);
	TextDrawSetPreviewRot(reg_td[11], 255.000000, 360.000000, 90.000000, 1.000000);

	reg_td[12] = TextDrawCreate(486.299804, 236.873992, "back");
	TextDrawLetterSize(reg_td[12], 0.188666, 0.940442);
	TextDrawAlignment(reg_td[12], 2);
	TextDrawColor(reg_td[12], -513);
	TextDrawSetShadow(reg_td[12], 1);
	TextDrawSetOutline(reg_td[12], 0);
	TextDrawBackgroundColor(reg_td[12], 255);
	TextDrawFont(reg_td[12], 2);
	TextDrawSetProportional(reg_td[12], 1);
	TextDrawSetShadow(reg_td[12], 1);

	reg_td[13] = TextDrawCreate(530.799865, 236.873992, "next");
	TextDrawLetterSize(reg_td[13], 0.188666, 0.940442);
	TextDrawAlignment(reg_td[13], 2);
	TextDrawColor(reg_td[13], -1);
	TextDrawSetShadow(reg_td[13], 1);
	TextDrawSetOutline(reg_td[13], 0);
	TextDrawBackgroundColor(reg_td[13], 255);
	TextDrawFont(reg_td[13], 2);
	TextDrawSetProportional(reg_td[13], 1);
	TextDrawSetShadow(reg_td[13], 1);

	reg_td[14] = TextDrawCreate(544.133178, 147.688796, "Select_skin");
	TextDrawLetterSize(reg_td[14], 0.188666, 0.940442);
	TextDrawAlignment(reg_td[14], 2);
	TextDrawColor(reg_td[14], 0xe3ff42AA);
	TextDrawSetShadow(reg_td[14], 0);
	TextDrawSetOutline(reg_td[14], 0);
	TextDrawBackgroundColor(reg_td[14], 255);
	TextDrawFont(reg_td[14], 2);
	TextDrawSetProportional(reg_td[14], 1);
	TextDrawSetShadow(reg_td[14], 0);

	reg_td[15] = TextDrawCreate(490.699218, 242.471084, "");
	TextDrawLetterSize(reg_td[15], 0.000000, 0.000000);
	TextDrawTextSize(reg_td[15], 34.000000, 38.000000);
	TextDrawAlignment(reg_td[15], 1);
	TextDrawColor(reg_td[15], -1);
	TextDrawSetShadow(reg_td[15], 0);
	TextDrawSetOutline(reg_td[15], 0);
	TextDrawBackgroundColor(reg_td[15], 0);
	TextDrawFont(reg_td[15], 5);
	TextDrawSetProportional(reg_td[15], 0);
	TextDrawSetShadow(reg_td[15], 0);
	TextDrawSetPreviewModel(reg_td[15], 1316);
	TextDrawSetPreviewRot(reg_td[15], 90.000000, 180.000000, 0.000000, 1.000000);
	TextDrawSetSelectable(reg_td[15],true);

	reg_td[16] = TextDrawCreate(508.132629, 279.185241, "select");
	TextDrawLetterSize(reg_td[16], 0.188666, 0.940442);
	TextDrawAlignment(reg_td[16], 2);
	TextDrawColor(reg_td[16], -1);
	TextDrawSetShadow(reg_td[16], 1);
	TextDrawSetOutline(reg_td[16], 0);
	TextDrawBackgroundColor(reg_td[16], 255);
	TextDrawFont(reg_td[16], 2);
	TextDrawSetProportional(reg_td[16], 1);
	TextDrawSetShadow(reg_td[16], 1);

	reg_td[17] = TextDrawCreate(507.132690, 259.588806, "v");
	TextDrawLetterSize(reg_td[17], 0.480666, 1.230810);
	TextDrawTextSize(reg_td[17], 516.779052, 21.000001);
	TextDrawAlignment(reg_td[17], 2);
	TextDrawColor(reg_td[17], 0xe3ff42AA);
	TextDrawSetShadow(reg_td[17], 1);
	TextDrawSetOutline(reg_td[17], 0);
	TextDrawBackgroundColor(reg_td[17], 255);
	TextDrawFont(reg_td[17], 1);
	TextDrawSetProportional(reg_td[17], 1);
	TextDrawSetShadow(reg_td[17], 1);
	//TextDrawSetSelectable(reg_td[17],true);

	reg_td[18] = TextDrawCreate(511.466064, 253.881393, "");
	TextDrawLetterSize(reg_td[18], 0.882999, 1.894515);
	TextDrawTextSize(reg_td[18], 520.995727, -13.999999);
	TextDrawAlignment(reg_td[18], 2);
	TextDrawColor(reg_td[18], 0xe3ff42AA);
	TextDrawSetShadow(reg_td[18], 1);
	TextDrawSetOutline(reg_td[18], 0);
	TextDrawBackgroundColor(reg_td[18], 255);
	TextDrawFont(reg_td[18], 1);
	TextDrawSetProportional(reg_td[18], 1);
	TextDrawSetShadow(reg_td[18], 1);
	//TextDrawSetSelectable(reg_td[18],true);
	
	/* ----------------- Инветарь ----------------- */
	inv_global[15] = TextDrawCreate(22.005836, 174.833359, "bg_character_part");
	TextDrawLetterSize(inv_global[15], 0.000000, 29.677889);
	TextDrawTextSize(inv_global[15], 220.000000, 0.000000);
	TextDrawAlignment(inv_global[15], 1);
	TextDrawColor(inv_global[15], 0xFFFFFFFF);
	TextDrawUseBox(inv_global[15], 1);
	TextDrawBoxColor(inv_global[15], 0x1E1E1EC5);
	TextDrawSetShadow(inv_global[15], 0);
	TextDrawSetOutline(inv_global[15], 0);
	TextDrawBackgroundColor(inv_global[15], 0x000000FF);
	TextDrawFont(inv_global[15], 1);
	TextDrawSetProportional(inv_global[15], 1);
	TextDrawSetSelectable(inv_global[15], 0);

	inv_global[14] = TextDrawCreate(34.187431, 187.666656, "bg_hp_satieti");
	TextDrawLetterSize(inv_global[14], 0.000000, 6.064422);
	TextDrawTextSize(inv_global[14], 51.000000, 0.000000);
	TextDrawAlignment(inv_global[14], 1);
	TextDrawColor(inv_global[14], 0xFFFFFFFF);
	TextDrawUseBox(inv_global[14], 1);
	TextDrawBoxColor(inv_global[14], 0x00000022);
	TextDrawSetShadow(inv_global[14], 0);
	TextDrawSetOutline(inv_global[14], 0);
	TextDrawBackgroundColor(inv_global[14], 0x000000FF);
	TextDrawFont(inv_global[14], 1);
	TextDrawSetProportional(inv_global[14], 1);
	TextDrawSetSelectable(inv_global[14], 0);

	inv_global[13] = TextDrawCreate(46.424438, 189.916718, "particle:lamp_shad_64");
	TextDrawLetterSize(inv_global[13], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[13], 82.000000, 146.000000);
	TextDrawAlignment(inv_global[13], 1);
	TextDrawColor(inv_global[13], 0xC0C0C015);
	TextDrawUseBox(inv_global[13], 0);
	TextDrawBoxColor(inv_global[13], 0x80808080);
	TextDrawSetShadow(inv_global[13], 0);
	TextDrawSetOutline(inv_global[13], 0);
	TextDrawBackgroundColor(inv_global[13], 0x00000000);
	TextDrawFont(inv_global[13], 4);
	TextDrawSetProportional(inv_global[13], 0);
	TextDrawSetSelectable(inv_global[13], 0);

	inv_global[12] = TextDrawCreate(120.999985, 345.749878, "inventory_line");
	TextDrawLetterSize(inv_global[12], 0.153557, -0.330832);
	TextDrawTextSize(inv_global[12], 0.000000, 198.000000);
	TextDrawAlignment(inv_global[12], 2);
	TextDrawColor(inv_global[12], 0xFFFFFF00);
	TextDrawUseBox(inv_global[12], 1);
	TextDrawBoxColor(inv_global[12], 0x00000088);
	TextDrawSetShadow(inv_global[12], 0);
	TextDrawSetOutline(inv_global[12], 0);
	TextDrawBackgroundColor(inv_global[12], 0x000000FF);
	TextDrawFont(inv_global[12], 1);
	TextDrawSetProportional(inv_global[12], 1);
	TextDrawSetSelectable(inv_global[12], 0);

	inv_global[11] = TextDrawCreate(139.399994, 179.383377, "LD_SPAC:white");
	TextDrawLetterSize(inv_global[11], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[11], 71.550117, 31.920044);
	TextDrawAlignment(inv_global[11], 1);
	TextDrawColor(inv_global[11], 0x000000AD);
	TextDrawUseBox(inv_global[11], 0);
	TextDrawBoxColor(inv_global[11], 0x80808080);
	TextDrawSetShadow(inv_global[11], 0);
	TextDrawSetOutline(inv_global[11], 0);
	TextDrawBackgroundColor(inv_global[11], 0x000000FF);
	TextDrawFont(inv_global[11], 4);
	TextDrawSetProportional(inv_global[11], 0);
	TextDrawSetSelectable(inv_global[11], 0);

	inv_global[10] = TextDrawCreate(139.399994, 213.916794, "LD_SPAC:white");
	TextDrawLetterSize(inv_global[10], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[10], 71.550117, 31.500034);
	TextDrawAlignment(inv_global[10], 1);
	TextDrawColor(inv_global[10], 0x000000AD);
	TextDrawUseBox(inv_global[10], 0);
	TextDrawBoxColor(inv_global[10], 0x80808080);
	TextDrawSetShadow(inv_global[10], 0);
	TextDrawSetOutline(inv_global[10], 0);
	TextDrawBackgroundColor(inv_global[10], 0x000000FF);
	TextDrawFont(inv_global[10], 4);
	TextDrawSetProportional(inv_global[10], 0);
	TextDrawSetSelectable(inv_global[10], 0);

	inv_global[9] = TextDrawCreate(139.399994, 258.500000, "LD_SPAC:white");
	TextDrawLetterSize(inv_global[9], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[9], 71.440033, 65.360229);
	TextDrawAlignment(inv_global[9], 1);
	TextDrawColor(inv_global[9], 0x000000AD);
	TextDrawUseBox(inv_global[9], 0);
	TextDrawBoxColor(inv_global[9], 0x80808080);
	TextDrawSetShadow(inv_global[9], 0);
	TextDrawSetOutline(inv_global[9], 0);
	TextDrawBackgroundColor(inv_global[9], 0x000000FF);
	TextDrawFont(inv_global[9], 4);
	TextDrawSetProportional(inv_global[9], 0);
	TextDrawSetSelectable(inv_global[9], 0);

	inv_global[8] = TextDrawCreate(32.500000, 350.599976, "LD_SPAC:white");
	TextDrawLetterSize(inv_global[8], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[8], 177.551346, 62.289818);
	TextDrawAlignment(inv_global[8], 1);
	TextDrawColor(inv_global[8], 0x00000096);
	TextDrawUseBox(inv_global[8], 0);
	TextDrawBoxColor(inv_global[8], 0x80808080);
	TextDrawSetShadow(inv_global[8], 0);
	TextDrawSetOutline(inv_global[8], 0);
	TextDrawBackgroundColor(inv_global[8], 0x000000FF);
	TextDrawFont(inv_global[8], 4);
	TextDrawSetProportional(inv_global[8], 0);
	TextDrawSetSelectable(inv_global[8], 0);

	inv_global[7] = TextDrawCreate(113.681839, 321.750031, "bg_scroll1");
	TextDrawLetterSize(inv_global[7], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[7], 122.000000, 17.200005);
	TextDrawAlignment(inv_global[7], 1);
	TextDrawColor(inv_global[7], 0x00000092);
	TextDrawUseBox(inv_global[7], 0);
	TextDrawBoxColor(inv_global[7], 0x80808080);
	TextDrawSetShadow(inv_global[7], 0);
	TextDrawSetOutline(inv_global[7], 0);
	TextDrawBackgroundColor(inv_global[7], 0x00000000);
	TextDrawFont(inv_global[7], 5);
	TextDrawSetProportional(inv_global[7], 0);
	TextDrawSetSelectable(inv_global[7], 0);
	TextDrawSetPreviewModel(inv_global[7], 2730);
	TextDrawSetPreviewRot(inv_global[7], 0.000000, 0.000000, 0.000000, 1.000000);

	inv_global[6] = TextDrawCreate(61.043022, 412.249939, "bg_scroll2");
	TextDrawLetterSize(inv_global[6], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[6], 118.000000, 19.000000);
	TextDrawAlignment(inv_global[6], 1);
	TextDrawColor(inv_global[6], 0x00000092);
	TextDrawUseBox(inv_global[6], 0);
	TextDrawBoxColor(inv_global[6], 0x80808080);
	TextDrawSetShadow(inv_global[6], 0);
	TextDrawSetOutline(inv_global[6], 0);
	TextDrawBackgroundColor(inv_global[6], 0x00000000);
	TextDrawFont(inv_global[6], 5);
	TextDrawSetProportional(inv_global[6], 0);
	TextDrawSetSelectable(inv_global[6], 0);
	TextDrawSetPreviewModel(inv_global[6], 2730);
	TextDrawSetPreviewRot(inv_global[6], 0.000000, 0.000000, 0.000000, 1.000000);

	inv_global[5] = TextDrawCreate(143.900742, 322.699982, "click_<");
	TextDrawLetterSize(inv_global[5], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[5], 14.000000, 15.000000);
	TextDrawAlignment(inv_global[5], 1);
	TextDrawColor(inv_global[5], 0x808080FF);
	TextDrawUseBox(inv_global[5], 0);
	TextDrawBoxColor(inv_global[5], 0x80808080);
	TextDrawSetShadow(inv_global[5], 0);
	TextDrawSetOutline(inv_global[5], 0);
	TextDrawBackgroundColor(inv_global[5], 0x00000000);
	TextDrawFont(inv_global[5], 5);
	TextDrawSetProportional(inv_global[5], 0);
	TextDrawSetSelectable(inv_global[5], 1);
	TextDrawSetPreviewModel(inv_global[5], 1318);
	TextDrawSetPreviewRot(inv_global[5], 0.000000, 270.000000, 270.000000, 1.000000);

	inv_global[4] = TextDrawCreate(191.401855, 322.699982, "click_>");
	TextDrawLetterSize(inv_global[4], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[4], 14.000000, 15.000000);
	TextDrawAlignment(inv_global[4], 1);
	TextDrawColor(inv_global[4], 0x808080FF);
	TextDrawUseBox(inv_global[4], 0);
	TextDrawBoxColor(inv_global[4], 0x80808080);
	TextDrawSetShadow(inv_global[4], 0);
	TextDrawSetOutline(inv_global[4], 0);
	TextDrawBackgroundColor(inv_global[4], 0x00000000);
	TextDrawFont(inv_global[4], 5);
	TextDrawSetProportional(inv_global[4], 0);
	TextDrawSetSelectable(inv_global[4], 1);
	TextDrawSetPreviewModel(inv_global[4], 1318);
	TextDrawSetPreviewRot(inv_global[4], 0.000000, 90.000000, 270.000000, 1.000000);

	inv_global[3] = TextDrawCreate(89.392220, 413.883392, "click_<");
	TextDrawLetterSize(inv_global[3], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[3], 14.000000, 15.000000);
	TextDrawAlignment(inv_global[3], 1);
	TextDrawColor(inv_global[3], 0x808080FF);
	TextDrawUseBox(inv_global[3], 0);
	TextDrawBoxColor(inv_global[3], 0x80808080);
	TextDrawSetShadow(inv_global[3], 0);
	TextDrawSetOutline(inv_global[3], 0);
	TextDrawBackgroundColor(inv_global[3], 0x00000000);
	TextDrawFont(inv_global[3], 5);
	TextDrawSetProportional(inv_global[3], 0);
	TextDrawSetSelectable(inv_global[3], 1);
	TextDrawSetPreviewModel(inv_global[3], 1318);
	TextDrawSetPreviewRot(inv_global[3], 0.000000, 270.000000, 270.000000, 1.000000);

	inv_global[2] = TextDrawCreate(136.892899, 413.883392, "click_>");
	TextDrawLetterSize(inv_global[2], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[2], 14.000000, 15.000000);
	TextDrawAlignment(inv_global[2], 1);
	TextDrawColor(inv_global[2], 0x808080FF);
	TextDrawUseBox(inv_global[2], 0);
	TextDrawBoxColor(inv_global[2], 0x80808080);
	TextDrawSetShadow(inv_global[2], 0);
	TextDrawSetOutline(inv_global[2], 0);
	TextDrawBackgroundColor(inv_global[2], 0x00000000);
	TextDrawFont(inv_global[2], 5);
	TextDrawSetProportional(inv_global[2], 0);
	TextDrawSetSelectable(inv_global[2], 1);
	TextDrawSetPreviewModel(inv_global[2], 1318);
	TextDrawSetPreviewRot(inv_global[2], 0.000000, 90.000000, 270.000000, 1.000000);

	inv_global[1] = TextDrawCreate(34.487564, 187.666687, "hud:radar_girlfriend");
	TextDrawLetterSize(inv_global[1], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[1], 16.000000, 16.000000);
	TextDrawAlignment(inv_global[1], 1);
	TextDrawColor(inv_global[1], 0xFFFFFFC2);
	TextDrawUseBox(inv_global[1], 0);
	TextDrawBoxColor(inv_global[1], 0x80808080);
	TextDrawSetShadow(inv_global[1], 0);
	TextDrawSetOutline(inv_global[1], 0);
	TextDrawBackgroundColor(inv_global[1], 0x000000FF);
	TextDrawFont(inv_global[1], 4);
	TextDrawSetProportional(inv_global[1], 0);
	TextDrawSetSelectable(inv_global[1], 0);

	inv_global[0] = TextDrawCreate(34.956085, 220.916626, "hud:radar_dateFood");
	TextDrawLetterSize(inv_global[0], 0.480000, 1.120000);
	TextDrawTextSize(inv_global[0], 14.000000, 12.000000);
	TextDrawAlignment(inv_global[0], 1);
	TextDrawColor(inv_global[0], 0xFFFFFFFF);
	TextDrawUseBox(inv_global[0], 0);
	TextDrawBoxColor(inv_global[0], 0x80808080);
	TextDrawSetShadow(inv_global[0], 0);
	TextDrawSetOutline(inv_global[0], 0);
	TextDrawBackgroundColor(inv_global[0], 0x000000FF);
	TextDrawFont(inv_global[0], 4);
	TextDrawSetProportional(inv_global[0], 0);
	TextDrawSetSelectable(inv_global[0], 0);
	/* -------------------------------------------- */

	/* ----------------- LOGO----------------- */
	
	/* ---------------------------------------- */

	CheatPanel[0] = TextDrawCreate(644.666503, 435.562164, "usebox");
	TextDrawLetterSize(CheatPanel[0], 0.000000, 1.010738);
	TextDrawTextSize(CheatPanel[0], 457.110839, 0.000000);
	TextDrawAlignment(CheatPanel[0], 1);
	TextDrawColor(CheatPanel[0], 0);
	TextDrawUseBox(CheatPanel[0], true);
	TextDrawBoxColor(CheatPanel[0], 471604479);
	TextDrawSetShadow(CheatPanel[0], 0);
	TextDrawSetOutline(CheatPanel[0], 0);
	TextDrawFont(CheatPanel[0], 0);

	CheatPanel[1] = TextDrawCreate(484.777862, 435.566650, "usebox");
	TextDrawLetterSize(CheatPanel[1], 0.000000, 1.010738);
	TextDrawTextSize(CheatPanel[1], 457.110961, 0.000000);
	TextDrawAlignment(CheatPanel[1], 1);
	TextDrawColor(CheatPanel[1], 0);
	TextDrawUseBox(CheatPanel[1], true);
	TextDrawBoxColor(CheatPanel[1], CGOLD);
	TextDrawSetShadow(CheatPanel[1], 0);
	TextDrawSetOutline(CheatPanel[1], 0);
	TextDrawFont(CheatPanel[1], 1);

	CheatPanel[2] = TextDrawCreate(460.999816, 436.057586, "CHECK");
	TextDrawLetterSize(CheatPanel[2], 0.158000, 0.918043);
	TextDrawAlignment(CheatPanel[2], 1);
	TextDrawColor(CheatPanel[2], -1);
	TextDrawUseBox(CheatPanel[2], true);
	TextDrawBoxColor(CheatPanel[2], 0);
	TextDrawSetShadow(CheatPanel[2], 0);
	TextDrawSetOutline(CheatPanel[2], 0);
	TextDrawBackgroundColor(CheatPanel[2], 51);
	TextDrawFont(CheatPanel[2], 2);
	TextDrawSetProportional(CheatPanel[2], 1);

	for(new i;i<10;i++) ChetInfo[i][cheatid1]=-1;
	new Float:DrawPos = 485.111267;
	Cheat1 = 0;
	for(new i;i<10;i++) {
		if(i > 0) DrawPos+=16.0;
		CheatText[i] = TextDrawCreate(DrawPos, 435.564666,"-");
		TextDrawColor(CheatText[i], CGOLD);
		TextDrawSetShadow(CheatText[i], 0);
		TextDrawFont(CheatText[i], 2);
		TextDrawSetOutline(CheatText[i], 0);
		TextDrawLetterSize(CheatText[i],0.161109, 0.997685);
		TextDrawAlignment(CheatText[i], 1);
		TextDrawSetProportional(CheatText[i], 1);
	}
	return 1;
}
stock PayChecks(i) {
	if(!IsAGang(i) && !IsAMafia(i)) {
		if(FI[fWHITEHOUSE][fBank] < 100000) return SendOk(i,"Казна штата пуста. зарплати нет");
	}
	new nalog = 0;

	new price;
	if(PlayerInfo[i][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) price = BonusInfo[act_payday];
	else if(BonusInfo[act_select] == 2) price = BonusInfo[act_payday];
    else price = 1;

	switch(PlayerInfo[i][pMember]) {
		case fLSPD,fSFPD,fLVPD: nalog = floatround((FracSalary[0][PlayerInfo[i][pRank]-1])/100*Nalog[0]),PlayerInfo[i][pSalary] += (FracSalary[0][PlayerInfo[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[0][PlayerInfo[i][pRank]-1]-nalog);
		case fFBI: nalog = floatround(FracSalary[1][PlayerInfo[i][pRank]-1]/100*Nalog[0]),PlayerInfo[i][pSalary] += (FracSalary[1][PlayerInfo[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[1][PlayerInfo[i][pRank]-1]-nalog);
		case fMEDICLS,fMEDICSF,fMEDICLV: nalog = floatround(FracSalary[4][PlayerInfo[i][pRank]-1]/100*Nalog[0]),PlayerInfo[i][pSalary] += (FracSalary[4][PlayerInfo[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[4][PlayerInfo[i][pRank]-1]-nalog);
		case fLSNEWS,fSFNEWS,fLVNEWS: nalog = floatround(FracSalary[5][PlayerInfo[i][pRank]-1]/100*Nalog[0]),PlayerInfo[i][pSalary] += (FracSalary[5][PlayerInfo[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[5][PlayerInfo[i][pRank]-1]-nalog);
		case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: PlayerInfo[i][pSalary] += FracSalary[7][PlayerInfo[i][pRank]-1]*price;
		case fLCN,fYAKUZA,fRM: PlayerInfo[i][pSalary] += FracSalary[6][PlayerInfo[i][pRank]-1]*price;
		case fMAYOR: nalog = floatround(FracSalary[2][PlayerInfo[i][pRank]-1]/100*Nalog[0]),PlayerInfo[i][pSalary] += (FracSalary[2][PlayerInfo[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[2][PlayerInfo[i][pRank]-1]-nalog);
		case fWHITEHOUSE: nalog = floatround(FracSalary[8][PlayerInfo[i][pRank]-1]/100*Nalog[0]),PlayerInfo[i][pSalary] += (FracSalary[8][PlayerInfo[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[8][PlayerInfo[i][pRank]-1]-nalog);
		case fARMYSF,fARMYLV: nalog = floatround(FracSalary[3][PlayerInfo[i][pRank]-1]/100*Nalog[0]),PlayerInfo[i][pSalary] += (FracSalary[3][PlayerInfo[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[3][PlayerInfo[i][pRank]-1]-nalog);
		case fINSTRUCTORS: nalog = floatround(FracSalary[9][PlayerInfo[i][pRank]-1]/100*Nalog[0]),PlayerInfo[i][pSalary] += (FracSalary[9][PlayerInfo[i][pRank]-1]-nalog)*price,FI[fWHITEHOUSE][fBank] -= floatround(FracSalary[9][PlayerInfo[i][pRank]-1]-nalog);
	}
	return 0;
}
stock PayDay() {
	load_heal();
	load_advert();
	save_other();

	condition_of_roads_ = random(3);

	for(new i = 0; i < TOTALGZ; i++) {
		if(GZInfo[i][gFrakVlad] == fBALLAS) TotalGZ[0]++;
		if(GZInfo[i][gFrakVlad] == fVAGOS) TotalGZ[1]++;
		if(GZInfo[i][gFrakVlad] == fGROVE) TotalGZ[2]++;
		if(GZInfo[i][gFrakVlad] == fAZTEC) TotalGZ[4]++;
		if(GZInfo[i][gFrakVlad] == fRIFA) TotalGZ[3]++;
	}
	FI[fBALLAS][fBank] += TotalGZ[0]*65;
	FI[fVAGOS][fBank] += TotalGZ[1]*65;
	FI[fGROVE][fBank] += TotalGZ[2]*65;
	FI[fAZTEC][fBank] += TotalGZ[4]*65;
	FI[fRIFA][fBank] += TotalGZ[3]*65;
	UpdateFraction(fBALLAS,"Bank",FI[fBALLAS][fBank]);
	UpdateFraction(fVAGOS,"Bank",FI[fVAGOS][fBank]);
	UpdateFraction(fGROVE,"Bank",FI[fGROVE][fBank]);
	UpdateFraction(fAZTEC,"Bank",FI[fAZTEC][fBank]);
	UpdateFraction(fRIFA,"Bank",FI[fRIFA][fBank]);

	BizHourTime = 0;

	new bool:newday, day = GetDayNumber(), h, m, s;
	if(gCurDay != day)	{gCurDay = day; newday = true;}
	gettime(h,m,s);
	SetWorldTime(h);
	if(newday) {
		for(new i = 0; i < gBusinessCount; i ++) {
			if(gBusiness[i][bizzOwnerID] == 0) continue;
			bizz_update(i);
		}
		for(new i = 0; i < gHotelCount; i ++) {
			if(gHotels[i][hotelOwnerID] == 0) continue;
			gHotels[i][hotelBankDay] = 0,gHotels[i][hotelVisitors] = 0,SaveHotels(i);
		}
		for(new i = 1;i < MAX_FRACTIONS;i ++) {
			FI[i][fBankCash] = 0;
			mysql_pquery(connects, "UPDATE `fractions` SET `BankCash` = '0'", "", "");
		}
		new saturday = 1310155200, w = gettime(), day_week;
		while(w - saturday > 60 * 60 * 24) {
			w -= 60 * 60 * 24;
			day_week ++;
		}
		while(day_week >= 7) day_week -= 7;
		if(day_week == 1) {
			gangtops();
		}
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;

			if(PlayerInfo[i][pAdmin] > 0 && dostup[i] == 1 || gAdmin[i][7] == 1) {
				static const Names_Days[7][22] = {"online_saturday","online_sunday","online_monday","online_tuesday","online_wednesday","online_thursday","online_friday"};

				new query[256];
				format(query,sizeof(query),"UPDATE `admin` SET `%s` = '%d', `kick` = '%d', `ban` = '%d', `mute` = '%d', `pm` = '%d', `warn` = '%d', `jail` = '%d',`vig`='%d',`blockadmin`='%d',`rep`='%d',online_status = '0' WHERE `Name` = '%s' LIMIT 1",Names_Days[day_week], gAdminTime[i],gAdmin[i][0],gAdmin[i][1],gAdmin[i][2],gAdmin[i][3],gAdmin[i][4],gAdmin[i][5],gAdmin[i][6],gAdmin[i][7],gAdmin[i][8],player_name[i]);
				mysql_pquery(connects, query, "", "");
				gAdminTime[i] = 0;
			}

			if(!PlayerInfo[i][bizz_lcash]) continue;
			PlayerInfo[i][bizz_lcash] = 0;
		}
		mysql_pquery(connects, "UPDATE `accounts` SET `bizz_lcash` = '0'", "", "");
	}
	for(new i = 0; i < gHouseCount; i ++) {
		if(gHouses[i][houseOwnerID] == 0) continue;
		gHouses[i][houseRob] = false;
	}

	if(FI[fARMYLV][fMats] < 0) FI[fARMYLV][fMats] = 0;
	if(FI[fARMYSF][fMats] < 0) FI[fARMYSF][fMats] = 0;
	new string[128];
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pPlayTime][0] < 20) {
			SendClientMessage(i,COLOR_LIGHTRED, "Для отримання зарплати необхідно знаходитися в грі мінімум 20 хвилин");
			continue;
		}
		if(!PlayerInfo[i][pAdmin] && PlayerInfo[i][pRank] && PlayerInfo[i][pMember] && start_work[i]) PayChecks(i);
		if(!PlayerInfo[i][pVips] || PlayerInfo[i][pVips] == VIP_KING) {
			if(PlayerInfo[i][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) PlayerInfo[i][pExp] += BonusInfo[act_exp];
			else if(BonusInfo[act_select] == 2) PlayerInfo[i][pExp] += BonusInfo[act_exp];
		    else PlayerInfo[i][pExp] += 1;
		}
		else PlayerInfo[i][pExp] += vip_status[PlayerInfo[i][pVips]][vip_payday];

		SendClientMessage(i, COLOR_BLUE, "[БАНКІВСЬКИЙ ЧЕК]");
		SendClientMessage(i, COLOR_WHITE, "=======================");

		format(string,sizeof(string),"Баланс сот.звязку: "GREEN"$%i", PlayerInfo[i][pMobile]);
		SendClientMessage(i,-1,string);

		if(PlayerInfo[i][pVips]) {
			new zp = PlayerInfo[i][pSalary]/100*vip_status[PlayerInfo[i][pVips]][vip_percent_job];
			PlayerInfo[i][pSalary] += zp;
		}

		format(string, sizeof(string), "Зарплата: "GREEN"$%i", PlayerInfo[i][pSalary]);
		SendClientMessage(i,-1, string);

		if(PlayerInfo[i][pAdmin] > 0) {
			format(string, sizeof(string), "Адмін зарплата: "GREEN"$%i", 15000);
			SendClientMessage(i,-1, string);
			PlayerInfo[i][pBank] += 15000;
		}
		if(PlayerInfo[i][pHelper] > 0) {
			format(string, sizeof(string), "Game Support's зарплата: "GREEN"$%i", 4000);
			SendClientMessage(i,-1, string);
			PlayerInfo[i][pBank] += 4000;
		}

		if(IsAArm(i) || IsACop(i) || IsANews(i) || PlayerInfo[i][pMember] == fINSTRUCTORS || PlayerInfo[i][pMember] == fWHITEHOUSE || PlayerInfo[i][pMember] == fMAYOR) {
			format(string, sizeof(string), "Налог державі: "GREEN"%d%s", Nalog[0],"%%");
			SendClientMessage(i,-1, string);
		} 

		PlayerInfo[i][pBank] += PlayerInfo[i][pSalary];
		PlayerInfo[i][pSalary] = 0;

		format(string,sizeof(string),"Баланс: "GREEN"$%i",PlayerInfo[i][pBank]);
		SendClientMessage(i,-1,string);
		if(PlayerInfo[i][pLevel] >= Nalog[1]) {
			format(string,sizeof(string),"Пенсія: "GREEN"$%i",Nalog[2]);
			SendClientMessage(i,-1,string);
			PlayerInfo[i][pBank] += Nalog[2];
		}
  		SendClientMessage(i,COLOR_WHITE, "=======================");
		if(PlayerInfo[i][pExp] >= (PlayerInfo[i][pLevel])*6) {
			PlayerInfo[i][pLevel] += 1;
			PlayerInfo[i][pExp] = 0;
			DollahScoreUpdate(i); 
			SendClientMessage(i, CGOLD, "Вітаємо! Ваш рівень підвищений");
			if(PlayerInfo[i][pVips] != VIP_NONE && PlayerInfo[i][pVips] != VIP_KING) {
				GiveMoney(i,vip_status[PlayerInfo[i][pVips]][vip_lvl],"VIP lvl UP");
			}
		}

		PlayerInfo[i][pPlayTime][0] = 0;
		PlayerInfo[i][pZakonp]++;
		if(PlayerInfo[i][pZakonp] > 100) PlayerInfo[i][pZakonp] = 100;
		if(PlayerInfo[i][pSearch] >= 1) {
			PlayerInfo[i][pSearch] -= vip_status[PlayerInfo[i][pVips]][vip_search];
			if(PlayerInfo[i][pSearch] < 0) PlayerInfo[i][pSearch] = 0;
			SetPlayerWantedLevel(i, PlayerInfo[i][pSearch]);
		}
		SaveAccount(i);
		if(PlayerInfo[i][pLevel] >= 4 && PlayerInfo[i][pMPromo]) {
			new price;
			if(PlayerInfo[i][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) price = BonusInfo[act_promocode];
			else if(BonusInfo[act_select] == 2) price = BonusInfo[act_promocode];
		    else price = 1;

			new str[128];
			format(str, sizeof(str), "Вам было зачислено: "ORANGE"$%d{f6f6d9} за введённый ранее промокод",PlayerInfo[i][pMPromo]*price);
			SendOk(i,str);
			GiveMoney(i,PlayerInfo[i][pMPromo]*price,"промокод");
			PlayerInfo[i][pMPromo] = 0;
			UpdatePlayerData(i,"pMPromo",0);
		}
		if(PlayerInfo[i][pLevel] >= 4 && !PlayerInfo[i][pDrugInv]) {
			PlayerInfo[i][pDrugInv] = 1;
			UpdatePlayerData(i,"drunginv",1);
			new query[128];
			format(query, sizeof(query), "SELECT pDrug FROM `"TABLE_ACCOUNTS"` WHERE pID = '%d'",PlayerInfo[i][pID]);
			mysql_tquery(connects,query,"reg_friend","i",i);
		}
		if(PlayerInfo[i][pFamily]) {
			if((PlayerInfo[i][pGoogle] && PlayerInfo[i][pRank] == FI[PlayerInfo[i][pMember]][fInviteRang] && IsAGang(i)) || (PlayerInfo[i][pGoogle] && PlayerInfo[i][pRank] == FI[PlayerInfo[i][pMember]][fInviteRang] && IsAMafia(i))) reputation_family(PlayerInfo[i][pFamily]-1,2);
			if(PlayerInfo[i][pGoogle] && PlayerInfo[i][pRank] == FI[PlayerInfo[i][pMember]][fInviteRang] && !IsAGang(i) && !IsAMafia(i)) reputation_family(PlayerInfo[i][pFamily]-1,3);
			if(PlayerInfo[i][pLeader]) reputation_family(PlayerInfo[i][pFamily]-1,4);
			if(PlayerInfo[i][pAdmin]) reputation_family(PlayerInfo[i][pFamily]-1,5);
			if(PlayerInfo[i][pBusiness]) reputation_family(PlayerInfo[i][pFamily]-1,1);
			if(PlayerInfo[i][pHotel]) reputation_family(PlayerInfo[i][pFamily]-1,2);
			if(PlayerInfo[i][pAirport]) reputation_family(PlayerInfo[i][pFamily]-1,3);
			if(PlayerInfo[i][pVips]) reputation_family(PlayerInfo[i][pFamily]-1,vip_status[PlayerInfo[i][pVips]][vip_fam_point]);
		}
	}
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
	SendClientMessageToAll(COLOR_YELLOW,"Список доступних вакансій: "W"/vacancy");

	return true;
}
stock split(const strsrc[], strdest[][], delimiter) {
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)) {
		if(strsrc[i] == delimiter || i == strlen(strsrc)) {
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return true;
}
stock AdmMSG(color,const str[],level) {
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
        if(PlayerInfo[i][pAdmin] < level || !dostup[i]) continue;
		if(!PlayerInfo[i][pAdmMSG]) continue;
        SendClientMessage(i, color, str);
    }
}
stock SendTeamMessage(color, const string[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!start_work[i]) continue;
		if(!PlayerInfo[i][pSettings][1]) continue;
		if(!IsACop(i)) continue;
		SendClientMessage(i, color, string);
	}
	return true;
}
stock SendDepMessage(color, const string[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!start_work[i]) continue;
		if(!PlayerInfo[i][pSettings][1]) continue;
		if(IsACop(i) || IsAArm(i) || IsAMedic(i) || IsANews(i) || IsAMayor(i) || PlayerInfo[i][pMember] == fINSTRUCTORS || PlayerInfo[i][pMember] == fWHITEHOUSE) {
			SendClientMessage(i, color, string);
		}
	}
	return true;
}
stock SendRadioMessage(member, color, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pSettings][1]) {
			if((PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member) && start_work[i]) SendClientMessage(i, color, str);
		}
	}
}
stock SendFamilyMessage(family, color, const str[]) {
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
        if(start_work[i]) {
            if(PlayerInfo[i][pSettings][1]) {
                if(PlayerInfo[i][pMember] == family) {
                    SendClientMessage(i, color, str);
                }
            }
        }
    }
}
stock SendGSMessage(color, const str[]) {
    foreach(new i:Player) {
	   if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
       if(!PlayerInfo[i][pHelper] || !TI[i][tHelperDuty]) continue;
       SendClientMessage(i, color, str);
    }
}
stock SendDJMessage(color, const str[]) {
    foreach(new i:Player) {
	   if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
       if(!DJlvl[i]) continue;
       SendClientMessage(i, color, str);
    }
}
stock SendAdminMessage(color, const str[]) {
    foreach(new i:Player) {
	   if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
       if(!PlayerInfo[i][pAdmin] || !dostup[i]) continue;
       SendClientMessage(i, color, str);
    }
}
stock BizzMSG(bizz, color, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][bizz_work] != bizz) continue;
		if(!PlayerInfo[i][pSettings][3]) continue;
		SendClientMessage(i, color, str);
    }
}
stock FamMSG(fam, const str[]) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pFamily] != fam) continue;
		SendClientMessage(i, FamilyColorG[gFamily[fam-1][famColor]], str);
    }
}
CMD:referals(playerid, params[]) {
    new string[1024], Name[24], Level,query[156];
    format(query, sizeof(query), "SELECT `Name`, `pLevel` FROM `accounts` WHERE `pDrug` = '%s' ORDER BY `pLevel` DESC LIMIT 10", player_name[playerid]);
	new Cache:result = mysql_query(connects, query);
	new rows;
	string[0] = 0; FirstReferal[playerid] = 0;
   	cache_get_row_count(rows);
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", Name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pLevel",Level);
			if(Level < 4) format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "NO"%d LEVEL\n", string, i+1, Name, Level);
			else format(string, sizeof(string), "%s"ORANGE"%i."W" %s - "GREEN"%d LEVEL\n", string, i+1, Name, Level);
		}
		if(!D(playerid, D_REFERALS, 0, "Приглашенные", string, "Далі", "Назад")) ErrorMessage(playerid, "Недоступно, попробуйте повторить заного");
	}
	else ErrorMessage(playerid,"Вас никто не указывал как пригласившего на сервер");
	cache_delete(result);
	return true;
}
CMD:areferals(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new text = strlen(params);
	if(!text) return SendEsp(playerid, "/areferals [Nick Name]");
	if(text < 3 || text > 24) return ErrorMessage(playerid, "От 3 до 24 символов");
	new query[156];
	format(query,sizeof(query),"SELECT `Name`,`pLevel`,`pIpReg` FROM `accounts` WHERE `pDrug` = '%s'", params);
	mysql_pquery(connects, query, "all_referals", "is", playerid, params);
	return 1;
}
CMD:taxilist(playerid) {
	if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Ви не водій таксі");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != PlayerInfo[playerid][bizz_work]) return ErrorMessage(playerid,"Ви повинні бути за рулем таксі");
	new string[650],str[128],number = 0;
	strcat(string,"№. Имя\tВызываемый класс\tНомер телефона\tРасстояние\n");
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPVarInt(i,"taxi_bizz") != PlayerInfo[playerid][bizz_work]) continue;
		switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
			case 426,438: if(GetPVarInt(i,"taxi_class") != 1) continue;
			case 450,550: if(GetPVarInt(i,"taxi_class") != 2) continue;
			case 560,580: if(GetPVarInt(i,"taxi_class") != 4) continue;
			case 483: if(GetPVarInt(i,"taxi_class") != 3) continue;
		}
		number++;
		format(str,sizeof(str),""ORANGE"%d. "W"%s\t%s\t%d\t%.1f\n",number,player_name[i],taxi_class[GetPVarInt(i,"taxi_class")-1],PlayerInfo[i][pPhone],GetDistanceBetweenPlayers(i,playerid)),strcat(string,str);
	}
	if(!number) return ErrorMessage(playerid,"Нет доступных заказов");
	D(playerid, D_TAXIST, DSTH, "Заказы", string, "Далі", "Закрити");
	return 1;
}
CMD:count(playerid) {
	if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Ви не водій таксі");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != PlayerInfo[playerid][bizz_work]) return ErrorMessage(playerid,"Ви повинні бути за рулем таксі");
	new veh = GetPlayerVehicleID(playerid),id = 0,string[200],str[56];
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!IsPlayerInVehicle(i,veh)) continue;
		if(GetPlayerVehicleSeat(i) == 0) continue;
		id++;
		format(str,sizeof(str),""ORANGE"%d. "W"%s\n",id,player_name[i]),strcat(string,str);
	}
	if(!id) return ErrorMessage(playerid,"В автомобиле нет пассажиров");
	D(playerid, D_TAXI_COUNT, DSL, ""YELLOW"Список пассажиров", string, "Прийняти", "Закрити");
	return 1;
}
CMD:dice(playerid, params[]) {
	if(!PlayerToPoint(2.5,playerid,2080.7615, 1710.6829, 1113.5668) &&
		!PlayerToPoint(2.5,playerid,2073.6392, 1710.6829, 1113.5668) &&
		!PlayerToPoint(2.5,playerid,2067.1243, 1710.6829, 1113.5668)) return ErrorMessage(playerid, "Ви не у стола для ігри 1x1");
	if(PlayerInfo[playerid][pAdmin] >= 1) return ErrorMessage(playerid,"РЕПОРТЫ ЮЗАЙТЕ");
	if(sscanf(params, "ud", params[0],params[1])) return SendEsp(playerid, "/dice [id] [ставка]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pAdmin] >= 1) return ErrorMessage(playerid,"Адміністратору нельзя предложить играть");
	if(params[1] < 1000 || params[1] > 1000000) return ErrorMessage(playerid, "От $1000 до $1.000.000");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(6.0, playerid, params[0])) return ErrorMessage(playerid,"Гравець далеко от Вас");
	if(TI[params[0]][tDiceClosed]) return ErrorMessage(playerid, "Цей гравець уже играет с кем то");
	if(GetPlayerMoneyEx(playerid) < params[1]) return ErrorMessage(playerid, "У Вас недостаточно коштів");
	if(GetPlayerMoneyEx(params[0]) < params[1]) return ErrorMessage(playerid, "У гравця недостаточно коштів");
	if(TI[playerid][tDiceTime] > unix) return ErrorMessage(playerid, "Можно играть 1 раз в 10 секунд");  
	if(TI[params[0]][tDiceTime] > unix) return ErrorMessage(playerid, "Гравець недавно играл. Можно играть 1 раз в 10 секунд");    
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) return ErrorMessage(playerid,"Не можна предлагать ставку, пока не примите/отклоните запрос на гру в кости (Y N)");

	new string[144];

	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам бросить кости. Ставка: "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}бросить кости. Ставка: "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);

	TI[params[0]][tDiceID] = playerid;
	TI[playerid][tDiceIDs] = params[0];
	TI[params[0]][tDiceMoney] = params[1];

	TI[playerid][tDiceClosed] = true;
	return true;
}

CMD:time(playerid, params[]) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	new string[800];
	if(PlayerInfo[playerid][pFMute] > 0) {
		format(string, 128, "Заглушка: "YELLOW"%d секунд", PlayerInfo[playerid][pFMute]);
		SendOk(playerid, string);
	}
	if(PlayerInfo[playerid][pMute] > 0) {
		format(string, 128, "Осталось молчать: "YELLOW"%d секунд", PlayerInfo[playerid][pMute]);
		SendOk(playerid, string);
	}
	if(PlayerInfo[playerid][pJailTime] > 0) {
		format(string, 128, "Осталось сидеть: "YELLOW"%d секунд", PlayerInfo[playerid][pJailTime]);
		SendUse(playerid, string);
	}
	if(GetPVarInt(playerid,"comp_club") > 0) {
		format(string, 128, "Осталось играть в комп. клубе: "YELLOW"%d секунд", GetPVarInt(playerid,"comp_club")/3600);
		SendUse(playerid, string);
	}
	if(PlayerInfo[playerid][pHelper]) {
		format(string, 128, "Количество ответов: %d ", PlayerInfo[playerid][pAsk]);
		SendUse(playerid, string);
	}
	if(!PlayerInfo[playerid][pWatch]) return ErrorMessage(playerid,"У вас немає часов. Приобрести их можно в 24-7");
	new hour, minuite, second, year, month, day, saturday = 1310155200, w = gettime(), day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24) {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	static const Names_Months[12][12] = {"січень","лютий","березнь","квітень","травень","червень","липень","серпень","вересень","жовтень","листопад","грудень"};
    static const Names_Days[7][12] = {"субота","неділя","понеділок","вівторок","середа","четвер","п'ятниця"};
    new time_rulet;
    if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
    	time_rulet = vip_status[PlayerInfo[playerid][pVips]][vip_rulet]-PlayerInfo[playerid][pPlayTime][1];
    }
    else time_rulet = BonusInfo[act_timerullet]-PlayerInfo[playerid][pPlayTime][1];
    format(string, sizeof(string), "\
		"W"Поточний час: "YELLOW"%02d:%02d\n\
		"W"Сьогоднішня дата: {33AA33}%s, %d %s %04d \n\n\
		"W"Час в грі за годину:\t\t"YELLOW"%d мин\n\
		"W"Час в грі за сьогодні:\t"YELLOW"%s\n\
		"W"Час в грі за вчора:\t"YELLOW"%s\n\
		"W"AFK за сьогодні:\t\t"ORANGE"%s\n\
		"W"AFK за вчора:\t\t\t"ORANGE"%s",
		hour, minuite,
		Names_Days[day_week], day, Names_Months[month-1], year,
		PlayerInfo[playerid][pPlayTime][0],
		ConvertsCmdTime(gOnlinePlayer[playerid][0]),
		ConvertsCmdTime(gOnlinePlayer[playerid][1]),
		ConvertsCmdTime(gOnlinePlayerAFK[playerid][0]),
		ConvertsCmdTime(gOnlinePlayerAFK[playerid][1]),
		time_rulet);
	D(playerid, DIALOG_NONE, DSM, ""YELLOW"Точний час", string, "Закрити", "");

	format(string,sizeof(string),"~w~%02d:%02d:%02d~n~~b~%d-%s%d-%s%d",hour,minuite,second,day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
	GameTextForPlayer(playerid,string,5000,1);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0,1);
	if(PlayerInfo[playerid][pSex] == 1) MeAction(playerid, "поглянув на годинник");
	else MeAction(playerid, "поглянула на годинник");
	return 1;
}
alias:animlist("anims","anim");
CMD:animlist(playerid,params[]) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Не можна использовать в машине");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Не можна использовать на дуэлях");
	if(TI[playerid][tHeal]) return 1;
	if(TI[playerid][tTazer]) {
		ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1,0);
		ErrorMessage(playerid,"Ви оглушены. Дія не можлива");
		return 1;
	}
	new id;
	static const f_str[] = "1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Надеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n\
25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n\
45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться";
	new string[sizeof(f_str)];
	format(string,sizeof(string),"%s",f_str);
	if(sscanf(params,"i",id)) {
		D(playerid,D_ANIM,DSL, ""YELLOW"Список анимаций", string, "Вибрати", "Відміна");
	}
	switch(id) {
		case 0: return D(playerid,D_ANIM,DSL, ""YELLOW"Список анимаций", string, "Вибрати", "Відміна");
		case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
		case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
		case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
		case 4: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
		case 5: GoAnim(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
		case 6: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
		case 7: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
		case 8: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
		case 9: GoAnim(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
		case 10: GoAnim(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
		case 11: GoAnim(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
		case 12: GoAnim(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
		case 13: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
		case 14: GoAnim(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
		case 15: GoAnim(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
		case 16: GoAnim(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
		case 17: GoAnim(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
		case 18: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
		case 19: GoAnim(playerid,"PED","handsup",4.1,0,0,0,0,0,1);
		case 20: GoAnim(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
		case 21: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
		case 22: GoAnim(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
		case 23: GoAnim(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
		case 24: GoAnim(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
		case 25: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
		case 26: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
		case 27: GoAnim(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
		case 28: GoAnim(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
		case 29: GoAnim(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
		case 30: GoAnim(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
		case 31: GoAnim(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
		case 32: GoAnim(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
		case 33: GoAnim(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
		case 34: GoAnim(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
		case 35: GoAnim(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
		case 36: GoAnim(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
		case 37: GoAnim(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
		case 38: GoAnim(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
		case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
		case 40: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
		case 41: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
		case 42: GoAnim(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
		case 43: GoAnim(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
		case 44: GoAnim(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
		case 45: GoAnim(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
		case 46: GoAnim(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
		case 47: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
		case 48: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
		case 49: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
		case 50: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
		case 51: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
		case 52: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
		case 53: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
		case 54: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
		case 55: GoAnim(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
		case 56: GoAnim(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
		case 57: GoAnim(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
		case 58: GoAnim(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
		case 59: GoAnim(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
		case 60: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
		case 61: GoAnim(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
		case 62: GoAnim(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
		case 63: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
		case 64: GoAnim(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
		default: return 1;
	}
	SetPVarInt(playerid,"Animation", 2);
	TextDrawShowForPlayer(playerid, AnimDraw);
	return 1;
}
CMD:id(playerid, params[]) {
	new id = 0;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/id [Ник гравця]");
	SendClientMessage(playerid,COLOR_BLUE,"Гравці онлайн:");
	new string[144];
	if(!isNumeric(params)) {
		if(!IsPlayerConnected(strval(params))) return ErrorMessage(playerid,not_id);
		format(string, sizeof(string),"%s (%i) | LVL: %d | ID: %d",player_name[strval(params)],strval(params),PlayerInfo[strval(params)][pLevel],PlayerInfo[strval(params)][pID], (TI[strval(params)][tAFK] > 3) ? (""YELLOW"[AFK]"):(""));
		SendClientMessage(playerid,-1,string);
		return 1;
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(strfind(player_name[i],params, true) != -1) {
			if(id > 10) break;
			format(string, sizeof(string),"%s (%i) | LVL: %d | ID: %d",player_name[i],i,PlayerInfo[i][pLevel],PlayerInfo[i][pID],(TI[i][tAFK] > 3) ? (""YELLOW"[AFK]"):(""));
			SendClientMessage(playerid,-1,string);
			id++;
		}
	}
	return 1;
}
CMD:s(playerid,params[]) {
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(GetPVarInt(playerid,"FloodByPlayer") > unix && PlayerInfo[playerid][pExp] < 3) return ErrorMessage(playerid,"Пожалуйста подождите");
	else if(isnull(params) || strlen(params) > 100) return SendEsp(playerid, "/s [текст]");
	new string[145];
	format(string, sizeof(string), "%s[%d] кричит: %s", player_name[playerid],playerid,params);
	ProxDetector(35.0,playerid,string,COLOR_WHITE);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !TI[playerid][tCuffed]) ApplyAnimation(playerid,"ON_LOOKERS","shout_in",9000.999,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid, params, COLOR_WHITE, 60.0, 10000);
	SetPVarInt(playerid,"FloodByPlayer", unix+7);
	return 1;
}
CMD:kiss(playerid,params[]) {
	new kiss;
	if(PlayerInfo[playerid][pJailTime] > 0) return ErrorMessage(playerid, "Не можна использовать эту команду в тюрьме");
	if(GetPlayerState(playerid)!=PLAYER_STATE_ONFOOT) return 1;
	if(sscanf(params,"i",kiss)) return SendEsp(playerid, "/kiss [playerid]");
	if(kiss == playerid) return ErrorMessage(playerid, "Не можна поцеловать самого себя");
	if(!IsPlayerConnected(kiss)) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(4.0, playerid, kiss)) return ErrorMessage(playerid, "Гравець не рядом с Вами");
	if(PlayerInfo[kiss][pJailTime] > 0) return ErrorMessage(playerid, "Гравець в тюрьме");
	if(active_accept(kiss)) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");

	new string[128];

	format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} поцелуй",player_name[kiss]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""YELLOW"%s{f6f6d9} предложил(а) вам поцелуй",player_name[playerid]);
	SendUse(kiss, string);
	SendClientMessage(kiss,COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	SetPVarInt(kiss,"kiss", playerid+1);
	return 1;
}
alias:w("whisper");
CMD:w(playerid,params[]) {
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	else if(PlayerInfo[playerid][pMute] > 0) return	ErrorMessage(playerid, "У Вас бан чата");
	else if(isnull(params) || strlen(params) > 100) return SendEsp(playerid, "/w(hisper) [сообщение]");
	new string[144];
	format(string, sizeof(string), "%s[%d] шепчет: %s", player_name[playerid],playerid, params);
	SendStreamMessage(2.0, playerid, string,0x6E6E6E6E);
	SetPlayerChatBubble(playerid,params,0x6E6E6E6E,30.0,10000);
	return 1;
}
CMD:flip(playerid) {
    if(PlayerInfo[playerid][pCash] <= 0) return ErrorMessage(playerid, "У Вас недостаточно коштів");

    static const  	coin_str0[] = "подбросил(а) монетку, выпал",
                    coin_str1[] = "а \"решка\".", coin_str2[] = " \"орёл\".";

	new string[MAX_PLAYER_NAME + ( sizeof ( coin_str0 ) - 1 ) + ( sizeof ( coin_str1 ) - 1 ) + 1 ] ;

    strcat(string, coin_str0);
    strcat(string, (random(2)) ? (coin_str1) : (coin_str2));

	MeAction(playerid, string);
    return 1;
}
CMD:ame(playerid, params[]) {
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
  	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/ame [дія]");
	//MeAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:ado(playerid, params[]) {
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
  	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/ado [дія]");
	//DoAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:me(playerid, params[]) {
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/me [дія]");
	MeAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return true;
}
CMD:do(playerid, params[]) {
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/do [дія]");
	DoAction(playerid,params);
	SetPlayerChatBubble(playerid, params, COLOR_PURPLE, 13.0, 7000);
	return 1;
}
CMD:try(playerid,params[]) {
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(isnull(params) || strlen(params) > 80) return SendEsp(playerid, "/try [дія]");
	TryAction(playerid,params);
	return 1;
}
CMD:todo(playerid,params[]) {
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	new Text_[129], Deistvie_[129];
	if(sscanf(params, "p<*>s[128]s[128]", Text_,Deistvie_)) return SendEsp(playerid,"/todo [текст]*[дія]");
	new string[156];
	format(string, sizeof(string), "\""W"%s{E75480}\", - сказал %s, %s",Text_,player_name[playerid],Deistvie_);
	SendStreamMessage(15.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:b(playerid,params[]) {
    if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
    new mes[128];
    if(isnull(params) || strlen(params) > 100) return SendEsp(playerid, "/b [текст]");
	format(mes,sizeof(mes),"(( %s[%d]: %s ))",player_name[playerid],playerid,params);
	ProxDetector(15.0,playerid, mes, 0xcecf9cFF);
	return true;
}
CMD:stats(playerid, params[]) {
	ShowStats(playerid,playerid,0);
	return 1;
}
alias:skills("skill","myskills","myskill");
CMD:skills(playerid, params[]) {
    if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/skills [id гравця]");
    if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Гравець слишком далеко");
    if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(params[0] == playerid) ShowSkill(playerid,params[0]),MeAction(playerid,"переглядає свої навички зброї");
	else {
	    if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	
		new string[144];
			
		format(string, sizeof(string), ""YELLOW"%s {f6f6d9}хочет показать Вам свои навыки владения зброєю", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}показать Ваши навыки владения зброєю", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"skillss", playerid + 1);
 	}
	return 1;
}
CMD:find(playerid) {
	if(PlayerInfo[playerid][pMember] != fWHITEHOUSE) return 1;
	switch(PlayerInfo[playerid][pRank]) {
		case MINISTRE_NEWS: D(playerid, D_FIND, DSL,""YELLOW"Виберите организацию", ""YELLOW"1."W" Радиоцентр м. ЛС\n"YELLOW"2."W" Радиоцентр м. СФ\n"YELLOW"3."W" Радиоцентр м. ЛВ", "Вибрати", "Відміна");
		case MINISTRE_MEDICS: D(playerid, D_FIND, DSL,""YELLOW"Виберите организацию", ""YELLOW"1."W" Лікарня м. ЛС\n"YELLOW"2."W" Лікарня м. СФ\n"YELLOW"3."W" Лікарня м. ЛВ", "Вибрати", "Відміна");
		case MINISTRE_ARMY: D(playerid, D_FIND, DSL,""YELLOW"Виберите организацию", ""YELLOW"1."W" Армія м. СФ\n"YELLOW"2."W" Армія м. ЛВ", "Вибрати", "Відміна");
		case MINISTRE_PD: D(playerid, D_FIND, DSL,""YELLOW"Виберите организацию", ""YELLOW"1."W" Поліція м. ЛС\n"YELLOW"2."W" Поліція м. СФ\n"YELLOW"3."W" Поліція м. ЛВ\n"YELLOW"4."W" ФБР", "Вибрати", "Відміна");
		default: return 1;
	}
	return 1;
}
CMD:showall(playerid) {
	if(!PlayerInfo[playerid][pLeader] && PlayerInfo[playerid][pMember] != fWHITEHOUSE) return 1;
	if(PlayerInfo[playerid][pMember] == fWHITEHOUSE && PlayerInfo[playerid][pRank] >= MINISTRE_NEWS) {
		switch(PlayerInfo[playerid][pRank]) {
			case MINISTRE_NEWS: D(playerid, D_SHOWALL_2, DSL,""YELLOW"Виберите организацию", ""YELLOW"1."W" Радиоцентр м. ЛС\n"YELLOW"2."W" Радиоцентр м. СФ\n"YELLOW"3."W" Радиоцентр м. ЛВ", "Вибрати", "Відміна");
			case MINISTRE_MEDICS: D(playerid, D_SHOWALL_2, DSL,""YELLOW"Виберите организацию", ""YELLOW"1."W" Лікарня м. ЛС\n"YELLOW"2."W" Лікарня м. СФ\n"YELLOW"3."W" Лікарня м. ЛВ", "Вибрати", "Відміна");
			case MINISTRE_ARMY: D(playerid, D_SHOWALL_2, DSL,""YELLOW"Виберите организацию", ""YELLOW"1."W" Армія м. СФ\n"YELLOW"2."W" Армія м. ЛВ", "Вибрати", "Відміна");
			case MINISTRE_PD: D(playerid, D_SHOWALL_2, DSL,""YELLOW"Виберите организацию", ""YELLOW"1."W" Поліція м. ЛС\n"YELLOW"2."W" Поліція м. СФ\n"YELLOW"3."W" Поліція м. ЛВ\n"YELLOW"4."W" ФБР", "Вибрати", "Відміна");
			default: {
				SALLROWS[playerid] = 0;
				new query[200];
				format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i' ORDER BY `pRank` LIMIT 0, 20", PlayerInfo[playerid][pMember]);
				mysql_pquery(connects, query, "showall_callback", "i", playerid);
			}
		}
	}
	else {
		SALLROWS[playerid] = 0;
		new query[200];
		format(query,sizeof(query),"SELECT `Name`,`pRank` FROM `accounts` WHERE `pMember` = '%i' ORDER BY `pRank` LIMIT 0, 20", PlayerInfo[playerid][pMember]);
		mysql_pquery(connects, query, "showall_callback", "i", playerid);
	}
	return 1;
}
CMD:fam(playerid,params[]) {
	if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(sscanf(params, "s[128]",params[0])) return SendEsp(playerid, "/fam [текст]");
	new fam = PlayerInfo[playerid][pFamily] - 1,string[128];
	
	format(string,sizeof(string),"%s %s: %s",GetFamName(fam,PlayerInfo[playerid][pFamRank]),player_name[playerid],params[0]);
	FamMSG(fam+1,string);
	return 1;
}
CMD:finvite(playerid,params[]) {
	if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
	new string[144];
	if(PlayerInfo[playerid][pFamRank] < gFamily[PlayerInfo[playerid][pFamily]-1][famInvRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", gFamily[PlayerInfo[playerid][pFamily]-1][famInvRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/finvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pFamily]) return ErrorMessage(playerid,"Гравець состоит в семье");
	if(!ProxDetectorS(3.0, playerid,params[0])) return ErrorMessage(playerid, "Ви далеко друг от друга");

	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам вступить в сім'ю "ORANGE"%s", player_name[playerid], gFamily[PlayerInfo[playerid][pFamily]-1][famName]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}вступити в вашу сім'ю", player_name[params[0]]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"family_invite",playerid + 1);
	return 1;
}
CMD:funinvite(playerid,params[]) {
	if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
	new string[144];
	if(PlayerInfo[playerid][pFamRank] < gFamily[PlayerInfo[playerid][pFamily]-1][famUninvRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", gFamily[PlayerInfo[playerid][pFamily]-1][famUninvRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/funinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pFamily] != PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Гравець не состоит в вашій сім'ї");
	if(params[0] == playerid) return ErrorMessage(playerid, not_id);
	if(PlayerInfo[playerid][pFamRank] <= PlayerInfo[params[0]][pFamRank]) return ErrorMessage(playerid,"Ваш ранг недостатній");
	//if(!ProxDetectorS(3.0, playerid,params[0])) return ErrorMessage(playerid, "Ви далеко друг от друга");

	new fam = PlayerInfo[playerid][pFamily]-1;

	format(string,128,""W"%s{%s} выгнал Вас из сім'ї "W"%s", player_name[playerid],FamilyColor[gFamily[fam][famColor]],gFamily[fam][famName]);
	SendClientMessage(params[0],FamilyColorG[gFamily[fam][famColor]],string);
	PlayerInfo[params[0]][pFamily] = 0;
	UpdatePlayerData(params[0],"family",0);
	PlayerInfo[params[0]][pFamRank] = 0;
	UpdatePlayerData(params[0],"pFamRank",0);

	format(string,128,""W"%s{%s} выгнал "W"%s{%s} из сім'ї", player_name[playerid],FamilyColor[gFamily[fam][famColor]],player_name[params[0]],FamilyColor[gFamily[fam][famColor]]);
	FamMSG(fam+1,string);
	return 1;
}
CMD:foffuninvite(playerid,params[]) {
	if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
	new string[144],query[144],giveplayerid;
	if(PlayerInfo[playerid][pFamRank] < gFamily[PlayerInfo[playerid][pFamily]-1][famUninvRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", gFamily[PlayerInfo[playerid][pFamily]-1][famUninvRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/foffuninvite [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець онлайн");

	new member,rank;

	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", params);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid, "Цей гравець не состит в вашій сім'ї");
	cache_get_value_int(0,"family",member);
	cache_get_value_int(0,"pFamRank",rank);
	if(PlayerInfo[playerid][pFamily] == member) {
		if(PlayerInfo[playerid][pFamRank] <= rank) return ErrorMessage(playerid,"Ваш ранг недостатній");
		new query_str[128];
		format(query_str, sizeof(query_str), "UPDATE `accounts` SET family = '0',pFamRank = '0' WHERE BINARY Name = '%s'",params);
		mysql_tquery(connects,query_str);
	}
	else ErrorMessage(playerid, "Цей гравець не состит в вашій сім'ї");
	cache_delete(result);

	format(string,128,""W"%s{%s} выгнал "W"%s{%s} из сім'ї", player_name[playerid],FamilyColor[gFamily[PlayerInfo[playerid][pFamily]-1][famColor]],params,FamilyColor[gFamily[PlayerInfo[playerid][pFamily]-1][famColor]]);
	FamMSG(PlayerInfo[playerid][pFamily],string);
	return 1;
}
CMD:frang(playerid, params[]) {
	if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
	new string[512];
	if(PlayerInfo[playerid][pFamRank] < gFamily[PlayerInfo[playerid][pFamily]-1][famGiveRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", gFamily[PlayerInfo[playerid][pFamily]-1][famGiveRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/frang [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pFamRank] >= 8) return ErrorMessage(playerid, not_id);
	if(PlayerInfo[playerid][pFamily] != PlayerInfo[params[0]][pFamily]) return ErrorMessage(playerid,"Гравець не состоит в вашій сім'ї");
	if(PlayerInfo[playerid][pFamRank] <= PlayerInfo[params[0]][pFamRank]) return ErrorMessage(playerid, "Ваш ранг недостатній");

	if(PlayerInfo[playerid][pFamRank] == 8) {
		for(new i = 1; i <= 8; i++) {
			if(i>= PlayerInfo[playerid][pFamRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PlayerInfo[params[0]][pFamRank] == i) ? (""YELLOW"") : (""),GetFamName(PlayerInfo[playerid][pFamily]-1,i),i);
			D(playerid,D_FAM_RANK,DSL,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
		}
		SetPVarInt(playerid,"id_fgiverank",params[0]);
	}
	else if(PlayerInfo[playerid][pFamRank] == 8-(8-PlayerInfo[playerid][pFamRank])) {
		for(new i = 1; i <= 8; i++) {
			if(i>= PlayerInfo[playerid][pFamRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PlayerInfo[params[0]][pFamRank] == i) ? (""YELLOW"") : (""),GetFamName(PlayerInfo[playerid][pFamily]-1,i),i);
			D(playerid,D_FAM_RANK,DSL,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
		}
		SetPVarInt(playerid,"id_fgiverank",params[0]);
	}
	return 1;
}
CMD:fmenu(playerid) {
	if(!PlayerInfo[playerid][pFamily]) return ErrorMessage(playerid,"Ви не знаходитесь в сім'ї");
	family_dialog(playerid);
	return 1;
}
CMD:radio(playerid) return D(playerid, D_NEWS_SELECT_2, DSL, ""YELLOW"Эфиры", ""YELLOW"1."W" Радиоцентр LS\n"YELLOW"2."W" Радиоцентр SF\n"YELLOW"3."W" Радиоцентр LV\n"YELLOW"-"W" Выключить", "Вибрати", "Назад");
CMD:vad(playerid, params[]) {
	if(PlayerInfo[playerid][pVips] != VIP_PLATINA && PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE && PlayerInfo[playerid][pVips] != VIP_FOREVER) return 1;
	D(playerid, D_AUTONEWS, DSL, ""YELLOW"Оголошення",""YELLOW"1."W" Купити\n"YELLOW"2."W" Продати\n"YELLOW"3."W" Обменять\n"YELLOW"4."W" Услуги", "Вибрати", "Відміна");
	return 1;
}
CMD:ad(playerid, params[]) {
	if(!PlayerInfo[playerid][pPhone]) return ErrorMessage(playerid,"У вас немає телефона/SIM-карти");
	if(gAdvertCount >= MAX_ADVERT_COUNT) return ErrorMessage(playerid,"На жаль, черга на оголошення занята, спробуйте пізніше");
	if(GetPVarInt(playerid, #pAdvertTime) > gettime()) return ErrorMessage(playerid,"Не можна надсилати частіше одного оголошення в хвилину");
	if(isnull(params) || strlen(params) > 90) return SendEsp(playerid, "/ad [текст оголошення]");
	SetPVarString(playerid,"advert",params);
	new price = strlen(params) * advertise_price;
	SetPVarInt(playerid,"ad_price",price);
	
	static const f_str[] = ""W"Ціна оголошення: "ORANGE"$%d.\n"W"Ви дійсно хочете отправить оголошення?";
	new string[sizeof(f_str) +1 + (-2 + 6)];
	
	format(string,sizeof(string),f_str,price);
	D(playerid,D_ADVERT_START,DSM, ""YELLOW"Оголошення",string,"Так","Ні");
	return 1;
}
CMD:audience(playerid, params[]) {
    new radioall = 0,points[3],string[900],ratingLS = 0,ratingSF = 0,ratingLV = 0,procLS = 0, procSF = 0, procLV = 0;
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pSettings][2] == fSFNEWS) ratingSF++, radioall++;
		if(PlayerInfo[i][pSettings][2] == fLSNEWS) ratingLS++, radioall++;
		if(PlayerInfo[i][pSettings][2] == fLVNEWS) ratingLV++, radioall++;
	}
	if(!radioall) return ErrorMessage(playerid,"Никто не подключен к радиостанции");
	procLS = 100 / radioall * ratingLS;
	procSF = 100 / radioall * ratingSF;
	procLV = 100 / radioall * ratingLV;
	points[0] = 100 - procLS;
	points[1] = 100 - procSF;
	points[2] = 100 - procLV;
	format(string,sizeof(string),""W"Радиоцентр м. ЛС:\t["YELLOW"%s"W"] %i%% ("ORANGE"%i"W") человек\nРадиоцентр м. СФ:\t["YELLOW"%s"W"] %i%% ("ORANGE"%i"W") человек\nРадиоцентр м. ЛВ:\t["YELLOW"%s"W"] %i%% ("ORANGE"%i"W") человек",
	ToDevelopSkills(procLS,points[0]),procLS,ratingLS,
	ToDevelopSkills(procSF,points[1]),procSF,ratingSF,
	ToDevelopSkills(procLV,points[2]),procLV,ratingLV);
	D(playerid,DIALOG_NONE,DSM,""YELLOW"Рейтинг слушателей",string,"Закрити","");
	return true;
}
CMD:edit(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Ви не сотрудник новин");
 	if(!start_work[playerid]) return ErrorMessage(playerid, "Необхідно почати робочий день");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(PlayerInfo[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(!PlayerToPoint(3.0,playerid,766.6069,-1531.0240,1417.8180) &&
		!PlayerToPoint(3.0,playerid,766.7095,-1533.7859,1417.8180) &&
		!PlayerToPoint(3.0,playerid,766.6608,-1536.2832,1417.8180) &&
		!PlayerToPoint(3.0,playerid,766.5391,-1539.0297,1417.8180) &&
		!PlayerToPoint(3.0,playerid,759.7090,-1539.0297,1417.8180) &&
		!PlayerToPoint(3.0,playerid,759.6584,-1536.2838,1417.8180) &&
		!PlayerToPoint(3.0,playerid,759.6487,-1533.7859,1417.8180) &&
		!PlayerToPoint(3.0,playerid,759.6533,-1531.2749,1417.8180) &&
	VehicleInfo[veh][vTeam] != fLSNEWS && VehicleInfo[veh][vTeam] != fSFNEWS && VehicleInfo[veh][vTeam] != fLVNEWS) return ErrorMessage(playerid,"Необхідно находиться на рабочем месте/служебном автомобиле");
	ShowAdvertList(playerid);
	return 1;
}
CMD:ether(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Ви не сотрудник новин");
	if(PlayerInfo[playerid][pRank] < 5) return ErrorMessage(playerid, "Доступно с 5 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] == fLSNEWS || VehicleInfo[veh][vTeam] == fSFNEWS || VehicleInfo[veh][vTeam] == fLVNEWS || PlayerToPoint(5.0,playerid,779.9375,-1497.9346,1418.8450)) {
		if(!TI[playerid][tEther]) {
			TI[playerid][tEther] = true;
			SendClientMessage(playerid,COLOR_GREEN,"Ви в прямом эфире");		
			PlayerInfo[playerid][pSettings][2] = PlayerInfo[playerid][pMember];
			save_settings(playerid);
		}
		else {
			TI[playerid][tEther] = false;
			SendClientMessage(playerid,COLOR_GREEN,"Ви вышли из прямого эфира");
		}
	}
	else if(PlayerToPoint(5.0,playerid,785.3342,-1532.6215,1418.8169)) {
		new str[10];
		switch(TI[playerid][tEther]) {
			case 0: str = "Почати";
			case 1: str = "Завершить";
		}
		new string[128];
		format(string,sizeof(string),"1. %s прямой эфир\n2. Приём звонков",str);
		D(playerid,D_NEWS, DSL, ""YELLOW"Меню эфира", string, "Далі", "Відміна");
	}
	else ErrorMessage(playerid,"Ви не в офісі/службовому автомобилі");
	return 1;
}
CMD:skip(playerid) {
	if(!IsANews(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Ви не сотрудник новин");

	switch(PlayerInfo[playerid][pMember]) {
		case fLSNEWS: {
			if(calls_ether[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Никого нет на линии");
			SendClientMessage(calls_ether[0],COLOR_GREY,"Ви были отсоединены ведущим");
			PhoneStatus(calls_ether[0],false);
			TI[calls_ether[0]][tPhoneNews] = true;
			calls_ether[0] = INVALID_PLAYER_ID;
		}
		case fSFNEWS: {
			if(calls_ether[1] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Никого нет на линии");
			SendClientMessage(calls_ether[1],COLOR_GREY,"Ви были отсоединены ведущим");
			PhoneStatus(calls_ether[1],false);
			TI[calls_ether[1]][tPhoneNews] = true;
			calls_ether[1] = INVALID_PLAYER_ID;
		}
		case fLVNEWS: {
			if(calls_ether[2] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Никого нет на линии");
			SendClientMessage(calls_ether[2],COLOR_GREY,"Ви были отсоединены ведущим");
			PhoneStatus(calls_ether[2],false);
			TI[calls_ether[2]][tPhoneNews] = true;
			calls_ether[2] = INVALID_PLAYER_ID;
		}
	}
	SendClientMessage(playerid,COLOR_GREY,"Гравець отсоединен");
	return 1;
}
CMD:srace(playerid,params[]) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid,"Ви не знаходитесь в банде");
	new giveplayerid,money;
	if(sscanf(params,"dd", giveplayerid,money)) return SendEsp(playerid,"/srace [id гравця] [ставка]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви не можете предложить гонку самому себе");
	if(!IsAGang(giveplayerid)) return ErrorMessage(playerid,"Гравець не состоит в банде");
	if(!IsPlayerStream(10.0, playerid, giveplayerid) || GetPlayerVirtualWorld(giveplayerid) != GetPlayerVirtualWorld(playerid)) return ErrorMessage(playerid, "Гравець не рядом с Вами");
	if(money < 1000 || money > 50000) return ErrorMessage(playerid,"Ставка повинна бути не меньше $1.000 и не більше $50.000");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Ви не за рулем Т/С");
	if(GetPlayerState(giveplayerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Гравець не за рулем Т/С");
	if(active_accept(giveplayerid)) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");

	SetPVarInt(giveplayerid,"race_offer",playerid+1);
	TI[playerid][tRaceMoney] = TI[giveplayerid][tRaceMoney] = money;

	new string[144];

	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам уличные гонки на сумму "ORANGE"$%i", player_name[playerid], money);
	SendUse(giveplayerid, string);
	SendClientMessage(giveplayerid,COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}уличные гонки на сумму "ORANGE"$%i", player_name[giveplayerid], money);
	SendUse(playerid, string);
	return 1;
}
stock buyacces(playerid) {
	new string[512];
	format(string,sizeof(string),"%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",acces_name_all[0],acces_name_all[1],acces_name_all[2],acces_name_all[3],acces_name_all[4],acces_name_all[5],acces_name_all[6],acces_name_all[7],acces_name_all[8],acces_name_all[9],acces_name_all[10],acces_name_all[11],acces_name_all[12]);
	D(playerid, D_BUYACS, DSL,""YELLOW"Покупка аксесуаров",string, "Вибрати", "Відміна");
	return true;
}
CMD:sellfish(playerid) {
	//if(PlayerInfo[playerid][pLevel] < 99999) return ErrorMessage(playerid,"Временно недоступно");
	if(!PlayerToPoint(7.0,playerid,-396.4070,-413.7928,16.0442)) return ErrorMessage(playerid,"Ви не у склада для продажи рыбы");
	if(!PlayerInfo[playerid][pFish]) return ErrorMessage(playerid,"У вас немає рыбы");
	new string[128];
	format(string,sizeof(string),"Ви успішно продали "YELLOW"%.1f{f6f6d9} км. рыбы за "ORANGE"$%d",PlayerInfo[playerid][pFish],floatround(PlayerInfo[playerid][pFish])*160);
	SendUse(playerid,string);
	fish_sklad += PlayerInfo[playerid][pFish];
	GiveMoney(playerid,floatround(PlayerInfo[playerid][pFish])*160,"продажа рыбы");
	PlayerInfo[playerid][pFish] = 0;
	return 1;
}
CMD:fish(playerid) {
	if(!GetPVarInt(playerid,"fish_place")) return 1;
	new place = GetPVarInt(playerid,"fish_place")-1;
	if(!PlayerToKvadrat(playerid,fish_place[place][0], fish_place[place][1],fish_place[place][2],fish_place[place][3])) return ErrorMessage(playerid,"Ви не в точке для ловли рыбы");
	if(Fishing[playerid] == true) return ErrorMessage(playerid,"Ви уже ловите рыбу");
	if(PlayerInfo[playerid][pRod] == 0) return ErrorMessage(playerid,"У вас немає удочки");
	if(PlayerInfo[playerid][pRopes] == 0) return ErrorMessage(playerid,"У вас немає снастей для удочки");
	if(PlayerInfo[playerid][pWorms] == 0) return ErrorMessage(playerid,"У вас немає наживки на удочку");
	SetPlayerArmedWeapon(playerid, 0);
	if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
	TogglePlayerControllable(playerid, false);
	ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
	Fishing[playerid] = true;
	static const f_str[] = "Доступно червей: %d";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	format(string,sizeof(string),f_str,PlayerInfo[playerid][pWorms]);
	SendOk(playerid,string);
	JobTempProcess[playerid] = 7;
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	RandomYareNforJOBS(playerid);
	return 1;
}
CB: fish_player(playerid) {
	new rand_fish = random(sizeof(FishName) + 3);
	new string[150];
	TogglePlayerControllable(playerid, true);
	RemovePlayerAttachedObject(playerid, 7);
	ClearAnims(playerid);
	Fishing[playerid] = false;
	switch(rand_fish) {
		case 0..7: {
			new str[12];
			format(str,sizeof(str),"%i.%i",random(3),random(98)+1);
			new Float:fish_massa = floatstr(str);
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) fish_massa = floatround(fish_massa*BonusInfo[act_fish]);
			else if(BonusInfo[act_select] == 2) fish_massa = floatround(fish_massa*BonusInfo[act_fish]);
		    else fish_massa = floatstr(str);

			PlayerInfo[playerid][pFish] += fish_massa;
			format(string,sizeof(string),"Ви поймали рыбу - "YELLOW"%s{f6f6d9}, масса которой - "ORANGE"%.1f{f6f6d9} кг",FishName[rand_fish],fish_massa);
			SendUse(playerid,string);
			PlayerInfo[playerid][pWorms] --;
		}
		case 8..9: {
			SendOk(playerid,"Рыба сорвалась");
			PlayerInfo[playerid][pWorms] --;
		}
		default: SendOk(playerid,"Ви ничего не поймали. Наживка осталась цела");
	}
	return true;
}
stock GetNearestTrunckFuel(playerid) {
	for(new i = 0;i<gBusinessCount;i++) {
		if(gBusiness[i][bizzType] != 7) continue;
		if(PlayerToPoint(10.0,playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) return i;
	}
	return -1;
}
CMD:fill(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Ви не за рулем");
	new i = GetNearestTrunckFuel(playerid);
	if(i==-1) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	new modelid = GetVehicleModel(vehicleid) - 400;
	if(!gTransport[modelid][trFuelable]) return ErrorMessage(playerid,"ваш Т/С не має бензобака");
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(GetEngineStat(vehicleid)) return ErrorMessage(playerid,"Перед тим як заправитись, заглушіть двигун");
	if(gBusiness[i][bizzProduct] <= 0) return ErrorMessage(playerid, "На заправке нет топлива");
	static const f_str[] = "\n"W"Укажіть на скільки літрів заправити ваше Т/С:\n\nДоступно літрів в баку: {FF9968}%.0f"W"\nВместимость бака: {FF9968}%d"W"\nМожно Заправити на: {FF9968}%.0fл"W"\nВартість 1л: "ORANGE"$%d\n";
	new string[sizeof(f_str) +1 + 30];
	format(string, sizeof(string), f_str, VehicleInfo[vehicleid][vFuel],gTransport[modelid][trTank],gTransport[modelid][trTank]-VehicleInfo[vehicleid][vFuel],gBusiness[i][bizzPrice]);
	D(playerid,D_FUEL,DSI, ""YELLOW"Заправка",string,"Заправити", "Відміна");
	return 1;
}
CMD:buyfuel(playerid) {
	if(PlayerInfo[playerid][pFuel] == vip_status[PlayerInfo[playerid][pVips]][vip_fuel]) return ErrorMessage(playerid,"Вам не поместится багато канистр с бензином");
	new i = GetNearestTrunckFuel(playerid);
	if(i == -1) return ErrorMessage(playerid,"Ви повинні бути на АЗС");
	static const f_str[] = ""W"Ви собираетесь Купити канистру, вартістю: "ORANGE"$%d\n"W"С ее помощью Вы можеет Заправити свое Т/С на "YELLOW"10 литров"W"\n\n\
Ви дійсно хочете Купити канистру?";
	new string[sizeof(f_str) +1 + (-2 + 5)];
	format(string,sizeof(string),f_str,gBusiness[i][bizzPrice]*10);
	D(playerid,D_BUY_FUEL,DSM, ""YELLOW"Покупка канистры",string,"Так","Ні");
	return true;
}
CMD:fillcar(playerid, params[]) {
    if(!IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid,"Необхідно находиться в Т/С");
 	new car = GetPlayerVehicleID(playerid);
 	if(!PlayerInfo[playerid][pFuel]) return ErrorMessage(playerid, "У вас немає канистры с бензином");
	if(VehicleInfo[car][vFuel]+10 > gTransport[GetVehicleModel(car) - 400][trTank]) return ErrorMessage(playerid,"В машине, которую Ви хочете Заправити достаточно топлива");
 	SendOk(playerid, "Ви дозаправили свой автомобіль 10 литрами бензина");
 	VehicleInfo[car][vFuel] += 10;
 	PlayerInfo[playerid][pFuel] --;
	UpdatePlayerData(playerid,"pFuel",PlayerInfo[playerid][pFuel]);
 	return true;
}
CMD:buyint(playerid) {
	if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку");
	if(GetPVarInt(playerid, "buy_interior") > 0) {
		new string[128];
		format(string,sizeof(string),"\n\n"W"Ви дійсно хочете приобрести данный интерьер за "ORANGE"$%i\n\n",150000);
		return D(playerid, D_HOUSE_BUYINT_2, DSM,""YELLOW"Покупка интерьера",string, "Купити", "Відміна");
	}
	return 1;
}
CMD:fixcar(playerid) {
	if(!PlayerInfo[playerid][pRoom] && !PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку/номера в готелі");
	new string[144];
	if(PlayerInfo[playerid][pVips] != VIP_GOLD || PlayerInfo[playerid][pVips] != VIP_PLATINA || PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
		format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]\n"W"2. Автомобіль №2 "YELLOW"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
		D(playerid,D_FIXCAR,DSL,""YELLOW"Доставити транспорт",string,"Вибрати","Закрити");
	}
	else {
		format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]"W" - "ORANGE"$500\n"W"2. Автомобіль №2 "YELLOW"[%s]"W" - "ORANGE"$500",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
		D(playerid,D_FIXCAR,DSL,""YELLOW"Доставити транспорт",string,"Вибрати","Закрити");
	}
	return 1;
}
CMD:hhealme(playerid) {
	new hint = gHouses[PlayerInfo[playerid][pHouse]-1][houseHint];
	new Float:x, Float:y, Float:z;
	x = hinterior_info[hint][h_pos_exit][0];
	y = hinterior_info[hint][h_pos_exit][1];
	z = hinterior_info[hint][h_pos_exit][2];
	if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"Необхідно находиться в своём доме");
	new houseid = PlayerInfo[playerid][pHouse]-1;
	if(!gHouses[houseid][houseHealth]) return ErrorMessage(playerid, "В сейфе будинку нет аптечок");
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health + 60.0 < 160.0 ) health += 60.0;
	else health = 160.0;
	SetPlayerHealth(playerid,health);
	MeAction(playerid,"использовал(а) аптечку");
	SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	gHouses[houseid][houseHealth] -= 1;
	new query[128];
	format(query,sizeof(query),"UPDATE `houses` SET `medkit` = '%d' WHERE id = '%d'",gHouses[houseid][houseHealth],houseid+1);
	mysql_tquery(connects, query);
	new string[60];
	format(string,sizeof(string),"Доступно аптечок в доме: "W"%d",gHouses[houseid][houseHealth]);
	SendOk(playerid,string);
	return 1;
}
CMD:safe(playerid) {
	if(!PlayerInfo[playerid][pHouse]) return 1;
	new hint = gHouses[PlayerInfo[playerid][pHouse]-1][houseHint];
	new Float:x, Float:y, Float:z;
	x = hinterior_info[hint][h_pos_exit][0];
	y = hinterior_info[hint][h_pos_exit][1];
	z = hinterior_info[hint][h_pos_exit][2];
	if(!IsPlayerInRangeOfPoint(playerid,100.0,x,y,z) && GetPlayerVirtualWorld(playerid) != PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"Необхідно находиться в своём доме");
	new houseid = PlayerInfo[playerid][pHouse] - 1;
	new mes[1024];
	format(mes,sizeof(mes),""YELLOW"1."W" Наркотики "YELLOW"[%d м.]\n"YELLOW"2."W" Аптечки "YELLOW"[%d шт.]\n"YELLOW"3."W" Гроші "YELLOW"[$%d]\n"YELLOW"4."W" Sniper Rifle "YELLOW"[%d пт.]\n"YELLOW"5."W" Country Rifle "YELLOW"[%d пт.]\n"YELLOW"6."W" M4 "YELLOW"[%d пт.]\n"YELLOW"7."W" AK-47 "YELLOW"[%d пт.]\n"YELLOW"8."W" MP5 "YELLOW"[%d пт.]\n"YELLOW"9."W" Shotgun "YELLOW"[%d пт.]\n"YELLOW"10."W" Desert Eagle "YELLOW"[%d пт.]\n"YELLOW"11."W" SD Pistol "YELLOW"[%d пт.]\n"YELLOW"12."W" Baseball Bat "YELLOW"[%d шт.]",gHouses[houseid][houseDrugs],gHouses[houseid][houseHealth],gHouses[houseid][houseSafeMoney],gHouses[houseid][houseGun][0],gHouses[houseid][houseGun][1],gHouses[houseid][houseGun][2],gHouses[houseid][houseGun][3],gHouses[houseid][houseGun][4],gHouses[houseid][houseGun][5],gHouses[houseid][houseGun][6],gHouses[houseid][houseGun][7],gHouses[houseid][houseGun][8]);
	D(playerid,dSafeAction,DSL,"Сейф",mes,"Далі","Відміна");
	return 1;
}
CMD:house(playerid) {
	if(IsPlayerInRangeOfPoint(playerid, 20.0, gHouses[PlayerInfo[playerid][pHouse]-1][houseX], gHouses[PlayerInfo[playerid][pHouse]-1][houseY], gHouses[PlayerInfo[playerid][pHouse]-1][houseZ])) return ErrorMessage(playerid, "Необхідно находиться в своём доме");
	if(PlayerInfo[playerid][pTempKey] > 0) {
		D(playerid, dRentMenu, DSL, ""YELLOW"Панель жителя", "Виселиться из будинку", "Вибрати", "Закрити");
		return 1;
	}
	if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У Вас немає будинку");
	SetPVarInt( playerid, "Hpanel:HId", PlayerInfo[playerid][pHouse]-1);
	new status[24];
	if(!gHouses[PlayerInfo[playerid][pHouse]-1][houseClose]) status = ""NO"Закрити";
	else status = "{33AA33}Відкрити";
	static const f_str[] = ""YELLOW"1."W" %s"W" дом\n"YELLOW"2."W" Інформація про будинок\n"YELLOW"3."W" Покращення\n"YELLOW"4."W" Мешканці\n"YELLOW"5."W" Сейф\n"YELLOW"6."W" Гардероб\n"YELLOW"7."W" Доставити будинкушній транспорт\n"YELLOW"8."W" Продати будинкушній транспорт\n"YELLOW"9."W" Покупка інтер'єра\n"YELLOW"10."W" Відмітити будинок в GPS\n"YELLOW"11."NO" Продати будинок";
	new string[sizeof(f_str) +1 + (-2 + 24)];
	format(string,sizeof(string),f_str,status);
	return D(playerid,D_HOUSE_MENU,2,"Керування будинком",string,"Вибрати","Відміна");
}
CMD:exit(playerid) {
	if(TI[playerid][tInHouse]) {
		new houseid = TI[playerid][tSelectHouse];
		new hint = gHouses[houseid][houseHint];
		new Float:x, Float:y, Float:z;
		x = hinterior_info[hint][h_pos_exit][0];
		y = hinterior_info[hint][h_pos_exit][1];
		z = hinterior_info[hint][h_pos_exit][2];
		if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z)) {
			if(gHouses[houseid][houseImprove][2]) {
				D(playerid,D_HOUSE_EXIT,DSL,""YELLOW"Виход",""YELLOW"1."W" На улицу\n"YELLOW"2."W" В гараж","Вибрати","Відміна");
			}
			else {
				TI[playerid][tTPpick] = true;
				SetPlayerPosAC(playerid,gHouses[houseid][houseX],gHouses[houseid][houseY],gHouses[houseid][houseZ],0,0);
				SetPlayerFacingAngle(playerid,gHouses[houseid][houseR]);
				TI[playerid][tInHouse] = false;
				SetCameraBehindPlayer(playerid);
			}
		}
	}
	return 1;	
}
CMD:power(playerid) {
	if(TI[playerid][tDMArea][0]) {
	    SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_comp_x"),GetPVarFloat(playerid,"pos_comp_y"),GetPVarFloat(playerid,"pos_comp_z"),GetPVarInt(playerid,"comp_vw"),GetPVarInt(playerid,"comp_int"));
  		DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
		DMSTATUS[playerid] = Text3D:(0xFFFF);
		PlayerTextDrawHide(playerid,DmArenaTextDraw[playerid]);
		new query[156];
		format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pKills = pKills + '%d' WHERE pID = '%d'",TI[playerid][tDMArea][1],PlayerInfo[playerid][pID]);
		mysql_tquery(connects,query,"","");
		TI[playerid][tDMArea][0] = 0;
		TI[playerid][tDMArea][1] = 0;
		TI[playerid][tDMArea][2] = 0;
		if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
			A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
		}
		else SetPlayerColor(playerid,0xFFFFFF11);
		DelGun(playerid);
	}
 	else if(TI[playerid][tGunArea][0]) {
	    SetPlayerPosAC(playerid,GetPVarFloat(playerid,"pos_comp_x"),GetPVarFloat(playerid,"pos_comp_y"),GetPVarFloat(playerid,"pos_comp_z"),GetPVarInt(playerid,"comp_vw"),GetPVarInt(playerid,"comp_int"));
	 	DestroyDynamic3DTextLabel(DMSTATUS[playerid]);
		DMSTATUS[playerid] = Text3D:(0xFFFF);
		PlayerTextDrawHide(playerid,DmArenaTextDraw[playerid]);
		TI[playerid][tGunArea][0] = 0;
		TI[playerid][tGunArea][1] = 0;
		TI[playerid][tGunArea][2] = 0;
		TI[playerid][tGunArea][3] = 0;
		if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
			A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
			SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
		}
		else SetPlayerColor(playerid,0xFFFFFF11);
		DelGun(playerid);
	}
	return 1;
}
CMD:sellhouse(playerid,const params[]) {
	if(!PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку");
	new houseid = PlayerInfo[playerid][pHouse]-1;
	if(!gHouses[houseid][houseOwner]) return ErrorMessage(playerid,"Ви не являетесь владельцем будинку");
	if(!GetString(player_name[playerid],gHouses[houseid][houseOwner])) return ErrorMessage(playerid,"Ви не являетесь владельцем будинку");
	if(!PlayerToPoint(4,playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ])) return ErrorMessage(playerid, "Необхідно находиться рядом со своим будинком");
	if(!params[0]) {
		new string[156];
		format(string,sizeof(string),""W"Ви хочете продати дом государству за "ORANGE"$%d?\n\n{f6f6d9}Для продажи будинку гравцю введіть: /sellhouse [ID гравця] [ціна]",floatround(gHouses[houseid][housePrice]/100*80));
		D(playerid,D_HOUSE_SELL,DSM, ""YELLOW"Продажа будинку",string,"Так","Ні");
		return true;
	}
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid, "/sellhouse [ID гравця] [Сумма]");
	new price,price2;
	price = gHouses[houseid][housePrice];
	price2 = gHouses[houseid][housePrice]*10;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Ціна за дом не может быть меньше $%d и більше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Ви далеко друг от друга");
	if(PlayerInfo[params[0]][pHouse]) return ErrorMessage(playerid,"У гравця уже есть дом");
	if(PlayerInfo[params[0]][pRoom]) return ErrorMessage(playerid,"У гравця уже есть номер в отеле");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new string[144];
	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам Купити его дом за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}Купити Ваш дом за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"houseSeller",playerid + 1);
	SetPVarInt(playerid,"houseBuyer",params[0] + 1);
	SetPVarInt(params[0],"housePrices",params[1]);
	SetPVarInt(params[0],"houseIDs",houseid);
	return 1;
}
CMD:sellcar(playerid) {
	if(GetPVarInt(playerid,"carPokupaet")) return ErrorMessage(playerid,"У Вас активный обмен Т/С с гравцем");
	if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У вас немає Т/С");
	new string[128];
	format(string,sizeof(string),""W"1. Автомобіль №1 "YELLOW"[%s]\n"W"2. Автомобіль №2 "YELLOW"[%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
	D(playerid,D_HOUSE_CARSELL,DSL,""YELLOW"Продати будинкушний транспорт",string,"Вибрати","Закрити");
	return 1;
}
CMD:changecar(playerid,params[]) {
	if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return ErrorMessage(playerid,"У вас немає Т/С");
	new giveplayerid,car_1,car_2,price;
	if(sscanf(params, "dddd",giveplayerid,car_1,car_2,price)) {
		SendEsp(playerid, "/changecar [ID гравця] [слот авто] [слот авто гравця] [Доплата]");
		new string[144];
		format(string,sizeof(string),"Слот №1 [%s] | Слот №2 [%s]",gTransport[gPlayerCars[playerid][carModel][0]-400][trName],gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}
	if(!PlayerInfo[giveplayerid][pHouse] && !PlayerInfo[giveplayerid][pRoom]) return ErrorMessage(playerid,"У гравця нет Т/С");
	if((car_1 < 1 && car_1 > 2) || (car_2 < 1 && car_2 > 2)) return 1;
	new model = GetVehicleModel(house_car[playerid][car_1-1]);
	if(!house_car[playerid][car_1-1] || model == 481) return ErrorMessage(playerid, "Не можна предлагать на обмен BMX");
	if(!model) return ErrorMessage(playerid, "Вигоните автомобіль на улицу");
	if(price < 1 || price > 15000000) return ErrorMessage(playerid, "Не можна меньше $1 и більше $15.000.000");
	if(!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Гравець не рядом с Вами");
	if(giveplayerid == playerid) return ErrorMessage(playerid,not_id);
	
	SetPVarInt(giveplayerid,"carProdaet",playerid + 1);
	SetPVarInt(playerid,"carPokupaet",giveplayerid + 1);
	SetPVarInt(giveplayerid,"carCena",price);
	SetPVarInt(playerid,"numbercar1",car_1);
	SetPVarInt(playerid,"numbercar2",car_2);
	SetPVarInt(playerid,"sellcar_type",1);
	
	new improve[256];
	if(gPlayerCars[giveplayerid][carVehcom_1][car_2-1]) strcat(improve,"\t\t\t[Спойлер]\n");
	if(gPlayerCars[giveplayerid][carVehcom_2][car_2-1]) strcat(improve,"\t\t\t[Капот]\n");
	if(gPlayerCars[giveplayerid][carVehcom_3][car_2-1]) strcat(improve,"\t\t\t[Воздухозаборник]\n");
	if(gPlayerCars[giveplayerid][carVehcom_4][car_2-1]) strcat(improve,"\t\t\t[Боковая юбка]\n");
	if(gPlayerCars[giveplayerid][carVehcom_5][car_2-1]) strcat(improve,"\t\t\t[Фары]\n");
	if(gPlayerCars[giveplayerid][carVehcom_6][car_2-1]) strcat(improve,"\t\t\t[Нитро]\n");
	if(gPlayerCars[giveplayerid][carVehcom_7][car_2-1]) strcat(improve,"\t\t\t[Выхлопная труба]\n");
	if(gPlayerCars[giveplayerid][carVehcom_8][car_2-1]) strcat(improve,"\t\t\t[Диски]\n");
	if(gPlayerCars[giveplayerid][carVehcom_9][car_2-1]) strcat(improve,"\t\t\t[Стерео]\n");
	if(gPlayerCars[giveplayerid][carVehcom_10][car_2-1]) strcat(improve,"\t\t\t[Гидравлика]\n");
	if(gPlayerCars[giveplayerid][carVehcom_11][car_2-1]) strcat(improve,"\t\t\t[Передний бампер]\n");
	if(gPlayerCars[giveplayerid][carVehcom_12][car_2-1]) strcat(improve,"\t\t\t[Задний бампер]\n");

	new improve2[256];
	if(gPlayerCars[playerid][carVehcom_1][car_1-1]) strcat(improve2,"\t\t\t[Спойлер]\n");
	if(gPlayerCars[playerid][carVehcom_2][car_1-1]) strcat(improve2,"\t\t\t[Капот]\n");
	if(gPlayerCars[playerid][carVehcom_3][car_1-1]) strcat(improve2,"\t\t\t[Воздухозаборник]\n");
	if(gPlayerCars[playerid][carVehcom_4][car_1-1]) strcat(improve2,"\t\t\t[Боковая юбка]\n");
	if(gPlayerCars[playerid][carVehcom_5][car_1-1]) strcat(improve2,"\t\t\t[Фары]\n");
	if(gPlayerCars[playerid][carVehcom_6][car_1-1]) strcat(improve2,"\t\t\t[Нитро]\n");
	if(gPlayerCars[playerid][carVehcom_7][car_1-1]) strcat(improve2,"\t\t\t[Выхлопная труба]\n");
	if(gPlayerCars[playerid][carVehcom_8][car_1-1]) strcat(improve2,"\t\t\t[Диски]\n");
	if(gPlayerCars[playerid][carVehcom_9][car_1-1]) strcat(improve2,"\t\t\t[Стерео]\n");
	if(gPlayerCars[playerid][carVehcom_10][car_1-1]) strcat(improve2,"\t\t\t[Гидравлика]\n");
	if(gPlayerCars[playerid][carVehcom_11][car_1-1]) strcat(improve2,"\t\t\t[Передний бампер]\n");
	if(gPlayerCars[playerid][carVehcom_12][car_1-1]) strcat(improve2,"\t\t\t[Задний бампер]\n");

	new model1 = gPlayerCars[playerid][carModel][car_1-1]-400;
	new model2 = gPlayerCars[giveplayerid][carModel][car_2-1]-400;
	new classname[12];
	new classname2[12];
	GetCarClassName(gTransport[model1][trClass],classname);
	GetCarClassName(gTransport[model2][trClass],classname2);
	static const f_str[] = "\t\t\t"ORANGE"==== Інформація ====\n\n\
"YELLOW"\t\t\tВаше авто:\n\n\
"W"Марка авто: \t\t"YELLOW"%s\n\
"W"Клас: \t\t\t"YELLOW"%s\n\
"W"Пробег: \t\t"YELLOW"%.0fкм\n\
"W"Бензобак: \t\t"YELLOW"%dл\n\
"W"Расход: \t\t"YELLOW"%dл/100км\n\
"W"Тюнинг:\n\
"GREEN"%s\n\n\
"YELLOW"\t\t\tОбмен на авто:\n\n\
"W"Марка авто: \t\t"YELLOW"%s\n\
"W"Клас: \t\t\t"YELLOW"%s\n\
"W"Пробег: \t\t"YELLOW"%.0fкм\n\
"W"Бензобак: \t\t"YELLOW"%dл\n\
"W"Расход: \t\t"YELLOW"%dл/100км\n\
"W"Тюнинг:\n\
"GREEN"%s\n\n\
"NO"Ви дійсно хочете предложить обмен с его доплатой:"ORANGE" $%d?";
	new string[900];
	format(string,sizeof(string),f_str,gTransport[model1][trName],classname,gPlayerCars[playerid][carDrived][car_1-1],gTransport[model1][trTank],gTransport[model1][trConsumption],improve2,
		gTransport[model2][trName],classname2,gPlayerCars[giveplayerid][carDrived][car_2-1],gTransport[model2][trTank],gTransport[model2][trConsumption],improve,price);
	D(playerid,D_CHANGECAR,DSM, ""YELLOW"Обмен авто",string,"Так","Відміна");
	return 1;
}
CMD:free(playerid,params[]) {
	if(PlayerInfo[playerid][pMember] != fWHITEHOUSE || !start_work[playerid]) return 1;
	if(PlayerInfo[playerid][pRank] != 5) return ErrorMessage(playerid, "Ви не адвокат");
	if(sscanf(params,"dd",params[0],params[1])) return SendEsp(playerid, "/free [id] [ціна]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!PlayerInfo[params[0]][pJailTime]) return ErrorMessage(playerid, "Гравець не потребує ваших послуг");
	if(params[1] < 500 || params[1] > 10000) return ErrorMessage(playerid, "От $500 до $10.000"); 
	if(!IsPlayerStream(10.0, playerid, params[0])) return ErrorMessage(playerid, "Ви далеко від гравця");
	if(GetPVarInt(params[0],"FreePrice")) return ErrorMessage(playerid,"У гравця уже есть предложение о услугах адвоката");
	if(PlayerInfo[params[0]][pJail] == 5) return ErrorMessage(playerid,"Цей человек в ДеМоргані");
	new string[144];
	format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} выпустить его за "ORANGE"$%d",player_name[params[0]],params[1]);
	SendUse(playerid, string);
	format(string, sizeof(string), "С учётом налога государству, Вы получите: "ORANGE"$%d",floatround(params[1]/100*15));
	SendUse(playerid, string);
	format(string, sizeof(string), "Адвокат "YELLOW"%s{f6f6d9} пропонує Вам скористатися його послугами за "ORANGE"$%d",player_name[playerid],params[1]);
	SendUse(params[0], string);
	D(params[0],D_FREE,DSL,""YELLOW"Оплата послуг адвоката", "1. Готівка\n2. Банк", "Оплатить", "Відміна");
	SetPVarInt(params[0],"FreeOffer", playerid + 1);
	SetPVarInt(params[0],"FreePrice", params[1]);
	return 1;
}
CMD:bpanel(playerid) {
	if(PlayerInfo[playerid][pBusiness] < 1) return ErrorMessage(playerid,"У вас немає бізнеса");
	new bizz = PlayerInfo[playerid][pBusiness]-1;
	new status[24];
	if(gBusiness[bizz][bizzStatus]) status = ""NO"Закрити";
	else status = "{33AA33}Відкрити";
	switch(gBusiness[bizz][bizzType]) {
		case 1,2,6,7,9,17: {
			static const f_str[] = ""YELLOW"1."W" Керування касою\n"YELLOW"2."W" Заказать продукты\n"YELLOW"3."W" Інформація о бізнесе\n"YELLOW"4. %s "W"Бізнес\n"YELLOW"5."W" Улучшения\n"YELLOW"6."W" Установить цену за товар\n"YELLOW"7."W" Статистика доходов\n"YELLOW"8."NO" Продати бізнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ,DSL,""YELLOW"Керування бізнесом",string,"Вибрати","Відміна");
		}
		case 8: {
			D(playerid,D_BIZZ_5,DSL,""YELLOW"Керування бізнесом",""YELLOW"1."W" Керування касою\n"YELLOW"2."W" Заказать продукты\n"YELLOW"3."W" Інформація о бізнесе\n"YELLOW"4."W" Улучшения\n"YELLOW"5."W" Установить цену за товар\n"YELLOW"6."W" Статистика доходов\n"YELLOW"7."NO" Продати бізнес","Вибрати","Відміна");
		}
		case 5,18: {
			static const f_str[] = ""YELLOW"1."W" Керування касою\n"YELLOW"2."W" Заказать продукты\n"YELLOW"3."W" Інформація о бізнесе\n"YELLOW"4. %s "W"Бізнес\n"YELLOW"5."W" Улучшения\n"YELLOW"6."W" Статистика доходов\n"YELLOW"7."NO" Продати бізнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_4,DSL,""YELLOW"Керування бізнесом",string,"Вибрати","Відміна");
		}
		case 3,4,13: {
			static const f_str[] = ""YELLOW"1."W" Керування касою\n"YELLOW"2."W" Заказать продукты\n"YELLOW"3."W" Інформація о бізнесе\n"YELLOW"4. %s "W"Бізнес\n"YELLOW"5."W" Улучшения\n"YELLOW"6."W" Установить цену за товар\n"YELLOW"7."W" Установить цену за вход\n"YELLOW"8."W" Статистика доходов\n"YELLOW"9."NO" Продати бізнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_2,DSL,""YELLOW"Керування бізнесом",string,"Вибрати","Відміна");
		}
		case 10,12,16: {
			static const f_str[] = ""YELLOW"1."W" Керування касою\n"YELLOW"2."W" Інформація о бізнесе\n"YELLOW"3. %s "W"Бізнес\n"YELLOW"4."W" Установить цену за товар\n"YELLOW"5."W" Установить цену за вход\n"YELLOW"6."W" Статистика доходов\n"YELLOW"7."NO" Продати бізнес";
			new string[sizeof(f_str) +1 + (-2 + 24)];
			format(string,sizeof(string),f_str,status);
			D(playerid,D_BIZZ_3,DSL,""YELLOW"Керування бізнесом",string,"Вибрати","Відміна");
		}
		default: return 1;
	}
	return 1;
}
CMD:buyfueling(playerid) {
	if(PlayerInfo[playerid][pBusiness]) return ErrorMessage(playerid,"У вас уже є бізнес");
	new i = GetNearestTrunckFuel(playerid);
	if(i == -1) return ErrorMessage(playerid,"Ви повинні бути на АЗС");
	SetPVarInt(playerid,"bfillingid",i);
	new string[128];
	if(!gBusiness[i][bizzOwnerID]) {
		format(string,sizeof(string),""W"Данная АЗС продається за "ORANGE"$%d",gBusiness[i][bizzSellPrice]);
		D(playerid,D_BIZZ_BUY_FILL,DSM, ""YELLOW"Бізнес",string,"Купити","Відміна");
	}
	else ErrorMessage(playerid, "Данная Автозаправочная станция уже приобретена кем-то");
	return 1;
}
CMD:norent(playerid,params[]) {
	new plane = -1;
	for(new i=1;i<=gPlaneCount;i++) {
		if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
	}
	if(plane == -1) return ErrorMessage(playerid,"Ви не орендуєте повітряний транспорт");
	SetVehicleParamsEx(gAirplanes[plane][aCar],engine,lights,alarm,0,bonnet,boot,objective);
	SetString(gAirplanes[plane][aOwner], "State");
	gAirplanes[plane][aTime] = 0;
	UpdateDynamic3DTextLabelText(gAirplanes[plane][aText],-1,"Не арендований");
	SavePlane(plane);
	SendOk(playerid,"Ви відмовились від оренди повітряного транспорта");
	return 1;
}
CMD:p(playerid) {
	if(TI[playerid][tPhoneOnline]) return ErrorMessage(playerid,"Ваш телефон выключен");
	if(TI[playerid][tPhoneCalled] != INVALID_PLAYER_ID && TI[playerid][tPhoneCaller] != INVALID_PLAYER_ID && TI[playerid][tPhone] == false) {
		new id = TI[playerid][tPhoneCaller];
		if(TI[playerid][tPhoneCalled] != playerid) {
			TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
			TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
			PhoneStatus(playerid,false);
			return SendOk(playerid,"Телефон абонента вне зоны действия сети");
		}
		SendOk(id,"Гравець ответил на Ваш звонок");
		TI[playerid][tPhone] = true;
		TI[id][tPhone] = true;
		PhoneStatus(playerid,true);
	}
	return 1;
}
CMD:h(playerid) {
	for(new i; i<sizeof(calls_ether); i++) {
		if(calls_ether[i] == playerid) {
			SendOk(playerid,"Ви положили трубку");
			PhoneStatus(playerid,false);
			TI[calls_ether[i]][tPhoneNews] = true;
			calls_ether[i] = INVALID_PLAYER_ID;
			SendOk(calls_news[i],"Гравець положил трубку");
			return 1;
		}
	}
	if(TI[playerid][tPhoneCalled] != INVALID_PLAYER_ID && TI[playerid][tPhoneCaller] != INVALID_PLAYER_ID) {
		new id;
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];
		TI[playerid][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[playerid][tPhoneCaller] = INVALID_PLAYER_ID;
		TI[id][tPhoneCalled] = INVALID_PLAYER_ID;
		TI[id][tPhoneCaller] = INVALID_PLAYER_ID;
		SendOk(playerid,"Ви положили трубку");
		SendOk(id,"Гравець положил трубку");
		if(TI[playerid][tPhone] == true) PhoneStatus(playerid,false);
		if(TI[id][tPhone] == true) PhoneStatus(id,false);
		TI[playerid][tPhone] = false;
		TI[id][tPhone] = false;
	}
	return 1;
}
CMD:sms(playerid, params[]) {
	if(!PlayerInfo[playerid][pPhone]) return ErrorMessage(playerid,"У вас немає мобильного телефона");
	if(sscanf(params,"ds[128]",params[0],params[1])) return SendEsp(playerid, "/sms [номер телефона] [текст]");
	if(params[0] == PlayerInfo[playerid][pPhone]) return ErrorMessage(playerid,"Телефон абонента вне зоны действия сети");
	if(PlayerInfo[playerid][pVips] != VIP_PLATINA || PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
		if(PlayerInfo[playerid][pMobile] < 5) return ErrorMessage(playerid,"Недостаточно коштів на рахунку телефона");
	}
	if(GetPVarInt(playerid,"takephone")) return ErrorMessage(playerid, "У вас немає телефона");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(PlayerInfo[playerid][pMute]) return ErrorMessage(playerid,"У Вас бан чата");
	new bool:isnumber = false,string[156];
	if(params[0] == 0) return ErrorMessage(playerid, "Телефон абонента вне зоны действия сети");
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(params[0] == PlayerInfo[i][pPhone]) {
			if(TI[i][tPhoneOnline]) return ErrorMessage(playerid, "Телефон абонента выключен");
			format(string, sizeof(string), "SMS: %s » Получатель: %s(%i) [т. %i]",params[1], player_name[i],i,PlayerInfo[i][pPhone]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "SMS: %s « Отправитель: %s(%i) [т. %i]",params[1],player_name[playerid],playerid, PlayerInfo[playerid][pPhone]);
			SendClientMessage(i,  COLOR_YELLOW, string);
			SetPlayerChatBubble(playerid, "Отправил СМС", COLOR_PURPLE, 10.0, 3000);

			foreach(new x:Player) {
				if(GetPVarInt(x, "BigEarSms") != 1) continue;
				format(string, 120, "[A] SMS: %s | отправил %s(%i) гравцю %s(%d)", params[1],player_name[playerid],playerid,player_name[i],i);
				SendClientMessage(x, COLOR_GREY, string);
			}

			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			if(PlayerInfo[playerid][pVips] != VIP_PLATINA && PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE && PlayerInfo[playerid][pVips] != VIP_FOREVER) PlayerInfo[playerid][pMobile] -= 5;
			isnumber = true;
			break;
		}
	}
	if(!isnumber) return ErrorMessage(playerid, "Телефон абонента вне зоны действия сети");
	return 1;
}
alias:call("c");
CMD:call(playerid,params[]) {
	if(PlayerInfo[playerid][pPhone] == 0) return ErrorMessage(playerid,"У вас немає мобильного телефона");
	if(TI[playerid][tPhone] == true) return ErrorMessage(playerid,"Ви уже разговариваете по телефону");
	else if(GetPVarInt(playerid,"takephone")) return ErrorMessage(playerid, "У вас немає телефона");
	if(PlayerInfo[playerid][pMute]) return ErrorMessage(playerid,"У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	new number;
	if(sscanf(params,"i",number)) {
		new str[100];
		for(new i; i < MAX_FUNCBIZZ; i++) {
			if(FuncBizz[FuncBizz[i][funcbID]][funcbNum] == 0) continue;
			switch(FuncBizz[i][funcbID]) {
				case 2..4: format(str, sizeof(str), "Таксопарк %s - %d\n", FuncBizz[FuncBizz[i][funcbID]][funcbName],FuncBizz[FuncBizz[i][funcbID]][funcbNum]);
			}
			SendClientMessage(playerid,COLOR_GREY,str);
		}
		SendClientMessage(playerid,COLOR_GREY,"Служба спасения - 911");
		return 1;
	}
	if(number == PlayerInfo[playerid][pPhone]) return ErrorMessage(playerid,"Телефон абонента вне зоны действия сети");
	new ids[4];
	for(new i; i < MAX_FUNCBIZZ; i++) {
		if(FuncBizz[FuncBizz[i][funcbID]][funcbNum] == 0) continue;
		if(number == FuncBizz[FuncBizz[i][funcbID]][funcbNum]) {
			for(new x = GetVehiclePoolSize()+1; --x != 0;) {
				if(!IsValidVehicle(x)) continue;
				if(!IsVehicleOccupied(x)) continue;
				if(VehicleInfo[x][vBizz] != FuncBizz[i][funcbID]) continue;
				switch(GetVehicleModel(x)) {
					case 426,438: ids[0] ++;
					case 540,550: ids[1] ++;
					case 560,580: ids[3] ++;
					case 483: ids[2] ++;
				}
			}
			static const f_str[] = ""W"Ви дозвонились в таксопарк {%s}%s\n\
"W"Виберите класс таксі который хочете вызвать:\n\
"ORANGE"1. "W"Эконом\t\t- "GREEN"$%d/1км.	"W"Водителей: "YELLOW"%d\n\
"ORANGE"2. "W"Комфорт\t\t- "GREEN"$%d/1км.	"W"Водителей: "YELLOW"%d\n\
"ORANGE"3. "W"Микроавтобус\t- "GREEN"$%d/1км.	"W"Водителей: "YELLOW"%d\n\
"ORANGE"4. "W"Бізнес\t\t- "GREEN"$%d/1км.	"W"Водителей: "YELLOW"%d";
			new string[sizeof(f_str) +1 + (-2 + 16) + (-2 + 20) + (-2 + 7) + (-2 + 7) + (-2 + 7) + (-2 + 7)];
			format(string,sizeof(string),f_str,color_td[FuncBizz[FuncBizz[i][funcbID]][funcbColor]][col_rgb],FuncBizz[FuncBizz[i][funcbID]][funcbName],FuncBizz[FuncBizz[i][funcbID]][funcbTarif][0],ids[0],
												FuncBizz[FuncBizz[i][funcbID]][funcbTarif][1],ids[1],
												FuncBizz[FuncBizz[i][funcbID]][funcbTarif][2],ids[2],
												FuncBizz[FuncBizz[i][funcbID]][funcbTarif][3],ids[3]);
			D(playerid,D_TAXI_CALL,DSL,""YELLOW"Таксопарк",string,"ОК","Відміна");
			SetPVarInt(playerid,"taxi_call_bizz",FuncBizz[i][funcbID]);
			return 1;
		}
	}
	switch(number) {
		case 0000: {
			if(!PlayerInfo[playerid][pDonateBank]) return 1;
			return D(playerid, D_DONATE_BANK_2, DSL, ""YELLOW"Виберите банк", ""YELLOW"1."W" Банк м.ЛС\n"YELLOW"2."W" Банк м.СФ\n"YELLOW"3."W" Банк м.ЛВ", "Вибрати", "Відміна");
		}
		case 911: return D(playerid, D_CALL_SERVICESS, DSL, ""YELLOW"Виберите сервис", ""YELLOW"1."W" Поліція/n"YELLOW"2."W" Скорая помощь\n"YELLOW"3."W" Механик", "Вибір", "Відміна");
		case 111: {
			if(PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
				if(PlayerInfo[playerid][pMobile] <= 9) return ErrorMessage(playerid,"Недостаточно коштів на рахунку телефона");
			}
			if(calls_news[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Приём звонков отключен");
			if(calls_ether[0] != INVALID_PLAYER_ID) return ErrorMessage(playerid,"Линия занята");
			if(PlayerInfo[playerid][pMember] == fLSNEWS) return ErrorMessage(playerid,"Ви не можете звонить в свою студию");
			if(random(3)) return ErrorMessage(playerid,"Дозвониться не получилось");

			SendClientMessage(playerid,CGOLD,"Ви в прямом эфире");
			SendOk(calls_news[0],"Гравець дозвонился в прямой эфир");
			SendOk(calls_news[0],"Щоб закінчити разговор, введіть: "W"/skip");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			PhoneStatus(playerid,true);
			calls_ether[0] = playerid;
			PlayerInfo[playerid][pSettings][2] = fLSNEWS;
			TI[playerid][tPhoneNews] = true;
		}
		case 222: {
			if(PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
				if(PlayerInfo[playerid][pMobile] <= 9) return ErrorMessage(playerid,"Недостаточно коштів на рахунку телефона");
			}
			if(calls_news[1] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Приём звонков отключен");
			if(calls_ether[1] != INVALID_PLAYER_ID) return ErrorMessage(playerid,"Линия занята");
			if(PlayerInfo[playerid][pMember] == fSFNEWS) return ErrorMessage(playerid,"Ви не можете звонить в свою студию");
			if(random(3)) return ErrorMessage(playerid,"Дозвониться не получилось");

			SendClientMessage(playerid,CGOLD,"Ви в прямом эфире");
			SendOk(calls_news[1],"Гравець дозвонился в прямой эфир");
			SendOk(calls_news[1],"Щоб закінчити разговор, введіть: "W"/skip");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid,0,330,6);
			calls_ether[1] = playerid;
			PlayerInfo[playerid][pSettings][2] = fSFNEWS;
			TI[playerid][tPhoneNews] = true;
		}
		case 333: {
			if(PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
				if(PlayerInfo[playerid][pMobile] <= 9) return ErrorMessage(playerid,"Недостаточно коштів на рахунку телефона");
			}
			if(calls_news[2] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Приём звонков отключен");
			if(calls_ether[2] != INVALID_PLAYER_ID) return ErrorMessage(playerid,"Линия занята");
			if(PlayerInfo[playerid][pMember] == fLVNEWS) return ErrorMessage(playerid,"Ви не можете звонить в свою студию");
			if(random(3)) return ErrorMessage(playerid,"Дозвониться не получилось");

			SendClientMessage(playerid,CGOLD,"Ви в прямом эфире");
			SendOk(calls_news[2],"Гравець дозвонился в прямой эфир");
			SendOk(calls_news[2],"Щоб закінчити разговор, введіть: "W"/skip");
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid,0,330,6);
			calls_ether[2] = playerid;
			PlayerInfo[playerid][pSettings][2] = fLVNEWS;
			TI[playerid][tPhoneNews] = true;
		}
		default: {
			if(PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
				if(PlayerInfo[playerid][pMobile] <= 9) return ErrorMessage(playerid,"Недостаточно коштів на рахунку телефона");
			}
			new bool:isnumber = false ;
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(PlayerInfo[i][pPhone] == number) {
					if(SERIU[i][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Телефон абонента выключен");
					if(TI[i][tPhoneOnline]) return ErrorMessage(playerid, "Телефон абонента выключен");
					if(TI[i][tPhone]) return ErrorMessage(playerid, "Абонент занят");
					TI[playerid][tPhoneCaller] = playerid;
					TI[playerid][tPhoneCalled] = i;
					TI[i][tPhoneCaller] = playerid;
					TI[i][tPhoneCalled] = i;
					new string[128];
					format(string,sizeof(string),"Исходящий виклик "YELLOW"» "GREEN"[т. %d]{f6f6d9} | сбросить виклик - "NO"/h",PlayerInfo[i][pPhone]);
					SendClientMessage(playerid,COLOR_GREY,string);
					
					format(string,sizeof(string),"Входящий виклик "YELLOW"« "GREEN"[т. %d]",PlayerInfo[playerid][pPhone]);
					SendClientMessage(i,COLOR_GREY,string);
					SendClientMessage(i,-1,"Введіть "YES"/p "W"Щоб прийняти вызов, "NO"/h "W"для отказа");

					MeAction(i,"звонит мобильный телефон");
					
					PhoneStatus(playerid,true);
					if(PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] != VIP_FOREVER) {
						if(PlayerInfo[playerid][pMobile] > 10) PlayerInfo[playerid][pMobile] -= 10;
					}
					isnumber = true;
					break;
				}
			}
			if(!isnumber) return ErrorMessage(playerid, "Телефон абонента вне зоны действия сети");
		}
	}
	return 1;
}
CMD:togphone(playerid) {
	if(PlayerInfo[playerid][pPhone] == 0) return ErrorMessage(playerid,"У вас немає мобильного телефона");
	if(!TI[playerid][tPhoneOnline]) TI[playerid][tPhoneOnline] = true,SendOk(playerid, "Телефон выключен");
	else if(TI[playerid][tPhoneOnline]) TI[playerid][tPhoneOnline] = false,SendOk(playerid, "Телефон включен");
	return 1;
}
CMD:book(playerid) {
	if(!PlayerInfo[playerid][pBook]) return ErrorMessage(playerid,"У вас немає телефонной книги");
	new string[1512],str[128],status[25];
	strcat(string,"Номер\tИмя\tСтатус\n");
	for(new i; i < 25; i ++) {
		new id = GetPlayerID(pPhoneName[playerid][i]);
		if(IsPlayerConnected(id)) status = "{33AA33}Online";
		else status = "{AA3333}Offline";
		if(PlayerInfo[playerid][pPhoneNumber][i] == 0) strcat(string,"--\t--\t--\n");
		else format(str, sizeof(str), "%d\t%s\t%s\n", PlayerInfo[playerid][pPhoneNumber][i],pPhoneName[playerid][i],status),strcat(string,str);
	}
	D(playerid, D_BOOK, DSTH, "Телефонная книга", string, "Вибрати", "Відміна");
	return true;
}
/*CMD:healme(playerid) {
	if(!PlayerInfo[playerid][pMedKit]) return ErrorMessage(playerid, "У вас немає аптечки");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Не можна использовать на голодных играх");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Не можна использовать на дуэлях");
	//if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health + 60.0 < 160.0 ) health += 60.0;
	else health = 160.0;
	SetPlayerHealth(playerid,health);
	MeAction(playerid,"использовал(а) аптечку");
	SetPlayerChatBubble(playerid,"+60 HP",COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	//SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	PlayerInfo[playerid][pMedKit] -= 1;
	UpdatePlayerData(playerid,"pMedKit",PlayerInfo[playerid][pMedKit]);
	return 1;
}*/
CMD:healme(playerid) {
	if(!PlayerInfo[playerid][pMedKit]) return ErrorMessage(playerid, "У вас немає аптечки");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Не можна использовать на голодных играх");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Не можна использовать на дуэлях");
	//if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	new Float:health;
	GetPlayerHealth(playerid,health);
	if(health + vip_status[PlayerInfo[playerid][pVips]][vip_useheal] < vip_status[PlayerInfo[playerid][pVips]][vip_hp]) health += vip_status[PlayerInfo[playerid][pVips]][vip_useheal];
	else health = vip_status[PlayerInfo[playerid][pVips]][vip_hp];
	if(health > vip_status[PlayerInfo[playerid][pVips]][vip_hp]) health = vip_status[PlayerInfo[playerid][pVips]][vip_hp];
	SetPlayerHealth(playerid,health);
	MeAction(playerid,"использовал(а) аптечку");
	new string[13];
	format(string,sizeof(string),"+%d HP",vip_status[PlayerInfo[playerid][pVips]][vip_useheal]);
	SetPlayerChatBubble(playerid,string,COLOR_YELLOW,20.0,10000);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	//SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	PlayerInfo[playerid][pMedKit] -= 1;
	UpdatePlayerData(playerid,"pMedKit",PlayerInfo[playerid][pMedKit]);
	return 1;
}
CMD:mask(playerid) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(!PlayerInfo[playerid][pMask]) return ErrorMessage(playerid, "У вас немає маски");
	if(TI[playerid][tMaskTime]) return ErrorMessage(playerid, "Ви уже одели маску");
	if(TI[playerid][tDMArea][0]) return ErrorMessage(playerid, "Не можна использовать на данном мероприятии");
	if(TI[playerid][tGunArea][0]) return ErrorMessage(playerid, "Не можна использовать на данном мероприятии");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Не можна использовать на голодных играх");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Не можна использовать на дуэлях");
	SetPlayerColor(playerid, 0x7a766700);
	new mask_time[] = {10,15,17,20,25,30,40,20};
	new string[64];
	format(string,sizeof(string),"Ви одягнули маску. Ваше місцезнаходження приховано на %d хвилин",mask_time[PlayerInfo[playerid][pVips]]);
	SendOk(playerid, string);
	GameTextForPlayer(playerid, "~b~Invisible on", 5000, 3);
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);

	ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
	SetPlayerAttachedObject(playerid, 8, 19801, 2, 0.064999, 0.028999, 0.000000, 0.000000, 80.300003, 178.900009, 1.330000, 1.25, 1.125000);

	TI[playerid][tMaskTime] = mask_time[PlayerInfo[playerid][pVips]];
	SetPlayerChatBubble(playerid, "Надевает маску", COLOR_ORANGE, 30.0, 10000);
	PlayerInfo[playerid][pMask] -= 1;
	UpdatePlayerData(playerid,"pMask",PlayerInfo[playerid][pMask]);
	return 1;
}
CMD:maskoff(playerid) {
	if(!TI[playerid][tMaskTime]) return ErrorMessage(playerid, "Ви не в маске");
	if(PlayerInfo[playerid][pMember] && start_work[playerid]) SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
	else SetPlayerColor(playerid,0xFFFFFF11);
	if(TI[playerid][tMasked]) SetPlayerColor(playerid,gFractionSpawn[TI[playerid][tMasked]][fracColor]);
	RemovePlayerAttachedObject(playerid, 8);
	SendOk(playerid,"Ви сняли маску");
	TI[playerid][tMaskTime] = 0;
	return 1;
}
CMD:unmask(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(sscanf(params, "i", params[0])) return SendEsp(playerid,"/unmask [playerid]");
	if(TI[params[0]][tMaskTime] <= 0) return ErrorMessage(playerid,"На гравцю нет маски");
	SetPlayerColor(params[0],gFractionSpawn[PlayerInfo[params[0]][pMember]][fracColor]);
	TI[params[0]][tMaskTime] = 0;
	RemovePlayerAttachedObject(params[0], 8);
	new string[128];
	format(string,sizeof(string),"снял(а) маску с %s",player_name[params[0]]);
	MeAction(playerid, string);
	return 1;
}
CMD:flowers(playerid, params[]) {
	if(sscanf(params, "i", params[0])) return SendEsp(playerid,"/flowers [playerid]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Ви далеко друг от друга");
	if(GetPlayerWeapon(playerid) != 14) return ErrorMessage(playerid,"У вас немає квітів");
	if(params[0] == playerid)  return  ErrorMessage(playerid,"Ви вказали свій ID");
	new weapons[13][2],string[64];
	for(new S = 0; S<13; S++) GetPlayerWeaponData(playerid, S, weapons[S][0], weapons[S][1]) ;
	ResetPlayerWeapons(playerid) ;
	for(new S = 0; S<13 ; S++) if(weapons[S][0] != 14 && weapons[S][0] != 0) AC_GivePlayerWeapon (playerid,weapons[S][0],weapons[S][1]);
	AC_GivePlayerWeapon(params[0], 14, 1);
	format(string,sizeof(string),"подарил(а) квіти %s",player_name[params[0]]);
	MeAction(playerid, string);
	MeAction(params[0], "принял(а) квіти");
	ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	return 1;
}
CB: RemovePlayerAttachedObjectDelay(playerid,slot) {
	RemovePlayerAttachedObject(playerid,slot);
}
CMD:zonestatus(playerid) {
	if(PlayerInfo[playerid][pJob] != 6) return ErrorMessage(playerid, "Ви не працюєте косильщиком");
	static const f_str[] =
"Зона\t\t\tПрогресс\n\
"YELLOW"1."W" Зона таксопарк Лос-Сантос\t\t\t{f6f6d9}[%d / 33]\n\
"YELLOW"2."W" Зона пляж Verona Beach\t\t\t{f6f6d9}[%d / 46]\n\
"YELLOW"3."W" Зона білий дім\t\t\t{f6f6d9}[%d / 58]\n\
"YELLOW"4."W" Зона Лікарні Лос-Сантос\t\t\t{f6f6d9}[%d / 37]\n\
"YELLOW"5."W" Зона мерія Лос-Сантос\t\t\t{f6f6d9}[%d / 49]\n\
"YELLOW"6."W" Зона Глен-парк №1\t\t\t{f6f6d9}[%d / 95]\n\
"YELLOW"7."W" Зона Глен-парк №2\t\t\t{f6f6d9}[%d / 80]";
    new string[sizeof(f_str) + 20];
    format(string, sizeof(string), f_str, check_taxi_park, check_verona_beach, check_white_house, check_medic_ls, check_mayor_ls,check_glenpark_1,check_glenpark_2);
    D(playerid, D_JOB_GAZON_2, DSTH, ""YELLOW"Зоны для скашивания", string, "Вибрати","");
    return 1;

}
CMD:endrent(playerid) {
	if(TI[playerid][tArendaCar] == -1) return ErrorMessage(playerid,"Ви не арендовывали рабочее Т/С");
	if(GetPVarInt(playerid,"bus_id")) SetVehicleToRespawn(GetPVarInt(playerid,"bus_id"));
	else if(GetPVarInt(playerid,"mehjob")) SetVehicleToRespawn(GetPVarInt(playerid,"mehjob"));
	else if(GetPVarInt(playerid,"prod_vehicle_id")) SetVehicleToRespawn(GetPVarInt(playerid,"prod_vehicle_id"));
	else if(GetPVarInt(playerid,"eatjob")) SetVehicleToRespawn(GetPVarInt(playerid,"eatjob"));
	else if(GetPVarInt(playerid,"clear_id")) SetVehicleToRespawn(GetPVarInt(playerid,"clear_id"));
	else if(GetPVarInt(playerid,"veh_id_cleaner")) SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_cleaner"));
	else ErrorMessage(playerid,"Ви не арендовывали рабочее Т/С");
	return 1;
}
CMD:prods(playerid) {
	if(GetPVarInt(playerid,"prod_vehicle_id") == GetPlayerVehicleID(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		D(playerid,dProdList,DSL,""YELLOW"Продукты",""YELLOW"1."W" Список бізнесов\n"YELLOW"2."W" Купити продукты","Вибрати","Відміна");
		return 1;
	}
	else ErrorMessage(playerid,"Ви не в машине для развозки продуктов/топлива");
	return 1;
}
CMD:alcotraz(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	PlayerInfo[playerid][pSearch] = 5;
	PlayerInfo[playerid][pJailTime] = 3600;
	PlayerInfo[playerid][pJail] = 4;
	PlayerSpawn(playerid);
	return 1;
}
CMD:svrnt(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new string[512];
	GetNetworkStats(string, sizeof string);
	D(playerid, DIALOG_NONE, DIALOG_STYLE_MSGBOX, !"Server Network Stats", string, !"x", !"");
	return true;
}
CMD:golod(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(time_gamegolod || golod_start) return ErrorMessage(playerid,"Голодні ігри уже запущены");
	open_gamegolod = 999;
	return 1;
}
CMD:race(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(time_registr_race_lv || race_lv_start) return ErrorMessage(playerid,"Безумные гонки уже запущены");
	open_race_lv = 999;
	return 1;
}
CMD:paint(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(time_registr_game || game_start) return ErrorMessage(playerid,"Сумасшедшие войны уже запущены");
	open_game = 999;
	return 1;
}
CMD:setspawn(playerid) {
	if(PlayerInfo[playerid][pFamily] && gHouses[gFamily[PlayerInfo[playerid][pFamily]-1][famHouse]][houseFamily] == gFamily[PlayerInfo[playerid][pFamily]-1][famHouse]) D(playerid, D_SPAWN, DSL, ""YELLOW"Вибор спавна", ""YELLOW"1."W" Вокзал\n"YELLOW"2."W" В доме/отеле\n"YELLOW"3."W" На базе організації\n"YELLOW"4."W" В доме сім'ї", "Вибрати", "Відміна");
	else D(playerid, D_SPAWN, DSL, ""YELLOW"Вибор спавна", ""YELLOW"1."W" Вокзал\n"YELLOW"2."W" В доме/отеле\n"YELLOW"3."W" На базе організації", "Вибрати", "Відміна");
	return 1;
}
CMD:progress(playerid) {
	static const f_str[] = ""O"_________________________________________________________________________\n\n\
"W"Работа Нефтяника:\n\n\
"W"Имя: "YELLOW"%s\n\
"W"Прогресс: "YELLOW"%d/150\n\n\
"W"Примечание:\n\
1. Прогресс меньше 150 - зарплата [$%d / бочка]\n\
2. Прогресс більше 150 - зарплата [$%d / бочка] (только на погрузчике)\n\n\
"O"_________________________________________________________________________";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
	format(string,sizeof(string),f_str,player_name[playerid],PlayerInfo[playerid][pProgress],WorkSalary[1],floatround(WorkSalary[1]*1.5));

	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Работа нефтяника",string, "Готово", "");
	return 1;
}
CMD:sellbusiness(playerid,params[]) {
	if(PlayerInfo[playerid][pBusiness] < 1) return ErrorMessage(playerid,"У вас немає бізнеса");
	new bizid = PlayerInfo[playerid][pBusiness]-1;
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid, "/sellbusiness [ID гравця] [Сумма]");
	if(!PlayerToPoint(3,playerid,gBusiness[bizid][bizzX], gBusiness[bizid][bizzY], gBusiness[bizid][bizzZ])) return ErrorMessage(playerid, "Необхідно находиться рядом со своим бізнесом");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pBusiness]) return ErrorMessage(playerid,"У гравця уже есть бізнес");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new price,price2;
	price = gBusiness[bizid][bizzSellPrice];
	price2 = gBusiness[bizid][bizzSellPrice]*20;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Ціна за бізнес не может быть меньше $%d и більше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Ви далеко друг от друга");

	new businessid = -1;
	for(new i;i<gBusinessCount;i++) {
	    if(GetString(player_name[playerid],gBusiness[i][bizzOwner])) {businessid = i; break;}
	}
	if(businessid == -1) return ErrorMessage(playerid,"Бізнес не знайдений");

	SetPVarInt(params[0],"bizzProdaet",playerid + 1);
	SetPVarInt(playerid,"bizzPokupaet",params[0] + 1);
	SetPVarInt(params[0],"bizzCena",params[1]);

	new string[144];
	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам Купити его бізнес за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
	SendOk(params[0],"Для перегляду доходов бізнеса, введіть: "W"/binfo");
	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}Купити Ваш бізнес за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	return 1;
}
CMD:binfo(playerid,params[]) {
    if(!GetPVarInt(playerid,"bizzProdaet")) return ErrorMessage(playerid,"Вам не предлагали Купити бізнес");
	new bizz = PlayerInfo[GetPVarInt(playerid,"bizzProdaet")-1][pBusiness]-1;
	new query[156];
	format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", bizz);
	mysql_tquery(connects, query, "bizz_stats", "ii", playerid,bizz);
	return true;
}
CMD:sellhotel(playerid,params[]) {
	if(PlayerInfo[playerid][pHotel] < 1) return ErrorMessage(playerid,"У вас немає отеля");
	new bizid = PlayerInfo[playerid][pHotel]-1;
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid, "/sellhotel [ID гравця] [Сумма]");
	if(!PlayerToPoint(3,playerid,gHotels[bizid][hotelAreaX], gHotels[bizid][hotelAreaY], gHotels[bizid][hotelAreaZ])) return ErrorMessage(playerid, "Необхідно находиться рядом со своим отелем");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pHotel]) return ErrorMessage(playerid,"У гравця уже есть отель");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new price,price2;
	price = gHotels[bizid][hotelPrice];
	price2 = gHotels[bizid][hotelPrice]*40;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Ціна не может быть меньше $%d и більше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Ви далеко друг от друга");

	new hotelid = -1;
	for(new i;i<gHotelCount;i++) {
	    if(GetString(player_name[playerid],gHotels[i][hotelOwner])) {hotelid = i; break;}
	}
	if(hotelid == -1) return ErrorMessage(playerid,"Отель не знайдений");

	SetPVarInt(params[0],"hotelProdaet",playerid + 1);
	SetPVarInt(playerid,"hotelPokupaet",params[0] + 1);
	SetPVarInt(params[0],"hotelCena",params[1]);

	new string[144];
	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам Купити его отель за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}Купити Ваш отель за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	return 1;
}
CMD:sellairport(playerid,params[]) {
	if(PlayerInfo[playerid][pAirport] < 1) return ErrorMessage(playerid,"У вас немає аэропорта");
	new airid = PlayerInfo[playerid][pAirport]-1;
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid, "/sellairport [ID гравця] [Сумма]");
	if(!PlayerToPoint(3,playerid,gAirs[airid][airAreaX], gAirs[airid][airAreaY], gAirs[airid][airAreaZ])) return ErrorMessage(playerid, "Необхідно находиться рядом со своим аэропортом");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pAirport]) return ErrorMessage(playerid,"У гравця уже есть аэропорт");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new price,price2;
	price = gAirs[airid][airPrice];
	price2 = gAirs[airid][airPrice]*8;
	if(params[1] < price || params[1] > price2) {
		static const f_str[] = "Ціна не может быть меньше $%d и більше $%d";
		new string[sizeof(f_str) +1 + (-2 + 7) + (-2 + 10)];
		format(string,sizeof(string),f_str,price,price2);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Ви далеко друг от друга");

	new airport = -1;
	for(new i;i<gAirCount;i++) {
	    if(GetString(player_name[playerid],gAirs[i][airOwner])) {airport = i; break;}
	}
	if(airport == -1) return ErrorMessage(playerid,"Отель не знайдений");

	SetPVarInt(params[0],"airProdaet",playerid + 1);
	SetPVarInt(playerid,"airPokupaet",params[0] + 1);
	SetPVarInt(params[0],"airCena",params[1]);

	new string[144];
	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам Купити его аэропорт за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}Купити Ваш аэропорт за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);
	return 1;
}
CMD:sellsim(playerid,params[]) {
	if(!PlayerInfo[playerid][pPhone]) return ErrorMessage(playerid,"У вас немає SIM-карти");
	new numbet_str[7];
	format(numbet_str,sizeof(numbet_str),"%d",PlayerInfo[playerid][pPhone]);
	if(strlen(numbet_str) < 6) return ErrorMessage(playerid,"Цей номер нельзя продати");
	if(sscanf(params, "dd",params[0],params[1])) return SendEsp(playerid,"/sellsim [ID] [ціна]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(playerid == params[0]) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(3.0, playerid,params[0])) return ErrorMessage(playerid, "Ви далеко друг от друга");
	if(params[1] < 1 || params[1] > 1000000) return ErrorMessage(playerid,"Ціна не может быть меньше $1 и більше $1.000.000");
	if(PlayerToPoint(30.0,playerid,2080.7615, 1710.6829, 1113.5668)) return ErrorMessage(playerid, "Запрещена продажа SIM карти в казино");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new string[144];

	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам Купити SIM-карту за "ORANGE"$%i", player_name[playerid], params[1]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}Купити SIM-карту за "ORANGE"$%i", player_name[params[0]], params[1]);
	SendUse(playerid, string);

	SetPVarInt(params[0], "sim_id_sell", playerid + 1); 
	SetPVarInt(params[0], "sim_summ", params[1]);
	return 1;
}
alias:usedrugs("drugs");
CMD:usedrugs(playerid,params[]) {
	if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
	if(TI[playerid][tDuel] != -1) return 1;
	if(PlayerInfo[playerid][pDrugs] <= 0) return ErrorMessage(playerid, "У вас немає наркотиків");
	if(GetPVarInt(playerid, "DrugsTime") > gettime()) return ErrorMessage(playerid, "Не можна употреблять наркотики слишком часто");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Не можна использовать на голодных играх");
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(PlayerInfo[playerid][pAddiction] < 500) health += 20;
	else if(PlayerInfo[playerid][pAddiction] < 1500) health += 30;
	else if(PlayerInfo[playerid][pAddiction] < 3000) health += 40;
	if(health > 160) health = 160;
	SetPlayerHealth(playerid,health);
	PlayerInfo[playerid][pDrugs] -= 1;
	UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
	if(IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,0,0,0,0,1);
	else ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	SetTimerEx("drug_effect", 30000, false, "i", playerid);
	SetPlayerTime(playerid,17,0);
	SetPlayerDrunkLevel(playerid, 3000);
	SetPlayerWeather(playerid, -68);
	new rand = random(6);
	PlayerInfo[playerid][pAddiction] += rand+1;
	UpdatePlayerData(playerid,"pAddiction",PlayerInfo[playerid][pAddiction]);
	MeAction(playerid, "употребил(а) наркотик");
	SetPVarInt(playerid, "anti_sbiv_time", unix+7);
	SetPVarInt(playerid, "DrugsTime", gettime()+60);
	return 1;
}
CMD:selldrugs(playerid, params[]) {
	if(!IsAGang(playerid) && !IsAMafia(playerid)) return ErrorMessage(playerid,"Доступно только бандам/мафіям");
	new id,drugs,price;
    if(sscanf(params,"ddd",id,drugs,price)) return SendEsp(playerid, "/selldrugs [id гравця] [количество] [ціна]");
	if(!IsPlayerConnected(id) || playerid == id) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,id) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(id)) return ErrorMessage(playerid,"Ви далеко друг от друга");
    if(drugs > 50 || drugs < 1) return ErrorMessage(playerid, "Неверное количество наркотиків. От 1 до 50");
	if(drugs > PlayerInfo[playerid][pDrugs]) return ErrorMessage(playerid, "У Вас недостаточно грамм наркотиків");
	if(price > 5000 || price < 1) return ErrorMessage(playerid, "Ціна повинна бути от 1 до 5000$");
    if(price > GetPlayerMoneyEx(id)) return ErrorMessage(playerid, "У гравця недостаточно грошей");
	if(PlayerToPoint(15.5,playerid,2080.7615, 1710.6829, 1113.5668)) return ErrorMessage(playerid, "Запрещена продажа наркотиків в казино");
	if(active_accept(id)) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	SetPVarInt(playerid,"drugoffee",id);
	SetPVarInt(id,"drugoffee",id);
	SetPVarInt(id,"drugoffer",playerid);
	SetPVarInt(id,"drugprice",price);
	SetPVarInt(id,"drugvalue",drugs);

	new string[170];
	format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} Купити "W"%d{f6f6d9} грамм наркотиків за "ORANGE"$%d",player_name[id],drugs,price);
	SendUse(playerid, string);
	format(string, sizeof(string), ""YELLOW"%s{f6f6d9} предложил Вам Купити "W"%d{f6f6d9} грамм наркотиків за "ORANGE"$%d",player_name[playerid],drugs,price);
	SendUse(id, string);
	SendClientMessage(id,COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
	return 1;
}
CMD:pay(playerid, params[]) {
    if(sscanf(params, "ud", params[0],params[1])) return SendEsp(playerid, "/pay [id] [сумма]");
	if(params[1] < 1 || params[1] > vip_status[PlayerInfo[playerid][pVips]][vip_pay]) {
		new string[64];
		format(string,sizeof(string),"Не можна передать меньше $1 и більше $%d",vip_status[PlayerInfo[playerid][pVips]][vip_pay]);
		return 1;
	}
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(playerid == params[0]) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(5.0, playerid, params[0])) return ErrorMessage(playerid, "Ви слишком далеко");
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(PlayerInfo[playerid][pCash] < params[1]) return ErrorMessage(playerid, "У Вас недостаточно грошей");
	//if(GetPVarInt(playerid,"pay_timer") > unix) return ErrorMessage(playerid, "Не можна передавать гроші чаще чем 1 раз в 30 секунд");  
	if(TI[playerid][tFight] != -1) return ErrorMessage(playerid, "Запрещена передача грошей во время поединка");
	//SetPVarInt(playerid, "pay_timer", unix+30);
	new string[128];
	format(string,64,"Получение с помощью /pay от %s",player_name[playerid]);
	GiveMoney(params[0], params[1], string);
	string = "";
	format(string,64,"Передача с помощью /pay %s",player_name[params[0]]);
	GiveMoney(playerid, -params[1], string);
	format(string, sizeof(string), "Ви передали %s[%i] %i вирт",player_name[params[0]],params[0],params[1]);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	format(string, sizeof(string), "Ви получили %i вирт от %s[%i]",params[1],player_name[playerid], playerid);
	SendClientMessage(params[0], COLOR_GRAD1, string);
	PlayerPlaySound(params[0], 1052, 0.0, 0.0, 0.0);
	format(string,sizeof(string),"достал(а) гроші и передал(а) их %s",player_name[params[0]]);
	MeAction(playerid,string);
	ApplyAnimation(playerid, "INT_SHOP", "shop_pay", 4.1, 0, 0, 0, 0,0,1);
	return true;
}
CMD:number(playerid, params[]) {
    if(sscanf(params, "u",params[0])) return SendEsp(playerid, "/number [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	new string[156];
	format(string, sizeof(string), "Власник: "W"%s.{f6f6d9} Телефон: "ORANGE"%i",player_name[params[0]],PlayerInfo[params[0]][pPhone]);
	SendClientMessage(playerid, COLOR_GREY, string);
	return true;
}
CMD:gnews(playerid, params[]) {
	new count_player_row = GetPVarInt(playerid,"count_row");
	new max_rows = GetPVarInt(playerid, "max_rows");
	new get_goverment_text[100];
	new set_pvar_string[15];
	if(!IsACop(playerid) && !IsAArm(playerid) && !IsAMayor(playerid) && !IsANews(playerid) && !IsAMedic(playerid) && PlayerInfo[playerid][pMember] != fINSTRUCTORS && PlayerInfo[playerid][pMember] != fWHITEHOUSE) return 1;
	else if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid, "Вам недоступна эта команда");
	else if(!start_work[playerid]) return ErrorMessage(playerid, "Вам Необхідно почати рабочий день");
	else if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(GetSVarInt("gnews_timer") > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(GetSVarInt("gnews_timer") - unix, year, month, day, hour, minute, second);
		new string[128];
		format(string,sizeof(string),"До подачи гос.новин осталось: "W"%02d:%02d", minute, second);
		ErrorMessage(playerid, string);
		return 1;
	}
	new string[262];
	if(!max_rows) {
		if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/gnews [количество строк]");
		if(params[0] < 1 || params[0] > 4) return ErrorMessage(playerid, "от 1 до 4 строк");
		SetPVarInt(playerid,"max_rows", params[0] + 1);
		SetPVarInt(playerid, "count_row", 1);
		format(string, sizeof(string), "Ви вибрали для гос. новин строк: %d {f6f6d9}| Використовуйте: /gnews [строка 1]", params[0]);
		SendClientMessage(playerid, 0x489191C8, string);
	}
	else {
		if(max_rows == count_player_row) {
			if(!isnull(params)) {
				DeletePVar(playerid,"max_rows");
				DeletePVar(playerid,"count_row");
				SendOk(playerid,"Гос.Новости успішно сброшены");
				return 1;
			}
			SendClientMessageToAll(0x2641EDFF,"================== {C0C0C0}[ Государственные новости ]{2641ED} ==================");

			for(new i = 1; i < max_rows; i++) {
				format(set_pvar_string, 15, "gnews%d", i);
				GetPVarString(playerid, set_pvar_string, get_goverment_text, 100);
				format(string, sizeof(string), "{%s}%s: "W"%s", GetColor(playerid), FI[PlayerInfo[playerid][pMember]][fName], get_goverment_text);
				SendClientMessageToAll(0xD6D6D6C8, string);
			}
			SendClientMessageToAll(0x2641EDFF, "=============================================================");
			format(string, sizeof(string), "[A] %s %s[%d] - Использовал /gnews", FI[PlayerInfo[playerid][pMember]][fName], player_name[playerid], playerid);
			AdmMSG(COLOR_YELLOW, string, 1);
			SetSVarInt("gnews_timer", gettime() + 60*3);
			DeletePVar(playerid,"max_rows");
			DeletePVar(playerid,"count_row");
			return 1;
		}
		format(string, 64, "/gnews [строка %d]",count_player_row);
		if (isnull(params)) return SendEsp(playerid, string);
		format(set_pvar_string, 15, "gnews%d", count_player_row);
		SetPVarString(playerid, set_pvar_string, params);

		if(count_player_row + 1 == max_rows) {
			format(string, sizeof(string), "Строка %d : %s", count_player_row, params);
			SendClientMessage(playerid,0xD6D6D6C8, string);
			SendOk(playerid, "Використовуйте команду /gnews ще раз. Щоб опубликовать новости");
			SendOk(playerid, "В случае опечатки, Використовуйте: /gnews 0");
		}
		else {
			format(string, sizeof(string), "Строка %d : %s {f6f6d9}| Використовуйте: /gnews [строка %d]", count_player_row, params, count_player_row + 1);
			SendClientMessage(playerid, 0xD6D6D6C8, string);
		}
		SetPVarInt(playerid,"count_row", count_player_row + 1);
	}
	return 1;
}
CMD:trunk(playerid) {
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Не можна использовать в машине");
	new Float:x,Float:y,Float:z,Float:a;
	if(idaofcar[playerid] != -1) {
		GetVehicleShiftPos(idaofcar[playerid],1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
			static const f_str[] = "Найменування\tКоличество\n\
"W"Багажник:\t%s\n\
"W"Канистры:\t"YELLOW"%d/2\n\
"W"Наркотики:\t"YELLOW"%d/200\n\
"W"Боєприпаси:\t"YELLOW"%d/1000\n\
"W"Deagle:\t"YELLOW"%d/50\n\
"W"AK47:\t"YELLOW"%d/50\n\
"W"M4:\t"YELLOW"%d/50\n\
"W"ShotGun:\t"YELLOW"%d/50";
			new string[sizeof(f_str) +20];
			new oper[30];
			if(TrunkInfo[idaofcar[playerid]][tOpen] == 0) oper = "{C62929}Закрыт"W"";
			else oper = "{56A736}Открыт"W"";
			format(string,sizeof(string), f_str,oper,TrunkInfo[idaofcar[playerid]][tKanistra],TrunkInfo[idaofcar[playerid]][tNarko],
				TrunkInfo[idaofcar[playerid]][tMats],TrunkInfo[idaofcar[playerid]][tGun][0],TrunkInfo[idaofcar[playerid]][tGun][1],TrunkInfo[idaofcar[playerid]][tGun][2],TrunkInfo[idaofcar[playerid]][tGun][3]);
			return D(playerid,D_TRUNK_LIST,DSTH,"Багажник",string,"Прийняти","Відміна");
		}
		else trunk_close(playerid);
	}
	for(new c = GetVehiclePoolSize()+1; --c != 0;) {
		if(!IsValidVehicle(c)) continue;
		if(IsABike(c) || IsAVelik(c) || IsABoat(c)) continue;
		GetVehicleShiftPos(c,1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
			if(!TrunkInfo[c][tOpen] && c != house_car[playerid][0] && c != house_car[playerid][1]) return ErrorMessage(playerid,"Багажник закрыт");
			GetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, boot, objective);
			new Float:pos_y,Float:pos_z;
			GetPlayerPos(playerid,pos_y,pos_y,pos_z);
			GetVehicleZAngle(c, a);
			if(boot != VEHICLE_PARAMS_ON) {
				AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z);
				SetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
			}
			else AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z);
			idaofcar[playerid]=c;
			static const f_str[] = "Найменування\tКоличество\n\
"W"Багажник:\t%s\n\
"W"Канистры:\t"YELLOW"%d/2\n\
"W"Наркотики:\t"YELLOW"%d/200\n\
"W"Боєприпаси:\t"YELLOW"%d/1000\n\
"W"Deagle:\t"YELLOW"%d/50\n\
"W"AK47:\t"YELLOW"%d/50\n\
"W"M4:\t"YELLOW"%d/50\n\
"W"ShotGun:\t"YELLOW"%d/50";
			new string[sizeof(f_str) +20];
			new oper[30];
			if(TrunkInfo[c][tOpen] == 0) oper = "{C62929}Закрыт"W"";
			else oper = "{56A736}Открыт"W"";
			format(string,sizeof(string), f_str,oper,TrunkInfo[c][tKanistra],TrunkInfo[c][tNarko],
				TrunkInfo[c][tMats],TrunkInfo[c][tGun][0],TrunkInfo[c][tGun][1],TrunkInfo[c][tGun][2],TrunkInfo[c][tGun][3]);
			D(playerid,D_TRUNK_LIST,DSTH,"Багажник",string,"Прийняти","Відміна");
			break;
		}
	}
	return 1;
}
CMD:trackings(playerid)
{
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid]) return 1;
	
	new stringer[400];
	format(stringer, 400, "\
		{"#cSV"}Посада\tСлідкуючий\n\
		{"#cSV"}1. {FFFFFF}Головний слідкуючий за Гетто\t[%s]\n\
		{"#cSV"}2. {FFFFFF}Головний слідкуючий за Госс\t[%s]\n\
		{"#cSV"}3. {FFFFFF}Головний слідкуючий за Мафіями\t[%s]\n\
		{"#cSV"}4. {FFFFFF}Головний слідкуючий за Лідерами\t[%s]\n\
		{"#cSV"}5. {FFFFFF}Головний адміністратор\t[%s]",
		TrackInfo[trackGhetto],
		TrackInfo[trackGoss],
		TrackInfo[trackMafia],
		TrackInfo[trackLeaders],
		TrackInfo[trackAdmins]);
	ShowPlayerDialog(playerid, DIALOG_TRACKING, DIALOG_STYLE_TABLIST_HEADERS, "{"#cSV"}Список следящий | by #Way", stringer, "Керування", "Закрити");
	return 1;
}

CMD:slimit(playerid,params[]) {
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Ви повинні бути за рулем Т/С");
	if(sscanf(params,"d",params[0])) {
		if(TI[playerid][tSLimit]) {
			TI[playerid][tSLimit] = 0;
			SendOk(playerid,"Ограничение скорости снято");
		}
		else SendEsp(playerid,"/slimit [швидкість]");
		return 1;
	}
	if(params[0] < 10 || params[0] > 150) return ErrorMessage(playerid,"От 10 до 150");
	TI[playerid][tSLimit] = params[0];
	SendOk(playerid,"Ограничение скорости встановлено");
	return true;
}
CMD:engine(playerid, const params[]) {
    new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || IsAPlane(carid) || IsABoat(carid)) return false;
	/*if(VehicleInfo[carid][vType] == VEHICLE_TYPE_SPAWN) {
		if(PlayerInfo[playerid][pLevel] > 1) {
			ErrorMessage(playerid,"Цей транспорт Тільки для новачків (1 рівень)");
			return RemovePlayerFromVehicleAC(playerid);
		}
	}*/

    if(carid == INVALID_VEHICLE_ID) return true;
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
    new Float:Health;
	GetVehicleHealth(carid,Health);
	
	if(!VehicleInfo[carid][vKey]) return ErrorMessage(playerid, "Ви не вставили ключі (/key)");
    if(VehicleInfo[carid][vFuel] <= 0.5 && !IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid) && Health <= 320) {
		ErrorMessage(playerid, "Не удалось завести двигатель");
		return true;
	}
	VehicleInfo[carid][vEngine] = 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ToggleEngine(GetPlayerVehicleID(playerid),playerid);
    return true;
}
CMD:en(playerid, params[]) {
    new carid = GetPlayerVehicleID(playerid);
	if(!IsAPlane(carid) && !IsABoat(carid)) return false;

    if(carid == INVALID_VEHICLE_ID) return true;

    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) ToggleEngine(carid,playerid);
    return true;
}
CMD:hi(playerid,params[]) {
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Не можна использовать в машине");
	if(sscanf(params, "u", params[0])) return SendEsp(playerid, "/hi [ид]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(!IsPlayerStream(2.0, playerid, params[0])) return ErrorMessage(playerid, "Гравець далеко от Вас");
	if(params[0] == playerid)  return  ErrorMessage(playerid,"Ви вказали свій ID");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new string[144];

	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}предложил(а) Вам пожать руку", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}пожать руку", player_name[params[0]]);
	SendUse(playerid, string);

	SetPVarInt(params[0],"hi", playerid+1);
	return 1;
}
CMD:givelic(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/givelic [id гравця]");
    lic[params[0]][0] =
    lic[params[0]][1] =
    lic[params[0]][2] =
    lic[params[0]][3] = 1;
	UpdateLicenses(params[0]);
	SendOk(params[0],"Лицензии получены");
	SendOk(playerid,"Лицензии выданы");
    return 1;
}
CMD:lic(playerid,params[]) {
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/lic [id гравця]");
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(params[0] == playerid) ShowLic(playerid,params[0]), MeAction(playerid,"переглядає свої ліцензії");
	else {
		if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
		new string[144];
		
		format(string, sizeof(string), ""YELLOW"%s {f6f6d9}хоче показати Вам ліцензії", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}показати Ваши ліцензії", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"lices", playerid + 1);
 	}
	return 1;
}
CMD:pass(playerid, params[]) {
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/pass [id гравця]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	
	new string[144];
		
	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}хочет показать Вам паспорт", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}показать Ваш паспорт", player_name[params[0]]);
	SendUse(playerid, string);
	
	SetPVarInt(params[0],"pass", playerid + 1);
	return 1;
}
CMD:fakepass(playerid, params[]) {
	if(PlayerInfo[playerid][pMember] != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Ви не агент FBI");
	if(!TI[playerid][tMasked]) return ErrorMessage(playerid,"На Вас нет маскировочной формы");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/fakepass [id гравця]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 5.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new string[512];
	for(new i = 1; i <= FI[TI[playerid][tMasked]][fMaxRang]; i++) {
		format(string,sizeof(string),"%s%s (%i)\n",string,GetRankName(TI[playerid][tMasked],i),i);
		D(playerid,D_FAKEPASS,DSL,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
	}
	SetPVarInt(playerid,"fpass2", params[0]);
	return 1;
}
alias:suspect("su");
CMD:suspect(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки провохоронним органам");
	if(PlayerInfo[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно з 2 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/su [ID гравця]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid,"Ви не можете видати розшук самому собі");
	if(PlayerInfo[params[0]][pJailTime]) return ErrorMessage(playerid, "Цей гравець в тюрьмі");
	if(PlayerInfo[params[0]][pSearch] >= 6) return ErrorMessage(playerid, "У цього гравця уже 6 рівнів розшуку");
	//if(IsACop(params[0])) return ErrorMessage(playerid, "Ви не можете давать розшук законникам");
	if(TI[playerid][tTied]) return ErrorMessage(playerid, "Ви зв'язані");
	new string[1000]; 
	strcat(string, ""W"");
	for(new i=0; i<13; i++) {
		format(string,sizeof(string),"%s%s\n",string,suspect_player[i][suspect_name_folder]);
	}
	D(playerid,D_SU,DSL,""YELLOW"Порушення",string,"Вибрати","Закрити");
	SetPVarInt(playerid,"su_player",params[0]);
	return 1;
}
CMD:clear(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(IsAPD(playerid)) if(PlayerInfo[playerid][pRank] < 6) return ErrorMessage(playerid, "Доступно с 6 ранга");
	if(GetTeamID(playerid) == fFBI) if(PlayerInfo[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(PlayerInfo[playerid][pRank] < 6) return ErrorMessage(playerid, "Доступно с 6 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/clear [ID гравця]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fSFPD && VehicleInfo[veh][vTeam] != fLVPD && VehicleInfo[veh][vTeam] != fFBI) return ErrorMessage(playerid, "Ви не в полицейской машине");
	if(params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(5.0, playerid, params[0])) return ErrorMessage(playerid, "Гравець далеко от вас");
	if(!PlayerInfo[params[0]][pSearch]) return ErrorMessage(playerid,"Гравець не находится в розшуку");
	new string[128];
	format(string,sizeof(string),"Ви сняли розшук у %s", player_name[params[0]]);
	SendClientMessage(playerid, CDEPARTMENT, string);
	format(string,sizeof(string), "%s %s снял с Вас розшук", GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),player_name[playerid]);
	SendClientMessage(params[0], CDEPARTMENT, string);
	PlayerInfo[params[0]][pSearch] = 0;
	SetPlayerWantedLevel(params[0], 0);
	return 1;
}
CMD:tipster(playerid,params[]) {
	if(PlayerInfo[playerid][pMember] != fFBI) return ErrorMessage(playerid, "Доступно только ФБР");
	if(PlayerInfo[playerid][pRank] < 5 && PlayerInfo[playerid][pMember] == fFBI) return ErrorMessage(playerid,"Доступно с 5 ранга");
	if(!GetPVarInt(playerid,"tipster")) return ErrorMessage(playerid, "У вас немає жучка. Подойдите к багажнику машини и натисніть "GREEN"ALT");
	new param[40],string[200];
	if(sscanf(params, "s[32]S()[64]", param, params)) {
		SendEsp(playerid,"/tipster [дія]");
		SendClientMessage(playerid,COLOR_GREY, 	"- "W"SET Прикрепить жучок к гравцю");
		SendClientMessage(playerid,COLOR_GREY, 	"- "W"REMOVE Деактивировать жучок");
		SendClientMessage(playerid,COLOR_GREY, 	"- "W"LISTEN почати прослушивание чата фракції");
		return 1;
	}
	else if(!strcmp(param, "set",true)) {
		new giveplayerid;
		if(sscanf(params, "i", giveplayerid)) return SendEsp(playerid, "/tipster set [ид гравця]");
		if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
		if(!PlayerInfo[giveplayerid][pMember]) return ErrorMessage(playerid, "Гравець не состоит в організації");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid,X,Y,Z);
		if(!PlayerToPoint(10.0,playerid,X,Y,Z)) return ErrorMessage(playerid, "Гравець не рядом с Вами");
		SetPVarInt(playerid,"tipster_set", giveplayerid + 1);
		format(string,sizeof(string),"Ви поставили жучок на "W"%s. {f6f6d9}Використовуйте "W"/tipster listen {f6f6d9}для прослушки",player_name[giveplayerid]);
		SendOk(playerid,string);
	}
	else if(!strcmp(param, "listen",true)) {
		if(!GetPVarInt(playerid,"tipster_set")) return ErrorMessage(playerid, "Сначала поставьте на гравця жучок /tipster set");
		new giveplayerid = GetPVarInt(playerid,"tipster_set")-1;
		format(string,sizeof(string), "Ви начали прослушку за гравцем "W"%s",player_name[giveplayerid]);
		SendOk(playerid,string);
		SetPVarInt(playerid,"tipster_listen", PlayerInfo[giveplayerid][pMember]);
		DeletePVar(playerid,"tipster_set");
	}
	else if(!strcmp(param, "remove",true)) {
		if(GetPVarInt(playerid,"tipster_set"))		DeletePVar(playerid,"tipster_set");
		if(GetPVarInt(playerid,"tipster_listen"))	DeletePVar(playerid,"tipster_listen");
		if(GetPVarInt(playerid,"tipster"))			DeletePVar(playerid,"tipster");
		SendOk(playerid, "Ви деактивировали жучок");
	}
	return 1;
}
CMD:push(playerid, params[]) {
    if((!IsACop(playerid) || !start_work[playerid]) && !IsAMafia(playerid)) return ErrorMessage(playerid, "Вам недоступна ця команда");
	if(sscanf(params, "u",params[0])) return SendEsp(playerid, "/push [playerid]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Ви повинні бути за рулем автомобіля");
	if(!IsPlayerStream(5.0, playerid,params[0])) return ErrorMessage(playerid,"Гравець не рядом с Вами");
	if(!IsAMafia(playerid)) if((!TI[params[0]][tCuffed]) && IsACop(playerid)) return ErrorMessage(playerid, "Гравець без наручников");
 	if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(params[0])) return ErrorMessage(playerid, "Гравець уже в Т/C");
	PutPlayerInVehicle(params[0], GetPlayerVehicleID(playerid), GetVehicleFreeSeat(GetPlayerVehicleID(playerid)));
	SetPlayerArmedWeapon(params[0],0);

	if(TI[params[0]][tCuffed] && GotoInfo[playerid][gtID] == params[0]) {
		CheckPlayerGoCuff(params[0]);
		CheckPlayerGoCuff(params[0]);
		//return 1;
	}

	TogglePlayerControllable(params[0], false);
	new string[64];
	format(string,sizeof(string), "%s затащил вас в автомобіль",player_name[playerid]);
	SendOk(params[0],string);

	format(string,sizeof(string), "Ви затащили в автомобіль %s",player_name[params[0]]);
	SendOk(playerid,string);
	return true;
}
CMD:udjur(playerid, params[]) {
	if(!IsANews(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки для співробітників ЗМІ");
	if(PlayerInfo[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/udjur [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(params[0] == playerid) return ErrorMessage(playerid, "Ви вказали свій ID");
	
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	
	new string[144];
		
	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}хочет показать Вам удостоверение журналиста", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}показать Ваше удостоверение журналиста", player_name[params[0]]);
	SendUse(playerid, string);
	
	SetPVarInt(params[0],"udjur", playerid + 1);
	return 1;
}
CMD:ud(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(PlayerInfo[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/ud [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(params[0] == playerid) return ErrorMessage(playerid, "Ви вказали свій ID");
	
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	
	new string[144];
		
	format(string, sizeof(string), ""YELLOW"%s {f6f6d9}хочет показать Вам удостоверение", player_name[playerid]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}показать Ваше удостоверение", player_name[params[0]]);
	SendUse(playerid, string);
	
	SetPVarInt(params[0],"uds", playerid + 1);
	return 1;
}
CMD:gotome(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	new id, string[150];
	if(sscanf(params,"d",id)) return SendEsp(playerid, "/gotome [id]");
	if(TI[id][tCuffed] && GotoInfo[playerid][gtID] == id) {
		format(string,sizeof(string),"%s перестал тащить за собой гравця %s",player_name[playerid], player_name[id]);
		ProxDetector(25,playerid,string,COLOR_PURPLE);
		TogglePlayerControllable(id, TI[id][tCuffed]);
		CheckPlayerGoCuff(id);
		CheckPlayerGoCuff(playerid);
		return 1;
	}
	if(!ProxDetectorS(2.0, playerid, id)) return ErrorMessage(playerid,"Гравець далеко от Вас");
	if(GotoInfo[playerid][gtID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Ви уже кого-то ведете за собой");
	if(GotoInfo[id][gtGoID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цього гравця уже кто-то ведет за собой");
	if(!TI[id][tCuffed]) return ErrorMessage(playerid, "Гравець не в наручниках");
	CheckPlayerGoCuff(playerid);
	CheckPlayerGoCuff(id);
	GotoInfo[playerid][gtID] = id;
	GotoInfo[id][gtGoID] = playerid;
	GotoInfo[id][gtState] = GetPlayerState(playerid);
	GetPlayerPos(id, GotoInfo[id][gtX], GotoInfo[id][gtY], GotoInfo[id][gtZ]);
	format(string, sizeof(string), "%s потащил гравця %s за собой", player_name[playerid], player_name[id]);
	ProxDetector(25.0, playerid, string, COLOR_PURPLE);
	TogglePlayerControllable(id, true);
	return true;
}
CMD:fences(playerid, const params[]) {
   	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(PlayerInfo[playerid][pRank] < 7) return ErrorMessage(playerid,"Доступно с 7 ранга");
    if(GetPlayerVirtualWorld(playerid) != 0 || GetPlayerInterior(playerid)!=0 ) return ErrorMessage(playerid, "Запрещено использовать в здании");
    D(playerid,D_OBJ,DSL,""YELLOW"Ограждения",""YELLOW"1."W" Ограждения\n"YELLOW"2."W" Дорожные знаки\n"YELLOW"3."W" Остальное\n"YELLOW"4."W" Убрать ближайшее ограждение","Вибрати","Відміна");
    return 1;
}
CMD:cuff(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid,"/cuff [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(IsACop(params[0])) return ErrorMessage(playerid, "Ви не можете надеть наручники на законника");
	if(TI[params[0]][tCuffed]) return ErrorMessage(playerid, "На этого человека уже одеты наручники");
	if(!PlayerInfo[params[0]][pSearch]) return  ErrorMessage(playerid,"Ви не можете надеть наручники на этого человека (он не в розшуку)");
	if(!IsPlayerStream(2.0, playerid, params[0])) return ErrorMessage(playerid,"Гравець не рядом с Вами");
	if(TI[playerid][tTied]) return ErrorMessage(playerid, "Ви связаны");
	MeAction(playerid,"одел(а) наручники на преступника");
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
	TI[params[0]][tCuffed] = 2;
	SendOk(playerid,"Щоб тащить гравця за собой Використовуйте команду: "W"/gotome [playerid]");
	return 1;
}
CMD:uncuff(playerid,params[]) {
	if(IsACop(playerid) && start_work[playerid] || PlayerInfo[playerid][pAdmin] >= 2 && dostup[playerid] == 1) {
		if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/uncuff [id]");
		if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
		if(!IsPlayerStream(5.0, playerid, params[0])) return ErrorMessage(playerid, "Рядом с Вами никого нет");
		if(params[0] == playerid) return ErrorMessage(playerid, "Ви не можете зняти наручники с самого себя");
		if(TI[params[0]][tCuffed]) {
			if(PlayerInfo[playerid][pAdmin]) SendOk(params[0],"Адміністратор снял с Вас наручники");
			MeAction(playerid,"снял(а) наручники с преступника");
			SetPlayerSpecialAction(params[0],SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0],0);
			TogglePlayerControllable(params[0], true);
			TI[params[0]][tCuffed] = 0;
			if(GotoInfo[playerid][gtID] == params[0]) {
				CheckPlayerGoCuff(params[0]);
				CheckPlayerGoCuff(playerid);
			}
		}
	}
	else return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	return 1;
}
CMD:tazer(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	new string[256];
	if(GetPVarInt(playerid,"tazershoottime") > unix) {
		format(string,sizeof(string),"Дождитесь перезарядки тазера [%d секунд]",GetPVarInt(playerid ,"tazershoottime") - unix);
		SendOk(playerid,string);
		return 1;
	}
	if(TI[playerid][tTazers][0] > 0) return ErrorMessage(playerid,"Зброя уже заряжено");
	for(new i; i <= 11; i++) {
		new gunid, ammo, storeslot = -1;
		GetPlayerWeaponData(playerid,i,gunid,ammo);
		switch(gunid) {
			case 24 : storeslot = 1;
			case 25 : storeslot = 1;
		}
		if(!gunid || !ammo || storeslot == -1) continue;
		new gunname[32];
		GetWeaponName(gunid,gunname,32);
		format(string,sizeof(string),"%s\n%s [%d]",string,gunname,ammo);
	}
	if(!strlen(string)) return ErrorMessage(playerid,"У Вас немає зброї");
	D(playerid,D_TAZER,DSL,""YELLOW"Зброя",string,"Зарядить","Відміна");
	return 1;
}
alias:megaphone("m");
CMD:megaphone(playerid,params[]) {
	if((!IsACop(playerid) || !start_work[playerid]) && (!PlayerInfo[playerid][pAdmin] || dostup[playerid] == 0)) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(PlayerInfo[playerid][pMute]) return ErrorMessage(playerid,"У Вас бан чата");
	if(sscanf(params, "s[128]",params[0])) return SendEsp(playerid, "/m [текст]");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fSFPD && VehicleInfo[veh][vTeam] != fLVPD && VehicleInfo[veh][vTeam] != fFBI && PlayerInfo[playerid][pAdmin] == 0) return ErrorMessage(playerid, "Ви не в полицейской машине");
	new string[220];
	if(PlayerInfo[playerid][pAdmin] >= 1 || dostup[playerid] != 0) {
		format(string,sizeof(string),"[АДМІНІСТРАТОР] %s(%d): %s",player_name[playerid],playerid,params[0]);
		SendStreamMessage(100.0, playerid, string,COLOR_YELLOW);
	}
	else {
		format(string,sizeof(string),"[Рупор] %s %s(%d): %s",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]),player_name[playerid],playerid,params[0]);
		SendStreamMessage(80.0, playerid, string,COLOR_YELLOW);
	}
	return true;
}
CMD:look(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(IsAPD(playerid)) if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(GetTeamID(playerid) == fFBI) if(PlayerInfo[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/look [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(3.0, playerid, params[0])) return ErrorMessage(playerid, "Гравець не рядом с Вами");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	new text1[20], text2[20],string[128];
	if(PlayerInfo[params[0]][pDrugs] > 0) { text1 = "| Наркотики"; } else { text1 = "| Пустой карман"; }
	if(PlayerInfo[params[0]][pMats] > 0) { text2 = "| Боєприпаси"; } else { text2 = "| Пустой карман"; }
	format(string, sizeof(string), ":::: Вещи %s ::::", player_name[params[0]]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	SendClientMessage(playerid, COLOR_WHITE, text1);
	SendClientMessage(playerid, COLOR_WHITE, text2);
	
	format(string, sizeof(string), "обыскал(а) %s", player_name[params[0]]);
	MeAction(playerid, string);
	return 1;
}

CMD:demote(playerid, params[]) {
	if(PlayerInfo[playerid][pMember] != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Ви не агент FBI");
	new string[144];
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", FI[GetTeamID(playerid)][fInviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	new giveplayerid;
	if(sscanf(params,"u",giveplayerid)) return  SendEsp(playerid, "/demote [id]");
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[giveplayerid][pLeader]) return ErrorMessage(playerid,"Неможливо применить на лідері");
	new giveplayer_member = PlayerInfo[giveplayerid][pMember];
	switch(giveplayer_member) {
		case fLSPD, fSFPD, fLVPD,fARMYSF,fARMYLV: {}
		default: return ErrorMessage(playerid, "Цей Гравець не состоит в правоохранительных органах/армии");
	}
	new rankdemote = PlayerInfo[giveplayerid][pRank];
	rankdemote --;
	if(!rankdemote) {
		switch(giveplayer_member) {
			case fLSPD, fSFPD, fLVPD: {
				PlayerInfo[giveplayerid][pMember] = fARMYSF;
				PlayerInfo[giveplayerid][pRank] = 3;
				DelGun(giveplayerid);
				PlayerInfo[giveplayerid][pJob] = 0;
				PlayerInfo[giveplayerid][pFracSkin] = GetPVarInt(giveplayerid,"InviteSkin");

				UpdatePlayerData(giveplayerid,"pMember",PlayerInfo[giveplayerid][pMember]);
				UpdatePlayerData(giveplayerid,"pRank",PlayerInfo[giveplayerid][pRank]);
				SetPVarInt(giveplayerid,"InviteSkin", (PlayerInfo[giveplayerid][pSex] == 1) ? (287) : (141));
				SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
				A_SetPlayerSkin(giveplayerid, GetPVarInt(giveplayerid,"InviteSkin"));

				format(string, sizeof(string), ""W"%s [%s]{f6f6d9} перевел Вас в армию", player_name[playerid],GetRankName(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]));
				SendOk(giveplayerid, string);
				format(string, sizeof(string), "Ви перевели "W"%s{f6f6d9} в армию", player_name[giveplayerid],rankdemote);
				SendOk(playerid, string);
				return 1;
			}
		}
		PlayerInfo[giveplayerid][pRank] = 0;
		UpdatePlayerData(giveplayerid,"pRank",PlayerInfo[giveplayerid][pRank]);

		PlayerInfo[giveplayerid][pMember] = 0;
		UpdatePlayerData(giveplayerid,"pMember",PlayerInfo[giveplayerid][pMember]);

		SetPlayerArmour(giveplayerid,0);
		DelGun(giveplayerid);
		SetPlayerColor(giveplayerid, TEAM_HIT_COLOR);
		if(PlayerInfo[giveplayerid][pHouse] > 0) PlayerInfo[giveplayerid][pSpawn] = 1;
		else PlayerInfo[giveplayerid][pSpawn] = 0;
		A_SetPlayerSkin(giveplayerid, PlayerInfo[giveplayerid][pSkin]);

		format(string, sizeof(string), ""W"%s{f6f6d9} звільнив вас із організації", player_name[playerid]);
		SendOk(giveplayerid, string);

		format(string, sizeof(string), "Ви уволили "W"%s{f6f6d9} из організації", player_name[giveplayerid]);
		SendOk(playerid, string);
		return 1;
	}
	PlayerInfo[giveplayerid][pRank] = rankdemote;
	UpdatePlayerData(giveplayerid,"pRank",PlayerInfo[giveplayerid][pRank]);

	format(string, sizeof(string), ""W"%s{f6f6d9} понизил Вас до "ORANGE"%s[%d]", player_name[playerid],GetRankName(PlayerInfo[giveplayerid][pMember],rankdemote), rankdemote);
	SendOk(giveplayerid, string);

	format(string, sizeof(string), "Ви понизили "W"%s{f6f6d9} до "ORANGE"%s[%d]", player_name[giveplayerid],GetRankName(PlayerInfo[giveplayerid][pMember],rankdemote), rankdemote);
	SendOk(playerid, string);
	return 1;
}

CMD:arrest(playerid,params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(!PlayerToPoint(10.0, playerid, 1560.2266,-1694.2327,5.8970) && 
		!PlayerToPoint(10.0, playerid, -1590.0127,708.3984,-5.2422) && 
		!PlayerToPoint(10.0, playerid, 2293.5652,2459.6794,10.8203)) return ErrorMessage(playerid, "Ви далеко від поліцейського відділку");
	new suspect;
	if(sscanf(params,"i",suspect)) return SendEsp(playerid,"/arrest [playerid]");
	if(!IsPlayerConnected(suspect)) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(4.0, playerid, suspect)) return ErrorMessage(playerid, "Гравець не рядом с Вами");
	if(PlayerInfo[suspect][pSearch] < 1) return ErrorMessage(playerid, "Гравець не має розшук");

	new search;
	if(PlayerInfo[suspect][pSearch] <= 5) search = 600;
	else search = 750;

	if(TI[suspect][tCuffed] && GotoInfo[playerid][gtID] == suspect) {
		TogglePlayerControllable(suspect, TI[suspect][tCuffed]);
		CheckPlayerGoCuff(suspect);
		CheckPlayerGoCuff(suspect);
		//return 1;
	}

	new string[128];
	format(string, sizeof(string), "Ви посадили в тюрьму %s на %d секунд", player_name[suspect], (PlayerInfo[suspect][pSearch] * search));
	SendClientMessage(playerid, 0x6ab1ffaa, string);

	format(string, sizeof(string), "Вас посадил в тюрьму %s на %d секунд", player_name[playerid], (PlayerInfo[suspect][pSearch] * search));
	SendClientMessage(suspect, CBADINFO, string);

	format(string, sizeof(string), "%s %s(%d) арестовал(а) преступника %s(%d)", GetRankName(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]),player_name[playerid],playerid, player_name[suspect],suspect);
	SendTeamMessage(COLOR_ALLDEPT, string);

	ResetPlayerWeapons(suspect);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(suspect,0);
	TogglePlayerControllable(suspect, true);
	TI[suspect][tCuffed] = 0;
	arrest(suspect);
	SetPlayerSpecialAction(suspect,SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(suspect,0);
	TogglePlayerControllable(suspect, true);
	PlayerSpawn(suspect);
	return 1;
}
CMD:ticket(playerid, params[]) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(sscanf(params, "uds[128]",params[0],params[1],params[2])) return SendEsp(playerid, "/ticket [id] [ціна] [причина]");
	if(IsACop(params[0]) && start_work[params[0]]) return ErrorMessage(playerid, "Ви не можете выписать штраф сотруднику првоохранительных органов");
	if(GetTeamID(playerid) == fFBI) if(PlayerInfo[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[1] < 1 || params[1] > 10000) return ErrorMessage(playerid, "Сумма штрафа не должна превышать $10.000");
	if(!IsPlayerStream(4.0, playerid, params[0])) return ErrorMessage(playerid, "Гравець не рядом с Вами");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	new day, month, year;
	getdate(year,month,day);
	new query[300];
	mysql_format(connects,query,sizeof(query), "INSERT INTO `"TABLE_TICKETS"` (`name`, `give_name`, `total`, `reason`, `date`) VALUES ('%s', '%s', '%i','%s','%02i/%02i/%02i')",player_name[params[0]],player_name[playerid],params[1],params[2],day,month,year);
	mysql_tquery(connects,query,"","");
	new string[156];
	format(string,sizeof(string),"Ви выписали штраф в розмірі "ORANGE"$%i"W" %s.{f6f6d9} Причина: "W"%s",params[1],player_name[params[0]],params[2]);
	SendUse(playerid,string);
	format(string,sizeof(string),"Офицер "YELLOW"%s{f6f6d9} выписал вам штраф в розмірі "ORANGE"$%i.{f6f6d9} Причина: "W"%s",player_name[playerid],params[1],params[2]);
	SendUse(params[0],string);
	return SendOk(params[0], "Оплатить штраф Вы можете в банке");
}
CMD:take(playerid,params[]) {
	if(PlayerInfo[playerid][pMember] != fINSTRUCTORS && !IsACop(playerid)) return ErrorMessage(playerid, "Вам недоступна ця команда");
	if(!start_work[playerid]) return ErrorMessage(playerid,"Вам Необхідно почати рабочий день");
	if(PlayerInfo[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(TI[playerid][tTied]) return ErrorMessage(playerid, "Ви связаны");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/take [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(5.0, playerid, params[0])) return ErrorMessage(playerid, "Гравець не рядом с Вами");
	if(GetTeamID(playerid) == fINSTRUCTORS) D(playerid,D_TAKE, DSL,""YELLOW"Забрать лицензию", "Водительские права\nЛіцензія пилота\nЛіцензія водного транспорта\nЛіцензія на зброю", "Вибрати", "Закрити");
	else D(playerid,D_TAKE, DSL,""YELLOW"Забрать лицензию", "Водительские права\nЛіцензія пилота\nЛіцензія водного транспорта\nЛіцензія на зброю\nНаркотики\nБоєприпаси", "Вибрати", "Закрити");
	SetPVarInt(playerid,"takelic", params[0]);
	return 1;
}
CMD:hack(playerid, params[]) {
    if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(GetTeamID(playerid) == fFBI) if(PlayerInfo[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(PlayerInfo[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	new idx = -1;
	for(new i = 0; i < gHouseCount; i ++) {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, gHouses[i][houseX], gHouses[i][houseY], gHouses[i][houseZ])) {
			idx = i;
			break;
		}
	}
	if(idx == -1) return ErrorMessage(playerid, "Ви повині знаходиться поруч зі своїм будинком");	
	SetPlayerPosAC(playerid,hinterior_info[gHouses[idx][houseHint]][h_pos_exit][0],hinterior_info[gHouses[idx][houseHint]][h_pos_exit][1],hinterior_info[gHouses[idx][houseHint]][h_pos_exit][2],idx+1,hinterior_info[gHouses[idx][houseHint]][h_interior]);
	SetPlayerFacingAngle(playerid,hinterior_info[gHouses[idx][houseHint]][h_pos_exit][3]);
	TI[playerid][tInHouse] = true;
	return 1;
}
CMD:spikes(playerid) {
	if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(GetTeamID(playerid) == fFBI) if(PlayerInfo[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(PlayerInfo[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(veh) != 490 && GetVehicleModel(veh) != 560 && GetVehicleModel(veh) != 596 && GetVehicleModel(veh) != 597 && GetVehicleModel(veh) != 598 && GetVehicleModel(veh) != 599) return ErrorMessage(playerid,"Недоступно в данном автомобиле");
	if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	if(GetPlayerInterior(playerid) != 0) return 1;
	new Float: X, Float: Y, Float: Z, Float: ANGLE;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, ANGLE);
	new string[128];
	if(!GetPVarInt(playerid,"block")) {
		if(ObjectShip[playerid] == 0x7F800000) {
			if(IsValidDynamicObject(ObjectShip[playerid])) DestroyDynamicObject(ObjectShip[playerid]);

			GetVehiclePos(veh, X, Y, Z);
			GetVehicleZAngle(veh, ANGLE);

			X -= (5.0 * floatsin(-ANGLE, degrees));
			Y -= (5.0 * floatcos(-ANGLE, degrees));
			Z -= 0.8;

			ObjectShip[playerid] = CreateDynamicObject(2899, X, Y, Z, 0, 0, ANGLE - 90.0);
			SetPVarInt(playerid,"Ships",CreateDynamicSphere(X, Y, Z, 3.5, -1, -1, -1));
			string = "";
			format(string,sizeof(string),"Установил(а) шипы: %s(%i)",player_name[playerid],playerid);
			ShipText[playerid] = CreateDynamic3DTextLabel(string,-1,X,Y,Z,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			//ShipText[playerid] =  CreateDynamic3DTextLabel(string, -1, X,Y,Z, 5.0, INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0, 0, -1, 15.0,-1,0);
		}
		SetPVarInt(playerid,"block", true);
		SendOk(playerid, "Ви установили шипы новейшей технологии. Они имеют радиуправляемый интерфейс.");
		SendOk(playerid, "Цей интерфейс даёт можливість деактивировать шипы на приличном расстоянии от них. (/spikes)");
	}
	else {
		DestroyDynamic3DTextLabel(ShipText[playerid]);
		if(ObjectShip[playerid] != 0x7F800000) {
			DestroyDynamicObject(ObjectShip[playerid]);
			ObjectShip[playerid] = 0x7F800000;
		}
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DeletePVar(playerid,"block");
		DeletePVar(playerid,"Ships");
		SendOk(playerid, "Шипы деактивированы");
	}
	return 1;
}
CMD:rights(playerid) {
    if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	if(GetPVarInt(playerid, "rightstext") > gettime()) return ErrorMessage(playerid,"Использовать данную команду можно один раз в 20 секунд");
	new string[158];
	format(string,sizeof(string),"- Вы имеете право хранить молчание. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Всё, что вы скажете, может и будет использовано против вас в суде. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Если вы не можете оплатить услуги адвоката, он будет предоставлен вам государством. (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	format(string,sizeof(string),"- Вы понимаете свои права? (%s) [%d]",player_name[playerid],playerid);
	ProxDetector(25.0,playerid,string,-1);
	SetPVarInt(playerid, "rightstext", gettime()+20);
	return 1;
}
CMD:obc(playerid) {
    if(!IsACop(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно тільки працівникам міністерства юстиції");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fLSPD && VehicleInfo[veh][vTeam] != fSFPD && VehicleInfo[veh][vTeam] != fLVPD && VehicleInfo[veh][vTeam] != fFBI) return ErrorMessage(playerid, "Ви не в полицейской машине");
    if(GetPVarInt(playerid, "Patrul") == 1) {
		DeletePVar(playerid, "Patrul");
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Ви закончили патрулирование");
		return 1;
	}
    D(playerid, D_OBC_LIST,DSL, ""YELLOW"Бортовой компьютер", ""YELLOW"1."W" Список разыскиваемых\n"YELLOW"2."W" База данных\n"YELLOW"3."W" Поступившие вызовы", "Вибрати", "Закрити");
	return 1;
}
CMD:scan(playerid,params[]) {
    if(GetTeamID(playerid) != fFBI || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только сотрудникам FBI");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(!PlayerToPoint(3.0,playerid,1491.3950,278.6347,1019.8281) &&
		!PlayerToPoint(3.0,playerid,1494.4558,281.5873,1020.7458)) return ErrorMessage(playerid,"Необхідно находиться на рабочем месте");
    new giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/scan [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець оффлайн");
    ShowPass(giveplayerid,playerid);
	return 1;
}
CMD:hbject(playerid, params[]) {
	if((PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) && (!GetString(player_name[playerid],"Fankyo_Web"))) return true;
	new giveplayerid,
		slot = -1, 
		objectid = -1, 
		bone = -1, 
		Float:oX, 
		Float:oY, 
		Float:oZ, 
		Float:rX, 
		Float:rY, 
		Float:rZ, 
		Float:sX, 
		Float:sY, 
		Float:sZ;
	if(sscanf(params, "udddfffffffff", giveplayerid, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ)) 
		return SendEsp(playerid, "Використовуйте: /hbject [playerid] [слот 0-9] [id объект] [1-18]  [x][y][z]  [rx][ry][rz] [sx][sy][sz]");
	
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(!IsPlayerAttachedObjectSlotUsed(giveplayerid, slot)) return SetPlayerAttachedObject(giveplayerid, slot, objectid, bone, oX, oY, oZ, rX, rY, rZ, sX, sY, sZ);
	else {
		RemovePlayerAttachedObject(giveplayerid, slot), 
		SendOk(playerid, "Слот удален");
	}
	return 1;
}
CMD:hbjectedit(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new slot_id;
	if(sscanf(params, "d", slot_id)) return SendEsp(playerid, "/hbedit [слот]");
	if(IsPlayerAttachedObjectSlotUsed(playerid, slot_id)) EditAttachedObject(playerid, slot_id);
	return 1;
}
alias:hbjectedit("hbedit");
CMD:getobjectpos(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new Float:x1,Float:y1,Float:z1,string[128],slot;
    if(sscanf(params, "d",slot)) return SendEsp(playerid, "/getobjectpos [Слот]");
	GetObjectPos(SlotObject[slot],x1,y1,z1);
	format(string, sizeof(string), "GetDynamicObjectPos %f,%f,%f",x1,y1,z1);
	SendClientMessage(playerid,COLOR_GREY,string);
	return true;
}
CMD:cobj(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	new float:x1,float:y1,float:z1,float:rx1,float:ry1,float:rz1;
	if(sscanf(params, "ddp<,>ffffff", params[0],params[1],x1,y1,z1,rx1,ry1,rz1)) return SendEsp(playerid, "/cobj [слот] [id объекта] [X] [Y] [Z] [rX] [rY] [rZ]");
	if(SlotCObject[params[0]] != 0) return 1;
	if(params[0] >= 499) return 1;
	SlotCObject[params[0]] = CreateDynamicObject(params[1],Float:x1,Float:y1,Float:z1,Float:rx1,Float:ry1,Float:rz1);
	new string[128];
	format(string,sizeof(string),"Объект создан. ID: "ORANGE"%d{f6f6d9} | Слот: "ORANGE"%d",params[1],params[0]);
	SendOk(playerid,string);
	return 1;
}
CMD:dcobject(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SendEsp(playerid, "/dcobject [слот]");
	if(SlotCObject[params[0]] != 0) {
		DestroyDynamicObject(SlotCObject[params[0]]);
		SlotCObject[params[0]] = 0;
		new string[128];
		format(string,sizeof(string),"Объект удален. Слот: "ORANGE"%d",params[0]);
		SendOk(playerid,string);
	}
	else ErrorMessage(playerid,"Слот не знайдений");
	return 1;
}
CMD:obj(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "dd", params[0],params[1])) return SendEsp(playerid, "/obj [слот] [id объекта]");
	if(SlotObject[params[0]] != 0) return 1;
	if(params[0] >= 99) return 1;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	SlotObject[params[0]] = CreateDynamicObject(params[1],x1,y1,z1,0.00,0.00,0.00);
	new string[128];
	format(string,sizeof(string),"Объект создан. ID: "ORANGE"%d{f6f6d9} | Слот: "ORANGE"%d",params[1],params[0]);
	SendOk(playerid,string);
	return 1;
}
CMD:dobject(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) return SendEsp(playerid, "/dobject [слот]");
	if(SlotObject[params[0]] != 0) {
		DestroyDynamicObject(SlotObject[params[0]]);
		SlotObject[params[0]] = 0;
		new string[128];
		format(string,sizeof(string),"Объект удален. Слот: "ORANGE"%d",params[0]);
		SendOk(playerid,string);
	}
	else ErrorMessage(playerid,"Слот не знайдений");
	return 1;
}
CMD:eobject(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return 1;
	if(sscanf(params, "d", params[0])) { SelectObject(playerid); } else {
		if(SlotObject[params[0]] != 0) {
			EditObject(playerid,SlotObject[params[0]]);
		}
	}
	return 1;
}
stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid) {
	if(!IsPlayerConnected(playerid)) return 0;
	new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,PX,PY,PZ);
	GetVehiclePos(vehicleid, X,Y,Z);
	new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	if(Distance <= radi*radi) return 1;
	return 0;
}
CMD:divorce(playerid) {
	if(strlen(PlayerInfo[playerid][pMarried]) < 10) return ErrorMessage(playerid, "Ви не женаты/замужем");
	SendOk(playerid, "Ви развелись");

	new query[156];
	format(query, sizeof(query), "UPDATE `accounts` SET `pMarried` = '-' WHERE `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pID]);
	mysql_pquery(connects, query, "", "");

	strmid(PlayerInfo[playerid][pMarried], "-", 0, 10);
	return 1;
}

CMD:propose(playerid,params[]) {
	if(strlen(PlayerInfo[playerid][pMarried]) > 10) return ErrorMessage(playerid, "Ви уже женаты/замужем");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/propose [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(strlen(PlayerInfo[params[0]][pMarried]) > 10) return ErrorMessage(playerid, "Гравець уже состоит в браке");
	if (!IsPlayerStream(8.0, playerid, params[0])) return ErrorMessage(playerid, "Гравець далеко от Вас");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!PlayerToPoint(10.0, playerid, -1988.0447,1117.9020,54.4741)) return ErrorMessage(playerid, "Ви не у церкви");
	new string[144];
	format(string, sizeof(string), "Ви предложили выйти замуж/пожениться: "W"%s", player_name[params[0]]);
	SendOk(playerid, string);
	format(string, sizeof(string), ""ORANGE"%s"W" пропонує вам руку и сердце\n\n"YELLOW"Ви хочете прийняти предложение?", player_name[playerid]);
	D(params[0],D_MARRIED,DSM, ""YELLOW"Свадьба",string,"Так","Ні");
	SetPVarInt(params[0],"ProposeOffer",playerid+1);
	return 1;
}
CMD:wbook(playerid, params[]) {
 	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/wbook [id гравця]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(SERIU[params[0]][sID] != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(params[0] == playerid) ShowWBook(playerid,params[0]),MeAction(playerid,"просматривает свою трудовую книжку");
	else {
	    if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	
		new string[144];
			
		format(string, sizeof(string), ""YELLOW"%s {f6f6d9}хочет показать Вам свою трудовую книжку", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}показать Вашу трудовую книжку", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"wbook", playerid + 1);
 	}
	return 1 ;
}
CMD:medcard(playerid,params[]) {
	if(!PlayerInfo[playerid][pMedCard]) return ErrorMessage(playerid,"У Вас немає медичної картки. Получити її можна в любому із лікарень");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/medcard [id гравця]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(params[0] == playerid) MeAction(playerid,"просматривает свою мед. карту"),ShowMedcard(playerid, playerid);
	else {
		if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	    new string[144];

		format(string, sizeof(string), ""YELLOW"%s {f6f6d9}хочет показать Вам мед.карту", player_name[playerid]);
		SendUse(params[0], string);
		SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

		format(string, sizeof(string), "Ви предложили "YELLOW"%s {f6f6d9}показать Вашу мед. карту", player_name[params[0]]);
		SendUse(playerid, string);
		
		SetPVarInt(params[0],"medcard", playerid + 1);
 	}
	return 1;
}
CMD:medics(playerid) {
    if(!IsAMedic(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Доступно только здравоохранительным органам");
	if(PlayerInfo[playerid][pRank] < 2) return ErrorMessage(playerid, "Доступно со 2 ранга");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] != fMEDICLS && VehicleInfo[veh][vTeam] != fMEDICSF && VehicleInfo[veh][vTeam] != fMEDICLV) return ErrorMessage(playerid, "Ви не в Т/С МЧС");
	new Float:pos[3];
    GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
	new bool:callers = false;
	new string[700],str[30];
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!GetPVarInt(i,"call_medics")) continue;
		if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
		format(string,sizeof(string),"%s\n",player_name[i]),strcat(string,str);
		callers = true;
	}
	if(!callers) return ErrorMessage(playerid,"Виклики не поступали");
	D(playerid,D_MEDICS,DSL,""YELLOW"Поступившие вызовы",string,"Вибрати","Відміна");
	return 1;
}
CMD:tow(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] != 2) return ErrorMessage(playerid,"Ви не працюєте механіком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Ви повинні бути за рулем своего буксира");
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return	SendEsp(playerid, "/tow [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,giveplayerid) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid,"Ви далеко друг от друга");
	SetPVarInt(playerid,"towoffer",playerid);
	SetPVarInt(playerid,"towoffee",giveplayerid);
	SetPVarInt(giveplayerid,"towoffer",playerid);
	SetPVarInt(giveplayerid,"towoffee",giveplayerid);
	new string[156];
	format(string,sizeof(string),"Ви предложили "YELLOW"%s{f6f6d9} відбоксувати транспортний засіб",player_name[giveplayerid]);
	SendOk(playerid,string);

	format(string,sizeof(string),""W"Механик "YELLOW"%s"W" пропонує відбуксирувати Ваш транспортний засіб\n\nДля буксировки натисніть "YELLOW"'Прийняти'",player_name[playerid]);
	D(giveplayerid,D_TOW,DSM, ""YELLOW"Буксировка",string,"Прийняти","Відміна");
	return 1;
}
CMD:untow(playerid, params[]) {
	if(GetPVarInt(playerid,"towvid")) {
		new vehicleid = GetPVarInt(playerid,"towvid");
		new trailer = GetPVarInt(playerid,"towactvid");
		SetPVarInt(playerid,"towvid",0);
		SetPVarInt(playerid,"towactvid",0);
		if(GetVehicleTrailer(vehicleid) == trailer)  {
			DetachTrailerFromVehicle(vehicleid);
			SendOk(playerid,"Ваша машини была отцеплена от авто механика");
			return true;
		}
	}
	if(PlayerInfo[playerid][pJob] != 2) return ErrorMessage(playerid,"Ви не працюєте механіком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Ви повинні бути за рулем своего буксира");
	new vehicleid = GetPlayerVehicleID(playerid);
	new trailer = GetVehicleTrailer(vehicleid);
	if(!trailer) return ErrorMessage(playerid,"Ви не буксируете авто");
	DetachTrailerFromVehicle(vehicleid);
	SendOk(playerid,"Ви отсоединили авто");
	return 1;
}
stock GetNearestTrunckEat(playerid) {
	for(new i = 0;i<gBusinessCount;i++) {
		if(gBusiness[i][bizzType] != 1) continue;
		if(PlayerToPoint(10.0,playerid,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ])) return i;
	}
	return -1;
}
CMD:bhd(playerid) {
	if(PlayerInfo[playerid][pJob] != 4) return ErrorMessage(playerid,"Ви не працюєте развозчиком еды");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Ви повинні бути за рулем своего автомобіля по развозки еды");
	new i = GetNearestTrunckEat(playerid);
	if(i==-1) return 1;
	new string[156];
	format(string, sizeof(string), "\n\n"W"Вартість "YELLOW"1"W" хот-дога: "GREEN"$%d\nВикористовуйте количество хот-догов, которое хочете заКупити:\n\n",gBusiness[i][bizzPrice]*50);
	D(playerid,dEContract,DSI, ""YELLOW"Покупка хот-догов",string,"Купити","Відміна");
	SetPVarInt(playerid,"e_biz",i);
	return 1;
}
CMD:shd(playerid,params[]) {
	if(PlayerInfo[playerid][pJob] != 4) return ErrorMessage(playerid,"Ви не працюєте развозчиком еды");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Ви повинні бути за рулем своего автомобіля по развозки еды");
	if(sscanf(params,"ii",params[0],params[1])) return SendEsp(playerid,"/shd [ид гравця] [ціна]");
	if(params[1] < 50 || params[1] > 3000) return ErrorMessage(playerid,"Ціна не может быть більше $3000 и меньше $50");
	if(GetPVarInt(playerid,"eatcolvo") < 1) return ErrorMessage(playerid,"В автомобили закончились хот-доги");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(10.0, playerid, params[0])) return ErrorMessage(playerid,"Гравець далеко от Вас");

	new string[170];
	format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} Купити хот-дог за "ORANGE"$%d",player_name[params[0]],params[1]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""YELLOW"Продавец хот-догов "W"%s"YELLOW" предложил Купити Вам хот-дог за "GREEN"$%d\n\nВы согласны?",player_name[playerid],params[1]);
	D(params[0],dEHotDog,DSM, ""YELLOW"Покупка хот-дога",string,"Так","Ні");

	SetPVarInt(playerid,"id_hotdog",params[0] + 1);
	SetPVarInt(playerid,"price_hotdog", params[1]);
	SetPVarInt(params[0],"id_hotdog",playerid + 1);
	return 1;
}
CMD:contract(playerid) {
	if(PlayerInfo[playerid][pJob] != 2) return ErrorMessage(playerid,"Ви не працюєте механіком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Ви повинні бути за рулем своего буксира");
	new i = GetNearestTrunckFuel(playerid);
	if(i==-1) return 1;
	new string[156];
	format(string, sizeof(string), "\n\n"W"Вартість "YELLOW"1"W" литра: "GREEN"$%d\nВикористовуйте количество бензина, которое хочете заКупити:\n\n",gBusiness[i][bizzPrice]);
	D(playerid,dFContract,DSI, ""YELLOW"Покупка топлива",string,"Купити","Відміна");
	SetPVarInt(playerid,"f_biz",i);
	return 1;
}
CMD:refill(playerid,params[]) {
	if(PlayerInfo[playerid][pJob] != 2) return ErrorMessage(playerid,"Ви не працюєте механіком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Ви повинні бути за рулем своего буксира");
	if(sscanf(params,"iii",params[0],params[1],params[2])) return SendEsp(playerid,"/refill [ид гравця] [бензин] [ціна]");
	if(params[2] < 50 || params[2] > 3000) return ErrorMessage(playerid,"Ціна не может быть більше $3000 и меньше $50");
	if(GetPVarInt(playerid,"toplivo") < params[1]) return ErrorMessage(playerid,"У вас немає столько топлива");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(10.0, playerid, params[0])) return ErrorMessage(playerid,"Гравець далеко от Вас");
	if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Гравець должен быть в машине");
	if(VehicleInfo[GetPlayerVehicleID(params[0])][vFuel]+params[1] > gTransport[GetVehicleModel(GetPlayerVehicleID(params[0])) - 400][trTank]) return ErrorMessage(playerid,"В машине, которую Ви хочете Заправити полный бак");

	new string[170];
	format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} Заправити его т.с. на "W"%d{f6f6d9} литров за "ORANGE"$%d",player_name[params[0]],params[1],params[2]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""YELLOW"Механик "W"%s"YELLOW" предложил Заправити ваше т.с. на "W"%d"YELLOW" литров за "GREEN"$%d\n\nВы согласны?",player_name[playerid],params[1],params[2]);
	D(params[0],dRefill,DSM, ""YELLOW"Заправка",string,"Так","Ні");

	SetPVarInt(playerid,"id_refill",params[0] + 1);
	SetPVarInt(playerid,"price_refill", params[2]);
	SetPVarInt(playerid,"litres_refill", params[1]);
	SetPVarInt(params[0],"id_refill",playerid + 1);
	return 1;
}
cmd:remp(playerid, const params[]) {
    if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Не можна использовать в Т/С");
	new Float:X,Float:Y,Float:Z;
	new car = GetNearestVehicle(playerid);
	GetVehiclePos(car, X, Y, Z);
	if(IsPlayerInRangeOfPoint(playerid,4,X, Y, Z)) {
		new str[50];
		format(str, sizeof(str),"Осмотр автомобіля %s", gTransport[GetVehicleModel(car)-400][trName]);
		SetPVarInt(playerid,"MechOsmotrVEHID",car);
		SetPVarInt(playerid,"JOBOSMOTR",0);
		new Float:vhealth;
		GetVehicleHealth(car, vhealth);
		new panels_job,doors_job,lights_job,tires_job;
		GetVehicleDamageStatus(car,panels_job,doors_job,lights_job,tires_job);
		
		static const f_str[] = "№ Найменування\tСостоятние\n"YELLOW"1."W" Двери\t%s\n"YELLOW"2."W" Кузов\t%s\n"YELLOW"3."W" Фары\t%s\n"YELLOW"4."W" Колёса\t%s\n"YELLOW"5."W" Двигатель\t%s\nИнструментов "ORANGE"%d";
		new string[sizeof(f_str) +128];
		
		format(string,sizeof(string),f_str,!doors_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!panels_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!lights_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),!tires_job?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),vhealth >= 1000?(""GREEN"Идеальное"):(""NO"Нуждается в ремонте"),PlayerInfo[playerid][pInstrument]);
		D(playerid,D_REPAIR_LIST,DSTH,str,string,"Осмотреть","Відміна");
		return 1;
	}
	else return ErrorMessage(playerid,"Ви далеко від Т/С");
}
CMD:repair(playerid,params[]) {
    if(PlayerInfo[playerid][pJob] != 2) return ErrorMessage(playerid,"Ви не працюєте механіком");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetPlayerVehicleID(playerid) != TI[playerid][tArendaCar]) return ErrorMessage(playerid,"Ви повинні бути за рулем своего буксира");
	new price,giveplayerid;
	if(sscanf(params,"ud",giveplayerid,price)) return SendEsp(playerid,"/repair [playerid] [сумма]");
	if(price < 100 || price > 1000) return ErrorMessage(playerid,"Ціна не повинна бути ниже $100 и выше $1000");
	if(!IsPlayerConnected(giveplayerid) || giveplayerid == playerid) return ErrorMessage(playerid,not_id);
	if(GetPlayerState(giveplayerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Гравець должен быть за рулем автомобіля");
	if(GetPlayerDistanceToPlayer(playerid,giveplayerid) > 10.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid,"Ви далеко друг от друга");
	if(active_accept(giveplayerid)) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	SetPVarInt(playerid,"repairoffee",giveplayerid);
	SetPVarInt(giveplayerid,"repairoffer",playerid);
	SetPVarInt(giveplayerid,"repairoffee",giveplayerid);
	SetPVarInt(giveplayerid,"repairprice",price);
	SetPVarInt(giveplayerid,"repairtime",gettime()+60);
	new string[142];
	format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} отремонтировать его т.с. за "ORANGE"$%d",player_name[giveplayerid],price);
	SendUse(playerid, string);
	format(string, sizeof(string), "Механик "YELLOW"%s{f6f6d9} предложил отремонтировать ваше т.с. за "ORANGE"$%d",player_name[playerid],price);
	SendUse(giveplayerid, string);
	SendClientMessage(giveplayerid,COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
	return true;
}
CMD:repairs(playerid) {
    if(PlayerInfo[playerid][pJob] != 2) return ErrorMessage(playerid,"Ви не працюєте механіком");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vJob] != 2) return ErrorMessage(playerid, "Ви не в автомобиле механиков");
	new Float:pos[3];
    GetPlayerPos(playerid,pos[0],pos[1],pos[2]); 
	new bool:callers = false;
	new string[700],str[30];
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!GetPVarInt(i,"call_mechanics")) continue;
		if(!IsPlayerInRangeOfPoint(i, 1000.0, pos[0],pos[1],pos[2])) continue;
		format(string,sizeof(string),"%s\n",player_name[i]),strcat(string,str);
		callers = true;
	}
	if(!callers) return ErrorMessage(playerid,"Викликів не поступали");
	D(playerid,D_REPAIRS,DSL,""YELLOW"Поступившие вызовы",string,"Вибрати","Відміна");
	return 1;
}
CMD:stream(playerid) {  //youtube
	new string[2000], status;
	format(string, sizeof(string),""W"№\t"ORANGE"Назва канала\t"W"Ник\n");
	for(new i = 0; i < 100; i++){
		if(youtube[i][you_uid] == 0) continue;
		format(string, sizeof(string),"%s"W"%i\t"ORANGE"%s\t"W"%s\n",string,i+1,youtube[i][you_name],player_name[youtube[i][you_id]]);
		status = 1;
	}
	if(status == 1) D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Стримеры онлайн",string, "Закрити", "");
	else D(playerid, DIALOG_NONE, DSM, ""YELLOW"Стримеры онлайн",""W"В данный момент никто не ведет стрим", "Закрити", "");
	return 1;
}
CMD:live(playerid) {  //youtube
	new idyoutube = 0,rows;
	new query[100], string[100];
	if(!youtube_player[playerid]){
		if(youtube_time[playerid] > gettime()) return ErrorMessage(playerid,"Команду можна використовувати раз в 5 хвилин!");
		format(query,sizeof(query),"SELECT * FROM `streamers` WHERE `uid` = '%i' LIMIT 1 ",PlayerInfo[playerid][pID]);
		new Cache:result = mysql_query(connects, query);
		cache_get_row_count(rows);
		if(rows) {
			for(new i = 0; i < 100; i++){
				if(youtube[i][you_uid] != 0) continue;
				idyoutube = i;
				break;
			}
			cache_get_value_name(0, "name",youtube[idyoutube][you_name],18);
			youtube[idyoutube][you_uid] = PlayerInfo[playerid][pID];
			youtube[idyoutube][you_id] = playerid;
			youtube_player[playerid] = 1;
			format(string, sizeof(string),""ORANGE"Ви вышли в режим стрима, ваш канал %s",youtube[idyoutube][you_name]);
			SendClientMessage(playerid, -1, string);
			youtube_time[playerid] = gettime()+300;
		}
		else ErrorMessage(playerid,"Ви не стример!");
		cache_delete(result);
	}
	else {
		SendClientMessage(playerid, -1, ""ORANGE"Ви завершили стрим");
		youtube_player[playerid] = 0;
		for(new i = 0; i < 100; i++){
			if(youtube[i][you_uid] == PlayerInfo[playerid][pID]) {
				youtube[i][you_name][0] = EOS;
				youtube[i][you_datasub][0] = EOS;
				youtube[i][you_id] = 0;
				youtube[i][you_uid] = 0;
				youtube[i][you_date] = 0;
				youtube[i][you_subsctiptions] = 0;
				youtube[i][you_timestream] = 0;
				break;
			}	
		}
	}
	return 1;
}

CMD:offgettime(playerid, const params[])  {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params,"p< >s[24]",params)) return SendEsp(playerid,"/offgettime [ник]");
	new rows;
	new query[250], string[550],header[64];
	new b_date[15], online[15], afk[15];
//	if(youtube_time[playerid] > gettime()) return ErrorMessage(playerid,"Команду можна використовувати раз в 5 хвилин!");
	format(header, sizeof(header),""YELLOW"Оффлайн статистика: %s",params);
	format(string, sizeof(string),""ORANGE"Дата\t"ORANGE"Онлайн за день\t"ORANGE"АФК за день\n");
	format(string, sizeof(string),"%s"ORANGE"Год-Месяц-Число\t"ORANGE"ЧЧ:ММ:СС\t"ORANGE"ЧЧ:ММ:СС\n",string);
	mysql_format(connects, query, sizeof(query), "SELECT `date`, SEC_TO_TIME(`online_sec`-`afk_sec`) as online, SEC_TO_TIME(`afk_sec`) as afk FROM `online_player` WHERE `accountid` = (SELECT `pID` FROM `accounts` WHERE `Name` LIKE '%e') ORDER BY `id` DESC LIMIT 7",params);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	if(rows) {
		for(new i = 0; i < rows; i++){
			cache_get_value_name(i, "date",b_date,sizeof(b_date));
			cache_get_value_name(i, "online",online,sizeof(online));
			cache_get_value_name(i, "afk",afk,sizeof(afk));
			format(string, sizeof(string),"%s"W"%s\t"W"%s\t"W"%s\n",string,b_date,online,afk);
		}
		D(playerid, DIALOG_NONE, DSTH, header,string, "Закрити", "");
	}
	else ErrorMessage(playerid,"Такого аккаунта не существует");
	cache_delete(result);
	return 1;
}
CMD:leaders(playerid) {
	new countleader = 0;
	new string[1650];
	new leader[25];
	format(string, sizeof(string),""W"Фракція\t"ORANGE"Лідер\t"W"Номер\t"W"Статус\n");
	format(string, sizeof(string),"%s"ORANGE"Заместители організацій - /subleaders\n",string);
	for(new i = 1;i < MAX_FRACTIONS;i ++) {
		if(i == fMAYOR || i == fINSTRUCTORS) continue;
	
		if(!strcmp(FI[i][fLeader],"None",true)) strmid(leader,"Відсутній", 0, strlen("Відсутній"), 25);
		else strmid(leader,"Відсутній", 0, strlen("Відсутній"), 25);

		new idFrac = GetCheckID(FI[i][fLeader]);
		if(idFrac != INVALID_PLAYER_ID) {
			format(string, sizeof(string),"%s"W"%s\t"W"%s[%d]%s\t"W"т. %d\t"GREEN"Онлайн\n",string,FI[i][fName],player_name[idFrac],idFrac,TI[idFrac][tAFK]>=3?("{ffa800}[AFK]"):(""),PlayerInfo[idFrac][pPhone]);
			countleader++;
		}
		else{
			if(!strcmp(FI[i][fLeader],"None",true)) format(string, sizeof(string),"%s"W"%s\t"W"\t"ORANGE"Відсутній лідер\n",string,FI[i][fName]);
			else format(string, sizeof(string),"%s"W"%s\t"W"%s\t"W"-\t"NO"Оффлайн\n",string,FI[i][fName],FI[i][fLeader]);
		}
	}
	format(string, sizeof(string), "%s\n"ORANGE"В мережі %i лідер(ів)", string,countleader);
	D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Лідери організацій",string, "Закрити", "");
	return 1;
}
CMD:subleaders(playerid) {
	new countleader = 0;
	new string[2000];
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pMember] == 0) continue;
		if(PlayerInfo[i][pLeader] != 0) continue;
		if(PlayerInfo[i][pRank] < FI[GetTeamID(i)][fInviteRang]) continue;
		if(PlayerInfo[i][pAdmin]) continue;
		format(string, sizeof(string), "%s{f6f6d9}%s [%d] - [т. %d] - %s %s\n", string, player_name[i], i,PlayerInfo[i][pPhone], FI[PlayerInfo[i][pMember]][fName],TI[i][tAFK]>=3?("{ffa800}[AFK]"):(""));
		countleader++;
	}
	if(countleader > 0) {
		format(string, sizeof(string), "%s\n"ORANGE"В мережі %i заступник", string,countleader);
		D(playerid, DIALOG_NONE, DSM, ""YELLOW"Заступники організації",string, "Закрити", "");
	}
	else D(playerid, DIALOG_NONE, DSM, ""YELLOW"Заступники організацій",""W"Немає заступників в мережі", "Закрити", "");
	return 1;
}
CMD:fwarn(playerid, params[]) {
	if(!PlayerInfo[playerid][pMember]) return 1;
	new string[156];
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUninviteRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", FI[GetTeamID(playerid)][fUninviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendEsp(playerid, "/fwarn [id] [причина]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember] || PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return ErrorMessage(playerid,"Гравець не в вашій організації / выше в должности");
    if(IsAIP(params[1])) return 1;
	PlayerInfo[params[0]][pfWarn] ++;
	UpdatePlayerData(params[0],"fwarn",PlayerInfo[params[0]][pfWarn]);
	FracLog(LOGS_FWARN,player_name[playerid],player_name[params[0]],params[1]);

	if(PlayerInfo[params[0]][pfWarn]>=3) {
		if(start_work[params[0]]) {
			SendOk(params[0],"робочий день закінчений");
			start_work[params[0]] = 0;
		}
		add_jobinfo(params[0],params[1]);
		PlayerInfo[params[0]][pRank] = 0;
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pJob] = 0;
		PlayerInfo[params[0]][pFracSkin] = 0;
		SetPlayerColor(params[0],0xFFFFFF11);
		skin_player(params[0]);
		SaveAccount(params[0]);
		PlayerInfo[params[0]][pfWarn] = 0;
		UpdatePlayerData(params[0],"fwarn",0);
		format(string, sizeof(string), "[F] %s выдал выговор и уволил гравця %s (3/3). Причина: %s",player_name[playerid],player_name[params[0]],params[1]);
		SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTRED,string);
		FracLog(LOGS_UNINVITE,player_name[playerid],player_name[params[0]],params[1]);
		return 1;
	}
	format(string, sizeof(string), "[F] %s выдал выговор гравцю %s (%i/3). Причина: %s",player_name[playerid],player_name[params[0]],PlayerInfo[params[0]][pfWarn],params[1]);
	SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTRED,string);
	return 1;
}

CMD:funwarn(playerid, params[]) {
	if(!PlayerInfo[playerid][pMember]) return 1;
	new string[156];
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUninviteRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", FI[GetTeamID(playerid)][fUninviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendEsp(playerid, "/funwarn [id] [причина]");
	if(!PlayerInfo[params[0]][pfWarn]) return ErrorMessage(playerid, "У данного гравця нет выговоров");
	if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember] || PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return ErrorMessage(playerid,"Гравець не в вашій організації / выше в должности");
	PlayerInfo[params[0]][pfWarn]--;
	UpdatePlayerData(params[0],"fwarn",PlayerInfo[params[0]][pfWarn]);
	format(string, sizeof(string), "[F] %s снял выговор гравцю %s. Причина: %s",player_name[playerid],player_name[params[0]],params[1]);
	SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTRED,string);
	FracLog(LOGS_FUNWARN,player_name[playerid],player_name[params[0]],params[1]);
	return 1;
}
CMD:members(playerid) {
	if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
	new ids = 0;
	new string[3000],str[128];
	strcat(str,"ID\tРанг\tТелефон\tДогани\tІм'я"W"\n\n");
	strcat(string,str);
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pMember] != PlayerInfo[playerid][pMember])continue;
		if(PlayerInfo[i][pRank] < 1 || PlayerInfo[i][pMember] < 1) continue;
		if(PlayerInfo[i][pAdmin]) continue;
		format(str, sizeof(str), "%d\t%d\t%d\t\t%d/3\t\t%s %s %s\n",i,PlayerInfo[i][pRank],PlayerInfo[i][pPhone],PlayerInfo[i][pfWarn],player_name[i],(start_work[i]) ? ("[На роботі]") : ("[Не на роботі]"),(TI[i][tAFK] > 3) ? (""YELLOW"[AFK]"W""):(""));
		strcat(string,str);
		ids++;
	}
	D(playerid, DIALOG_NONE, DSM, ""YELLOW"Члени організації онлайн", string, "Закрити", "");
	new strr[128];
	format(strr,sizeof(strr),"Всього гравців в організації: "ORANGE"%d",ids);
	SendOk(playerid,strr);
	return 1;
}
CMD:invite(playerid, params[]) {
	if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необхідно почати робочий день");
	new string[128];
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", FI[GetTeamID(playerid)][fInviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"d",params[0])) return	SendEsp(playerid, "/invite [ID]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(IsPlayerInAnyVehicle(params[0])) return ErrorMessage(playerid, "Гравець в машине");
	if(GetTeamID(params[0]) > 0) return ErrorMessage(playerid, "Гравець уже состоит в організації");
	if(PlayerInfo[params[0]][pWarns] >= 1) return ErrorMessage(playerid, "У гравця имеются предупреждения");
	//if(PlayerInfo[params[0]][pLevel] < 2) return ErrorMessage(playerid, "У гравця должен быть 2 рівень");
	if(bl_info[params[0]][bl_fraction][PlayerInfo[playerid][pMember]]) return ErrorMessage(playerid, "Гравець в ЧС вашій організації");
	if(!IsPlayerStream(7.0, playerid, params[0])) return ErrorMessage(playerid, "Ви далеко від гравця");
	if(GetPVarInt(params[0],"krup")) return ErrorMessage(playerid, "Цей гравець работает крупье");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	switch(PlayerInfo[playerid][pMember]) {
		case fLSPD,fSFPD,fLVPD: {
			if(PlayerInfo[params[0]][pLevel] < invite_frac[0]) {
				format(string,sizeof(string),"У гравця должен быть %i рівень", invite_frac[0]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fFBI: {
			if(PlayerInfo[params[0]][pLevel] < invite_frac[1]) {
				format(string,sizeof(string),"У гравця должен быть %i рівень", invite_frac[1]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fARMYSF,fARMYLV: {
			if(PlayerInfo[params[0]][pLevel] < invite_frac[2]) {
				format(string,sizeof(string),"У гравця должен быть %i рівень", invite_frac[2]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fMEDICLS,fMEDICSF,fMEDICLV: {
			if(PlayerInfo[params[0]][pLevel] < invite_frac[3]) {
				format(string,sizeof(string),"У гравця должен быть %i рівень", invite_frac[3]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fLSNEWS,fSFNEWS,fLVNEWS: {
			if(PlayerInfo[params[0]][pLevel] < invite_frac[4]) {
				format(string,sizeof(string),"У гравця должен быть %i рівень", invite_frac[4]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fLCN,fYAKUZA,fRM: {
			if(PlayerInfo[params[0]][pLevel] < invite_frac[5]) {
				format(string,sizeof(string),"У гравця должен быть %i рівень", invite_frac[5]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
			if(PlayerInfo[params[0]][pLevel] < invite_frac[6]) {
				format(string,sizeof(string),"У гравця должен быть %i рівень", invite_frac[6]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
		case fWHITEHOUSE: {
			if(PlayerInfo[params[0]][pLevel] < invite_frac[7]) {
				format(string,sizeof(string),"У гравця должен быть %i рівень", invite_frac[7]);
				ErrorMessage(playerid,string);
				return 1;
			}
		}
	}
	new mes[400];
	for(new i;i<10;i++) {
		new skinid = gFractionSkin[PlayerInfo[playerid][pMember]][i];
		if(!skinid) break;
		if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
		else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
	}
	D(playerid,dInviteSkin,DSL,player_name[params[0]],mes,"Прийняти","");
	SetPVarInt(playerid,"invkot",params[0]);
	return 1;
}
CMD:uninvite(playerid, params[]) {
	if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необхідно почати робочий день");
	new string[156];
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUninviteRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", FI[GetTeamID(playerid)][fUninviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params, "ds[128]",params[0],params[1])) return SendEsp(playerid, "/uninvite [playerid] [причина]");
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
    if(IsAIP(params[1])) return 1;
	if(PlayerInfo[params[0]][pLeader] >= 1) return ErrorMessage(playerid, "Ви не можете уволить лідера");
	if(PlayerInfo[playerid][pLeader] <= 0 && PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return ErrorMessage(playerid,"Ваш ранг недостатній");
	if(PlayerInfo[params[0]][pMember] == 0) return ErrorMessage(playerid,"Гравець не состоит в вашій організації");
	if(PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pLeader] || PlayerInfo[params[0]][pMember] == PlayerInfo[playerid][pMember]) {
		if(PlayerInfo[params[0]][pMember] > 0) {
			format(string, sizeof(string),""YELLOW"%s{f6f6d9} звільнив вас із організації. Причина: "W"%s", player_name[playerid],params[1]);
			SendUse(params[0],string);
			format(string, sizeof(string),""YELLOW"%s{f6f6d9} был уволен из організації. Причина: "W"%s", player_name[params[0]],params[1]);
			SendUse(playerid, string);
			if(start_work[params[0]]) {
				SendOk(params[0],"робочий день закінчений");
				start_work[params[0]] = 0;
			}
			if(GetPlayerState(params[0]) == PLAYER_STATE_DRIVER) RemovePlayerFromVehicleAC(params[0]);
			add_jobinfo(params[0],params[1]);
			PlayerInfo[params[0]][pRank] = 0;
			PlayerInfo[params[0]][pMember] = 0;
			PlayerInfo[params[0]][pJob] = 0;
			PlayerInfo[params[0]][pFracSkin] = 0;
			SetPlayerColor(params[0],0xFFFFFF11);
			skin_player(params[0]);
			SaveAccount(params[0]);
			SetPlayerArmour(params[0], 0);
			ResetPlayerWeapons(params[0]);
			FracLog(LOGS_INVITE,player_name[playerid],player_name[params[0]],params[1]);
		}
	}
	return 1;
}
CMD:leave(playerid) {
	if(PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid,"Лідеру запрещено");
	if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Не можна использовать в машине");
	D(playerid,D_LEAVE,DSM, ""YELLOW"Увольнение", "\n\n"W"Ви дійсно хочете покинуть организацию по собственному желанию?\n\n", "Покинуть", "Відміна");
	return 1;
}
CMD:taxispcar(playerid) {
	if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Ви не сотрудник транспортной компании");
	if(PlayerInfo[playerid][bizz_status] < 3) return ErrorMessage(playerid,"Данная функція доступна руководителю таксопарка и управляющему");
	new string[128];
	for(new i = GetVehiclePoolSize()+1; --i != 0;)  {
		if(VehicleInfo[i][vBizz] != PlayerInfo[playerid][bizz_work]) continue;
		if(IsVehicleOccupied(i)) continue;
		LinkVehicleToInterior(i, 0);
		SetVehicleVirtualWorld(i, 0);
		SetVehicleToRespawn(i);
	}
	format(string, sizeof(string), "[TAXI] [%s] %s заспавнил не зайняті машини",taxi_class[PlayerInfo[playerid][bizz_status]-1],player_name[playerid]);
	BizzMSG(PlayerInfo[playerid][bizz_work],COLOR_YELLOW,string);
	return 1;
}
CMD:trspcar(playerid) {
	if(!IsATK(playerid)) return ErrorMessage(playerid,"Ви не сотрудник транспортной компании");
	if(PlayerInfo[playerid][bizz_status] < 2) return ErrorMessage(playerid,"Данная функція доступна руководителю транспортной компании и управляющему");
	new string[128];
	for(new i = GetVehiclePoolSize()+1; --i != 0;)  {
		if(VehicleInfo[i][vBizz] != PlayerInfo[playerid][bizz_work]) continue;
		if(IsVehicleOccupied(i)) continue;
		LinkVehicleToInterior(i, 0);
		SetVehicleVirtualWorld(i, 0);
		SetVehicleToRespawn(i);
	}
	format(string, sizeof(string), "[TRUCK] [%s] %s заспавнил не зайняті машини",tk_class[PlayerInfo[playerid][bizz_status]-1],player_name[playerid]);
	BizzMSG(PlayerInfo[playerid][bizz_work],COLOR_YELLOW,string);
	return 1;
}
CMD:trinvite(playerid, params[]) {
	if(!IsATK(playerid)) return ErrorMessage(playerid,"Ви не сотрудник транспортной компании");
	if(PlayerInfo[playerid][bizz_status] < 2) return ErrorMessage(playerid,"Данная функція доступна руководителю транспортной компании и управляющему");
	new taxi = PlayerInfo[playerid][bizz_work];
	if(info_funcmembers(taxi) >= 50) return ErrorMessage(playerid,"В транспортной компании недостаточно свободных мест");
	if(sscanf(params,"d",params[0])) return	SendEsp(playerid, "/trinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(7.0, playerid, params[0])) return ErrorMessage(playerid, "Ви далеко від гравця");
	if(PlayerInfo[params[0]][pLevel] < 4) return ErrorMessage(playerid, "У гравця недостаточный рівень для данной работы. Необходим 4 рівень");
	if(IsPlayerInAnyVehicle(params[0])) return ErrorMessage(playerid, "Гравець в машине");
	if(PlayerInfo[params[0]][bizz_work] == 2 || PlayerInfo[params[0]][bizz_work] == 3 || PlayerInfo[params[0]][bizz_work] == 4) return ErrorMessage(playerid, "Цей гравець работает в таксопарке");
	if(PlayerInfo[params[0]][bizz_work] == 5 || PlayerInfo[params[0]][bizz_work] == 6 || PlayerInfo[params[0]][bizz_work] == 7) return ErrorMessage(playerid, "Цей гравець уже работает в транспортной компании");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new mes[128];
	format(mes,sizeof(mes),"Ви предложили "YELLOW"%s{f6f6d9} вступить в транспортную компанию",player_name[params[0]]);
	SendUse(playerid,mes);
	format(mes,sizeof(mes),""YELLOW"%s{f6f6d9} хочет устроить Вас в транспортную компанию: "W"%s",player_name[playerid],FuncBizz[taxi][funcbName]);
	SendUse(params[0],mes);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	SetPVarInt(params[0], "tk_id", taxi); 
	return 1;
}
CMD:tinvite(playerid, params[]) {
	if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Ви не сотрудник таксопарка");
	if(PlayerInfo[playerid][bizz_status] <= 4) return ErrorMessage(playerid,"Данная функція доступна руководителю таксопарка и управляющему");
	new taxi = PlayerInfo[playerid][bizz_work];
	if(info_funcmembers(taxi) >= 50) return ErrorMessage(playerid,"В таксопарке недостаточно свободных мест");
	if(sscanf(params,"d",params[0])) return	SendEsp(playerid, "/tinvite [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerStream(7.0, playerid, params[0])) return ErrorMessage(playerid, "Ви далеко від гравця");
	if(PlayerInfo[params[0]][pLevel] < 2) return ErrorMessage(playerid, "У гравця недостаточный рівень для данной работы");
	if(IsPlayerInAnyVehicle(params[0])) return ErrorMessage(playerid, "Гравець в машине");
	if(PlayerInfo[params[0]][bizz_work] == 2 || PlayerInfo[params[0]][bizz_work] == 3 || PlayerInfo[params[0]][bizz_work] == 4) return ErrorMessage(playerid, "Цей гравець уже работает в таксопарке");
	if(PlayerInfo[params[0]][bizz_work] == 5 || PlayerInfo[params[0]][bizz_work] == 6 || PlayerInfo[params[0]][bizz_work] == 7) return ErrorMessage(playerid, "Цей гравець работает в транспортной компании");
	if(active_accept(params[0])) return ErrorMessage(playerid,"У гравця уже є активна пропозиція");
	new mes[128];
	format(mes,sizeof(mes),"Ви предложили "YELLOW"%s{f6f6d9} вступити в ваш таксопарк",player_name[params[0]]);
	SendUse(playerid,mes);
	format(mes,sizeof(mes),""YELLOW"%s{f6f6d9} хочет устроить Вас в таксопарк: "W"%s",player_name[playerid],FuncBizz[taxi][funcbName]);
	SendUse(params[0],mes);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

	SetPVarInt(params[0], "taxi_id", taxi); 
	return 1;
}
alias:tr("trs");
CMD:tr(playerid, params[]) {
	if(PlayerInfo[playerid][bizz_work] != 2 && PlayerInfo[playerid][bizz_work] != 3 && PlayerInfo[playerid][bizz_work] != 4 && PlayerInfo[playerid][bizz_work] != 5 && PlayerInfo[playerid][bizz_work] != 6 && PlayerInfo[playerid][bizz_work] != 7) return 1;
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	if(!PlayerInfo[playerid][pSettings][3]) return ErrorMessage(playerid,"Для начала включите чат компании. /mm > особисті налаштування > чат компании");
	new string[144];
	if(isnull(params) || strlen(params) > 100) return SendEsp(playerid,"/tr [введіть текст]");
	switch(PlayerInfo[playerid][bizz_work]) {
		case 2..4: format(string, sizeof(string), "[TAXI] [%s] %s: %s",taxi_class[PlayerInfo[playerid][bizz_status]-1],player_name[playerid],params);
		case 5..7: format(string, sizeof(string), "[TRUCK] [%s] %s: %s",tk_class[PlayerInfo[playerid][bizz_status]-1],player_name[playerid],params);
	}
	BizzMSG(PlayerInfo[playerid][bizz_work],COLOR_YELLOW,string);
	return true;
}
CMD:taxi(playerid,params[]) {
    if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Ви не водитель таксі");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != PlayerInfo[playerid][bizz_work]) return ErrorMessage(playerid,"Ви повинні бути за рулем таксі");
	if(sscanf(params,"u",params[0])) return SendEsp(playerid,"/taxi [ID гравця]");
	if(params[0] == playerid) return ErrorMessage(playerid,"Ви не можете запросить місце призначення у себя");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(GetPlayerState(params[0]) != PLAYER_STATE_PASSENGER || GetPlayerVehicleID(params[0]) != GetPlayerVehicleID(playerid)) return ErrorMessage(playerid,"Гравець должен сидеть на пассажирском месте в Вашем таксі");
	new mes[128];
	format(mes,sizeof(mes),"%s'y отправлен запрос на получение данных о месте назначения",player_name[params[0]]);
	SendClientMessage(playerid,0x3399FFFF,mes);
	format(mes,sizeof(mes),"Водитель таксі "W"%s {"#269BD8"}запросил данные о месте назначения",player_name[playerid]);
	SendClientMessage(params[0],0x3399FFFF,mes);
	SendClientMessage(params[0],0x3399FFFF,"Зайдите в карту и поставьте правой кнопкой мыши метку там, куда хочете отправиться");
	SetPVarInt(params[0],"selectpoint",1);
	SetPVarInt(params[0],"taxidriver",playerid);
	return true;
}

CMD:untaxi(playerid,params[]) {
    if(!IsATaxi(playerid)) return ErrorMessage(playerid,"Ви не водитель таксі");
	RemovePlayerMapIcon(playerid,iconTaxi);
	return true;
}
CMD:bl( playerid ) {
	if(!PlayerInfo[playerid][pMember]) return 1;
	else if(PlayerInfo[playerid][pRank] < FI[PlayerInfo[playerid][pMember]][fInviteRang]) return 1;
	D(playerid,D_BL,DSL,""YELLOW"Чорний список", ""YELLOW"1."W" Внести в ЧС\n"YELLOW"2."W" Вычеркнуть из ЧС\n"YELLOW"3."W" Переглянути ЧС\n"YELLOW"4."W" Переглянути ЧС{33AA33} [онлайн]", "Вибрати", "Закрити");
	return 1;
}
CMD:vacancy(playerid) {
    new vacancies = 0;
    new str[1024];
    new string[6 + 28 + 24];
	for(new i = 0; i < 14; i++) {
	    if(VacancyInfo[i][VacancyStatus]) {
			format(string, sizeof(string), ""W"%d. %s\n", vacancies + 1, FI[VacancyInfo[i][VacancyFraction]][fName], VacancyInfo[i][VacancyTime]);
			strcat(str, string);
	        vacancies++;
	    }
	}
	if(vacancies != 14 && PlayerInfo[playerid][pMember] && PlayerInfo[playerid][pRank] >= FI[GetTeamID(playerid)][fInviteRang]) {
	    strcat(str, "Добавить вакансию");
	  	return D(playerid,D_VACANCY, DSL, ""YELLOW"Вакансии", str, "Далі", "Закрити");
	}
	if(vacancies == 0) return ErrorMessage(playerid, "Сейчас нет доступных вакансий");
	return D(playerid, D_VACANCY, DSL, ""YELLOW"Вакансии", str, "Далі", "Закрити");
}
CMD:lmenu(playerid) {
	if(!PlayerInfo[playerid][pLeader]) return 1;
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необхідно почати робочий день");
	if(!IsAGang(playerid)) {
		static const f_str[] = ""YELLOW"1."W" Может принимать:\t"ORANGE"%s(%i)"W"\n\
"YELLOW"2."W" Может увольнять:\t"ORANGE"%s(%i)"W"\n\
"YELLOW"3."W" Может повышать:\t"ORANGE"%s(%i)\n\
"YELLOW"4."W" Установить сообщение фракції\n\
"YELLOW"5."W" Банк фракції\n\
"YELLOW"6."W" Респавн не зайнятих авто\n\
"YELLOW"7."W" Анти Team-Kill\t%s";
		new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33) + (-2 + 33) + 40];
		format(string,sizeof(string),f_str,GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fInviteRang]),FI[GetTeamID(playerid)][fInviteRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fUninviteRang]),FI[GetTeamID(playerid)][fUninviteRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fGiveRang]),FI[GetTeamID(playerid)][fGiveRang],FI[GetTeamID(playerid)][fAntiTK]?(""GREEN"Вкл"):(""NO"Вимк"));
		D(playerid,D_LMENU,DSL,""YELLOW"Панель лідера", string, "Вибрати", "Закрити");
	}
	else {
		static const f_str[] = ""YELLOW"1."W" Может принимать:\t"ORANGE"%s(%i)"W"\n\
"YELLOW"2."W" Может увольнять:\t"ORANGE"%s(%i)"W"\n\
"YELLOW"3."W" Может повышать:\t"ORANGE"%s(%i)\n\
"YELLOW"4."W" Доступ к складу:\t"ORANGE"%s(%i)\n\
"YELLOW"5."W" Установить сообщение фракції\n\
"YELLOW"6."W" Банк фракції\n\
"YELLOW"7."W" Респавн не зайнятих авто\n\
"YELLOW"8."W" Анти Team-Kill\t%s\n\
"YELLOW"9."W" Названия рангов\n\
"YELLOW"10."W" Дипломатия\n\
"YELLOW"11."W" G-POINTS";
		new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33) + (-2 + 33) + 40];
		format(string,sizeof(string),f_str,GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fInviteRang]),FI[GetTeamID(playerid)][fInviteRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fUninviteRang]),FI[GetTeamID(playerid)][fUninviteRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fGiveRang]),FI[GetTeamID(playerid)][fGiveRang],
											GetRankName(GetTeamID(playerid),FI[GetTeamID(playerid)][fUseStock]),FI[GetTeamID(playerid)][fUseStock],FI[GetTeamID(playerid)][fAntiTK]?(""GREEN"Вкл"):(""NO"Вимк"));
		D(playerid,D_LMENU_2,DSL,""YELLOW"Панель лідера", string, "Вибрати", "Закрити");
	}
	return 1;
}
CMD:gspcars(playerid) {
	if(!IsAGang(playerid)) return 1;
	new string[128];
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) {
		format(string,sizeof(string),"Данная функція доступна с %i ранга", FI[GetTeamID(playerid)][fInviteRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	for(new i = GetVehiclePoolSize()+1; --i != 0;)  {
		if(VehicleInfo[i][vTeam] != PlayerInfo[playerid][pMember]) continue;
		if(IsVehicleOccupied(i)) continue;
		SetVehicleToRespawn(i);
	}
	format(string,sizeof(string),"[F] %s %s заспавнил не зайняті машини", GetRankName(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]),player_name[playerid],playerid);
	SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTRED, string);
	return 1;
}
CMD:give(playerid, params[]) {
	if(sscanf(params, "u", params[0])) return SendEsp(playerid, "/give [id]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(!ProxDetectorS(5.0, playerid, params[0])) return ErrorMessage(playerid, "Ви слишком далеко");
	static const f_str[] = "Назва предмета\tКоличество\n"YELLOW"1."W" Аптечки\t"ORANGE"%d\n"YELLOW"2."W" Маски\t"ORANGE"%d\n"YELLOW"3."W" Боєприпаси\t"ORANGE"%d\n"YELLOW"4."W" Наркотики\t"ORANGE"%d\n"YELLOW"5."W" Ремкомплект\t"ORANGE"%d";
	new string[sizeof f_str + 1 + (-2 + 5) + (-2 + 5)+ (-2 + 5) + (-2 + 5) + (-2 + 5)];
	format(string,sizeof(string),f_str,PlayerInfo[playerid][pMedKit],PlayerInfo[playerid][pMask],PlayerInfo[playerid][pMats],PlayerInfo[playerid][pDrugs],PlayerInfo[playerid][pInstrument]);
	D(playerid, D_GIVE, DSTH, ""YELLOW"Передача предмета",string,"Вибрати", "Відміна");
	SetPVarInt(playerid, "Give_ID",params[0]);
	return 1;
}
CMD:dropgun(playerid, param[]) {
    if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(TI[playerid][tDuel] != -1) return 0;
	if(TI[playerid][tGunArea][0] != 0) return 0; 
	if(TI[playerid][tDMArea][0] != 0) return 0;
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Не можна использовать на голодных играх");
	new weapon = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	new slot = GetWeaponSlot(weapon);
	if(GunPlayer[playerid][GetWeaponSlot(weapon)][0] != weapon) return 0;
	if(GunPlayer[playerid][slot][1]!=ammo) return 0;
	if(weapon < 1 || weapon > 47) return ErrorMessage(playerid, "Зброя должно находиться в руках");
	DropGun(playerid,weapon,ammo);
    return 1;
}
CMD:changeskin(playerid,params[]) {
    new mes[400];
    if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необхідно почати робочий день");
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUninviteRang]) {
		format(mes,128,"Данная функція доступна с %i ранга", FI[GetTeamID(playerid)][fUninviteRang]);
		ErrorMessage(playerid,mes);
		return 1;
	}
	if(sscanf(params,"u",params[0])) return SendEsp(playerid,"/changeskin [ID]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Гравець не состоит в вашій організації");
	if(PlayerInfo[params[0]][pRank] >= PlayerInfo[playerid][pRank] && params[0] != playerid) return ErrorMessage(playerid,"Ваш ранг недостатній");
	SetPVarInt(playerid,"params[0]",params[0]);
	for(new i; i < 10;i++) {
		new skinid = gFractionSkin[PlayerInfo[playerid][pMember]][i];
		if(!skinid) break;
		if(skinid == PlayerInfo[params[0]][pFracSkin]) {
			if(!i) format(mes,sizeof(mes),""YELLOW"Скин %d [%d]",i+1,skinid);
			else format(mes,sizeof(mes),"%s\n"YELLOW"Скин %d [%d]",mes,i+1,skinid);
		}
		else {
			if(!i) format(mes,sizeof(mes),"Скин %d [%d]",i+1,skinid);
			else format(mes,sizeof(mes),"%s\nСкин %d [%d]",mes,i+1,skinid);
		}
	}
	D(playerid,dFractionSkin,2,player_name[params[0]],mes,"Змінити","Відміна");
	return true;
}
CMD:rang(playerid, params[]) {
	if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
	if(!start_work[playerid]) return ErrorMessage(playerid, "Необхідно почати робочий день");
	new string[512];
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fGiveRang]) {
		format(string,128,"Доступно с %i ранга", FI[PlayerInfo[playerid][pMember]][fGiveRang]);
		ErrorMessage(playerid,string);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/rang [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[params[0]][pLeader] >= 1) return ErrorMessage(playerid, not_id);
	if(PlayerInfo[playerid][pMember] != PlayerInfo[params[0]][pMember]) return ErrorMessage(playerid,"Гравець не состоит в вашій організації");
	if(PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return ErrorMessage(playerid, "Ваш ранг недостатній");

	if(PlayerInfo[playerid][pRank] == FI[PlayerInfo[playerid][pMember]][fMaxRang]) {
		for(new i = 1; i <= FI[PlayerInfo[playerid][pMember]][fMaxRang]; i++) {
			if(i>= PlayerInfo[playerid][pRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PlayerInfo[params[0]][pRank] == i) ? (""YELLOW"") : (""),GetRankName(PlayerInfo[playerid][pMember],i),i);
			D(playerid,dRank,DSL,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
	}
	else if(PlayerInfo[playerid][pRank] == FI[PlayerInfo[playerid][pMember]][fMaxRang]-(FI[PlayerInfo[playerid][pMember]][fMaxRang]-PlayerInfo[playerid][pRank])) {
		for(new i = 1; i <= FI[PlayerInfo[playerid][pMember]][fMaxRang]; i++) {
			if(i>= PlayerInfo[playerid][pRank]) break;
			format(string,sizeof(string),"%s%s%s (%i)\n",string,(PlayerInfo[params[0]][pRank] == i) ? (""YELLOW"") : (""),GetRankName(PlayerInfo[playerid][pMember],i),i);
			D(playerid,dRank,DSL,""YELLOW"Виберіть ранг",string,"Вибрати","Закрити");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
	}
	return 1;
}
CMD:f(playerid, params[]) {
	if(!IsAMafia(playerid) && !IsAGang(playerid)) return true;
	if(!PlayerInfo[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат організації. /mm > особисті налаштування > чат організації");
	if(PlayerInfo[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/f [текст]");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");

	static const f_str[] = "[F] %s %s[%d]: %s";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];

	format(string, sizeof(string), f_str,GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PlayerInfo[playerid][pMember], 0x6699ccFF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PlayerInfo[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PlayerInfo[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:fb(playerid, params[]) {
	if(!IsAMafia(playerid) && !IsAGang(playerid)) return true;
	if(!PlayerInfo[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат організації. /mm > особисті налаштування > чат організації");
	if(PlayerInfo[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/fb [текст]");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");

	static const f_str[] = "[F] %s %s[%d]: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];

	format(string, sizeof(string), f_str,GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PlayerInfo[playerid][pMember], 0x6699ccFF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PlayerInfo[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PlayerInfo[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:rb(playerid,params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PlayerInfo[playerid][pMember] != fINSTRUCTORS && PlayerInfo[playerid][pMember] != fMAYOR && PlayerInfo[playerid][pMember] != fWHITEHOUSE) return true;
	if(!PlayerInfo[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат організації. /mm > особисті налаштування > чат організації");
	if(PlayerInfo[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/rb [текст]");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;

	static const f_str[] = "[R] %s %s[%d]: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];
	
	format(string, sizeof(string), f_str,GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PlayerInfo[playerid][pMember], 0x31cf63FF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PlayerInfo[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PlayerInfo[playerid][pMember], 0xADFFEFFF, string);
	return 1;
}
CMD:r(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PlayerInfo[playerid][pMember] != fINSTRUCTORS && PlayerInfo[playerid][pMember] != fMAYOR && PlayerInfo[playerid][pMember] != fWHITEHOUSE) return true;
	if(GetPVarInt(playerid,"takradio")) return ErrorMessage(playerid, "У вас немає рации");
	if(!PlayerInfo[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат організації. /mm > особисті налаштування > чат організації");
	if(PlayerInfo[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/r [текст]");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;

	static const f_str[] = "[R] %s %s[%d]: %s";
	new string[sizeof(f_str) +1 + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 105)];
	
	format(string, sizeof(string), f_str,GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid, result);
	SendFamilyMessage(PlayerInfo[playerid][pMember], 0x31cf63FF, string);
	foreach(new i:Player) if(GetPVarInt(i,"admin_tipster") == PlayerInfo[playerid][pMember]) SendClientMessage(i, COLOR_LIGHTRED, string);
	SendSpyMessage(PlayerInfo[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:rr(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && !IsAMafia(playerid)) return true;
	if(!PlayerInfo[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат організації. /mm > особисті налаштування > чат організації");
	if(PlayerInfo[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/rr [текст]");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;
	new string[156];
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	format(string, sizeof(string), "[%s] %s %s[%d]: %s",FI[GetTeamID(playerid)][fName],GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid, result);
	if(PlayerInfo[playerid][pMember] == fWHITEHOUSE && PlayerInfo[playerid][pRank] == MINISTRE_NEWS) SendNews(0x54548CFF,string);
	if(PlayerInfo[playerid][pMember] == fWHITEHOUSE && PlayerInfo[playerid][pRank] == MINISTRE_PD) SendCop(0x54548CFF,string);
	if(PlayerInfo[playerid][pMember] == fWHITEHOUSE && PlayerInfo[playerid][pRank] == MINISTRE_MEDICS) SendMedic(0x54548CFF,string);
	if(PlayerInfo[playerid][pMember] == fWHITEHOUSE && PlayerInfo[playerid][pRank] == MINISTRE_ARMY) SendArmy(0x54548CFF,string);

	if(IsACop(playerid)) SendCop(0x54548CFF,string);
	if(IsAArm(playerid)) SendArmy(0x54548CFF,string);
	if(IsAMedic(playerid)) SendMedic(0x54548CFF,string);
	if(IsANews(playerid)) SendNews(0x54548CFF,string);
	if(IsAMafia(playerid)) SendMafia(0x54548CFF,string);
	return true;
}
CMD:d(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PlayerInfo[playerid][pMember] != fMAYOR && PlayerInfo[playerid][pMember] != fWHITEHOUSE) return true;
	if(GetPVarInt(playerid,"takradio")) return ErrorMessage(playerid, "У вас немає рации");
	if(!PlayerInfo[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат організації. /mm > особисті налаштування > чат організації");
	if(PlayerInfo[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/d [текст]");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;
	new string[156];
	if(PlayerInfo[playerid][pAdmin] >= 1 || dostup[playerid] != 0) {
		format(string,sizeof(string),"[АДМІНІСТРАТОР] %s(%d): %s",player_name[playerid],playerid,params[0]);
	}
	else {
		if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
		if(GetSVarInt("d_timer") > gettime()) return ErrorMessage(playerid, "Пользоваться рацией департамента можно раз в 15 секунд");
		SetSVarInt("d_timer", gettime() + 15);
		format(string, sizeof(string), "[%s] %s %s[%d]: %s",FI[GetTeamID(playerid)][fName],GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid, result);
	}
	SendDepMessage(COLOR_ALLDEPT, string);
	SendSpyMessage(PlayerInfo[playerid][pMember], 0xADFFEFFF, string);
	foreach(new i:Player) {
	    if(PlayerInfo[i][pAdmin] < 1 || dostup[i] == 0) continue;
		switch(GetPVarInt(i,"admin_tipster")) {
			case 1-13,23: SendClientMessage(i, COLOR_ALLDEPT, string);
		}
	}
	return true;
}
CMD:db(playerid, params[]) {
	if(!IsACop(playerid) && !IsAMedic(playerid) && !IsAArm(playerid) && !IsANews(playerid) && PlayerInfo[playerid][pMember] != fINSTRUCTORS && PlayerInfo[playerid][pMember] != fMAYOR && PlayerInfo[playerid][pMember] != fWHITEHOUSE) return true;
	if(!PlayerInfo[playerid][pSettings][1]) return ErrorMessage(playerid,"Для начала включите чат організації. /mm > особисті налаштування > чат організації");
	if(PlayerInfo[playerid][pFMute] > 0) return ErrorMessage(playerid, "У Вас заглушка");
	new result[128];
	if(sscanf(params, "s[128]",result)) return SendEsp(playerid, "/db [текст]");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(!start_work[playerid]) return true;
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(GetSVarInt("d_timer") > gettime()) return ErrorMessage(playerid, "Пользоваться рацией департамента можно раз в 15 секунд");
	SetSVarInt("d_timer", gettime() + 15);

	static const f_str[] = "[%s] %s %s: (( %s ))";
	new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + 24) + (-2 + MAX_PLAYER_NAME) + (-2 + 100)];
	
	format(string, sizeof(string), f_str,FI[GetTeamID(playerid)][fName],GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid], result);
    SendDepMessage(COLOR_ALLDEPT, string);
	SendSpyMessage(PlayerInfo[playerid][pMember], 0xADFFEFFF, string);
	return true;
}
CMD:vipchat(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(GetPVarInt(playerid, "adm_vip")) {
		DeletePVar(playerid, "adm_vip");
		SendOk(playerid,"Прослушка VIP чата отключена");
	}
	else SetPVarInt(playerid, "adm_vip", 1),SendOk(playerid,"Прослушка VIP чата включена");
	return 1;
}
CMD:v(playerid,params[]) {
	if(PlayerInfo[playerid][pVips] != VIP_ECSCLUSIVE && PlayerInfo[playerid][pVips] != VIP_FOREVER) return 1;
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У вас бан чата");
	if(isnull(params) || strlen(params) > 144) return SendEsp(playerid,"/v [текст]");
	new string[128];
	foreach(new i:Player) {
		if(PlayerInfo[i][pVips] != VIP_ECSCLUSIVE && PlayerInfo[i][pVips] != VIP_FOREVER && !GetPVarInt(i, "adm_vip")) continue;
		format(string, sizeof(string), "[VIP] %s [%d]: %s", player_name[playerid],playerid,params);
		SendClientMessage(i, COLOR_BLUE, string);
	}
	return 1;
}
CMD:bheal(playerid,params[0]) {
	if(!IsAMedic(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Ви не медик");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/bheal [id]");
	if(params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return ErrorMessage(playerid, not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Ви далеко друг от друга");
	get_disease(playerid, params[0]);
	new string[128];
	format(string,sizeof(string),"осматривает пациента %s",player_name[params[0]]);
	MeAction(playerid,string);
	return 1;
}
CMD:gmed(playerid,params[0]) {
	if(!IsAMedic(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Ви не медик");
	if(PlayerInfo[playerid][pRank] < 4) return ErrorMessage(playerid, "Доступно с 4 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid, "/gmed [id]");
	if(params[0] == INVALID_PLAYER_ID) return ErrorMessage(playerid,not_id);
	if(!IsPlayerConnected(params[0]) || playerid == params[0]) return ErrorMessage(playerid, not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Ви далеко друг от друга");
	if(PlayerInfo[params[0]][pGunLic]) return ErrorMessage(playerid,"Гравець уже получил печать о допуске в получении ліцензії");
	MeAction(playerid,"поставил(а) печать о получении ліцензії на зброю");
	new string[136];
	format(string,sizeof(string),"Медик %s поставил печать о допуске в получении ліцензії на зброю",player_name[playerid]);
	SendOk(params[0],string);
	PlayerInfo[params[0]][pGunLic] = 1;
	UpdatePlayerData(params[0],"GunLic",1);
	return 1;
}
CMD:heal(playerid, params[]) {
	if(!IsAMedic(playerid) || !start_work[playerid]) return ErrorMessage(playerid, "Ви не медик");
	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
	if(model != 416 && model != 487 && !IsPlayerInRangeOfPoint(playerid,70,2187.6946,571.4658,1080.4542) && !IsPlayerInRangeOfPoint(playerid,70,1554.4142,505.6061,1070.4346)&& !IsPlayerInRangeOfPoint(playerid,50,309.7332,2060.8398,1014.3731)) return ErrorMessage(playerid,"Необхідно находиться в служебном транспорте/лікарні");
	if(sscanf(params,"ud",params[0],params[1])) return SendEsp(playerid, "/heal [id] [ціна]");
	if(params[1] < 50 || params[1] > 150) return ErrorMessage(playerid,"Ціна повинна бути от $50 до $150");
	if (!ProxDetectorS(5.0,playerid, params[0])) return ErrorMessage(playerid, "Гравець слишком далеко от вас");
	//if(playerid == params[0]) return ErrorMessage(playerid,"Ви не можете вылечить самого себя");
	if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Цей гравець не в вашій машине");
	if(HealOffer[params[0]] == playerid) return ErrorMessage(playerid, "Ви уже предложили лікування данному гравцю");
	new Float:health;
	GetPlayerHealth(params[0],health);
	if(health == 100) return ErrorMessage(playerid,"Гравець здоров");
	HealOffer[params[0]] = playerid;
	HealPrice[params[0]] = params[1];
	new string[128];
	format(string,sizeof(string),"Ви предложили лікування гравцю "YELLOW"%s{f6f6d9} за "ORANGE"$%d",player_name[params[0]],params[1]);
	SendUse(playerid,string);
	format(string,sizeof(string),"Доктор "YELLOW"%s{f6f6d9} хочет Вас вылечить за "ORANGE"$%d",player_name[playerid],params[1]);
	SendUse(params[0],string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
	return 1;
}
CMD:game(playerid, params[]) {
	if(GetPVarInt(playerid,"anti_game") > unix) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Не можна использовать в машине");
    if(PlayerInfo[playerid][pJailTime] >= 1) return ErrorMessage(playerid, "Ви в тюрьме");
    if(PlayerInfo[playerid][pHospital]) return ErrorMessage(playerid, "Ви в лікарні");
	if(sscanf(params,"d",params[0])) return SendEsp(playerid,"/game [№]");
	if(params[0] > 2 || params[0] < 0) return ErrorMessage(playerid,"Використовуйте № от 0 до 2");
	if(!game_players[params[0]]) return ErrorMessage(playerid,"Свободных мест більше нету");
	game_players[params[0]]--;
	SetPlayerPosAC(playerid,2221.6768,1837.3529,10.8203,0,0);
	SetPlayerFacingAngle(playerid, 267.9986);
	SetCameraBehindPlayer(playerid);
	SetPVarInt(playerid, "anti_game", unix+30);
	return true;
}
CMD:tune(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	D(playerid, D_TUNE_LIST, DSL, ""YELLOW"Perfomance Tune", ""YELLOW"1."W" Покращення двигуна\n"YELLOW"2."W" Покращення гальмів", "Далі", "Закрити");
	return 1;
}
CMD:lkmode(playerid) {
	new cars_id = GetPVarInt(playerid, "cars_enter");
	if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Ви должны находиться в автомобиле");
    if(!VehicleInfo[house_car[playerid][cars_id]][vEngineBoost] && !VehicleInfo[house_car[playerid][cars_id]][vBrakeBoost]) return 1;
	if(!VehicleInfo[house_car[playerid][cars_id]][vPerfStatus]) {
        VehicleInfo[house_car[playerid][cars_id]][vPerfStatus] = 1;
        GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Sport",3000,3);
	}
	else {
        VehicleInfo[house_car[playerid][cars_id]][vPerfStatus] = 0;
        GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Standart",3000,3);
	}
 	return true;
}
CMD:mode(playerid) {
	if(!IsPlayerInAnyVehicle(playerid) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
    if(!VehicleInfo[GetPlayerVehicleID(playerid)][vEngineBoost] && !VehicleInfo[GetPlayerVehicleID(playerid)][vBrakeBoost]) return 1;
	if(!VehicleInfo[GetPlayerVehicleID(playerid)][vPerfStatus]) {
        VehicleInfo[GetPlayerVehicleID(playerid)][vPerfStatus] = 1;
        GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~Sport",3000,3);
	}
	else {
        VehicleInfo[GetPlayerVehicleID(playerid)][vPerfStatus] = 0;
        GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Standart",3000,3);
	}
 	return true;
}
CMD:alarm(playerid, params[])
{
	new car;
	if(sscanf(params,"d",car)) return SendEsp(playerid, "Використовуйте: /alarm [id транспорта]");
	if(!VehicleInfo[car][vAlarm])
	{
		VehicleInfo[car][vAlarm] = 1;
		SendClientMessage(playerid,COLOR_YELLOW,"Сигнализация включена");
		SetAlarmStatus(car,true);
	}
	else
	{
		VehicleInfo[car][vAlarm] = 0;
		SendClientMessage(playerid,COLOR_RED,!"Сигнализация выключена");
		SetAlarmStatus(car,false);
	}
	return true;
}
CMD:boom(playerid,params[])
{
    if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid,"В машине нельзя!");
	if(!TI[playerid][tLogin]) return false;
	if(PlayerInfo[playerid][pBoomBox] == 0) return ErrorMessage(playerid, "У вас немає бумбокса!");
	if(bumboxx[playerid])
	{
		DestroyDynamic3DTextLabel(bumboxtext[playerid]);
		if(!IsPlayerInRangeOfPoint(playerid, 3.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]))
		{
			if(PlayerInfo[playerid][pBoomBox] == 2) ErrorMessage(playerid, "Ви слишком далеко от бумбокса.");
			return true;
		}
		DestroyDynamicObject(bumboxx[playerid]);
		bumboxx[playerid] = 0;
		RadioID[playerid] = 0;
		foreach(Player,i)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) StopAudioStreamForPlayerFix(i);
		}
		new skin = GetPlayerSkin(playerid);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		if(PlayerInfo[playerid][pBoomBox] == 2) SetAttachToSkin(playerid, 58, skin);
		if(PlayerInfo[playerid][pBoomBox] == 2) ErrorMessage(playerid, "Ви забрали свой бумбокс!");
		PlayerInfo[playerid][pBoomBox] = 1;
		//RemovePlayerAttachedObject(playerid, 5);
		return true;
	}
	else
	{
		foreach(Player,k)
		{
			if(bumboxx[k] == 0) continue;
			if(IsPlayerInRangeOfPoint(playerid,30.0, BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2]))
			{
			    return ErrorMessage(playerid, "Тут уже стоит чей-то БумБокс.");
			}
   		}
		GetPlayerPos(playerid, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
		if(PlayerInfo[playerid][pBoomBox] == 2)
		{
			SendClientMessage(playerid, COLOR_RED, "[Інформація] {ffffff}Натисніть ALT{FFFFFF}, щоб увімкнути бумбокс.");
			SendClientMessage(playerid, COLOR_RED, "[Інформація] {ffffff}Якщо хочете прибрати бумбокс то введіть /boom{FFFFFF}");
		}
		if(PlayerInfo[playerid][pBoomBox] == 2) SetPlayerChatBubble(playerid, "Поклав бумбокс на землю", COLOR_PURPLE, 10.0, 5000);
		BumBoxPos[playerid][0] +=1.0;
	 	BumBoxPos[playerid][1] +=1.0;
	  	BumBoxPos[playerid][2] -=1.0;
		if(PlayerInfo[playerid][pBoomBox] == 2) bumboxx[playerid] = CreateDynamicObject(2226, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2], 0.0, 0.0, 0.0);
        RemovePlayerAttachedObject(playerid, 5);
		new string[128];
		if(PlayerInfo[playerid][pBoomBox] == 2) format(string,sizeof(string),"{73B461}Бумбокс\n{FFFFFF}Власник: %s",player_name[playerid]);
		bumboxtext[playerid] = CreateDynamic3DTextLabel(string,-1,BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2]+0.5,9.0);
		BoxBum[bbBox] = CreateDynamicSphere(BumBoxPos[playerid][0],BumBoxPos[playerid][1],BumBoxPos[playerid][2],35.0);
	}
	return 1;
}
CMD:findcar(playerid, params[])
{
	new car, Float:car_pos[2][3];
	if(sscanf(params,"d",car)) return SendEsp(playerid, "Використовуйте: /findcar [id транспорта]");
	GetVehiclePos(house_car[playerid][car], car_pos[car][0],car_pos[car][1],car_pos[car][2]);
	if(GetVehicleVirtualWorld(car) > 0)
	{
		ErrorMessage(playerid,"[ Думки ]:{ffffff} Ваш автомобіль в гаражі. На міні карті відмінний гараж!");
		EnableGPSForPlayer(playerid,gHouses[PlayerInfo[playerid][pHouse]-1][houseX],gHouses[PlayerInfo[playerid][pHouse]-1][houseY],gHouses[PlayerInfo[playerid][pHouse]-1][houseZ]);
		return true;
	}
	EnableGPSForPlayer(playerid,car_pos[car][0],car_pos[car][1],car_pos[car][2]);
	SendClientMessage(playerid,COLOR_LIGHTBLUE,"Ваш транспорт відмінний на карті");
	return true;
}
CMD:carpass(playerid, params[])
{
	if(!PlayerInfo[playerid][pRoom] && !PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку/номера в готелі");
	if(gPlayerCars[playerid][carModel][0] == 481 && gPlayerCars[playerid][carModel][1] == 481) return ErrorMessage(playerid, "У вас немає автомобилей.");
	if(sscanf(params, "u", params[0])) return ErrorMessage(playerid, "Помилка! Використовуйте: /carpass [id]");
	if(params[0] == playerid) return ErrorMessage(playerid, "Помилка! Вы не можете показать себе паспорт. (/cars -> Тех. паспорт)");
	if(!IsPlayerConnected(playerid)) return ErrorMessage(playerid, "Помилка! Данный гравець не в мережі.");

	new car_id = GetPlayerVehicleID(playerid);
	if(car_id != house_car[playerid][0] || car_id != house_car[playerid][1]) return ErrorMessage(playerid, "Помилка! Вы находитесь не в своей машине");

	new string[300];
	format(string, 80, "%s смотрит тех. паспорт.", player_name[params[0]]);
	ProxDetector(25.0, params[0], string, COLOR_PURPLE);
	
	new numbere[124],twinturbo[30];
	if(!GetString(NumberVehicle[playerid][car_id],"TRANSIT")) format(numbere,sizeof(numbere),"{E53737}[%s] ->> Есть разрешение на: [%s]{FFFFFF}",NumberVehicle[playerid][car_id],NumberVehicle[playerid][car_id]);
	else format(numbere,sizeof(numbere),"{A63737}%s",NumberVehicle[playerid][car_id]);
	
	if(VehicleInfo[house_car[playerid][car_id]][vEngineBoost] > 0) twinturbo = "{FFD848}[TT]{FFFFFF}";
	format(string,sizeof(string),"{FFFFFF}Транспорт:{73b461} %s%s{FFFFFF}\nВласник: {73B461}%s{FFFFFF}\nПробег: {73B461}%.0f км.{FFFFFF}",gTransport[gPlayerCars[playerid][carModel][car_id]-400][trName],twinturbo,OwnerVehicle[playerid][car_id],gPlayerCars[playerid][carDrived][car_id]);
	format(string,sizeof(string),"%s\n\n{FFFFFF}Номер автомобіля: %s{FFFFFF}",string,numbere);
	
	D(params[0],0000,DIALOG_STYLE_MSGBOX,"Інформація",string,"Прийняти","");
	DeletePVar(playerid, "cars_enter");
	return 1;
}
CMD:cars(playerid)
{
	new string[150];
    if(!PlayerInfo[playerid][pRoom] && !PlayerInfo[playerid][pHouse]) return ErrorMessage(playerid,"У вас немає будинку/номера в готелі");
	if(gPlayerCars[playerid][carModel][0] == 481 && gPlayerCars[playerid][carModel][1] == 481) return ErrorMessage(playerid, "У вас немає автомобилей.");
	if(gPlayerCars[playerid][carModel][0] == 481)
	{
	    SetPVarInt(playerid, "cars_enter", 1);
        format(string,sizeof(string),"{FED748}[%s]{FFFFFF} %s",(!gPlayerCars[playerid][carPEngine_1][0]) ? ("X") : ("PERFOMANCE"), gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
	}
	if(gPlayerCars[playerid][carModel][1] == 481)
	{
	    SetPVarInt(playerid, "cars_enter", 0);
        format(string,sizeof(string),"{FED748}[%s]{FFFFFF} %s",(!gPlayerCars[playerid][carPEngine_1][1]) ? ("X") : ("PERFOMANCE"), gTransport[gPlayerCars[playerid][carModel][0]-400][trName]);
	}
	if(gPlayerCars[playerid][carModel][0] != 481 && gPlayerCars[playerid][carModel][1] != 481)
	{
	    format(string,sizeof(string),"{FED748}[%s]{FFFFFF} %s\n{FED748}[%s]{FFFFFF} %s", (!gPlayerCars[playerid][carPEngine_1][0]) ? ("X") : ("PERFOMANCE"), gTransport[gPlayerCars[playerid][carModel][0]-400][trName], (!gPlayerCars[playerid][carPEngine_1][1]) ? ("X") : ("PERFOMANCE"), gTransport[gPlayerCars[playerid][carModel][1]-400][trName]);
	}
	D(playerid, D_CARS, DSL, "Мій транспорт",string,"Вибір","");
	return 1;
}
CMD:key(playerid, params[])
{
    new carid = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
    
    if(engine)
		return ErrorMessage(playerid, "Ви не можете вытащить ключи, когда машина заведена");
	if(!IsPlayerInAnyVehicle(playerid))
		return ErrorMessage(playerid, "Ви не в автомобиле");
		
	new string[128];
	if(VehicleInfo[carid][vKey]) {
	    VehicleInfo[carid][vKey] = 0;
		format(string,sizeof(string)," %s вытащил(а) ключи из замка зажигания", player_name[playerid]);
		ProxDetector(25.0,playerid,string,COLOR_PURPLE);
	}
	else {
	    VehicleInfo[carid][vKey] = 1;
		format(string,sizeof(string)," %s вставив(ла) ключі в замок запалювання", player_name[playerid]);
		ProxDetector(25.0,playerid,string,COLOR_PURPLE);
	}
	return true;
}
CMD:lock(playerid, params[]) {	
	new type = 1;
	if(sscanf(params,"d",params[0])) type = 1;
	else type = params[0];
	if(type > 4 || type < 1) type = 1;
	else if(type == 2) {
		new plane = -1;
		new Float:check_pos[3];
		for(new i=1;i<=gPlaneCount;i++) {
			if(GetString(player_name[playerid],gAirplanes[i][aOwner])) {plane = i; break;}
			GetVehiclePos(gAirplanes[i][aCar]+1, check_pos[0],check_pos[1],check_pos[2]);
		}
		if(plane == -1) return ErrorMessage(playerid,"Ви не арендуете воздушный транспорт");
		if(IsPlayerInRangeOfPoint(playerid,4,check_pos[0],check_pos[1],check_pos[2])) {
			doors_status(gAirplanes[plane][aCar], playerid);
			return 1;
		}
		else return ErrorMessage(playerid,"Ви далеко від арендованого воздушного транспорта");
	}
	else if(type == 3) {
		if(TI[playerid][tArendKey] == -1) return ErrorMessage(playerid,"Ви не арендуете транспорт");
		new rc = TI[playerid][tArendKey];
		if(ArendInfo[rc][aPlayerID] != playerid) return ErrorMessage(playerid,"Ви не арендуете транспорт");
		new Float:check_pos[3];
		GetVehiclePos(ArendInfo[rc][aID], check_pos[0],check_pos[1],check_pos[2]);
		if(IsPlayerInRangeOfPoint(playerid,4,check_pos[0],check_pos[1],check_pos[2])) {
			doors_status(ArendInfo[rc][aID], playerid);
			return 1;
		}
		else return ErrorMessage(playerid,"Ви далеко від арендованого Т/С");
	}
	else if(type == 4) {
		if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid,"Ви не знаходитесь в організації");
		new Float:check_pos[3];
		new car = GetNearestVehicle(playerid);
		if(VehicleInfo[car][vTeam] == PlayerInfo[playerid][pMember]) {
			GetVehiclePos(car, check_pos[0], check_pos[1], check_pos[2]);
			if(IsPlayerInRangeOfPoint(playerid,4.5,check_pos[0],check_pos[1],check_pos[2])) {
				doors_status(car, playerid);
				return 1;
			}
		}
		else return ErrorMessage(playerid,"Ви далеко від Т/С вашій організації");
	}
	new id = GetNearestCar(playerid);
	if(id == -1) return ErrorMessage(playerid,"Ви далеко від своего Т/С");
	doors_status(house_car[playerid][id], playerid);
	return true;
}
CMD:unrent(playerid, params[]) {
	if(TI[playerid][tArendKey] == -1) return ErrorMessage(playerid,"Ви не арендуете транспорт");
	new rc = TI[playerid][tArendKey];
	if(ArendInfo[rc][aPlayerID] != playerid) return ErrorMessage(playerid,"Ви не арендуете транспорт");
	TI[playerid][tArendKey] = -1;
	SendOk(playerid, "Ви відмовились від оренди транспорта");
	ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
	SetVehicleToRespawn(ArendInfo[rc][aID]);
	return true;
}
CMD:lights(playerid, const params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return false;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return false;
	new carid = GetPlayerVehicleID(playerid);
	if(IsAVelik(carid) || IsAPlane(carid) || IsABoat(carid)) return false;
	lights_status(carid, !getlight_status(carid), playerid);
	return true;
}
CMD:namestore(playerid, params []) {
	if(sscanf(params, "s[30]", params[0])) return SendEsp(playerid, "/namestore [имя]");
	new query[110];
	mysql_format(connects, query, sizeof(query), "SELECT `pID` FROM `accounts` WHERE `Name` = '%e' LIMIT 1", params[0]);
	mysql_tquery(connects, query, "namestore_callback", "i", playerid);
	return 1;
}


CB: namestore_callback(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Цей гравець не зарегистрирован на сервере");
	new db_increment;
	cache_get_value_int(0,"pID",db_increment);
	new query[110];
	format(query, sizeof(query), "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", db_increment);
	mysql_tquery(connects, query, "_namestore_callback", "i", playerid);
	return 1 ;
}

CB: _namestore_callback(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Історія зміни ніка цього гравця пуста");
	 
	new string[1024];
	strcat(string, ""YELLOW"№ Старый ник\t"YELLOW"Новый ник\t"YELLOW"Дата изменения\n"W"");
	for(new j = 0; j < rows; j ++) {
		new oldname[MAX_PLAYER_NAME],
			newname[MAX_PLAYER_NAME],
			dates[20],
			str[68];
		
		cache_get_value(j,"nh_oldname",oldname, MAX_PLAYER_NAME);
		cache_get_value(j,"nh_newname",newname, MAX_PLAYER_NAME);
		cache_get_value(j,"nh_date",dates, 20);

		format(str, sizeof(str), "%d. %s\t%s\t%s\n",j+1, oldname, newname, dates);
		strcat(string, str);
	}	
	D(playerid, DIALOG_NONE, DSTH, ""YELLOW"История зміни ника", string, "Закрити", "");		
	return 1 ;
}
CMD:donate(playerid) {
	UpdateDonate(playerid);
	static const f_str[] = "\
"YELLOW"-"W" Ігрова валюта:\t"ORANGE"1 B-COIN = $3000\n\
"YELLOW"-"W" Зміна ігрового імені:\t"ORANGE"20 B-COIN\n\
"YELLOW"-"W" Зняти попередження:\t"ORANGE"100 B-COIN\n\
"YELLOW"-"W" Законопослушність:\t"ORANGE"10 B-COIN\n\
"YELLOW"-"W" Ліцензії:\t"ORANGE"От 20 B-COIN\n\
"YELLOW"-"W" Навики володіння зброєю:\t"ORANGE"1 B-COIN\n\
"YELLOW"-"W" Анті-Голод:\t"ORANGE"150 B-COIN\n\
"YELLOW"-"W" Імунітет\t"ORANGE"150 B-COIN\n\
"YELLOW"-"W" VIP привілеї\t"ORANGE"Від 60 B-COIN\n\
"YELLOW"-"W" Донат автомобіль\t"ORANGE"Від 180 B-COIN\n\
"YELLOW"-"W" EXP + Поінти в сім'ю:\t"ORANGE"1 B-COIN = 10\n\
"YELLOW"-"W" Мобільний банк:\t"ORANGE"150 B-COIN\n\
"YELLOW"-"W" Унікальний скін:\t"ORANGE"200 B-COIN\n\
"YELLOW"-"W" Прибрати рівень розшуку:\t"ORANGE"1 ЗВ = 10 B-COIN\n\
"YELLOW"-"W" Анті Банни Хоп:\t"ORANGE"100 B-COIN\n\
"YELLOW"-"W" Навички бойових мистецтв:\t"ORANGE"1 B-COIN\n\
"YELLOW"-"W" Прибрати тюнинг с особистого Т/С:\t"ORANGE"50 B-COIN\n\
"YELLOW"-"W" Номер телефона:\t"ORANGE"Від 200 B-COIN\n\
"YELLOW"-"W" Вихід із ЧС:\t"ORANGE"Від 50 B-COIN\n\
"YELLOW"-"W" Зняти наркозалежність:\t"ORANGE"100 B-COIN\n\
"YELLOW"-"W" Нова трудова книжка:\t"ORANGE"50 B-COIN\n\
"YELLOW"-"W" БумБокс {33AA33}[NEW!]:\t"ORANGE"100 B-COIN\n\
Донат: "YELLOW"%d\n\
Інформація про поповнення";
	new string[sizeof(f_str) + 56];
	format(string,sizeof(string),f_str,PlayerInfo[playerid][pRouble]);
	D(playerid, D_DONATE, DST, "Донат",string,"Вибрати", "Закрити");
	return 1;
}
CMD:label(playerid) {
	if(GetPVarInt(playerid,"hrieltor")) {
		new houseid = GetPVarInt(playerid,"hrieltor")-1;
		EnableGPSForPlayer(playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
		SendUse(playerid,"Ви установили метку на вашій карте");
		SendUse(playerid,"Для отключения метки введіть: "W"/gps");
	}
	else if(GetPVarInt(playerid,"bizzrielor")) {
		new bizzid = GetPVarInt(playerid,"bizzrielor")-1;
		EnableGPSForPlayer(playerid,gBusiness[bizzid][bizzX], gBusiness[bizzid][bizzY], gBusiness[bizzid][bizzZ]);
		SendUse(playerid,"Ви установили метку на вашій карте");
		SendUse(playerid,"Для отключения метки введіть: "W"/gps");
	}
	return 1;
}
CMD:gps(playerid) {
	if(GetPVarInt(playerid,"route")) return ErrorMessage(playerid,"Сначала закончите роботу автобусника");
	if(gpss[playerid]) DisablePlayerRaceCheckpoint(playerid),gpss[playerid] = 0;
	static const f_str[] = ""YELLOW"-"W" Знайти найближчу заправку\n\
"YELLOW"-"W" Знайти найближчу закусочну\n\
"YELLOW"-"W" Знайти найближчий 24-7\n\
"YELLOW"-"W" Знайти найближчий банкомат\n\
"YELLOW"-"W" Знайти найближчий магазин одягу\n\
"YELLOW"1."W" Громадські місця\n\
"YELLOW"2."W" Робота\n\
"YELLOW"3."W" Автосалони та тюнінг\n\
"YELLOW"4."W" Державні організації\n\
"YELLOW"5."W" Нелегальні організації\n\
"YELLOW"6."W" Банки\n\
"YELLOW"7."W" Бізнеси\n\
"YELLOW"8."W" Готелі\n\
"YELLOW"9."W" Аеропорти\n\
"YELLOW"10."W" Таксопарки\n\
"YELLOW"11."W" Транспортні компанії\n\
"YELLOW"12."W" Розваги\n\
"YELLOW"13."W" Ріелторські агенції";
	new string[sizeof(f_str)];
	format(string,sizeof(string),"%s",f_str);
	D(playerid, D_GPS, DSL, ""YELLOW"GPS", string, "Вибрати", "Відміна");
	return 1;
}
alias:menu("mm","mn");
CMD:menu(playerid,const params[]) return D(playerid, D_MENU, DSL, ""YELLOW"Меню гравця",""YELLOW"1."W" Статистика персонажа\n"YELLOW"2."W" Особисті настройки\n"YELLOW"3."W" Команди сервера\n"YELLOW"4. Задати питання Game Support\n"YELLOW"5."W" Звязок із адміністрацією\n"YELLOW"6."W" Безпека\n"YELLOW"7."W" Зміна нонРП ніка\n"YELLOW"8."W" Донат\n"YELLOW"9."W" Промокод\n"YELLOW"10."W" Інвентар", "Вибрати", "Відміна");

CMD:bonuses(playerid,params[]) {
	if(!BonusInfo[act_select]) return ErrorMessage(playerid,"Бонуси відключені");
	if(PlayerInfo[playerid][pLevel] > BonusInfo[act_level] && BonusInfo[act_select] == 1) return ErrorMessage(playerid,"В даний момент бонуси дують тільки для новачків (1-5 уровня)");
	static const f_str[] = "Найменування\tФактор\n\
"W"Прискорене прокачування досвіду\t"YELLOW"%d x\n\
"W"Прискорення прокачування скіла зброї\t"YELLOW"%d x\n\
"W"Прискорення прокачування скіла удара по груші\t"YELLOW"%d x\n\
"W"Приз в заходах розв. центра\t"YELLOW"%d x\n\
"W"Створення зброї\t"YELLOW"%d x\n\
"W"Підвищений улов риби\t"YELLOW"%d x\n\
"W"Знижка на аренду номера в готелі\t"YELLOW"%d %%\n\
"W"Знижка на покупку скіна\t"YELLOW"%d %%\n\
"W"Знижка на покупку транспорта\t"YELLOW"%d %%\n\
"W"Знижка на аренду транспорта\t"YELLOW"%d %%\n\
"W"Знижка на покупку ліцензій\t"YELLOW"%d %%\n\
"W"Знижка на покупку покращень в будинок\t"YELLOW"%d %%\n\
"W"Знижка на лікування захворювань\t"YELLOW"%d %%\n\
"W"Знижка на зміну статі в лікарні\t"YELLOW"%d %%\n\
"W"Знижка на отримання мед. карти\t"YELLOW"%d %%\n\
"W"Знижка на покупку номерів ТС\t"YELLOW"%d %%\n\
"W"Знижка на покращення в Perfomance Tune\t"YELLOW"%d %%\n\
"W"Знижка на тюнинг в Автомайстерні\t"YELLOW"%d %%\n\
"W"Час до отримання бонусних кейсів\t"YELLOW"%d мин\n\
"W"Промокод\t"YELLOW"%d x\n\
"W"Pay Day (ЗП)\t"YELLOW"%d x\n\
"W"Донат\t"YELLOW"%d x\n\
\
";
	new string[sizeof(f_str) + 50];
	format(string,sizeof(string),f_str,
		BonusInfo[act_exp],
		BonusInfo[act_skill],
		BonusInfo[act_sport],
		BonusInfo[act_mp],
		BonusInfo[act_gun],
		BonusInfo[act_fish],
		BonusInfo[act_renthotel],
		BonusInfo[act_buyskin],
		BonusInfo[act_buycar],
		BonusInfo[act_rentcar],
		BonusInfo[act_buylic],
		BonusInfo[act_buyimprove],
		BonusInfo[act_disease],
		BonusInfo[act_changesex],
		BonusInfo[act_medcard],
		BonusInfo[act_buynubmbercar],
		BonusInfo[act_perfomance],
		BonusInfo[act_tune],
		BonusInfo[act_timerullet],
		BonusInfo[act_promocode],
		BonusInfo[act_payday],
		BonusInfo[act_donate]);
	D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Бонусы",string, "Закрити", "");
	return 1;
}
alias:report("rep");
CMD:report(playerid,params[]) {
	D(playerid,D_REPORT,DSI, ""YELLOW"Зв'язок з адміністрацією", "{fff744}В{DCDCDC}и збираєтесь надіслати запит адміністрації.\n\
		{fff744}Б{DCDCDC}удь-ласка, чітко та грамотно сформулюйте запит.\n\
		{fff744}Т{DCDCDC}акож, при подачі скарги на гравця, вкажіть його ID.\n\n\
		{008800}» Заборонено оффтоп, CapsLock, образи та нецензурна лайка.", "Відправити", "Назад");
	return 1;
}
CMD:ask(playerid,params[]) {
	if(PlayerInfo[playerid][pAskmute]) return ErrorMessage(playerid,"У вас закритий доступ до побачі питання");
	D(playerid,D_ASK,DSI, ""YELLOW"Зв'язку з Game Support", "{fff744}В{DCDCDC}и збираєтеся поставити питання Game Support.\n\
		{fff744}Б{DCDCDC}удь-ласка, чітко та грамотно сформулюйте питання.\n\n\
		{008800}» Заборонено оффтоп, вик. CapsLock, образи та нецензурна лайка.", "Задати", "Назад");
	return 1;
}
CMD:dress(playerid, params[]) {
    if(!IsAGang(playerid)) return ErrorMessage(playerid,"Ви не бандит");
	if(PlayerInfo[playerid][pArmSkin] == 0) return ErrorMessage(playerid, "У вас немає армейской формы");
	if(PlayerInfo[playerid][pSex] == 1) A_SetPlayerSkin(playerid,287);
	else A_SetPlayerSkin(playerid,191);
	SetPlayerColor(playerid, COLOR_GREEN);
	PlayerInfo[playerid][pArmSkin] = 0;
	UpdatePlayerData(playerid,"ArmSkin",0);
	SendUse(playerid,"Ви надели армейскую форму");
	return true;
}
CMD:play(playerid, params[]) return D(playerid, D_RADIO, DSL, ""YELLOW"Онлайн радио", ""YELLOW"1."W" Radio Промінь\n"YELLOW"2."W" Стрий FM\n"YELLOW"3."W" New Day FM\n"YELLOW"4."W" Fresh FM\n"YELLOW"5."W" Інформатор FM\n"YELLOW"6."W" NEO RADIO\n"YELLOW"7."W" Выключить", "Прийняти", "Відміна");
CMD:eject(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid)) return true;
	new State = GetPlayerState(playerid);
	if(State!=PLAYER_STATE_DRIVER) return ErrorMessage(playerid, "Ви не за рулем");
	if(sscanf(params, "u", params[0])) return SendEsp(playerid, "/eject [id]");
	new test = GetPlayerVehicleID(playerid);
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid,not_id);
	if(params[0] == playerid) return ErrorMessage(playerid, "Ви вказали свій ID");
	if(!IsPlayerInVehicle(params[0],test)) return true;
	new string[128];
	format(string, sizeof(string), "Ви выкинули из машини - "W"%s",player_name[params[0]]);
	SendOk(playerid, string);
	format(string, sizeof(string), "Вас выкинул из машини - "W"%s",player_name[playerid]);
	SendOk(params[0], string);
	RemovePlayerFromVehicleAC(params[0]);
	return true;
}
CMD:dcarm(playerid, params[]) {
    if(!IsAMafia(playerid)) return true;
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 482) return ErrorMessage(playerid, "Ви не в фургоне для развозки наркотиків");
	new veh = GetPlayerVehicleID(playerid);
	if(VehicleInfo[veh][vTeam] == fLCN || VehicleInfo[veh][vTeam] == fYAKUZA || VehicleInfo[veh][vTeam] == fRM) D(playerid, D_MAFIA_CARM, DSL, ""YELLOW"Развозка наркотиків",""YELLOW"1."W" Загрузить наркотики\n"YELLOW"2."W" Разгрузить на склад Ballas\n"YELLOW"3."W" Разгрузить на склад Vagos\n"YELLOW"4."W" Разгрузить на склад Grove\n"YELLOW"5."W" Разгрузить на склад Aztec\n"YELLOW"6."W" Разгрузить на склад Rifa\n"YELLOW"7."W" Заказы", "Вибрати", "Відміна");
	return true;
}
CMD:fhelp(playerid, params[]) {
    if(!IsAArm(playerid)) return true;
    if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Ваш ранг недостатній");
    new string[128];
    if(IsPlayerInRangeOfPoint(playerid,7,-1334.3103,373.8245,7.1937) && PlayerInfo[playerid][pMember] == fARMYSF) {
    	if(army_chs[0] == false) {
    		format(string, sizeof(string), "Увага! %s %s[%d] объявил(а) о Чрезвычайной Ситуации в Армии СФ!",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid);
    		SendDepMessage(COLOR_ALLDEPT, string);
    		SendDepMessage(COLOR_ALLDEPT, "Просим поддержки всех силовых структур!");
    		GangZoneFlashForAll(SFa,COLOR_RED);
    		UpdateDynamic3DTextLabelText(army_text[0],-1,""NO"Объявлена Чрезвычайная Ситуация"W"\nДля отключения, введіть: "YELLOW"/fhelp");
    		army_chs[0] = true;
    	}
    	else {
    		format(string, sizeof(string), "Увага! %s %s[%d] объявил(а) об устранении Чрезвычайной Ситуации в Армии СФ",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid);
    		SendDepMessage(COLOR_ALLDEPT, string);
    		GangZoneStopFlashForAll(SFa);
			UpdateDynamic3DTextLabelText(army_text[0],-1,"Для оголошення чрезвычайной ситуации, введіть:\n"YELLOW"/fhelp");
			army_chs[0] = false;
    	}
    }
	else if(IsPlayerInRangeOfPoint(playerid,7,182.2824,1809.9597,17.6406) && PlayerInfo[playerid][pMember] == fARMYLV) {
		if(army_chs[1] == false) {
    		format(string, sizeof(string), "Увага! %s %s[%d] объявил(а) о Чрезвычайной Ситуации в Армии ЛВ!",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid);
    		SendDepMessage(COLOR_ALLDEPT, string);
    		SendDepMessage(COLOR_ALLDEPT, "Просим поддержки всех силовых структур!");
    		GangZoneFlashForAll(Army,COLOR_RED);
    		UpdateDynamic3DTextLabelText(army_text[1],-1,""NO"Объявлена Чрезвычайная Ситуация"W"\nДля отключения, введіть: "YELLOW"/fhelp");
    		army_chs[1] = true;
    	}
    	else {
    		format(string, sizeof(string), "Увага! %s %s[%d] объявил(а) об устранении Чрезвычайной Ситуации в Армии ЛВ",GetRankName(GetTeamID(playerid),PlayerInfo[playerid][pRank]), player_name[playerid],playerid);
    		SendDepMessage(COLOR_ALLDEPT, string);
    		GangZoneStopFlashForAll(Army);
    		UpdateDynamic3DTextLabelText(army_text[1],-1,"Для оголошення чрезвычайной ситуации, введіть:\n"YELLOW"/fhelp");
    		army_chs[1] = false;
    	}
    }
	return true;
}
CMD:carm(playerid, params[]) {
    if(!IsAArm(playerid)) return true;
	new veh = GetPlayerVehicleID(playerid);
	switch(GetVehicleModel(veh)) {
		case 433: if(VehicleInfo[veh][vTeam] == fARMYLV) D(playerid, D_ARMY_CARM, DSL, ""YELLOW"Развозка боєприпасів",""YELLOW"1."W" Разгрузить на склад Поліції ЛС\n"YELLOW"2."W" Разгрузить на склад Поліції СФ\n"YELLOW"3."W" Разгрузить на склад Поліції ЛВ\n"YELLOW"4."W" Разгрузить на склад ФБР\n"YELLOW"5."W" Стан складів", "Вибрати", "Відміна");
		case 548: if(VehicleInfo[veh][vTeam] == fARMYSF) D(playerid, D_ARMY_CARM_SF, DSL, ""YELLOW"Развозка боєприпасів",""YELLOW"1."W" Загрузка боєприпасів\n"YELLOW"2."W" Разгрузка боєприпасів", "Вибрати", "Відміна");
	}
	return true;
}
CMD:load(playerid, params[]) {
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsAArm(playerid) && !IsAGang(playerid) && !IsAMafia(playerid) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) return 1;
		//if(IsAArm(playerid)) if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
		switch(GetVehicleModel(vehicleid)) {
			case 433,482,573: {
				if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading]) return ErrorMessage(playerid,"Авто уже стоит на загрузке / разгрузке");
				if((IsAGang(playerid) && GetPlayerSkin(playerid) == 191 && GetVehicleModel(vehicleid) == 433) || (IsAGang(playerid) && GetPlayerSkin(playerid) == 287 && GetVehicleModel(vehicleid) == 433)) {
					switch(VehicleInfo[vehicleid][vTeam]) {
						case fARMYLV: SetPlayerCheckpoint(playerid, 255.0845,1831.5399,18.1076,5.0),SetPVarInt(playerid,"MatsArmyCar",10);
						case fARMYSF: SetPlayerCheckpoint(playerid, -1325.2426,407.5635,7.0743,5.0),SetPVarInt(playerid,"MatsArmyCar",11);
					}
					return 1;
				}
				VG[vehicleid][vgID] = vehicleid;
				VG[vehicleid][vgLoading] = true;

				RemovePlayerFromVehicleAC(playerid);
				new Float:x, Float:y, Float:z, Float:a;
				GetVehiclePos(vehicleid,x,y,z);
				GetVehicleZAngle(vehicleid,a);
				x = x - (-6.0*floatsin(a,degrees));
				y = y - 6.0*floatcos(a,degrees);

				VG[vehicleid][vgPickup] = CreateDynamicPickup(2358,1,x,y,z-0.5);
				VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);

				new string[64];
				switch(GetVehicleModel(vehicleid)) {
					case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[vehicleid][vgAmount][0]);
					case 482: format(string,sizeof(string),"Ящиков: "O"%i/30",VG[vehicleid][vgAmount][0]);
					case 573: format(string,sizeof(string),"Ящиков: "O"%i/200",VG[vehicleid][vgAmount][0]);
				}
				VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0);
			}
			default: return ErrorMessage(playerid,"Ви повинні бути за рулем т.с. для перевозки зброї");
		}
	}
	return 1;
}
CMD:unload(playerid, params[]) {
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!IsAArm(playerid) && !IsAGang(playerid) && !IsAMafia(playerid) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 191) && (!IsAGang(playerid) || GetPlayerSkin(playerid) != 287)) return 1;
		//if(IsAArm(playerid)) if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid, "Доступно с 3 ранга");
		switch(GetVehicleModel(vehicleid)) {
			case 433,482: {
				if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading]) return ErrorMessage(playerid,"Авто уже стоит на загрузке / разгрузке");
				VG[vehicleid][vgID] = vehicleid;
				VG[vehicleid][vgUnloading] = true;
				RemovePlayerFromVehicleAC(playerid);
				new Float:x, Float:y, Float:z, Float:a;
				GetVehiclePos(vehicleid,x,y,z);
				GetVehicleZAngle(vehicleid,a);
				x = x - (-6.0*floatsin(a,degrees));
				y = y - 6.0*floatcos(a,degrees);
				VG[vehicleid][vgPickup] = CreateDynamicPickup(2358,1,x,y,z-0.5);
				VG[vehicleid][vgArea] = CreateDynamicSphere(x,y,z,1.0);
				new string[64];
				switch(GetVehicleModel(vehicleid)) {
					case 433: format(string,sizeof(string),"Ящиков: "O"%i/70",VG[vehicleid][vgAmount][0]);
					case 482: format(string,sizeof(string),"Ящиков: "O"%i/30",VG[vehicleid][vgAmount][0]);
				}
				VG[vehicleid][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,x,y,z+0.5,20.0);
			}
			case 573: {
				if(!VG[vehicleid][vgAmount][0]) return ErrorMessage(playerid,"В Т/С недостаточно боєприпасів для разгрузки");
				switch(GetTeamID(playerid)) {
					case fBALLAS: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 1938.7773,-1120.6285,26.4940)) return ErrorMessage(playerid,"Ви далеко від The Ballas");
					}
					case fVAGOS: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 2745.2463,-1178.5746,69.4022)) return ErrorMessage(playerid,"Ви далеко від The Vagos");
					}
					case fGROVE: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 2492.5398,-1673.5878,13.3359)) return ErrorMessage(playerid,"Ви далеко від The Grove");
					}
					case fAZTEC: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 1689.2028,-2112.7527,13.4776)) return ErrorMessage(playerid,"Ви далеко від The Aztec");
					}
					case fRIFA: {
						if(!IsPlayerInRangeOfPoint(playerid, 50, 2720.9058,-1945.3914,13.5469)) return ErrorMessage(playerid,"Ви далеко від The Rifa");
					}
					case fARMYSF: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, -1327.4373,406.4024,7.0743)) return ErrorMessage(playerid,"Ви далеко від склада Армії СФ");
					}
					case fARMYLV: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 273.9764,1831.2097,17.6709)) return ErrorMessage(playerid,"Ви далеко від склада Армії ЛВ");
					}
					case fLCN: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 1450.5173,751.1883,11.0234)) return ErrorMessage(playerid,"Ви далеко від Італійської Мафії");
					}
					case fYAKUZA: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 2610.6470,1824.0964,10.8203)) return ErrorMessage(playerid,"Ви далеко від Японської Мафії");
					}
					case fRM: {
						if(!IsPlayerInRangeOfPoint(playerid, 100, 966.8095,1732.4703,8.6484)) return ErrorMessage(playerid,"Ви далеко від Української Мафії");
					}
				}
				if(!IsAArm(playerid)) {
					new mats = floatround(FI[GetTeamID(playerid)][fMats]/500);//ящиков На складі банди
					new mats_2 = mats+(VG[vehicleid][vgAmount][0]*5000/500);//сколько будет всего ящиков
					if(mats_2 > 600) {
						new mats_3 = 600-mats_2;
						VG[vehicleid][vgAmount][0] = mats_3;
					}
					else {
						FI[GetTeamID(playerid)][fMats] += VG[vehicleid][vgAmount][0]*5000;
						VG[vehicleid][vgAmount][0] = 0;
					}
					if(FI[GetTeamID(playerid)][fMats] > 300000) FI[GetTeamID(playerid)][fMats] = 300000;
					else if(FI[GetTeamID(playerid)][fMats] < 0) FI[GetTeamID(playerid)][fMats] = 300000;
				}
				else {
					new mats = floatround(FI[GetTeamID(playerid)][fMats]/500);
					new mats_2 = mats+(VG[vehicleid][vgAmount][0]*5000/500);
					if(mats_2 > 2000) {
						new mats_3 = 2000-mats_2;
						VG[vehicleid][vgAmount][0] = mats_3;
					}
					else {
						FI[GetTeamID(playerid)][fMats] += VG[vehicleid][vgAmount][0]*5000;
						VG[vehicleid][vgAmount][0] = 0;
					}
					if(FI[GetTeamID(playerid)][fMats] > 1000000) FI[GetTeamID(playerid)][fMats] = 1000000;
					else if(FI[GetTeamID(playerid)][fMats] < 0) FI[GetTeamID(playerid)][fMats] = 1000000;
				}
				UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);
				new string[144];
				format(string,sizeof(string),"Боєприпаси успішно рагружены. боєприпасів На складі: "W"%d{f6f6d9}. Ящиков в фургоне: "W"%d",FI[GetTeamID(playerid)][fMats],VG[vehicleid][vgAmount][0]);
			}
			default: return ErrorMessage(playerid,"Ви повинні бути за рулем т.с. для перевозки зброї");
		}
	}
	return 1;
}
stock ProxDetector(Float:radi,playerid, const string[], color) {
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(IsPlayerInRangeOfPoint(i,radi,X,Y,Z) && GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) SendClientMessage(i, color, string);
	}
    return true;
}
stock ProxDetectorS(Float:radi, playerid, targetid) {
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid)) {
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}

public OnPlayerText(playerid, text[]) {
    if(!TI[playerid][tLogin]) return 0;
	new string[150];
	if(PlayerInfo[playerid][pMute] > 0) {
		ErrorMessage(playerid, "У Вас бан чата"); 
		SetPlayerChatBubble(playerid, "пытается что-то сказать", COLOR_REDD, 30.0, 10000);
		return 0; 
	}
	if(TI[playerid][tGag]) {
		ErrorMessage(playerid, "У Вас кляп");
		SetPlayerChatBubble(playerid, "пытается что-то сказать", COLOR_REDD, 30.0, 10000);
		return 0;
	}
	CountFloodForPlayer[playerid]++;
	if(TI[playerid][tEther]) {
		format(string,sizeof(string),"[%s] %s: %s",FI[PlayerInfo[playerid][pMember]][fName],player_name[playerid],text);
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(PlayerInfo[i][pSettings][2] != PlayerInfo[playerid][pMember]) continue;
			SendClientMessage(i,0xFF9900AA,string);
		}
		return 0;		
	}
	if(TI[playerid][tPhoneNews]) {
		for(new i; i<sizeof(calls_ether); i++) {
			if(calls_ether[i] == playerid && calls_news[i]) {
				new mes[128];
				format(mes,sizeof(mes),"[%s] %s [тел.]: %s",FI[PlayerInfo[calls_news[i]][pMember]][fName],player_name[playerid],text);
				new subid = PlayerInfo[calls_news[i]][pMember];
				foreach(new r:Player) {
					if(!TI[r][tLogin] ||  AntiCheatIsKickedWithDesync(r)) continue;
					if(PlayerInfo[r][pSettings][2] == subid || r == playerid) SendClientMessage(r, 0xFF9900AA, mes);
				}
				return false;
			}
		}
	}		
	if(TI[playerid][tPhone] == true) {
		new id,mes[128];
		if(TI[playerid][tPhoneCaller] == playerid) id = TI[playerid][tPhoneCalled];
		else if(TI[playerid][tPhoneCalled] == playerid) id = TI[playerid][tPhoneCaller];

		format(mes,sizeof(mes),"[тел] %s: %s",player_name[playerid], text);
		SendClientMessage(playerid, COLOR_YELLOW, mes);

		format(mes,sizeof(mes),"[тел] %s: %s",player_name[playerid], text);
		SendClientMessage(id, COLOR_YELLOW, mes);

		SetPlayerChatBubble(playerid, mes, COLOR_WHITE, 10.0, 10000);
		return false;
	}
	if(GetString(text,")")) {
		MeAction(playerid,"улыбается");
		return false;
	}
	if(GetString(text,"))")) {
		MeAction(playerid,"смеётся");
		return false;
	}
	if(GetString(text,"xD")) {
		MeAction(playerid,"хохочет во весь голос");
		return false;
	}
	if(GetString(text,"(")) {
		if(PlayerInfo[playerid][pSex] == 1) MeAction(playerid,"расстроился");
		else MeAction(playerid,"расстроилась");
		return false;
	}
	if(GetString(text,"((")) {
		if(PlayerInfo[playerid][pSex] == 1) MeAction(playerid,"сильно расстроился");
		else MeAction(playerid,"сильно расстроилась");
		return false;
	}
	if(GetString(text,":D")) {
		MeAction(playerid,"хохочет");
		return false;
	}
	if(GetString(text,"O_o")) 	{
		MeAction(playerid,"удивлен(а)");
		return false;
	}
	if(GetString(text,">_<")) {
		if(PlayerInfo[playerid][pSex] == 1) MeAction(playerid,"сморщился от злости");
		else MeAction(playerid,"сморщилась от злости");
		return false;
	}
	if(GetString(text,";)")) {
		MeAction(playerid,"подмигивает");
		return false;
	}
	if(GetString(text, "q")) {
		if(GetPVarInt(playerid,"anti_sbiv_time") > unix) return 1;
		if(PlayerInfo[playerid][pAdmin] >= 1) {
			MeAction(playerid,"показал(а) распальцовку {33AA33}Admins Team");
			ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,0,1);
			return false;
		}
		new member[20];
		switch(PlayerInfo[playerid][pMember]) {
			case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: {
				format(string,sizeof(string),"показал(а) распальцовку %s",member);
				MeAction(playerid,string);
				ApplyAnimation(playerid,"GHANDS","gsign1LH",4.0,0,0,0,0,1,1);
			}
			case fARMYSF,fARMYLV: {
				MeAction(playerid,"Виполнил(а) воинское приветствие");
				ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P",4.0,0,0,0,0,1000,1);
			}
		}
		return false;
	}
	if(PlayerInfo[playerid][pMember] == 0 || start_work[playerid] == 0) {
		format(string,sizeof(string),"- %s "W"(%s) [%d]",text,player_name[playerid],playerid); 
	}
	else if(TI[playerid][tMasked]) {
		format(string,sizeof(string),"- %s {%s}(%s) [%d]",text,GetColorFrac(TI[playerid][tMasked]),player_name[playerid],playerid); 
	}
	else if(TI[playerid][tMaskTime]) {
		format(string,sizeof(string),"- %s {7a7667}(%s) [%d]",text,player_name[playerid],playerid); 
	}
	else {
		format(string,sizeof(string),"- %s {%s}(%s) [%d]",text,GetColor(playerid),player_name[playerid],playerid);
	}
	ProxDetector(25.0,playerid,string,-1);
	if(!TI[playerid][tTazer] && !TI[playerid][tCuffedTime] && GetPVarInt(playerid,"anti_sbiv_time") < unix && !TI[playerid][tTied] && !GetPVarInt(playerid,"Animation")) {
		if(PlayerInfo[playerid][pSettings][4] == 0) {
			ApplyAnimation(playerid,"PED",Talk[PlayerInfo[playerid][pSettings][4]],8.1,0,1,1,1,1,0);
			SetTimerEx("ClearAnim",100*strlen(text),false,"i",playerid);	
		}
		else if(PlayerInfo[playerid][pSettings][4] != 0) {
			ApplyAnimation(playerid,"GANGS",Talk[PlayerInfo[playerid][pSettings][4]],4.1,1,1,1,1,1,1);
			SetTimerEx("ClearAnim",100*strlen(text),false,"i",playerid);	
		}
	}
	SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 10000);
	return false;
}
stock GetColor(playerid) {
    new str[8];
	format(str,8,"%06x",gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor] >>> 8);
	return str;
}
stock GetColorFrac(id) {
    new str[8];
	format(str,8,"%06x",gFractionSpawn[id][fracColor] >>> 8);
	return str;
}
public OnPlayerUpdate(playerid) {
	new tickcount1 = GetTickCount();
	if(!TI[playerid][tLogin] ||  AntiCheatIsKickedWithDesync(playerid)) return false;
	//TI[playerid][tUpdate] = GetTickCount();
	TI[playerid][tAFK] = 0;
	time_update = GetTickCount() - tickcount1;
	if(time_update > time_update_max) time_update_max = time_update;
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) {
	if((newkeys & KEY_FIRE) || ((newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK)))
{
    if(IsPlayerInRangeOfPoint(playerid,45.0,1792.5720,-1902.5563,12.6985) || IsPlayerInRangeOfPoint(playerid,45.0,1976.3082,-2015.0521,12.6894) || IsPlayerInRangeOfPoint(playerid,45.0,-1983.9254,115.2340,27.1047) || IsPlayerInRangeOfPoint(playerid,45.0,2835.7261,1266.3748,10.3807)) //Координати спавнів
{
    static const f_str[] =
    ""W"Заборонено боротися в цьому місці\n\
"NO"*{f6f6d9}Ви заморожені на 5 секунд!";
    new string[sizeof(f_str)];
    format(string,sizeof(string),"%s",f_str);
    D(playerid,DIALOG_NONE,DSM, ""YELLOW"УВАГА",string,"Зачинити","");
    TogglePlayerControllable(playerid, false);
    SetTimerEx("UnfreezePlayer", 5000, false, "i", playerid);
}
}
	if(!TI[playerid][tLogin]) return 1;
	new tickcount1 = GetTickCount();

	if(TI[playerid][tTazer]) ApplyAnimation(playerid,"CRACK","crckidle2",4.1,0,1,1,1,1,0);
	if ((oldkeys & KEY_SECONDARY_ATTACK) && !(newkeys & KEY_SECONDARY_ATTACK)) {
		if(SERIU[playerid][sID] != INVALID_PLAYER_ID) {
			 SpecPlayer(playerid,SERIU[playerid][sID]);
			 TogglePlayerControllable(playerid, 1);
		}
		if(!TI[playerid][tHeal]) {
			for(new i = 0; i < 12; i++) {
				if(PlayerToPoint(1.7,playerid,med_heal[i][0],med_heal[i][1],med_heal[i][2])) {
					new Float: health;
					GetPlayerHealth(playerid,health);
					if(health >= 75) return ErrorMessage(playerid,"Ви не нуждаетесь в лечении");
					SetPlayerPosAC(playerid,med_heal[i][0],med_heal[i][1],med_heal[i][2],TI[playerid][tVirtualWorld], TI[playerid][tInterior],false);
					SetPlayerFacingAngle(playerid,med_heal[i][3]);
					ApplyAnimation(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
					TI[playerid][tHeal] = true;
					break;
				}
			}
		}
		else {
			TI[playerid][tHeal] = false;
			ClearAnimations(playerid);
		}
        for(new i; i < gRoomsCount; i++) {
            if(IsPlayerInRangeOfPoint(playerid, 2, gRooms[i][roomsEnterX],gRooms[i][roomsEnterY],gRooms[i][roomsEnterZ]) && gRooms[i][roomsWorld] == GetPlayerVirtualWorld(playerid)) {
                if(gRooms[i][roomsDoors] == 1) return ErrorMessage(playerid, "Номер закрыт. У вас немає ключей");
                SetPlayerPosAC(playerid,1401.8759,-1205.0002,130.2086,i+1,81);
				SetPlayerFacingAngle(playerid,272.2149);
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
                return true;
            }
            else if(IsPlayerInRangeOfPoint(playerid, 3, 1401.8759,-1205.0002,130.2086)) {
				new x = GetPlayerVirtualWorld(playerid)-1;
                SetPlayerPosAC(playerid,gRooms[x][roomsEnterX],gRooms[x][roomsEnterY],gRooms[x][roomsEnterZ],gRooms[x][roomsWorld],80);
				SetPlayerFacingAngle(playerid,gRooms[x][roomsEnterR]);
                updaterooms(playerid,gRooms[x][roomsWorld]);
				SetCameraBehindPlayer(playerid);
				OnPlayerUpdateLoadingMode(playerid);
                return true;
            }
        }
		if(GetPVarInt(playerid,"Animation") == 2) {
			ClearAnimationsEX(playerid);
			DeletePVar(playerid,"Animation");
			TextDrawHideForPlayer(playerid, AnimDraw);
		}
    }
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
        switch(GetPlayerWeapon(playerid)) {
            case 23..25, 29..31: {
                if(newkeys == 132 || newkeys == 4 || newkeys == 65410 || newkeys == 130) GUARD_TICK_C_BUG[playerid] = GetTickCount();
                if(GetTickCount() - GUARD_TICK_C_BUG[playerid] < 500 && newkeys == 2) {
                	if(GetPlayerVirtualWorld(playerid) == 0 && (PlayerToKvadrat(playerid, -1544.892, 270.5747, -1232.015, 558.5571) || PlayerToKvadrat(playerid, -49.979476, 1695.982177, 414.020507, 2175.982177))) {
                    	SetPlayerArmedWeapon(playerid,0);
                    	ApplyAnimation(playerid, "PED", "getup_front",4.0,0,0,0,0,0);
                    }
                }
            }
        }
    }
    if(newkeys & KEY_WALK)
	{
		if(bumboxx[playerid] != 0)
		{
		    {
    		    if(!IsPlayerInRangeOfPoint(playerid, 3.0, BumBoxPos[playerid][0], BumBoxPos[playerid][1], BumBoxPos[playerid][2])) return SendClientMessage(playerid, COLOR_GREY, !"{cc0000}[Помилка] Вы слишком далеко от БумБокса.");
    		    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 0, 0, 0, 1);
				D(playerid,D_BOOMBOX,DIALOG_STYLE_LIST, ""YELLOW"Виберите песню:",""YELLOW"0. "W"Отключить песню\n"YELLOW"1. "W"Eminem - Untouchable\n"YELLOW"2. "W"Элджей - Рваные джинсы\n"YELLOW"3. "W"Макс Корж - Малиновый закат\n"YELLOW"4. "W"T-Fest - Улети\n"YELLOW"5. "W"Face - Мой Калашников\n"YELLOW"6. "W"Егор Крид - Крутой\
				\n"YELLOW"7. "W"Тима Белорусских - Витаминка\n"YELLOW"8. "W"Lil Pump - I Love It\n"YELLOW"9. "W"Монеточка - Кожен раз\n"YELLOW"10. "W"Время и Стекло - Тролль\n"YELLOW"11. "W"MATRANG - Медуза\n"YELLOW"12. "W"Скриптонит - Цепи\n"YELLOW"13. "W"PHARAOH - На Луне\n"YELLOW"14. "W"MORGENSHTERN – ЗЕЛЕНОГЛАЗЫЕ ДЕФФКИ\n"YELLOW"15. "W"LIZER - Корабли\
				\n"YELLOW"16. "W"Big Baby Tape - Hokage\n"YELLOW"17. "W"Delorenzy - Запретите Аниме\n"YELLOW"18. "W"Элджей - Минимал\n"YELLOW"19. "W"FACE - Я РОНЯЮ ЗАПАД\n"YELLOW"20. "W"Denzel Curry - Heartless", "Включить", "Відміна");
			}
		}
	}
	if(PRESSED(262144) || GetPlayerState(playerid) == PLAYER_STATE_DRIVER && PRESSED(KEY_CROUCH)) {
	    if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 2455) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
	}
	if(PRESSED(4)) {
		pc_cmd_lights(playerid,"");
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		new Float:face_angle; GetPlayerFacingAngle(playerid, face_angle);
		for(new i; i<CountGraffity; i++) {
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, GrafInfo[i][gr_x][0],GrafInfo[i][gr_x][1],GrafInfo[i][gr_x][2])) continue;
			if(GetPVarInt(playerid, "SettingGraffiti")) continue;
			//if(!(face_angle >= GrafInfo[i][gr_x][5] - 20.0 && face_angle < GrafInfo[i][gr_x][5] + 20.0)) continue;
			if(!IsAGang(playerid)) continue;
			if(PlayerInfo[playerid][pMember] != GrafInfo[i][gFrak]) {
				if(GetPlayerWeapon(playerid) != 41) return ErrorMessage(playerid,"У вас немає балончика");
				SetPVarInt(playerid,"Grafity",i);
				StartDrawing(playerid);
			}
		}
	}
	else if(RELEASED(4)) {
		if(IsPlayerInAnyVehicle(playerid)) return 1;
		if(!GetPVarInt(playerid, "SettingGraffiti")) return 1;
		GraffitiFailed(playerid);
		KillTimer(graf_timer[playerid]);
	}
	if((newkeys & KEY_JUMP) || (newkeys == KEY_FIRE)) {
		if((TI[playerid][tJobGun][0] && TI[playerid][tJobGun][2])) {
			SendOk(playerid,"Ви уронили ящик");
			TI[playerid][tJobGun][2] = 0;
			if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
			ClearAnimations(playerid);
			TI[playerid][tJobGun][1] = 1;
			DisablePlayerRaceCheckpoint(playerid);
		}
		else if(TI[playerid][tJobOil][0] && TI[playerid][tJobOil][1] && !IsPlayerInAnyVehicle(playerid)) {
			SendOk(playerid,"Ви уронили бочку");
			ClearAnimations(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
			SetPlayerMapIcon(playerid,1,415.0787,1405.1608,8.5656,11,-1,MAPICON_GLOBAL);
			SetPlayerMapIcon(playerid,2,401.2273,1456.7953,8.1906,11,-1,MAPICON_GLOBAL);
			TI[playerid][tJobOil][1] = false;
		}
		else if(GetPVarInt(playerid,"carrygun")) {
			SendOk(playerid,"Ви уронили ящик");
			DeletePVar(playerid,"carrygun");
			if(GetPVarInt(playerid,"use_mats") == 1) FI[fARMYLV][fMats] += 500,DeletePVar(playerid,"use_mats");
			if(GetPVarInt(playerid,"use_mats") == 2) FI[fARMYSF][fMats] += 500,DeletePVar(playerid,"use_mats");
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid,1);
			ClearAnimations(playerid);
		}
		else if((TI[playerid][tJobWood][0] && TI[playerid][tJobWood][1])) {
			SendOk(playerid,"Ви уронили древесину");
	        TI[playerid][tJobWood][1] = 0;
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
			ClearAnimations(playerid);
			SetPlayerAttachedObject(playerid,8,341,6);
			TI[playerid][tJobWood][3] = 1;
			TI[playerid][tJobWood][2] = -1;
		}
	}
	if(newkeys & KEY_LOOK_RIGHT) pc_cmd_mode(playerid);
	if(newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK ) {
		new animname[32];
  		GetAnimationName(GetPlayerAnimationIndex(playerid),animname,32,animname,32);
		if((PlayerToPoint(2.0,playerid,768.5205,-2.8860,1000.7214) || PlayerToPoint(2.0,playerid,769.8723,14.4393,1000.6978))) {
  			if((strcmp(animname,"FIGHTB_1",true) == 0 || strcmp(animname,"FIGHTB_2",true) == 0 || strcmp(animname,"FIGHTB_3",true) == 0 || strcmp(animname,"FIGHTA_1",true) == 0
		  		|| strcmp(animname,"FIGHTC_1",true) == 0 || strcmp(animname,"FIGHTC_2",true) == 0 || strcmp(animname,"FIGHTC_3",true) == 0 || strcmp(animname,"FIGHTA_2",true) == 0
			  	|| strcmp(animname,"FIGHTD_1",true) == 0 || strcmp(animname,"FIGHTD_2",true) == 0 || strcmp(animname,"FIGHTD_3",true) == 0 || strcmp(animname,"FIGHTA_3",true) == 0)
		  	&& TI[playerid][tGym]) {
				if(PlayerInfo[playerid][pBox] == 3) return ErrorMessage(playerid,"Ви изучили все навыки владения боем");
				if(!TI[playerid][tGymSkill]) return ErrorMessage(playerid,"Для начала проиобретите абонемент");
				if(floatround(PlayerInfo[playerid][pSnow]) < 1000) {
					new skill;
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) skill = BonusInfo[act_sport];
					else if(BonusInfo[act_select] == 2) skill = BonusInfo[act_sport];
				    else skill = 1;

					if(TI[playerid][tGyms] <= 0) PlayerInfo[playerid][pSnow] += (0.2*skill);
					else {
						if(TI[playerid][tGyms] - 0.4 <= 0) TI[playerid][tGyms] = 0;
						PlayerInfo[playerid][pSnow] += (0.4*skill);
						TI[playerid][tGyms] -= 0.4;
					}
				}
				else if(floatround(PlayerInfo[playerid][pSnow]) >= 1000) {
					PlayerInfo[playerid][pBox] ++;
					UpdatePlayerData(playerid,"pBox",PlayerInfo[playerid][pBox]);
					PlayerInfo[playerid][pSnow] = 0;
					TI[playerid][tGymSkill] = 0;
					SendOk(playerid,"Ви изучили новый стиль боя. Для переключения введіть: "W"/mm > особисті налаштування > стиль боя");
				}
				new string[33];
				format(string,32,"~g~NEED: ~w~%i",1000-floatround(PlayerInfo[playerid][pSnow]));
				GameTextForPlayer(playerid,string, 5000, 3);
			}
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK) {
		if(GetPVarInt(playerid,"hrieltor") || GetPVarInt(playerid,"bizzrielor")) {
			TogglePlayerControllable(playerid,1);
			SetPlayerPosAC(playerid,GetPVarFloat(playerid,"rielX"),GetPVarFloat(playerid,"rielY"),GetPVarFloat(playerid,"rielZ"),GetPVarInt(playerid,"rielVW"),1);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"rielX");
			DeletePVar(playerid,"rielY");
			DeletePVar(playerid,"rielZ");
			DeletePVar(playerid,"rielVW");
			DeletePVar(playerid,"hrieltor");
			DeletePVar(playerid,"bizzrielor");
		}
	}
	if(newkeys == KEY_CROUCH) {
        new barrierid = IsObjectBarrier(playerid);
		if(barrierid != -1) CheckBarrier(playerid,barrierid);
		
		else if((IsPlayerInRangeOfPoint(playerid,  20.0, 1050.0936,-1868.7532,894.0478) ||
				IsPlayerInRangeOfPoint(playerid,  20.0, 1123.6130,-1849.0645,894.0478) ||
				IsPlayerInRangeOfPoint(playerid,  20.0, 1053.8595,-1785.5875,894.0478) ||
				IsPlayerInRangeOfPoint(playerid,  20.0, 1108.8413,-1783.3357,894.0478)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			
			new i = TI[playerid][tSelectHouse];
			new Veh = GetPlayerVehicleID(playerid);
			SetVehiclePos(Veh, gHouses[i][houseParkX], gHouses[i][houseParkY], gHouses[i][houseParkZ]);
			SetVehicleZAngle(Veh, gHouses[i][houseParkR]);
			exit_garage(Veh,0);
			SetCameraBehindPlayer(playerid);
			TI[playerid][tInHouse] = false;
		}
		else if((IsPlayerInRangeOfPoint(playerid,  20.0, 1646.7213,738.0809,590.4441)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			new Veh = GetPlayerVehicleID(playerid),rand;
			switch(PlayerInfo[playerid][pRoom]) {
				case 1..60: rand = Random(0,9);
				case 61..120: rand = Random(10,18);
				case 121..180: rand = Random(24,33);
				case 181..240: rand = Random(19,23);
				default: return ErrorMessage(playerid,"Ви не снимаете комнату в данном отеле");
			}
			SetVehiclePos(Veh, hotel_spawncar[rand][0], hotel_spawncar[rand][1], hotel_spawncar[rand][2]);
			SetVehicleZAngle(Veh, hotel_spawncar[rand][3]);
			exit_garage(Veh,0);
			SetCameraBehindPlayer(playerid);
		}
		else if((IsPlayerInRangeOfPoint(playerid,  10.0, 1153.4031,-1208.7499,19.0252) ||
				IsPlayerInRangeOfPoint(playerid,  10.0, -1786.8206,1206.0835,25.1250) ||
				IsPlayerInRangeOfPoint(playerid,  10.0, 1643.8298,2197.1387,10.8203)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return ErrorMessage(playerid, "Ви не за рулём своего Т/С");
			new Veh = GetPlayerVehicleID(playerid);	
			if(GetVehicleFreeSeat(Veh) == -1) return ErrorMessage(playerid,"У Вас в Т/C пассажиры");
			switch(GetNearestTune(playerid)) {
				case 1: exit_garage(Veh,1,true);
				case 2: exit_garage(Veh,2,true);
				case 3: exit_garage(Veh,3,true);
			}
			SetVehiclePos(Veh, 1911.3821,71.0226,1139.2352);
			SetVehicleZAngle(Veh, 180.4593);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.5, 1905.1360,59.3574,1139.4918)) {
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return ErrorMessage(playerid, "Ви не за рулём своего Т/С");
			if(!GetPVarInt(playerid,"TunningSaluna")) {
				SetPVarInt(playerid,"VehicleTunnSALON",GetPlayerVehicleID(playerid));
				SetPVarInt(playerid,"TunningSaluna",1);
				
				for(new i = 0; i < 11; i++) TextDrawShowForPlayer(playerid,ColorTD[i]);
				new curcol,vehicleid = GetPlayerVehicleID(playerid);
				for(new i = 0; i < 2; i++) {
					curcol = VehicleInfo[vehicleid][vColor][i];
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][2+3*i], RGBArray[curcol]);
					curcol--;
					if(curcol < 0) curcol = 255;
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][1+3*i], RGBArray[curcol]);
					curcol += 2;
					if(curcol > 255) curcol = 0;
					PlayerTextDrawColor(playerid, ColorTDPl[playerid][3+3*i], RGBArray[curcol]);
				}
				for(new i = 0; i < 6; i++) PlayerTextDrawShow(playerid,ColorTDPl[playerid][1+i]);
				for(new i = 0, b = VehicleModelToPaintjobNum(GetVehicleModel(GetPlayerVehicleID(playerid)))+1; i < b; i++) TextDrawShowForPlayer(playerid,ColorTD[11+i]);
				VinylJob[playerid] = 0;
				TextDrawShowForPlayer(playerid,ColorTD[16]);
				PrimaryColor[playerid] = VehicleInfo[vehicleid][vColor][0];
				SecondaryColor[playerid] = VehicleInfo[vehicleid][vColor][1];
				RepaintValue[playerid] = 0;
				DeletePVar(playerid, "PaintJob");
				ChangedPrimaryColor[playerid] = false;
				ChangedSecondaryColor[playerid] = false;
				ChangedVinylJob[playerid] = false;
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
				PlayerTextDrawShow(playerid,ColorTDPl[playerid][0]);
				TextDrawShowForPlayer(playerid,ColorTD[15]);
				SelectTextDraw(playerid,0xAA3333AA);
			}
			else {
				CancelSelectTextDraw(playerid);
				SetPVarInt(playerid,"TunningSaluna",0);
				for(new h = 0;h < 20;h++) {
					if(h < 7)PlayerTextDrawHide(playerid,ColorTDPl[playerid][h]);
					TextDrawHideForPlayer(playerid,ColorTD[h]);
				}
				new cartune = GetPVarInt(playerid,"VehicleTunnSALON");
				ChangeVehicleColor(cartune,VehicleInfo[cartune][vColor][0],VehicleInfo[cartune][vColor][1]);
				ChangeVehiclePaintjob(cartune, VehicleInfo[cartune][vPaintJob]);
			}
			SetCameraBehindPlayer(playerid);
		}
		else if(IsPlayerInRangeOfPoint(playerid,  4.5, 1913.2271,59.1919,1139.4918)) {
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return ErrorMessage(playerid, "Ви не за рулём своего Т/С");
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return ErrorMessage(playerid, "Недоступно для данного Т/С");
			if(!GetPVarInt(playerid,"TunningSalun")) {
				SetPVarInt(playerid,"VehicleTunnSALON",GetPlayerVehicleID(playerid));
				SetPVarInt(playerid,"TunningSalun",1);
				new str[64],value;
				for(new i = 0; i < 3; i++) TextDrawShowForPlayer(playerid,CustomTD[i]);
				CustomType[playerid] = 0;
				CustomListNum[playerid] = 0;
				CustomLimitNum[playerid] = 0;
				for(new i = 0; i < 5; i++) {
					if(i > TypeBorder[CustomType[playerid]]-1) break;
					TextDrawShowForPlayer(playerid,CustomTD[5+i]);
					format(str,64,"TUN[%d][Value]",i);
					value = GetGVarInt(str,CustomType[playerid]);

					new price;
					if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
						new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
						price = (value-seller);
					}
					else {
						if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
							new seller = floatround(value/100*BonusInfo[act_tune]);
							price = (value-seller);
						}
						else if(BonusInfo[act_select] == 2) {
							new seller = floatround(value/100*BonusInfo[act_tune]);
							price = (value-seller);
						}
					    else price = value;
					}

					format(str,64,"TUN[%d][Name]",i);
					GetGVarString(str,str,64,CustomType[playerid]);
					format(str,64,"%s~n~$%d",str,price);
					PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
					PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
					format(str,64,"TUN[%d][ModelID]",i);
					if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),GetGVarInt(str,CustomType[playerid]))) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
					else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],GetGVarInt(str,CustomType[playerid]));
				}
				TextDrawShowForPlayer(playerid,CustomTD[10]);
				TextDrawShowForPlayer(playerid,CustomTD[20]);
				TextDrawShowForPlayer(playerid,CustomTD[21]);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[0]);
				PlayerTextDrawShow(playerid,CustomTDPl[playerid][0]);
				CameraViewChange(playerid,CustomType[playerid]);
				SelectTextDraw(playerid,0xAA3333AA);
			}
			else {
				SetCameraBehindPlayer(playerid);
				CancelSelectTextDraw(playerid);
				SetPVarInt(playerid,"TunningSalun",0);
				for(new h = 0;h < 22;h++) {
					if(h < 6)PlayerTextDrawHide(playerid,CustomTDPl[playerid][h]);
					TextDrawHideForPlayer(playerid,CustomTD[h]);
				}
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,  5.5, 1909.0234,73.2966,1139.4918)) {
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return ErrorMessage(playerid, "Ви не за рулём своего Т/С");
			new Veh = GetPlayerVehicleID(playerid);	
			new id = random(2);
			switch(GetPlayerInterior(playerid)) {
				case 1: {
					SetVehiclePos(Veh, tuning_exit_1[id][0],tuning_exit_1[id][1],tuning_exit_1[id][2]);
					SetVehicleZAngle(Veh, tuning_exit_1[id][3]);
				}
				case 2: {
					SetVehiclePos(Veh, tuning_exit_3[id][0],tuning_exit_3[id][1],tuning_exit_3[id][2]);
					SetVehicleZAngle(Veh, tuning_exit_3[id][3]);
				}
				case 3: {
					SetVehiclePos(Veh, tuning_exit_2[id][0],tuning_exit_2[id][1],tuning_exit_2[id][2]);
					SetVehicleZAngle(Veh, tuning_exit_2[id][3]);
				}
			}
			exit_garage(Veh,0);
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 2653.8486,-2387.8660,13.63287) && (PlayerInfo[playerid][bizz_work] == 5 || PlayerInfo[playerid][bizz_work] == 6 || PlayerInfo[playerid][bizz_work] == 7)) {
			new Veh = GetPlayerVehicleID(playerid);
			if((VehicleInfo[Veh][vBizz] != 5 && VehicleInfo[Veh][vBizz] != 6 && VehicleInfo[Veh][vBizz] != 7) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необхідно находиться за рулём тягоча");
			if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"У Вас уже есть груз");
			if(GetVehicleFreeSeat(Veh) == -1) return ErrorMessage(playerid,"Почати загрузку можно без пассажиров");
			SetVehiclePos(Veh, 2628.4819,-589.2004,2768.9805);
			SetVehicleZAngle(Veh, 200.1132);
			
			SetPlayerVirtualWorld(playerid,playerid+1);

			SetVehicleVirtualWorld(Veh,playerid+1);

			SetPlayerCameraPos(playerid, 2635.027099, -597.102844, 2768.397460);
			SetPlayerCameraLookAt(playerid, 2632.648681, -592.704895, 2768.367431);

			TogglePlayerControllable(playerid, false);

			TK_Trailer[playerid] = A_CreateVehicle(450,2624.5708,-578.5069,2768.5903,200.0733,color_td[FuncBizz[PlayerInfo[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PlayerInfo[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
			SetVehicleVirtualWorld(TK_Trailer[playerid],playerid+1);

			new prods;
			switch(GetVehicleModel(Veh)) {
				case 403: prods = 10000;
				case 514: prods = 12000;
				case 515: prods = 15000;
			}

			static const f_str[] = ""W"Сколько боєприпасів Ви хочете загрузить?\n\n\
Максимальная грузоподъемность фуры: "ORANGE"%d"W" кг\n\
боєприпасів На складі: "ORANGE"%d"W" ед\n\n\
"W"Количество загружаемых боєприпасів должно быть кратное: "ORANGE"1000"W" кг";
			new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
			format(string,sizeof(string),f_str,prods,zavodsklad);

			D(playerid,D_TRUCK,DSI, ""YELLOW"Зброяний завод",string,"Загрузити","Відміна");
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 2343.6523,-1220.3994,22.5000) && rob_veh[playerid] != INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			if(!VG[rob_veh[playerid]][vgAmount][0]) return ErrorMessage(playerid,"Фургон пуст");
			GiveMoney(playerid,250*VG[rob_veh[playerid]][vgAmount][0],"ограбление будинку");
			VG[rob_veh[playerid]][vgAmount][0] = 0;
			SendOk(playerid,"Ви успішно продали награбленную технику");
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 253.3007,1396.0299,10.5859) && (PlayerInfo[playerid][bizz_work] == 5 || PlayerInfo[playerid][bizz_work] == 6 || PlayerInfo[playerid][bizz_work] == 7)) {
			new Veh = GetPlayerVehicleID(playerid);
			if((VehicleInfo[Veh][vBizz] != 5 && VehicleInfo[Veh][vBizz] != 6 && VehicleInfo[Veh][vBizz] != 7) || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необхідно находиться за рулём тягоча");
			if(TK_Trailer[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"У Вас уже есть груз");
			if(GetVehicleFreeSeat(Veh) == -1) return ErrorMessage(playerid,"Почати загрузку можно без пассажиров");
			SetVehiclePos(Veh, 2628.4819,-589.2004,2768.9805);
			SetVehicleZAngle(Veh, 200.1132);
			SetPlayerVirtualWorld(playerid,playerid+1);
			
			SetVehicleVirtualWorld(Veh,playerid+1);

			SetPlayerCameraPos(playerid, 2635.027099, -597.102844, 2768.397460);
			SetPlayerCameraLookAt(playerid, 2632.648681, -592.704895, 2768.367431);

			TogglePlayerControllable(playerid, false);

			TK_Trailer[playerid] = A_CreateVehicle(584,2624.5708,-578.5069,2768.5903,200.0733,color_td[FuncBizz[PlayerInfo[playerid][bizz_work]][funcbColor]][col_car],color_td[FuncBizz[PlayerInfo[playerid][bizz_work]][funcbColor]][col_car],-1,VEHICLE_TYPE_TRAILER);
			SetVehicleVirtualWorld(TK_Trailer[playerid],playerid+1);

			new prods;
			switch(GetVehicleModel(Veh)) {
				case 403: prods = 10000;
				case 514: prods = 12000;
				case 515: prods = 15000;
			}

			static const f_str[] = ""W"Сколько тонн нефти Ви хочете загрузить?\n\n\
Максимальная грузоподъемность фуры: "ORANGE"%d"W" т.\n\
Нефти На складі: "ORANGE"%d"W" т.\n\n\
"W"Количество загружаемого бензина должно быть кратное: "ORANGE"1000"W" т.";
			new string[sizeof(f_str) +1 + (-2 + 4) + (-2 + 7) + (-2 + 5)];
			format(string,sizeof(string),f_str,prods,oilsklad*10000);

			D(playerid,D_TRUCK_2,DSI, ""YELLOW"Нефтезавод",string,"Загрузити","Відміна");
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, -1744.4447,149.4602,3.5496) && (PlayerInfo[playerid][bizz_work] == 5 || PlayerInfo[playerid][bizz_work] == 6 || PlayerInfo[playerid][bizz_work] == 7) && TI[playerid][tTrucker][1] == 1) {//порт сф
			new Veh = GetPlayerVehicleID(playerid);
			if((VehicleInfo[Veh][vBizz] != 5 || VehicleInfo[Veh][vBizz] != 6 || VehicleInfo[Veh][vBizz] != 7) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необхідно находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(Veh)) return ErrorMessage(playerid,"У вас немає груза");
			
			new percent = floatround(TI[playerid][tTrucker][0]/1000*TI[playerid][tTrucker][2]);//общая сумма
			new price_1 = floatround(percent/100*FuncBizz[PlayerInfo[playerid][bizz_work]][funcbPercent]);//процент который идёт в ТК
			new price_2 = percent-price_1;//сумма которая идёт гравцю 

			static const f_str[] = ""W"%d{f6f6d9} кг груза было продано за "ORANGE"$%d. {f6f6d9}Доход: $%d ($%d доставлено в кассу компании)";
			new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,TI[playerid][tTrucker][0],percent,price_2,price_1);
			SendOk(playerid,string);
			GiveMoney(playerid,price_2,"разгрузка ТК");
			bizz_pay(PlayerInfo[playerid][bizz_work]-1,price_1);

			PlayerInfo[playerid][bizz_lcash] += price_1;
			PlayerInfo[playerid][bizz_cash] += price_1;

			UpdatePlayerData(playerid,"bizz_lcash",PlayerInfo[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PlayerInfo[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;
			TI[playerid][tTrucker][3] = 0;
			TI[playerid][tTrucker][2] = 0;
			TI[playerid][tTrucker][1] = 0;
			TI[playerid][tTrucker][0] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 2616.7119,-2226.7627,13.3819) && (PlayerInfo[playerid][bizz_work] == 5 || PlayerInfo[playerid][bizz_work] == 6 || PlayerInfo[playerid][bizz_work] == 7) && TI[playerid][tTrucker][1] == 2) {//порт ЛС
			new Veh = GetPlayerVehicleID(playerid);
			if((VehicleInfo[Veh][vBizz] != 5 || VehicleInfo[Veh][vBizz] != 6 || VehicleInfo[Veh][vBizz] != 7) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необхідно находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(Veh)) return ErrorMessage(playerid,"У вас немає груза");
			
			new percent = floatround(TI[playerid][tTrucker][0]/1000*TI[playerid][tTrucker][2]);//общая сумма
			new price_1 = floatround(percent/100*FuncBizz[PlayerInfo[playerid][bizz_work]][funcbPercent]);//процент который идёт в ТК
			new price_2 = percent-price_1;//сумма которая идёт гравцю

			static const f_str[] = ""W"%d{f6f6d9} кг груза было продано за "ORANGE"$%d. {f6f6d9}Доход: $%d ($%d доставлено в кассу компании)";
			new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,TI[playerid][tTrucker][0],percent,price_2,price_1);
			SendOk(playerid,string);
			GiveMoney(playerid,price_2,"разгрузка ТК");
			bizz_pay(PlayerInfo[playerid][bizz_work]-1,price_1);

			PlayerInfo[playerid][bizz_lcash] += price_1;
			PlayerInfo[playerid][bizz_cash] += price_1;

			UpdatePlayerData(playerid,"bizz_lcash",PlayerInfo[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PlayerInfo[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;
			TI[playerid][tTrucker][3] = 0;
			TI[playerid][tTrucker][1] = 0;
			TI[playerid][tTrucker][0] = 0;
		}
		else if(IsPlayerInRangeOfPoint(playerid,  7.0, 2687.9753,-2480.1912,13.5008) && (PlayerInfo[playerid][bizz_work] == 5 || PlayerInfo[playerid][bizz_work] == 6 || PlayerInfo[playerid][bizz_work] == 7) && TI[playerid][tTrucker][1] == 3) {//оружейка
			new Veh = GetPlayerVehicleID(playerid);
			if((VehicleInfo[Veh][vBizz] != 5 || VehicleInfo[Veh][vBizz] != 6 || VehicleInfo[Veh][vBizz] != 7) && GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMessage(playerid,"Необхідно находиться за рулём тягоча");
			if(TK_Trailer[playerid] == INVALID_VEHICLE_ID || !GetVehicleTrailer(Veh)) return ErrorMessage(playerid,"У вас немає груза");
			
			new percent = floatround(TI[playerid][tTrucker][0]/1000*TI[playerid][tTrucker][2]);//общая сумма
			new price_1 = floatround(percent/100*FuncBizz[PlayerInfo[playerid][bizz_work]][funcbPercent]);//процент который идёт в ТК
			new price_2 = percent-price_1;//сумма которая идёт гравцю

			static const f_str[] = ""W"%d{f6f6d9} кг груза было продано за "ORANGE"$%d. {f6f6d9}Доход: $%d ($%d доставлено в кассу компании)";
			new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,TI[playerid][tTrucker][0],percent,price_2,price_1);
			SendOk(playerid,string);
			GiveMoney(playerid,price_2,"разгрузка ТК");
			bizz_pay(PlayerInfo[playerid][bizz_work]-1,price_1);

			PlayerInfo[playerid][bizz_lcash] += price_1;
			PlayerInfo[playerid][bizz_cash] += price_1;

			UpdatePlayerData(playerid,"bizz_lcash",PlayerInfo[playerid][bizz_lcash]);
			UpdatePlayerData(playerid,"bizz_cash",PlayerInfo[playerid][bizz_cash]);
			A_DestroyVehicle(TK_Trailer[playerid]);
			TK_Trailer[playerid] = INVALID_VEHICLE_ID;
			TI[playerid][tTrucker][3] = 0;
			TI[playerid][tTrucker][1] = 0;
			TI[playerid][tTrucker][0] = 0;
		}
		else if(PlayerInfo[playerid][pHouse] && gHouses[PlayerInfo[playerid][pHouse]-1][houseImprove][2]) {
			if(PlayerToPoint(10,playerid,gHouses[PlayerInfo[playerid][pHouse]-1][houseParkX], gHouses[PlayerInfo[playerid][pHouse]-1][houseParkY], gHouses[PlayerInfo[playerid][pHouse]-1][houseParkZ]) && ((house_car[playerid][0] != INVALID_VEHICLE_ID && GetPlayerVehicleID(playerid) == house_car[playerid][0]) || (house_car[playerid][1] != INVALID_VEHICLE_ID && GetPlayerVehicleID(playerid) == house_car[playerid][1]))) {
				new id = -1,house = PlayerInfo[playerid][pHouse]-1,car;
				switch(gHouses[house][houseClass]) {
					case 0: id = 0;
					case 1: id = 2;
					case 2: id = 4;
					case 3: id = 6;
				}
				new hint = gHouses[house][houseHint];
				new interior = hinterior_info[hint][h_interior];
				new Veh = GetPlayerVehicleID(playerid);
				if(GetPlayerVehicleID(playerid) == house_car[playerid][0]) car = 0;
				else car = 1;
				switch(car) {
					case 0: {
						SetVehiclePos(Veh, cargarage[id][0],cargarage[id][1],cargarage[id][2]);
						SetVehicleZAngle(Veh,cargarage[id][3]);
						enter_garage(Veh,PlayerInfo[playerid][pHouse],PlayerInfo[playerid][pHouse]-1, interior);
						SetCameraBehindPlayer(playerid);
					}
					case 1: {
						SetVehiclePos(Veh, cargarage[id+1][0],cargarage[id+1][1],cargarage[id+1][2]);
						SetVehicleZAngle(Veh,cargarage[id+1][3]);
						enter_garage(Veh,PlayerInfo[playerid][pHouse],PlayerInfo[playerid][pHouse]-1, interior);
						SetCameraBehindPlayer(playerid);
					}
				}
			}
		}
    }
    if(newkeys == KEY_WALK && !IsPlayerInAnyVehicle(playerid)) {
		new barrierid = IsObjectBarrier(playerid);
		if(barrierid != -1) CheckBarrier(playerid,barrierid);

  		if(PlayerToPoint(1.5,playerid,-1223.340209, 1577.941650, 1112.405273) ||
			PlayerToPoint(1.5,playerid,-1223.340209, 1576.360107, 1112.405273) ||
			PlayerToPoint(1.5,playerid,-1223.340209, 1574.818603, 1112.405273) ||
			PlayerToPoint(1.5,playerid,-1220.148193, 1577.941650, 1112.405273) ||
			PlayerToPoint(1.5,playerid,-1220.148193, 1576.360107, 1112.405273) ||
			PlayerToPoint(1.5,playerid,-1220.148193, 1574.818603, 1112.405273) ||
			PlayerToPoint(1.5,playerid,-1216.725219, 1577.941650, 1112.405273) ||
			PlayerToPoint(1.5,playerid,-1216.725219, 1576.360107, 1112.405273) ||
			PlayerToPoint(1.5,playerid,-1216.725219, 1574.818603, 1112.405273)) {
			if(TI[playerid][tAutoSchool] != 1) return ErrorMessage(playerid,"Ви не оплатили данный вид экзамена. Оплатить можно в кассе");
			if(GetPVarInt(playerid,"use_test") == 1) return 1;
			if(GetPVarInt(playerid,"pWaitingExam") == 1) return ErrorMessage(playerid,"Ви уже сдали теоретическую часть");
			static const f_str[] = ""W"Добро пожаловать в автошколу!\n\n\
Для получения доступа к практическому экзамену,\n\
Вам Необхідно ответить "YELLOW"ВЕРНО"W" на 5 теоретических вопросов.\n\
Вартість проходження теста составит - "ORANGE"$%d\n\n\
"W"Ви хочете приступить к решению теста?";
			new string[sizeof(f_str) +1 + (-2 + 5)];
			format(string,sizeof(string),f_str,500);
			D(playerid,D_AUTOSCHOOL_1,DSM, ""YELLOW"ЭКЗАМЕН",string,"Так","Відміна");
			SetPVarInt(playerid,"use_test", 1);
			DeletePVar(playerid,"error_test");
			DeletePVar(playerid,"pTestQNumber");
			TestASKMassive[playerid] = { 0, 1, 2, 3 , 4, 5, 6};
			RandomMassive(TestASKMassive[playerid], 7);
		}
		if(PlayerToPoint(1.5,playerid,-1226.6626,1564.0245,1114.0768) ||
			PlayerToPoint(1.5,playerid,-1226.6938,1566.5065,1114.0768) ||
			PlayerToPoint(1.5,playerid,-1226.6665,1568.6997,1114.0768)) {
			if(TI[playerid][tAutoSchool] != 2 && TI[playerid][tAutoSchool] != 3) return ErrorMessage(playerid,"Ви не оплатили данный вид экзамена. Оплатить можно в кассе");
			D(playerid,D_AUTOSCHOOL_3,DSM, ""YELLOW"ЭКЗАМЕН","\n\n"W"Ви дійсно хочете приступить к экзамену?\n\n","Так","Відміна");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2346.9180,-1245.6836,22.5000)) {//наркобот
			static const f_str[] = ""W"Укажите количество наркотиків для покупки:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1г"W" наркотиків: "GREEN"$%d"W"\n\
\tДоступно грамм На складі: "YELLOW"%d"W"\n\
\tВ кишеню поміститься: "YELLOW"%d"W"\n";
			new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

   			format(string,sizeof(string),f_str,black_prods[5],black_prods[1],vip_status[PlayerInfo[playerid][pVips]][vip_drugs]-PlayerInfo[playerid][pDrugs]);
			D(playerid,D_MARKET_NARKO,DSI, ""YELLOW"Покупка наркотиків", string, "Купити", "Відміна");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2347.5073,-1263.8671,22.5095)) {//армоур
			D(playerid,D_MARKET,DSL, ""YELLOW"Черный рынок", ""YELLOW"1."W" Бронежилет\n"YELLOW"2."W" Армейская форма", "Вибрати", "Відміна");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2327.8286,-1255.9642,22.5000)) {//материалы
			static const f_str[] = ""W"Укажите количество боєприпасів для покупки:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1"W" боеприпаса: "GREEN"$%d"W"\n\
\tДоступно боєприпасів На складі: "YELLOW"%d"W"\n\
\tВ кишеню поміститься: "YELLOW"%d"W"\n";
			new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5) + (-2 +5)];

   			format(string,sizeof(string),f_str,black_prods[6],black_prods[2],vip_status[PlayerInfo[playerid][pVips]][vip_mats]-PlayerInfo[playerid][pMats]);
			D(playerid, D_MARKET_GUN, DSI, ""YELLOW"Покупка зброї",string, "Купити", "Відміна");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2324.0752,-1273.6428,22.5000)) {//бот скупка
			D(playerid,D_MARKET_BUY,DSL, ""YELLOW"Черный рынок [СКУПКА]", ""YELLOW"1."W" Бронежилет\n"YELLOW"2."W" Армейская форма\n"YELLOW"3."W" Наркотики\n"YELLOW"4."W" Материалы", "Вибрати", "Відміна");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 2.3, 2343.9939,-1314.1212,24.0606)) {
			if(PlayerInfo[playerid][pLevel] < 3) return SendBotMessage(playerid,"Ти ще зовсім малий, процювати можно з 3 років в штаті");
			if(!IsAGang(playerid)) return SendBotMessage(playerid,"Не на той район ти зайшов, вали-ка звідси");
			if(rob_veh[playerid] != INVALID_VEHICLE_ID) return SendBotMessage(playerid,"Ты уже брал тачку, вали-ка звідси");
			D(playerid,D_ROB_CAR,DSM, ""YELLOW"Ограбление домов", "\n\n"W"Ты Дісно хочешь грабить будинку?\n\n", "Так", "Ні");
		}
		else if(IsAAlca(playerid) && maniken[playerid] != -1 && TI[playerid][tAlcotraz][2]) {
			TI[playerid][tAlcotraz][2] = 0;
			ApplyAnimation(playerid,"BOMBER","BOM_Plant_Loop",4.1, 1, 1, 1, 1, 0, 0);
			SetTimerEx("alcatraz_timer",10000,false,"i",playerid);
			return 1;
		}
  		else if(IsAGang(playerid) && IsPlayerInDynamicArea(playerid,gAreas[arZavodSklad])) {
		    if(GetPVarInt(playerid,"carrygun")) return ErrorMessage(playerid,"У Вас уже есть ящик с боеприпасами");
			if(zavodsklad < 500) return ErrorMessage(playerid, "На складі недостаточно боєприпасів");
			if(!GetPVarInt(playerid,"carrygun")) {
				zavodsklad -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
			}
		}
  		else if((IsAGang(playerid) || GetTeamID(playerid) == fARMYLV || IsAMafia(playerid)) && IsPlayerInDynamicArea(playerid,gAreas[arArmyLVSklad])) {
		    if(GetPVarInt(playerid,"carrygun")) return ErrorMessage(playerid,"У Вас уже есть ящик с боеприпасами");
			if(FI[fARMYLV][fMats] < 500) return ErrorMessage(playerid, "На складі недостаточно боєприпасів");
			if(!GetPVarInt(playerid,"carrygun")) {
				FI[fARMYLV][fMats] -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
				SetPVarInt(playerid,"use_mats",1);
			}
		}
		else if((IsAGang(playerid) || IsAMafia(playerid)) && IsPlayerInDynamicArea(playerid,gAreas[arArmySFSklad])) {
			if(GetPVarInt(playerid,"carrygun")) return ErrorMessage(playerid,"У Вас уже есть ящик с боеприпасами");
			if(FI[fARMYSF][fMats] < 500) return ErrorMessage(playerid, "На складі недостаточно боєприпасів");
			if(!GetPVarInt(playerid,"carrygun")) {
				FI[fARMYSF][fMats] -= 500;
				SetPlayerFacingAngle(playerid,270.0);
				ClearAnimations(playerid);
				ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
				SetTimerEx("CarryDelay",1000,false,"i",playerid);
				SetPlayerAttachedObject(playerid,1,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SetPVarInt(playerid,"carrygun",1);
				SetPVarInt(playerid,"use_mats",2);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.7, 1050.3049,2313.1973,10.6818)) {
			if(!IsAMafia(playerid)) return ErrorMessage(playerid,"Ви не мафиози");
			static const f_str[] = ""W"Вартість "YELLOW"10.000"W" боєприпасів: "GREEN"$%d"W"\n\
Доступно боєприпасів На складі мафии: "YELLOW"%d"W"\n\n\
"YELLOW"Ви дійсно хочете Купити "YELLOW"10.000"YELLOW" боєприпасів за "GREEN"$%d?";
			new string[sizeof(f_str) +1 + (-2 +6) + (-2 + 7) + (-2 + 7)];

   			format(string,sizeof(string),f_str,50000,FI[GetTeamID(playerid)][fMats],50000);
			D(playerid, D_MATERIALS_BUY, DSM, ""YELLOW"Покупка боєприпасів",string, "Купити", "Відміна");
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.7, 324.3706,1120.0488,1083.8828)) {
			if(!IsAMafia(playerid) && !IsAGang(playerid)) return ErrorMessage(playerid,"Ви не мафиози/бандит");
			static const f_str[] = ""W"Укажите количество наркотиків для покупки:\n\n\
"O"Примечание:"W"\n\
\tВартість "YELLOW"1г"W" наркотиків: "GREEN"$%d"W"\n\
\tВ кишеню поміститься: "YELLOW"%d"W"\n";
			new string[sizeof(f_str) +1 + (-2 +5) + (-2 +5)];

			format(string,sizeof(string),f_str,pricedrugs,vip_status[PlayerInfo[playerid][pVips]][vip_drugs]-PlayerInfo[playerid][pDrugs]);
			D(playerid,D_BUYNARKO,DSI, ""YELLOW"Покупка наркотиків", string, "Купити", "Відміна");
		}
		else if(PlayerToPoint(1.5,playerid,2425.8130,-2472.8911,13.6338)){ //угон
			if(theftCheck[playerid][1] != 3) return ErrorMessage(playerid, "Нужно сначала взяти задание");
			if(PlayerInfo[playerid][ptheftSkill] == 0) return ErrorMessage(playerid, "Доступно только со 2 рівня угона");
			if(theftveh[playerid][0] != INVALID_VEHICLE_ID) return ErrorMessage(playerid, "Ви уже получили машину");
			theftveh[playerid][1] = 120;
			PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
			new car;
			switch(PlayerInfo[playerid][ptheftSkill]){
				case 1: car = 462; 
				case 2: car = 509; 
				case 3..25: car = 461; 
			}
			switch (random(5)){
					case 0: theftveh[playerid][0] = A_CreateVehicle(car, 2422.7231,-2475.2529,13.2169,60.4655, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 1: theftveh[playerid][0] = A_CreateVehicle(car, 2421.5354,-2476.5518,13.2079,49.9015, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 2: theftveh[playerid][0] = A_CreateVehicle(car, 2420.4478,-2477.8716,13.2073,50.6490, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 3: theftveh[playerid][0] = A_CreateVehicle(car, 2419.2532,-2479.0793,13.2080,52.1076, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 4: theftveh[playerid][0] = A_CreateVehicle(car, 2418.3071,-2480.1309,13.2084,54.3323, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
			}
			if(car == 461) VehicleInfo[theftveh[playerid][0]][vFuel] = 50.0;
		}
		else if(PlayerToPoint(1.5,playerid,952.2404,2054.9951,10.8203)){ //угон
			if(theftCheck[playerid][1] != 3) return ErrorMessage(playerid, "Нужно сначала взяти задание");
			if(PlayerInfo[playerid][ptheftSkill] == 0) return ErrorMessage(playerid, "Доступно только со 2 рівня угона");
			if(theftveh[playerid][0] != INVALID_VEHICLE_ID) return ErrorMessage(playerid, "Ви уже получили машину");
			theftveh[playerid][1] = 120;
			PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
			new car;
			switch(PlayerInfo[playerid][ptheftSkill]){
				case 1: car = 462; 
				case 2: car = 509; 
				case 3..25: car = 461; 
			}
			switch (random(5)){
					case 0: theftveh[playerid][0] = A_CreateVehicle(car, 936.2581,2055.4512,10.3150,0.8911, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 1: theftveh[playerid][0] = A_CreateVehicle(car, 937.9734,2055.4656,10.3769,4.5768, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 2: theftveh[playerid][0] = A_CreateVehicle(car, 939.6783,2055.5396,10.3773,0.1772, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 3: theftveh[playerid][0] = A_CreateVehicle(car, 941.4130,2055.5398,10.3531,354.9440, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 4: theftveh[playerid][0] = A_CreateVehicle(car, 942.8529,2055.6968,10.3881,1.3770, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
			}
			if(car == 461) VehicleInfo[theftveh[playerid][0]][vFuel] = 50.0;
		}
		else if(PlayerToPoint(1.5,playerid,-2137.6365,-248.1024,36.5156)){ //угон
			if(theftCheck[playerid][1] != 3) return ErrorMessage(playerid, "Нужно сначала взяти задание");
			if(PlayerInfo[playerid][ptheftSkill] == 0) return ErrorMessage(playerid, "Доступно только со 2 рівня угона");
			if(theftveh[playerid][0] != INVALID_VEHICLE_ID) return ErrorMessage(playerid, "Ви уже получили машину");
			theftveh[playerid][1] = 120;
			PlayerTextDrawShow(playerid, theft_PTD[playerid][1]);
			new car;
			switch(PlayerInfo[playerid][ptheftSkill]){
				case 1: car = 462; 
				case 2: car = 509; 
				case 3..25: car = 461; 
			}
			switch (random(5)){
					case 0: theftveh[playerid][0] = A_CreateVehicle(car, -2135.4351,-251.4438,34.8944,266.1584, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 1: theftveh[playerid][0] = A_CreateVehicle(car, -2135.0457,-253.0109,34.9052,272.1158, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 2: theftveh[playerid][0] = A_CreateVehicle(car, -2135.1604,-254.5086,34.8624,270.5945, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 3: theftveh[playerid][0] = A_CreateVehicle(car, -2134.9924,-255.8532,34.9064,272.1504, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
					case 4: theftveh[playerid][0] = A_CreateVehicle(car, -2135.0635,-257.1605,34.8368,271.0209, random(50), random(50), -1,VEHICLE_TYPE_ADMIN);
			}
			if(car == 461)VehicleInfo[theftveh[playerid][0]][vFuel] = 50.0;
		}
		else if(PlayerToPoint(1.5,playerid,2508.5442,-1471.2617,24.0337)){ //угон //коорды
			if(PlayerInfo[playerid][ptheftSkill] < 15) {
				if(!IsAGang(playerid)) return ErrorMessage(playerid, "Ты не с нашего района!");
			}
			if(PlayerInfo[playerid][ptheftTime] > gettime()) {
				new string[80];
				format(string,sizeof(string),"Пошел вон, ты слишком часто сюда приходишь, возвращайся через %02d:%02d", (PlayerInfo[playerid][ptheftTime]-gettime())/60,(PlayerInfo[playerid][ptheftTime]-gettime())%60);
				return ErrorMessage(playerid,string);
			}
			if(PlayerInfo[playerid][ptheftSkill] == 0){
				if(thefttime[playerid] > 0) return ErrorMessage(playerid, "Ви уже начали задание, для отмены введіть команду /theftcancel");
			 	D(playerid,D_THEFT,DSM, ""YELLOW"Угон транспорта",""W"Здарова, я Jackson Young, наш общий знакомый сказал,\nчто ты не против заробити на нелегальної работенке.\nСуть моего задания в том, что я передаю на GPS координаты тачки, которая мне нужна.\nПеред тем, как берешься за роботу, нужно Купити в магазине отмычки.\nНичего сложного нет, крадешь тачку и получаешь - легкие гроші.\nБудешь браться за дело?","Так","Ні");
			}
			else {
				D(playerid,D_THEFT_LIST,DSL, ""YELLOW"Угон транспорта",""W"взяти задание\nвзяти транспорт","Вибрати","Відміна");
			}
		}
		//лотарея за $
		else if(PlayerToPoint(1.5,playerid,2316.6213,-12.6678,26.7421)) { //швидка лотарея за вірти
			D(playerid, D_LOTARRY_UKRAINE_MONEY, DSM, ""YELLOW"Лотарея Samp Ukraine", ""W"Ви бажаєте придбати миттєву лотарею за: 5.000$ ?", "Так", "Відміна");
		}
		//лотарея за донат
		else if(PlayerToPoint(1.5,playerid,2316.6206,-9.9449,26.7421)) { //швидка лотарея за донат
			D(playerid, D_LOTARRY_UKRAINE_DONAT, DSM, ""YELLOW"Лотарея Samp Ukraine", ""W"Ви бажаєте придбати миттєву лотарею за: 20 B-Coin ?", "Так", "Відміна");
		}
		else if(PlayerToPoint(1.5,playerid,2316.6213,-15.3174,26.7421)) {
			static const f_str[] =
			""W"Цей тип лотереї в розробці...";
            new string[sizeof(f_str)];
            format(string,sizeof(string),"%s",f_str);
            D(playerid,DIALOG_NONE,DSM, ""YELLOW"Помилка",""W"В розробці","Закрити","");
			}
			
		else if(PlayerToPoint(1.5,playerid,840.469,-221.190,1000.190) ||
			PlayerToPoint(1.5,playerid,840.489,-219.210,1000.190) ||
			PlayerToPoint(1.5,playerid,840.500,-217.229,1000.190) ||
			PlayerToPoint(1.5,playerid,840.520,-215.240,1000.190) ||
			PlayerToPoint(1.5,playerid,840.530,-213.250,1000.190) ||
			PlayerToPoint(1.5,playerid,840.549,-211.270,1000.190) ||
			PlayerToPoint(1.5,playerid,840.559,-209.279,1000.190) ||
			PlayerToPoint(1.5,playerid,840.580,-207.289,1000.190) ||
			PlayerToPoint(1.5,playerid,840.590,-205.300,1000.190) ||
			PlayerToPoint(1.5,playerid,847.179,-204.389,1000.190) ||
			PlayerToPoint(1.5,playerid,845.190,-204.389,1000.190) ||
			PlayerToPoint(1.5,playerid,847.200,-207.250,1000.190) ||
			PlayerToPoint(1.5,playerid,845.210,-207.240,1000.190) ||
			PlayerToPoint(1.5,playerid,847.200,-210.169,1000.190) ||
			PlayerToPoint(1.5,playerid,845.210,-210.169,1000.190)) {
			if(GetPVarInt(playerid,"comp_game") <= unix) return ErrorMessage(playerid,"Купите білет для ігри");
			D(playerid,D_COMP_GAME,DSL,""YELLOW"Game Menu",""YELLOW"1."W" Capture Blocks\n"YELLOW"2."W" DM - Арена\n"YELLOW"3."W" Гонка Вооружений", "Вибрати", "Закрити");
		}
		else if(PlayerToPoint(1.5,playerid,1981.0763,-2039.7773,13.5708) || PlayerToPoint(1.5,playerid,1770.8281,-1887.7174,13.5600)) {//квест спавны
			new mas[4] = {1,2,3,4},num=0,string[300];
			new skr[124];
			string = ""YELLOW"Задание\t"YELLOW"Статус\n";
			for(new i;i<4;i++) {
				if(AcceptQuest[playerid][mas[i]]==0) skr = "\t"GREEN"Доступно"W"";
				else if(QuestProgress[playerid][mas[i]] == 100) skr = "\t"NO"Виполнено"W"";
				else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = "\t"ORANGE"Можно завершить"W"";
				else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = "\t{f6f6d9}В процессе"W"";

				format(string,sizeof(string),"%s%s%s\n",string,QI[mas[i]][QuestName],skr);
				QuestShow[playerid][num] = mas[i];
				num++;
			}
			D(playerid,D_QUEST,DSTH,"Квесты",string,"Вибрати","Відміна");
		}
		else if(PlayerToPoint(2.5,playerid,738.0546,-1520.5520,1415.4099)) {//актер news
			if(!PlayerInfo[playerid][pPhone]) return SendBotMessage(playerid,"У вас немає мобильного телефона");
			new bool:online = false;
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(IsANews(i) && start_work[playerid]) continue;
				online = true;
			}
			if(!online) return ErrorMessage(playerid,"На сервере присутвутют редакторы. Отправьте оголошення: /ad [текст]");
			D(playerid, D_AUTONEWS, DSL, ""YELLOW"Оголошення",""YELLOW"1."W" Купити\n"YELLOW"2."W" Продати\n"YELLOW"3."W" Обменять\n"YELLOW"4."W" Услуги", "Вибрати", "Відміна");
			return 1;
		}
		else if(PlayerToPoint(1.5,playerid,1359.5322,1065.0143,1626.4896) && IsACop(playerid) && start_work[playerid]) {//пд вход в регистратуру
			SetPlayerPosAC(playerid,1357.0570,1068.3199,1626.4896,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
			SetPlayerFacingAngle(playerid,269.8491);
			SetCameraBehindPlayer(playerid);
		}
		else if(PlayerToPoint(1.5,playerid,1356.3823,1068.3185,1626.4896) && IsACop(playerid) && start_work[playerid]) {//пд вход в регистратуру
			SetPlayerPosAC(playerid,1360.2255,1065.2034,1626.4896,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
			SetPlayerFacingAngle(playerid,295.5193);
			SetCameraBehindPlayer(playerid);
		}
		else if(PlayerToPoint(2.0,playerid,2194.1531,-2279.8872,13.5469)) {
			if(!duels) return SendBotMessage(playerid,"Временно недоступно");
			if(!IsAGang(playerid) && !IsAMafia(playerid)) return SendBotMessage(playerid,"Ви не знаходитесь в банді/мафії");
			D(playerid,D_DUEL,DSL,""YELLOW"Дуэли",""YELLOW"1."W" Доступные лобби\n"YELLOW"2."W" Створити лобби","Вибрати","Відміна");
		}
		else if(PlayerToPoint(1.5,playerid,1942.2025,-1117.6656,26.4455) || PlayerToPoint(1.5,playerid,2747.1582,-1180.8827,69.4016) ||
				PlayerToPoint(1.5,playerid,2498.2842,-1687.7340,13.5188) || PlayerToPoint(1.5,playerid,1669.6034,-2118.1514,13.5469) ||
				PlayerToPoint(1.5,playerid,2735.0513,-1949.6676,13.5394)) {//квест банди
			if((PlayerToPoint(1.5,playerid,1942.2025,-1117.6656,26.4455) && PlayerInfo[playerid][pMember] != fBALLAS) || (PlayerToPoint(1.5,playerid,2747.1582,-1180.8827,69.4016) && PlayerInfo[playerid][pMember] != fVAGOS) ||
				(PlayerToPoint(1.5,playerid,2498.2842,-1687.7340,13.5188) && PlayerInfo[playerid][pMember] != fGROVE) || (PlayerToPoint(1.5,playerid,1669.6034,-2118.1514,13.5469) && PlayerInfo[playerid][pMember] != fAZTEC) ||
				(PlayerToPoint(1.5,playerid,2735.0513,-1949.6676,13.5394) && PlayerInfo[playerid][pMember] != fRIFA)) return SendBotMessage(playerid,"Не на той район ти зайшов, вали-ка звідси");
			new mas[5] = {5,6,7,8,9},num=0,string[300];
			new skr[124];
			string = ""YELLOW"Завдання\t"YELLOW"Статус\n";
			for(new i;i<5;i++) {
				if(AcceptQuest[playerid][mas[i]]==0) skr = "\t"GREEN"Доступно"W"";
				else if(QuestProgress[playerid][mas[i]] == 100) skr = "\t"NO"Виконано"W"";
				else if(QuestProgress[playerid][mas[i]] == QI[mas[i]][LastProgress] && AcceptQuest[playerid][mas[i]]!=0) skr = "\t"ORANGE"Можно завершити"W"";
				else if(QuestProgress[playerid][mas[i]] >= 0 && AcceptQuest[playerid][mas[i]] != 0) skr = "\t{f6f6d9}В процессі"W"";

				format(string,sizeof(string),"%s%s%s\n",string,QI[mas[i]][QuestName],skr);
				QuestShow[playerid][num] = mas[i];
				num++;
			}
			D(playerid,D_QUEST_GANG,DSTH,""YELLOW"Квести",string,"Вибрати","Відміна");
		}
		else if(TI[playerid][tInHouse]) {
			new houseid = TI[playerid][tSelectHouse];
			new hint = gHouses[houseid][houseHint];
			new Float:x, Float:y, Float:z;
			x = hinterior_info[hint][h_pos_exit][0];
			y = hinterior_info[hint][h_pos_exit][1];
			z = hinterior_info[hint][h_pos_exit][2];
			if(IsPlayerInRangeOfPoint(playerid,2.0,x,y,z)) {
			    if(gHouses[houseid][houseImprove][0]) {
					pc_cmd_exit(playerid);
				}
				else ErrorMessage(playerid, "Покращення 'Автоматичні двері ' не встановлено");
			}
		}
		else if(GetNearestATM(playerid) != -1) ShowATMMenu(playerid);
		else if(PlayerInfo[playerid][pMember] == fFBI) {
			 for(new i = GetVehiclePoolSize()+1; --i != 0;) {
				if(VehicleInfo[i][vTeam] == fFBI) {
					new Float:X,Float:Y,Float:Z;
					GetVehicleShiftPos(i,1,X,Y,Z,3.0);

					if(IsPlayerInRangeOfPoint(playerid,3,X,Y,Z)) {
						new string[256];
						SetPVarInt(playerid,"veh", i);
						string = "Назва\tК-во"W"\n";
						format(string,sizeof(string), "%sЖучок\t{CFFF4D}1\n",string);
						D(playerid,D_TIPSTER,DSTH,"{ffff00}Багажник", string, "Взяти", "Закрити");
						GetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(i,engine,lights,alarm,doors,bonnet,true,objective);
						break;
					}
				}
			}
		}
		for(new i=0;i<MAX_DROP_GUNS;i++) {
			if(drop_gun[i][dg_object] == -1) continue;
			if(drop_gun[i][dg_time] < 1) continue;
			new Float:x, Float:y, Float:z;
			GetDynamicObjectPos(drop_gun[i][dg_object], x,y,z);
			if(!PlayerToPoint(1.5,playerid,x,y,z)) continue;
			DestroyDynamicObject(drop_gun[i][dg_object]);
			drop_gun[i][dg_object]=-1;
			if(drop_gun[i][dg_text] != Text3D:-1) {
				Delete3DTextLabel(drop_gun[i][dg_text]);
				drop_gun[i][dg_text] = Text3D:-1;
			}
			AC_GivePlayerWeapon(playerid ,drop_gun[i][dg_gun],drop_gun[i][dg_ammo]);
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0,0);
			MeAction(playerid,"подобрал(а) зброю");
		}
    }
    if(newkeys & KEY_JUMP) {
	    if(IsPlayerInRangeOfPoint(playerid,50,2072.4404,1710.0946,1113.7882)) ClearAnimations(playerid);
	}
	if(newkeys & KEY_JUMP && newkeys & KEY_SPRINT) {
	    if(!IsPlayerInAnyVehicle(playerid)) {
			new index = GetPlayerAnimationIndex(playerid);
			if(index == 1224 || index == 1247 || index == 1257 || index == 1249 || index == 1196 || index == 1249) {
				if(!TI[playerid][tCuffed] && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
					if(GetPVarInt(playerid,"anti_sbiv_time") < unix && !TI[playerid][tTazer] && !TI[playerid][tCuffedTime] && GetPVarInt(playerid,"Animation") == 0 && !PlayerInfo[playerid][pDonateBh]) {
						new keys,ud,lr;
						GetPlayerKeys(playerid,keys,ud,lr);
						if(ud != 0 || lr != 0) ClearAnimations(playerid);
					}
				}
			}
		}
	}
	/*if(PRESSED( KEY_NO ))
	{
		ShowInventory(playerid);
		for(new i=0; i<16; i++) {
			TextDrawShowForPlayer(playerid, inv_global[i]);
		}

		for(new i; i < 60; i++) {
			PlayerTextDrawShow(playerid, inv_player[playerid][i]);
		}

		SelectTextDraw(playerid, 0xEA363FFF);
  		return 1;
	}*/
 	if(PRESSED(KEY_NO)) {
		if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 131072) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
		else {
			if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) {
				new id = TI[playerid][tDiceID];
				TI[playerid][tDiceMoney] = 0;
				TI[playerid][tDiceClosed] = TI[id][tDiceClosed] = false;
				new string[128];
				format(string,sizeof(string),"Ви отказались играть в кости с %s",player_name[id]);
				SendOk(playerid, string);

				format(string,sizeof(string),"%s отказался играть с вами в кости",player_name[playerid]);
				SendOk(id, string);
				if(TI[id][tDiceIDs] == playerid) TI[playerid][tDiceID] = TI[id][tDiceIDs] = INVALID_PLAYER_ID;
				else TI[playerid][tDiceID] = INVALID_PLAYER_ID;
			}
			else if(GetPVarInt(playerid,"race_offer")) {
				new string[128];
				format(string,sizeof(string),"Ви отказались от участия в уличных гонках с %s",player_name[GetPVarInt(playerid,"race_offer")-1]);
				SendOk(playerid, string);

				format(string,sizeof(string),"%s отказался от участия в уличных гонках",player_name[playerid]);
				SendOk(GetPVarInt(playerid,"race_offer")-1, string);
			}
			else if(GetPVarInt(playerid,"lices")) {
				SendOk(playerid,"Ви отказались от перегляду ліцензій");
				SendOk(GetPVarInt(playerid,"lices")-1,"Гравець отказался от перегляду ліцензій");
				DeletePVar(playerid,"lices");
			}
			else if(GetPVarInt(playerid,"skillss")) {
				SendOk(playerid,"Ви отказались от перегляду навыков владения зброєю");
				SendOk(GetPVarInt(playerid,"skillss")-1,"Гравець отказался от перегляду ваших навыков владения зброєю");
				DeletePVar(playerid,"skillss");
			}
			else if(GetPVarInt(playerid,"wbook")) {
				SendOk(playerid,"Ви отказались от перегляду трудовой книжки");
				SendOk(GetPVarInt(playerid,"wbook")-1,"Гравець отказался от перегляду вашій трудовой книжки");
				DeletePVar(playerid,"wbook");
			}
			else if(GetPVarInt(playerid,"uds")) {
				SendOk(playerid,"Ви отказались от перегляду удостоверения");
				SendOk(GetPVarInt(playerid,"uds")-1,"Гравець отказался от перегляду удостоверения");
				DeletePVar(playerid,"uds");
			}
			else if(GetPVarInt(playerid,"udjur")) {
				SendOk(playerid,"Ви отказались от перегляду удостоверения журналиста");
				SendOk(GetPVarInt(playerid,"udjur")-1,"Гравець отказался от перегляду удостоверения журналиста");
				DeletePVar(playerid,"udjur");
			}
			else if(GetPVarInt(playerid,"pass")) {
				SendOk(playerid,"Ви отказались от перегляду паспорта");
				SendOk(GetPVarInt(playerid,"pass")-1,"Гравець отказался от перегляду паспорта");
				DeletePVar(playerid,"pass");
			}
			else if(GetPVarInt(playerid,"fpass")) {
				SendOk(playerid,"Ви отказались от перегляду паспорта");
				SendOk(GetPVarInt(playerid,"fpass")-1,"Гравець отказался от перегляду паспорта");
				DeletePVar(playerid,"fpass");
			}
			else if(GetPVarInt(playerid,"medcard")) {
				SendOk(playerid,"Ви отказались от перегляду мед.карти");
				SendOk(GetPVarInt(playerid,"medcard")-1,"Гравець отказался от перегляду мед.карти");
				DeletePVar(playerid,"medcard");
			}
			else if(GetPVarInt(playerid,"taxi_id")) {
				SendOk(playerid, "Ви отказались от вступления в таксопарк");
				DeletePVar(playerid,"taxi_id");
			}
			else if(GetPVarInt(playerid,"tk_id")) {
				SendOk(playerid, "Ви отказались от вступления в транспортную компанию");
				DeletePVar(playerid,"tk_id");
			}
			else if(HealOffer[playerid] != INVALID_PLAYER_ID) {
				SendOk(playerid, "Ви отказались от лечения");
				SendOk(HealOffer[playerid], "Гравець отказался от лечения");
				HealOffer[playerid] = INVALID_PLAYER_ID;
			}
			else if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid && GetPVarInt(playerid,"repairtime") < gettime()) {
				new offer = GetPVarInt(playerid,"repairoffer");
				if(GetPVarInt(offer,"repairoffee") == playerid) {
					SetPVarInt(playerid,"repairoffee",-1);
					SetPVarInt(playerid,"repairoffer",-1);
					DeletePVar(playerid,"repairprice");
					DeletePVar(offer,"repairtime");
					DeletePVar(offer,"repairoffee");
					new string[128];
					format(string, sizeof(string), "Ви отказались от починки транспорта гравцем %s", player_name[offer]);
					SendOk(playerid, string);
					format(string, sizeof(string), "%s отказался от починки транспорта", player_name[playerid]);
					SendOk(offer, string);
				}
			}
			else if(GetPVarInt(playerid, "invstat") == playerid) {
				SendOk(playerid,"Ви отказались от вступления в организацию");
				SendOk(GetPVarInt(playerid, "invinv"),"Гравець отказался от вступления в организацию");
				DeletePVar(playerid, "invinv");
				DeletePVar(playerid, "invskin");
				SetPVarInt(playerid, "invstat",-1);
			}
			else if(GetPVarInt(playerid,"kiss")) {
				SendOk(playerid,"Ви отказались от поцелуя");
				SendOk(GetPVarInt(playerid,"kiss")-1,"Гравець отказался от поцелуя");
				DeletePVar(playerid,"kiss");
			}
			if(GetPVarInt(playerid,"hi")) {
				SendOk(playerid,"Ви отказались от рукопожатия");
				SendOk(GetPVarInt(playerid,"hi")-1,"Гравець отказался от рукопожатия");
				DeletePVar(playerid,"hi");
			}
			if(GetPVarInt(playerid,"family_invite")) {
				SendOk(playerid,"Ви отказались от предложения вступить в сім'ю");
				SendOk(GetPVarInt(playerid,"family_invite") - 1,"Гравець отказался от предложения вступити в вашу сім'ю");
				DeletePVar(GetPVarInt(playerid,"family_invite") - 1,"family_invite");
				DeletePVar(playerid,"family_invite");
			}
			else if(GetPVarInt(playerid, "drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid) {
				new offer = GetPVarInt(playerid,"drugoffer");
				if(GetPVarInt(offer,"drugoffee") == playerid) {
					DeletePVar(playerid,"drugoffee");
					DeletePVar(playerid,"drugoffer");
					DeletePVar(playerid,"drugprice");
					DeletePVar(offer,"drugoffee");

					new string[128];
					format(string, sizeof(string), "Ви отказались от покупки наркотиків у гравця %s", player_name[offer]);
					SendOk(playerid, string);
					format(string, sizeof(string), "%s отказался от покупки наркотиків", player_name[playerid]);
					SendOk(offer, string);
				}
			}
			else if(GetPVarInt(playerid, "gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid) {
				new offer = GetPVarInt(playerid,"gunoffer");
				if(GetPVarInt(offer,"gunoffee") == playerid) {
					DeletePVar(playerid,"gunoffee");
					DeletePVar(playerid,"gunoffer");
					DeletePVar(playerid,"gunprice");
					DeletePVar(offer,"gunoffee");

					new string[128];
					format(string, sizeof(string), "Ви отказались от покупки зброї у гравця %s", player_name[offer]);
					SendOk(playerid, string);
					format(string, sizeof(string), "%s отказался от покупки зброї", player_name[playerid]);
					SendOk(offer, string);
				}
			}
			else if(GetPVarInt(playerid, "ZoneOffer")) {
				SendOk(GetPVarInt(playerid,"ZoneOffer")-1, "Гравець отказался от покупки территории");
				SendOk(playerid, "Ви отказались от покупки территории");
				DeletePVar(playerid,"ZoneOffer");
				DeletePVar(playerid,"ZonePrice");
				DeletePVar(playerid,"sellzone");
			}
			else if(GetPVarInt(playerid, "sim_id_sell")) {
				SendOk(GetPVarInt(playerid, "sim_id_sell")-1, "Гравець отказался от покупки SIM-карти");
				SendOk(playerid, "Ви отказались от покупки SIM-карти");
				DeletePVar(playerid, "sim_id_sell");
				DeletePVar(playerid, "sim_summ");
			}
			else if(GetPVarInt(playerid,"bizzProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
				new id_pokupaet = GetPVarInt(id_prodaet,"bizzPokupaet")-1;
				SendOk(playerid,"Ви отказались от покупки бізнеса");
				SendOk(id_prodaet,"Гравець отказался от покупки Вашого бізнеса");
				DeletePVar(playerid,"bizzProdaet");
				DeletePVar(playerid,"bizzCena");
				DeletePVar(id_pokupaet,"bizzPokupaet");
			}
			else if(GetPVarInt(playerid,"hotelProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"hotelProdaet")-1;
				new id_pokupaet = GetPVarInt(id_prodaet,"hotelPokupaet")-1;
				SendOk(playerid,"Ви отказались от покупки отеля");
				SendOk(id_prodaet,"Гравець отказался от покупки Вашого отеля");
				DeletePVar(playerid,"hotelProdaet");
				DeletePVar(playerid,"hotelCena");
				DeletePVar(id_pokupaet,"hotelPokupaet");
			}
			else if(GetPVarInt(playerid,"airProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"airProdaet")-1;
				new id_pokupaet = GetPVarInt(id_prodaet,"airPokupaet")-1;
				SendOk(playerid,"Ви отказались от покупки аэропорта");
				SendOk(id_prodaet,"Гравець отказался от покупки Вашого аэропорта");
				DeletePVar(playerid,"airProdaet");
				DeletePVar(playerid,"airCena");
				DeletePVar(id_pokupaet,"airPokupaet");
			}
			else if(GetPVarInt(playerid,"houseSeller")) {
				new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
				SendOk(playerid,"Ви отказались от покупки будинку");
				SendOk(id_prodaet,"Гравець отказался от покупки Вашого будинку");
				DeletePVar(playerid,"houseSeller");
				DeletePVar(playerid,"housePrices");
				DeletePVar(id_prodaet,"houseBuyer");
			}
			else if(GetPVarInt(playerid,"carProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
				SendOk(playerid,"Ви отказались от предложения на обмен транспортом");
				SendOk(id_prodaet,"Гравець отказался от предложения на обмен транспортом");
				change_carcancel(playerid,id_prodaet);
				return 1;
			}
			else if(TI[playerid][tTazers][2] != -1) {
				new target = TI[playerid][tTazers][2];
				if(IsPlayerStream(2.0, playerid, target)) pc_cmd_cuff(playerid, IntToStr(target));
				TI[target][tTazers][2] = -1;
				TI[playerid][tTazers][2] = -1;
			}
		}
	}
	if(PRESSED(KEY_YES)) {
		if(TI[playerid][tProcess][0] != -1) {
			if(GetPVarInt(playerid,"Klavisha") == 65536) MyButtonSystem(playerid);
			else {
				TI[playerid][tProcess][0] += -(3*(10/TI[playerid][tProcess][1]));
				RandomYareNforJOBS(playerid);
			}
			return true;
		}
		else {
			if(TI[playerid][tDiceID] != INVALID_PLAYER_ID) {
				new id = TI[playerid][tDiceID];
				new ids = TI[id][tDiceIDs];
				new money = TI[playerid][tDiceMoney];
				TI[playerid][tDiceID] = TI[id][tDiceIDs] = INVALID_PLAYER_ID;
				TI[playerid][tDiceMoney] = 0;
				TI[playerid][tDiceClosed] = TI[id][tDiceClosed] = false;
				if(ids != playerid) return ErrorMessage(playerid,"Гравець покинул гру");
				if(!TI[id][tLogin]) return ErrorMessage(playerid,"Гравець который хотел с Вами играть оффлайн");
				else if(PlayerInfo[playerid][pCash] < money) {
					ErrorMessage(playerid,"У Вас недостаточно коштів");
					SendOk(id,"У гравця недостаточно коштів");
					return 1;
				}
				else if(PlayerInfo[id][pCash] < money) {
					SendOk(playerid,"У гравця недостаточно коштів");
					ErrorMessage(id,"У Вас недостаточно коштів");
					return 1;
				}
				else if(!PlayerToPoint(2.5,playerid,2080.7615, 1710.6829, 1113.5668) &&
						!PlayerToPoint(2.5,playerid,2073.6392, 1710.6829, 1113.5668) &&
						!PlayerToPoint(2.5,playerid,2067.1243, 1710.6829, 1113.5668)) {
					ErrorMessage(playerid, "Ви не у стола для ігри 1x1");
					SendOk(id,"Гравець отклонил Ваше предложение");
					return 1;
				}
				new dice = random(6)+1;
				new dice1 = random(6)+1;
				new string[128];
				format(string,sizeof(string), "%s и %s бросили кости. Результат: {CC9900}%i:%i",player_name[id],player_name[playerid],dice,dice1);
				ProxDetector(15.0,playerid, string,0x44b2ffff);
				SetTimerEx("DiceOff",5000, false, "i",playerid);
				SetTimerEx("DiceOff",5000, false, "i",id);
				TI[id][tKubik] = 1;
				TI[playerid][tKubik] = 1;
				TI[playerid][tDiceTime] = TI[id][tDiceTime] = unix+10;
				format(string,sizeof(string), "Випало: %i",dice1);
				SetPlayerChatBubble(playerid,string,COLOR_ORANGE,30.0,10000);
				format(string,sizeof(string), "Випало: %i",dice);
				SetPlayerChatBubble(id,string,TEAM_GROVE_COLOR,30.0,10000);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
				SetPlayerAttachedObject(playerid, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				ApplyAnimation(id,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
				SetPlayerAttachedObject(id, 1, 1851, 1, 0.062400, 0.453750, 0.000000, 0.000000, 94.689310, 0.000000);
				if(dice > dice1) {
					GiveMoney(id,money,"Вииграл в dice");
					GiveMoney(playerid,-money,"проиграл в dice");
					format(string, sizeof(string), "Вітаємо, Ви виграли! виграш становить: "GREEN"$%d",money);
					SendClientMessage(id, CGOLD, string);
					SendOk(playerid, "К сожалению, Вы проиграли");
				}
				if(dice < dice1) {
					GiveMoney(playerid,money,"Вииграл в dice");
					GiveMoney(id,-money,"проиграл в dice");
					format(string, sizeof(string), "Вітаємо, Ви виграли! виграш становить: "GREEN"$%d",money);
					SendClientMessage(playerid, CGOLD, string);
					SendOk(id, "К сожалению, Вы проиграли");
				}
				else if(dice == dice1) {
					SendOk(playerid, "Гра закончилась в ничью");
					SendOk(id, "Гра закончилась в ничью");
				}
			}
			else if(GetPVarInt(playerid,"race_offer")) {
				new i = GetPVarInt(playerid,"race_offer")-1;
				if(PlayerInfo[i][pCash] < TI[playerid][tRaceMoney] || PlayerInfo[playerid][pCash] < TI[playerid][tRaceMoney]) {
					ErrorMessage(playerid,"У гравця/Вас недостаточно коштів");
					DeletePVar(playerid,"race_offer");
					return 1;
				}
				if(!ProxDetectorS(5.0, playerid, i)) {
					ErrorMessage(playerid,"Гравець слишком далеко от Вас");
					DeletePVar(playerid,"race_offer");
					return 1;
				}
				if(GetPlayerState(i) != PLAYER_STATE_DRIVER || GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
					ErrorMessage(playerid,"Гравець/Вы не за рулём Т/С");
					DeletePVar(playerid,"race_offer");
					return 1;
				}
				new rand = random(sizeof(race_checkpoint));
				TI[playerid][tRaceCP] = CreateDynamicCP(race_checkpoint[rand][0],race_checkpoint[rand][1],race_checkpoint[rand][2], 2.0,0,0,playerid);
				EnableGPSForPlayer(playerid,race_checkpoint[rand][0],race_checkpoint[rand][1],race_checkpoint[rand][2]);
				TI[i][tRaceCP] = CreateDynamicCP(race_checkpoint[rand][0],race_checkpoint[rand][1],race_checkpoint[rand][2], 2.0,0,0,i);
				EnableGPSForPlayer(i,race_checkpoint[rand][0],race_checkpoint[rand][1],race_checkpoint[rand][2]);
				SendClientMessage(playerid, COLOR_YELLOW, "Увага! Место финиша уличных гонок зазначено у вашому GPS");
				SendClientMessage(i, COLOR_YELLOW, "Увага! Место финиша уличных гонок зазначено у вашому GPS");
				TI[playerid][tRaceID] = i;
				TI[i][tRaceID] = playerid;
				GiveMoney(playerid,-TI[playerid][tRaceMoney],"взнос уличные гонки");
				GiveMoney(i,-TI[playerid][tRaceMoney],"взнос уличные гонки");
				DeletePVar(playerid,"race_offer");
				return 1;
			}
			else if(GetPVarInt(playerid,"lices")) {
				new acter = GetPVarInt(playerid,"lices")-1;
				DeletePVar(playerid,"lices");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowLic(acter,playerid);
						new string[128];
						format(string,sizeof(string),"показал(а) свои ліцензії %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"skillss")) {
				new acter = GetPVarInt(playerid,"skillss")-1;
				DeletePVar(playerid,"skillss");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowSkill(acter,playerid);
						new string[128];
						format(string,sizeof(string),"показал(а) навыки владения зброєю %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"wbook")) {
				new acter = GetPVarInt(playerid,"wbook")-1;
				DeletePVar(playerid,"wbook");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowWBook(acter,playerid);
						new string[128];
						format(string,sizeof(string),"показал(а) трудовую книжку %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"uds")) {
				new acter = GetPVarInt(playerid,"uds")-1;
				DeletePVar(playerid,"uds");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowUd(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) удостоверение и показал(а) его %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"udjur")) {
				new acter = GetPVarInt(playerid,"udjur")-1;
				DeletePVar(playerid,"udjur");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowUdJur(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) удостоверение журналиста и показал(а) его %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"pass")) {
				new acter = GetPVarInt(playerid,"pass")-1;
				DeletePVar(playerid,"pass");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowPass(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) паспорт и показал(а) его %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"fpass")) {
				new acter = GetPVarInt(playerid,"fpass")-1;
				DeletePVar(playerid,"fpass");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowFPass(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) паспорт и показал его %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"medcard")) {
				new acter = GetPVarInt(playerid,"medcard")-1;
				DeletePVar(playerid,"medcard");
				if(acter >= 0) {
					if(IsPlayerConnected(playerid) && IsPlayerConnected(acter)) {
						ShowMedcard(acter,playerid);
						new string[128];
						format(string,sizeof(string),"достал(а) мед.карту и показал ее %s",player_name[playerid]);
						MeAction(acter,string);
					}
				}
			}
			else if(GetPVarInt(playerid,"taxi_id")) {
				new bizz = GetPVarInt(playerid,"taxi_id");
				DeletePVar(playerid,"taxi_id");
				if(PlayerInfo[playerid][bizz_work] == 2 || PlayerInfo[playerid][bizz_work] == 3 || PlayerInfo[playerid][bizz_work] == 4) return ErrorMessage(playerid, "Ви уже работаете в таксопарке");
				if(PlayerInfo[playerid][bizz_work] == 5 || PlayerInfo[playerid][bizz_work] == 6 || PlayerInfo[playerid][bizz_work] == 7) return ErrorMessage(playerid, "Ви работаете в транспортной компании");
				if(info_funcmembers(bizz) >= 50) return ErrorMessage(playerid,"В таксопарке нет свободных мест");
				PlayerInfo[playerid][bizz_work] = bizz;
				UpdatePlayerData(playerid,"bizz_work",PlayerInfo[playerid][bizz_work]);
				PlayerInfo[playerid][bizz_status] = 1;
				UpdatePlayerData(playerid,"bizz_status",1);
				PlayerInfo[playerid][bizz_cash] = 0;
				UpdatePlayerData(playerid,"bizz_cash",0);
				new string[100];
				format(string,sizeof(string),"[TAXI] %s вступил в таксопарк",player_name[playerid]);
				BizzMSG(bizz,COLOR_YELLOW,string);
			}
			else if(GetPVarInt(playerid,"tk_id")) {
				new bizz = GetPVarInt(playerid,"tk_id");
				DeletePVar(playerid,"tk_id");
				if(PlayerInfo[playerid][bizz_work] == 2 || PlayerInfo[playerid][bizz_work] == 3 || PlayerInfo[playerid][bizz_work] == 4) return ErrorMessage(playerid, "Ви работаете в таксопарке");
				if(PlayerInfo[playerid][bizz_work] == 5 || PlayerInfo[playerid][bizz_work] == 6 || PlayerInfo[playerid][bizz_work] == 7) return ErrorMessage(playerid, "Ви уже работаете в транспортной компании");
				if(info_funcmembers(bizz) >= 50) return ErrorMessage(playerid,"В транспортной компании нет свободных мест");
				PlayerInfo[playerid][bizz_work] = bizz;
				UpdatePlayerData(playerid,"bizz_work",PlayerInfo[playerid][bizz_work]);
				PlayerInfo[playerid][bizz_status] = 1;
				UpdatePlayerData(playerid,"bizz_status",1);
				PlayerInfo[playerid][bizz_cash] = 0;
				UpdatePlayerData(playerid,"bizz_cash",0);
				PlayerInfo[playerid][bizz_lcash] = 0;
				UpdatePlayerData(playerid,"bizz_lcash",0);

				PlayerInfo[playerid][pSettings][3] = 1;
				save_settings(playerid);

				new string[100];
				format(string,sizeof(string),"[TRUCK] %s вступил в транспортную компанию",player_name[playerid]);
				BizzMSG(bizz,COLOR_YELLOW,string);
			}
			else if(GetPVarInt(playerid,"selectpoint") == 2) {
				new driverid = GetPVarInt(playerid,"taxidriver");
				if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER || VehicleInfo[GetPlayerVehicleID(playerid)][vBizz] != PlayerInfo[driverid][bizz_work]) {
					SetPVarInt(playerid,"selectpoint",0);
					SetPVarInt(playerid,"taxidriver",0);
					RemovePlayerMapIcon(playerid,iconTaxi);
				}
				new Float:x, Float:y;
				x = GetPVarFloat(playerid,"selectpointX");
				y = GetPVarFloat(playerid,"selectpointY");
				SetPlayerMapIcon(driverid,iconTaxi,x,y,0.0,0,COLOR_YELLOW,1);
				SetPVarFloat(playerid,"selectpointX",x);
				SetPVarFloat(playerid,"selectpointY",y);
				SetPVarInt(playerid,"selectpoint",0);
				SetPVarInt(driverid,"selectpoint",0);
				SendOk(playerid,"Данные о месте назначения отправлены таксісту");
				SendUse(driverid,"Пассажир установил "YELLOW"метку {f6f6d9}на карте. Щоб убрать метку введіть: "W"/untaxi");
			}
			else if(GetPVarInt(playerid,"family_invite")) {
				new fam = GetPVarInt(playerid,"family_invite")-1;
				DeletePVar(playerid,"family_invite");
				if(PlayerInfo[fam][pFamily]) {
					new string[128];
					PlayerInfo[playerid][pFamily] = PlayerInfo[fam][pFamily];
					UpdatePlayerData(playerid,"family",PlayerInfo[playerid][pFamily]);
					PlayerInfo[playerid][pFamRank] = 1;
					UpdatePlayerData(playerid,"pFamRank",1);

					format(string,sizeof(string),"[FAMILY] "W"%s{%s} вступил в сім'ю",player_name[playerid],FamilyColor[gFamily[PlayerInfo[playerid][pFamily]-1][famColor]]);
					FamMSG(PlayerInfo[playerid][pFamily],string);
				}
			}
			else if(GetPVarInt(playerid,"fight_offer")) {
				new i = GetPVarInt(playerid,"fight_offer")-1;
				if(PlayerInfo[i][pCash] < GetPVarInt(playerid,"fight_price") || PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"fight_price")) {
					ErrorMessage(playerid,"У гравця/Вас недостаточно коштів");
					DeletePVar(playerid,"fight_offer");
					DeletePVar(playerid,"fight_price");
					return 1;
				}
				if(!ProxDetectorS(5.0, playerid, i)) {
					ErrorMessage(playerid,"Гравець слишком далеко от Вас");
					DeletePVar(playerid,"fight_offer");
					DeletePVar(playerid,"fight_price");
					return 1;
				}
				if(!TI[playerid][tGym] || !TI[i][tGym]) {
					ErrorMessage(playerid,"Ви/Гравець не в спортзале");
					DeletePVar(playerid,"fight_offer");
					DeletePVar(playerid,"fight_price");
					return 1;
				}
				if(TOTALSTYLELIST > 4) {
					ErrorMessage(playerid,"Очередь заполнена");
					DeletePVar(playerid,"fight_offer");
					DeletePVar(playerid,"fight_price");
					return 1;
				}
				RingInfo[TOTALSTYLELIST][rgPlayer][0] = playerid;
				RingInfo[TOTALSTYLELIST][rgPlayer][1] = i;
				RingInfo[TOTALSTYLELIST][rgState] = 1;
				RingInfo[TOTALSTYLELIST][rgTime] = 60;
				RingInfo[TOTALSTYLELIST][rgPrice] = GetPVarInt(playerid,"fight_price");
				TOTALSTYLELIST++;
				new string[156];
				format(string,sizeof(string),"{f6f6d9}Ви записались на бій. Противник "W"%s.{f6f6d9} Ставка: "ORANGE"$%i",player_name[i],GetPVarInt(playerid,"fight_price"));
				SendOk(playerid,string);

				SendClientMessage(playerid,CGOLD,"При появі таймера на екрані, займіть місце на рингу");
			
				format(string,sizeof(string),""W"%s{f6f6d9} прийняв вашу пропозицію . Ставка: "ORANGE"$%i",player_name[playerid], GetPVarInt(playerid,"fight_price"));
				SendOk(i,string);
				SendClientMessage(i,CGOLD,"При появлении таймера на экране, займите место на ринге");
				DeletePVar(playerid,"fight_offer");
				DeletePVar(playerid,"fight_price");
				return 1;
			}
			else if(GetPVarInt(playerid, "invstat") == playerid) {
				new pltot = GetPVarInt(playerid, "invinv");
				new skinid = GetPVarInt(playerid, "invskin");
				DeletePVar(playerid, "invinv");
				DeletePVar(playerid, "invskin");
				SetPVarInt(playerid, "invstat",-1);
				if(!IsPlayerConnected(pltot)) return ErrorMessage(playerid,"Гравець запросивший Вас в організаціїю оффлайн");
				new fractionid = PlayerInfo[pltot][pMember];
				PlayerInfo[playerid][pMember] = fractionid;
				PlayerInfo[playerid][pRank] = 1;
				PlayerInfo[playerid][pFracSkin] = skinid;
				PlayerInfo[playerid][pJob] = 0;
				start_work[playerid] = 1;
				PlayerInfo[playerid][pSpawn] = 2;
				SaveAccount(playerid);
				PlayerInfo[playerid][pfWarn] = 0;
				UpdatePlayerData(playerid,"fwarn",0);
				PlayerInfo[playerid][pFMute] = 0;
				UpdatePlayerData(playerid,"pFMute",PlayerInfo[playerid][pFMute]);
				SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
				new string[128];
				format(string,sizeof(string),""YELLOW"%s{f6f6d9} был принят в Вашу организацию",player_name[playerid]);
				SendUse(pltot,string);
				format(string,sizeof(string),"Ви были приняты во фракцию "W"%s",FI[PlayerInfo[playerid][pMember]][fName]);
				SendOk(playerid,string);
				A_SetPlayerSkin(playerid, PlayerInfo[playerid][pFracSkin]);
				add_datefrac(playerid);

				FracLog(LOGS_INVITE,player_name[pltot],player_name[playerid],"invite");
			}
			else if(HealOffer[playerid] != INVALID_PLAYER_ID) {
				if(!IsPlayerConnected(HealOffer[playerid])) return ErrorMessage(playerid,"Гравець предложивший Вам лікування оффлайн"),HealOffer[playerid] = INVALID_PLAYER_ID;
				if(PlayerInfo[playerid][pCash] < HealPrice[playerid]) {
					ErrorMessage(playerid, "У вас немає столько грошей");
					static const f_str[] = "У %s недостаточно денежных коштів для лечения";
					new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
					format(string,sizeof(string),f_str,player_name[playerid]);
					SendOk(HealOffer[playerid],string);
					HealOffer[playerid] = INVALID_PLAYER_ID;
					return 1;
				}
				SetPlayerHealth(playerid, 100.0);

				static const f_str_1[] = "Доктор "YELLOW"%s{f6f6d9} вылечил вас за "ORANGE"$%d";
				new string_1[sizeof(f_str_1) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

				format(string_1,sizeof(string_1),f_str_1,player_name[HealOffer[playerid]],HealPrice[playerid]);
				SendUse(playerid,string_1);

				GiveMoney(playerid, -HealPrice[playerid], "оплата за лікування медику");
				
				new price = floatround(HealPrice[playerid]*0.2);
				FI[fWHITEHOUSE][fBank] += floatround(HealPrice[playerid] - price);
				UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

				static const f_str_2[] = "Ви вылечили "YELLOW"%s{f6f6d9} за "ORANGE"$%d";
				new string_2[sizeof(f_str_2) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];

				format(string_2,sizeof(string_2),f_str_2,player_name[playerid],price);
				SendUse(HealOffer[playerid],string_2);
				GiveMoney(HealOffer[playerid], price,"оплата за лікування гравця");

				PlayerInfo[HealOffer[playerid]][pMedHeal] ++;

				HealOffer[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			else if(GetPVarInt(playerid,"gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid) {
				new offer = GetPVarInt(playerid,"gunoffer");
				new price = GetPVarInt(playerid,"gunprice");
				new needammo = GetPVarInt(playerid,"gunammo");
				new weaponid = GetPVarInt(playerid,"gunid");
				if(GetPVarInt(offer,"gunoffee") == playerid) {
					DeletePVar(playerid,"gunoffee");
					DeletePVar(playerid,"gunoffer");
					DeletePVar(playerid,"gunammo");
					DeletePVar(playerid,"gunprice");
					DeletePVar(playerid,"gunid");
					DeletePVar(offer,"gunoffee");
					new slot = GetWeaponSlot(weaponid);
					new weapon,ammo;
					GetPlayerWeaponData(offer,slot,weapon,ammo);
					if(weapon != weaponid || ammo < needammo) return ErrorMessage(playerid,"У продавца закончилось зброю");
					new remain = ammo - needammo;
					if(remain > ammo) return 1;
					if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");
					AC_GivePlayerWeapon(playerid,weaponid,needammo);
					//AC_SetPlayerAmmo(offer,weaponid,remain);
					AC_GivePlayerWeapon(offer,weaponid,-needammo);
					SetPlayerArmedWeapon(offer,0);

					GiveMoney(offer, price, "продажа зброї");
					GiveMoney(playerid, -price, "покупка зброї");

					if(QuestProgress[offer][7] < 10 && AcceptQuest[offer][7] != 0) QuestProgress[offer][7] ++,save_quest(offer,7);
					if(QuestProgress[offer][7] == 10 && AcceptQuest[offer][7] != 0) {
						D(offer,DIALOG_NONE,DSM, ""YELLOW"Квест",""W"Ви успішно продали 10ед зброї. Це завдання можна закінчити та забрати за нього нагороду","Закрити","");
						NextStapQI(offer,7);
					}
					new mes[128];
					format(mes,sizeof(mes),"продал(а) зброю %s",player_name[playerid]);
					MeAction(offer,mes);
				}
			}
			else if(GetPVarInt(playerid,"drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid) {
				new offer = GetPVarInt(playerid,"drugoffer");
				new price = GetPVarInt(playerid,"drugprice");
				new value = GetPVarInt(playerid,"drugvalue");
				if(GetPVarInt(offer,"drugoffee") == playerid) {
					DeletePVar(playerid,"drugoffee");
					DeletePVar(playerid,"drugoffer");
					DeletePVar(playerid,"drugvalue");
					DeletePVar(playerid,"drugprice");
					DeletePVar(offer,"drugoffee");
					if(PlayerInfo[playerid][pDrugs]+value > vip_status[PlayerInfo[playerid][pVips]][vip_drugs]) return ErrorMessage(playerid, "Ви не можете хранить так много наркотиків");
					if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid, "У Вас недостаточно коштів");

					GiveMoney(offer, price, "продажа нарко");
					GiveMoney(playerid, -price, "покупка нарко");
					PlayerInfo[playerid][pDrugs] += value;
					PlayerInfo[offer][pDrugs] -= value;
					UpdatePlayerData(playerid,"pDrugs",PlayerInfo[playerid][pDrugs]);
					UpdatePlayerData(offer,"pDrugs",PlayerInfo[offer][pDrugs]);

					new string[137];
					format(string,sizeof(string),""YELLOW"%s{f6f6d9} передал Вам "W"%d{f6f6d9} грамм наркотиків за "ORANGE"$%d",player_name[offer],value,price);
					SendUse(playerid,string);
					format(string,sizeof(string),"Ви передали "YELLOW"%d{f6f6d9} грамм наркотиків гравцю "W"%s{f6f6d9} за "ORANGE"$%d",value,player_name[playerid],price);
					SendUse(offer,string);
					ApplyAnimation(playerid,"DEALER","shop_pay",4.1, 0, 1, 1, 0, 0, 1);
					ApplyAnimation(offer,"DEALER","shop_pay",4.1, 0, 1, 1, 0, 0, 1);
				}
			}
			else if(GetPVarInt(playerid,"ZoneOffer")) {
				new price = GetPVarInt(playerid,"ZonePrice");
				new offter = GetPVarInt(playerid,"ZoneOffer")-1;
				new sell = GetPVarInt(playerid,"sellzone");
				DeletePVar(playerid,"ZoneOffer");
				DeletePVar(playerid,"ZonePrice");
				DeletePVar(playerid,"sellzone");
				if(!IsPlayerConnected(offter)) return ErrorMessage(playerid,"Гравець предложивший Вам Купити территорию оффлайн");
				if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid, "У Вас не достаточно грошей");
				IDGZ[playerid] = GetIDGZ(playerid);
				if(IDGZ[playerid] != -1) {
					new i = IDGZ[playerid];
					if(GZInfo[i][gFrakVlad] != sell) return ErrorMessage(playerid, "Вам не предлагали Купити эту территорию");
					VladGzone[GZInfo[i][gFrakVlad]]--;
					VladGzone[PlayerInfo[playerid][pMember]]++;
					GZInfo[i][gFrakVlad] = PlayerInfo[playerid][pMember];
					GangZoneStopFlashForAll(GZInfo[i][gID]);
					GangZoneHideForAll(GZInfo[i][gID]);
					GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
					SaveGZ(i);
				}

				new string[137];
				format(string,sizeof(string),""YELLOW"%s{f6f6d9} купил у Вас территорию за "ORANGE"$%d",player_name[playerid],price);
				SendUse(offter,string);
				format(string,sizeof(string),"Ви купили территорию у "YELLOW"%s{f6f6d9} за "ORANGE"$%d",player_name[offter], price);
				SendUse(playerid,string);
				GiveMoney(offter,price, "продажа территории");
				GiveMoney(playerid, -price, "покупка территории");
			}
			else if(GetPVarInt(playerid,"hi")) {
				new hi = GetPVarInt(playerid,"hi")-1;
				if(!IsPlayerConnected(hi)) return ErrorMessage(playerid,"Гравець который хотел пожать Вам руку оффлайн");
				new Float:angle,string[128];
				GetPlayerFacingAngle(hi, angle);
				SetPlayerFacingAngle(playerid, angle + 180);
				ApplyAnimation(hi,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
				ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0,1);
				format(string, sizeof(string), "пожал(а) руку %s'у", player_name[playerid]);
				MeAction(hi,string, 5.0);
				DeletePVar(playerid,"hi");
				if(PlayerInfo[hi][pDisease][0] && !PlayerInfo[playerid][pDDisease]) {
					new rand = random(7);
					if(rand > 2) return 1;
					PlayerInfo[playerid][pDisease][0] = 1;
					UpdatePlayerData(playerid,"pDisease_0",1);
					SendOk(playerid,"Гравець, которому Вы пожали руку был болен");
					SendOk(playerid,"Радимо вам звернутися до лікарів любого із пунктів МЧС");
					SendOk(playerid,"(( Увага! Состояние вашій жизни (HP) будет падать значительно быстрее ))");
				}
			}
			else if(GetPVarInt(playerid,"kiss")) {
				new kiss = GetPVarInt(playerid,"kiss")-1;
				if(!IsPlayerConnected(kiss)) return ErrorMessage(playerid,"Гравець который хотел поцеловать Вас оффлайн");
				if(!IsPlayerStream(4.0, playerid, kiss)) return ErrorMessage(playerid, "Гравець далеко от Вас");
				else {
					SetPosInFrontOfPlayer(kiss,playerid,1);
					new Float:a;
					GetPlayerFacingAngle(kiss,a);
					SetPlayerFacingAngle(playerid,180 + a);
					ApplyAnimation(kiss,"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
					ApplyAnimation(playerid,"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0,0);
					DeletePVar(playerid,"kiss");
					SetPVarInt(kiss, "pc_cmd_kiss", unix+15);
					SetPVarInt(playerid, "pc_cmd_kiss", unix+15);
					if(PlayerInfo[kiss][pDisease][0] && !PlayerInfo[playerid][pDDisease]) {
						new rand = random(7);
						if(rand > 2) return 1;
						PlayerInfo[playerid][pDisease][0] = 1;
						UpdatePlayerData(playerid,"pDisease_0",1);
						SendOk(playerid,"Гравець, с которым Вы поцеловались был болен");
						SendOk(playerid,"Радимо вам звернутися до лікарів любого із пунктів МЧС");
						SendOk(playerid,"(( Увага! Состояние вашій жизни (HP) будет падать значительно быстрее ))");
					}
				}
			}
			else if(GetPVarInt(playerid,"repairoffee") == playerid && GetPVarInt(playerid,"repairoffer") != playerid && GetPVarInt(playerid,"repairtime") < gettime()) {
				new offer = GetPVarInt(playerid,"repairoffer");
				new price = GetPVarInt(playerid,"repairprice");
				if(GetPVarInt(offer,"repairoffee") == playerid) {
					SetPVarInt(playerid,"repairoffee",-1);
					SetPVarInt(playerid,"repairoffer",-1);
					DeletePVar(playerid,"repairprice");
					DeletePVar(offer,"repairtime");
					DeletePVar(offer,"repairoffee");
					new vehicleid = GetPlayerVehicleID(playerid);
					if(!vehicleid) return ErrorMessage(playerid,"Ви повинні бути в автомобиле");
					if(GetPlayerMoneyEx(playerid) < price) return ErrorMessage(playerid,"У Вас недостаточно грошей");

					GiveMoney(offer, price, "механик отремонтировал");
					GiveMoney(playerid, -price, "отремонтировался у механика");
					SetVehicleHealth(vehicleid,1000.0);
					RepairVehicle(vehicleid);
					new string[137];
					format(string,sizeof(string),"Механик "YELLOW"%s{f6f6d9} отремонтировал Вам транспорт за "ORANGE"$%d",player_name[offer],price);
					SendUse(playerid,string);
					format(string,sizeof(string),"Ви отремонтировали транспорт гравцю "YELLOW"%s{f6f6d9} за "ORANGE"$%d",player_name[playerid],price);
					SendUse(offer,string);
				}
			}
			else if(GetPVarInt(playerid, "sim_id_sell")) {
				new sell_sim_id = GetPVarInt(playerid, "sim_id_sell")-1;
				new sell_sim_sum = GetPVarInt(playerid, "sim_summ");
				new string[120];
				format(string,sizeof(string),"Ви дійсно хочете приобрели SIM-карту у "YELLOW"%s {f6f6d9}за "ORANGE"$%i?", player_name[sell_sim_id],sell_sim_sum);
				D(playerid, D_SELL_SIM, DSM, ""YELLOW"Покупка SIM-карти", string, "Так", "Ні");
			}
			if(GetPVarInt(playerid,"bizzProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"bizzProdaet")-1;
				new id = PlayerInfo[id_prodaet][pBusiness]-1;
				new status[20];
				new atext[24];
				switch(gBusiness[id][bizzMafia]) {
					case fRM: atext = "Українська мафія";
					case fLCN: atext = "Італьянська мафія";
					case fYAKUZA: atext = "Японська мафія";
					default: atext = "---";
				}
				new type = gBusiness[id][bizzType] - 1;
				if(gBusiness[id][bizzStatus]) strcat(status,"{7FB151}Работает");
				else strcat(status,"{FF4242}Не работает");

				new day;
				day = (gBusiness[id][bizzDay]-gettime())/86400;

				static const f_str[] = ""W"Назва: "O"%s\n\n\
"W"Тип: "O"%s\n\
"W"Гос.вартість: "GREEN"$%d\n\
"W"Ціна товара: "GREEN"$%d\n\n\
"W"Продуктів: "O"%d ед.\n\
"W"Продуктів заказано: "O"%d"W" ед. ["GREEN"$%d"W" за ед]\n\n\
"W"Каса: "GREEN"$%d"W"\n\
"W"Зароблено за сутки: "GREEN"$%d"W"\n\n\
"W"Відвідувачів: "O"%d\n\
"W"Аренда бізнеса: "O"%iд\n\
"W"Дах: "O"%s\n\
"W"Стан: "O"%s\n\n\
"W"Ви дійсно хочете Купити цей бізнес за "GREEN"$%d?";
				new string[700];
				format(string,sizeof(string),f_str,gBusiness[id][bizzName],gBusinessTypeName[type],
					gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],gBusiness[id][bizzProduct],gBusiness[id][bizzProdOrder],gBusiness[id][bizzProdOrderPrice],gBusiness[id][bizzBank],gBusiness[id][bizzBankDay]
					,gBusiness[id][bizzVisitors],day,atext,status,GetPVarInt(playerid,"bizzCena"));

				D(playerid,D_BIZZ_BUY_2,DSM, ""YELLOW"Покупка бізнеса",string,"Купити","Відміна");
			}
			if(GetPVarInt(playerid,"hotelProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"hotelProdaet")-1;
				new id = PlayerInfo[id_prodaet][pHotel]-1;

				new day;
				day = (gHotels[id][hotelDay]-gettime())/86400;

				static const f_str[] = ""W"Назва: "O"%s\n\n\
"W"Гос.вартість: "GREEN"$%d\n\
"W"Каса: "GREEN"$%d"W"\n\
"W"Зароблено за день: "GREEN"$%d"W"\n\
"W"Відвідувачів: "O"%d\n\
"W"Аренда готеля: "O"%iд\n\n\
"W"Ви дійсно хочете купити цей готель за "GREEN"$%d";
				new string[700];
				format(string,sizeof(string),f_str,gHotels[id][hotelName],gHotels[id][hotelPrice],gHotels[id][hotelBank],gHotels[id][hotelBankDay],gHotels[id][hotelVisitors],
					day,GetPVarInt(playerid,"hotelCena"));

				D(playerid,D_HOTEL_BUY_2,DSM, ""YELLOW"Покупка отеля",string,"Купити","Відміна");
			}
			if(GetPVarInt(playerid,"airProdaet")) {
				new id_prodaet = GetPVarInt(playerid,"airProdaet")-1;
				new id = PlayerInfo[id_prodaet][pAirport]-1;

				new day;
				day = (gAirs[id][airDay]-gettime())/86400;

				static const f_str[] = ""W"Назва: "O"%s\n\n\
"W"Гос.вартість: "GREEN"$%d\n\
"W"Касса: "GREEN"$%d"W"\n\
"W"Аренда аэропорта: "O"%iд\n\n\
"W"Ви дійсно хочете Купити данный аэропорт за "GREEN"$%d";
				new string[500];
				format(string,sizeof(string),f_str,gAirs[id][airName],gAirs[id][airPrice],gAirs[id][airBank],
					day,GetPVarInt(playerid,"airCena"));

				D(playerid,D_AIRPORT_BUY_2,DSM, ""YELLOW"Покупка аэропорта",string,"Купити","Відміна");
			}
			if(GetPVarInt(playerid,"houseSeller")) {
				new id_prodaet = GetPVarInt(playerid,"houseSeller")-1;
				new id = PlayerInfo[id_prodaet][pHouse]-1;

				new classname[20],status[12];
				switch(gHouses[id][houseClass]) {
					case 0:classname = "Економ";
					case 1:classname = "Середній";
					case 2:classname = "Елітний";
					case 3:classname = "Особняк";
					default: classname = "Не відомо";
				}					
				new cnt;
				for(new i;i<3;i++) {
					if(gHouses[id][houseHabitID][i]) cnt++;
				}					
				if(gHouses[id][houseClose]) strcat(status,"Закрыт");
				else strcat(status,"Открыт");
				new improve[96];
				if(gHouses[id][houseImprove][0]) strcat(improve,"Автоматичні двери\n");
				if(gHouses[id][houseImprove][1]) strcat(improve,"Зниження субсидій\n");
				if(gHouses[id][houseImprove][2]) strcat(improve,"Гараж\n");
				if(gHouses[id][houseImprove][0] == 0 && gHouses[id][houseImprove][1] == 0 && gHouses[id][houseImprove][2] == 0) strcat(improve,"Відсутні");

				new day;
				day = (gHouses[id][houseDay]-gettime())/86400;
				static const f_str[] = ""W"Номер бкдинку: \t\t"O"%d\n\
"W"Клас: \t\t\t"O"%s\n\
"W"Кількість жильців: \t"O"%d/%d\n\
"W"Аренда будинку: \t\t"O"%iд\n\
"W"Статус: \t\t"O"%s\n\
"W"Гос. Ціна: \t\t"O"%d\n\n\
"YELLOW"Покращення:\n\
"GREEN"%s\n\n\
"W"Ви дійсно хочете купити цей будинок за "GREEN"$%d"W"?";
				new string[512];
				format(string,sizeof(string),f_str,id+1,classname,cnt,gHouses[id][houseClass],day,status,gHouses[id][housePrice],improve,GetPVarInt(playerid,"housePrices"));
				D(playerid,D_HOUSE_BUY_2,DSM, ""YELLOW"Покупка будинку",string,"Купити","Відміна");
			}
			if(GetPVarInt(playerid,"carProdaet") && GetPVarInt(playerid,"sellcar_type")) {
				new id_prodaet = GetPVarInt(playerid,"carProdaet")-1;
				new car_cena = GetPVarInt(playerid,"carCena");
				new car1 = GetPVarInt(id_prodaet,"numbercar1")-1;
				new car2 = GetPVarInt(id_prodaet,"numbercar2")-1;

				new improve[256];
				if(gPlayerCars[id_prodaet][carVehcom_1][car1]) strcat(improve,"\t\t\t[Спойлер]\n");
				if(gPlayerCars[id_prodaet][carVehcom_2][car1]) strcat(improve,"\t\t\t[Капот]\n");
				if(gPlayerCars[id_prodaet][carVehcom_3][car1]) strcat(improve,"\t\t\t[Воздухозаборник]\n");
				if(gPlayerCars[id_prodaet][carVehcom_4][car1]) strcat(improve,"\t\t\t[Боковая юбка]\n");
				if(gPlayerCars[id_prodaet][carVehcom_5][car1]) strcat(improve,"\t\t\t[Фары]\n");
				if(gPlayerCars[id_prodaet][carVehcom_6][car1]) strcat(improve,"\t\t\t[Нитро]\n");
				if(gPlayerCars[id_prodaet][carVehcom_7][car1]) strcat(improve,"\t\t\t[Выхлопная труба]\n");
				if(gPlayerCars[id_prodaet][carVehcom_8][car1]) strcat(improve,"\t\t\t[Диски]\n");
				if(gPlayerCars[id_prodaet][carVehcom_9][car1]) strcat(improve,"\t\t\t[Стерео]\n");
				if(gPlayerCars[id_prodaet][carVehcom_10][car1]) strcat(improve,"\t\t\t[Гидравлика]\n");
				if(gPlayerCars[id_prodaet][carVehcom_11][car1]) strcat(improve,"\t\t\t[Передний бампер]\n");
				if(gPlayerCars[id_prodaet][carVehcom_12][car1]) strcat(improve,"\t\t\t[Задний бампер]\n");

				new improve2[256];
				if(gPlayerCars[playerid][carVehcom_1][car2]) strcat(improve2,"\t\t\t[Спойлер]\n");
				if(gPlayerCars[playerid][carVehcom_2][car2]) strcat(improve2,"\t\t\t[Капот]\n");
				if(gPlayerCars[playerid][carVehcom_3][car2]) strcat(improve2,"\t\t\t[Воздухозаборник]\n");
				if(gPlayerCars[playerid][carVehcom_4][car2]) strcat(improve2,"\t\t\t[Боковая юбка]\n");
				if(gPlayerCars[playerid][carVehcom_5][car2]) strcat(improve2,"\t\t\t[Фары]\n");
				if(gPlayerCars[playerid][carVehcom_6][car2]) strcat(improve2,"\t\t\t[Нитро]\n");
				if(gPlayerCars[playerid][carVehcom_7][car2]) strcat(improve2,"\t\t\t[Выхлопная труба]\n");
				if(gPlayerCars[playerid][carVehcom_8][car2]) strcat(improve2,"\t\t\t[Диски]\n");
				if(gPlayerCars[playerid][carVehcom_9][car2]) strcat(improve2,"\t\t\t[Стерео]\n");
				if(gPlayerCars[playerid][carVehcom_10][car2]) strcat(improve2,"\t\t\t[Гидравлика]\n");
				if(gPlayerCars[playerid][carVehcom_11][car2]) strcat(improve2,"\t\t\t[Передний бампер]\n");
				if(gPlayerCars[playerid][carVehcom_12][car2]) strcat(improve2,"\t\t\t[Задний бампер]\n");

				new model1 = gPlayerCars[playerid][carModel][car2]-400;
				new model2 = gPlayerCars[id_prodaet][carModel][car1]-400;
				new classname[12];
				new classname2[12];
				GetCarClassName(gTransport[model1][trClass],classname);
				GetCarClassName(gTransport[model2][trClass],classname2);
				static const f_str[] = "\t\t\t"ORANGE"==== Інформація ====\n\n\
"YELLOW"\t\t\tВаше авто:\n\n\
"W"Марка авто: \t\t"YELLOW"%s\n\
"W"Клас: \t\t\t"YELLOW"%s\n\
"W"Пробег: \t\t"YELLOW"%.0fкм\n\
"W"Бензобак: \t\t"YELLOW"%dл\n\
"W"Расход: \t\t"YELLOW"%dл/100км\n\
"W"Тюнинг:\n\
"GREEN"%s\n\n\
"YELLOW"\t\t\tОбмен на авто:\n\n\
"W"Марка авто: \t\t"YELLOW"%s\n\
"W"Клас: \t\t\t"YELLOW"%s\n\
"W"Пробег: \t\t"YELLOW"%.0fкм\n\
"W"Бензобак: \t\t"YELLOW"%dл\n\
"W"Расход: \t\t"YELLOW"%dл/100км\n\
"W"Тюнинг:\n\
"GREEN"%s\n\n\
"NO"Ви дійсно хочете совершить обмен с вашій доплатой:"ORANGE" $%d?";
				new string[900];
				format(string,sizeof(string),f_str,gTransport[model1][trName],classname,gPlayerCars[id_prodaet][carDrived][car1],gTransport[model1][trTank],gTransport[model1][trConsumption],improve2,
					gTransport[model2][trName],classname2,gPlayerCars[id_prodaet][carDrived][car2],gTransport[model2][trTank],gTransport[model2][trConsumption],improve,car_cena);
				D(playerid,D_CAR_BUY,DSM, ""YELLOW"Обмен авто",string,"Так","Відміна");
			}
		}
	}
	if(PRESSED(KEY_SECONDARY_ATTACK)) {
		if(Casino_Flag[playerid][select_casino_table] == -1) {
			for(new c = 0; c < MAX_TABLES_DICE; c++) {
				if(IsPlayerInDynamicArea(playerid, InfoDice[c][dice_area])) {
					if(PlayerInfo[playerid][pAdmin] >= 1 && !GetString(player_name[playerid],"Klaus_Gurren")) return ErrorMessage(playerid,"Репорти не спять!");
					if(InfoDice[c][dice_game_start] == true) return ErrorMessage(playerid,"Данная партия уже играется");
					if(Casino_Flag[playerid][casino_crup] == 1) {
						if(InfoDice[c][dice_crup]!=INVALID_PLAYER_ID) return ErrorMessage(playerid,"Тут уже есть крупье");
						InfoDice[c][dice_crup] = playerid;
					}
					else {
						new bool:check_played=false;
						for(new i = 0;i<5;i++) {
							if(InfoDice[c][dice_gamer][i] == INVALID_PLAYER_ID) {
								InfoDice[c][dice_gamer][i] = playerid;
								check_played = true;
								break;
							}
						}
						if(!check_played) return ErrorMessage(playerid,"Максимум гравців: (5)");
					}
					Casino_Flag[playerid][select_casino_table] = c;
					ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
					UpdateTextCasino(c);
					break;
				}
			}
		}
	}
	if(IsPlayerInAnyVehicle(playerid)) {
	    new carid = GetPlayerVehicleID(playerid);
	    new model = (GetVehicleModel(carid)-400);
	    if(GetPlayerState(playerid) == 2) {
	        if(!IsAPlane(carid) && !IsABoat(carid) && !IsABike(carid) && !IsAVelik(carid) && GetEngineStat(carid))  {
		        if(PRESSED(KEY_NUM4)) {
				    DestroyDynamicObject(LightsObject[carid][0]);
		            DestroyDynamicObject(LightsObject[carid][1]);
		            LightsObject[carid][0] = -1;
		            LightsObject[carid][1] = -1;
				    if(Signal[carid] == 1) {
		                SignalTick[carid][0] = 0;
		                SignalTick[carid][1] = -1;
		                Signal[carid] = 0;
		                SetPlayerChatBubble(playerid, "Виключил(а) левый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    else {
				        LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				        GetVehicleZAngle(carid, SignalAngle[carid]);
				        SignalTick[carid][0] = 0;
				        SignalTick[carid][1] = -1;
				    	Signal[carid] = 1;
						SetPlayerChatBubble(playerid, "включил(а) левый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    return true;
				}
				else if(PRESSED(KEY_NUM6)) {
				    DestroyDynamicObject(LightsObject[carid][0]);
		            DestroyDynamicObject(LightsObject[carid][1]);
		            LightsObject[carid][0] = -1;
		            LightsObject[carid][1] = -1;
				    if(Signal[carid] == 2) {
		                SignalTick[carid][0] = 0;
		                SignalTick[carid][1] = -1;
		                Signal[carid] = 0;
		                SetPlayerChatBubble(playerid, "Виключил(а) правый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    else {
						LightsObject[carid][0] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                LightsObject[carid][1] = CreateDynamicObject(19294, 0, 0, 0, 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][0], carid, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
		                AttachDynamicObjectToVehicle(LightsObject[carid][1], carid, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				        GetVehicleZAngle(carid, SignalAngle[carid]);
				        SignalTick[carid][0] = 0;
				        SignalTick[carid][1] = -1;
				    	Signal[carid] = 2;
						SetPlayerChatBubble(playerid, "включил(а) правый поворотник", COLOR_PURPLE, 30.0, 5000);
				    }
				    return true;
				}
			}
		}
		if((newkeys & 1 && !(oldkeys & 1)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) pc_cmd_engine(playerid,"");
	}
	time_newkeys = GetTickCount() - tickcount1;
	if(time_newkeys > time_newkeys_max) time_newkeys_max = time_newkeys;
	return true;
}
public OnVehicleStreamIn(vehicleid, forplayerid) {
	if(!IsValidVehicle(vehicleid)) return 1;
	GetVehiclePos(vehicleid, VehicleInfo[vehicleid][veX], VehicleInfo[vehicleid][veY], VehicleInfo[vehicleid][veZ]);
	GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][veA]);
	return 1;
}
public OnVehicleStreamOut(vehicleid, forplayerid) {
    return 1;
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source) {
	return false;
}
stock CarLic(carid) {
	switch (GetVehicleModel(carid)) {
		case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return true;
		case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return true;
		case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return true;
	}
	return false;
}
CB: PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
CB: PlayerToKvadratGhetto(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y) {
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x*2 && xxp >= min_x*2) && (yyp <= max_y*2 && yyp >= min_y*2)) return true;
	return false;
}
stock GetNearestVehicle(playerid) {
	new Float:X,Float:Y,Float:Z;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		GetVehiclePos(i,X,Y,Z);
		if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return i;
	}
	return -1;
}
public OnVehicleDeath(vehicleid, killerid) {
	if(killerid != INVALID_PLAYER_ID && !TI[killerid][tLogin]) return false;
	if(GetArendCarID(vehicleid) != -1) {
	    new playerid = ArendInfo[GetArendCarID(vehicleid)][aPlayerID];
	    ArendInfo[GetArendCarID(vehicleid)][aPlayerID] = INVALID_PLAYER_ID;
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid-400)][trTank];
	    if(IsPlayerConnected(playerid) && TI[playerid][tArendKey] == GetArendCarID(vehicleid)) {
	        SendClientMessage(playerid, COLOR_LIGHTRED, "Транспорт, который вы арендовали, был уничтожен. Контракт расторгнут");
	        TI[playerid][tArendKey] = -1;
	    }
	}
	if(VehicleInfo[vehicleid][vBizz] > 0) {
		for(new i; i < 20; i ++) {
			if(FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i] != vehicleid) continue;
			update_bfunc(3,VehicleInfo[vehicleid][vBizz],VehicleInfo[vehicleid][vColor],i);
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
	 	if(vehicleid == house_car[i][0]) VehicleInfo[house_car[i][0]][vFuel] = gPlayerCars[i][carFuel][0],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i][0],0);
		if(vehicleid == house_car[i][1]) VehicleInfo[house_car[i][1]][vFuel] = gPlayerCars[i][carFuel][1],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i][1],1);
		if(vehicleid == PlayerTrailer[i]) {
			A_DestroyVehicle(PlayerTrailer[i]);
			PlayerTrailer[i] = INVALID_VEHICLE_ID;
			if(gPlayerProdText[i] != Text3D:-1) {
				DestroyDynamic3DTextLabel(gPlayerProdText[i]);
				gPlayerProdText[i] = Text3D:-1;
			}
			if(gPlayerProdCP[i] != -1) DestroyDynamicCP(gPlayerProdCP[i]);
			DeletePVar(i,"count_prod2");
			DeletePVar(i,"count_prod");
			DeletePVar(i,"attach_trailer");
		}
		if(vehicleid == rob_veh[i]) {
			leave_robhouse(i);
		}
		if(TI[i][tYoutubcar] == vehicleid) {
			A_DestroyVehicle(TI[i][tYoutubcar]);
			TI[i][tYoutubcar] = INVALID_VEHICLE_ID;
			SendClientMessage(i,COLOR_GREY,"Youtube транспорт был отбуксирован");
		}
		if(vehicleid == TK_Trailer[i]) {
			A_DestroyVehicle(TK_Trailer[i]);
			TK_Trailer[i] = INVALID_VEHICLE_ID;
			TI[i][tTrucker][3] = 0;
			TI[i][tTrucker][2] = 0;
			TI[i][tTrucker][1] = 0;
			TI[i][tTrucker][0] = 0;
			SendOk(i,"Груз удален");
		}
		else if(vehicleid == car_autoschool[i]) {
			A_DestroyVehicle(car_autoschool[i]);
			car_autoschool[i] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(i);
			ErrorMessage(i,"Экзамен завален");
			TI[i][tAutoSchool] = 0;
			DeletePVar(i,"LessonSlotMav");
			DeletePVar(i,"LessonSlotBoat");
			SetPlayerPosAC(i,GetPVarFloat(i,"pos_x_autos"),GetPVarFloat(i,"pos_y_autos"),GetPVarFloat(i,"pos_z_autos"),45,76);
		}
		if(theftIDveh[i][0] == vehicleid && thefttime[i] !=0){ //угон
			SendOk(i,"Ви провалили задание, ваш навык угона понижен.");
			DestroyDynamicArea(theftarea[i][0]);
			DisablePlayerCheckpoint(i);
			DestroyDynamicCP(theftCheck[i][0]);
			A_DestroyVehicle(theftIDveh[i][0]);
			theftIDveh[i][0] = INVALID_VEHICLE_ID;
			if(theftveh[i][0] != INVALID_VEHICLE_ID) {
				A_DestroyVehicle(theftveh[i][0]); 
				theftveh[i][0] = INVALID_VEHICLE_ID;
			}
			if(theftplayer[theftIDveh[i][1]][0] != 1010) theftplayer[theftIDveh[i][1]][0] = 1010;
			theftplayer[i][1] = 0;
			theftCheck[i][1] = 0;
			PlayerTextDrawHide(i, theft_PTD[i][0]);
			thefttime[i] = 0;
			if(PlayerInfo[i][ptheftExp] == 0) {
				if(PlayerInfo[i][ptheftSkill] != 0) PlayerInfo[i][ptheftSkill]--, UpdatePlayerData(i,"theftSkill",PlayerInfo[i][ptheftSkill]);
				PlayerInfo[i][ptheftExp] = TheftSkillMax[PlayerInfo[i][ptheftSkill]]-1, UpdatePlayerData(i,"theftExp",PlayerInfo[i][ptheftExp]);
			} 
			else {
				if(PlayerInfo[i][ptheftExp] != 0) PlayerInfo[i][ptheftExp]--, UpdatePlayerData(i,"theftExp",PlayerInfo[i][ptheftExp]);
			}
		}
	}
	SetVehicleToRespawn(vehicleid);
	return true;
}
public OnVehicleSpawn(vehicleid) {
	VehicleInfo[vehicleid][vPlayer] = -1;
	SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);

	if(VehicleInfo[vehicleid][vTeam] == fFBI || VehicleInfo[vehicleid][vTeam] == fWHITEHOUSE) SetVehicleHealth(vehicleid,3000.0);
	if(GetArendCarID(vehicleid) != -1) {
	    new playerid = ArendInfo[GetArendCarID(vehicleid)][aPlayerID];
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid-400)][trTank];
	    ArendInfo[GetArendCarID(vehicleid)][aPlayerID] = INVALID_PLAYER_ID;
	    if(IsPlayerConnected(playerid) && TI[playerid][tArendKey] == GetArendCarID(vehicleid)) {
	        SendClientMessage(playerid, COLOR_LIGHTRED, "Транспорт, який ви арендовали, був заспавнений. Контракт розірваний");
			TI[playerid][tArendKey] = -1;
	    }
	}
	if(VehicleInfo[vehicleid][vType] == VEHICLE_TYPE_ADMIN) {
		A_DestroyVehicle(vehicleid);
	}
	if(VehicleInfo[vehicleid][vJob] > 0 || VehicleInfo[vehicleid][vTeam] > 0) {
		VehicleInfo[vehicleid][vFuel] = gTransport[GetVehicleModel(vehicleid)-400][trTank];
		VehicleInfo[vehicleid][vPlayer] = -1;
	}
	if(VehicleInfo[vehicleid][vBizz] > 0) {
		for(new i; i < 20; i ++) {
			if(FuncBizz[VehicleInfo[vehicleid][vBizz]][funcbCars][i] != vehicleid) continue;
			update_bfunc(3,VehicleInfo[vehicleid][vBizz],VehicleInfo[vehicleid][vColor],i);
		}
	}
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
	 	if(vehicleid == house_car[i][0]) VehicleInfo[house_car[i][0]][vFuel] = gPlayerCars[i][carFuel][0],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i][0],0);
		if(vehicleid == house_car[i][1]) VehicleInfo[house_car[i][1]][vFuel] = gPlayerCars[i][carFuel][1],SetVehicleParamsEx(vehicleid,false,false,false,true,false,false,false), LoadTuning(i,house_car[i][1],1);
		if(vehicleid == PlayerTrailer[i]) {
			A_DestroyVehicle(PlayerTrailer[i]);
			PlayerTrailer[i] = INVALID_VEHICLE_ID;
			if(gPlayerProdText[i] != Text3D:-1) {
				DestroyDynamic3DTextLabel(gPlayerProdText[i]);
				gPlayerProdText[i] = Text3D:-1;
			}
			if(gPlayerProdCP[i] != -1) DestroyDynamicCP(gPlayerProdCP[i]);
			DeletePVar(i,"count_prod2");
			DeletePVar(i,"count_prod");
			DeletePVar(i,"attach_trailer");
		}
		if(vehicleid == rob_veh[i]) {
			leave_robhouse(i);
		}
		if(vehicleid == TK_Trailer[i]) {
			A_DestroyVehicle(TK_Trailer[i]);
			TK_Trailer[i] = INVALID_VEHICLE_ID;
			TI[i][tTrucker][3] = 0;
			TI[i][tTrucker][2] = 0;
			TI[i][tTrucker][1] = 0;
			TI[i][tTrucker][0] = 0;
			SendOk(i,"Груз удален");
		}
		else if(vehicleid == car_autoschool[i]) {
			A_DestroyVehicle(car_autoschool[i]);
			car_autoschool[i] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(i);
			ErrorMessage(i,"Екзамен провалений");
			TI[i][tAutoSchool] = 0;
			DeletePVar(i,"LessonSlotMav");
			DeletePVar(i,"LessonSlotBoat");
			SetPlayerPosAC(i,GetPVarFloat(i,"pos_x_autos"),GetPVarFloat(i,"pos_y_autos"),GetPVarFloat(i,"pos_z_autos"),45,76);
		}
	}
	if(VG[vehicleid][vgLoading] || VG[vehicleid][vgUnloading] || VG[vehicleid][vgRobHouse]) {
		VG[vehicleid][vgLoading] = false;
		VG[vehicleid][vgUnloading] = false;
		VG[vehicleid][vgRobHouse] = false;

		if(IsValid3DTextLabel(VG[vehicleid][vgText])) DestroyDynamic3DTextLabelEx(VG[vehicleid][vgText]);

		DestroyDynamicPickup(VG[vehicleid][vgPickup]);
	    VG[vehicleid][vgPickup] = 0;
	    DestroyDynamicArea(VG[vehicleid][vgArea]);
	    VG[vehicleid][vgArea] = 0;

		if(vehicleid == 482) VG[vehicleid][vgAmount][0] = 0;
	}
 	if(VehicleInfo[vehicleid][vJob] > 0) {
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		    if(TI[i][tArendaCar] == vehicleid) {
				TI[i][tArendaCar] = -1;
				DisablePlayerRaceCheckpoint(i);
				if(GetPVarInt(i,"veh_id_cleaner") == vehicleid) EndGazon(i);
				if(GetPVarInt(i,"clear_id") == vehicleid) EndClear(i);
				if(GetPVarInt(i,"bus_id") == vehicleid) EndBus(i);
				if(GetPVarInt(i,"track_id") == vehicleid) EndTrack(i);
				if(GetPVarInt(i,"prod_vehicle_id") == vehicleid) EndProd(i);
				if(GetPVarInt(i,"mehjob") == vehicleid) EndMeh(i);
				if(GetPVarInt(i,"eatjob") == vehicleid) EndEat(i);
		    	break;
			}
		}
	}
	if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1) {
		if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
		if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
		LightsObject[vehicleid][0] = -1;
		LightsObject[vehicleid][1] = -1;
		SignalTick[vehicleid][0] = 0;
		SignalTick[vehicleid][1] = -1;
		Signal[vehicleid] = 0;
	}
	GetVehiclePos(vehicleid, VehicleInfo[vehicleid][veX], VehicleInfo[vehicleid][veY], VehicleInfo[vehicleid][veZ]);
	GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][veA]);
	return true;
}
CB: DelGun(playerid) {
	for(new i=0;i<10;i++) {
		GunPlayer[playerid][i][0]=0;
		GunPlayer[playerid][i][1]=0;
	}
	ResetPlayerWeapons(playerid);
	return true;
}
stock GetPlayerVehicleSpeed(playerid) {
    if(!IsPlayerInAnyVehicle(playerid)) return true;
    new Float:X, Float:Y, Float:Z;
	GetVehicleVelocity(GetPlayerVehicleID(playerid),X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 100.3);
}
stock Float:fmax(Float:v1, Float:v2) {
	return v1 > v2?v1:v2;
}
stock Float:fmin(Float:v1, Float:v2) {
	return v1 < v2?v1:v2;
}
stock Float:jfloatsub(Float:value1, Float:value2) {
	new Float:num1 = fmax(value1, value2);
	new Float:num2 = fmin(value1, value2);
	new Float:diff = (num1 - num2);
	if(diff > 300.0) diff = ( 360.0 - num1 ) + num2;
	return diff;
}
stock Float:PointToPoint3D(Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2) return floatsqroot(floatadd(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)),floatpower(z2-z1,2)));
CB: update_speedometer(playerid) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:X, Float:Y, Float:Z, Float:A, Float:X2, Float:Y2, Float:Z2;
	X2 = VehicleInfo[vehicleid][veX];
	Y2 = VehicleInfo[vehicleid][veY];
	Z2 = VehicleInfo[vehicleid][veZ];
	new Float:_coord[3];
	GetVehicleVelocity(vehicleid,_coord[0],_coord[1],_coord[2]);
	GetVehicleRotation(vehicleid, _coord[0],_coord[1],_coord[2]);
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(VehicleInfo[vehicleid][vPerfStatus]) {
		new Keys,ud,lr,Float:X1,Float:Y1,Float:Z1;
		GetVehicleVelocity(GetPlayerVehicleID(playerid),X1,Y1,Z1);
		new Float:speed = floatsqroot(floatadd(floatadd(floatpower(X1, 2), floatpower(Y1, 2)),  floatpower(Z1, 2))) * 100.3;

		GetPlayerKeys(playerid,Keys,ud,lr);
		if(Keys == KEY_SPRINT)
		{
			if(speed < 350 && speed > 30)
			{
				if(VehicleInfo[vehicleid][vEngineBoost] > 0)
				{
					if(speed > 60 && speed < 90) SetVehicleSpeed(GetPlayerVehicleID(playerid), speed + VehicleInfo[vehicleid][vEngineBoost]);
					if(speed > 90 && speed < 250) SetVehicleSpeed(GetPlayerVehicleID(playerid), speed + VehicleInfo[vehicleid][vEngineBoost]);
					if(speed > 250) SetVehicleSpeed(GetPlayerVehicleID(playerid), 250);
				}
			}
		}
		if(Keys == KEY_JUMP && VehicleInfo[vehicleid][vBrakeBoost] > 0 && speed > 30) SetVehicleSpeed(GetPlayerVehicleID(playerid),speed - VehicleInfo[vehicleid][vBrakeBoost] * 2);
	}
	if(TI[playerid][tAFK] <= 3) {
		new Float:Health, stext[20];
		GetVehicleHealth(vehicleid,Health);

		new Float:veloc;
		GetVehiclePos(vehicleid, X, Y, Z);
		veloc = PointToPoint3D(X2,Y2,Z2,X,Y,Z)/1000;
		new model = GetVehicleModel(vehicleid)-400;
		if(engine == 1) {
			VehicleInfo[vehicleid][vDrived] += veloc;
			if(!IsABike(GetVehicleModel(vehicleid)) && !IsAVelik(GetVehicleModel(vehicleid))) VehicleInfo[vehicleid][vFuel] -= (veloc/100)*gTransport[model][trConsumption];	

			GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
			if(GetVehicleModel(vehicleid) != 462 && VehicleInfo[vehicleid][vFuel] <= 0.0) {
				VehicleInfo[vehicleid][vFuel] = 0.0;
				SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
			}
			if(vehicleid == house_car[playerid][0]) gPlayerCars[playerid][carFuel][0] = VehicleInfo[vehicleid][vFuel];
			else if(vehicleid == house_car[playerid][1]) gPlayerCars[playerid][carFuel][1] = VehicleInfo[vehicleid][vFuel];

			if(Health <= 320.0) {
				SetVehicleParamsEx(vehicleid,false,false,alarm,doors,bonnet,boot,objective);
			}
			GetVehicleZAngle(vehicleid, A);
			if(Signal[vehicleid]) {
				new Float:LAngle = jfloatsub(A, SignalAngle[vehicleid]);
				if(SignalTick[vehicleid][1] >= 0) {
					SignalTick[vehicleid][1] --;
					if(!SignalTick[vehicleid][1]) {
						Signal[vehicleid] = 0;
						if(LightsObject[vehicleid][0] != -1) {
							DestroyDynamicObject(LightsObject[vehicleid][0]);
							LightsObject[vehicleid][0] = -1;
						}
						if(LightsObject[vehicleid][1] != -1) {
							DestroyDynamicObject(LightsObject[vehicleid][1]);
							LightsObject[vehicleid][1] = -1;
						}
					}
				}
				else if(LAngle >= 50.0) SignalTick[vehicleid][1] = 20;
				SignalTick[vehicleid][0] ++;
				if(SignalTick[vehicleid][0] > 17) SignalTick[vehicleid][0] = 0;
			}
		}
		VehicleInfo[vehicleid][veX] = X;
		VehicleInfo[vehicleid][veY] = Y;
		VehicleInfo[vehicleid][veZ] = Z;

		new Float: Xx, Float: Yy, Float: Zz;
		GetVehicleVelocity(vehicleid, Xx, Yy, Zz);
		new Float:speedcar = _GetVehicleSpeed(vehicleid);
		if(TI[playerid][tSLimit]) {
			if(speedcar > TI[playerid][tSLimit]) {
				new Float:dif = TI[playerid][tSLimit] / speedcar;
				SetVehicleVelocity(vehicleid,Xx*dif,Yy*dif,Zz*dif);
				speedcar = TI[playerid][tSLimit];
			}
		}
		format(stext,sizeof(stext),"%.0f",speedcar);
		PlayerTextDrawSetString(playerid, speedometr[playerid][6], stext);
		
		if(VehicleInfo[vehicleid][vFuel] <= 10) format(stext, sizeof(stext), "~r~%.0fL", VehicleInfo[vehicleid][vFuel]);
		else format(stext, sizeof(stext), "%.0fL", VehicleInfo[vehicleid][vFuel]);
		PlayerTextDrawSetString(playerid, speedometr[playerid][8], stext);

		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);

		format(stext,sizeof(stext),"%.0f",VehicleInfo[vehicleid][vDrived]);
		PlayerTextDrawSetString(playerid, speedometr[playerid][7], stext);

		if(Health > 400) {
			format(stext,sizeof(stext),"%d",floatround(Health));
			PlayerTextDrawSetString(playerid, speedometr[playerid][5], stext);
		}
		else {
			format(stext,sizeof(stext),"%d",floatround(Health));
			PlayerTextDrawSetString(playerid, speedometr[playerid][5], stext);
		}
		if(TI[playerid][tTaxiGoing]) {
			new passid = TI[playerid][tTaxiPass];
			new tarif;
			switch(GetVehicleModel(vehicleid)) {
				case 426,438: tarif = FuncBizz[PlayerInfo[playerid][bizz_work]][funcbTarif][0];
				case 540,550: tarif = FuncBizz[PlayerInfo[playerid][bizz_work]][funcbTarif][1];
				case 483: tarif = FuncBizz[PlayerInfo[playerid][bizz_work]][funcbTarif][2];
				case 560,580: tarif = FuncBizz[PlayerInfo[playerid][bizz_work]][funcbTarif][3];
			}

			new sum1 = floatround((VehicleInfo[vehicleid][vDrived] - TI[playerid][tTaxiStart])*tarif);
			new percent = floatround(sum1/100*FuncBizz[PlayerInfo[playerid][bizz_work]][funcbPercent]);
			new sum2 = sum1-percent;
			if(GetPlayerState(passid) == PLAYER_STATE_PASSENGER && GetPlayerVehicleID(passid) == vehicleid) {				
				static const f_str[] = "~w~TARIF: ~g~$%d/km~n~~w~Count: ~y~$%d";
				new mes[sizeof(f_str) +1 + (-2 + 5) + (-2 + 6)];
				format(mes,sizeof(mes),f_str,tarif,sum1);
				GameTextForPlayer(playerid,mes,1000,1);
				GameTextForPlayer(passid,mes,1000,1);
				if(GetPlayerMoneyEx(passid)-20 <= sum1) {
					if(GetPlayerMoneyEx(passid) - sum1 >= 0 && sum1 > 0) {
						bizz_pay(PlayerInfo[playerid][bizz_work]-1,percent);
						PlayerInfo[playerid][bizz_cash] += percent;
						UpdatePlayerData(playerid,"bizz_cash",PlayerInfo[playerid][bizz_cash]);
						GiveMoney(passid,-sum1,"taxipay");		
						GiveMoney(playerid,sum2,"taxipay");
						printf("%d",sum1);
						printf("%d",sum2);
					}	
					ErrorMessage(passid,"Недостаточно грошей для проїзду на таксі");
					SendOk(playerid,"Пассажир оплачивающий таксі вийшов, рахунокчик отключен");
					TI[playerid][tTaxiGoing] = false;
					TI[playerid][tTaxiPass] = INVALID_PLAYER_ID;
					RemovePlayerFromVehicleAC(passid);
					passid = INVALID_PLAYER_ID;
				}
			}
			else {
				if(sum1 > 0) {
					bizz_pay(PlayerInfo[playerid][bizz_work]-1,percent);
					PlayerInfo[playerid][bizz_cash] += percent;
					UpdatePlayerData(playerid,"bizz_cash",PlayerInfo[playerid][bizz_cash]);
					GiveMoney(passid,-sum1,"taxipay");		
					GiveMoney(playerid,sum2,"taxipay");		
				}
				SendOk(playerid,"Пассажир оплачивающий таксі вийшов, рахунокчик отключен");
				RemovePlayerMapIcon(playerid,iconTaxi);
				RemovePlayerMapIcon(passid,iconTaxi);
				TI[playerid][tTaxiGoing] = false;
				TI[playerid][tTaxiPass] = INVALID_PLAYER_ID;
				TI[playerid][tTaxiStart] = 0.0;	
				passid = INVALID_PLAYER_ID;	
			}	
		}
	}
	return 1;
}
new WebSites[][] ={".ws", ".ru", ".tk", ".com", "www.", ".org", ".net", ".cc", ".рф", ".by", ".biz", ".su", ".info"};
stock CheckString(const str[]) {
	for(new i = 0;i<sizeof(WebSites);i++) if(strfind(str,WebSites[i],true) != -1) return true;
	return false;
}
new delimiters[]={'.', ' ', ',', '*', '/', ';', '\\', '|'};
stock IsIP(const str[]) {
    for(new cIP[4]; cIP[0] != strlen(str)+1; cIP[0]++) {
        switch(str[cIP[0]]) {
            case '.', ' ', ':', ',', '*', '/', ';', '\\', '|' : continue;
            case '0' .. '9': cIP[1]++;
        }
        if(cIP[1] ==1){ cIP[2] = cIP[0];}
        if(cIP[1] >= 8) {
            new strx[16]; new l[4][4];
            cIP[3] = cIP[0]+8; strmid(strx,str,cIP[2],cIP[3],16);
            for(new i =strlen(strx);i>8;i--) {
                switch(strx[i]) {
                    case '0' .. '9','.', ' ', ':', ',', '*', '/', ';', '\\', '|': continue;
                    default: strx[i] =0;
                }
            }
            for(new i =0;i<sizeof(delimiters);i++) {
                split(strx,l,delimiters[i]);
                if(strlen(l[0]) == 1 ||strlen(l[1]) == 1 ||strlen(l[2]) == 1 ||strlen(l[3]) == 1){ continue; }
                if(strlen(l[0]) >3 ||strlen(l[1]) >3 ||strlen(l[2]) >3){ continue; }
                else { return true; }
            }
        }
    }
    return false;
}
public OnVehicleDamageStatusUpdate(vehicleid, playerid) {
	new Float:vehicleHealth;
	GetVehicleHealth(vehicleid, vehicleHealth);
	if(VehicleInfo[vehicleid][vJob] == 1) {
		if(GetPVarInt(playerid,"bus_id") == vehicleid) SetPVarFloat(playerid,"bus_damage", vehicleHealth);
	}
	return true;
}
Convert(number) {
	new hours = 0, mins = 0, secs = 0, str[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(str, 100, "%i:%02d:%02d", hours, mins, secs);
	else format(str, 100, "%i:%02d", mins, secs);
	return str;
}
stock ConvertsCmdTime(number) {
	new hours = 0, mins = 0, string[30];
	hours = number / 3600;
	mins = (number - hours * 3600) / 60;
	format(string, 30, "%d ч %d мин", hours, mins);
	return string;
}
stock GetPlayerID(const str[]) {
	foreach(new i:Player) {
		if(strcmp(player_name[i], str, true, strlen(str)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}
stock ToDevelopSkills(Slashes,Points) {
	new strign[149];
	new Slash[2] = "|";
	new Point[2] = ".";
	for(new i = 0; i < Slashes; i++) strcat(strign, Slash);
	for(new i = 0; i < Points; i++) strcat(strign, Point);
	return strign;
}
stock SetPlayerSkills(playerid) {
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pGunSkill][5]*10);
	return true;
}
stock ClearTotalGz() {
	TotalGZ[3] = 0;
	TotalGZ[4] = 0;
	TotalGZ[0] = 0;
	TotalGZ[2] = 0;
	TotalGZ[1] = 0;
}
stock IsWheelModel(modelid) {
	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i=0;i<17;i++) {
		if (modelid == wheelmodels[i])
		return true;
	}
	return false;
}
stock IsLegalCarNitroIde(carmodel) {
	new illegalvehs[29] = { 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449 };
	for(new i=0;i<29;i++) {
		if (carmodel == illegalvehs[i])
		return true;
	}
	return false;
}
stock IsLegal_Nos_Vehicle(PlayerID) {
	new carid = GetPlayerVehicleID(PlayerID);
	new playercarmodel = GetVehicleModel(carid);
	return IsLegalCarNitroIde(playercarmodel);
}
public OnVehicleRespray(playerid, vehicleid, color1, color2) {
    return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid) {
	return 1;
}

new Float:TuningPos[4][6] =
{
	{-1935.9622,244.4556,34.0334,617.5304,-1.9891,1000.5530},
	{-2723.2322,217.8237,4.1901,615.2862,-124.2390,997.6953},
	{1041.4187,-1019.0356,31.7300,617.5305,-1.9890,1000.5520},
	{2644.6572,-2046.0532,13.3756,616.7820,-74.8150,997.7332}
};
stock IsAtTunning(playerid) {
	for(new i; i < sizeof(TuningPos);i ++) {
  		if(IsPlayerInRangeOfPoint(playerid,10,TuningPos[i][0],TuningPos[i][1],TuningPos[i][2])) return true;
	    if(IsPlayerInRangeOfPoint(playerid,10,TuningPos[i][3],TuningPos[i][4],TuningPos[i][5])) return true;
	}
	return false;
}
stock ACC_AddVehicleComponent(vehicleid, componentid) {
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if (!modok) return 0;
	AddVehicleComponent(vehicleid, componentid);
	return 1;
}
stock IsLegalCarMod(vehicleide, componentid) {
	new modok = false;
	if((IsWheelModel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010))) {
		new nosblocker = IsLegalCarNitroIde(vehicleide);
		if (!nosblocker)
		modok = true;
	}
	else {
		for(new I=0;I<48;I++) {
			if (legalmods[I][0] == vehicleide) {
				for(new J = 1; J < 22; J++) {
					if (legalmods[I][J] == componentid)
					modok = true;
				}
			}
		}
	}
	return modok;
}
public OnVehicleMod(playerid, vehicleid, componentid) {
	new vehicleide = GetVehicleModel(vehicleid);
	new modok = IsLegalCarMod(vehicleide, componentid);
	if (!modok) {
		RemoveVehicleComponent(vehicleid,componentid);
		return 0;
	}
	if(IsAtTunning(playerid)) {
	    if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	        RemoveVehicleComponent(vehicleid,componentid);
	        return 0;
	    }
		else {
		    RemoveVehicleComponent(vehicleid, componentid);
		    ErrorMessage(playerid, "Цей транспорт нельзя тюнинговать");
			return 0;
		}
	}
	else {
	    if(GetPlayerState(playerid) == 2) {
			RemoveVehicleComponent(vehicleid, componentid);
			return 0;
		}
	}
	return true;
}
stock PreloadAnimLib(playerid, const animlib[]) return ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 1, 1, 0);
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid) {
	for(new i = 19; i < sizeof(Captcha); i++) {
		if(playertextid == Captcha[i]) {
			new sstring[96];
			GetPVarString(playerid, "CaptchaText", sstring, sizeof(sstring));
			switch(GetPVarInt(playerid, "CaptchaStep")) {
				case 0: format(sstring, sizeof(sstring), "%c", TextArray[i - 19]), strcat(sstring, "---"), SetPVarString(playerid, "CaptchaText", sstring);
				case 1: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 1, 4), strcat(sstring, "--"), SetPVarString(playerid, "CaptchaText", sstring);
				case 2: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 2, 4), strcat(sstring, "-"), SetPVarString(playerid, "CaptchaText", sstring);
				case 3: format(sstring, sizeof(sstring), "%s%c", sstring, TextArray[i - 19]), strdel(sstring, 3, 4), strcat(sstring, ""), SetPVarString(playerid, "CaptchaText", sstring);
			}
			SetPVarInt(playerid, "CaptchaStep", GetPVarInt(playerid, "CaptchaStep") + 1);
			PlayerTextDrawSetString(playerid, Captcha[8], sstring);
		}
	}
	if(playertextid == Captcha[5]) {
		DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
		PlayerTextDrawSetString(playerid, Captcha[8], "----");
	}
	else if(playertextid == Captcha[6]) {
		new sstring[96];
		GetPVarString(playerid, "CaptchaText", sstring, sizeof(sstring));
		if(!GetString(PlayerInfo[playerid][pKeyip], sstring) || !GetPVarInt(playerid, "CaptchaStep")) {
			new playerip[16], data2[64], day, month, year,query[200];
			getdate(day, month, year);
			format(data2, 64, "%d-%d-%d", day, month, year);
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			mysql_format(connects, query, sizeof(query), "INSERT INTO `captchalog` (`clName`, `clIP`, `clDate`, `clStatus`) VALUES ('%e', '%s', '%s', '0')", player_name[playerid], playerip, data2);
			mysql_tquery(connects, query);
			for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
			DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
			Kick(playerid);
			return true;
		}
		else {
			new playerip[16], data2[64],day, month, year,query[200];
			getdate(day, month, year);
			format(data2, 64, "%d-%d-%d", day, month, year);
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			mysql_format(connects, query, sizeof(query), "INSERT INTO `captchalog` (`clName`, `clIP`, `clDate`, `clStatus`) VALUES ('%e', '%s', '%s', '1')", player_name[playerid], playerip, data2);
			mysql_tquery(connects, query);
			for(new l = 0; l < sizeof(Captcha); l++) PlayerTextDrawHide(playerid, Captcha[l]);
			DeletePVar(playerid, "CaptchaStep"); DeletePVar(playerid, "CaptchaText");
			CancelSelectTextDraw(playerid);
			TogglePlayerControllable(playerid, true);
			load_load(playerid);
			return true;
		}
	}
	return 1;
}
public OnPlayerClickTextDraw(playerid, Text:clickedid) {
	if(!(_:clickedid ^ 0xFFFF)) {
		if(GetPVarInt(playerid,"TunningSaluna")) {
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid,"TunningSaluna");
			new vehicleid = GetPlayerVehicleID(playerid);
			ChangeVehicleColor(vehicleid,VehicleInfo[vehicleid][vColor][0],VehicleInfo[vehicleid][vColor][1]);
			ChangeVehiclePaintjob(vehicleid,VehicleInfo[vehicleid][vPaintJob]);
			for(new h = 0;h < 20;h++) {
				if(h < 7) PlayerTextDrawHide(playerid,ColorTDPl[playerid][h]);
				TextDrawHideForPlayer(playerid,ColorTD[h]);
			}
		}
		if(GetPVarInt(playerid,"TunningSalun")) {
			CancelSelectTextDraw(playerid);
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"TunningSalun");
			for(new h = 0;h < 22;h++) {
				if(h < 6) PlayerTextDrawHide(playerid,CustomTDPl[playerid][h]);
				TextDrawHideForPlayer(playerid,CustomTD[h]);
			}
			new vehicleid = GetPlayerVehicleID(playerid);
			for(new p = 1000;p < 1194;p++) {
			    RemoveVehicleComponent(vehicleid,p);
			}
			LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		}
		if(GetPVarInt(playerid,"select_colortd")) cancel_selectcolor(playerid);
	}
	if(GetPVarInt(playerid,"registrations")) {
	    if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		else if(clickedid == reg_td[9]) SkinSelect(playerid, 0);
		else if(clickedid == reg_td[7]) SkinSelect(playerid, 1);
	    else if(clickedid == reg_td[15]) {
	        for(new x; x < 19; x++) TextDrawHideForPlayer(playerid, reg_td[x]);
			for(new i; i < 3; i++) PlayerTextDrawHide(playerid, reg_tds[playerid][i]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid,"registrations");
		    new year, month, day;
			getdate(year, month, day);
			GetPlayerIp(playerid,PlayerInfo[playerid][pIpReg],32);
			new query[512];
			mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_ACCOUNTS"` (`Name`, `pKey`, `pSex`, `pDataReg`, `pIpReg`, `pDrug`, `pEmail`,`Skin`) VALUES ('%s', MD5('%s'), '%i', '%02i/%02i/%02i', '%s', '%s', '%s', '%i')"
			,player_name[playerid],player_pass[playerid],PlayerInfo[playerid][pSex],day,month,year,PlayerInfo[playerid][pIpReg],PlayerInfo[playerid][pDrug],PlayerInfo[playerid][pEmail],skin_register[GetPVarInt(playerid,"join_ped_item")][0]);
			mysql_tquery(connects,query,"player_register","i",playerid);
			return 1;
		}
	}
	else if(GetPVarInt(playerid,"ChangingSkin")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			SkinSelect(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			SkinSelect(playerid, 1);
		}
	    else if(clickedid == buy_skins[0]) {
	    	new price;
	    	if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
	    		new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*vip_status[PlayerInfo[playerid][pVips]][vip_chose]);
				price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
	    	}
	    	else {
		    	if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
					price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
					price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
				}
			    else price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
			}

			new string[128];
			format(string,sizeof(string),""W"Ви хочете Купити цей одяг за "GREEN"$%i?",price);
			D(playerid,D_BUY_SKIN,DSM, ""YELLOW"Покупка одягу",string,"Купити","Відміна");
		}
		else if(clickedid == buy_skins[1] || Text:INVALID_TEXT_DRAW) {
			A_SetPlayerSkin(playerid, GetPVarInt(playerid, "curskin"));
			cancel_skin(playerid);
		}
	}
	else if(GetPVarInt(playerid,"buy_accses")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			accs_select(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			accs_select(playerid, 1);
		}
	    else if(clickedid == buy_skins[0]) {
	    	if(PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] != 0) {
				D(playerid, D_BUYACS_3, DSM,""YELLOW"Помилка","\n\n"W"У Вас уже є річ в цьому слоті!\n"YELLOW"Замінити її?\n\n", "Так", "Ні");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
			}
			else {
				if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
		            AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
		        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		        	buyacces(playerid);
		        	return true;
				}
				if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
					gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
					bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
				}
				SendOk(playerid, "Вітаємо з покупкою Аксесуара.");
				SendOk(playerid, "Меню управления аксессуарами: "W"(/mm > Особисті налаштування > Аксесуари)");
				GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксесуара");
				PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] = GetPVarInt(playerid, "id_acs"); // записуємо ид об'єкта в слой
				PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs")] = 1;
				save_slotitem(playerid);
				save_slotitem_use(playerid);
				accs_close(playerid);
				DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				buyacces(playerid);
			}
		}
		else if(clickedid == buy_skins[1]) {
			RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "slot_acs"));
			AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
			accs_close(playerid);
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		}
	}
	else if(clickedid == ColorTD[5]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		PrimaryColor[playerid]++;
		if(PrimaryColor[playerid] > 255) PrimaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[6]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		PrimaryColor[playerid]--;
		if(PrimaryColor[playerid] < 0) PrimaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[7]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		SecondaryColor[playerid]++;
		if(SecondaryColor[playerid] > 255) SecondaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[8]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		SecondaryColor[playerid]--;
		if(SecondaryColor[playerid] < 0) SecondaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(ColorTD[11] <= clickedid <= ColorTD[14]) {
		new i = _:clickedid - _:ColorTD[11];
		if(i == VinylJob[playerid]) return 1;
		new curvin = 0;
		TextDrawHideForPlayer(playerid,ColorTD[16+VinylJob[playerid]]);
		if(curvin == i) {
			if(ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] -= VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = false;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),curvin-1), SetPVarInt(playerid, "PaintJob", curvin-1);
			}
		}
		else {
			if(!ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] += VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = true;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
			else {
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
		}
		TextDrawShowForPlayer(playerid,ColorTD[16+i]);
		VinylJob[playerid] = i;
		return 1;
	}
	else if(clickedid == ColorTD[15]) {
		if(RepaintValue[playerid] == 0 && !ChangedVinylJob[playerid]) return ErrorMessage(playerid, "Ви не вибрали колір транспорта");

		new price;
		if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
			price = (RepaintValue[playerid]-seller);
		}
		else {
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
		    else price = RepaintValue[playerid];
		}

		if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid, "У Вас недостаточно коштів");
		GiveMoney(playerid,-price,"Покраска");
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		gPlayerCars[playerid][carColor_one][GetNearestCar(playerid)] = PrimaryColor[playerid];
		gPlayerCars[playerid][carColor_two][GetNearestCar(playerid)] = SecondaryColor[playerid];
		gPlayerCars[playerid][carPaintJob][GetNearestCar(playerid)] = GetPVarInt(playerid, "PaintJob");
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][0] = PrimaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][1] = SecondaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vPaintJob] = GetPVarInt(playerid, "PaintJob");
		if(ChangedPrimaryColor[playerid]) ChangedPrimaryColor[playerid] = false;
		if(ChangedSecondaryColor[playerid]) ChangedSecondaryColor[playerid] = false;
		if(ChangedVinylJob[playerid]) ChangedVinylJob[playerid] = false;
		RepaintValue[playerid] = 0;
		PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
		PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
		return 1;
	}
	else if(clickedid == CustomTD[2]) {
		if(CustomType[playerid] == 11) return 1;
		new str[64],model,value;
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) RemoveVehicleComponent(GetPlayerVehicleID(playerid),model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomType[playerid]++;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 11) TextDrawHideForPlayer(playerid,CustomTD[2]);
		else TextDrawShowForPlayer(playerid,CustomTD[3]);
		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,price);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
/*
	else if(GetPVarInt(playerid,"buy_accses")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			accs_select(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			accs_select(playerid, 1);
		}
	    else if(clickedid == buy_skins[0]) {
	    	if(PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] != 0) {
				D(playerid, D_BUYACS_3, DSM,""YELLOW"Помилка","\n\n"W"У вас уже є річ в цьому слоті!\n"YELLOW"Замінити її?\n\n", "Так", "Ні");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
			}
			else {
				if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
		            AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
		        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		        	buyacces(playerid);
		        	return true;
				}
				if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
					gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
					bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
				}
				SendOk(playerid, "Вітаємо з покупкою Аксесуара.");
				SendOk(playerid, "Меню управления аксессуарами: "W"(/mm > Особисті налаштування > Аксесуари)");
				GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксесуара");
				PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] = GetPVarInt(playerid, "id_acs"); // записуємо ид об'єкта в слой
				PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs")] = 1;
				save_slotitem(playerid);
				save_slotitem_use(playerid);
				accs_close(playerid);
				DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				buyacces(playerid);
			}
		}
		else if(clickedid == buy_skins[1]) {
			RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "slot_acs"));
			AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
			accs_close(playerid);
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		}
	}
	else if(clickedid == ColorTD[5]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		PrimaryColor[playerid]++;
		if(PrimaryColor[playerid] > 255) PrimaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[6]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		PrimaryColor[playerid]--;
		if(PrimaryColor[playerid] < 0) PrimaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[7]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		SecondaryColor[playerid]++;
		if(SecondaryColor[playerid] > 255) SecondaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[8]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		SecondaryColor[playerid]--;
		if(SecondaryColor[playerid] < 0) SecondaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(ColorTD[11] <= clickedid <= ColorTD[14]) {
		new i = _:clickedid - _:ColorTD[11];
		if(i == VinylJob[playerid]) return 1;
		new curvin = 0;
		TextDrawHideForPlayer(playerid,ColorTD[16+VinylJob[playerid]]);
		if(curvin == i) {
			if(ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] -= VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = false;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),curvin-1), SetPVarInt(playerid, "PaintJob", curvin-1);
			}
		}
		else {
			if(!ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] += VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = true;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
			else {
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
		}
		TextDrawShowForPlayer(playerid,ColorTD[16+i]);
		VinylJob[playerid] = i;
		return 1;
	}
	else if(clickedid == ColorTD[15]) {
		if(RepaintValue[playerid] == 0 && !ChangedVinylJob[playerid]) return ErrorMessage(playerid, "Ви не вибрали колір транспорта");

		new price;
		if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
			price = (RepaintValue[playerid]-seller);
		}
		else {
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
		    else price = RepaintValue[playerid];
		}

		if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid, "У Вас недостаточно коштів");
		GiveMoney(playerid,-price,"Покраска");
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		gPlayerCars[playerid][carColor_one][GetNearestCar(playerid)] = PrimaryColor[playerid];
		gPlayerCars[playerid][carColor_two][GetNearestCar(playerid)] = SecondaryColor[playerid];
		gPlayerCars[playerid][carPaintJob][GetNearestCar(playerid)] = GetPVarInt(playerid, "PaintJob");
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][0] = PrimaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][1] = SecondaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vPaintJob] = GetPVarInt(playerid, "PaintJob");
		if(ChangedPrimaryColor[playerid]) ChangedPrimaryColor[playerid] = false;
		if(ChangedSecondaryColor[playerid]) ChangedSecondaryColor[playerid] = false;
		if(ChangedVinylJob[playerid]) ChangedVinylJob[playerid] = false;
		RepaintValue[playerid] = 0;
		PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
		PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
		return 1;
	}
	else if(clickedid == CustomTD[2]) {
		if(CustomType[playerid] == 11) return 1;
		new str[64],model,value;
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) RemoveVehicleComponent(GetPlayerVehicleID(playerid),model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomType[playerid]++;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 11) TextDrawHideForPlayer(playerid,CustomTD[2]);
		else TextDrawShowForPlayer(playerid,CustomTD[3]);
		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,price);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
	else if(GetPVarInt(playerid,"buy_accses")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			accs_select(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			accs_select(playerid, 1);
		}
	    else if(clickedid == buy_skins[0]) {
	    	if(PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] != 0) {
				D(playerid, D_BUYACS_3, DSM,""YELLOW"Помилка","\n\n"W"У вас уже є річ в цьому слоті!\n"YELLOW"Замінити її?\n\n", "Так", "Ні");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
			}
			else {
				if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
		            AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
		        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		        	buyacces(playerid);
		        	return true;
				}
				if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
					gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
					bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
				}
				SendOk(playerid, "Вітаємо з покупкою Аксесуара.");
				SendOk(playerid, "Меню управления аксессуарами: "W"(/mm > особисті налаштування > Аксесуари)");
				GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксесуара");
				PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] = GetPVarInt(playerid, "id_acs"); // записуємо ид об'єкта в слой
				PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs")] = 1;
				save_slotitem(playerid);
				save_slotitem_use(playerid);
				accs_close(playerid);
				DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				buyacces(playerid);
			}
		}
		else if(clickedid == buy_skins[1]) {
			RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "slot_acs"));
			AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
			accs_close(playerid);
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		}
	}
	else if(clickedid == ColorTD[5]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		PrimaryColor[playerid]++;
		if(PrimaryColor[playerid] > 255) PrimaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[6]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		PrimaryColor[playerid]--;
		if(PrimaryColor[playerid] < 0) PrimaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[7]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		SecondaryColor[playerid]++;
		if(SecondaryColor[playerid] > 255) SecondaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[8]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		SecondaryColor[playerid]--;
		if(SecondaryColor[playerid] < 0) SecondaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(ColorTD[11] <= clickedid <= ColorTD[14]) {
		new i = _:clickedid - _:ColorTD[11];
		if(i == VinylJob[playerid]) return 1;
		new curvin = 0;
		TextDrawHideForPlayer(playerid,ColorTD[16+VinylJob[playerid]]);
		if(curvin == i) {
			if(ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] -= VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = false;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),curvin-1), SetPVarInt(playerid, "PaintJob", curvin-1);
			}
		}
		else {
			if(!ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] += VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = true;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
			else {
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
		}
		TextDrawShowForPlayer(playerid,ColorTD[16+i]);
		VinylJob[playerid] = i;
		return 1;
	}
	else if(clickedid == ColorTD[15]) {
		if(RepaintValue[playerid] == 0 && !ChangedVinylJob[playerid]) return ErrorMessage(playerid, "Ви не вибрали колір транспорта");

		new price;
		if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
			price = (RepaintValue[playerid]-seller);
		}
		else {
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
		    else price = RepaintValue[playerid];
		}

		if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid, "У Вас недостаточно коштів");
		GiveMoney(playerid,-price,"Покраска");
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		gPlayerCars[playerid][carColor_one][GetNearestCar(playerid)] = PrimaryColor[playerid];
		gPlayerCars[playerid][carColor_two][GetNearestCar(playerid)] = SecondaryColor[playerid];
		gPlayerCars[playerid][carPaintJob][GetNearestCar(playerid)] = GetPVarInt(playerid, "PaintJob");
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][0] = PrimaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][1] = SecondaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vPaintJob] = GetPVarInt(playerid, "PaintJob");
		if(ChangedPrimaryColor[playerid]) ChangedPrimaryColor[playerid] = false;
		if(ChangedSecondaryColor[playerid]) ChangedSecondaryColor[playerid] = false;
		if(ChangedVinylJob[playerid]) ChangedVinylJob[playerid] = false;
		RepaintValue[playerid] = 0;
		PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
		PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
		return 1;
	}
	else if(clickedid == CustomTD[2]) {
		if(CustomType[playerid] == 11) return 1;
		new str[64],model,value;
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) RemoveVehicleComponent(GetPlayerVehicleID(playerid),model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomType[playerid]++;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 11) TextDrawHideForPlayer(playerid,CustomTD[2]);
		else TextDrawShowForPlayer(playerid,CustomTD[3]);
		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,price);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
	else if(GetPVarInt(playerid,"buy_accses")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			accs_select(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			accs_select(playerid, 1);
		}
	    else if(clickedid == buy_skins[0]) {
	    	if(PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] != 0) {
				D(playerid, D_BUYACS_3, DSM,""YELLOW"Помилка","\n\n"W"У вас уже є річ в цьому слоті!\n"YELLOW"Замінити її?\n\n", "Так", "Ні");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
			}
			else {
				if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
		            AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
		        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		        	buyacces(playerid);
		        	return true;
				}
				if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
					gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
					bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
				}
				SendOk(playerid, "Вітаємо з покупкою Аксесуара.");
				SendOk(playerid, "Меню управления аксессуарами: "W"(/mm > особисті налаштування > Аксесуари)");
				GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксесуара");
				PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] = GetPVarInt(playerid, "id_acs"); // записуємо ид об'єкта в слой
				PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs")] = 1;
				save_slotitem(playerid);
				save_slotitem_use(playerid);
				accs_close(playerid);
				DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				buyacces(playerid);
			}
		}
		else if(clickedid == buy_skins[1]) {
			RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "slot_acs"));
			AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
			accs_close(playerid);
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		}
	}
	else if(clickedid == ColorTD[5]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		PrimaryColor[playerid]++;
		if(PrimaryColor[playerid] > 255) PrimaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[6]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		PrimaryColor[playerid]--;
		if(PrimaryColor[playerid] < 0) PrimaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[7]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		SecondaryColor[playerid]++;
		if(SecondaryColor[playerid] > 255) SecondaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[8]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		SecondaryColor[playerid]--;
		if(SecondaryColor[playerid] < 0) SecondaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(ColorTD[11] <= clickedid <= ColorTD[14]) {
		new i = _:clickedid - _:ColorTD[11];
		if(i == VinylJob[playerid]) return 1;
		new curvin = 0;
		TextDrawHideForPlayer(playerid,ColorTD[16+VinylJob[playerid]]);
		if(curvin == i) {
			if(ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] -= VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = false;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),curvin-1), SetPVarInt(playerid, "PaintJob", curvin-1);
			}
		}
		else {
			if(!ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] += VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = true;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
			else {
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
		}
		TextDrawShowForPlayer(playerid,ColorTD[16+i]);
		VinylJob[playerid] = i;
		return 1;
	}
	else if(clickedid == ColorTD[15]) {
		if(RepaintValue[playerid] == 0 && !ChangedVinylJob[playerid]) return ErrorMessage(playerid, "Ви не вибрали колір транспорта");

		new price;
		if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
			price = (RepaintValue[playerid]-seller);
		}
		else {
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
		    else price = RepaintValue[playerid];
		}

		if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid, "У Вас недостаточно коштів");
		GiveMoney(playerid,-price,"Покраска");
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		gPlayerCars[playerid][carColor_one][GetNearestCar(playerid)] = PrimaryColor[playerid];
		gPlayerCars[playerid][carColor_two][GetNearestCar(playerid)] = SecondaryColor[playerid];
		gPlayerCars[playerid][carPaintJob][GetNearestCar(playerid)] = GetPVarInt(playerid, "PaintJob");
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][0] = PrimaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][1] = SecondaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vPaintJob] = GetPVarInt(playerid, "PaintJob");
		if(ChangedPrimaryColor[playerid]) ChangedPrimaryColor[playerid] = false;
		if(ChangedSecondaryColor[playerid]) ChangedSecondaryColor[playerid] = false;
		if(ChangedVinylJob[playerid]) ChangedVinylJob[playerid] = false;
		RepaintValue[playerid] = 0;
		PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
		PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
		return 1;
	}
	else if(clickedid == CustomTD[2]) {
		if(CustomType[playerid] == 11) return 1;
		new str[64],model,value;
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) RemoveVehicleComponent(GetPlayerVehicleID(playerid),model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomType[playerid]++;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 11) TextDrawHideForPlayer(playerid,CustomTD[2]);
		else TextDrawShowForPlayer(playerid,CustomTD[3]);
		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,price);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
	else if(GetPVarInt(playerid,"buy_accses")) {
		if(_:clickedid == 65535) SelectTextDraw(playerid, 0x0080FFFF);
		if(clickedid == buy_skins[5]) {
			accs_select(playerid, 0);
		}
		else if(clickedid == buy_skins[6]) {
			accs_select(playerid, 1);
		}
	    else if(clickedid == buy_skins[0]) {
	    	if(PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] != 0) {
				D(playerid, D_BUYACS_3, DSM,""YELLOW"Помилка","\n\n"W"У вас уже є річ в цьому слоті!\n"YELLOW"Замінити її?\n\n", "Так", "Ні");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
			}
			else {
				if(GetPlayerMoneyEx(playerid) < GetPVarInt(playerid, "price_acs")) {
		            AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
		        	DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		        	buyacces(playerid);
		        	return true;
				}
				if(gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] - 80 > 0) {
					gBusiness[TI[playerid][tSelectedBusinessID]][bizzProduct] -= 80;
					bizz_pay(TI[playerid][tSelectedBusinessID],GetPVarInt(playerid, "price_acs"));
				}
				SendOk(playerid, "Вітаємо з покупкою Аксесуара.");
				SendOk(playerid, "Меню управления аксессуарами: "W"(/mm > особисті налаштування > Аксесуари)");
				GiveMoney(playerid,-GetPVarInt(playerid, "price_acs"),"покупка аксесуара");
				PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")] = GetPVarInt(playerid, "id_acs"); // записуємо ид об'єкта в слой
				PlayerInfo[playerid][pSlotItem_Use][GetPVarInt(playerid, "slot_acs")] = 1;
				save_slotitem(playerid);
				save_slotitem_use(playerid);
				accs_close(playerid);
				DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
				for(new i=0; i<9; i++) {
					TextDrawHideForPlayer(playerid,buy_skins[i]);
				}
				PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
				CancelSelectTextDraw(playerid);
				buyacces(playerid);
			}
		}
		else if(clickedid == buy_skins[1]) {
			RemovePlayerAttachedObject(playerid,GetPVarInt(playerid, "slot_acs"));
			AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][GetPVarInt(playerid, "slot_acs")],GetPlayerSkin(playerid));
			accs_close(playerid);
			for(new i=0; i<9; i++) {
				TextDrawHideForPlayer(playerid,buy_skins[i]);
			}
			PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "slot_acs"),DeletePVar(playerid, "id_acs"),DeletePVar(playerid, "price_acs");
		}
	}
	else if(clickedid == ColorTD[5]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		PrimaryColor[playerid]++;
		if(PrimaryColor[playerid] > 255) PrimaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[6]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][3]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][3],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][3]);
		PrimaryColor[playerid]--;
		if(PrimaryColor[playerid] < 0) PrimaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][2]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][2],RGBArray[PrimaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][2]);
		new curcol = PrimaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][1]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][1],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][1]);
		if(PrimaryColor[playerid] == VehicleInfo[vehicleid][vColor][0]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedPrimaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedPrimaryColor[playerid]) {
			new str[32];
			ChangedPrimaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[7]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		SecondaryColor[playerid]++;
		if(SecondaryColor[playerid] > 255) SecondaryColor[playerid] = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]+1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol > 255) curcol = 0;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(clickedid == ColorTD[8]) {
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][6]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][6],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][6]);
		SecondaryColor[playerid]--;
		if(SecondaryColor[playerid] < 0) SecondaryColor[playerid] = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][5]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][5],RGBArray[SecondaryColor[playerid]]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][5]);
		new curcol = SecondaryColor[playerid]-1,vehicleid = GetPlayerVehicleID(playerid);
		if(curcol < 0) curcol = 255;
		PlayerTextDrawHide(playerid,ColorTDPl[playerid][4]);
		PlayerTextDrawColor(playerid,ColorTDPl[playerid][4],RGBArray[curcol]);
		PlayerTextDrawShow(playerid,ColorTDPl[playerid][4]);
		if(SecondaryColor[playerid] == VehicleInfo[vehicleid][vColor][1]) {
			new str[32];
			RepaintValue[playerid] -= PAINT_VALUE;
			ChangedSecondaryColor[playerid] = false;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		else if(!ChangedSecondaryColor[playerid]) {
			new str[32];
			ChangedSecondaryColor[playerid] = true;
			RepaintValue[playerid] += PAINT_VALUE;
			format(str,32,"$%d",RepaintValue[playerid]);
			PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
		}
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		return 1;
	}
	else if(ColorTD[11] <= clickedid <= ColorTD[14]) {
		new i = _:clickedid - _:ColorTD[11];
		if(i == VinylJob[playerid]) return 1;
		new curvin = 0;
		TextDrawHideForPlayer(playerid,ColorTD[16+VinylJob[playerid]]);
		if(curvin == i) {
			if(ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] -= VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = false;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),curvin-1), SetPVarInt(playerid, "PaintJob", curvin-1);
			}
		}
		else {
			if(!ChangedVinylJob[playerid]) {
				new str[32];
				RepaintValue[playerid] += VYNIL_VALUE;

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (RepaintValue[playerid]-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
						price = (RepaintValue[playerid]-seller);
					}
				    else price = RepaintValue[playerid];
				}

				format(str,32,"$%d",price);
				PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],str);
				ChangedVinylJob[playerid] = true;
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
			else {
				if(i == 0) ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),3), SetPVarInt(playerid, "PaintJob", 3);
				else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),i-1), SetPVarInt(playerid, "PaintJob", i-1);
			}
		}
		TextDrawShowForPlayer(playerid,ColorTD[16+i]);
		VinylJob[playerid] = i;
		return 1;
	}
	else if(clickedid == ColorTD[15]) {
		if(RepaintValue[playerid] == 0 && !ChangedVinylJob[playerid]) return ErrorMessage(playerid, "Ви не вибрали колір транспорта");

		new price;
		if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(RepaintValue[playerid]/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
			price = (RepaintValue[playerid]-seller);
		}
		else {
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(RepaintValue[playerid]/100*BonusInfo[act_tune]);
				price = (RepaintValue[playerid]-seller);
			}
		    else price = RepaintValue[playerid];
		}

		if(PlayerInfo[playerid][pCash] < price) return ErrorMessage(playerid, "У Вас недостаточно коштів");
		GiveMoney(playerid,-price,"Покраска");
		ChangeVehicleColor(GetPlayerVehicleID(playerid),PrimaryColor[playerid],SecondaryColor[playerid]);
		gPlayerCars[playerid][carColor_one][GetNearestCar(playerid)] = PrimaryColor[playerid];
		gPlayerCars[playerid][carColor_two][GetNearestCar(playerid)] = SecondaryColor[playerid];
		gPlayerCars[playerid][carPaintJob][GetNearestCar(playerid)] = GetPVarInt(playerid, "PaintJob");
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][0] = PrimaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vColor][1] = SecondaryColor[playerid];
		VehicleInfo[GetPlayerVehicleID(playerid)][vPaintJob] = GetPVarInt(playerid, "PaintJob");
		if(ChangedPrimaryColor[playerid]) ChangedPrimaryColor[playerid] = false;
		if(ChangedSecondaryColor[playerid]) ChangedSecondaryColor[playerid] = false;
		if(ChangedVinylJob[playerid]) ChangedVinylJob[playerid] = false;
		RepaintValue[playerid] = 0;
		PlayerTextDrawSetString(playerid,ColorTDPl[playerid][0],"$0");
		PlayerPlaySound(playerid,1134,0.0,0.0,0.0);
		return 1;
	}
	else if(clickedid == CustomTD[2]) {
		if(CustomType[playerid] == 11) return 1;
		new str[64],model,value;
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) RemoveVehicleComponent(GetPlayerVehicleID(playerid),model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomType[playerid]++;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 11) TextDrawHideForPlayer(playerid,CustomTD[2]);
		else TextDrawShowForPlayer(playerid,CustomTD[3]);
		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,price);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
*/
	else if(clickedid == CustomTD[20]) {
		if(CustomListNum[playerid] >= TypeBorder[CustomType[playerid]]-1) return 1;
		new model,str[64],value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomListNum[playerid]++;
		if(CustomListNum[playerid] == 1) TextDrawShowForPlayer(playerid,CustomTD[4]);
		if(CustomListNum[playerid] >= TypeBorder[CustomType[playerid]]-1) TextDrawHideForPlayer(playerid,CustomTD[20]);
		CustomLimitNum[playerid]++;
		if(CustomLimitNum[playerid] > 4) {
			for(new i = CustomListNum[playerid]-4, b = 0; b < 5; i++,b++) {
				format(str,64,"TUN[%d][Value]",i);
				value = GetGVarInt(str,CustomType[playerid]);

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (value-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(value/100*BonusInfo[act_tune]);
						price = (value-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(value/100*BonusInfo[act_tune]);
						price = (value-seller);
					}
				    else price = value;
				}

				format(str,64,"TUN[%d][Name]",i);
				GetGVarString(str,str,64,CustomType[playerid]);
				format(str,64,"%s~n~$%d",str,price);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+b],str);
				format(str,64,"TUN[%d][ModelID]",i);
				model = GetGVarInt(str,CustomType[playerid]);
				TextDrawHideForPlayer(playerid,CustomTD[15+b]);
				if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) TextDrawShowForPlayer(playerid,CustomTD[15+b]);
				else if(b == 4) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
			}
			CustomLimitNum[playerid] = 4;
		}
		else {
			TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]-1]);
			TextDrawShowForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		return 1;
	}
	else if(clickedid == CustomTD[4]) {
		if(CustomListNum[playerid] == 0) return 1;
		new model,str[64],value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomListNum[playerid]--;
		if(CustomListNum[playerid] == 0) TextDrawHideForPlayer(playerid,CustomTD[4]);
		if(CustomListNum[playerid] == TypeBorder[CustomType[playerid]]-2) TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomLimitNum[playerid]--;
		if(CustomLimitNum[playerid] < 0) {
			for(new i = CustomListNum[playerid], b = 0; b < 5; i++,b++) {
				format(str,64,"TUN[%d][Value]",i);
				value = GetGVarInt(str,CustomType[playerid]);

				new price;
				if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
					new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
					price = (value-seller);
				}
				else {
					if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
						new seller = floatround(value/100*BonusInfo[act_tune]);
						price = (value-seller);
					}
					else if(BonusInfo[act_select] == 2) {
						new seller = floatround(value/100*BonusInfo[act_tune]);
						price = (value-seller);
					}
				    else price = value;
				}

				format(str,64,"TUN[%d][Name]",i);
				GetGVarString(str,str,64,CustomType[playerid]);
				format(str,64,"%s~n~$%d",str,price);
				PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+b],str);
				format(str,64,"TUN[%d][ModelID]",i);
				model = GetGVarInt(str,CustomType[playerid]);
				TextDrawHideForPlayer(playerid,CustomTD[15+b]);
				if(!IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) TextDrawShowForPlayer(playerid,CustomTD[15+b]);
				else if(b == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
			}
			CustomLimitNum[playerid] = 0;
		}
		else {
			TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]+1]);
			TextDrawShowForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
			format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
			model = GetGVarInt(str,CustomType[playerid]);
			if(IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		return 1;
	}
	else if(clickedid == CustomTD[3]) {
		if(CustomType[playerid] == 0) return 1;
		new str[64],model,value,vehicleid = GetPlayerVehicleID(playerid);
		format(str,64,"TUN[%d][ModelID]",CustomListNum[playerid]);
		model = GetGVarInt(str,CustomType[playerid]);
		if(IsVehicleUpgradeCompatible(GetVehicleModel(vehicleid),model)) RemoveVehicleComponent(vehicleid,model);
		LoadTuning(playerid,house_car[playerid][GetNearestCar(playerid)],GetNearestCar(playerid));
		CustomType[playerid]--;
		PlayerTextDrawSetString(playerid,CustomTDPl[playerid][0],CustomTypeName[CustomType[playerid]]);
		if(CustomType[playerid] == 0) TextDrawHideForPlayer(playerid,CustomTD[3]);
		else TextDrawShowForPlayer(playerid,CustomTD[2]);

		TextDrawHideForPlayer(playerid,CustomTD[10+CustomLimitNum[playerid]]);
		TextDrawShowForPlayer(playerid,CustomTD[10]);
		TextDrawHideForPlayer(playerid,CustomTD[4]);
		TextDrawShowForPlayer(playerid,CustomTD[20]);
		CustomListNum[playerid] = 0;
		CustomLimitNum[playerid] = 0;
		for(new i = 0; i < 5; i++) {
			TextDrawHideForPlayer(playerid,CustomTD[5+i]);
			PlayerTextDrawHide(playerid,CustomTDPl[playerid][1+i]);
			TextDrawHideForPlayer(playerid,CustomTD[15+i]);
		}
		for(new i = 0; i < 5; i++) {
			if(i > TypeBorder[CustomType[playerid]]-1) break;
			TextDrawShowForPlayer(playerid,CustomTD[5+i]);
			format(str,64,"TUN[%d][Value]",i);
			value = GetGVarInt(str,CustomType[playerid]);

			new price;
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
				price = (value-seller);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
				else if(BonusInfo[act_select] == 2) {
					new seller = floatround(value/100*BonusInfo[act_tune]);
					price = (value-seller);
				}
			    else price = value;
			}

			format(str,64,"TUN[%d][Name]",i);
			GetGVarString(str,str,64,CustomType[playerid]);
			format(str,64,"%s~n~$%d",str,price);
			PlayerTextDrawSetString(playerid,CustomTDPl[playerid][1+i],str);
			PlayerTextDrawShow(playerid,CustomTDPl[playerid][1+i]);
			format(str,64,"TUN[%d][ModelID]",i);
			model = GetGVarInt(str,CustomType[playerid]);
			if(!IsVehicleUpgradeCompatible(GetVehicleModel(GetPlayerVehicleID(playerid)),model)) TextDrawShowForPlayer(playerid,CustomTD[15+i]);
			else if(i == 0) ACC_AddVehicleComponent(house_car[playerid][GetNearestCar(playerid)],model);
		}
		CameraViewChange(playerid,CustomType[playerid]);
		return 1;
	}
	else if(clickedid == CustomTD[21]) {
		new str[64],value;
		format(str,64,"TUN[%d][Value]",CustomListNum[playerid]);
		value = GetGVarInt(str,CustomType[playerid]);

		new price;
		if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(value/100*vip_status[PlayerInfo[playerid][pVips]][vip_tune]);
			price = (value-seller);
		}
		else {
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(value/100*BonusInfo[act_tune]);
				price = (value-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(value/100*BonusInfo[act_tune]);
				price = (value-seller);
			}
		    else price = value;
		}

		new string[156];
		format(string,sizeof(string),"\n\n"W"Ви дійсно хочете установить деталь за "O"$%d?\n\n",price);
		D(playerid, D_TUNE_UPDATE, DSM, ""YELLOW"Установка детали", string, "Установить", "Відміна");
		return 1;
	}
	else if(Casino_Flag[playerid][show_casino_td] == 1 && Casino_Flag[playerid][select_casino_table] != -1){
		if(_:clickedid == INVALID_TEXT_DRAW) {
			if((InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start] && Casino_Flag[playerid][casino_crup] == 1) || (Casino_Flag[playerid][casino_bet_cash] != 0 && InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start])) return ErrorMessage(playerid,"Ви не можете покинуть партию пока идёт игра"),SelectTextDraw(playerid,0x9BF2EAAA);
			else return ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table], false);
		}
		else if(clickedid == Casino_TD[Casino_TD_Exit]) {
			if((InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start] && Casino_Flag[playerid][casino_crup] == 1) || (Casino_Flag[playerid][casino_bet_cash] != 0 && InfoDice[Casino_Flag[playerid][select_casino_table]][dice_game_start])) return ErrorMessage(playerid,"Ви не можете покинуть партию пока идёт игра"),SelectTextDraw(playerid,0x9BF2EAAA);
			else return ShowCasino_TD(playerid, Casino_Flag[playerid][select_casino_table]);
		}
		else if(clickedid == Casino_TD[Casino_TD_Set_Bet]) {
			new s = Casino_Flag[playerid][select_casino_table];
			if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"В данный момент идёт игра");
			if(Casino_Flag[playerid][casino_crup] == 1) {
				if(InfoDice[s][dice_bank] != 0) return ErrorMessage(playerid,"Кто то из гравців уже поставил ставку");
				D(playerid, D_SET_BET, DSI, ""YELLOW"Ставка", ""W"Введіть сумму ставки!\nСтавка повинна бути не менее "ORANGE"$"#MIN_STAVKA"\n"W"и не более "ORANGE"$"#MAX_STAVKA"", "Далі", "Відміна");
			}
			else {
				if(InfoDice[s][dice_stavka] == 0) return ErrorMessage(playerid,"Ставка не встановлена");
				if(Casino_Flag[playerid][casino_bet_cash] != 0) return ErrorMessage(playerid,"Ви уже поставили ставку");
				if(GetPlayerMoneyEx(playerid) < InfoDice[s][dice_stavka]) return ErrorMessage(playerid,"У Вас недостаточно грошей щоб Поставити ставку");
				GiveMoney(playerid,-InfoDice[s][dice_stavka],"ставка в казино");
				Casino_Flag[playerid][casino_bet_cash] = InfoDice[s][dice_stavka];
				InfoDice[s][dice_bank] += InfoDice[s][dice_stavka];
				UpdateTextCasino(s);
			}
			return 1;
		}
		else if(clickedid == Casino_TD[Casino_TD_Dice]) {
			new s = Casino_Flag[playerid][select_casino_table];
			if(InfoDice[s][dice_stavka] == 0) return ErrorMessage(playerid,"Ставка не встановлена");
			if(Casino_Flag[playerid][casino_crup] == 1) {
				if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"В данный момент идёт игра");
				new count_player = 0, count_player2 = 0;
				for(new p = 0; p < 5; p++) {
					if(InfoDice[s][dice_gamer][p]==INVALID_PLAYER_ID) continue;
					if(Casino_Flag[InfoDice[s][dice_gamer][p]][casino_bet_cash] != 0) count_player2++;
					count_player++;
				}
				if(count_player2 < 2) return ErrorMessage(playerid,"Для того щоб почати гру, нужно два гравця установивших ставку");
				else if(InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"Гра запущена");
				InfoDice[s][dice_game_start] = true;
				InfoDice[s][dice_game_start_time] = gettime() + 30;
				InfoDice[s][dice_game_start_timer] = SetTimerEx("UpdateGameDice", 1000, 1, "i", s);
			}
			else {
				if(!InfoDice[s][dice_game_start]) return ErrorMessage(playerid,"Гра еще не запущена");
				if(Casino_Flag[playerid][casino_bet_cash] == 0) return ErrorMessage(playerid,"Ви не ставили ставку");
				for(new c = 0; c < 5; c++) {
					if(InfoDice[s][dice_gamer][c] == playerid) {
						if(InfoDice[s][dice_score][c] != 0) return ErrorMessage(playerid,"Ви уже кинули кости");
						InfoDice[s][dice_score][c] = dice_random[random(sizeof(dice_random))];
						UpdateScores(s);
						UpdateTextCasino(s);
						break;
					}
				}
			}
		}
	}
	if(func_bcolor[1] <= clickedid <= func_bcolor[21] && GetPVarInt(playerid,"select_colortd")) {
		for(new i = 1; i <= 21; i++) {
			if(clickedid == func_bcolor[i]) {
				if(!GetPVarInt(playerid,"SelectButton")) SetPVarInt(playerid,"SelectButton",i);
				else if(GetPVarInt(playerid,"color_shashka")) {
					FuncBizz[PlayerInfo[playerid][pBusiness]][funcbShash] = i;
					UpdateFuncBizzData(PlayerInfo[playerid][pBusiness],"color_shash",FuncBizz[PlayerInfo[playerid][pBusiness]][funcbShash]);
					update_bfunc(0,PlayerInfo[playerid][pBusiness],FuncBizz[PlayerInfo[playerid][pBusiness]][funcbShash]);
					cancel_selectcolor(playerid);
					SendClientMessage(playerid,CGOLD,"ви змінили колір таксопарка. Всі шашки на ваших автомобілях які знаходилися на стоянці були перефарбовані");
					SendClientMessage(playerid,CGOLD,"Остальные шашки на автомобілях изменят колір после респавна");
					return 1;
				}
				else if(GetPVarInt(playerid,"color_allcolor")) {
					FuncBizz[PlayerInfo[playerid][pBusiness]][funcbColor] = i;
					UpdateFuncBizzData(PlayerInfo[playerid][pBusiness],"color",FuncBizz[PlayerInfo[playerid][pBusiness]][funcbColor]);
					update_bfunc(1,PlayerInfo[playerid][pBusiness],FuncBizz[PlayerInfo[playerid][pBusiness]][funcbColor]);
					cancel_selectcolor(playerid);
					if(gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzType] == 11) {
						SendClientMessage(playerid,CGOLD,"Ви змінили колір таксопарка. Всі автомобілі які знаходилися на стоянці були перефарбовані");
						SendClientMessage(playerid,CGOLD,"Остальные автомобили изменят колір после респавна");
					}
					else if(gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzType] == 14) {
						SendClientMessage(playerid,CGOLD,"Ви изменили колір транспортной компании. які знаходилися на стоянці були перефарбовані");
						SendClientMessage(playerid,CGOLD,"Остальные автомобили изменят колір после респавна");
					}
					else if(gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzType] == 15) {
						SendClientMessage(playerid,CGOLD,"Ви изменили колір банківського відділення");
					}
					return 1;
				}
			}
		}
		return 1;
	}
    return 1;
}
stock ChosePlayerSkin(playerid) {
	switch(PlayerInfo[playerid][pSex]) {
	case 1: SetPVarInt(playerid,"join_ped_item",Random(0,7));
	case 2: SetPVarInt(playerid,"join_ped_item",Random(8,14));
	}
	CancelSelectTextDraw(playerid);
    new year, month, day;
    getdate(year, month, day);
	GetPlayerIp(playerid,PlayerInfo[playerid][pIpReg],32);
    new query[512];
    mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_ACCOUNTS"` (`Name`, `pKey`, `pSex`, `pDataReg`, `pIpReg`, `pDrug`, `pEmail`,`Skin`) VALUES ('%s', MD5('%s'), '%i', '%02i/%02i/%02i', '%s', '%s', '%s', '%i')"
    ,player_name[playerid],player_pass[playerid],PlayerInfo[playerid][pSex],day,month,year,PlayerInfo[playerid][pIpReg],PlayerInfo[playerid][pDrug],PlayerInfo[playerid][pEmail],skin_register[GetPVarInt(playerid,"join_ped_item")][0]);
    mysql_tquery(connects,query,"player_register","i",playerid);
	return A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
}
CB: SpcarsAvto(playerid) {
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(IsVehicleOccupied(i)) continue; 
		if(GetVehicleModel(i) == 450) continue; 
		SetVehicleToRespawn(i);
	}
	new string[100];
	format(string,sizeof(string),"Адміністратор: %s заспавнил машини",player_name[playerid]);
	AdmMSG(COLOR_LIGHTRED,string,1);
}
public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid,
                                   Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
                                   Float:fRotX, Float:fRotY, Float:fRotZ,
                                   Float:fScaleX, Float:fScaleY, Float:fScaleZ ) {
	new string[144];
	format(string,sizeof(string),"[INDEX: %d] [MODEL: %d] [BONE: %d] [X: %.2f] [Y: %.2f] [Z: %.2f] [RX: %.2f] [RY: %.2f] [RZ: %.2f] [SX: %.2f] [SY: %.2f] [SZ: %.2f]",index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
	SendClientMessage(playerid,-1,string);
    return 1;
}
stock load_vote() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `vote`");
	new rows = cache_num_rows();
	if(rows) {
		for(new i=0; i<rows; i++) {
			cache_get_value_index(i,0,vote_name[i],25);
			cache_get_value_index_int(i,1,vote_count[i]);
		}
	}
	cache_delete(result);
	print ("[Загрузка] Голосування завантажено");
	return 1;
}
stock load_bint() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `bints`");
	new rows = cache_num_rows();
	if(rows != BINT_COUNT) print("кількість БИНТ'ов в базе не совпадает с предопределным количеством");
	else for(new i; i < rows;i++) {
		cache_get_value_name_int(i,"id", gBints[i][bintID]);
		cache_get_value_name_int(i,"interior", gBints[i][bintInterior]);

		cache_get_value_name_float(i, "x", gBints[i][bintX]);
        cache_get_value_name_float(i, "y", gBints[i][bintY]);
        cache_get_value_name_float(i, "z", gBints[i][bintZ]);
        cache_get_value_name_float(i, "r", gBints[i][bintR]);
        
        cache_get_value_name_float(i, "xb", gBints[i][bintXB]);
        cache_get_value_name_float(i, "yb", gBints[i][bintYB]);
        cache_get_value_name_float(i, "zb", gBints[i][bintZB]);

        cache_get_value_name(i, "name", gBints[i][bintName], 32);
		
		gBintEnterArea[i] = CreateDynamicSphere(gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ],1.0);
		CreateDynamicPickup(1318,1,gBints[i][bintX],gBints[i][bintY],gBints[i][bintZ],-1);
		switch(gBints[i][bintID]) {
			case 22: CreateDynamicPickup(19893,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1);
			case 25: CreateDynamicPickup(1275,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1);
			default: CreateDynamicPickup(1239,1,gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],-1);
		}
	}
	for(new i = 0;i<BINT_COUNT;i++) gBintBuyArea[i] = CreateDynamicSphere(gBints[i][bintXB],gBints[i][bintYB],gBints[i][bintZB],1.0);
	printf("[Загрузка] Інтер'єри бізнесів успішно завантажені (%i шт.)",rows);
	cache_delete(result);
	return true;
}
stock load_market() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `blackmarket`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++) {
			cache_get_value_index_int(i,1, black_prods[0]);
			cache_get_value_index_int(i,2, black_prods[1]);
			cache_get_value_index_int(i,3, black_prods[2]);
			cache_get_value_index_int(i,4, black_prods[3]);
			cache_get_value_index_int(i,5, black_prods[4]);

			cache_get_value_index_int(i,6, black_prods[5]);
			cache_get_value_index_int(i,7, black_prods[6]);
			cache_get_value_index_int(i,8, black_prods[7]);
			cache_get_value_index_int(i,9, black_prods[8]);

			cache_get_value_index_int(i,10, black_prods[9]);
		}
	}
    cache_delete(result);
    printf("[Загрузка] Чорний ринок успішно завантажений (%i шт.)",rows);
	check_terrs();
    return true;
}
stock load_labrary() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `labrary`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++) {
			new data[128];
			cache_get_value(0, "actor_1", data), sscanf(data,"p<|>a<i>[8]",l_actor[0]);
			cache_get_value(0, "actor_2", data), sscanf(data,"p<|>a<i>[8]",l_actor[1]);
			cache_get_value(0, "actor_3", data), sscanf(data,"p<|>a<i>[8]",l_actor[2]);

			cache_get_value(0, "actor_t1", data), sscanf(data,"p<|>a<i>[8]",l_actort[0]);
			cache_get_value(0, "actor_t2", data), sscanf(data,"p<|>a<i>[8]",l_actort[1]);
			cache_get_value(0, "actor_t3", data), sscanf(data,"p<|>a<i>[8]",l_actort[2]);
		}
	}
	for(new gang = 0; gang < 8; gang ++) {
		if(l_actor[0][gang]) UseLabrary(0,gang,1);
		if(l_actor[1][gang]) UseLabrary(1,gang,1);
		if(l_actor[2][gang]) UseLabrary(2,gang,1);
	}
    cache_delete(result);
    printf("[Загрузка] Лабораторій успішно завантажено(%i шт.)",rows);
    return true;
}
stock load_fracgun() {
	new Cache:result, rows;
	result = mysql_query (connects, "SELECT * FROM `frac_weapon`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows ; i++) {
		   new slot,fraction;
		   cache_get_value_int(i,"Slot",slot);
		   cache_get_value_int(i,"Fraction",fraction);
		   cache_get_value_int(i,"fwID",FW[slot][fraction][fwID]);
		   cache_get_value_int(i,"fwGunID",FW[slot][fraction][fwGunID]);
		   cache_get_value_int(i,"fwGunAmmo",FW[slot][fraction][fwGunAmmo]);
		   cache_get_value_int(i,"fwArmor",FW[slot][fraction][fwArmor]);
		   cache_get_value_int(i,"fwRank",FW[slot][fraction][fwRank]);
		   cache_get_value(i, "fwName", FW[slot][fraction][fwName],64);
		}
	}
	cache_delete(result);
	print("[Загрузка] Зброя фракцій успішно завантажена");
	return 1;
}
stock load_economy() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `economy`");
	rows = cache_num_rows();
    if(rows) {
		new data[256];
		cache_get_value(0, "salary_pd", data), sscanf(data,"p<|>a<i>[12]",FracSalary[0]);
		cache_get_value(0, "salary_fbi", data), sscanf(data,"p<|>a<i>[11]",FracSalary[1]);
		cache_get_value(0, "salary_mayor", data), sscanf(data,"p<|>a<i>[7]",FracSalary[2]);
		cache_get_value(0, "salary_army", data), sscanf(data,"p<|>a<i>[15]",FracSalary[3]);
		cache_get_value(0, "salary_medics", data), sscanf(data,"p<|>a<i>[10]",FracSalary[4]);
		cache_get_value(0, "salary_news", data), sscanf(data,"p<|>a<i>[10]",FracSalary[5]);
		cache_get_value(0, "salary_mafia", data), sscanf(data,"p<|>a<i>[10]",FracSalary[6]);
		cache_get_value(0, "salary_gang", data), sscanf(data,"p<|>a<i>[10]",FracSalary[7]);
		cache_get_value(0, "salary_whitehouse", data), sscanf(data,"p<|>a<i>[12]",FracSalary[8]);
		cache_get_value(0, "salary_licensers", data), sscanf(data,"p<|>a<i>[11]",FracSalary[9]);

		cache_get_value_name_int(0,"work_gun", WorkSalary[0]);
		cache_get_value_name_int(0,"work_oil", WorkSalary[1]);
		cache_get_value_name_int(0,"work_alco", WorkSalary[2]);
		cache_get_value_name_int(0,"work_apple", WorkSalary[3]);
		cache_get_value_name_int(0,"work_wood", WorkSalary[4]);

		cache_get_value_name_int(0,"nalog_1", Nalog[0]);//процентов от суммы дохода за час
		cache_get_value_name_int(0,"nalog_2", Nalog[1]);//Пенсійний вік
		cache_get_value_name_int(0,"nalog_3", Nalog[2]);//розмір пенсії
		cache_get_value_name_int(0,"nalog_4", Nalog[3]);//процент от прибыли бізнеса государству
		cache_get_value_name_int(0,"nalog_5", Nalog[4]);//процент от прибыли бізнеса мафии
		cache_get_value_name_int(0,"nalog_6", Nalog[5]);//налог при переводе гравцю виртуальной валюты через банк
		cache_get_value_name_int(0,"nalog_7", Nalog[6]);//20 % от гос. Стоимости будинку и 50% от купленых покращень ( при слёте ) – 80 % возвращается гравцю.
    }
    cache_delete(result);
    print("[Загрузка] Економіта сервера успішно завантажена");
    return true;
}
stock load_atm() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `atms`");
	rows = cache_num_rows();
	if(!rows) print("Не обнаружено ATMS в базе");
	else for(new i = 0; i < rows;i++) {
		new atmID;

		cache_get_value_int(i, "atmID", atmID);
		
		cache_get_value_float(i, "ATM_X", ATMData[atmID][ATM_Pos][0]);
		cache_get_value_float(i, "ATM_Y", ATMData[atmID][ATM_Pos][1]);
		cache_get_value_float(i, "ATM_Z", ATMData[atmID][ATM_Pos][2]);
		cache_get_value_float(i, "ATM_ROTX", ATMData[atmID][ATM_Pos][3]);
		cache_get_value_float(i, "ATM_ROTY", ATMData[atmID][ATM_Pos][4]);
		cache_get_value_float(i, "ATM_ROTZ", ATMData[atmID][ATM_Pos][5]);
		
		ATMData[atmID][atm_Taken] = 1;

		cache_get_value_int(i, "ATM_VW", ATMData[atmID][atm_VW]);
		cache_get_value_int(i, "ATM_INT", ATMData[atmID][atm_INT]);

		cache_get_value_int(i, "ATM_BANK", ATMData[atmID][atm_Bank]);
		cache_get_value_int(i, "ATM_BANKTIME", ATMData[atmID][atm_BankTime]);

		ATMData[atmID][atm_Object] = CreateDynamicObject(2754, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], 0.0, 0.0, ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);
		UpdateATMLabel(atmID);
	}
	cache_delete(result);
	printf("[Загрузка] Банкомати успішно завантажені (%i шт.)", rows);
	return 1;
}
stock load_funcbizz() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `business_func`");
	rows = cache_num_rows();
    if(rows >= MAX_BUSINESS_COUNT) print("кількість func бізнеса в базе превышает предопределнное количество");
	else if(!rows) print("Не обнаружено func бізнесов в базе");
	else for(new i = 0; i < rows;i++) {
		cache_get_value_name_int(i,"bizzID", FuncBizz[i][funcbID]);
		cache_get_value_name_int(i,"ID", FuncBizz[FuncBizz[i][funcbID]][funcbSlot]);
		cache_get_value_name(i, "name", FuncBizz[FuncBizz[i][funcbID]][funcbName], 20);
		cache_get_value_name(i, "name_car", FuncBizz[FuncBizz[i][funcbID]][funcbNameCar], 12);
		cache_get_value_name_int(i,"number", FuncBizz[FuncBizz[i][funcbID]][funcbNum]);
		new b_car[256],tarif[128];

		cache_get_value(i, "car", b_car), sscanf(b_car,"p<|>a<i>[20]",FuncBizz[FuncBizz[i][funcbID]][funcbCar]);
		cache_get_value(i, "tarif", tarif), sscanf(tarif,"p<|>a<i>[4]",FuncBizz[FuncBizz[i][funcbID]][funcbTarif]);
		cache_get_value_name_int(i,"color", FuncBizz[FuncBizz[i][funcbID]][funcbColor]);
		cache_get_value_name_int(i,"color_shash", FuncBizz[FuncBizz[i][funcbID]][funcbShash]);
		cache_get_value_name_int(i,"percent", FuncBizz[FuncBizz[i][funcbID]][funcbPercent]);
		cache_get_value_name_float(i,"percent2", FuncBizz[FuncBizz[i][funcbID]][funcbPercent2]);
		cache_get_value_name_int(i,"percent3", FuncBizz[FuncBizz[i][funcbID]][funcbPercent3]);
		switch(FuncBizz[i][funcbID]) {
			case 2..4,5..7: {
				biz_text[FuncBizz[FuncBizz[i][funcbID]][funcbSlot]] = CreateDynamicObject(19482, 2402.697021, -33.206501, 1030.597290, 0.000000, 0.000000, 0.000000, FuncBizz[i][funcbID], -1, -1, 50.00);
				new string[54];
				format(string,sizeof(string),"{%s}%s",color_td[FuncBizz[FuncBizz[i][funcbID]][funcbColor]][col_rgb],FuncBizz[FuncBizz[i][funcbID]][funcbName]);
				SetDynamicObjectMaterialText(biz_text[FuncBizz[FuncBizz[i][funcbID]][funcbSlot]], 0, string, 130, "Segoe Script", 50, 1, 0xFF000000, 0x00000000, 1);
				
				for(new z = 0; z < 20; z++) {
					if(FuncBizz[FuncBizz[i][funcbID]][funcbCar][z] == 0) {
						FuncBizz[FuncBizz[i][funcbID]][funcbCars][z] = INVALID_VEHICLE_ID;
						continue;
					}
					creare_funccar(FuncBizz[i][funcbID],z);
				}
			}
		}
    }
    cache_delete(result);
    printf("[Загрузка] Фракцій бізнесу успішно завантажено (%i шт.)",rows);
    return true;
}
stock load_fracfreez() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `fracmorozed`");
	rows = cache_num_rows();
    for(new f = 0; f < 8; f++) cache_get_value_index_int(0, f, fracmoroz[f]);
    cache_delete(result);
    printf("[Загрузка] Фріз банд/мафій успішно загружено(%i шт.)",rows);
    return true;
}
stock SetString(param_1[], const param_2[], size = 300) return strmid(param_1, param_2, 0, strlen(param_2), size);
stock load_business() {
    new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `business`");
	gBusinessCount = cache_num_rows();
	new sqlstring[67];
	if(gBusinessCount >= MAX_BUSINESS_COUNT) print("кількість бізнесов в базе превышает предопределнное количество");
	else if(!gBusinessCount) print("Не обнаружено бізнесов в базе");
	else for(new i; i<gBusinessCount;i++) {
		cache_get_value_name_int(i,"id", gBusiness[i][bizzID]);

        cache_get_value_name(i, "name", gBusiness[i][bizzName], 64);
        
        cache_get_value_name_int(i,"type", gBusiness[i][bizzType]);
        cache_get_value_name_int(i,"bint", gBusiness[i][bizzBint]);
        cache_get_value_name_int(i,"ownerid", gBusiness[i][bizzOwnerID]);
        cache_get_value_name_int(i,"sellprice", gBusiness[i][bizzSellPrice]);
        cache_get_value_name_int(i,"bank", gBusiness[i][bizzBank]);
		cache_get_value_name_int(i,"bankday", gBusiness[i][bizzBankDay]);
        cache_get_value_name_int(i,"price", gBusiness[i][bizzPrice]);
		cache_get_value_name_int(i,"enter", gBusiness[i][bizzEnter]);

		cache_get_value(i, "upgrade", sqlstring , 65), sscanf (sqlstring, "p<|>iii",
		gBusiness[i][bizzUpgrade][0], gBusiness[i][bizzUpgrade][1], gBusiness[i][bizzUpgrade][2]);

        cache_get_value_name_int(i,"product", gBusiness[i][bizzProduct]);
		cache_get_value_name_int(i,"order", gBusiness[i][bizzProdOrder]);
		cache_get_value_name_int(i,"orderprice", gBusiness[i][bizzProdOrderPrice]);

        cache_get_value_name_int(i,"status", gBusiness[i][bizzStatus]);

        cache_get_value_name_float(i, "x", gBusiness[i][bizzX]);
        cache_get_value_name_float(i, "y", gBusiness[i][bizzY]);
        cache_get_value_name_float(i, "z", gBusiness[i][bizzZ]);
        cache_get_value_name_float(i, "r", gBusiness[i][bizzR]);

		cache_get_value_name_int(i,"deliving", gBusiness[i][bizzDay]);
		cache_get_value_name_int(i,"mafia", gBusiness[i][bizzMafia]);
		
		cache_get_value_name(i, "owner", gBusiness[i][bizzOwner], MAX_PLAYER_NAME);
		
		switch(gBusiness[i][bizzID]) {
			case 8: {
				CreateDynamicPickup(19132,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],46,78);
				gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 46, 78);
				b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5,46,78,-1);
			}
			case 9: {
				CreateDynamicPickup(19132,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],47,78);
				gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 47, 78);
				b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5,47,78,-1);
			}
			case 10: {
				CreateDynamicPickup(19132,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],48,78);
				gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 48, 78);
				b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5,48,78,-1);
			}
			case 82: {
				CreateDynamicPickup(19627,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],0,0);
				gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
				b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5);
			}
			default: {
				if(gBusiness[i][bizzType] != 7) CreateDynamicPickup(19132,1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]);
				gBusinessText[i] = CreateDynamic3DTextLabel("_",-1,gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ]+1.0,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);
				b_area[i] = CreateDynamicSphere(gBusiness[i][bizzX],gBusiness[i][bizzY],gBusiness[i][bizzZ],1.5);
			}
		}
		new icon = 0, bint = gBusiness[i][bizzBint];
		switch(bint) {
			case 0: {
				if(gBusiness[i][bizzType] == 18) icon = 27;
				else icon = 63;
			}
			case 1..4,11,12: icon = 49;
			case 5..10: icon = 45;
			case 16: icon = 10;
			case 17: icon = 14;
			case 18: icon = 29;
			case 19..21: icon = 6;
			case 50: icon = 55;
			case 22: icon = 42;
			case 23: icon = 48;
			case 24: icon = 34;
			case 25: icon = 54;
			case 13..15: icon = 12;
		}
		if(icon) {
			if(gBusiness[i][bizzType] != 15) gBusinessIcon[i] = CreateDynamicMapIcon(gBusiness[i][bizzX], gBusiness[i][bizzY], gBusiness[i][bizzZ], icon, -1);
		}
		UpdateBusinessText(i);
	}
	printf("[Загрузка] Бізнесів успішно завантажено (%i шт.)",gBusinessCount);
	cache_delete(result);
	return 1;
}
stock UpdateBusinessText(id) {
	new mes2[420];
	if(id < 0 || id >= MAX_BUSINESS_COUNT || !gBusiness[id][bizzID]) return -1;
	
	if(gBusiness[id][bizzOwnerID]) {
		if(gBusiness[id][bizzStatus]) {
			new control[32];
			switch(gBusiness[id][bizzMafia]) {
				case fLCN: control = "Італьянська мафія";
				case fYAKUZA: control = "Японська мафія";
				case fRM: control = "Українська мафія";
				default: control = "-";
			}
			switch(gBusiness[id][bizzType]) {
				case 7: format(mes2,sizeof(mes2),""O"%s\n\n{f6f6d9}Власник: "YELLOW"%s\n{f6f6d9}Вартість: "W"$%d\n{f6f6d9}Ціна за 1 литр топлива: "GREEN"$%d\n{f6f6d9}Купити канистру: "W"/buyfuel\n{f6f6d9}Заправитися: "W"/fill\n{f6f6d9}Кришує: "W"%s",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],control);
				case 11: format(mes2,sizeof(mes2),""O"Таксопарк\n\n{%s}%s\n{f6f6d9}Власник: "YELLOW"%s\n{f6f6d9}Вартість: "W"$%d",color_td[FuncBizz[id+1][funcbColor]][col_rgb],FuncBizz[id+1][funcbName], gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice]);
				case 14: format(mes2,sizeof(mes2),""O"Транспортна компанія\n\n{%s}%s\n{f6f6d9}Власник: "YELLOW"%s\n{f6f6d9}Вартість: "W"$%d",color_td[FuncBizz[id+1][funcbColor]][col_rgb],FuncBizz[id+1][funcbName], gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice]);
				case 15: format(mes2,sizeof(mes2),""O"Банківське відділення\n\n{%s}%s\n{f6f6d9}Власник: "YELLOW"%s\n{f6f6d9}Вартість: "W"$%d",color_td[FuncBizz[id+1][funcbColor]][col_rgb],FuncBizz[id+1][funcbName], gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice]);
				default: {
					if(gBusiness[id][bizzEnter]) format(mes2,sizeof(mes2),""O"%s\n\n{f6f6d9}Власник: "YELLOW"%s\n{f6f6d9}Вартість: "W"$%d\n{f6f6d9}Ціна за вход: "GREEN"$%i\n{f6f6d9}Кришує: "W"%s",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],gBusiness[id][bizzEnter],control);
					else format(mes2,sizeof(mes2),""O"%s\n\n{f6f6d9}Власник: "YELLOW"%s\n{f6f6d9}Вартість: "W"$%d\n{f6f6d9}Кришує: "W"%s",gBusiness[id][bizzName],gBusiness[id][bizzOwner],gBusiness[id][bizzSellPrice],control);
				}
			}
		}
		else format(mes2,sizeof(mes2),"\t\t\t"NO"ЗАКРЫТО");
	}
	else {
		switch(gBusiness[id][bizzType]) {
			case 11: format(mes2,sizeof(mes2),""O"Таксопарк\n\n"W"Назва: "YELLOW"%s\n"W"Власник: "YELLOW"нет\n"W"Вартість: "YELLOW"%i",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
			case 14: format(mes2,sizeof(mes2),""O"Транспортная компания\n\n"W"Назва: "YELLOW"%s\n"W"Власник: "YELLOW"нет\n"W"Вартість: "YELLOW"%i",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
			case 15: format(mes2,sizeof(mes2),""O"Банківське відділення\n\n"W"Назва: "YELLOW"%s\n"W"Власник: "YELLOW"нет\n"W"Вартість: "YELLOW"%i",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
			case 7: format(mes2,sizeof(mes2),""O"Бізнес продається\n\n"W"Назва: "YELLOW"%s\n"W"Вартість: "YELLOW"%i\n\n{f6f6d9}Для купівлі введіть: "W"/buyfueling",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
			default:format(mes2,sizeof(mes2),""O"Бізнес продається\n\n"W"Назва: "YELLOW"%s\n"W"Вартість: "YELLOW"%i\n",gBusiness[id][bizzName],gBusiness[id][bizzSellPrice]);
		}
	}
	UpdateDynamic3DTextLabelText(gBusinessText[id],-1,mes2);
	return true;
}
stock UpdateHotelText(id) {
	new string[256];
	if(id < 0 || id >= HOTEL_COUNT || !gHotels[id][hotelID]) return -1;

	if(gHotels[id][hotelOwnerID] == 0) format(string, sizeof(string),""O"Отель продається\n\n"W"Назва: "YELLOW"%s\n"W"Вартість: "YELLOW"%i\n",gHotels[id][hotelName],gHotels[id][hotelPrice]);
	else format(string, sizeof(string),"{52FF0D}%s\n\n{f6f6d9}Власник: "YELLOW"%s\n{f6f6d9}Вартість: "W"$%d\n{f6f6d9}Ціна за номер: "GREEN"$%i",gHotels[id][hotelName],gHotels[id][hotelOwner],gHotels[id][hotelPrice],gHotels[id][hotelCoast]);
	UpdateDynamic3DTextLabelText(gHotelText[id],-1,string);
	return true;
}
stock UpdateAirportsText(id) {
	new string[256];
	if(id < 0 || id >= AIR_COUNT || !gAirs[id][airID]) return -1;

	if(gAirs[id][airOwnerID] == 0) format(string, sizeof(string),""O"Аэропорт продається\n\n"W"Назва: "YELLOW"%s\n"W"Вартість: "YELLOW"%i\n",gAirs[id][airName],gAirs[id][airPrice]);
	else format(string, sizeof(string),"{52FF0D}%s\n\n{f6f6d9}Власник: "YELLOW"%s\n{f6f6d9}Вартість: "W"$%d\n{f6f6d9}Ціна за аренду техники: "GREEN"$%i",gAirs[id][airName],gAirs[id][airOwner],gAirs[id][airPrice],gAirs[id][airCoast]);
	UpdateDynamic3DTextLabelText(gAirText[id],-1,string);
	return true;
}
stock load_airplane() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `plane`");
	gPlaneCount = cache_num_rows();
	for(new i = 1; i <= gPlaneCount; i++) {
		cache_get_value_name_int(i-1, "ID", gAirplanes[i][aID]);
		cache_get_value_name_int(i-1, "Airport", gAirplanes[i][aAirport]);
		cache_get_value_name_int(i-1, "Plane", gAirplanes[i][aPlane]);
		
		cache_get_value_name(i-1, "Owner", gAirplanes[i][aOwner], MAX_PLAYER_NAME);
		
		cache_get_value_name_int(i-1, "Time", gAirplanes[i][aTime]);
		cache_get_value_name_int(i-1, "Price", gAirplanes[i][aPrice]);
		
		cache_get_value_name_float(i-1, "Fuel", gAirplanes[i][aFuel]);
		cache_get_value_name_float(i-1, "PosX", gAirplanes[i][aPos][0]);
		cache_get_value_name_float(i-1, "PosY", gAirplanes[i][aPos][1]);
		cache_get_value_name_float(i-1, "PosZ", gAirplanes[i][aPos][2]);
		cache_get_value_name_float(i-1, "PosXY", gAirplanes[i][aPos][3]);

		gAirplanes[i][aCar] = CreateJobVehicle(99,gAirplanes[i][aPlane], gAirplanes[i][aPos][0], gAirplanes[i][aPos][1], gAirplanes[i][aPos][2], gAirplanes[i][aPos][3], -1, -1, 400);
		VehicleInfo[gAirplanes[i][aCar]][vFuel] = gAirplanes[i][aFuel];
		new arenda[64];
		if(!strcmp(gAirplanes[i][aOwner],"State",true)) {
			format(arenda, sizeof(arenda),"Не арендован", gAirplanes[i][aOwner]);
			gAirplanes[i][aText] = CreateDynamic3DTextLabel(arenda, -1, 0.0, 0.45, 1.1,20.0, INVALID_PLAYER_ID, gAirplanes[i][aCar], 0,-1,-1,-1, 15.0);
		}
		else {
			format(arenda, sizeof(arenda),"Арендатор - "O"%s", gAirplanes[i][aOwner]);
			gAirplanes[i][aText] = CreateDynamic3DTextLabel(arenda, -1, 0.0, 0.45, 1.1,20.0, INVALID_PLAYER_ID, gAirplanes[i][aCar], 0,-1,-1,-1, 15.0);
		}
	}
 	cache_delete(result);
 	printf("[Загрузка] Аеропланів успішно завантажено (%i шт.)", gPlaneCount);
	return 1;
}
stock load_bilboards() {
	new Cache:result,rows;
	result = mysql_query(connects, "SELECT * FROM `billboards`");
    rows = cache_num_rows();
    if(!rows) return print("Билборды не знайдені");
	for(new idx = 0;idx < rows; idx++) {
		cache_get_value_name(idx, "bText", BildInfo[idx][bText], 144);
		cache_get_value_name(idx, "bPosText", BildInfo[idx][bPosText], 32);
		cache_get_value_name(idx, "bOwner", BildInfo[idx][bOwner], MAX_PLAYER_NAME);

		cache_get_value_name_int(idx, "bOwned", BildInfo[idx][bOwned]);
		cache_get_value_name_int(idx, "bBackColor", BildInfo[idx][bBackColor]);
		cache_get_value_name_int(idx, "bFontFace",  BildInfo[idx][bFontFace]);
		cache_get_value_name_int(idx, "bAligment", BildInfo[idx][bAligment]);
		cache_get_value_name_int(idx, "bFontSize", BildInfo[idx][bFontSize]);

		cache_get_value_name_float(idx, "PosX", BildInfo[idx][bPos][0]);
		cache_get_value_name_float(idx, "PosY",  BildInfo[idx][bPos][1]);
		cache_get_value_name_float(idx, "PosZ", BildInfo[idx][bPos][2]);
		cache_get_value_name_float(idx, "PosA", BildInfo[idx][bPos][3]);

		cache_get_value_name_int(idx, "bDay", BildInfo[idx][bDay]);
		cache_get_value_name_int(idx, "bModel", BildInfo[idx][bObjectModel]);
        BildInfo[idx][bObjectID] = CreateDynamicObjectEx(BildInfo[idx][bObjectModel],BildInfo[idx][bPos][0], BildInfo[idx][bPos][1], BildInfo[idx][bPos][2], 0.00000000, 0.00000000, BildInfo[idx][bPos][3],1000.000,1000.000); // bObject
        UpdateBuildText(idx);
	}
	cache_delete(result);
	return printf("[Загрузка] Біл-бордів успішно завантажено (%i шт.)",MAX_BILLBORDS);
}
stock load_hotels() {
	new Cache:result,null;
	result = mysql_query(connects, "SELECT * FROM `hotels`");
	gHotelCount = cache_num_rows();
	if(gHotelCount > HOTEL_COUNT) print("Кількість готелів в базі більше максимального");
	else if(!gHotelCount) print("Готелів в базе не знайдено");
	for(new i = 0; i < gHotelCount; i++) {
		cache_get_value_name_int(i,"id", gHotels[i][hotelID]);

		cache_get_value_name(i,"name", gHotels[i][hotelName]);

		cache_get_value_name_int(i,"ownerid", gHotels[i][hotelOwnerID]);

		cache_get_value_name(i,"owner", gHotels[i][hotelOwner]);

		cache_get_value_name_int(i,"price", gHotels[i][hotelPrice]);
		cache_get_value_name_int(i,"coast", gHotels[i][hotelCoast]);
		cache_get_value_name_int(i,"bank", gHotels[i][hotelBank]);
		cache_get_value_name_int(i,"bankday", gHotels[i][hotelBankDay]);
		cache_get_value_name_int(i,"visitors", gHotels[i][hotelVisitors]);
		cache_get_value_name_int(i,"day", gHotels[i][hotelDay]);

		cache_get_value_name_float(i, "x", gHotels[i][hotelAreaX]);
		cache_get_value_name_float(i, "y", gHotels[i][hotelAreaY]);
		cache_get_value_name_float(i, "z", gHotels[i][hotelAreaZ]);

		cache_get_value_name_int(i,"level", gHotels[i][hotelLevel]);
		CreateDynamicPickup(19132, 1, gHotels[i][hotelAreaX], gHotels[i][hotelAreaY], gHotels[i][hotelAreaZ]);
		gHotelArea[i] = CreateDynamicSphere(gHotels[i][hotelAreaX],gHotels[i][hotelAreaY],gHotels[i][hotelAreaZ],1.0,0,0,-1);

		gHotelText[i] = CreateDynamic3DTextLabel("_",-1,gHotels[i][hotelAreaX],gHotels[i][hotelAreaY],gHotels[i][hotelAreaZ]+1.0,20.0);
		CreateDynamicMapIcon(gHotels[i][hotelAreaX],gHotels[i][hotelAreaY],gHotels[i][hotelAreaZ], 35, -1);
		UpdateHotelText(i);

		for(new b = 1; b <= 6; b++) {
			null++;
			gHotels[i][hotelVW][b] = null;
		}
	}
	cache_delete(result);
	printf("[Загрузка] Готелів успішно завантажено (%i шт.)",gHotelCount);
	return 1;
}
stock load_airports() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `airports`");
	gAirCount = cache_num_rows();
	if(gAirCount > HOTEL_COUNT) print("кількість аэропортов в базе більше максимального");
	else if(!gAirCount) print("Аэропорты в базе не знайдені");
	for(new i = 0; i < gAirCount; i++) {
		cache_get_value_name_int(i,"id", gAirs[i][airID]);

		cache_get_value_name(i,"name", gAirs[i][airName]);

		cache_get_value_name_int(i,"ownerid", gAirs[i][airOwnerID]);

		cache_get_value_name(i,"owner", gAirs[i][airOwner]);

		cache_get_value_name_int(i,"price", gAirs[i][airPrice]);
		cache_get_value_name_int(i,"coast", gAirs[i][airCoast]);
		cache_get_value_name_int(i,"bank", gAirs[i][airBank]);
		cache_get_value_name_int(i,"day", gAirs[i][airDay]);

		cache_get_value_name_float(i, "x", gAirs[i][airAreaX]);
		cache_get_value_name_float(i, "y", gAirs[i][airAreaY]);
		cache_get_value_name_float(i, "z", gAirs[i][airAreaZ]);

		CreateDynamicPickup(2470, 1, gAirs[i][airAreaX], gAirs[i][airAreaY], gAirs[i][airAreaZ]);
		gAirArea[i] = CreateDynamicSphere(gAirs[i][airAreaX],gAirs[i][airAreaY],gAirs[i][airAreaZ],1.0,0,0,-1);

		gAirText[i] = CreateDynamic3DTextLabel("_",-1,gAirs[i][airAreaX],gAirs[i][airAreaY],gAirs[i][airAreaZ]+1.0,20.0);
		CreateDynamicMapIcon(gAirs[i][airAreaX],gAirs[i][airAreaY],gAirs[i][airAreaZ], 5, -1);
		UpdateAirportsText(i);
	}
	cache_delete(result);
	printf("[Загрузка] Аеропортів успішно завантажено(%i шт.)",gAirCount);
	return 1;
}
stock load_family() {
	new Cache:result;
	result = mysql_query (connects, "SELECT * FROM `family`");
	TotalFamily = cache_num_rows();
	if(TotalFamily >= FAMILY_COUNT) print("кількість сімей в базе більше максимального");
	else if(!TotalFamily) print("сім'ї в базе не знайдені");
	else for(new i = 0; i < TotalFamily; i++) {
		cache_get_value_name_int(i,"id", gFamily[i][famID]);

		cache_get_value(i,"cname",gFamily[i][famCName], 32);
		cache_get_value(i,"name",gFamily[i][famName], 32);
		cache_get_value(i,"time",gFamily[i][famDate], 32);

		cache_get_value(i,"cowner",gFamily[i][famCOwner], MAX_PLAYER_NAME);
		cache_get_value(i,"owner",gFamily[i][famOwner], MAX_PLAYER_NAME);

		cache_get_value_int(i,"color",gFamily[i][famColor]);
		cache_get_value_int(i,"drugs",gFamily[i][famDrugs]);
		cache_get_value_int(i,"mats",gFamily[i][famMats]);

		cache_get_value_int(i,"invite",gFamily[i][famInvRang]);
		cache_get_value_int(i,"uninvite",gFamily[i][famUninvRang]);
		cache_get_value_int(i,"giverank",gFamily[i][famGiveRang]);
		cache_get_value_int(i,"sklad",gFamily[i][famSklad]);

		cache_get_value_name(i, "Rank_1", FamRanks[i][0], 24);
        cache_get_value_name(i, "Rank_2", FamRanks[i][1], 24);
        cache_get_value_name(i, "Rank_3", FamRanks[i][2], 24);
        cache_get_value_name(i, "Rank_4", FamRanks[i][3], 24);
        cache_get_value_name(i, "Rank_5", FamRanks[i][4], 24);
        cache_get_value_name(i, "Rank_6", FamRanks[i][5], 24);
        cache_get_value_name(i, "Rank_7", FamRanks[i][6], 24);
        cache_get_value_name(i, "Rank_8", FamRanks[i][7], 24);

        cache_get_value_name(i, "message", gFamily[i][famMessage], 71);

        cache_get_value_int(i,"exp",gFamily[i][famExp]);
		cache_get_value_int(i,"lvl",gFamily[i][famLvl]);
		cache_get_value_int(i,"point",gFamily[i][famPoint]);
		cache_get_value_int(i,"drugs_max",gFamily[i][famDrugsMax]);
		cache_get_value_int(i,"mats_max",gFamily[i][famMatsMax]);
		cache_get_value_int(i,"fuel",gFamily[i][famFuel]);
		cache_get_value_int(i,"fuel_max",gFamily[i][famFuelMax]);
		cache_get_value_int(i,"remp",gFamily[i][famRemp]);
		cache_get_value_int(i,"remp_max",gFamily[i][famRempMax]);
		cache_get_value_int(i,"armour",gFamily[i][famArmour]);
		cache_get_value_int(i,"armour_max",gFamily[i][famArmourMax]);
		cache_get_value_int(i,"health",gFamily[i][famHealth]);
		cache_get_value_int(i,"health_max",gFamily[i][famHealthMax]);
		cache_get_value_int(i,"mask",gFamily[i][famMask]);
		cache_get_value_int(i,"mask_max",gFamily[i][famMaskMax]);
		cache_get_value_int(i,"money",gFamily[i][famMoney]);
		cache_get_value_int(i,"money_max",gFamily[i][famMoneyMax]);
		cache_get_value_int(i,"house",gFamily[i][famHouse]);
		cache_get_value_int(i,"type",gFamily[i][famType]);
	}
	cache_delete(result);
	printf("[Загрузка] Сім'ї успішно завантажено (%i шт.)",TotalFamily);
	return 1;
}
stock load_rooms() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `rooms`");
	gRoomsCount = cache_num_rows();
	if(gRoomsCount > 240) print("Номерів в отелях в базе більше максимального");
	else if(!gRoomsCount) print("Номерів в отелях в базе не знайдені");
	else for(new i; i < gRoomsCount; i++) {
		cache_get_value_name_int(i,"id", gRooms[i][roomsID]);

		cache_get_value_name(i,"owner", gRooms[i][roomsOwner]);

		cache_get_value_name_float(i, "x", gRooms[i][roomsEnterX]);
		cache_get_value_name_float(i, "y", gRooms[i][roomsEnterY]);
		cache_get_value_name_float(i, "z", gRooms[i][roomsEnterZ]);
		cache_get_value_name_float(i, "r", gRooms[i][roomsEnterR]);

		cache_get_value_name_int(i,"doors", gRooms[i][roomsDoors]);
		cache_get_value_name_int(i,"day", gRooms[i][roomsDay]);
		cache_get_value_name_int(i,"hotel", gRooms[i][roomsHotel]);
		cache_get_value_name_int(i,"vw", gRooms[i][roomsWorld]);
	}
	cache_delete(result);
	printf("[Загрузка] Кімнати в готелі успішно завантажено(%i шт.)",gRoomsCount);
	return 1;
}
stock load_house() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `houses`");
	gHouseCount = cache_num_rows();
	new sqlstring[67];
	if(gHouseCount >= MAX_HOUSE_COUNT) print("Кількість будинків в базі більше максимального");
	else if(!gHouseCount) print("Будинків в базе не знайдено");
	else for(new i = 0; i < gHouseCount; i++) {
		cache_get_value_name_int(i,"id", gHouses[i][houseID]);

        cache_get_value_name_int(i, "class", gHouses[i][houseClass]);
		cache_get_value_name_int(i, "day", gHouses[i][houseDay]);
		cache_get_value_name_int(i, "price", gHouses[i][housePrice]);
		cache_get_value_name_int(i, "hint", gHouses[i][houseHint]);

		cache_get_value(i, "improve", sqlstring , 20), sscanf (sqlstring, "p<|>iii",
		gHouses[i][houseImprove][0], gHouses[i][houseImprove][1], gHouses[i][houseImprove][2]);

		cache_get_value(i, "gun", sqlstring , 65), sscanf (sqlstring, "p<|>iiiiiiiii",
		gHouses[i][houseGun][0], gHouses[i][houseGun][1], gHouses[i][houseGun][2], gHouses[i][houseGun][3]
			, gHouses[i][houseGun][4], gHouses[i][houseGun][5], gHouses[i][houseGun][6], gHouses[i][houseGun][7], gHouses[i][houseGun][8]);

		cache_get_value(i, "skin", sqlstring , 25), sscanf (sqlstring, "p<|>iii",
		gHouses[i][houseSkin][0], gHouses[i][houseSkin][1], gHouses[i][houseSkin][2]);

		cache_get_value_name_int(i, "safecode", gHouses[i][houseSafeCode]);
		cache_get_value_name_int(i, "safemoney", gHouses[i][houseSafeMoney]);
		cache_get_value_name_int(i, "drugs", gHouses[i][houseDrugs]);
		cache_get_value_name_int(i, "medkit", gHouses[i][houseHealth]);
		cache_get_value_name_int(i, "products", gHouses[i][houseProducts]);
		cache_get_value_name_int(i, "close", gHouses[i][houseClose]);

        cache_get_value_name_float(i, "x", gHouses[i][houseX]);
        cache_get_value_name_float(i, "y", gHouses[i][houseY]);
        cache_get_value_name_float(i, "z", gHouses[i][houseZ]);
        cache_get_value_name_float(i, "r", gHouses[i][houseR]);
        cache_get_value_name_float(i, "parkx", gHouses[i][houseParkX]);
        cache_get_value_name_float(i, "parky", gHouses[i][houseParkY]);
        cache_get_value_name_float(i, "parkz", gHouses[i][houseParkZ]);
        cache_get_value_name_float(i, "parkr", gHouses[i][houseParkR]);

		cache_get_value_name_int(i, "ownerid", gHouses[i][houseOwnerID]);

		cache_get_value_name(i, "owner", gHouses[i][houseOwner]);

		cache_get_value_name_int(i, "peopleid1", gHouses[i][houseHabitID][0]);
		cache_get_value_name_int(i, "peopleid2", gHouses[i][houseHabitID][1]);
		cache_get_value_name_int(i, "peopleid3", gHouses[i][houseHabitID][2]);

		cache_get_value_name(i, "people1", gHouseArendator[i][0]);
		cache_get_value_name(i, "people2", gHouseArendator[i][1]);
		cache_get_value_name(i, "people3", gHouseArendator[i][2]);

		cache_get_value_name_int(i, "family", gHouses[i][houseFamily]);

		gHouseArea[i] = CreateDynamicSphere(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],1.5,0,0,-1);
		if(gHouses[i][houseOwner]) {
			gHousePickup[i] = CreateDynamicPickup(1272,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);
			gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],32,CWHITE);
		}
		else {
			gHousePickup[i] = CreateDynamicPickup(1273,1,gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],0,0);
			gHouseIcon[i] = CreateDynamicMapIcon(gHouses[i][houseX],gHouses[i][houseY],gHouses[i][houseZ],31,CWHITE);
		}
	}
	cache_delete(result);
	printf("[Загрузка] Бідинків успішно завантажено(%i шт.)", gHouseCount);
	return true;
}
stock load_greenzone() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_GREENZONE"`");
	rows = cache_num_rows();

    for(new i = 1; i <= rows; i++) {
        cache_get_value_name_int(i-1, "id", GREENZONE[i][grid]);

        cache_get_value_name_float(i-1, "grx", GREENZONE[i][grX]);
  		cache_get_value_name_float(i-1, "gry", GREENZONE[i][grY]);
        cache_get_value_name_float(i-1, "grz", GREENZONE[i][grZ]);
  		cache_get_value_name_float(i-1, "grd", GREENZONE[i][grD]);

  		cache_get_value_name(i-1, "grname", GREENZONE[i][grName], 32);

  		cache_get_value_name_int(i-1, "grvirt", GREENZONE[i][grVirt]);
    	TOTALZONE++;
	}
	cache_delete(result);
	printf("[Загрузка] Зелених зон успішно завантажено (%i шт.)",TOTALZONE);
	return 1;
}
stock load_trackings() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_SLED"`");
	
	cache_get_value_name(0, "track_ghetto", TrackInfo[trackGhetto], MAX_PLAYER_NAME);
	cache_get_value_name(0, "track_goss", TrackInfo[trackGoss], MAX_PLAYER_NAME);
    cache_get_value_name(0, "track_mafia", TrackInfo[trackMafia], MAX_PLAYER_NAME);
	cache_get_value_name(0, "track_leaders", TrackInfo[trackLeaders], MAX_PLAYER_NAME);
	cache_get_value_name(0, "track_admins", TrackInfo[trackAdmins], MAX_PLAYER_NAME);
	
	cache_delete(result);
	return 1;
}
stock load_gangzone() {
    new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_GANGZONE"`");
	rows = cache_num_rows();

	for(new i = 0; i < rows; i++) {
        cache_get_value_name_int(i, "id", GZInfo[i][gID]);

        cache_get_value_name_float(i, "coord_one", GZInfo[i][gCoords][0]);
  		cache_get_value_name_float(i, "coord_two", GZInfo[i][gCoords][1]);
        cache_get_value_name_float(i, "coord_three", GZInfo[i][gCoords][2]);
  		cache_get_value_name_float(i, "coord_four", GZInfo[i][gCoords][3]);

  		cache_get_value_name_int(i, "gang_owner", GZInfo[i][gFrakVlad]);

		GZInfo[i][gZone] = GangZoneCreate(GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]);

		VladGzone[GZInfo[i][gFrakVlad]]++;
		GZInfo[i][gTime] = 0;

    	TOTALGZ++;
	}
	cache_delete(result);
	printf("[Загрузка] ГангЗон успішно завантажено(%i шт.)",TOTALGZ);
	return 1;
}
stock load_fractions() {
	new string[1024];
    for(new i; i < 15; i ++) RankName[0][i] = "Гражданин";
    new Cache:result, rows;
    format(string, sizeof(string), "SELECT * FROM `fractions`");
	result = mysql_query(connects, string);
	rows = cache_num_rows();
	for(new i = 1;i <= rows;i ++) {
	    cache_get_value_name_int(i-1, "ID", FI[i][fID]);

	    cache_get_value_name(i-1, "Name", FI[i][fName], 32);
	    cache_get_value_name(i-1, "Leader", FI[i][fLeader], MAX_PLAYER_NAME);
		cache_get_value_name(i-1, "Admin", FI[i][fAdmin], MAX_PLAYER_NAME);
		cache_get_value_name(i-1, "Time", FI[i][fTime], 53);

		cache_get_value_name_int(i-1, "Bank", FI[i][fBank]);
		cache_get_value_name_int(i-1, "BankCash", FI[i][fBankCash]);
		cache_get_value_name_int(i-1, "Drugs", FI[i][fDrugs]);
		cache_get_value_name_int(i-1, "Mats", FI[i][fMats]);
		cache_get_value_name_int(i-1, "Health", FI[i][fHealth]);
		cache_get_value_name_int(i-1, "Sklad", FI[i][fSklad]);
		cache_get_value_name_int(i-1, "Price", FI[i][fPrice]);
		cache_get_value_name_int(i-1, "Skin", FI[i][fSkin]);
		cache_get_value_name_int(i-1, "MaxRang", FI[i][fMaxRang]);
		cache_get_value_name_int(i-1, "RangInvite", FI[i][fInviteRang]);
		cache_get_value_name_int(i-1, "RangUninvite", FI[i][fUninviteRang]);
		cache_get_value_name_int(i-1, "GiveRang", FI[i][fGiveRang]);
		cache_get_value_name_int(i-1, "UseStock", FI[i][fUseStock]);
		cache_get_value_name_int(i-1, "VW", FI[i][fVw]);
        cache_get_value_name_int(i-1, "INT", FI[i][fInt]);
		cache_get_value_name_int(i-1, "DrugsBuy", FI[i][fDrugsBuy]);
		cache_get_value_name_int(i-1, "DrugsPrice", FI[i][fDrugsPrice]);
		cache_get_value_name_int(i-1, "AntiTk", FI[i][fAntiTK]);
		cache_get_value_name_int(i-1, "fPoints", FI[i][fPoints]);
		cache_get_value_name_int(i-1, "fRating", FI[i][fRating]);

        cache_get_value_name(i-1, "Rank_1", RankName[i][0], 24);
        cache_get_value_name(i-1, "Rank_2", RankName[i][1], 24);
        cache_get_value_name(i-1, "Rank_3", RankName[i][2], 24);
        cache_get_value_name(i-1, "Rank_4", RankName[i][3], 24);
        cache_get_value_name(i-1, "Rank_5", RankName[i][4], 24);
        cache_get_value_name(i-1, "Rank_6", RankName[i][5], 24);
        cache_get_value_name(i-1, "Rank_7", RankName[i][6], 24);
        cache_get_value_name(i-1, "Rank_8", RankName[i][7], 24);
        cache_get_value_name(i-1, "Rank_9", RankName[i][8], 24);
        cache_get_value_name(i-1, "Rank_10", RankName[i][9], 24);
        cache_get_value_name(i-1, "Rank_11", RankName[i][10], 24);
        cache_get_value_name(i-1, "Rank_12", RankName[i][11], 24);
        cache_get_value_name(i-1, "Rank_13", RankName[i][12], 24);
        cache_get_value_name(i-1, "Rank_14", RankName[i][13], 24);
        cache_get_value_name(i-1, "Rank_15", RankName[i][14], 24);

		cache_get_value_name(i-1, "Message", FI[i][fMessage], 70);
	}
	cache_delete(result);
	printf("[Загрузка] Фракцій успішно завантажено (%i шт.)",rows);
	return true;
}
stock load_anticheat() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `anticheats`");
	rows = cache_num_rows();
	for(new i = 0; i < rows; i++) {
		AntiCheat[i][acID] = i;

        cache_get_value_name(i, "cheatname", AntiCheat[i][acName],63);
		cache_get_value_name_int(i, "cheatvalue", AntiCheat[i][acValue]);
		//printf("%d %d %s",i,AntiCheat[i][acID],AntiCheat[i][acName]);
    }
    cache_delete(result);
	printf("[Загрузка] Анті-чіта успішно завантажено(%i шт.)", rows);
	return 1;
}
stock load_diplomation() {
	new Cache:result,rows;
	new sqlstring[38];
	result = mysql_query(connects, "SELECT * FROM `diplomation`");
	rows = cache_num_rows();
	if(rows) {
		for(new i = 0; i < rows; i++) {
			cache_get_value(i, "f_dip", sqlstring , 38), sscanf (sqlstring, "p<|>iiiiiiii",
			f_diplomacy[i][0], f_diplomacy[i][1], f_diplomacy[i][2],
			f_diplomacy[i][3], f_diplomacy[i][4], f_diplomacy[i][5], f_diplomacy[i][6], f_diplomacy[i][7]);
		}
	}
    cache_delete(result);
	printf("[Загрузка] Дипломатія успішно завантажена(%i шт.)", rows);
}
stock load_others() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `"TABLE_OTHERS"`");
	rows = cache_num_rows();
    if(rows) {
    	for(new i = 0; i <rows; i++) {
	        cache_get_value_index_int(i,1, action_server[0]);
			cache_get_value_index_int(i,2, zavodsklad);
			cache_get_value_index_int(i,3, oilsklad);
			cache_get_value_index_int(i,4, pricedrugs);
			cache_get_value_index_int(i,5, disease);
			cache_get_value_index_int(i,6, action_server[1]);
			cache_get_value_index_int(i,7, action_server[2]);
			cache_get_value_index_int(i,8, casino);
			cache_get_value_index_int(i,9, woodsklad);
			cache_get_value_index_int(i,10, tk_unloading[0]);
			cache_get_value_index_int(i,11, tk_unloading[1]);
			cache_get_value_index_int(i,12, tk_unloading[2]);
			cache_get_value_index_int(i,13, tk_unloading[3]);
			cache_get_value_index_int(i,14, rep_system);
			cache_get_value_index_int(i,15, duels);

			cache_get_value_index_int(i,16, invite_frac[0]);//PD
			cache_get_value_index_int(i,17, invite_frac[1]);//FBI
			cache_get_value_index_int(i,18, invite_frac[2]);//ARMY
			cache_get_value_index_int(i,19, invite_frac[3]);//MEDICS
			cache_get_value_index_int(i,20, invite_frac[4]);//NEWS
			cache_get_value_index_int(i,21, invite_frac[5]);//MAFIA
			cache_get_value_index_int(i,22, invite_frac[6]);//BAND
			cache_get_value_index_int(i,23, invite_frac[7]);//WH

			cache_get_value_index_int(i,24, anti_tk);//anti tk
			cache_get_value_index_int(i,25, OthersInfo[start_money]);//startmoney
			cache_get_value_index_int(i,26, OthersInfo[start_level]);//startlevel
			cache_get_value_index_int(i,27, OthersInfo[show_update]);//startlevel
		}
    }
    cache_delete(result);
    return true;
}
stock load_bonuses() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `bonuses`");
	rows = cache_num_rows();
    if(rows) {
    	for(new i = 0; i < rows; i++) {
    		cache_get_value_index_int(i,1, BonusInfo[act_level]);
    		cache_get_value_index_int(i,2, BonusInfo[act_select]);
    		cache_get_value_index_int(i,3, BonusInfo[act_time]);

	        cache_get_value_index_int(i,4, BonusInfo[act_skill]);
	        cache_get_value_index_int(i,5, BonusInfo[act_exp]);
	        cache_get_value_index_int(i,6, BonusInfo[act_sport]);
	        cache_get_value_index_int(i,7, BonusInfo[act_mp]);
	        cache_get_value_index_int(i,8, BonusInfo[act_gun]);
	        cache_get_value_index_int(i,9, BonusInfo[act_fish]);
	        cache_get_value_index_int(i,10, BonusInfo[act_renthotel]);
	        cache_get_value_index_int(i,11, BonusInfo[act_buyskin]);
	        cache_get_value_index_int(i,12, BonusInfo[act_buycar]);
	        cache_get_value_index_int(i,13, BonusInfo[act_rentcar]);
	        cache_get_value_index_int(i,14, BonusInfo[act_buylic]);
	        cache_get_value_index_int(i,15, BonusInfo[act_buyimprove]);
	        cache_get_value_index_int(i,16, BonusInfo[act_disease]);
	        cache_get_value_index_int(i,17, BonusInfo[act_changesex]);
	        cache_get_value_index_int(i,18, BonusInfo[act_medcard]);
	        cache_get_value_index_int(i,19, BonusInfo[act_buynubmbercar]);
	        cache_get_value_index_int(i,20, BonusInfo[act_perfomance]);
	        cache_get_value_index_int(i,21, BonusInfo[act_tune]);
	        cache_get_value_index_int(i,22, BonusInfo[act_timerullet]);
	        cache_get_value_index_int(i,23, BonusInfo[act_promocode]);
	        cache_get_value_index_int(i,24, BonusInfo[act_payday]);
	        cache_get_value_index_int(i,25, BonusInfo[act_donate]);
	    }
    }
    cache_delete(result);
	if(!BonusInfo[act_select]) SendRconCommand("hostname "HostName"");
	else if(BonusInfo[act_select] == 1) SendRconCommand("hostname "HostName" | Діє акція для новачків");
	else SendRconCommand("hostname "HostName" ||X2");

	if(SELECT_SERVER != 1) SendRconCommand("hostname "HostName" | Test Server");
    return true;
}
stock load_vip() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `vip`");
	rows = cache_num_rows();
    if(rows) {
    	for(new i = 1; i <= rows; i++) {
    		cache_get_value_name_int(i-1, "vip_payday", vip_status[i-1][vip_payday]);
			cache_get_value_name_int(i-1, "vip_afk",vip_status[i-1][vip_afk]);
			cache_get_value_name_int(i-1, "vip_carlic",vip_status[i-1][vip_carlic]);
			cache_get_value_name_int(i-1, "vip_lvl",vip_status[i-1][vip_lvl]);
			cache_get_value_name_int(i-1, "vip_healtime",vip_status[i-1][vip_healtime]);
			cache_get_value_name_int(i-1, "vip_arrest",vip_status[i-1][vip_arrest]);
			cache_get_value_name_int(i-1, "vip_mute",vip_status[i-1][vip_mute]);
			cache_get_value_name_int(i-1, "vip_lvl",vip_status[i-1][vip_lvl]);
			cache_get_value_name_int(i-1, "vip_admins",vip_status[i-1][vip_admins]);
			cache_get_value_name_int(i-1, "vip_mask_time",vip_status[i-1][vip_mask_time]);
			cache_get_value_name_int(i-1, "vip_armmats",vip_status[i-1][vip_armmats]);
			cache_get_value_name_int(i-1, "vip_search",vip_status[i-1][vip_search]);
			cache_get_value_name_int(i-1, "vip_heal",vip_status[i-1][vip_heal]);
			cache_get_value_name_int(i-1, "vip_mask",vip_status[i-1][vip_mask]);
			cache_get_value_name_int(i-1, "vip_fuel",vip_status[i-1][vip_fuel]);
			cache_get_value_name_int(i-1, "vip_jimmy",vip_status[i-1][vip_jimmy]);
			cache_get_value_name_int(i-1, "vip_mats",vip_status[i-1][vip_mats]);
			cache_get_value_name_int(i-1, "vip_drugs",vip_status[i-1][vip_drugs]);
			cache_get_value_name_float(i-1, "vip_satiety",vip_status[i-1][vip_satiety]);

			cache_get_value_name_int(i-1, "vip_fam_point",vip_status[i-1][vip_fam_point]);
			cache_get_value_name_int(i-1, "vip_transfer_bank",vip_status[i-1][vip_transfer_bank]);
			cache_get_value_name_int(i-1, "vip_percent_job",vip_status[i-1][vip_percent_job]);
			cache_get_value_name_int(i-1, "vip_percent_pension",vip_status[i-1][vip_percent_pension]);
			cache_get_value_name_int(i-1, "vip_percent_startjob",vip_status[i-1][vip_percent_startjob]);

			cache_get_value_name_int(i-1, "vip_flylic",vip_status[i-1][vip_flylic]);
			cache_get_value_name_int(i-1, "vip_fixcar",vip_status[i-1][vip_fixcar]);
			cache_get_value_name_int(i-1, "vip_fine",vip_status[i-1][vip_fine]);
			cache_get_value_name_int(i-1, "vip_hotel",vip_status[i-1][vip_hotel]);
			cache_get_value_name_int(i-1, "vip_chose",vip_status[i-1][vip_chose]);
			cache_get_value_name_int(i-1, "vip_buycar",vip_status[i-1][vip_buycar]);
			cache_get_value_name_int(i-1, "vip_rentcar",vip_status[i-1][vip_rentcar]);
			cache_get_value_name_int(i-1, "vip_houseupdate",vip_status[i-1][vip_houseupdate]);
			cache_get_value_name_int(i-1, "vip_changesex",vip_status[i-1][vip_changesex]);
			cache_get_value_name_int(i-1, "vip_number",vip_status[i-1][vip_number]);
			cache_get_value_name_int(i-1, "vip_perfonans",vip_status[i-1][vip_perfonans]);
			cache_get_value_name_int(i-1, "vip_tune",vip_status[i-1][vip_tune]);
			cache_get_value_name_int(i-1, "vip_rulet",vip_status[i-1][vip_rulet]);
			cache_get_value_name_int(i-1, "vip_hp",vip_status[i-1][vip_hp]);
			cache_get_value_name_int(i-1, "vip_useheal",vip_status[i-1][vip_useheal]);
			cache_get_value_name_int(i-1, "vip_changename",vip_status[i-1][vip_changename]);
			cache_get_value_name_int(i-1, "vip_gunlic",vip_status[i-1][vip_gunlic]);
			cache_get_value_name_int(i-1, "vip_radar",vip_status[i-1][vip_radar]);
			cache_get_value_name_int(i-1, "vip_report",vip_status[i-1][vip_report]);
			cache_get_value_name_int(i-1, "vip_ad",vip_status[i-1][vip_ad]);
			cache_get_value_name_int(i-1, "vip_enterbizz",vip_status[i-1][vip_enterbizz]);
			cache_get_value_name_int(i-1, "vip_vad",vip_status[i-1][vip_vad]);
			cache_get_value_name_int(i-1, "vip_sms",vip_status[i-1][vip_sms]);
			cache_get_value_name_int(i-1, "vip_disease",vip_status[i-1][vip_disease]);
			cache_get_value_name_int(i-1, "vip_pay",vip_status[i-1][vip_pay]);
			cache_get_value_name_int(i-1, "vip_chat",vip_status[i-1][vip_chat]);
			cache_get_value_name_int(i-1, "vip_percent_bank",vip_status[i-1][vip_percent_bank]);
			cache_get_value_name_int(i-1, "vip_percent_atm",vip_status[i-1][vip_percent_atm]);
			cache_get_value_name_int(i-1, "vip_call",vip_status[i-1][vip_call]);
			cache_get_value_name_int(i-1, "vip_report_color",vip_status[i-1][vip_report_color]);
		}
	}
	cache_delete(result);
	return true;
}
stock load_graffity() {
	new Cache:result;
	result = mysql_query(connects, "SELECT * FROM `graffity`");

	CountGraffity = cache_num_rows();
	if(CountGraffity) {
		new idx;
		for(idx = 1; idx <= CountGraffity; idx++) {
			new obj;
			//new obj,icon;
			cache_get_value_index_int(idx-1,0,GrafInfo[idx][gId]);
			cache_get_value_index_int(idx-1,1,GrafInfo[idx][gFrak]);
			cache_get_value_index_float(idx-1,2, GrafInfo[idx][gr_x][0]);
			cache_get_value_index_float(idx-1,3, GrafInfo[idx][gr_x][1]);
			cache_get_value_index_float(idx-1,4, GrafInfo[idx][gr_x][2]);
			cache_get_value_index_float(idx-1,5, GrafInfo[idx][gr_x][3]);
			cache_get_value_index_float(idx-1,6, GrafInfo[idx][gr_x][4]);
			cache_get_value_index_float(idx-1,7, GrafInfo[idx][gr_x][5]);
			switch(GrafInfo[idx][gFrak]) {
				case 0: obj = 18666;
				case 20: obj = 18659;
				case 21: obj = 18661;
				case 22: obj = 18663;
				case 18: obj = 18664;
				case 19: obj = 18665;
			}
			GrafInfo[idx][gObject] = CreateDynamicObject(obj, GrafInfo[idx][gr_x][0], GrafInfo[idx][gr_x][1], GrafInfo[idx][gr_x][2], GrafInfo[idx][gr_x][3], GrafInfo[idx][gr_x][4], GrafInfo[idx][gr_x][5]);
		}
		printf("[Загрузка] Графіті успішно завантажено (%i шт.)", CountGraffity);
	}
    cache_delete(result);
    return true;
}
stock load_fvehicle() {
	new Cache:result,rows;
	result = mysql_query(connects, "SELECT * FROM `frac_vehicle`");
	cache_get_row_count(rows);
	for(new i=0;i<rows;i++) {
		cache_get_value_index_int(i,1,FracVehicle[i][fvehFrac]);
		cache_get_value_index_int(i,2,FracVehicle[i][fvehModel]);
		cache_get_value_index_int(i,3,FracVehicle[i][fvehModelNew]);
		cache_get_value_index_int(i,4,FracVehicle[i][fvehTime]);
		cache_get_value_index_float(i,5,FracVehicle[i][fvehcCoords][0]);
		cache_get_value_index_float(i,6,FracVehicle[i][fvehcCoords][1]);
		cache_get_value_index_float(i,7,FracVehicle[i][fvehcCoords][2]);
		cache_get_value_index_float(i,8,FracVehicle[i][fvehcCoords][3]);
		cache_get_value_index_int(i,9,FracVehicle[i][fvehColor][0]);
		cache_get_value_index_int(i,10,FracVehicle[i][fvehColor][1]);

		if(FracVehicle[i][fvehTime] > unix) FracVehicle[i][fvehCar] = CreateOrgsVehicle(FracVehicle[i][fvehFrac],1,FracVehicle[i][fvehModelNew], FracVehicle[i][fvehcCoords][0], FracVehicle[i][fvehcCoords][1], FracVehicle[i][fvehcCoords][2], FracVehicle[i][fvehcCoords][3],FracVehicle[i][fvehColor][0],FracVehicle[i][fvehColor][1], RES_CAR_TIME);
		else FracVehicle[i][fvehCar] = CreateOrgsVehicle(FracVehicle[i][fvehFrac],1,FracVehicle[i][fvehModel], FracVehicle[i][fvehcCoords][0], FracVehicle[i][fvehcCoords][1], FracVehicle[i][fvehcCoords][2], FracVehicle[i][fvehcCoords][3],FracVehicle[i][fvehColor][0],FracVehicle[i][fvehColor][1], RES_CAR_TIME);	
	}
	printf("[Загрузка] ТС фракцій успішно завантажено (%i шт.)", rows);
    cache_delete(result);
    return true;
}
stock load_vehicles() {
	new Cache:result, rows;
	result = mysql_query(connects, "SELECT * FROM `transport` ORDER BY `model`");
	cache_get_row_count(rows);
	for(new i=0;i<rows;i++) {
		cache_get_value_index_int(i,0,gTransport[i][trID]);
		cache_get_value_index_int(i,1,gTransport[i][trModel]);
		cache_get_value_index(i,2,gTransport[i][trName], 35);
		cache_get_value_index_int(i,3,gTransport[i][trPrice]);
		cache_get_value_index_int(i,4,gTransport[i][trTank]);
		cache_get_value_index_int(i,5,gTransport[i][trConsumption]);
		cache_get_value_index_int(i,6,gTransport[i][trClass]);
		cache_get_value_index_int(i,7,gTransport[i][trFuelable]);
		cache_get_value_index_int(i,7,gTransport[i][trSellable]);
		cache_get_value_index_int(i,9,gTransport[i][trProds]);
	}
	printf("[Загрузка] Транспорта успішно завантажено (%i шт.)", rows);
	cache_delete(result);
	return 1;
}
CB: load_cars(playerid) {
	new rows;
    cache_get_row_count(rows);
	if(!rows) {
	    for(new i = 0; i < 2; i++) {
	        new query[128];
		    mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%s')" ,player_name[playerid]);
			mysql_tquery(connects, query, "", "");
		}
		return ErrorMessage(playerid,"Сталася помилка с загрузкой автомобіля!"), Kick(playerid),print("С ТАЧКАМИ ПРОБЛЕМА");
	}
    for(new x = 0; x < rows; x++) {
        cache_get_value_name_int(x, "id", gPlayerCars[playerid][carID][x]);

        cache_get_value_name_int(x, "model", gPlayerCars[playerid][carModel][x]);
        cache_get_value_name(x, "owner", gPlayerCars[playerid][carOwner][x], 64);
        cache_get_value_name_int(x, "color_one", gPlayerCars[playerid][carColor_one][x]);
        cache_get_value_name_int(x, "color_two", gPlayerCars[playerid][carColor_two][x]);

        cache_get_value_name_float(x, "drived", gPlayerCars[playerid][carDrived][x]);
        cache_get_value_name_float(x, "fuel", gPlayerCars[playerid][carFuel][x]);

        cache_get_value_name_int(x, "vehcom_1", gPlayerCars[playerid][carVehcom_1][x]);
        cache_get_value_name_int(x, "vehcom_2", gPlayerCars[playerid][carVehcom_2][x]);
        cache_get_value_name_int(x, "vehcom_3", gPlayerCars[playerid][carVehcom_3][x]);
        cache_get_value_name_int(x, "vehcom_4", gPlayerCars[playerid][carVehcom_4][x]);
        cache_get_value_name_int(x, "vehcom_5", gPlayerCars[playerid][carVehcom_5][x]);
        cache_get_value_name_int(x, "vehcom_6", gPlayerCars[playerid][carVehcom_6][x]);
        cache_get_value_name_int(x, "vehcom_7", gPlayerCars[playerid][carVehcom_7][x]);
        cache_get_value_name_int(x, "vehcom_8", gPlayerCars[playerid][carVehcom_8][x]);
        cache_get_value_name_int(x, "vehcom_9", gPlayerCars[playerid][carVehcom_9][x]);
        cache_get_value_name_int(x, "vehcom_10", gPlayerCars[playerid][carVehcom_10][x]);
        cache_get_value_name_int(x, "vehcom_11", gPlayerCars[playerid][carVehcom_11][x]);
        cache_get_value_name_int(x, "vehcom_12", gPlayerCars[playerid][carVehcom_12][x]);
        cache_get_value_name_int(x, "vehcom_13", gPlayerCars[playerid][carVehcom_13][x]);
        cache_get_value_name_int(x, "vehcom_14", gPlayerCars[playerid][carVehcom_14][x]);
        cache_get_value_name_int(x, "open", gPlayerCars[playerid][carOpen][x]);
        cache_get_value_name_int(x, "kanistra", gPlayerCars[playerid][carKanistra][x]);
        cache_get_value_name_int(x, "narko", gPlayerCars[playerid][carNarko][x]);
        cache_get_value_name_int(x, "mats", gPlayerCars[playerid][carMats][x]);
        cache_get_value_name_int(x, "deagle", gPlayerCars[playerid][carDeagle][x]);
        cache_get_value_name_int(x, "ak47", gPlayerCars[playerid][carAK47][x]);
        cache_get_value_name_int(x, "m4", gPlayerCars[playerid][carM4][x]);
        cache_get_value_name_int(x, "shot", gPlayerCars[playerid][carShot][x]);

		cache_get_value_name(x, "number", NumberVehicle[playerid][x], 32);

		cache_get_value_name_int(x, "paintjob", gPlayerCars[playerid][carPaintJob][x]);

		cache_get_value_name_int(x, "perf_engine_1", gPlayerCars[playerid][carPEngine_1][x]);
        cache_get_value_name_int(x, "perf_engine_2", gPlayerCars[playerid][carPEngine_2][x]);
        cache_get_value_name_int(x, "perf_engine_3", gPlayerCars[playerid][carPEngine_3][x]);
        cache_get_value_name_int(x, "perf_engine_4", gPlayerCars[playerid][carPEngine_4][x]);
        cache_get_value_name_int(x, "perf_engine_5", gPlayerCars[playerid][carPEngine_5][x]);

        cache_get_value_name_int(x, "perf_brake_1", gPlayerCars[playerid][carPBrake_1][x]);
        cache_get_value_name_int(x, "perf_brake_2", gPlayerCars[playerid][carPBrake_2][x]);
        cache_get_value_name_int(x, "perf_brake_3", gPlayerCars[playerid][carPBrake_3][x]);
        cache_get_value_name_int(x, "perf_brake_4", gPlayerCars[playerid][carPBrake_4][x]);
        cache_get_value_name_int(x, "perf_brake_5", gPlayerCars[playerid][carPBrake_5][x]);
	}
	if(PlayerInfo[playerid][pHouse] && gHouses[PlayerInfo[playerid][pHouse]-1][houseImprove][2]){
		loading_cars(playerid,0);
		loading_cars(playerid,1);
	}
	else if(PlayerInfo[playerid][pHouse] && !gHouses[PlayerInfo[playerid][pHouse]-1][houseImprove][2]){
		loading_cars(playerid,0);
	}
	else if (PlayerInfo[playerid][pRoom]){
		loading_cars(playerid,0);
	}
	return 1;
}
CB: friend_detectd(playerid,const inputtext[]) {
	new rows;
	cache_get_row_count(rows);

	if(!rows) {
		ErrorMessage(playerid,"Данного аккаунта не существует");
        D(playerid,D_REG_FRIEND,DSI, ""YELLOW"Регистрация", ""W"Введіть "GREEN"ник"W" гравця, пригласившего Вас на сервер.\n\n\
				При досягненні 4 рівня он получит "YELLOW"награду", "Далі", "Пропуск");
		return true;
	}
 	strmid(PlayerInfo[playerid][pDrug], inputtext, 0, strlen(inputtext), strlen(inputtext)+5);
	return true;
}
CB: change_name(playerid,const name[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return ErrorMessage(playerid, "Вказаний нік зайнятий");
	else {
        format(WantNickChange[playerid],MAX_PLAYER_NAME, "%s",name);
		new string[128];
		SendOk(playerid, "Заявка на зміну ніка відправлена адміністрації");
		format(string, 127, "[A] %s (ID: %i) просить змінити логін на %s", player_name[playerid], playerid, name);
		AdmMSG(COLOR_ISPOLZUY, string, 5);

	}
	return 1;
}
stock acc_int_strcat(query[], len, const name[], number) {
	new string[90];
	format(string, sizeof(string), "`%s` = '%d',",name, number);
	strcat(query, string, len);
	return true;
}
stock acc_str_strcat(query[], len, const name[], const str[]) {
	new string[100];
	format(string, 100, "`%s` = '%s',",name, str);
	strcat(query, string, len);
	return true;
}
stock SaveAccount(playerid) {
	if(!TI[playerid][tLogin]) return false;
    if(GetPVarInt(playerid,"player_save")) return false;
    SetPVarInt(playerid,"player_save",1);

	new weapons[54],ammos[54];
	format(weapons,53,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",GunPlayer[playerid][0][0], GunPlayer[playerid][1][0], GunPlayer[playerid][2][0], GunPlayer[playerid][3][0],
	GunPlayer[playerid][4][0], GunPlayer[playerid][5][0], GunPlayer[playerid][6][0], GunPlayer[playerid][7][0], GunPlayer[playerid][8][0], GunPlayer[playerid][9][0], GunPlayer[playerid][10][0]);
	format(ammos,53,"%i, %i, %i, %i, %i, %i, %i, %i, %i, %i, %i",GunPlayer[playerid][0][1], GunPlayer[playerid][1][1], GunPlayer[playerid][2][1], GunPlayer[playerid][3][1],
	GunPlayer[playerid][4][1], GunPlayer[playerid][5][1], GunPlayer[playerid][6][1], GunPlayer[playerid][7][1], GunPlayer[playerid][8][1], GunPlayer[playerid][9][1], GunPlayer[playerid][10][1]);
	new skills[33];
	format(skills,32,"%i, %i, %i, %i, %i, %i, %i",PlayerInfo[playerid][pGunSkill][0], PlayerInfo[playerid][pGunSkill][1], PlayerInfo[playerid][pGunSkill][2], PlayerInfo[playerid][pGunSkill][3],
	PlayerInfo[playerid][pGunSkill][4], PlayerInfo[playerid][pGunSkill][5]);

	new query[3100],str[100];
    query = "UPDATE `"TABLE_ACCOUNTS"` SET ";
    format(str,sizeof(str),"`pLevel`= '%i',",PlayerInfo[playerid][pLevel]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pExp`= '%i',",PlayerInfo[playerid][pExp]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pJail`= '%i',",PlayerInfo[playerid][pJail]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pvIp`= '%s',",player_ip[playerid]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pHP`= '%f',",GetPlayerHP(playerid)),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`house`= '%i',",PlayerInfo[playerid][pHouse]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`tempkey`= '%i',",PlayerInfo[playerid][pTempKey]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`bussiness`= '%i',",PlayerInfo[playerid][pBusiness]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`hotelroom`= '%i',",PlayerInfo[playerid][pRoom]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pMats`= '%i',",PlayerInfo[playerid][pMats]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`mute`= '%i',",PlayerInfo[playerid][pMute]),strcat(query,str,sizeof(query));
 	format(str,sizeof(str),"`pJailTime`= '%i',",PlayerInfo[playerid][pJailTime]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pDrugs`= '%i',",PlayerInfo[playerid][pDrugs]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pLeader`= '%i',",PlayerInfo[playerid][pLeader]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pMember`= '%i',",PlayerInfo[playerid][pMember]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pRank`= '%i',",PlayerInfo[playerid][pRank]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pJob`= '%i',",PlayerInfo[playerid][pJob]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pModel`= '%i',",PlayerInfo[playerid][pFracSkin]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`Skin`= '%i',",PlayerInfo[playerid][pSkin]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pZakonp`= '%i',",PlayerInfo[playerid][pZakonp]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pBank`= '%i',",PlayerInfo[playerid][pBank]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pMobile`= '%i',",PlayerInfo[playerid][pMobile]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pSearch`= '%i',",PlayerInfo[playerid][pSearch]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pGunSkills`= '%s',",skills),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pPlayTime_one`= '%i',",PlayerInfo[playerid][pPlayTime][0]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pPlayTime_two`= '%i',",PlayerInfo[playerid][pPlayTime][1]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pAccusedof`= '%s',",PlayerInfo[playerid][pAccusedof]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pVictim`= '%s',",PlayerInfo[playerid][pVictim]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pHospital`= '%i',",PlayerInfo[playerid][pHospital]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pWorms`= '%i',",PlayerInfo[playerid][pWorms]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pFish`= '%f',",PlayerInfo[playerid][pFish]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`family`= '%i',",PlayerInfo[playerid][pFamily]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`progress`= '%i',",PlayerInfo[playerid][pProgress]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`spawn`= '%i',",PlayerInfo[playerid][pSpawn]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`salary`= '%i',",PlayerInfo[playerid][pSalary]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`MedHeal`= '%i',",PlayerInfo[playerid][pMedHeal]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`Advert`= '%i',",PlayerInfo[playerid][pAdvert]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pWeapons`= '%s',",weapons),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pAmmos`= '%s',",ammos),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`FracDuty`= '%i',",start_work[playerid]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pSatiety`= '%i',",PlayerInfo[playerid][pSatiety]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pSnow`= '%f',",PlayerInfo[playerid][pSnow]),strcat(query,str,sizeof(query));

    format(str,sizeof(str),"`pAsk`= '%i',",PlayerInfo[playerid][pAsk]),strcat(query,str,sizeof(query));
    format(str,sizeof(str),"`pAskmute`= '%i'",PlayerInfo[playerid][pAskmute]),strcat(query,str,sizeof(query));

	//strdel(query, strlen(query)-1, strlen(query));

	mysql_format(connects, query,sizeof(query),"%s WHERE `pID`='%d'",query, PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "", "");

	DeletePVar(playerid, "player_save");
	return true;
}

stock save_car(i,ID) {
    new temp[0x9e];
	new query[3300];
	mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_CARS"` SET ");
	format(temp,sizeof(temp),"`model`= '%i',",gPlayerCars[i][carModel][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`color_one`= '%i',",gPlayerCars[i][carColor_one][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`color_two`= '%i',",gPlayerCars[i][carColor_two][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drived`= '%f',",gPlayerCars[i][carDrived][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`fuel`= '%f',",gPlayerCars[i][carFuel][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_1`= '%i',",gPlayerCars[i][carVehcom_1][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_2`= '%i',",gPlayerCars[i][carVehcom_2][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_3`= '%i',",gPlayerCars[i][carVehcom_3][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_4`= '%i',",gPlayerCars[i][carVehcom_4][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_5`= '%i',",gPlayerCars[i][carVehcom_5][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_6`= '%i',",gPlayerCars[i][carVehcom_6][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_7`= '%i',",gPlayerCars[i][carVehcom_7][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_8`= '%i',",gPlayerCars[i][carVehcom_8][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_9`= '%i',",gPlayerCars[i][carVehcom_9][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_10`= '%i',",gPlayerCars[i][carVehcom_10][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_11`= '%i',",gPlayerCars[i][carVehcom_11][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_12`= '%i',",gPlayerCars[i][carVehcom_12][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_13`= '%i',",gPlayerCars[i][carVehcom_13][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`vehcom_14`= '%i',",gPlayerCars[i][carVehcom_14][ID]), 		strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`open`= '%i',",gPlayerCars[i][carOpen][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`kanistra`= '%i',",gPlayerCars[i][carKanistra][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`narko`= '%i',",gPlayerCars[i][carNarko][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`mats`= '%i',",gPlayerCars[i][carMats][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`deagle`= '%i',",gPlayerCars[i][carDeagle][ID]), 				strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`ak47`= '%i',",gPlayerCars[i][carAK47][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`m4`= '%i',",gPlayerCars[i][carM4][ID]), 						strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`shot`= '%i',",gPlayerCars[i][carShot][ID]), 					strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`paintjob`= '%i',",gPlayerCars[i][carPaintJob][ID]), 			strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`number`= '%s'",NumberVehicle[i][ID]), 						strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp)," WHERE id = '%i'",gPlayerCars[i][carID][ID]),					strcat(query,temp,sizeof(query));
	mysql_tquery(connects, query, "", "");
	return true;
}
CB: reg_friend(playerid) {
	new rows;
	cache_get_row_count(rows);
	new Name[25];
	if(!rows) return 1;
	cache_get_value_name(0,"pDrug",Name,25);
	new id = GetPlayerID(Name);
	if(IsPlayerConnected(id) && TI[id][tLogin]) {
		GiveMoney(id,50000,"за друга");
		SendClientMessage(id,CGOLD,"Ви получили $50.000 за приглашенного друга, достигшего 4 рівня");
	}
	else {
		new query[156];
		format(query,sizeof(query), "UPDATE `"TABLE_ACCOUNTS"` SET pCash = pCash + 50000 WHERE Name = '%s'",Name);
		mysql_tquery(connects,query);
	}
	return 1;
}
CB: player_register(playerid) {
	SetPlayerDrunkLevel(playerid, 0);
	SendClientMessage(playerid, COLOR_BLUE, "Вітаємо Вас з успішною реєстрацією!");
	StopAudioStreamForPlayer(playerid);
	for(new i = 0; i < 2; i++) {
	    new query[128];
		mysql_format(connects, query, sizeof(query), "INSERT INTO `"TABLE_CARS"` (`owner`) VALUES ('%s')" ,player_name[playerid]);
  		mysql_tquery(connects, query, "", "");
	}
	PlayerRegister(playerid);
	return 1;
}
stock LoadTuning(c,carid,idx) {
    if(gPlayerCars[c][carVehcom_1][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_1][idx]);
	if(gPlayerCars[c][carVehcom_2][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_2][idx]);
	if(gPlayerCars[c][carVehcom_3][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_3][idx]);
	if(gPlayerCars[c][carVehcom_4][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_4][idx]);
	if(gPlayerCars[c][carVehcom_5][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_5][idx]);
	if(gPlayerCars[c][carVehcom_6][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_6][idx]);
	if(gPlayerCars[c][carVehcom_7][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_7][idx]);
	if(gPlayerCars[c][carVehcom_8][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_8][idx]);
	if(gPlayerCars[c][carVehcom_9][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_9][idx]);
	if(gPlayerCars[c][carVehcom_10][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_10][idx]);
	if(gPlayerCars[c][carVehcom_11][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_11][idx]);
	if(gPlayerCars[c][carVehcom_12][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_12][idx]);
	if(gPlayerCars[c][carVehcom_13][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_13][idx]);
	if(gPlayerCars[c][carVehcom_14][idx]!=0) ACC_AddVehicleComponent(carid, gPlayerCars[c][carVehcom_14][idx]);
	if(gPlayerCars[c][carPaintJob][idx] != -1) ChangeVehiclePaintjob(carid,gPlayerCars[c][carPaintJob][idx]);
}
stock SaveTuning(playerid,i,idx) {
	gPlayerCars[playerid][carVehcom_1][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_SPOILER);
	gPlayerCars[playerid][carVehcom_2][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_HOOD);
	gPlayerCars[playerid][carVehcom_3][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_ROOF);
	gPlayerCars[playerid][carVehcom_4][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_SIDESKIRT);
	gPlayerCars[playerid][carVehcom_5][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_LAMPS);
	gPlayerCars[playerid][carVehcom_6][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_NITRO);
	gPlayerCars[playerid][carVehcom_7][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_EXHAUST);
	gPlayerCars[playerid][carVehcom_8][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_WHEELS);
	gPlayerCars[playerid][carVehcom_9][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_STEREO);
	gPlayerCars[playerid][carVehcom_10][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_HYDRAULICS);
	gPlayerCars[playerid][carVehcom_11][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_FRONT_BUMPER);
	gPlayerCars[playerid][carVehcom_12][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_REAR_BUMPER);
	gPlayerCars[playerid][carVehcom_13][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_RIGHT);
	gPlayerCars[playerid][carVehcom_14][idx]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_LEFT);
}
stock CheckTuning(playerid,idx,model) {
	if(gPlayerCars[playerid][carVehcom_1][idx] == model ||
	gPlayerCars[playerid][carVehcom_2][idx] == model ||
	gPlayerCars[playerid][carVehcom_3][idx] == model ||
	gPlayerCars[playerid][carVehcom_4][idx] == model ||
	gPlayerCars[playerid][carVehcom_5][idx] == model ||
	gPlayerCars[playerid][carVehcom_6][idx] == model ||
	gPlayerCars[playerid][carVehcom_7][idx] == model ||
	gPlayerCars[playerid][carVehcom_8][idx] == model ||
	gPlayerCars[playerid][carVehcom_9][idx] == model ||
	gPlayerCars[playerid][carVehcom_10][idx] == model ||
	gPlayerCars[playerid][carVehcom_11][idx] == model ||
	gPlayerCars[playerid][carVehcom_12][idx] == model ||
	gPlayerCars[playerid][carVehcom_13][idx] == model ||
	gPlayerCars[playerid][carVehcom_14][idx] == model) return 1;
	else return 0;
}
stock RemoveTuning(c,carid,car) {
    if(gPlayerCars[c][carVehcom_1][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_1][car]), gPlayerCars[c][carVehcom_1][car] = 0;
	if(gPlayerCars[c][carVehcom_2][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_2][car]), gPlayerCars[c][carVehcom_2][car] = 0;
	if(gPlayerCars[c][carVehcom_3][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_3][car]), gPlayerCars[c][carVehcom_3][car] = 0;
	if(gPlayerCars[c][carVehcom_4][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_4][car]), gPlayerCars[c][carVehcom_4][car] = 0;
	if(gPlayerCars[c][carVehcom_5][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_5][car]), gPlayerCars[c][carVehcom_5][car] = 0;
	if(gPlayerCars[c][carVehcom_6][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_6][car]), gPlayerCars[c][carVehcom_6][car] = 0;
	if(gPlayerCars[c][carVehcom_7][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_7][car]), gPlayerCars[c][carVehcom_7][car] = 0;
	if(gPlayerCars[c][carVehcom_8][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_8][car]), gPlayerCars[c][carVehcom_8][car] = 0;
	if(gPlayerCars[c][carVehcom_9][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_9][car]), gPlayerCars[c][carVehcom_9][car] = 0;
	if(gPlayerCars[c][carVehcom_10][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_10][car]), gPlayerCars[c][carVehcom_10][car] = 0;
	if(gPlayerCars[c][carVehcom_11][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_11][car]), gPlayerCars[c][carVehcom_11][car] = 0;
	if(gPlayerCars[c][carVehcom_12][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_12][car]), gPlayerCars[c][carVehcom_12][car] = 0;
	if(gPlayerCars[c][carVehcom_13][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_13][car]), gPlayerCars[c][carVehcom_13][car] = 0;
	if(gPlayerCars[c][carVehcom_14][car]!=0) RemoveVehicleComponent(carid, gPlayerCars[c][carVehcom_14][car]), gPlayerCars[c][carVehcom_14][car] = 0;
	if(gPlayerCars[c][carPaintJob][car] != -1) ChangeVehiclePaintjob(carid,-1); gPlayerCars[c][carPaintJob][car] = -1;
	if(gPlayerCars[c][carPEngine_1][car]!=0) gPlayerCars[c][carPEngine_1][car] = 0;
	if(gPlayerCars[c][carPEngine_2][car]!=0) gPlayerCars[c][carPEngine_2][car] = 0;
	if(gPlayerCars[c][carPEngine_3][car]!=0) gPlayerCars[c][carPEngine_3][car] = 0;
	if(gPlayerCars[c][carPEngine_4][car]!=0) gPlayerCars[c][carPEngine_4][car] = 0;
	if(gPlayerCars[c][carPEngine_5][car]!=0) gPlayerCars[c][carPEngine_5][car] = 0;
	if(gPlayerCars[c][carPBrake_1][car]!=0) gPlayerCars[c][carPBrake_1][car] = 0;
	if(gPlayerCars[c][carPBrake_2][car]!=0) gPlayerCars[c][carPBrake_2][car] = 0;
	if(gPlayerCars[c][carPBrake_3][car]!=0) gPlayerCars[c][carPBrake_3][car] = 0;
	if(gPlayerCars[c][carPBrake_4][car]!=0) gPlayerCars[c][carPBrake_4][car] = 0;
	if(gPlayerCars[c][carPBrake_5][car]!=0) gPlayerCars[c][carPBrake_5][car] = 0;
}
stock AddCheater(playerid) {
	new str[10];
 	if(addchet[playerid]==0) addchet[playerid]=1;
	else addchet[playerid]=2;
    for(new i;i<10;i++) {
	   if(ChetInfo[i][cheatid1] == playerid)return false;
	}
	ChetInfo[Cheat1][cheatid1]=playerid;
	format(str, sizeof(str), "%d", playerid);
	TextDrawSetString(CheatText[Cheat1], str);
	Cheat1 ++;
	if(Cheat1 > 9) Cheat1 = 0;
	return 1;
}
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	return EditObject(playerid,objectid);
}
public OnPlayerEditDynamicObject( playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz ) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(response == EDIT_RESPONSE_FINAL) {
		if(EdittingATM[playerid] != 0) {
			new atmID = EdittingATM[playerid];
			ATMData[atmID][ATM_Pos][0]   = x;
			ATMData[atmID][ATM_Pos][1]   = y;
			ATMData[atmID][ATM_Pos][2]   = z;
			ATMData[atmID][ATM_Pos][3]   = rx;
			ATMData[atmID][ATM_Pos][4]   = ry;
			ATMData[atmID][ATM_Pos][5]   = rz;

			SaveATM(atmID);
			new string[128];
			format(string, sizeof(string), "Ви изменили позицию ATM номер %d", atmID);
			SendOk(playerid, string);

			UpdateATMLabel(atmID);
			
			if(ATMData[atmID][atm_Object]) DestroyDynamicObject(ATMData[atmID][atm_Object]);
		
			ATMData[atmID][atm_Object] = CreateDynamicObject(2754, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], 0.0, 0.0, ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);
			EdittingATM[playerid] = 0;
			return 1;
		}
    }
    else if(response == EDIT_RESPONSE_UPDATE) {
        SetObjectPos(objectid, x, y, z);
        SetObjectRot(objectid, rx, ry, rz);
    } 
	if (response == EDIT_RESPONSE_CANCEL) {
		new atmID = EdittingATM[playerid];
		if(EdittingATM[playerid] != 0) {
			SetTimerEx("SetObjectOldPos", 300, false, "dffffff", ATMData[atmID][atm_Object], ATMData[objectid][ATM_Pos][0], ATMData[objectid][ATM_Pos][1], ATMData[objectid][ATM_Pos][2], ATMData[objectid][ATM_Pos][3], ATMData[objectid][ATM_Pos][4], ATMData[objectid][ATM_Pos][5]);
			EdittingATM[playerid] = 0;
		}
	}
	else if(response) SetDynamicObjectPos(objectid,x, y, z), SetDynamicObjectRot(objectid,rx,ry,rz);
	return true;
}
CB: SetObjectOldPos(objectid, Float:oldX, Float:oldY, Float:oldZ, Float:oldRotX, Float:oldRotY, Float:oldRotZ) {
	SetDynamicObjectPos(objectid, oldX, oldY, oldZ);
	SetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	return 1;
}
public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z) return EditDynamicObject(playerid,objectid);
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z) {
	return 0;
}
public OnTrailerUpdate(playerid, vehicleid) {
	return 1;
}
stock IsAGreenZone(playerid) {
	for(new i = 1; i <= TOTALZONE; i++) if(IsPlayerInRangeOfPoint(playerid, GREENZONE[i][grD], GREENZONE[i][grX],GREENZONE[i][grY],GREENZONE[i][grZ])) return true;
	return false;
}
stock ShowStats(playerid,targetid,idx) {
	if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return true;
	new jtext[28], string[1250];
	switch(PlayerInfo[targetid][pJob]) {
		case 1: jtext = "Автобусник";
		case 2: jtext = "Механік";
		case 3: jtext = "Развозчик продуктів/топлива";
		case 4: jtext = "Развозчик їжі";
		case 5: jtext = "Мойщик доріг";
		case 6: jtext = "Газонокосильщик";
		default: jtext = "Безробітній";
	}
	new str[128];
	format(str,128,""YELLOW"Ім'я:\t\t\t\t\t"YELLOW"%s",player_name[targetid]), strcat(string,str);
	format(str,128,"\n\n"YELLOW"Рівень:\t\t\t\t"W"%i",PlayerInfo[targetid][pLevel]), strcat(string,str);
	format(str,128,"\n"YELLOW"Очки досвіду:\t\t\t\t"W"%i/%i",PlayerInfo[targetid][pExp], (PlayerInfo[targetid][pLevel])*6), strcat(string,str);
	format(str,128,"\n"YELLOW"Попереджень:\t\t\t"W"%i",PlayerInfo[targetid][pWarns]), strcat(string,str);
	format(str,128,"\n\n"YELLOW"Стать:\t\t\t\t\t"W"%s",(PlayerInfo[targetid][pSex] == 1) ? ("Чоловіча") : ("Жіноча")), strcat(string,str);
	format(str,128,"\n"YELLOW"Партнер(ка):\t\t\t\t"W"%s",PlayerInfo[targetid][pMarried]), strcat(string,str);
	if(PlayerInfo[targetid][pPhone] == 0) strcat(string,"\n\n"YELLOW"Номер телефона:\t\t\t"W"Відсутній");
	else format(str,128,"\n\n"YELLOW"Номер телефона:\t\t\t"W"%i",PlayerInfo[targetid][pPhone]), strcat(string,str);
	format(str,128,"\n"YELLOW"Мобільний рахунок:\t\t\t"W"%i",PlayerInfo[targetid][pMobile]), strcat(string,str);
	
	format(str,128,"\n\n"YELLOW"Законопослушність:\t\t\t"W"%i",PlayerInfo[targetid][pZakonp]), strcat(string,str);
	format(str,128,"\n"YELLOW"Злочинів:\t\t\t"W"%i",PlayerInfo[targetid][pCrimes]), strcat(string,str);
	format(str,128,"\n"YELLOW"Арештів:\t\t\t\t"W"%i",PlayerInfo[targetid][pArrested]), strcat(string,str);
	format(str,128,"\n"YELLOW"Рівень розшуку:\t\t\t"W"%i",PlayerInfo[targetid][pSearch]), strcat(string,str);
	format(str,128,"\n"YELLOW"Залежність:\t\t\t\t"W"%i",PlayerInfo[targetid][pAddiction]), strcat(string,str);
	format(str,128,"\n"YELLOW"Наркотики:\t\t\t\t"W"%i",PlayerInfo[targetid][pDrugs]), strcat(string,str);
	format(str,128,"\n"YELLOW"Боєприпаси:\t\t\t\t"W"%i",PlayerInfo[targetid][pMats]), strcat(string,str);
	format(str,128,"\n"YELLOW"Аптечки:\t\t\t\t"W"%i",PlayerInfo[targetid][pMedKit]), strcat(string,str);
	format(str,128,"\n"YELLOW"Маски:\t\t\t\t\t"W"%i",PlayerInfo[targetid][pMask]), strcat(string,str);
	format(str,128,"\n"YELLOW"Відмички:\t\t\t\t"W"%i",PlayerInfo[targetid][pJemmy]), strcat(string,str);

	if(GetTeamID(targetid)) format(str,128,"\n\n"YELLOW"Організація:\t\t\t\t"W"%s",FI[GetTeamID(targetid)][fName]), strcat(string,str);
	else strcat(string,"\n\n"YELLOW"Організації:\t\t\t\t"W"Відсутня");
	if(idx) format(str,128,"\n"YELLOW"Посада:\t\t\t\t"W"%s (%d)",GetRankName(GetTeamID(targetid),PlayerInfo[targetid][pRank]),PlayerInfo[targetid][pRank]), strcat(string,str);
	else format(str,128,"\n"YELLOW"Посада:\t\t\t\t"W"%s",GetRankName(GetTeamID(targetid),PlayerInfo[targetid][pRank])), strcat(string,str);

	if(PlayerInfo[targetid][pHouse]) {
		new classname[15];
		switch(gHouses[PlayerInfo[targetid][pHouse]-1][houseClass]) {
			case 0: classname = "Економ";
			case 1: classname = "Середній";
			case 2: classname = "Едітний";
			case 3: classname = "Особняк";
		}	
		format(str,128,"\n\n"YELLOW"Будинок:\t\t\t\t\t"W"№%d (%s)",gHouses[PlayerInfo[targetid][pHouse]-1][houseID],classname), strcat(string,str);
	}
	else strcat(string,"\n\n"YELLOW"Дім:\t\t\t\t\t"W"Відсутній");
	if(PlayerInfo[targetid][pBusiness]) format(str,128,"\n"YELLOW"Бізнес:\t\t\t\t"W"%s (%s)",gBusiness[PlayerInfo[targetid][pBusiness]-1][bizzName],gBusinessTypeName[gBusiness[PlayerInfo[targetid][pBusiness]-1][bizzType]-1]), strcat(string,str);
	else strcat(string,"\n"YELLOW"Бізнес:\t\t\t\t"W"Відсутній");
	if(PlayerInfo[targetid][pHotel]) format(str,128,"\n"YELLOW"Готель:\t\t\t\t"W"%s",gHotels[PlayerInfo[targetid][pHotel]-1][hotelName]), strcat(string,str);
	else strcat(string,"\n"YELLOW"Готель:\t\t\t\t\t"W"Відсутній");
	if(PlayerInfo[targetid][pAirport]) format(str,128,"\n"YELLOW"Аэропорт:\t\t\t\t"W"%s",gAirs[PlayerInfo[targetid][pAirport]-1][airName]), strcat(string,str);
	else strcat(string,"\n"YELLOW"Аеропорт:\t\t\t\t"W"Відсутній");

	format(str,128,"\n\n"YELLOW"Робота:\t\t\t\t"W"%s",jtext), strcat(string,str);
	if(idx) {
	    format(str,128,"\n"YELLOW"Банк:\t\t\t\t\t"W"%i",PlayerInfo[targetid][pBank]), strcat(string,str);
	    format(str,128,"\n"YELLOW"На руках:\t\t\t\t"W"%i",PlayerInfo[targetid][pCash]), strcat(string,str);
	    format(str,128,"\n"YELLOW"Скін:\t\t\t\t\t"W"%i",PlayerInfo[targetid][pSkin]), strcat(string,str);
	    format(str,128,"\n"YELLOW"СкінФр:\t\t\t\t"W"%i",PlayerInfo[targetid][pFracSkin]), strcat(string,str);
	    format(str,128,"\n"YELLOW"Дата реєстрації:\t\t\t"W"%s",PlayerInfo[targetid][pDataReg]), strcat(string,str);
	    format(str,128,"\n"YELLOW"Google Authenticator:\t\t\t"W"%s",(PlayerInfo[targetid][pGoogleSec] == 1) ? ("Включений") : ("Відключений")), strcat(string,str);
	}
	strcat(string,"\n\n"ORANGE"Інформацію про проект ви можете дізнатись по адресі:");
	strcat(string,"\n\t\t\t"ORANGE"samp-ukraine.com");
	return D(playerid,DIALOG_NONE,DSM, ""YELLOW"Статистика",string, "Закрити", "");
}

stock UpdateSkladFrakGang() {
    ClearTotalGz();
	for(new i = 0; i < TOTALGZ; i++) {
		if(GZInfo[i][gFrakVlad] == fBALLAS) TotalGZ[0]++;
		if(GZInfo[i][gFrakVlad] == fVAGOS) TotalGZ[1]++;
		if(GZInfo[i][gFrakVlad] == fGROVE) TotalGZ[2]++;
		if(GZInfo[i][gFrakVlad] == fAZTEC) TotalGZ[4]++;
		if(GZInfo[i][gFrakVlad] == fRIFA) TotalGZ[3]++;
	}
	new string[250];
	format(string,sizeof(string),"Склад банди {8813E7}Ballas"W"\n\n- Територій: "YELLOW"%d\n"W"- боєприпасів: "YELLOW"%d\n"W"- наркотиків: "YELLOW"%d\n"W"- В банке банди: "YELLOW"$%d\n"W"- Прибуток за годину: "YELLOW"$%d",TotalGZ[0],FI[fBALLAS][fMats],FI[fBALLAS][fDrugs],FI[fBALLAS][fBank],TotalGZ[0]*65); UpdateDynamic3DTextLabelText(gMenu[0],-1,string);
	format(string,sizeof(string),"Склад банди {DBD604}Vagos"W"\n\n- Територій: "YELLOW"%d\n"W"- боєприпасів: "YELLOW"%d\n"W"- наркотиків: "YELLOW"%d\n"W"- В банке банди: "YELLOW"$%d\n"W"- Прибуток за годину: "YELLOW"$%d",TotalGZ[1],FI[fVAGOS][fMats],FI[fVAGOS][fDrugs],FI[fVAGOS][fBank],TotalGZ[1]*65); UpdateDynamic3DTextLabelText(gMenu[1],-1,string);
	format(string,sizeof(string),"Склад банди {009F00}Grove"W"\n\n- Територій: "YELLOW"%d\n"W"- боєприпасів: "YELLOW"%d\n"W"- наркотиків: "YELLOW"%d\n"W"- В банке банди: "YELLOW"$%d\n"W"- Прибуток за годину: "YELLOW"$%d",TotalGZ[2],FI[fGROVE][fMats],FI[fGROVE][fDrugs],FI[fGROVE][fBank],TotalGZ[2]*65); UpdateDynamic3DTextLabelText(gMenu[2],-1,string);
	format(string,sizeof(string),"Склад банди {01FCFF}Aztecas"W"\n\n- Територій: "YELLOW"%d\n"W"- боєприпасів: "YELLOW"%d\n"W"- наркотиків: "YELLOW"%d\n"W"- В банке банди: "YELLOW"$%d\n"W"- Прибуток за годину: "YELLOW"$%d",TotalGZ[4],FI[fAZTEC][fMats],FI[fAZTEC][fDrugs],FI[fAZTEC][fBank],TotalGZ[4]*65); UpdateDynamic3DTextLabelText(gMenu[3],-1,string);
	format(string,sizeof(string),"Склад банди {83BFBF}Rifa"W"\n\n- Територій: "YELLOW"%d\n"W"- боєприпасів: "YELLOW"%d\n"W"- наркотиків: "YELLOW"%d\n"W"- В банке банди: "YELLOW"$%d\n"W"- Прибуток за годину: "YELLOW"$%d",TotalGZ[3],FI[fRIFA][fMats],FI[fRIFA][fDrugs],FI[fRIFA][fBank],TotalGZ[3]*65); UpdateDynamic3DTextLabelText(gMenu[4],-1,string);


	format(string,sizeof(string),"Аптечка банди {8813E7}Ballas"W"\nДоступно аптечок: "YELLOW"%d",FI[fBALLAS][fHealth]); UpdateDynamic3DTextLabelText(gHealth[0],-1,string);
	format(string,sizeof(string),"Аптечка банди {DBD604}Vagos"W"\nДоступно аптечок: "YELLOW"%d",FI[fVAGOS][fHealth]); UpdateDynamic3DTextLabelText(gHealth[1],-1,string);
	format(string,sizeof(string),"Аптечка банди {009F00}Grove"W"\nДоступно аптечок: "YELLOW"%d",FI[fGROVE][fHealth]); UpdateDynamic3DTextLabelText(gHealth[2],-1,string);
	format(string,sizeof(string),"Аптечка банди {01FCFF}Aztecas"W"\nДоступно аптечок: "YELLOW"%d",FI[fAZTEC][fHealth]); UpdateDynamic3DTextLabelText(gHealth[3],-1,string);
	format(string,sizeof(string),"Аптечка банди {83BFBF}Rifa"W"\nДоступно аптечок: "YELLOW"%d",FI[fRIFA][fHealth]); UpdateDynamic3DTextLabelText(gHealth[4],-1,string);

	if(black_prods[9] > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(black_prods[9]-unix, year, month, day, hour, minute, second);
		static const f_str[] = "Власник чёрного рынка\n\t{%06x}%s\n\n"W"Война возможна через: "YELLOW"%iд %iч %iм %iс";
		new str[sizeof(f_str) +1 + (-2 + 35)];
		format(str,sizeof(str),f_str,gFractionSpawn[black_prods[0]][fracColor] >>> 8,FI[black_prods[0]][fName],day-1, hour, minute, second);
		UpdateDynamic3DTextLabelText(black_market,-1,str);
	}
	else {
		static const f_str[] = "Власник чёрного рынка\n\t{%06x}%s\n\n"YELLOW"Можно воевать за чёрный рынок";
		new str[sizeof(f_str) +1 + (-2 + 35)];
		format(str,sizeof(str),f_str,gFractionSpawn[black_prods[0]][fracColor] >>> 8,FI[black_prods[0]][fName]);
		UpdateDynamic3DTextLabelText(black_market,-1,str);
	}
	return 1;
}
stock UpdateSkladFrakMafia() {
	new string[250];
	format(string,sizeof(string),"Склад {DDA701} Італійської мафії"W"\n\n"W"- боєприпасів: "YELLOW"%d\n"W"- наркотиків: "YELLOW"%d\n"W"- В банке мафии: "YELLOW"$%d",FI[fLCN][fMats],FI[fLCN][fDrugs],FI[fLCN][fBank]); UpdateDynamic3DTextLabelText(mMenu[0],-1,string);
	format(string,sizeof(string),"Склад {FF0000} Японської мафії"W"\n\n"W"- боєприпасів: "YELLOW"%d\n"W"- наркотиків: "YELLOW"%d\n"W"- В банке мафии: "YELLOW"$%d",FI[fYAKUZA][fMats],FI[fYAKUZA][fDrugs],FI[fYAKUZA][fBank]); UpdateDynamic3DTextLabelText(mMenu[1],-1,string);
	format(string,sizeof(string),"Склад {B4B5B7}Української мафії"W"\n\n"W"- боєприпасів: "YELLOW"%d\n"W"- наркотиків: "YELLOW"%d\n"W"- В банке мафии: "YELLOW"$%d",FI[fRM][fMats],FI[fRM][fDrugs],FI[fRM][fBank]); UpdateDynamic3DTextLabelText(mMenu[2],-1,string);
	return 1;
}
stock ShowAdvertList(playerid) {
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid,"У Вас бан чата");
	new adlist[2056];
	new data[3][30],index,string[128];
	format(data[0],30,"{FF6347}Отправление"W""), format(data[1],30,"{FFFF00}Проверка"W""), format(data[2],30,"{33AA33}Ожидание"W"");
	adlist = "№\tОтправитель\tСтатус\n";
	for(new i;i<MAX_ADVERT_COUNT;i++) {
		if(!gAdvert[i][adBusy]) {
		    format(string,sizeof(string),"%d\t-\t-\n",i+1);
		    strcat(adlist,string);
		}
		else {
			if(gAdvert[i][adCheking]) index = 1;
			else if(gAdvert[i][adCheked]) index = 0;
			else index = 2;
			format(string,sizeof(string),"%d\t%s\t%s\n",i+1,gAdvert[i][adSender],data[index]);
			strcat(adlist,string);
		}
	}
	D(playerid,D_ADVERT_LIST,DSTH,"оголошення",adlist,"Прийняти","Відміна");
	return 1;
}
stock WriteLog(type,const Names[],const NamePlayer[],const reason[]) {
   	//string_replace(reason, "'", ' ') ;
    new query[400];
    mysql_format(connects,query,sizeof(query),"INSERT INTO `adminlog` (`type`,`Name`,`NamePlayer`,`reason`,`date`,`time`) VALUES ('%d','%s','%s','%s',NOW(),NOW())",type,Names,NamePlayer,reason);
	mysql_tquery(connects, query, "","");
	return true;
}
stock FracLog(type,const Names[],const NamePlayer[],const reason[]) {
   	//string_replace(reason, "'", ' ') ;
    new query[400];
    mysql_format(connects,query,sizeof(query),"INSERT INTO `fraclog` (`type`,`Name`,`NameP`,`reason`,`date`) VALUES ('%d','%s','%s','%s',CURRENT_TIMESTAMP)",type,Names,NamePlayer,reason);
	mysql_tquery(connects, query, "","");
	return true;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ) {
  	if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pYoutube] == 1) {
  		if(GetPlayerState(playerid) == 2) {
	   		new tmpcar = GetPlayerVehicleID(playerid);
	   		SetVehiclePos(tmpcar, fX, fY, fZ+2);
  		}
  		else SetPlayerPosAC(playerid, fX, fY, fZ+1,0,0);
		SetPlayerPosFindZ(playerid, fX, fY, 999.0);
  		return 1;
 	}
	if(GetPVarInt(playerid,"selectpoint") > 0 && GetPVarInt(playerid,"selectpoint") < 3) {
		SetPVarInt(playerid,"selectpoint",2);
		SetPVarFloat(playerid,"selectpointX",fX);
		SetPVarFloat(playerid,"selectpointY",fY);
		SetPlayerMapIcon(playerid,iconTaxi,fX,fY,fZ,0,COLOR_YELLOW,1);
		SendOk(playerid,"Ви встановили "W"місце призначення. {f6f6d9}Щоб підтвердити, натисніть "W"~k~~CONVERSATION_YES~");
	}
	return 1;
}
stock GetString(const param1[],const param2[]) {
	return !strcmp(param1, param2, false);
}
stock CheckBanned(playerid,listitem) {
	if(listitem == 20) FirstBL[playerid] += 20;
	else FirstBL[playerid] -= 20;
	if(FirstBL[playerid] < 0) {
		FirstBL[playerid] = 0;
		return ErrorMessage(playerid, "Більше немає заблокованих");
	}
	new bstring[600];
	format(bstring, sizeof(bstring), "SELECT `Name` FROM `ban` ORDER BY `ID` DESC LIMIT %i , 20", FirstBL[playerid]);
	mysql_tquery(connects, bstring, "MysqlCheckBanned", "d", playerid);
	return 1;
}
CB: MysqlCheckBanned(playerid) {
	new rows;
	cache_get_row_count(rows);
	new bstring[600], names[25];
	if(rows == 0) return ErrorMessage(playerid, "Більше немає заблокованих");
	for(new i; i < rows; i ++) {
	    cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
		format(bstring, sizeof(bstring), "%s%s\n", bstring, names);
	}
	if(rows == 20) strcat(bstring, ""ORANGE"Далее >>>\n");
	if(FirstBL[playerid]) strcat(bstring, ""ORANGE"<<< Назад");
	if(!D(playerid, D_BAN_LIST, DSL, ""YELLOW"Забаненые", bstring, "Вибрати", "Назад")) ErrorMessage(playerid, "Недоступно в данный момент.");
	return 1;
}
stock IsBLNameMember(const name[],member) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `Name`,`pMember` FROM `accounts` WHERE BINARY `Name` = '%s' AND `pMember` = '%d' LIMIT 1",name,member);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
    cache_delete(result);
	return rows;
}
stock IsBLName(const name[],member) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `f_bl_accused`,`f_bl_id` FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s' AND `f_bl_id` = '%d' LIMIT 1",name,member);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
    cache_delete(result);
	return rows;
}
stock IsBannedNameReg(const name[]) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `Name` FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
    cache_delete(result);
	return rows;
}
stock IsBannedName(const name[]) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `Name` FROM `ban` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
    cache_delete(result);
	return rows;
}
stock UnBanName(const name[]) {
    new strings[256];
	if(IsBannedName(name)) {
        format(strings, sizeof(strings), "DELETE FROM `ban` WHERE BINARY `Name` = '%s'",name);
        mysql_tquery(connects, strings, "", "");
	}
	return true;
}
stock BanName(const name[], const namez[], days, const reason[]) {
	if(!IsBannedName(name)) {
	    new query[256];
	    format(query, sizeof(query), "INSERT INTO `ban` (`Name`, `Admin`, `Seconds`, `Reason`) VALUE ('%s', '%s', '%d', '%s')",name, namez, unix + days*86400, reason);
	    mysql_tquery(connects, query, "", "");
	}
	return true;
}
stock CheckSim(const pass[]) {
	for(new i; i < strlen(pass); i ++) {
	    if( (pass[i] >= 'a' && pass[i] <= 'f') ||
		(pass[i] >= 'A' && pass[i] <= 'F')) continue;
		else return false;
	}
	return true;
}
stock CheckPassword(const pass[]) {
	for(new i; i < strlen(pass); i ++) {
	    if( (pass[i] >= 'a' && pass[i] <= 'z') ||
		(pass[i] >= 'A' && pass[i] <= 'Z') ||
		(pass[i] >= '?' && pass[i] <= '?') ||
		(pass[i] >= '?' && pass[i] <= '?') ||
		(pass[i] >= '0' && pass[i] <= '9')  ) continue;
		else return false;
	}
	return true;
}
stock CheckSkin(skin) {
	new not_skin[] = {0,74,252,99,281,280,284,282,285,303,288,283,306,309,286,163,164,165,166,141,255,57,71,187,147,150,287,179,311,61,255,191,276,275,274,70,219,308,188,170,217,261,211,59,185,240,148,124,223,127,113,214,117,118,123,186,120,169,112,111,126,125,272,216,103,102,104,195,108,109,110,56,105,106,107,269,271,270,65,48,114,116,115,41,175,174,173,273,226,255,98,57,163,228,305,304,17,76,95,50,15,35,25,36,96,155,143,44,24,37,2,3,6,7,14,47,67,142,23,72,22,68,220,18,45,97,21,60,182,262,250,121,183,184,30,19,20,4,5,259,17,180,208,185,289,28,29,119,290,291,292,293,82,83,84,101,241,242,295,297,296,249,299,46,294,55,90,13,192,193,224,12,190,40,298,93,233};
	for(new i; i < sizeof(not_skin); i ++) {
	    if(skin != not_skin[i]) continue;
		else return false;
	}
	return true;
}
stock is_text_invalid(const text[]) {
	if(strfind(text, "'", true ) != -1) return 1;
	if(strfind(text, "=", true ) != -1) return 1;
	if(strfind(text, "%", true ) != -1) return 1;
	if(strfind(text, "&", true ) != -1) return 1;
	if(strfind(text, "*", true ) != -1) return 1;
	if(strfind(text, "( ", true ) != -1) return 1;
	if(strfind(text, ")", true ) != -1) return 1;
	if(strfind(text, ",", true ) != -1) return 1;
	if(strfind(text, "`", true ) != -1) return 1;
	if(strfind(text, ";", true ) != -1) return 1;
	if(strfind(text, "|", true ) != -1) return 1;
	return 0 ;
}
stock CheckHouses(playerid,listitem) {
	if(listitem == 30) drieltorka[playerid] += 30;
	else drieltorka[playerid] -= 30;
	if(drieltorka[playerid] < 0) {
		drieltorka[playerid] = 0;
		return ErrorMessage(playerid, "Більше будинків не знайдено");
	}
	new string[1512];
	new houseidd = 0,classname[20];
	for(new i = drieltorka[playerid]; i < gHouseCount; i ++) {
		if(gHouses[i][houseOwnerID] != 0) continue;
		switch(gHouses[i][houseClass]) {
			case 0:classname = "Эконом";
			case 1:classname = "Cредний";
			case 2:classname = "Элитный";
			case 3:classname = "Особняк";
			default: classname = "Неизвестно";
		}
		format(string, sizeof(string), "%sДом "ORANGE"№%d "W"[%s]"W"\n",string,i+1,classname);
		houseidd++;
		if(!houseidd) return ErrorMessage(playerid,"Свободных домов нет");
		if(houseidd == 30) {
			strcat(string, ""ORANGE"Далее >>>\n");
			break;
		}
	}
	if(drieltorka[playerid]) strcat(string, ""ORANGE"<<< Назад\n");
	if(!D(playerid, D_RIELTOR_HOUSE, DSL, ""YELLOW"Виберите дом", string, "Вибрати", "Назад")) ErrorMessage(playerid, "Недоступно в данный момент");
	return 1;
}
stock CheckBusiness(playerid,listitem) {
	if(listitem == 20) drieltorka[playerid] += 20;
	else drieltorka[playerid] -= 20;
	if(drieltorka[playerid] < 0) {
		drieltorka[playerid] = 0;
		return ErrorMessage(playerid, "Більше бізнесов не знайдено");
	}
	new string[1512];
	new bizzid = 0;
	for(new i = drieltorka[playerid]; i < gBusinessCount; i ++) {
		if(gBusiness[i][bizzOwnerID] != 0) continue;
		format(string, sizeof(string), "%sбізнес "ORANGE"№%d "W"[%s] [%s]\n",string,i+1,gBusiness[i][bizzName],gBusinessTypeName[gBusiness[i][bizzType]-1]);
		bizzid++;
		if(!bizzid) return ErrorMessage(playerid,"Свободных бізнесов нет");
		if(bizzid == 20) {
			strcat(string, ""ORANGE"Далее >>>\n");
			break;
		}
	}
	if(drieltorka[playerid]) strcat(string, ""ORANGE"<<< Назад\n");
	if(!D(playerid, D_RIELTOR_BIZZ, DSL, ""YELLOW"Виберите бізнес", string, "Вибрати", "Назад")) ErrorMessage(playerid, "Недоступно в данный момент");
	return 1;
}
CB: CopsWanted(playerid,player_id) {
	if(!IsPlayerConnected(player_id)) {
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Преследование завершено! Гравець покинул сервер");
		DeletePVar(playerid, "Patrul");
		return true;
	}
	if(GetPlayerInterior(player_id)) {
		patrul_id[playerid] = -1;
		KillTimer(time_wanted[playerid]);
		DisablePlayerCheckpoint(playerid);
		SendOk(playerid,"Преследование завершено! Человек скрылся! [Вход в интерьер]");
		return true;
	}
	new Float:Position[3];
	GetPlayerPos(player_id, Position[0],Position[1],Position[2]);
	SetPlayerCheckpoint(playerid, Position[0],Position[1],Position[2], 3);
	return false;
}
stock ErrorMessage(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), ""NO"*{f6f6d9} %s", text);
	return SendClientMessage(playerid, COLOR_GREY, string);
}
stock SendEsp(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), "Використовуйте: %s", text);
	return SendClientMessage(playerid, COLOR_GREY, string);
}
stock SendOk(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), ""GREEN"*{f6f6d9} %s", text);
	return SendClientMessage(playerid, COLOR_GREY, string);
}
stock SendUse(playerid, const text[]) {
	new string[256];
	format(string, sizeof(string), ""GREEN"*{f6f6d9} %s", text);
	return SendClientMessage(playerid, COLOR_GREY, string);
}
stock GetCheckID(const name[]) {
    new ID = INVALID_PLAYER_ID;
	sscanf(name, "u", ID);
	if(IsPlayerConnected(ID)) return ID;
	return INVALID_PLAYER_ID;
}
stock check_terrs() {

	DestroyActor(actor[0]);
	DestroyActor(actor[1]);
	DestroyActor(actor[2]);
	DestroyActor(actor[3]);

    switch(black_prods[0]) {
	    case fBALLAS: {
		    actor[0] = CreateActor(102, 2346.9180,-1245.6836,22.5000,90.5893);//наркобот
		    actor[1] = CreateActor(103, 2327.8286,-1255.9642,22.5000,268.9006);//бот зброї
		    actor[2] = CreateActor(102, 2324.0752,-1273.6428,22.5000,305.5377);//бот материалов
		    actor[3] = CreateActor(103, 2347.5073,-1263.8671,22.5095,87.7690);//бот форм
		}
	    case fVAGOS: {
		    actor[0] = CreateActor(108, 2346.9180,-1245.6836,22.5000,90.5893);//наркобот
		    actor[1] = CreateActor(109, 2327.8286,-1255.9642,22.5000,268.9006);//бот зброї
		    actor[2] = CreateActor(108, 2324.0752,-1273.6428,22.5000,305.5377);//бот материалов
		    actor[3] = CreateActor(109, 2347.5073,-1263.8671,22.5095,87.7690);//бот форм
		}
	    case fGROVE: {
		    actor[0] = CreateActor(105, 2346.9180,-1245.6836,22.5000,90.5893);//наркобот
		    actor[1] = CreateActor(106, 2327.8286,-1255.9642,22.5000,268.9006);//бот зброї
		    actor[2] = CreateActor(107, 2324.0752,-1273.6428,22.5000,305.5377);//бот материалов
		    actor[3] = CreateActor(105, 2347.5073,-1263.8671,22.5095,87.7690);//бот форм
		}
	    case fAZTEC: {
		    actor[0] = CreateActor(114, 2346.9180,-1245.6836,22.5000,90.5893);//наркобот
		    actor[1] = CreateActor(116, 2327.8286,-1255.9642,22.5000,268.9006);//бот зброї
		    actor[2] = CreateActor(114, 2324.0752,-1273.6428,22.5000,305.5377);//бот материалов
		    actor[3] = CreateActor(116, 2347.5073,-1263.8671,22.5095,87.7690);//бот форм
		}
	    case fRIFA: {
			actor[0] = CreateActor(175, 2346.9180,-1245.6836,22.5000,90.5893);//наркобот
		    actor[1] = CreateActor(174, 2327.8286,-1255.9642,22.5000,268.9006);//бот зброї
		    actor[2] = CreateActor(175, 2324.0752,-1273.6428,22.5000,305.5377);//бот материалов
		    actor[3] = CreateActor(174, 2347.5073,-1263.8671,22.5095,87.7690);//бот форм
	    }
	}
	SetActorVirtualWorld(actor[0], 0);
	SetActorVirtualWorld(actor[1], 0);
	SetActorVirtualWorld(actor[2], 0);
	SetActorVirtualWorld(actor[3], 0);
	SetActorPos(actor[0], 2346.9180,-1245.6836,22.5000);
	SetActorPos(actor[1], 2327.8286,-1255.9642,22.5000);
	SetActorPos(actor[2], 2324.0752,-1273.6428,22.5000);
	SetActorPos(actor[3], 2347.5073,-1263.8671,22.5095);
}
stock check_labrarry() {
	return 1;
}
stock IsValid3DTextLabel(Text3D:textid) {
	if(textid != Text3D:INVALID_3DTEXT_ID) return true;
	else return false;
}
stock DestroyDynamic3DTextLabelEx(&Text3D:text) {
	DestroyDynamic3DTextLabel(text);
	text = Text3D:INVALID_3DTEXT_ID;
}
CB: GunReady(playerid) {
    for(new id = 0;id < 24;id++) {
		if(!IsPlayerInDynamicCP(playerid, gun_pickup[id]) && GetPVarInt(playerid,"loadid") == id) {
			GameTextForPlayer(  playerid,("~r~FAILED"), 5000, 1);
			TI[playerid][tJobGun][2] = 0;
	        if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid,9);
			ClearAnimations(playerid);
			TI[playerid][tJobGun][1] = 1;
			return true;
		}
	}

	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
	TI[playerid][tJobGun][2] = 1;
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
 	if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid,8,2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
	SendOk(playerid,"Зброю зібрано. Віднесіть її на склад");
	EnableGPSForPlayer(playerid, 2731.9482,-2398.6021,13.6328);
	return true;
}
CB: clothes_timer(playerid) {
	new objectid = GetPVarInt(playerid,"id_object");
	DeletePVar(playerid,"id_object");
	if(!IsPlayerInDynamicArea(playerid,gAreas[arClothes][GetPVarInt(playerid,"clothes_id")])) {
		GameTextForPlayer(playerid,("~r~FAILED"), 5000, 1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
		ClearAnimations(playerid);
		TI[playerid][tClothesWork][1] = 1;
		DestroyDynamicObject(objectid);
		return true;
	}
	DestroyDynamicObject(objectid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
	TI[playerid][tClothesWork][1] = 3;
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,1,1,1,1,1);
 	if(!IsPlayerAttachedObjectSlotUsed(playerid, 8)) SetPlayerAttachedObject(playerid, 8, 2386, 5,  0.100000, 0.100000, 0.200000,  100.000000, 170.0, 100.000000,  1.000000, 1.000000, 1.000000);
	SendOk(playerid,"Одежда сшита. Отнесите ее на склад");
	new rand = random(10);
	if(rand == 5) {
		TI[playerid][tAlcotraz][1] = 1;
		D(playerid,DIALOG_NONE,DSM, ""YELLOW"Побег",""W"Думки...\n\nТак-так, маникен, возьму-ка я его себе..\nПотрібно подумать, куда его можно подложить..\nГлавное не спалиться..","Закрити","");
	}
	return true;
}
CB: alcatraz_timer(playerid) {
	SetPlayerPosAC(playerid,324.9965,539.5646,799.9875,202,0);
	SetPlayerFacingAngle(playerid,261.6177);
	SetCameraBehindPlayer(playerid);
	TI[playerid][tAlcotraz][0] = 150;
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Побег",""W"Думки...\n\nПотрібно бігти звідси пока не засекли..\nТак-так, вижу сверху люк..\nДобраться бы до него ещё..","Закрити","");
	DestroyDynamicObject(maniken[playerid]);
	maniken[playerid] = -1;
	return true;
}
stock update3dtext() {
	new string[128];
	new string_gung[512] = ""YELLOW"Банда  кількість наркотиків ціна за 1г\n";
	if(FI[fBALLAS][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{CC00FF}The Ballas    "YELLOW"%d    "ORANGE"%d\n",string_gung,FI[fBALLAS][fDrugsBuy],FI[fBALLAS][fDrugsPrice]);
	}
	if(FI[fVAGOS][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{ffff00}The Vagos    "YELLOW"%d    "ORANGE"%d\n",string_gung,FI[fVAGOS][fDrugsBuy],FI[fVAGOS][fDrugsPrice]);
	}
	if(FI[fGROVE][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{009900}The Grove    "YELLOW"%d    "ORANGE"%d\n",string_gung,FI[fGROVE][fDrugsBuy],FI[fGROVE][fDrugsPrice]);
	}
	if(FI[fAZTEC][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{00CCFF}The Aztecas    "YELLOW"%d    "ORANGE"%d\n",string_gung,FI[fAZTEC][fDrugsBuy],FI[fAZTEC][fDrugsPrice]);
	}
	if(FI[fRIFA][fDrugsBuy]) {
		format(string_gung,sizeof(string_gung),"%s{6666FF}The Rifa    "YELLOW"%d    "ORANGE"%d\n",string_gung,FI[fRIFA][fDrugsBuy],FI[fRIFA][fDrugsPrice]);
	}
	UpdateDynamic3DTextLabelText(labrary_text,-1,string_gung);

	if(invent_time > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(invent_time-unix, year, month, day, hour, minute, second);

		new invent_string[128];
		format(invent_string,sizeof(invent_string),"Доступно боєприпасів: "YELLOW"%d"W"\nКорабль отплывает через: "YELLOW"%d:%d",invent_mats,minute,second);
		UpdateDynamic3DTextLabelText(invent_text,-1,invent_string);
	}

	format(string,sizeof(string),"Рыбы На складі: "O"%.1f кг\n\n"W"Для продажи рыбы - "YELLOW"/sellfish",fish_sklad);
	UpdateDynamic3DTextLabelText(fish_text,-1,string);

	format(string,sizeof(string),"боєприпасів На складі: "ORANGE"%d",zavodsklad);
	UpdateDynamic3DTextLabelText(gun_3dtext[0],-1,string);

	format(string,sizeof(string),"боєприпасів доступно: "ORANGE"%d",zavodsklad);
	UpdateDynamic3DTextLabelText(gun_3dtext[1],-1,string);

	format(string,sizeof(string),"боєприпасів На складі: "ORANGE"%d",zavodsklad);
	UpdateDynamic3DTextLabelText(gun_3dtext[2],-1,string);

	format(string,sizeof(string),"Бочок На складі: "ORANGE"%d",oilsklad);
	UpdateDynamic3DTextLabelText(oil_3dtext,-1,string);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fARMYSF][fMats]);
	UpdateDynamic3DTextLabelText(sklad_armysf[0],-1,string);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fARMYSF][fMats]);
	UpdateDynamic3DTextLabelText(sklad_armysf[1],-1,string);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fARMYSF][fMats]);
	UpdateDynamic3DTextLabelText(sklad_armysf[2],-1,string);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fARMYLV][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_armylv[0],-1,string);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fLSPD][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_cops[0],-1,string);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fSFPD][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_cops[1],-1,string);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fLVPD][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_cops[2],-1,string);

	format(string,sizeof(string),"боєприпасів: "ORANGE"%dод:",FI[fFBI][fMats]);
 	UpdateDynamic3DTextLabelText(sklad_cops[3],-1,string);

	UpdateSkladFrakGang();
	UpdateSkladFrakMafia();
}
CB: ReloadAllAnims(playerid) {
    PreloadAnimLib(playerid,"BASEBALL");
   	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"BD_FIRE");
   	PreloadAnimLib(playerid,"BOMBER");
   	PreloadAnimLib(playerid,"CAMERA");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"COP_AMBIENT");
 	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"DAM_JUMP");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"DODGE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"GRAVEYARD");
	PreloadAnimLib(playerid,"HEIST9");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"LOWRIDER");
	PreloadAnimLib(playerid,"MD_CHASE");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"PAULNMAC");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"RYDER");
   	PreloadAnimLib(playerid,"RAPPING");
   	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"SHOP");
   	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"SNM");
	PreloadAnimLib(playerid,"STRIP");
	PreloadAnimLib(playerid,"SUNBATHE");
	PreloadAnimLib(playerid,"SWAT");
	PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"goggles");
	PreloadAnimLib(playerid,"BAR");
	PreloadAnimLib(playerid,"SPRAYCAN");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"KNIFE");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid, "SWORD");
	PreloadAnimLib(playerid, "BUDDY");
	PreloadAnimLib(playerid, "FLAME");
	PreloadAnimLib(playerid, "VENDING");
	ClearAnims(playerid);
	spaned[playerid]=1;
	return 1;
}
CB: ClearAnims(playerid) return ApplyAnimation(playerid, "BD_FIRE", "BD_Fire1", 4.1, 0, 0, 0, 0, 1, 1);
stock UpdateEconomyData(const field[],data){
	new query[156];
	format(query,sizeof(query),"UPDATE `economy` SET `%s` = '%d' LIMIT 1",field,data);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBonuses(const field[],data){
	new query[156];
	format(query,sizeof(query),"UPDATE `bonuses` SET `%s` = '%d' LIMIT 1",field,data);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateVIP(const field[],data,id){
	new query[156];
	format(query,sizeof(query),"UPDATE `vip` SET `%s` = '%d' WHERE `id_vip` = '%d' LIMIT 1",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateOtherData(const field[],data){
	new query[156];
	format(query,sizeof(query),"UPDATE `others` SET `%s` = '%d' LIMIT 1",field,data);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
SaveFraction(fractionID) {
    new query[256];
	format(query, sizeof(query), "UPDATE `fractions` SET `Leader` = '%s', `Admin` = '%s', `Time` = '%s' WHERE `ID` = '%i'",FI[fractionID][fLeader],FI[fractionID][fAdmin],FI[fractionID][fTime],fractionID);
	return mysql_tquery(connects, query, "", "");
}
SaveRank(rank,farction) {
	new query[256];
	format(query, sizeof(query), "UPDATE `fractions` SET `Rank_%d` = '%s' WHERE `ID` = '%i'",rank,RankName[farction][rank-1],farction);
	return mysql_tquery(connects, query, "", "");
}
stock GiveMoney(playerid, money, const s[]="None") {
	if(strlen(s)) {
	    new ip[16],query[256];
		GetPlayerIp(playerid, ip, sizeof(ip));
	    mysql_format(connects,query, sizeof(query), "INSERT INTO `givecash` (`Name`,`IP`,`Reason`,`Dollar`,`Cash`,`Date`) VALUES ('%s', '%s', '%s','%d','%d',CURRENT_TIMESTAMP);",player_name[playerid],ip,s,money,PlayerInfo[playerid][pCash]);
		mysql_tquery(connects, query, "", "");
	}
	new string[35];
	if(PlayerInfo[playerid][pCash] > PlayerInfo[playerid][pCash]+money) format(string,sizeof(string),"~r~ %d$",money);
	else format(string,sizeof(string),"~g~ +%d$",money);
	GameTextForPlayer(playerid, string, 5000, 1);
	
	PlayerInfo[playerid][pCash] += money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	UpdatePlayerData(playerid,"pCash",PlayerInfo[playerid][pCash]);
	return 1;
}
stock GetNearestTune(playerid) {
	new Float:dist[3],total_tune;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 1153.4031,-1208.7499,19.0252);
	dist[1] = GetPlayerDistanceFromPoint(playerid, -1786.8206,1206.0835,25.1250);
	dist[2] = GetPlayerDistanceFromPoint(playerid, 1643.8298,2197.1387,10.8203);

	if(dist[0] < dist[1] && dist[0] < dist[2]) total_tune = 1;
    else if(dist[1] < dist[0] && dist[1] < dist[2]) total_tune = 3;
    else if(dist[2] < dist[0] && dist[2] < dist[1]) total_tune = 2;
	return total_tune;
}
stock GetNearestHospital(playerid) {
	new Float:dist[3],total_hospital;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 1177.6864,-1323.2448,14.0830);
	dist[1] = GetPlayerDistanceFromPoint(playerid, 1641.8849,1833.5286,10.8508);
	dist[2] = GetPlayerDistanceFromPoint(playerid, -2666.6680,580.7857,14.4609);

	if(dist[0] < dist[1] && dist[0] < dist[2]) total_hospital = 1;
    else if(dist[1] < dist[0] && dist[1] < dist[2]) total_hospital = 3;
    else if(dist[2] < dist[0] && dist[2] < dist[1]) total_hospital = 2;
	return total_hospital;
}
stock GetNearestCar(playerid) {
	new Float:car_pos[2][3],id = -1;

	if(house_car[playerid][0]) GetVehiclePos(house_car[playerid][0], car_pos[0][0],car_pos[0][1],car_pos[0][2]);
	if(house_car[playerid][1]) GetVehiclePos(house_car[playerid][1], car_pos[1][0],car_pos[1][1],car_pos[1][2]);

	if(PlayerToPoint(4.0, playerid, car_pos[0][0], car_pos[0][1], car_pos[0][2])) id = 0;
	else if(PlayerToPoint(4.0, playerid, car_pos[1][0],car_pos[1][1],car_pos[1][2])) id = 1;
	return id;
}
stock SetPlayerHospital(playerid,bool:spawn = false) {
	if(TI[playerid][tLogin] == false) return 1;
	if(TI[playerid][tDuel] != -1) return 1;
	//SettingSpawn(playerid);
	if(PlayerInfo[playerid][pMember] == fARMYLV && start_work[playerid]) {
		PlayerInfo[playerid][pHospital] = 4;
		SetPlayerHealth(playerid,50 + random(7));
		return 1;
	}
	else if(PlayerInfo[playerid][pMember] == fARMYSF && start_work[playerid]) {
		PlayerInfo[playerid][pHospital] = 5;
		SetPlayerHealth(playerid,50 + random(7));
		return 1;
	}
	if(spawn == false) {
		new hosp = GetNearestHospital(playerid);
		PlayerInfo[playerid][pHospital] = hosp;
	}
	SetPlayerHealth(playerid,20 + random(7));
	return 0;
}
stock GetNearestPolice(playerid) {
	new Float:dist[3],total_police;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 1553.5479,-1675.6986,16.1953);//lspd
	dist[1] = GetPlayerDistanceFromPoint(playerid, -1605.5505,711.8779,13.8672);//sfpd
	dist[2] = GetPlayerDistanceFromPoint(playerid, 2337.1851,2458.0256,14.9688);//lvpd

	if(dist[0] < dist[1] && dist[0] < dist[2]) total_police = 1;
    else if(dist[1] < dist[0] && dist[1] < dist[2]) total_police = 3;
    else if(dist[2] < dist[0] && dist[2] < dist[1]) total_police = 2;
	return total_police;
}
stock GetFamName(fam, rank) {
	if(rank > 0) return FamRanks[fam][(rank-1)];
	else return FamRanks[fam][0];
}
stock GetRankName(org, rank) {
	if(rank > 0) return RankName[org][(rank-1)];
	else return RankName[org][0];
}
stock GetTeamID(playerid) {
	if(PlayerInfo[playerid][pMember] > 0) return PlayerInfo[playerid][pMember];
	if(PlayerInfo[playerid][pLeader] > 0) return PlayerInfo[playerid][pLeader];
	return false;
}
CB: SaveServer() {
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		SaveAccount(i), save_car(i,0), save_car(i,1);
	}
	save_other();
}
stock SkinSelect(playerid, id) {
	if(GetPVarInt(playerid,"registrations")) {
		if(id == 0) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")+1);
			if(GetPVarInt(playerid,"join_ped_item") == 8) SetPVarInt(playerid,"join_ped_item",0);
			else if(GetPVarInt(playerid,"join_ped_item") == 14) SetPVarInt(playerid,"join_ped_item",8);
		}
		else if(id == 1) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")-1);
			if(GetPVarInt(playerid,"join_ped_item") == -1) SetPVarInt(playerid,"join_ped_item",7);
			else if(GetPVarInt(playerid,"join_ped_item") == 7) SetPVarInt(playerid,"join_ped_item",13);
		}
		PlayerTextDrawHide(playerid, reg_tds[playerid][0]);
		PlayerTextDrawHide(playerid, reg_tds[playerid][1]);

		PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][0], skin_register[GetPVarInt(playerid,"join_ped_item")][0]);
		PlayerTextDrawSetPreviewModel(playerid,reg_tds[playerid][1], skin_register[GetPVarInt(playerid,"join_ped_item")][0]);


		PlayerTextDrawShow(playerid, reg_tds[playerid][0]);
		PlayerTextDrawShow(playerid, reg_tds[playerid][1]);
		A_SetPlayerSkin(playerid,skin_register[GetPVarInt(playerid,"join_ped_item")][0]);
	}
	else if(GetPVarInt(playerid,"ChangingSkin")) {
		if(id == 0) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")+1);
			if(GetPVarInt(playerid,"join_ped_item") == 67) SetPVarInt(playerid,"join_ped_item",0);
			else if(GetPVarInt(playerid,"join_ped_item") == 78) SetPVarInt(playerid,"join_ped_item",67);
		}
		else if(id == 1) {
			SetPVarInt(playerid,"join_ped_item",GetPVarInt(playerid,"join_ped_item")-1);
			if(GetPVarInt(playerid,"join_ped_item") == -1) SetPVarInt(playerid,"join_ped_item",66);
			else if(GetPVarInt(playerid,"join_ped_item") == 66) SetPVarInt(playerid,"join_ped_item",78);
		}
		A_SetPlayerSkin(playerid,ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][0]);

		new price;
		if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
			new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*vip_status[PlayerInfo[playerid][pVips]][vip_chose]);
			price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
		}
		else {
	    	if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
				new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
				price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
			}
			else if(BonusInfo[act_select] == 2) {
				new seller = floatround(ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]/100*BonusInfo[act_buyskin]);
				price = (ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1]-seller);
			}
		    else price = ped_buyclothes[GetPVarInt(playerid,"join_ped_item")][1];
		}

		new string[12];
		format(string,sizeof(string),"$%d",price);
		PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
	}
 	return 1;
}
stock A_SetPlayerFacingAngle(playerid, Float:angle) {
    SetPlayerFacingAngle(playerid, angle);
    SetCameraBehindPlayer(playerid);
    return true;
}
stock FreezePlayerForTime(playerid, time) {
	TogglePlayerControllable(playerid, 0);
	SetTimerEx("UnFreeze", time * 1000, false, "i", playerid);
}
stock CreateOrgsVehicle(orgs,rank,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid = A_AddStaticVehicleEx(model,X,Y,Z,A,Color_1,Color_2,spawntime,VEHICLE_TYPE_FRACTION);
	VehicleInfo[carid][vTeam] = orgs;
	VehicleInfo[carid][vRank] = rank;
	switch(orgs) {
		case fLSPD: {
			if(model == 560 || model == 541) {
				for(new i; i < 5; i ++) {
					VehicleInfo[carid][vEngineBoost] += engine_name_boost[i];
					VehicleInfo[carid][vBrakeBoost] += brake_name_boost[i];
					//perf_engine_object(carid);
				}
			}
			SetVehicleNumberPlate(carid, "LSPD");
		}
		case fSFPD: {
			if(model == 560 || model == 541) {
				for(new i; i < 5; i ++) {
					VehicleInfo[carid][vEngineBoost] += engine_name_boost[i];
					VehicleInfo[carid][vBrakeBoost] += brake_name_boost[i];
					//perf_engine_object(carid);
				}
			}
			SetVehicleNumberPlate(carid, "SFPD");
		}
		case fLVPD: {
			if(model == 560 || model == 541) {
				for(new i; i < 5; i ++) {
					VehicleInfo[carid][vEngineBoost] += engine_name_boost[i];
					VehicleInfo[carid][vBrakeBoost] += brake_name_boost[i];
					//perf_engine_object(carid);
				}
			}
			SetVehicleNumberPlate(carid, "LVPD");
		}
		case fFBI: 	{
			if(model == 415)  {
				for(new i; i < 5; i ++) {
					VehicleInfo[carid][vEngineBoost] += engine_name_boost[i];
					VehicleInfo[carid][vBrakeBoost] += brake_name_boost[i];
					//perf_engine_object(carid);
				}
			}
			SetVehicleNumberPlate(carid, "FBI");
			if(model != 522) SetVehicleHealth(carid,3000.0);
		}
		case fWHITEHOUSE: 	{
			SetVehicleNumberPlate(carid, "WHITE HOUSE");
			SetVehicleHealth(carid,3000.0);
		}
		case fARMYLV: 		SetVehicleNumberPlate(carid, "ARMY LV");
		case fARMYSF: 		SetVehicleNumberPlate(carid, "ARMY SF");
		case fMAYOR: 		SetVehicleNumberPlate(carid, "MAYOR");
		case fLSNEWS: 		SetVehicleNumberPlate(carid, "LS NEWS");
		case fSFNEWS: 		SetVehicleNumberPlate(carid, "SF NEWS");
		case fLVNEWS: 		SetVehicleNumberPlate(carid, "LV NEWS");
		case fINSTRUCTORS: 	SetVehicleNumberPlate(carid, "AUTOSCHOOL");
		case fBALLAS: 		SetVehicleNumberPlate(carid, "BALLAS");
		case fVAGOS: 		SetVehicleNumberPlate(carid, "VAGOS");
		case fGROVE: 		SetVehicleNumberPlate(carid, "GROVE");
		case fAZTEC: 		SetVehicleNumberPlate(carid, "AZTECAC");
		case fRIFA: 		SetVehicleNumberPlate(carid, "RIFA");
		case fLCN: 			SetVehicleNumberPlate(carid, "ITALIAN");
		case fYAKUZA: 		SetVehicleNumberPlate(carid, "JAPAN");
		case fMEDICLS: 		SetVehicleNumberPlate(carid, "MEDICS LS");
		case fMEDICSF: 		SetVehicleNumberPlate(carid, "MEDICS SF");
		case fMEDICLV: 		SetVehicleNumberPlate(carid, "MEDICS LV");
	}
	return carid;
}
stock CreateBizVehicle(biz,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_BIZZ);
	VehicleInfo[carid][vBizz] = biz;
	return carid;
}
stock CreateJobVehicle(job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid;
	if(job == 71) carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_ALCATRAZ);
	else carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_JOB);
	VehicleInfo[carid][vJob] = job;
	return carid;
}
stock CreateSpawnCar(model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_SPAWN);
	return carid;
}
stock CreateBusVehicle(bus,job,model,Float:X,Float:Y,Float:Z,Float:A,Color_1,Color_2,spawntime) {
	new carid = A_AddStaticVehicleEx(model, X, Y, Z, A, Color_1, Color_2, spawntime,VEHICLE_TYPE_JOB);
	VehicleInfo[carid][vJob] = job;
	VehicleInfo[carid][vBus] = bus;
	return carid;
}
stock IsABikeSped(carid){switch(GetVehicleModel(carid)){case 448,435,449,450,457,464,465,481,485,501,509,510,530,564,569,570,584,594,606,607,608,610,611:return true;}return false;}
stock IsACarNumber(carid){switch(carid){case 400..402,404,405,409..413,415,419,421,422,424,426,429,434,439,444,445,451,459,461..463,466,467,470,478,474,475,477,479,480,482,490,491,492,494,495,496,502..504,506,517,518,521,528,531,533,534,535,539,541..543,545,549,551,554,555..562,566,567,568,571,573,575,576,578,579,580,585..587,589,599,600..603,489:return true;}return false;}
IsAPlane(carid) return (GetVehicleState(carid) == VEHICLE_STATE_PLANE);
IsAVelik(carid) return (GetVehicleState(carid) == VEHICLE_STATE_VELIK);
IsABoat(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BOAT);
IsABike(carid) return (GetVehicleState(carid) == VEHICLE_STATE_BIKE);

stock A_AddStaticVehicleEx(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,type,interior = 0,world = 0, addsiren = 0) {
	if(IsValidVehicleModel(model)) {
		new vehicleid = AddStaticVehicleEx(model,x,y,z,a,color_1,color_2,spawntime, addsiren);
		if(vehicleid != INVALID_VEHICLE_ID) {
			VehicleInfo[vehicleid][veX] = x;
			VehicleInfo[vehicleid][veY] = y;
			VehicleInfo[vehicleid][veZ] = z;
			VehicleInfo[vehicleid][veA] = a;
			VehicleInfo[vehicleid][vColor][0] = color_1;
			VehicleInfo[vehicleid][vColor][1] = color_2;
			VehicleInfo[vehicleid][vPlayer] = -1;
			VehicleInfo[vehicleid][vSpawn] = spawntime;
			VehicleInfo[vehicleid][vType] = type;
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, world);

			switch(model) {
				case 472,473,493,595,484,430,452..454,446: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
				case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
				case 448,435,449,450,457,462,464,465,485,501,530,564,569,570,584,594,606,607,608,610,611: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
				case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
				default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
			}
			if(model == 462) VehicleInfo[vehicleid][vFuel] = 100;
		}
	    return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}
stock A_DestroyVehicle(vehicleid) {
	if(IsValidVehicle(vehicleid)) {
		if(VehicleInfo[vehicleid][vBizz]) {
			VehicleInfo[vehicleid][vBizz] = 0;
		}
		VehicleInfo[vehicleid][vType] = VEHICLE_TYPE_NONE;
		VehicleInfo[vehicleid][vEngineBoost] = 0;
		VehicleInfo[vehicleid][vBrakeBoost] = 0;
		VehicleInfo[vehicleid][vPerfStatus] = 0;
		VehicleInfo[vehicleid][vKey] = 0;
		VehicleInfo[vehicleid][vLock] = 0;
		VehicleInfo[vehicleid][vEngine] = 0;
		VehicleInfo[vehicleid][vRobHouse] = false;
		for(new i; i < 5; i ++) {
			VehicleInfo[vehicleid][vPEngine][i] = 0;	
			VehicleInfo[vehicleid][vPBrake][i] = 0;		
		}
		if(LightsObject[vehicleid][0]!=-1 || LightsObject[vehicleid][1]!=-1) {
			if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
			if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
			LightsObject[vehicleid][0] = -1;
			LightsObject[vehicleid][1] = -1;
			SignalTick[vehicleid][0] = 0;
			SignalTick[vehicleid][1] = -1;
			Signal[vehicleid] = 0;
		}
		return DestroyVehicle(vehicleid);
	}
	return 0;
}
stock A_CreateVehicle(model,Float:x,Float:y,Float:z,Float:a,color_1,color_2,spawntime = 300,type,interior = 0,world = 0, addsiren = 0) {
	if(IsValidVehicleModel(model)) {
		new vehicleid = CreateVehicle(model,x,y,z,a,color_1,color_2,spawntime, addsiren);
		if(vehicleid != INVALID_VEHICLE_ID) {
			VehicleInfo[vehicleid][veX] = x;
			VehicleInfo[vehicleid][veY] = y;
			VehicleInfo[vehicleid][veZ] = z;
			VehicleInfo[vehicleid][veA] = a;
			VehicleInfo[vehicleid][vColor][0] = color_1;
			VehicleInfo[vehicleid][vColor][1] = color_2;
			VehicleInfo[vehicleid][vPlayer] = -1;
			VehicleInfo[vehicleid][vSpawn] = spawntime;
			VehicleInfo[vehicleid][vType] = type;
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, world);

			switch(model) {
				case 472,473,493,595,484,430,452..454,446: VehicleState[vehicleid] = VEHICLE_STATE_BOAT;
				case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469:  VehicleState[vehicleid] = VEHICLE_STATE_PLANE;
				case 448,435,449,450,457,462,464,465,485,501,530,564,569,570,584,594,606,607,608,610,611: VehicleState[vehicleid] = VEHICLE_STATE_BIKE;
				case 509, 481, 510: VehicleState[vehicleid] = VEHICLE_STATE_VELIK;
				default: VehicleState[vehicleid] = VEHICLE_STATE_CAR;
			}
			if(model == 462) VehicleInfo[vehicleid][vFuel] = 100;
		}
		return vehicleid;
	}
	return INVALID_VEHICLE_ID;
}


stock getlight_status(carid) return VehicleInfo[carid][vLights];

stock ToggleEngine(vehicleid, playerid = -1) {
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(engine == 1) SetVehicleParamsEx(vehicleid,0,lights,alarm,doors,bonnet,boot,objective);
	else SetVehicleParamsEx(vehicleid,1,lights,alarm,doors,bonnet,boot,objective);
    if(playerid != -1 && !IsAVelik(vehicleid) && !IsAPlane(vehicleid) && !IsABoat(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
	    if(engine == 0) {
			SetVehicleParamsEx(vehicleid, 1, lights, alarm, doors, bonnet, boot, objective);
			PlayerTextDrawHide(playerid,speedometr[playerid][10]);
			PlayerTextDrawColor(playerid, speedometr[playerid][10], 780799999);
			PlayerTextDrawShow(playerid,speedometr[playerid][10]);
		}
		else {
			SetVehicleParamsEx(vehicleid, 0, lights, alarm, doors, bonnet, boot, objective);
			PlayerTextDrawHide(playerid,speedometr[playerid][10]);
			PlayerTextDrawColor(playerid, speedometr[playerid][10], -1523963137);
			PlayerTextDrawShow(playerid,speedometr[playerid][10]);
		}
	}
	if(LightsObject[vehicleid][0] != -1) DestroyDynamicObject(LightsObject[vehicleid][0]);
	if(LightsObject[vehicleid][1] != -1) DestroyDynamicObject(LightsObject[vehicleid][1]);
	LightsObject[vehicleid][0] = -1;
	LightsObject[vehicleid][1] = -1;
	SignalTick[vehicleid][0] = 0;
	SignalTick[vehicleid][1] = -1;
	Signal[vehicleid] = 0;
	return 1;
}

CB: check_ip_ban(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		ErrorMessage(playerid, "Ваш IP адрес заблокирован");
		Kick(playerid);
	}
	else {
		new query[256];
		mysql_format(connects,query,sizeof(query),"SELECT * FROM `"TABLE_BAN"` WHERE BINARY `Name` = '%s' LIMIT 1",player_name[playerid]);
		mysql_tquery(connects,query,"check_banned","i",playerid);
	}
}
CB: check_banned(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;

	new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA = 0;

	cache_get_value_index(0,1,NAME_PLAYER,24);
	cache_get_value_index(0,2,NAME_ADMIN,24);
	cache_get_value_index(0,3,BAN_REASON,24);
	cache_get_value_index_int(0,4,UNBAN_DATA);
	if(UNBAN_DATA > unix) {
		new date_ban[6];
		timestamp_to_date(UNBAN_DATA,date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);

		static const f_str[] = ""W"Ваш игровой аккаунт:\t"NO"%s\n\
"W"Разблокировка:\t\t"NO"%02d/%02d/%02d %02d:%02d:%02d\n\
"W"Причина:"NO"\t\t\t%s\n\
"W"Заблокировал:"NO"\t\t%s";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 30) + (-2 + 30) + (-2 + 12) + (-2 + MAX_PLAYER_NAME)];

		format(string,sizeof(string),f_str,NAME_PLAYER, date_ban[2],date_ban[1],date_ban[0],date_ban[3],date_ban[4],date_ban[5], BAN_REASON, NAME_ADMIN);
		D(playerid,DIALOG_BAN,DSM, ""YELLOW"Цей аккаунт заблокирован",string,"Закрити","");
		Kick(playerid);
		return 1;
	}
	else {
		new query[128];
		mysql_format(connects,query,sizeof(query), "DELETE FROM `ban` WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
		mysql_tquery(connects, query);
	}
	return 1;
}
CB:	PlayerRegister(playerid) {
	PlayerInfo[playerid][pID] = cache_insert_id();
	new query[100];
	format(query,sizeof query,"SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `pID` = '%i' LIMIT 1",PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "load_account","i",playerid);
	TI[playerid][tSelectSkin] = false;
	return true;
}
CB: load_load(playerid) {
	if(TI[playerid][tLogin]) return Kick(playerid),printf("%s вызвал load_load повторно",player_name[playerid]);
	new query[100];
	format(query, sizeof(query), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE pID = '%d' LIMIT 1",PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "load_account", "d", playerid);
	return 1;
}
CB: load_account(playerid) {
	if(TI[playerid][tLogin]) return Kick(playerid),printf("%s вызвал load_account повторно",player_name[playerid]);
	cache_get_value_name_int(0, "pID",PlayerInfo[playerid][pID]);
	cache_get_value_name(0, "pIpReg",PlayerInfo[playerid][pIpReg],17);
    cache_get_value_name(0, "pKeyip",PlayerInfo[playerid][pKeyip],5);
    cache_get_value_name(0, "pDataReg",PlayerInfo[playerid][pDataReg],32);
    cache_get_value_name(0, "pMarried",PlayerInfo[playerid][pMarried],MAX_PLAYER_NAME);
    cache_get_value_name(0, "pDrug",PlayerInfo[playerid][pDrug],MAX_PLAYER_NAME);
	new weapons[54],ammos[54];
    cache_get_value_name(0, "pWeapons",weapons,53);
    cache_get_value_name(0, "pAmmos",ammos,53);
	new skills[33];
    cache_get_value_name(0, "pGunSkills",skills,32);

    cache_get_value_name(0, "pEmail",PlayerInfo[playerid][pEmail],36);
    cache_get_value_name(0, "pAccusedof",PlayerInfo[playerid][pAccusedof],43);
    cache_get_value_name(0, "pVictim",PlayerInfo[playerid][pVictim],MAX_PLAYER_NAME);
	cache_get_value_name(0,	"licenses",lic[playerid], 64);
	cache_get_value_name(0,	"Settings",PlayerInfo[playerid][pSettings], 48);
	cache_get_value_name(0, "prefix",PlayerInfo[playerid][pPrefix],36);
	new slotitem[64];
	cache_get_value_name(0,	"pSlotItem",slotitem, 63);
	new slotitem_use[64];
	cache_get_value_name(0,	"pSlotItem_Use",slotitem_use, 63);
    
	sscanf(skills, 							"p<,>a<i>[6]",	PlayerInfo[playerid][pGunSkill]);
	sscanf(lic[playerid],					"p<,>a<i>[4]",	lic[playerid]);
	sscanf(PlayerInfo[playerid][pSettings],			"p<|>a<i>[11]",	PlayerInfo[playerid][pSettings]);
	sscanf(slotitem,						"p<|>a<i>[8]",	PlayerInfo[playerid][pSlotItem]);
	sscanf(slotitem_use,					"p<|>a<i>[8]",	PlayerInfo[playerid][pSlotItem_Use]);

	cache_get_value_name_float(0,"pHP", PlayerInfo[playerid][pHP]);
	cache_get_value_name_int(0,"youtube", PlayerInfo[playerid][pYoutube]);
	cache_get_value_name_float(0,"pFish", PlayerInfo[playerid][pFish]);
	cache_get_value_name_float(0,"pSnow", PlayerInfo[playerid][pSnow]);

	cache_get_value_name_int(0,"Skin", PlayerInfo[playerid][pSkin]);
    cache_get_value_name_int(0,"pLevel", PlayerInfo[playerid][pLevel]);
	cache_get_value_name_int(0,"donatemoney", PlayerInfo[playerid][pRouble]);
    cache_get_value_name_int(0,"pJail", PlayerInfo[playerid][pJail]);
    cache_get_value_name_int(0,"house", PlayerInfo[playerid][pHouse]);
    cache_get_value_name_int(0,"tempkey", PlayerInfo[playerid][pTempKey]);
    cache_get_value_name_int(0,"bussiness", PlayerInfo[playerid][pBusiness]);
	cache_get_value_name_int(0,"hotelroom", PlayerInfo[playerid][pRoom]);
	cache_get_value_name_int(0,"hotelid", PlayerInfo[playerid][pHotel]);
	cache_get_value_name_int(0,"airport", PlayerInfo[playerid][pAirport]);
    cache_get_value_name_int(0,"pMats", PlayerInfo[playerid][pMats]);
    cache_get_value_name_int(0,"pSex", PlayerInfo[playerid][pSex]);
    cache_get_value_name_int(0,"pArrested", PlayerInfo[playerid][pArrested]);
    cache_get_value_name_int(0,"mute", PlayerInfo[playerid][pMute]);
    cache_get_value_name_int(0,"pCrimes", PlayerInfo[playerid][pCrimes]);
    cache_get_value_name_int(0,"pExp", PlayerInfo[playerid][pExp]);
    cache_get_value_name_int(0,"pCash", PlayerInfo[playerid][pCash]);
    cache_get_value_name_int(0,"pJailTime", PlayerInfo[playerid][pJailTime]);
    cache_get_value_name_int(0,"pDrugs", PlayerInfo[playerid][pDrugs]);
    cache_get_value_name_int(0,"pLeader", PlayerInfo[playerid][pLeader]);
    cache_get_value_name_int(0,"pMember", PlayerInfo[playerid][pMember]);
    cache_get_value_name_int(0,"pRank", PlayerInfo[playerid][pRank]);
    cache_get_value_name_int(0,"pJob", PlayerInfo[playerid][pJob]);
    cache_get_value_name_int(0,"pModel", PlayerInfo[playerid][pFracSkin]);
    cache_get_value_name_int(0,"pPhone", PlayerInfo[playerid][pPhone]);
    cache_get_value_name_int(0,"pZakonp", PlayerInfo[playerid][pZakonp]);
    cache_get_value_name_int(0,"pAddiction", PlayerInfo[playerid][pAddiction]);
	cache_get_value_name_int(0,"pWarns", PlayerInfo[playerid][pWarns]);
	cache_get_value_name_int(0,"warntime", PlayerInfo[playerid][punWarnstime]);
    cache_get_value_name_int(0,"pFuel", PlayerInfo[playerid][pFuel]);
    cache_get_value_name_int(0,"pBank", PlayerInfo[playerid][pBank]);
    cache_get_value_name_int(0,"pMobile", PlayerInfo[playerid][pMobile]);
    cache_get_value_name_int(0,"pSearch", PlayerInfo[playerid][pSearch]);
    cache_get_value_name_int(0,"pPlayTime_one", PlayerInfo[playerid][pPlayTime][0]);
    cache_get_value_name_int(0,"pPlayTime_two", PlayerInfo[playerid][pPlayTime][1]);
    cache_get_value_name_int(0,"pHospital", PlayerInfo[playerid][pHospital]);
	cache_get_value_name_int(0,"pRod", PlayerInfo[playerid][pRod]);
	cache_get_value_name_int(0,"pRopes", PlayerInfo[playerid][pRopes]);
	cache_get_value_name_int(0,"pWorms", PlayerInfo[playerid][pWorms]);
	cache_get_value_name_int(0,"family", PlayerInfo[playerid][pFamily]);
	cache_get_value_name_int(0,"progress", PlayerInfo[playerid][pProgress]);
	cache_get_value_name_int(0,"spawn", PlayerInfo[playerid][pSpawn]);
	cache_get_value_name_int(0,"salary", PlayerInfo[playerid][pSalary]);
	cache_get_value_name_int(0,"book", PlayerInfo[playerid][pBook]);
	cache_get_value_name_int(0,"watch", PlayerInfo[playerid][pWatch]);
	cache_get_value_name_int(0,"MedCard", PlayerInfo[playerid][pMedCard]);
	cache_get_value_name_int(0,"MedHeal", PlayerInfo[playerid][pMedHeal]);
	cache_get_value_name_int(0,"Advert", PlayerInfo[playerid][pAdvert]);
	cache_get_value_name_int(0,"ArmSkin", PlayerInfo[playerid][pArmSkin]);
	cache_get_value_name_int(0,"FracDuty", start_work[playerid]);
	cache_get_value_name_int(0,"bizz_work", PlayerInfo[playerid][bizz_work]);
	cache_get_value_name_int(0,"bizz_status", PlayerInfo[playerid][bizz_status]);
	cache_get_value_name_int(0,"bizz_cash", PlayerInfo[playerid][bizz_cash]);
	cache_get_value_name_int(0,"bizz_lcash", PlayerInfo[playerid][bizz_lcash]);
	cache_get_value_name_int(0,"pGolos", PlayerInfo[playerid][pGolos]);
	cache_get_value_name_int(0,"pBlago", PlayerInfo[playerid][pBlago]);
	cache_get_value_name_int(0,"pVips", PlayerInfo[playerid][pVips]);
	cache_get_value_name_int(0,"pVipTime", PlayerInfo[playerid][pVipTime]);
	cache_get_value_name_int(0,"pVipName", PlayerInfo[playerid][pVipName]);
	cache_get_value_name_int(0,"fwarn", PlayerInfo[playerid][pfWarn]);
	cache_get_value_name_int(0,"pDisease_0", PlayerInfo[playerid][pDisease][0]);
	cache_get_value_name_int(0,"pDisease_1", PlayerInfo[playerid][pDisease][1]);
	cache_get_value_name_int(0,"pSatiety", PlayerInfo[playerid][pSatiety]);
	cache_get_value_name_int(0,"pFamRank", PlayerInfo[playerid][pFamRank]);
	cache_get_value_name_int(0,"pDSatiety", PlayerInfo[playerid][pDSatiety]);
	cache_get_value_name_int(0,"pDDisease", PlayerInfo[playerid][pDDisease]);
	cache_get_value_name_int(0,"pBox", PlayerInfo[playerid][pBox]);
	cache_get_value_name_int(0,"pMedKit", PlayerInfo[playerid][pMedKit]);
	cache_get_value_name_int(0,"pMPromo", PlayerInfo[playerid][pMPromo]);
	cache_get_value_name_int(0,"pAdmMSG", PlayerInfo[playerid][pAdmMSG]);
	cache_get_value_name_int(0,"pAdmKL", PlayerInfo[playerid][pAdmKL]);
	cache_get_value_name_int(0,"pMask", PlayerInfo[playerid][pMask]);
	cache_get_value_name_int(0,"pGoogle", PlayerInfo[playerid][pGoogleSec]);

	cache_get_value_name(0, "GoogleCode",PlayerInfo[playerid][pGoogle],63);

	cache_get_value_name_int(0,"homesell", PlayerInfo[playerid][pSellNeed][0]);
	cache_get_value_name_int(0,"bizzsell", PlayerInfo[playerid][pSellNeed][1]);
	cache_get_value_name_int(0,"hotelsell", PlayerInfo[playerid][pSellNeed][2]);
	cache_get_value_name_int(0,"airsell", PlayerInfo[playerid][pSellNeed][3]);
	cache_get_value_name_int(0,"roomsell", PlayerInfo[playerid][pSellNeed][4]);
	cache_get_value_name_int(0,"pVipadd", PlayerInfo[playerid][pVipAdd]);
	cache_get_value_name_int(0,"GunLic", PlayerInfo[playerid][pGunLic]);
	cache_get_value_name_int(0,"drunginv", PlayerInfo[playerid][pDrugInv]);
	cache_get_value_name_int(0,"pHelper", PlayerInfo[playerid][pHelper]);
	cache_get_value_name_int(0,"pAsk", PlayerInfo[playerid][pAsk]);
	cache_get_value_name_int(0,"pInstr", PlayerInfo[playerid][pInstrument]);
	cache_get_value_name_int(0,"pAskmute", PlayerInfo[playerid][pAskmute]);
	cache_get_value_name_int(0,"pJemmy", PlayerInfo[playerid][pJemmy]);
	cache_get_value_name_int(0,"pFMute", PlayerInfo[playerid][pFMute]);

	//угон
	cache_get_value_name_int(0,"theftSkill", PlayerInfo[playerid][ptheftSkill]);
	cache_get_value_name_int(0,"theftExp", PlayerInfo[playerid][ptheftExp]);
	cache_get_value_name_int(0,"theftTime", PlayerInfo[playerid][ptheftTime]);
	cache_get_value_name_int(0,"theftHome", PlayerInfo[playerid][ptheftHome]);

	cache_get_value_name_int(0,"pDonateBank", PlayerInfo[playerid][pDonateBank]);
	cache_get_value_name_int(0,"pDonateBh", PlayerInfo[playerid][pDonateBh]);
	cache_get_value_name_int(0,"pBoomBox", PlayerInfo[playerid][pBoomBox]);

	SetString(player_ip[playerid],player_ip_check[playerid]);
	SetPlayerHealth(playerid, PlayerInfo[playerid][pHP]);
	//Відновлення на місце виходу, записуємо дані із БД в значні
	new st[250];
	cache_get_value_name(0, "spawnData", st, sizeof (st) - 1);
	sscanf(st, "p<,>ffffiii",
	PlayerInfo[playerid][pSpawnPos][0], PlayerInfo[playerid][pSpawnPos][1], PlayerInfo[playerid][pSpawnPos][2], PlayerInfo[playerid][pSpawnPos][3]);

	new data[256];
	cache_get_value(0, "phonenumber", data), sscanf(data,"p<|>a<i>[25]",PlayerInfo[playerid][pPhoneNumber]);

	new get_name_store[1024];
	cache_get_value(0,"phonename",get_name_store, 1024);
	sscanf(get_name_store,"p<|>s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]",
	pPhoneName[playerid][0],pPhoneName[playerid][1],pPhoneName[playerid][2],pPhoneName[playerid][3],pPhoneName[playerid][4],
	pPhoneName[playerid][5],pPhoneName[playerid][6],pPhoneName[playerid][7],pPhoneName[playerid][8],pPhoneName[playerid][9],
	pPhoneName[playerid][10],pPhoneName[playerid][11],pPhoneName[playerid][12],pPhoneName[playerid][13],pPhoneName[playerid][14],
	pPhoneName[playerid][15],pPhoneName[playerid][16],pPhoneName[playerid][17],pPhoneName[playerid][18],pPhoneName[playerid][19],
	pPhoneName[playerid][20],pPhoneName[playerid][21],pPhoneName[playerid][22],pPhoneName[playerid][23],pPhoneName[playerid][24]);
	if(PlayerInfo[playerid][pID] == 0) return ErrorMessage(playerid,"Обратитесь к адміністрації, помилка #77"),Kick(playerid),print("Обратитесь к адміністрації, помилка #77");

	new g_data[11], a_data[11];
	sscanf(weapons, "p<,>a<i>[11]", g_data);
	sscanf(ammos, "p<,>a<i>[11]", a_data);
	for(new i; i < 10; i ++) {
		GunPlayer[playerid][i][0] = g_data[i];
		GunPlayer[playerid][i][1] = a_data[i];
	}
	TI[playerid][tLoginTime] = 0;
    TI[playerid][tLogin] = true;

	if(biz_war_gangzone != -1) GangZoneShowForPlayer(playerid, biz_war_gangzone, gFractionSpawn[MZInfo[bFrakVlad]][fracColor]);
	if(PlayerInfo[playerid][pWarns] > 0) {
		/*if(PlayerInfo[playerid][punWarnstime] > unix) {
			SendOk(playerid,"На аккаунте имеются активные предупреждения. Подробнее - "W"/warns");
		}*/
		if(PlayerInfo[playerid][punWarnstime] <= unix) {
			/*new querys[128];
			format(querys, sizeof(querys), "DELETE FROM `warns` WHERE `name` = '%s'", player_name[playerid]);
			mysql_tquery(connects, querys, "", "");*/
			
			SendClientMessage(playerid,CGOLD, "Предупреждения были сняты");
			PlayerInfo[playerid][punWarnstime] = 0;
			PlayerInfo[playerid][pWarns] = 0;
			UpdatePlayerData(playerid, "pWarns", 0);
			UpdatePlayerData(playerid, "warntime", 0);
		}
	}
	SendClientMessage(playerid, -1, "Будь-ласка, дотримуйтесь "YELLOW"RolePlay "W"режиму та правил серверу!");
	if(!PlayerInfo[playerid][pGoogleSec]) {
		ErrorMessage(playerid,""NO"[Підказка]{f6f6d9} У Вас не підключено захист Google Authenticator");
		ErrorMessage(playerid,""NO"[Підказка]{f6f6d9} Рекомендуємо підключити цей вид захисту. "W"/mm > Безпека > Google Authenticator");
	}
	if(!PlayerInfo[playerid][pGolos] && PlayerInfo[playerid][pLevel] >= 3 && election) {
		SendClientMessage(playerid,COLOR_RED,""YELLOW" [Вибори] {f6f6d9}В нашому штаті проходят вибори президента");
		SendClientMessage(playerid,COLOR_RED,""YELLOW" [Вибори] {f6f6d9}Віддати голос кандидату можно в мерії на 2 поверсі: "W"(/gps > 4 > 2)");
	}
	if(PlayerInfo[playerid][pSellNeed][0]) {
		SendClientMessage(playerid,COLOR_REDD,"Ваш дом продан государству за неуплату");
		UpdatePlayerData(playerid,"homesell",0);
	}
	if(PlayerInfo[playerid][pSellNeed][1]) {
		SendClientMessage(playerid,COLOR_REDD,"Ваш бізнес продан государству за неуплату");
		UpdatePlayerData(playerid,"bizzsell",0);
	}
	if(PlayerInfo[playerid][pSellNeed][2]) {
		SendClientMessage(playerid,COLOR_REDD,"Ваш отель продан государству за неуплату");
		UpdatePlayerData(playerid,"hotelsell",0);
	}
	if(PlayerInfo[playerid][pSellNeed][3]) {
		SendClientMessage(playerid,COLOR_REDD,"Ваш аэропорт продан государству за неуплату");
		UpdatePlayerData(playerid,"airsell",0);
	}
	if(PlayerInfo[playerid][pSellNeed][4]) {
		SendClientMessage(playerid,COLOR_REDD,"Аренда номера в готелі закінчилась");
		UpdatePlayerData(playerid,"roomsell",0);
	}
	if(PlayerInfo[playerid][pYoutube]) SendClientMessage(playerid, 0xfffc700ff, "[Информация]"W" Ви авторизувались як ютубер сервера"YELLOW" (/yhelp)");
	if(PlayerInfo[playerid][pVips]) SendClientMessage(playerid,0x33CC00AA,"Ви увійшли як VIP гравець");
	if(PlayerInfo[playerid][pVipTime] <= unix && PlayerInfo[playerid][pVips] != VIP_FOREVER && PlayerInfo[playerid][pVips] != VIP_NONE) {
		SendOk(playerid, "Срок дії VIP привілегій закінчується");
		PlayerInfo[playerid][pVips] = 0;
		UpdatePlayerData(playerid, "pVips", 0);
		PlayerInfo[playerid][pVipTime] = 0;
		UpdatePlayerData(playerid, "pVipTime", 0);
	}
	if(PlayerInfo[playerid][pMember] != 0) {
		if(strcmp(FI[PlayerInfo[playerid][pMember]][fMessage], "None", true) ) {
			new string[144];
			format(string,sizeof(string),"[FRACTION]: %s", FI[PlayerInfo[playerid][pMember]][fMessage]);
			SendClientMessage(playerid,CGOLD,string);
		}
	}
	if(PlayerInfo[playerid][pFamily] != 0) {
		if(strcmp(gFamily[PlayerInfo[playerid][pFamily]-1][famMessage], "None", true) ) {
			new string[144];
			format(string,sizeof(string),"[FAMILY]: %s", gFamily[PlayerInfo[playerid][pFamily]-1][famMessage]);
			SendClientMessage(playerid,CGOLD,string);
		}
	}
    PlayerSpawn(playerid);

	new query_str[128];
	format(query_str,sizeof(query_str),"SELECT * FROM `"TABLE_CARS"` WHERE BINARY `owner` = '%s'",player_name[playerid]);
	mysql_tquery(connects,query_str,"load_cars","i",playerid);

	new query_st[128];
	mysql_format(connects,query_st,sizeof(query_st),"SELECT * FROM `bank` WHERE BINARY `owner` = '%s'", player_name[playerid]);
	mysql_tquery(connects,query_st, "check_bank", "i", playerid);

	new query_1[156];
	format(query_1,sizeof(query_1),"SELECT * FROM online_player WHERE date >= CURDATE() AND accountid = %d", PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query_1, "load_online_today" , "i", playerid);

	new query_2[156];
	format(query_2,sizeof(query_2),"SELECT * FROM online_player WHERE (date >= (CURDATE()-1) AND date < CURDATE()) AND accountid = %d", PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query_2, "load_online_yesterday" , "i", playerid);

	new query_3[150];
	format(query_3, sizeof(query_3), "SELECT * FROM `questsprogress` WHERE BINARY `name` = '%s' ORDER BY `idquest`;", player_name[playerid]);
	mysql_tquery(connects, query_3, "LoadQuestMysql", "d", playerid);

	new sql_string[128];
	format(sql_string, sizeof(sql_string), "SELECT * FROM `fraction_bl` WHERE BINARY `f_bl_accused` = '%s'", player_name[playerid]);
	mysql_pquery(connects, sql_string, "bl_loading_callback", "i", playerid);

	new query_4[150];
	mysql_format(connects,query_4,sizeof(query_4), "UPDATE `"TABLE_ACCOUNTS"` SET `online_status` = '%d' WHERE pID = '%d'",playerid,PlayerInfo[playerid][pID]);
 	mysql_tquery(connects,query_4, "", "");

	if(PlayerInfo[playerid][pCash] < 0) {
		PlayerInfo[playerid][pCash] = 0;
		UpdatePlayerData(playerid,"pCash",0);
	}

	SendClientMessage(playerid, -1, "Ласкаво просимо на {1a9fe9}SAMP "YELLOW"UKRAINE");
	if(PlayerInfo[playerid][pHelper]) SendClientMessage(playerid, COLOR_YELLOW, "[Game Support]"W" для виходу на дежурство, введіть: "YELLOW"/gsduty");
    
    
	if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
		SendOk(playerid,"На сервері діє акція для новачків - "W"/bonuses");
	}
	if(BonusInfo[act_select] == 2) {
		SendOk(playerid,"{f6f6d9}На сервері діє акція - "W"/bonuses");
	}
	if(OthersInfo[show_update] == 1) ErrorMessage(playerid,""YELLOW"[Оновлення]{f6f6d9} Для того, щоб дізнатись про оновлення ігрового мода, введіть "YELLOW"/new.");
	
	new messager[156];
	format(messager, sizeof(messager), "SELECT * FROM `admin` WHERE `Name` = '%s'", player_name[playerid]); //текст якщо гравець адмін авторизуватися
	mysql_tquery(connects, messager, "aloading", "i",playerid);
	return 1;
}
IsObjectBarrier(playerid){
	new max_rear_object_id = -1;
	new Float:max_rear_object_distance = 100000;

	for(new id = 0; id < MAX_OBJECT_MOVED; id++){
		if(moved_info[id][moved_vw] != GetPlayerVirtualWorld(playerid) && moved_info[id][moved_vw] != -1) continue;
		new Float:here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ]));
		if(here_distance < max_rear_object_distance){
			max_rear_object_id = id;
			max_rear_object_distance = here_distance;
		}
	}
	if(max_rear_object_distance > 15.0 && IsPlayerInAnyVehicle(playerid)) max_rear_object_id = -1;
	else if(max_rear_object_distance > 3.5 && !IsPlayerInAnyVehicle(playerid)) max_rear_object_id = -1;
	return max_rear_object_id;
}

MoveObjectBarrier(id){
	if(moved_info[id][status_moved]) return 1;
	if(IsDynamicObjectMoving(moved_info[id][moved_id])) return 1;
	if(id == 50) {
		MoveDynamicObject(moved_info[4][moved_id],moved_pos_object[4][0],moved_pos_object[4][1],moved_pos_object[4][2]+0.04,(moved_info[4][moved_modelid] == 968) ? (0.014) : (moved_info[4][moved_modelid] == 2920) ? (0.014) : (moved_info[4][moved_modelid] == 1495) ? (0.034) : (moved_info[4][moved_modelid] == 2949) ? (0.034) : (moved_info[4][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[4][3],moved_pos_object[4][4],moved_pos_object[4][5]);
		moved_info[4][status_moved]=true;
	}
	if(id == 4) {
		MoveDynamicObject(moved_info[50][moved_id],moved_pos_object[50][0],moved_pos_object[50][1],moved_pos_object[50][2]+0.04,(moved_info[50][moved_modelid] == 968) ? (0.014) : (moved_info[50][moved_modelid] == 2920) ? (0.014) : (moved_info[50][moved_modelid] == 1495) ? (0.034) : (moved_info[50][moved_modelid] == 2949) ? (0.034) : (moved_info[50][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[50][3],moved_pos_object[50][4],moved_pos_object[50][5]);
		moved_info[50][status_moved]=true;
	}
	MoveDynamicObject(moved_info[id][moved_id],moved_pos_object[id][0],moved_pos_object[id][1],moved_pos_object[id][2]+0.04,(moved_info[id][moved_modelid] == 968) ? (0.014) : (moved_info[id][moved_modelid] == 2920) ? (0.014) : (moved_info[id][moved_modelid] == 1495) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (10.0) : (1.2),moved_pos_object[id][3],moved_pos_object[id][4],moved_pos_object[id][5]);
	moved_info[id][status_moved]=true;
	return 1;
}
CB: CheckObjectBarrier(id){
	MoveDynamicObject(moved_info[id][moved_id],moved_info[id][movedPosX],moved_info[id][movedPosY],moved_info[id][movedPosZ]-0.04,(moved_info[id][moved_modelid] == 968) ? (0.014) : (moved_info[id][moved_modelid] == 2920) ? (0.014) : (moved_info[id][moved_modelid] == 1495) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (0.034) : (moved_info[id][moved_modelid] == 2949) ? (10.0) : (1.2),moved_info[id][movedPosRotationX],moved_info[id][movedPosRotationY],moved_info[id][movedPosRotationZ]);
	return 1;
}
stock CheckBarrier(playerid,barrierid) {
	switch(barrierid) {
	    case 0: if(!IsPlayerInAnyVehicle(playerid)) return 1;
	    case 1..3: {
	        if(IsPlayerInAnyVehicle(playerid)) return 1;
	    }
		case 17..19,21,22,41..43,44..49,53: {
			if(!IsACop(playerid)) return 1;
		}
		case 20: {	
			if(!IsPlayerInAnyVehicle(playerid)) return 1;
			if(!IsACop(playerid) || !start_work[playerid]) return 1;
		}
		case 23: if(PlayerInfo[playerid][bizz_work] != 7) return 1;
		case 24: if(!IsAArm(playerid) || !start_work[playerid] || PlayerInfo[playerid][pRank] < 7) return 1;
		case 25: if(PlayerInfo[playerid][bizz_work] != 2) return 1;
		case 26,27: if(PlayerInfo[playerid][bizz_work] != 3) return 1;
		case 28: if(PlayerInfo[playerid][bizz_work] != 4) return 1;
		case 29: if(!IsAArm(playerid)) return 1;
		case 30..32: if(PlayerInfo[playerid][pHouse] != 306 && PlayerInfo[playerid][pHouse] != 307 && PlayerInfo[playerid][pTempKey] != 306 && PlayerInfo[playerid][pTempKey] != 307) return 1;
		case 33..35: {
			if(IsPlayerInAnyVehicle(playerid)) return 1;
			if(!IsACop(playerid) || !start_work[playerid]) return 1;
		}
		case 38: {
			if(PlayerInfo[playerid][pMember] != fFBI || !start_work[playerid]) return 1;
		}
		case 39: if(PlayerInfo[playerid][bizz_work] != 5) return 1;
		case 40: if(PlayerInfo[playerid][bizz_work] != 6) return 1;
		case 51,52: {
			if(!IsPlayerInAnyVehicle(playerid)) return 1;
			if(GetPlayerVehicleID(playerid) != house_car[playerid][0] && GetPlayerVehicleID(playerid) != house_car[playerid][1]) return ErrorMessage(playerid, "Ви не за рулём своего Т/С");
			if(!IsACarNumber(GetVehicleModel(GetPlayerVehicleID(playerid)))) return ErrorMessage(playerid, "Недоступно для данного Т/С");

		}
	}
	MoveObjectBarrier(barrierid);
	return 1;
}
stock GetVehicleFreeSeat(vehicleid) {
    if(!vehicleid) return -1;
    new model = GetVehicleModel(vehicleid), maxs = GetVehicleMaxSeat(model) - 1, bool: seat[3], cnt;
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPlayerVehicleID(i) != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
        if(pseat < 1 || pseat > 3) continue;
        seat[pseat-1] = true;
        cnt ++;
        if(cnt >= maxs) {
        	return -1;
        }
	}
    for(new i; i < 3; i ++) {
    	if(!seat[i]) return i + 1;
    }
    return -1;
}
stock GetVehicleMaxSeat(modelid) {
    switch(modelid){
        case 596..598, 427, 490: {
        	return 4;
        }
        case 599, 497, 528: {
    		return 2;
    	}
    }
    return -1;
}
stock UpdateFuncBizzData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `business_func` SET `%s` = '%d' WHERE `bizzID` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateBizzUpgrade(id) {
	new query[186];
	format(query, sizeof(query), "UPDATE `business` SET `upgrade` = '%d|%d|%d' WHERE `id` = '%d'", gBusiness[id][bizzUpgrade][0],gBusiness[id][bizzUpgrade][1],gBusiness[id][bizzUpgrade][2],id+1);
	mysql_tquery(connects, query, "", "");
	return 1;
}
stock UpdateBusinessData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `business` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateAtmData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `atms` SET `%s` = '%d' WHERE `atmID` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateHotelData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `hotels` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateAirportData(id,const field[],data){
	new query[128];
	format(query,sizeof(query),"UPDATE `airports` SET `%s` = '%d' WHERE `id` = '%d'",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SaveBusiness(bint) {
	new query[512];
	format(query, sizeof(query), "UPDATE `business` SET `owner` = '%s', `bank`='%d', `bankday`='%d',`visitors`='%d', `price`='%d', `product`='%d', `order`='%d', `orderprice`='%d' WHERE `id` = '%d'",
	gBusiness[bint][bizzOwner],
	gBusiness[bint][bizzBank],
	gBusiness[bint][bizzBankDay],
	gBusiness[bint][bizzVisitors],
	gBusiness[bint][bizzPrice],
	gBusiness[bint][bizzProduct],
	gBusiness[bint][bizzProdOrder],
	gBusiness[bint][bizzProdOrderPrice],
	bint+1);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SaveHotels(id) {
	new query[156];
	format(query, sizeof(query), "UPDATE `hotels` SET `bank`='%d', `bankday`='%d',`visitors`='%d' WHERE `id` = '%d'",
	gHotels[id][hotelBank],
	gHotels[id][hotelBankDay],
	gHotels[id][hotelVisitors],
	id+1);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock SaveMarket() {
	new query[512],temp[0x9e];

	mysql_format(connects, query, sizeof(query), "UPDATE `blackmarket` SET ");
	format(temp,sizeof(temp),"`gang`= '%i',",		black_prods[0]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drugs`= '%i',",		black_prods[1]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`mats`= '%i',",		black_prods[2]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`armour`= '%i',",		black_prods[3]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`skin`= '%i',",		black_prods[4]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`drugsprice`= '%i',",	black_prods[5]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`matsprice`= '%i',",	black_prods[6]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`armourprice`= '%i',",black_prods[7]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`skinprice`= '%i',",	black_prods[8]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`time`= '%i' LIMIT 1",black_prods[9]), 	strcat(query,temp,sizeof(query));
	mysql_tquery(connects, query, "", "");
	return mysql_errno();
}
stock SaveHome(houseid){
	new strings[100],query[512];
	query = "UPDATE `houses` SET ";

	acc_str_strcat(query, sizeof(query), "owner",gHouses[houseid][houseOwner]);
	acc_int_strcat(query, sizeof(query), "close",gHouses[houseid][houseClose]);
	acc_int_strcat(query, sizeof(query), "day",gHouses[houseid][houseDay]);

	acc_str_strcat(query, sizeof(query), "people1",gHouseArendator[houseid][0]);
	acc_str_strcat(query, sizeof(query), "people2",gHouseArendator[houseid][1]);
	acc_str_strcat(query, sizeof(query), "people3",gHouseArendator[houseid][2]);

	acc_int_strcat(query, sizeof(query), "safecode", gHouses[houseid][houseSafeCode]);

	strdel(query, strlen(query)-1, strlen(query));
	format(strings, 100, " WHERE `id` = '%d' LIMIT 1", gHouses[houseid][houseID]);
	strcat(query, strings);
	mysql_tquery(connects, query, "", "");
	return 1;
}
stock UpdateFraction(fractionID,const field[],data){
	new query[200];
	format(query,sizeof(query),"UPDATE `fractions` SET `%s` = '%d' WHERE `ID` = '%d' LIMIT 1",field,data,fractionID);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateFractionVehicle(ID,const field[],data){
	new query[200];
	format(query,sizeof(query),"UPDATE `frac_vehicle` SET `%s` = '%d' WHERE `fvehID` = '%d' LIMIT 1",field,data,ID+1);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdatePlayerData(playerid,const field[],data){
	new query[200];
	format(query,sizeof(query),"UPDATE `accounts` SET `%s` = '%d' WHERE `pID` = '%d' LIMIT 1",field,data,PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
stock UpdateFamily(id,const field[],data){
	new query[200];
	format(query,sizeof(query),"UPDATE `family` SET `%s` = '%d' WHERE `id` = '%d' LIMIT 1",field,data,id);
	mysql_tquery(connects, query,"","");
	return mysql_errno();
}
SavefRank(rank,fam) {
	new query[256];
	format(query, sizeof(query), "UPDATE `family` SET `Rank_%d` = '%s' WHERE `id` = '%i'",rank,FamRanks[fam][rank-1],fam+1);
	return mysql_tquery(connects, query, "", "");
}
stock ShowBusinessInformation(playerid,id,dialogid){
	new status[20];
	new atext[24];
	switch(gBusiness[id][bizzMafia]){
 		case fRM: atext = "Українська мафія";
 		case fLCN: atext = "Італьянська мафія";
		case fYAKUZA: atext = "Японская мафія";
  		default: atext = "---";
	}
	new type = gBusiness[id][bizzType] - 1;
	if(gBusiness[id][bizzStatus]) strcat(status,""GREEN"Работает");
	else strcat(status,""NO"Не работает");

	new day;
	day = (gBusiness[id][bizzDay]-gettime())/86400;

	static const f_str[] = ""W"Назва: "YELLOW"%s\n\n\
"W"Тип: "YELLOW"%s\n\
"W"Гос.вартість: "ORANGE"$%d\n\
"W"Ціна товара: "ORANGE"$%d\n\n\
"W"Продуктов: "YELLOW"%d ед. / %d ед.\n\
"W"Продуктов заказано: "YELLOW"%d"W" ед. ["ORANGE"$%d"W" за ед.]\n\n\
"W"Касса: "ORANGE"$%d"W"\n\
"W"Заработано за сутки: "ORANGE"$%d"W"\n\n\
"W"Посетителей: "YELLOW"%d\n\
"W"Аренда бізнеса: "YELLOW"%iд\n\
"W"Крыша: "YELLOW"%s\n\
"W"Стан: "YELLOW"%s";
	new string[650];
	format(string,sizeof(string),f_str,gBusiness[id][bizzName],gBusinessTypeName[type],
	gBusiness[id][bizzSellPrice],gBusiness[id][bizzPrice],gBusiness[id][bizzProduct],gBusiness[id][bizzUpgrade][0],gBusiness[id][bizzProdOrder],gBusiness[id][bizzProdOrderPrice],gBusiness[id][bizzBank],gBusiness[id][bizzBankDay],gBusiness[id][bizzVisitors],day,atext,status);
	return D(playerid,dialogid,DSM, ""YELLOW"Бізнес",string,"OK","");
}
stock ShowHotelInformation(playerid,id,dialogid){
	new day;
	day = (gHotels[id][hotelDay]-gettime())/86400;

	static const f_str[] = ""W"Назва: "YELLOW"%s\n\n\
"W"Гос.вартість: "GREEN"$%d\n\
"W"Ціна за сутки проживания: "GREEN"$%d\n\
"W"Касса: "GREEN"$%d"W"\n\
"W"Заработано за сутки: "GREEN"$%d"W"\n\
"W"Посетителей: "YELLOW"%d\n\
"W"Аренда отеля: "YELLOW"%iд\n";
	new string[sizeof(f_str) +1 + 35];
	format(string,sizeof(string),f_str,gHotels[id][hotelName],gHotels[id][hotelPrice],gHotels[id][hotelCoast],gHotels[id][hotelBank],gHotels[id][hotelBankDay],gHotels[id][hotelVisitors],day);
	return D(playerid,dialogid,DSM, ""YELLOW"Отель",string,"OK","");
}
stock ShowAirportInformation(playerid,id,dialogid){
	new day,arend;
	day = (gAirs[id][airDay]-gettime())/86400;
	for(new i = 1; i <= gPlaneCount; i ++) {
		if(gAirplanes[i][aAirport] != id+1) continue;
		if(GetString(gAirplanes[i][aOwner], "State")) {
			arend++;
		}
	}
	static const f_str[] = ""W"Назва: "YELLOW"%s\n\n\
"W"Гос.вартість: "GREEN"$%d\n\
"W"Ціна оренди повітряного транспорта: "GREEN"$%d\n\
"W"Касса: "GREEN"$%d"W"\n\
"W"Повітряний транспорт без оренди: "YELLOW"[%d/8]\n\
"W"Аренда аэропорта: "YELLOW"%iд\n";
	new string[sizeof(f_str) +1 + 35];
	format(string,sizeof(string),f_str,gAirs[id][airName],gAirs[id][airPrice],gAirs[id][airCoast],gAirs[id][airBank],arend,day);
	return D(playerid,dialogid,DSM, ""YELLOW"Аэропорт",string,"OK","");
}
stock GetPlayerMoneyEx(playerid) return PlayerInfo[playerid][pCash];
stock isNumeric(const string[]) {
	for (new i = 0, j = strlen(string); i < j; i++) {
		if (string[i] > '9' || string[i] < '0') return 1;
	}
	return 0;
}
CB: donate_shop(playerid, number, id, price) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		switch(id) {
			case 0: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
									Введіть 5 значний номер телефону, який ви бажаєте придбати:\n\
									"W"Вартість: "GREEN"200 B-COIN\n\n"NO"*{f6f6d9} Вказаний номер зайнятий\n\n","Купити","Закрити");
				return true;
			}
			case 1: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
										Введіть 4 значний номер телефону, який ви бажаєте придбати:\n\
										"W"Вартість: "GREEN"300 B-COIN\n\n"NO"*{f6f6d9} Вказаний номер зайнятий\n\n","Купити","Закрити");
				return true;
			}
			case 2: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
										Введіть 3 значний номер телефону, який ви бажаєте придбати:\n\
										"W"Вартість: "GREEN"400 B-COIN\n\n"NO"*{f6f6d9} Вказаний номер зайнятий\n\n","Купити","Закрити");
				return true;
			}
			case 3: {
				D(playerid,D_DONATE_NUMBER_2,DSI,""YELLOW"Донат","{f6f6d9}Купівля номера телефону\n\n\
										Введіть 2 значний номер телефону, який ви бажаєте придбати:\n\
										"W"Вартість: "GREEN"500 B-COIN\n\n"NO"*{f6f6d9} Вказаний номер зайнятий\n\n","Купити","Закрити");
				return true;
			}
		}
	}
	else {
		PlayerInfo[playerid][pRouble] -= price;
		UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
		PlayerInfo[playerid][pPhone] = number;
		UpdatePlayerData(playerid,"pPhone",PlayerInfo[playerid][pPhone]);
		new string[64];
		format(string,sizeof(string),"Вітаємо з покупкою! Ваш новый номер: "W"%d",PlayerInfo[playerid][pPhone]);
		SendClientMessage(playerid,CGOLD,string);
	}
	return true;
}
CB: sim_shop(playerid, number, id, price) {
	new rows;
	cache_get_row_count(rows);
	if(rows) return D(playerid,D_BIZZ_SIM,DSI, ""YELLOW"Покупка номера","\n\n"W"Введіть номер, який хочете використовувати (6 цифр):\n\n"NO"*{f6f6d9} Вказаний номер зайнятий\n\n","Далі","Закрити");
	else {
		PlayerInfo[playerid][pPhone] = number;
		UpdatePlayerData(playerid,"pPhone",PlayerInfo[playerid][pPhone]);
		GiveMoney(playerid, -price, "покупка в 24-7");
		if(gBusiness[id][bizzProduct]-gShopProduct[4] > 0) {
			gBusiness[id][bizzProduct]-= gShopProduct[4];
			bizz_pay(id,price);
		}
		UpdateBusinessText(id);
		new string[64];
		format(string,sizeof(string),"Вітаємо з покупкою! Ваш новий номер: "W"%d",PlayerInfo[playerid][pPhone]);
		SendOk(playerid,string);
		show_24(playerid,id);
	}
	return true;
}
stock show_24(playerid, id) {
    new string[512];
    string = ""YELLOW"Найменування\t"YELLOW"Вартість\n";
	for(new i;i<SHOP_OBJECTS;i++){
		format(string,sizeof(string),""W"%s\t%s\t"GREEN"$%d\n",string,gShopObject[i],gShopPrice[i]*gBusiness[id][bizzPrice]);
	}
	D(playerid,D_BIZZ_24,DSTH,"Магазин 24/7",string,"Купити","Виход");
	return 1;
}
stock show_fish(playerid) {
	new id = TI[playerid][tSelectedBusinessID];
	static const f_str[] = ""YELLOW"Найменування\t"YELLOW"Вартість\n"W"Удочка [1 шт.]\t"GREEN"$%d\n"W"Снасти [1 шт.]\t"GREEN"$%d\n"W"Наживка [10 шт.]\t"GREEN"$%d\n"W"Пропуск на ловлю рыбы [1 шт.]\t"GREEN"$%d\n"W"- Інформація";
	new string[sizeof(f_str) +1 + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6)];
	format(string,sizeof(string),f_str, 520*gBusiness[id][bizzPrice],340*gBusiness[id][bizzPrice],100*gBusiness[id][bizzPrice],400*gBusiness[id][bizzPrice]);
	D(playerid, D_BIZZ_FISH, DSTH, "Меню", string, "Купити", "Відміна");
}
stock show_tavern(playerid, id) {
    new string[180];
    string = "Найменування\tВартість\n";
	for(new i;i<4;i++){
		format(string,sizeof(string),"%s\t%s\t$%d\n",string,gTavernNames[i],gTavernCosts[i]*10*gBusiness[id][bizzPrice]);
	}
	D(playerid,D_BIZZ_TAVERN,DSTH,"Закусочна",string,"Купити","Виход");
	return 1;
}
stock SavePlane(j) {
	new query[156];
	mysql_format(connects,query,sizeof(query),"UPDATE `plane` SET Owner = '%s',Time = '%d' WHERE ID = %i",gAirplanes[j][aOwner],gAirplanes[j][aTime],j);
	mysql_tquery(connects, query, "","");
	return true;
}
UseLabrary(member,id,status) {
	if(status == 1) {
		if(l_actor[member][id]) {
			l_actors[member][id] = CreateActor(144,l_actor_pos[id][0],l_actor_pos[id][1],l_actor_pos[id][2],l_actor_pos[id][3]);
			if(member == 0) SetActorVirtualWorld(l_actors[member][id],49);
			else if(member == 1) SetActorVirtualWorld(l_actors[member][id],50);
			else if(member == 2) SetActorVirtualWorld(l_actors[member][id],51);
			if(id >= 2) ApplyActorAnimation(l_actors[member][id],"BOMBER", "BOM_Plant",4,1,0,0,1,0);
			else ApplyActorAnimation(l_actors[member][id],"FLAME","FLAME_FIRE",4,1,0,0,1,0);
		}
	}
	else {
		if(l_actors[member][id]) DestroyActor(l_actors[member][id]);
		SaveLabrary(member);
	}
}
stock SaveLabrary(member) {
	new data[48],data_2[48];
	for(new i;i<8;i++) {
		if(!i) {
			format(data,sizeof(data),"%d",l_actor[member][i]);
			format(data_2,sizeof(data_2),"%d",l_actort[member][i]);
		}
		else {
			format(data,sizeof(data),"%s|%d",data,l_actor[member][i]);
			format(data_2,sizeof(data_2),"%s|%d",data_2,l_actort[member][i]);
		}
	}
	new query[256];
	mysql_format(connects,query,sizeof(query),"UPDATE `labrary` SET actor_%d = '%s',actor_t%d = '%s' LIMIT 1",member+1,data,member+1,data_2);
	mysql_tquery(connects, query, "","");
	return true;
}
stock save_salary(member) {
	new data[90];
	for(new i;i<15;i++) {
		if(!i) format(data,sizeof(data),"%d",FracSalary[member][i]);
		else format(data,sizeof(data),"%s|%d",data,FracSalary[member][i]);
	}
	switch(member) {
		case 0: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_pd = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
		case 1: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_fbi = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
		case 3: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_army = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
			printf("%s",query);
		}
		case 4: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_medics = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
		case 5: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_news = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
		case 8: {
			new query[256];
			mysql_format(connects,query,sizeof(query),"UPDATE `economy` SET salary_whitehouse = '%s' LIMIT 1",data);
			mysql_tquery(connects, query, "","");
		}
	}
	return true;
}
stock ACLoad(playerid) {
    if(PlayerInfo[playerid][pAdmin] > 0) {
        for(new i;i<10;i++) 			TextDrawShowForPlayer(playerid, CheatText[i]);
		for(new i;i<3;i++) 				TextDrawShowForPlayer(playerid, CheatPanel[i]);
		for(new i = 53; i != -1; --i) 	EnableAntiCheatForPlayer(playerid, i, 0);  
        return true;
    }
    return true;
}
CB: sad_temp_1(field) {
	SI[field][sad_temp] = 2;
	DestroyDynamicObject(SI[field][sad_object][0]);
	SI[field][sad_object][0] = CreateDynamicObject(673,sad_objects[field][0],sad_objects[field][1],sad_objects[field][2],sad_objects[field][3],sad_objects[field][4],sad_objects[field][5],-1,-1,-1,90.000);

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - цвітіння\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SetTimerEx("sad_temp_2",30000, false, "i", field);
	return 1;
}

CB: sad_temp_2(field) {
	SI[field][sad_temp] = 3;
	new ID;
	for(new i; i < 833; i ++){
		if(sad_apple[i][a_ID] == field){	
			ID = i;
			break;
		}
	}
	SI[field][sad_object][1] = CreateDynamicObject(19576,sad_apple[ID][a_coordsX],sad_apple[ID][a_coordsY],sad_apple[ID][a_coordsZ],sad_apple[ID][a_coordsAX],sad_apple[ID][a_coordsAY],sad_apple[ID][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][2] = CreateDynamicObject(19576,sad_apple[ID+1][a_coordsX],sad_apple[ID+1][a_coordsY],sad_apple[ID+1][a_coordsZ],sad_apple[ID+1][a_coordsAX],sad_apple[ID+1][a_coordsAY],sad_apple[ID+1][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][3] = CreateDynamicObject(19576,sad_apple[ID+2][a_coordsX],sad_apple[ID+2][a_coordsY],sad_apple[ID+2][a_coordsZ],sad_apple[ID+2][a_coordsAX],sad_apple[ID+2][a_coordsAY],sad_apple[ID+2][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][4] = CreateDynamicObject(19576,sad_apple[ID+3][a_coordsX],sad_apple[ID+3][a_coordsY],sad_apple[ID+3][a_coordsZ],sad_apple[ID+3][a_coordsAX],sad_apple[ID+3][a_coordsAY],sad_apple[ID+3][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][5] = CreateDynamicObject(19576,sad_apple[ID+4][a_coordsX],sad_apple[ID+4][a_coordsY],sad_apple[ID+4][a_coordsZ],sad_apple[ID+4][a_coordsAX],sad_apple[ID+4][a_coordsAY],sad_apple[ID+4][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][6] = CreateDynamicObject(19576,sad_apple[ID+5][a_coordsX],sad_apple[ID+5][a_coordsY],sad_apple[ID+5][a_coordsZ],sad_apple[ID+5][a_coordsAX],sad_apple[ID+5][a_coordsAY],sad_apple[ID+5][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][7] = CreateDynamicObject(19576,sad_apple[ID+6][a_coordsX],sad_apple[ID+6][a_coordsY],sad_apple[ID+6][a_coordsZ],sad_apple[ID+6][a_coordsAX],sad_apple[ID+6][a_coordsAY],sad_apple[ID+6][a_coordsAZ],-1,-1,-1,20.000);

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - созревание\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SetTimerEx("sad_temp_3",30000, false, "i", field);
	return 1;
}

CB: sad_temp_3(field) {
	SI[field][sad_temp] = 4;

	DestroyDynamicObject(SI[field][sad_object][1]);
	DestroyDynamicObject(SI[field][sad_object][2]);
	DestroyDynamicObject(SI[field][sad_object][3]);
	DestroyDynamicObject(SI[field][sad_object][4]);
	DestroyDynamicObject(SI[field][sad_object][5]);
	DestroyDynamicObject(SI[field][sad_object][6]);
	DestroyDynamicObject(SI[field][sad_object][7]);

	new ID;
	for(new i; i < 833; i ++) {
		if(sad_apple[i][a_ID] == field) {	
			ID = i;
			break;
		}
	}
	SI[field][sad_object][1] = CreateDynamicObject(19575,sad_apple[ID][a_coordsX],sad_apple[ID][a_coordsY],sad_apple[ID][a_coordsZ],sad_apple[ID][a_coordsAX],sad_apple[ID][a_coordsAY],sad_apple[ID][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][2] = CreateDynamicObject(19575,sad_apple[ID+1][a_coordsX],sad_apple[ID+1][a_coordsY],sad_apple[ID+1][a_coordsZ],sad_apple[ID+1][a_coordsAX],sad_apple[ID+1][a_coordsAY],sad_apple[ID+1][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][3] = CreateDynamicObject(19575,sad_apple[ID+2][a_coordsX],sad_apple[ID+2][a_coordsY],sad_apple[ID+2][a_coordsZ],sad_apple[ID+2][a_coordsAX],sad_apple[ID+2][a_coordsAY],sad_apple[ID+2][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][4] = CreateDynamicObject(19575,sad_apple[ID+3][a_coordsX],sad_apple[ID+3][a_coordsY],sad_apple[ID+3][a_coordsZ],sad_apple[ID+3][a_coordsAX],sad_apple[ID+3][a_coordsAY],sad_apple[ID+3][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][5] = CreateDynamicObject(19575,sad_apple[ID+4][a_coordsX],sad_apple[ID+4][a_coordsY],sad_apple[ID+4][a_coordsZ],sad_apple[ID+4][a_coordsAX],sad_apple[ID+4][a_coordsAY],sad_apple[ID+4][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][6] = CreateDynamicObject(19575,sad_apple[ID+5][a_coordsX],sad_apple[ID+5][a_coordsY],sad_apple[ID+5][a_coordsZ],sad_apple[ID+5][a_coordsAX],sad_apple[ID+5][a_coordsAY],sad_apple[ID+5][a_coordsAZ],-1,-1,-1,20.000);
	SI[field][sad_object][7] = CreateDynamicObject(19575,sad_apple[ID+6][a_coordsX],sad_apple[ID+6][a_coordsY],sad_apple[ID+6][a_coordsZ],sad_apple[ID+6][a_coordsAX],sad_apple[ID+6][a_coordsAY],sad_apple[ID+6][a_coordsAZ],-1,-1,-1,20.000);

	SI[field][sad_object][8] = CreateDynamicObject(1428,sad_stairs[field][0],sad_stairs[field][1],sad_stairs[field][2],sad_stairs[field][3],sad_stairs[field][4],sad_stairs[field][5],-1,-1,-1,90.000);

	new string[128];
	format(string,sizeof(string),"Дерево\nСтадия - сбор яблок\nФермер - %s",SI[field][sad_fermer]);
	UpdateDynamic3DTextLabelText(SI[field][sad_3dtext],-1,string);

	if(IsPlayerConnected(GetPlayerID(SI[field][sad_fermer]))) Streamer_Update(GetPlayerID(SI[field][sad_fermer]));

	SI[field][sad_time] = unix + 60*2;
	return 1;
}

CB: sad_temp_4(field,playerid){
	ApplyAnimation(playerid,"CARRY","liftup",1.0,0,1,1,0,0,1);
	DeletePVar(playerid,"bailer_2");
	SetPlayerAttachedObject(playerid, 4 , 19636, 1, 0.051999,0.418000,-0.008999, -85.699913,94.600028,-5.600045, 0.701999,0.684000,0.805999);
	SetPVarInt(playerid,"bailer_3",1);
    SetTimerEx("CarryDelay",1000,false,"i",playerid);

	new rand = Random(6,10);
	TI[playerid][tJobSad][2] =  rand;
	TI[playerid][tJobSad][3] += rand;

	if(QuestProgress[playerid][1] < 40 && AcceptQuest[playerid][1] != 0) {
		QuestProgress[playerid][1] += rand;
		save_quest(playerid,1);
		if(QuestProgress[playerid][1] >= 40) QuestProgress[playerid][1] = 40;
	}
	if(QuestProgress[playerid][1] == 40 && AcceptQuest[playerid][1] != 0) {
		D(playerid,DIALOG_NONE,DSM, ""YELLOW"Квест",""W"Ви успішно собрали 40кг яблок. Це завдання можна закінчити та забрати за нього нагороду","Закрити","");
		NextStapQI(playerid,1);
	}
	new string[128];
	format(string,sizeof(string),""YELLOW"%d{f6f6d9} км. яблук з дерева зібрані. Всього кг. зібрано - "ORANGE"%d",rand,TI[playerid][tJobSad][3]);
	SendUse(playerid,string);
	SendOk(playerid,"Віднесіть зібране на склад");
	EnableGPSForPlayer(playerid, -103.0734,-5.6714,3.1172);
	sad_delete(field);
	DeletePVar(playerid,"bailer_4");
	DeletePVar(playerid,"sad_uxod");
	return 1;
}

stock sad_delete(ID) {
	if(IsPlayerConnected(GetPlayerID(SI[ID][sad_fermer]))) DeletePVar(GetPlayerID(SI[ID][sad_fermer]),"sad_uxod");

	SI[ID][sad_temp] = 0;
	SI[ID][sad_time] = 0;

	DestroyDynamicObject(SI[ID][sad_object][0]);
	DestroyDynamicObject(SI[ID][sad_object][1]);
	DestroyDynamicObject(SI[ID][sad_object][2]);
	DestroyDynamicObject(SI[ID][sad_object][3]);
	DestroyDynamicObject(SI[ID][sad_object][4]);
	DestroyDynamicObject(SI[ID][sad_object][5]);
	DestroyDynamicObject(SI[ID][sad_object][6]);
	DestroyDynamicObject(SI[ID][sad_object][7]);
	DestroyDynamicObject(SI[ID][sad_object][8]);

	SI[ID][sad_object][0] = CreateDynamicObject(765,sad_objects[ID][0],sad_objects[ID][1],sad_objects[ID][2],sad_objects[ID][3],sad_objects[ID][4],sad_objects[ID][5],-1,-1,-1,90.000);
	UpdateDynamic3DTextLabelText(SI[ID][sad_3dtext],-1,"Дерево\nСтадия - сохнет\nФермер - Відсутнє");

	if(IsPlayerConnected(GetPlayerID(SI[ID][sad_fermer]))) Streamer_Update(GetPlayerID(SI[ID][sad_fermer]));
	return 1;
}
CB: use_medcards(playerid) {
	PlayerInfo[playerid][pMedCard] = 1;
	UpdatePlayerData(playerid,"MedCard",1);

	new string[156];
	format(string,sizeof(string),""YELLOW"Вітаємо з отриманням мед.картки!\n\n\
									"W"Ім'я:\t\t\t"GREEN"%s\n\
									"W"Стать:\t\t\t"GREEN"%s\n\
									"W"Наркозалежність:\t"GREEN"%d",player_name[playerid],(PlayerInfo[playerid][pSex] == 1) ? ("Чоловічий") : ("Жіночий"),PlayerInfo[playerid][pAddiction]);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Медична карта",string,"Добре","");
	return 1;
}
CB: use_medsex(playerid) {
	if(PlayerInfo[playerid][pSex] == 1) {
		new rand = random(sizeof(med_gskin));
		PlayerInfo[playerid][pSex] = 2;
		PlayerInfo[playerid][pSkin] = med_gskin[rand];
	}
	else {
		new rand = random(sizeof(med_mskin));
		PlayerInfo[playerid][pSex] = 1;
		PlayerInfo[playerid][pSkin] = med_mskin[rand];
	}
	UpdatePlayerData(playerid,"pSex",PlayerInfo[playerid][pSex]);
	UpdatePlayerData(playerid,"Skin",PlayerInfo[playerid][pSkin]);
	A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	return 1;
}
stock UpdateHouseDress(houseid) {
	new cnt;
	for(new l;l<3;l++) {
		if(gHouses[houseid][houseSkin][l]) cnt++;
	}
	cnt--;						
	if(cnt < 0 && gHouses[houseid][houseOwnerID]) printf("Возможны лаги с одеждой в доме %d",houseid+1);
	new data[24],query[128];
	for(new i;i<3;i++) {
		if(!i) format(data,sizeof(data),"%d",gHouses[houseid][houseSkin][i]);
		else format(data,sizeof(data),"%s|%d",data,gHouses[houseid][houseSkin][i]);
	}
	format(query,sizeof(query),"UPDATE `houses` SET `skin` = '%s' WHERE id = '%d'",data,houseid+1);
	mysql_tquery(connects, query);
	return mysql_errno();
}
stock save_other() {
	new query[512];
	format(query,sizeof(query),"UPDATE `others` SET `gun_mats` = '%d',`oil_mats` = '%d',`woodsklad` = '%d',`disease` = '%d'",zavodsklad,oilsklad,woodsklad,disease);
	mysql_pquery(connects,query);
	return 1;
}
stock SaveHouseGun(id) {
	new query[512];
	format(query,sizeof(query),"UPDATE `houses` SET `gun` = '%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `id` = '%d'",gHouses[id][houseGun][0],gHouses[id][houseGun][1],gHouses[id][houseGun][2],gHouses[id][houseGun][3],gHouses[id][houseGun][4],gHouses[id][houseGun][5],gHouses[id][houseGun][6],gHouses[id][houseGun][7],gHouses[id][houseGun][8],gHouses[id][houseID]);
	mysql_pquery(connects,query);
	return 1;
}
stock ShowHotelRooms(playerid) {
	new string[65];
    new hotel = -1;
	SetPVarInt(playerid,"select_room",-1);
    switch(GetPlayerVirtualWorld(playerid)) {
        case 0: hotel = 1;
        case 1: hotel = 2;
        case 2: hotel = 3;
		case 3: hotel = 4;
        default: hotel = -1;
    }
    if(hotel != -1) {
    	new hotelstr[3800], hotels = 1;
		hotelstr = ""YELLOW"Номер\t"YELLOW"Статус\t"YELLOW"Арендатор\n";
    	for(new i; i < gRoomsCount; i ++) {
    		if(gRooms[i][roomsHotel] == hotel) {
				if(GetPVarInt(playerid,"select_room") == -1) SetPVarInt(playerid,"select_room",i);
				if(GetString(gRooms[i][roomsOwner], "None")) format(string, sizeof(string), ""W"%d\t"GREEN"Свободний\t{f6f6d9}Відсутній\n",hotels);
				else format(string, sizeof(string), ""W"%d\t"NO"Занят\t"CA"%s\n",hotels,gRooms[i][roomsOwner]);
				strcat(hotelstr, string);
				hotels ++;
    		}
    	}
    	D(playerid, D_HOTEL_RECEPTION, DSTH, "Отель", hotelstr, "Вибрати", "Відміна");
    }
    return true;
}
stock updaterooms(playerid,i) {
	new null,string[128];
	for(new l; l < 10; l++) if(IsValidDynamic3DTextLabel(gRoomText[playerid][l])) DestroyDynamic3DTextLabel(gRoomText[playerid][l]);
	for(new idx; idx < gRoomsCount; idx++) {
 		if(gRooms[idx][roomsWorld] == i) {
     		null++;
       		if(strcmp(gRooms[idx][roomsOwner],"None",true) == 0) format(string, sizeof(string),"Здається в аренду\nДля оренди підійдіть до ресепшену\n\n{f6f6d9}ENTER");
   			else if(strcmp(gRooms[idx][roomsOwner],player_name[playerid],true) == 0) format(string, sizeof(string),"Арендатор: "YELLOW"%s\n\n{f6f6d9}ENTER",gRooms[idx][roomsOwner]);
			else format(string, sizeof(string),"Арендатор: "YELLOW"%s",gRooms[idx][roomsOwner]);
			gRoomText[playerid][null] = CreateDynamic3DTextLabel(string,-1, gRooms[idx][roomsEnterX],gRooms[idx][roomsEnterY],gRooms[idx][roomsEnterZ]+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,i,-1,playerid);
		}
	}
	return true;
}
CB: creategFamily(id) {
	gFamily[id][famID] = cache_insert_id();
	new query[512];
	format(query, sizeof(query), "SELECT `time` FROM `family` WHERE `id` = '%d'", gFamily[id][famID]);
	mysql_tquery(connects, query, "get_dategFamily", "i", id);
	return 1;
}
CB: get_dategFamily(id) {
	cache_get_value(0,"time",gFamily[id][famDate],22);
	return 1;
}
stock cancel_skin(playerid) {
	CancelSelectTextDraw(playerid);
	for(new i=0; i<9; i++) {
		TextDrawHideForPlayer(playerid,buy_skins[i]);
	}
	PlayerTextDrawHide(playerid,buy_player_skins[playerid]);
	DeletePVar(playerid,"ChangingSkin");
	TI[playerid][tTPpick] = true;
	SetPlayerPosAC(playerid, GetPVarFloat(playerid, "posx"), GetPVarFloat(playerid, "posy"), GetPVarFloat(playerid, "posz"),GetPVarInt(playerid, "vw"),GetPVarInt(playerid, "interior"));
	SetPlayerFacingAngle(playerid, GetPVarInt(playerid, "posa"));
	TogglePlayerControllable(playerid, 1);
	SetCameraBehindPlayer(playerid);
	DeletePVar(playerid, "posx");
	DeletePVar(playerid, "posy");
	DeletePVar(playerid, "posz");
	DeletePVar(playerid, "posa");
	DeletePVar(playerid, "interior");
	DeletePVar(playerid, "vw");
	return 1;
}
stock RandomMassive(massive[], size) {
	for(new i; i < size; i ++){
	    new rand = random(size), mass = massive[i];
	    massive[i] = massive[rand];
	   	massive[rand] = mass;
	}
}
bank_dialog(playerid) return D(playerid,D_BANK,DSL, ""YELLOW"Банк", "Активные рахунку\nВідкрити новый рахунок", "Вибрати", "Назад");
bank_score(playerid) return D(playerid,D_BANK_TOP,DSL, ""YELLOW"Список операций", ""YELLOW"1."W" Інформація про рахунок\n"YELLOW"2."W" Пополнить рахунок\n"YELLOW"3."W" Выдача наличных\n"YELLOW"4."W" Перевести на другой рахунок\n"YELLOW"5."W" Список операций\n"YELLOW"6."W" Переименовать рахунок\n"YELLOW"7."W" Изменить PIN-код", "Вибрати", "Назад");
family_dialog(playerid) return D(playerid,D_FAMILY,DSL, ""YELLOW"Семья", ""YELLOW"1."W" Інформація о семье\n"YELLOW"2."W" Состав сім'ї [{33AA33}online"W"]\n"YELLOW"3."W" Состав сім'ї [{AA3333}offline"W"]\n"YELLOW"4."W" Сбережения сім'ї\n"YELLOW"5."W" Настройки сім'ї\n"YELLOW"6."NO" Покинуть сім'ю", "Вибрати", "Закрити");
family_setting(playerid) {
	new fam = PlayerInfo[playerid][pFamily]-1;
	static const f_str[] = ""YELLOW"1."W" Может принимать:\t\t\t"YELLOW"%s(%i)"W"\n\
"YELLOW"2."W" Может увольнять:\t\t\t"YELLOW"%s(%i)"W"\n\
"YELLOW"3."W" Может повышать:\t\t\t"YELLOW"%s(%i)"W"\n\
"YELLOW"4."W" Может пользоваться складом:\t"YELLOW"%s(%i)"W"\n\
"YELLOW"5."W" Изменить названия рангов\n\
"YELLOW"6."W" Изменить колір сім'ї\n\
"YELLOW"7."W" Сменить назва сім'ї\n\
"YELLOW"8."W" Улучшения склада\n\
"YELLOW"9."W" Повідомлення сім'ї при заході в гру\n\
"YELLOW"10."W" Выбрать дом спавна сім'ї";
	new string[sizeof(f_str) +1 + (-2 + 33) + (-2 + 33) + (-2 + 33)];
	format(string,sizeof(string),f_str,GetFamName(fam,gFamily[fam][famInvRang]),gFamily[fam][famInvRang],
							GetFamName(fam,gFamily[fam][famUninvRang]),gFamily[fam][famUninvRang],
							GetFamName(fam,gFamily[fam][famGiveRang]),gFamily[fam][famGiveRang],
							GetFamName(fam,gFamily[fam][famSklad]),gFamily[fam][famSklad]);
	return D(playerid,D_FAMILY_SET,DSL,""YELLOW"Настройки",string,"Вибрати","Назад");
}
CB: check_bank(playerid) {
    new rows;
	cache_get_row_count(rows);
    if(rows) {
        for(new i; i < rows; i++) {
			cache_get_value_name(i, "name",  score_name[playerid][i],13);
			cache_get_value_name(i, "owner", gBanks[playerid][bankOwner][i],MAX_PLAYER_NAME);
			
			cache_get_value_name_int(i, "number",   gBanks[playerid][bankNumber][i]);
			cache_get_value_name_int(i, "balance",  gBanks[playerid][bankBalance][i]);
			cache_get_value_name_int(i, "code", gBanks[playerid][bankPassword][i]);
			
            score_number[playerid]++;
        }
    }
    return 1;
}
CB: update_bank(playerid) {
    new rows;
	cache_get_row_count(rows);
    if(rows) {
        for(new i; i < rows; i++){
            cache_get_value_name(i, "name",  score_name[playerid][i],13);
			cache_get_value_name(i, "owner", gBanks[playerid][bankOwner][i],MAX_PLAYER_NAME);

			cache_get_value_name_int(i, "number",   gBanks[playerid][bankNumber][i]);
			cache_get_value_name_int(i, "balance",  gBanks[playerid][bankBalance][i]);
			cache_get_value_name_int(i, "code", gBanks[playerid][bankPassword][i]);
        }
    }
    return 1;
}
CB: check_score(playerid,id) {
	new rows;
	cache_get_row_count(rows);
    if(rows) {
        cache_get_value_name(0, "owner", gBanks[playerid][bankTowner][GetPVarInt(playerid, "select_score")],MAX_PLAYER_NAME);
		SetPVarInt(playerid, "select_number",id);
		D(playerid,D_BANK_TRANSFER_TWO,DSI, ""YELLOW"Перевод коштів",""W"Введіть сумму, которую хочете перевести на введенный Вами рахунок:","Далі","Назад");
	}
	else ErrorMessage(playerid, "Банковский рахунок не знайдений");
    return 1;
}
SaveScore(playerid) {
	new query[128];
	format(query, sizeof(query), "UPDATE `bank` SET `balance` = '%i' WHERE `number` = '%i'",gBanks[playerid][bankBalance][GetPVarInt(playerid, "select_score")], gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]);
	return mysql_tquery(connects, query,"","");
}
CB: OnPlayerBankOperations(playerid) {
	new rows, temp[6], src[156], name[32],string[1024];
	cache_get_row_count(rows);
	if(!rows) return D(playerid, D_BANK_LIST, DSM, ""YELLOW"Список операций", ""W"Операцій з рахунком не знайдено", "Назад", "");
	string = "Статус\tСума\tНомер рахунку\tДата\n";
	for(new i; i < rows; i++) {
		cache_get_value_name_int(i, "number_1",	temp[0]);//кто

		if(temp[1] <= 0) cache_get_value_name(0, "name_1", name, 20);//имя

		cache_get_value_name_int(i, "number_2", temp[2]);//кому
		cache_get_value_name_int(i, "status", temp[3]);//статус перевода
		cache_get_value_name_int(i, "money", temp[4]);// гроші
		cache_get_value_name_int(i, "date", temp[5]); //время

		if(temp[3] == 1) format(src,sizeof(src),"Изменение PIN-кода\t---\t%d\t%s\n",temp[0], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		else if(temp[3] == 2 && temp[2] == gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]) format(src,sizeof(src),"Получено со рахунку №%d\t%d\t%d\t%s\n",temp[0],temp[4],temp[2], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		else if(temp[3] == 2 && temp[0] == gBanks[playerid][bankNumber][GetPVarInt(playerid, "select_score")]) format(src,sizeof(src),"Отправлено на рахунок №%d\t%d\t%d\t%s\n",temp[2],temp[4],temp[0], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		else if(temp[3] == 3) format(src,sizeof(src),"Списание коштів\t%d\t%d\t%s\n",temp[4],temp[0], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		else if(temp[3] == 4) format(src,sizeof(src),"Поповнення рахунку\t%d\t%d\t%s\n",temp[4],temp[0], date("%hh:%ii %dd.%mm.%yyyy", temp[5]-43200));
		strcat(string, src);
	}
	return D(playerid, D_BANK_LIST, DSTH, "Список операций", string, "Назад", "");
}
stock SetNextJobClearCP(playerid,type) {
	new id_cp = GetPVarInt(playerid,"check_job_cleaner");
	if(id_cp == -1) id_cp = 0;
	if(gClearCPs[type][id_cp][1] == 0.0 || gClearCPs[type][id_cp][2] == 0.0) {
		SetPVarInt(playerid,"clear_salary", GetPVarInt(playerid,"clear_salary") + condition_of_roads_price[type][condition_of_roads_]);
		DeletePVar(playerid,"check_job_cleaner");
		DeletePVar(playerid,"route_job_cleaner");
		D(playerid, D_JOB_CLEAR_3, DSM, ""YELLOW"Уборщик улиц", "Ви проехали крум.\n\
															У вас есть можливість выбрать маршрут или забрать Заработную плату", "Вибрати", "Забрать");
	}
	DisablePlayerRaceCheckpoint(playerid);

	SetPlayerRaceCheckpoint(playerid,
		(gClearCPs[type][id_cp][0] != 1.0) ? (0) : (1),
		gClearCPs[type][id_cp][1],
		gClearCPs[type][id_cp][2],
		gClearCPs[type][id_cp][3],

		gClearCPs[type][id_cp + 1][1],
		gClearCPs[type][id_cp + 1][2],
		gClearCPs[type][id_cp + 1][3], 4.0);
	SetPVarInt(playerid,"check_job_cleaner", id_cp + 1);
	return 1;
}
stock SetNextRaceCP(playerid,type) {
	new id_cp = GetPVarInt(playerid,"RaceCP");
	if(id_cp == -1) id_cp = 0;
	if(gRaceCPs[type][id_cp][1] == 0.0 || gRaceCPs[type][id_cp][2] == 0.0) {
		DeletePVar(playerid,"RaceCP");
		Race_End(playerid);
	}
	DisablePlayerRaceCheckpoint(playerid);

	SetPlayerRaceCheckpoint(playerid,
		(gRaceCPs[type][id_cp][0] != 1.0) ? (0) : (1),
		gRaceCPs[type][id_cp][1],
		gRaceCPs[type][id_cp][2],
		gRaceCPs[type][id_cp][3],

		gRaceCPs[type][id_cp + 1][1],
		gRaceCPs[type][id_cp + 1][2],
		gRaceCPs[type][id_cp + 1][3], 4.0);
	SetPVarInt(playerid,"RaceCP", id_cp + 1);
	return 1;
}
stock SetNextBusCP(playerid, stop = false) {
	if(GetPVarInt(playerid, "busstop")) return 1;
	new route = GetPVarInt(playerid,"route")-1;
	new id_cp = GetPVarInt(playerid,"id_cp");

	if(route == -1) route = 0;
	if(id_cp == -1) id_cp = 0;
	if(gBusCPs[route][id_cp][1] == 0.0 || gBusCPs[route][id_cp][2] == 0.0) {
		id_cp = 0;
	}
	if(id_cp > 0) {
		if(gBusCPs[route][id_cp - 1][0] == 1.0 && !stop) {
			new string[156];
			SetPVarInt(playerid, "busstop", true);
			format(string,sizeof(string),"Автобус по маршруту %s отправляется через 10 секунд",gRouteName[route]);
			ProxDetector(15.0,playerid, string,0x44b2ffff);
			SetTimerEx("BusStop",(10 * 1000),0,"i",playerid);
			DisablePlayerRaceCheckpoint(playerid);
			return 1;
		}
	}
	DisablePlayerRaceCheckpoint(playerid);

	SetPVarInt(playerid,"bus_salary", GetPVarInt(playerid,"bus_salary") + BUS_PRICE_CHECKPOINT);
	SetPlayerRaceCheckpoint(playerid,
		(gBusCPs[route][id_cp][0] != 1.0) ? (0) : (1),
		gBusCPs[route][id_cp][1],
		gBusCPs[route][id_cp][2],
		gBusCPs[route][id_cp][3],

		gBusCPs[route][id_cp + 1][1],
		gBusCPs[route][id_cp + 1][2],
		gBusCPs[route][id_cp + 1][3], 7.0);
	SetPVarInt(playerid,"id_cp", id_cp + 1);
	return 1;
}
CB: BusStop(playerid) {
	DeletePVar(playerid, "busstop");

	SetNextBusCP(playerid, true);
	return 1;
}
stock MeAction(playerid,const action[],Float:distance = 13.0) {
	new mes[145];
	format(mes,sizeof(mes),"%s %s",player_name[playerid],action);
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPlayerDistanceToPlayer(playerid,i) > distance || GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		SendClientMessage(i,COLOR_PURPLE,mes);
	}
	return 1;
}
stock EndBus(playerid) {
	if(IsValid3DTextLabel(gPlayerBusText[playerid])) DestroyDynamic3DTextLabelEx(gPlayerBusText[playerid]);

	DisablePlayerRaceCheckpoint(playerid);

	new string[128];

	new repairprice = floatround((1000.0-GetPVarFloat(playerid,"bus_damage"))*2);
	if(repairprice < 0 || repairprice > 1000) repairprice = 1000;
	PlayerInfo[playerid][pBank] -= repairprice;
	UpdatePlayerData(playerid,"pBank",PlayerInfo[playerid][pBank]);

	SendClientMessage(playerid,-1,""ORANGE"___________________________________");
	SendClientMessage(playerid,COLOR_BLUE,"робочий день закінчений");
	format(string,sizeof(string),"Заработано: "GREEN"$%i",GetPVarInt(playerid,"bus_salary"));
	SendClientMessage(playerid,COLOR_BLUE,string);
	format(string,sizeof(string),"Штраф за ремонт: "NO"$%i",repairprice);
	SendClientMessage(playerid,COLOR_BLUE,string);
	SendClientMessage(playerid,COLOR_GREEN,"Гроші будуть начислені під час зарплати. Штраф за ремонт списан с банковского рахунку");
	SendClientMessage(playerid,-1,""ORANGE"___________________________________");

	PlayerInfo[playerid][pSalary] += GetPVarInt(playerid,"bus_salary");
	UpdatePlayerData(playerid,"salary",PlayerInfo[playerid][pSalary]);

	DeletePVar(playerid,"bus_id");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"id_cp");
	DeletePVar(playerid,"bus_salary");
	DeletePVar(playerid,"bus_damage");
	DeletePVar(playerid, "route");
	return 1;
}
stock EndClear(playerid) {
	DisablePlayerRaceCheckpoint(playerid);
	if(GetPVarInt(playerid,"clear_salary")) {
		new string[128];
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
		SendClientMessage(playerid,COLOR_BLUE,"робочий день закінчений");
		format(string,sizeof(string),"Заработано: "GREEN"$%i",GetPVarInt(playerid,"clear_salary"));
		SendClientMessage(playerid,COLOR_BLUE,string);
		SendClientMessage(playerid,COLOR_GREEN,"Гроші будуть начислені під час зарплати");
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");

		PlayerInfo[playerid][pSalary] += GetPVarInt(playerid,"clear_salary");
		UpdatePlayerData(playerid,"salary",PlayerInfo[playerid][pSalary]);
	}
	else {
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
		SendClientMessage(playerid,COLOR_BLUE,"робочий день закінчений");
		SendClientMessage(playerid,COLOR_GREEN,"Ви нічого не заробили");
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
	}

	DeletePVar(playerid,"clear_salary");
	DeletePVar(playerid,"clear_id");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"check_job_cleaner");
	DeletePVar(playerid,"route_job_cleaner");
	return 1;
}
stock EndGazon(playerid) {
	DisablePlayerRaceCheckpoint(playerid);

	if(GetPVarInt(playerid,"gazon_salary")) {
		new string[128];
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
		SendClientMessage(playerid,COLOR_BLUE,"робочий день закінчений");
		format(string,sizeof(string),"Заработано: "GREEN"$%i",GetPVarInt(playerid,"gazon_salary"));
		SendClientMessage(playerid,COLOR_BLUE,string);
		SendClientMessage(playerid,COLOR_GREEN,"Гроші будуть начислені під час зарплати");
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");

		PlayerInfo[playerid][pSalary] += GetPVarInt(playerid,"gazon_salary");
		UpdatePlayerData(playerid,"salary",PlayerInfo[playerid][pSalary]);
	}
	else {
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
		SendClientMessage(playerid,COLOR_BLUE,"робочий день закінчений");
		SendClientMessage(playerid,COLOR_GREEN,"Ви нічого не заробили");
		SendClientMessage(playerid,-1,""ORANGE"___________________________________");
	}
	DeletePVar(playerid,"gazon_salary");
	DeletePVar(playerid,"veh_id_cleaner");
	TI[playerid][tSpcarTime] = 0;
	return 1;
}
stock EndEat(playerid) {
	if(PlayerEatText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(PlayerEatText[playerid]);
		PlayerEatText[playerid] = Text3D:-1;
	}
	DeletePVar(playerid,"eatcolvo");
	DeletePVar(playerid,"eatjob");
	if(TI[playerid][tSpcarTime]){
		TI[playerid][tSpcarTime] = 0;
	}
	return 1;
}
stock EndMeh(playerid) {
	if(PlayerMehText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(PlayerMehText[playerid]);
		PlayerMehText[playerid] = Text3D:-1;
	}
	DeletePVar(playerid,"toplivo");
	DeletePVar(playerid,"mehjob");
	if(TI[playerid][tSpcarTime]){
		TI[playerid][tSpcarTime] = 0;
	}
	return 1;
}
stock EndTrack(playerid) {
	if(object_oil[playerid]) DestroyDynamicObject(object_oil[playerid]);
	SetVehicleToRespawn(GetPVarInt(playerid,"track_id"));
	TI[playerid][tJobOil][1] = false;
	DeletePVar(playerid,"track_id");
	return 1;
}
stock EndProd(playerid) {
	if(gPlayerProdText[playerid] != Text3D:-1) {
		DestroyDynamic3DTextLabel(gPlayerProdText[playerid]);
		gPlayerProdText[playerid] = Text3D:-1;
	}
	if(gPlayerProdCP[playerid] != -1) DestroyDynamicCP(gPlayerProdCP[playerid]);
	if(PlayerTrailer[playerid] != INVALID_VEHICLE_ID) A_DestroyVehicle(PlayerTrailer[playerid]),PlayerTrailer[playerid] = INVALID_VEHICLE_ID,DeletePVar(playerid,"attach_trailer");

	DeletePVar(playerid,"prod_vehicle_id");
	DeletePVar(playerid,"count_prod2");
	DeletePVar(playerid,"count_prod");
	TI[playerid][tSpcarTime] = 0;
	DeletePVar(playerid,"prod_id");
	return 1;
}
stock EndGun(playerid) {
	TI[playerid][tJobGun][0] = 0;
	if(GetPVarInt(playerid,"pgunobject")) {
		new objectid = GetPVarInt(playerid,"pgunobject");
		if(IsValidDynamicObject(objectid)) DestroyDynamicObject(objectid);
		DeletePVar(playerid,"pgunobject");
	}
	TI[playerid][tJobGun][2] = 0;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9))RemovePlayerAttachedObject(playerid,9);
	if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);

	if(GetPVarInt(playerid,"gun_salary") > 0) {
		static const f_str[] = "Ви заробили "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП збройного завод");
	}
	else {
		static const f_str[] = "Ви заробили "ORANGE"$%d. {f6f6d9}Гроші будуть зачисдені на вашу банківську карту під час зарплати (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PlayerInfo[playerid][pSalary] += TI[playerid][tJobSalary];
	}
	FI[fWHITEHOUSE][fBank] -= TI[playerid][tJobSalary];
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	TI[playerid][tJobSalary] = 0;
	DeletePVar(playerid,"gun_salary");
	DisablePlayerRaceCheckpoint(playerid);
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndWood(playerid) {
	TI[playerid][tJobWood][0] = 0;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 9))RemovePlayerAttachedObject(playerid,9);
	if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);

	if(GetPVarInt(playerid,"wood_salary") > 0) {
		static const f_str[] = "Ви заробили "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП лісопилка");
	}
	else {
		static const f_str[] = "Ви заробили "ORANGE"$%d. {f6f6d9}Гроші будуть зачисдені на вашу банківську карту під час зарплати (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 10)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PlayerInfo[playerid][pSalary] += TI[playerid][tJobSalary];
	}
	FI[fWHITEHOUSE][fBank] -= TI[playerid][tJobSalary];
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	TI[playerid][tJobSalary] = 0;
	TI[playerid][tJobWood][3] = 0;
	DeletePVar(playerid,"wood_salary");
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndOil(playerid) {
	TI[playerid][tJobOil][0] = false;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 8))RemovePlayerAttachedObject(playerid,8);
	if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);

	if(GetPVarInt(playerid,"oil_salary") > 0) {
		static const f_str[] = "Ви заробили "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 5)];

		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП нефтезавод");
	}
	else {
		static const f_str[] = "Ви заробили "ORANGE"$%d. {f6f6d9}Гроші будуть зачисдені на вашу банківську карту під час зарплати (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 5)];

		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PlayerInfo[playerid][pSalary] += TI[playerid][tJobSalary];
	}

	FI[fWHITEHOUSE][fBank] -= TI[playerid][tJobSalary];
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	DeletePVar(playerid,"oil_salary");
	TI[playerid][tJobSalary] = 0;
	RemovePlayerMapIcon(playerid, 1),RemovePlayerMapIcon(playerid, 2);
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndSad(playerid) {
	TI[playerid][tJobSad][0] = 0;
	DeletePVar(playerid, "bailer");
	DeletePVar(playerid, "bailer_1");
	DeletePVar(playerid, "bailer_2");
	DeletePVar(playerid, "bailer_3");
	DeletePVar(playerid, "bailer_4");
	if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
		A_SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
		SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
	}
	else A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
	if(GetPVarInt(playerid,"sad_salary") > 0) {
		static const f_str[] = "Ви заробили "ORANGE"$%d";
		new string[sizeof(f_str) +1 + (-2 + 5)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		GiveMoney(playerid,TI[playerid][tJobSalary],"ЗП яблуневий сад");
	}
	else {
		static const f_str[] = "Ви заробили "ORANGE"$%d. {f6f6d9}Гроші будуть зачисдені на вашу банківську карту під час зарплати (PayDay)";
		new string[sizeof(f_str) +1 + (-2 + 5)];
		
		format(string,sizeof(string),f_str,TI[playerid][tJobSalary]);
		SendOk(playerid,string);
		PlayerInfo[playerid][pSalary] += TI[playerid][tJobSalary];
	}

	FI[fWHITEHOUSE][fBank] -= TI[playerid][tJobSalary];
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	DeletePVar(playerid,"sad_salary");
	TI[playerid][tJobSad][2] = 0;
	TI[playerid][tJobSad][3] = 0;
	TI[playerid][tJobSalary] = 0;
	for(new i = 0;i < 4;i++) {
		PlayerTextDrawHide(playerid,work_td[playerid][i]);
	}
	return 1;
}
stock EndFish(playerid) {
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 473) RemovePlayerFromVehicleAC(playerid);
	GangZoneHideForPlayer(playerid,fish_zone[GetPVarInt(playerid,"fish_place")-1]);
	DeletePVar(playerid, "fish_place");
	DeletePVar(playerid, "fish_yes");
	RemovePlayerAttachedObject(playerid, 7);
	Fishing[playerid] = false;
	TogglePlayerControllable(playerid, 1);
	TI[playerid][tProcess][0] = -1;
	TI[playerid][tProcess][1] = -1;
	for(new YN = 0;YN < 3;YN++) {
		TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	return 1;
}
CB: LoadProd(playerid) {
	if(!GetVehicleTrailer(GetPlayerVehicleID(playerid)) && GetVehicleModel(GetPlayerVehicleID(playerid)) == 403) { 
		if(PlayerTrailer[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"Ви уже брали цистерну с топливом");
		new rand = random(5);
		PlayerTrailer[playerid] = A_CreateVehicle(584,car_fuels[rand][0],car_fuels[rand][1],car_fuels[rand][2],170.0000,-1,-1,-1,VEHICLE_TYPE_TRAILER);
		PlayerTrailerTime[playerid] = 30;
		new string[128];
		SetPVarInt(playerid,"count_prod", GetPVarInt(playerid,"count_prod") + GetPVarInt(playerid,"count_prod2"));
		format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бізнес: "GREEN"Відсутній", GetPVarInt(playerid,"count_prod"));
		gPlayerProdText[playerid] = CreateDynamic3DTextLabel(string,-1, 0.0, 0.0, 0.0, 15.0, INVALID_PLAYER_ID, PlayerTrailer[playerid]);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid],E_STREAMER_ATTACH_OFFSET_Y, -0.5);
		Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,gPlayerProdText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
		SendOk(playerid,"У Вас есть ровно 30 секунд щоб прицепить цистерну с бензином");
	}
	else {
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
			DeletePVar(playerid,"count_prod2");
			return 1;
		}
		new string[144];

		format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бізнес: "GREEN"Відсутній", GetPVarInt(playerid,"count_prod")+GetPVarInt(playerid,"rand_prod"));
		UpdateDynamic3DTextLabelText(gPlayerProdText[playerid],-1,string);

		new rand = Random(50,70);

		if(GetPVarInt(playerid,"count_prod2") > GetPVarInt(playerid,"rand_prod")) {
			SetPVarInt(playerid,"rand_prod", GetPVarInt(playerid,"rand_prod") + rand);
			SetTimerEx("LoadProd",150,0,"i",playerid);
			TogglePlayerControllable(playerid, 0);
		}
		else {
			SetPVarInt(playerid,"count_prod", GetPVarInt(playerid,"count_prod") + GetPVarInt(playerid,"count_prod2"));
			TogglePlayerControllable(playerid, 1);
			DeletePVar(playerid,"rand_prod");
			format(string,sizeof(string),"Загружено: "GREEN"%d/2000\n"W"Бізнес: "GREEN"Відсутній", GetPVarInt(playerid,"count_prod"));
			UpdateDynamic3DTextLabelText(gPlayerProdText[playerid],-1,string);
		}

	}
	return 1;
}
CB: PlayerPlaySoundDelay(playerid,soundid) {
	PlayerPlaySound(playerid,soundid,0.0,0.0,0.0);
	return true;
}
stock GetYearDayCount(year) {
	if((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) return 366;
	else return 365;
}

stock GetDayNumber() {
	new d,m,y,diff,daycount,cdaycount;
	getdate(y,m,d);	
	diff = y - 2012;
	for(new i;i<diff;i++) daycount += GetYearDayCount(i+2012);
	cdaycount = GetYearDayCount(y);	
	new Mon[12];
	if(cdaycount == 365) Mon = {0,31,59,90,120,151,181,212,243,273,304,334};
	else Mon = {0,31,60,91,121,152,182,213,244,274,305,335};	
	m -= 1; //один минус переводим в индекс	
	new result = daycount+Mon[m]+d;
	return result;
}
stock PhoneStatus(playerid,bool:status) {
	if(status == true) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid,3,18874,6,0.107999,0.015000,-0.016000,97.100006,-165.800048,-3.000013);
		MeAction(playerid,"достал(а) телефон");
	}
	else {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid,3);
		MeAction(playerid,"положил(а) телефон");
	}
}
SavePlayerNumber(playerid) {
	new query[1024];
	format(query,sizeof(query),"UPDATE `accounts` SET `phonenumber` = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `pID` = '%d' LIMIT 1",
	PlayerInfo[playerid][pPhoneNumber][0],PlayerInfo[playerid][pPhoneNumber][1],PlayerInfo[playerid][pPhoneNumber][2],PlayerInfo[playerid][pPhoneNumber][3],PlayerInfo[playerid][pPhoneNumber][4],
	PlayerInfo[playerid][pPhoneNumber][5],PlayerInfo[playerid][pPhoneNumber][6],PlayerInfo[playerid][pPhoneNumber][7],PlayerInfo[playerid][pPhoneNumber][8],PlayerInfo[playerid][pPhoneNumber][9],
	PlayerInfo[playerid][pPhoneNumber][10],PlayerInfo[playerid][pPhoneNumber][11],PlayerInfo[playerid][pPhoneNumber][12],PlayerInfo[playerid][pPhoneNumber][13],PlayerInfo[playerid][pPhoneNumber][14],
	PlayerInfo[playerid][pPhoneNumber][15],PlayerInfo[playerid][pPhoneNumber][16],PlayerInfo[playerid][pPhoneNumber][17],PlayerInfo[playerid][pPhoneNumber][18],PlayerInfo[playerid][pPhoneNumber][19],
	PlayerInfo[playerid][pPhoneNumber][20],PlayerInfo[playerid][pPhoneNumber][21],PlayerInfo[playerid][pPhoneNumber][22],PlayerInfo[playerid][pPhoneNumber][23],PlayerInfo[playerid][pPhoneNumber][24],PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "", "");
					
	format(query,sizeof(query),"UPDATE `accounts` SET `phonename` = '%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s' WHERE `pID` = '%d' LIMIT 1",pPhoneName[playerid][0],pPhoneName[playerid][1],pPhoneName[playerid][2],pPhoneName[playerid][3],pPhoneName[playerid][4],
	pPhoneName[playerid][5],pPhoneName[playerid][6],pPhoneName[playerid][7],pPhoneName[playerid][8],pPhoneName[playerid][9],
	pPhoneName[playerid][10],pPhoneName[playerid][11],pPhoneName[playerid][12],pPhoneName[playerid][13],pPhoneName[playerid][14],
	pPhoneName[playerid][15],pPhoneName[playerid][16],pPhoneName[playerid][17],pPhoneName[playerid][18],pPhoneName[playerid][19],
	pPhoneName[playerid][20],pPhoneName[playerid][21],pPhoneName[playerid][22],pPhoneName[playerid][23],pPhoneName[playerid][24],PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "", "");
}
stock save_perf_sell(i,ID) {
	new query[1024];
	mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_CARS"` SET `perf_engine_1`= '0', `perf_engine_2`= '0', `perf_engine_3`= '0', `perf_engine_4`= '0', `perf_engine_5`= '0',`perf_brake_1`= '0', `perf_brake_2`= '0', `perf_brake_3`= '0', `perf_brake_4`= '0', `perf_brake_5`= '0'  WHERE id = '%i'",gPlayerCars[i][carID][ID]);
	mysql_tquery(connects, query, "", "");
	return true;
}
stock save_perf(i,ID) {
	gPlayerCars[i][carPEngine_1][ID] = VehicleInfo[house_car[i][ID]][vPEngine][0];
	gPlayerCars[i][carPEngine_2][ID] = VehicleInfo[house_car[i][ID]][vPEngine][1];
	gPlayerCars[i][carPEngine_3][ID] = VehicleInfo[house_car[i][ID]][vPEngine][2];
	gPlayerCars[i][carPEngine_4][ID] = VehicleInfo[house_car[i][ID]][vPEngine][3];
	gPlayerCars[i][carPEngine_5][ID] = VehicleInfo[house_car[i][ID]][vPEngine][4];

	gPlayerCars[i][carPBrake_1][ID] = VehicleInfo[house_car[i][ID]][vPBrake][0];
	gPlayerCars[i][carPBrake_2][ID] = VehicleInfo[house_car[i][ID]][vPBrake][1];
	gPlayerCars[i][carPBrake_3][ID] = VehicleInfo[house_car[i][ID]][vPBrake][2];
	gPlayerCars[i][carPBrake_4][ID] = VehicleInfo[house_car[i][ID]][vPBrake][3];
	gPlayerCars[i][carPBrake_5][ID] = VehicleInfo[house_car[i][ID]][vPBrake][4];

    new temp[0x9e];
	new query[1024];
	mysql_format(connects, query, sizeof(query), "UPDATE `"TABLE_CARS"` SET ");
	format(temp,sizeof(temp),"`perf_engine_1`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][0]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_engine_2`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][1]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_engine_3`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][2]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_engine_4`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][3]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_engine_5`= '%i',",VehicleInfo[house_car[i][ID]][vPEngine][4]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_1`= '%i',",VehicleInfo[house_car[i][ID]][vPBrake][0]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_2`= '%i',",VehicleInfo[house_car[i][ID]][vPBrake][1]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_3`= '%i',",VehicleInfo[house_car[i][ID]][vPBrake][2]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_4`= '%i',",VehicleInfo[house_car[i][ID]][vPBrake][3]), 	strcat(query,temp,sizeof(query));
	format(temp,sizeof(temp),"`perf_brake_5`= '%i'",VehicleInfo[house_car[i][ID]][vPBrake][4]), 	strcat(query,temp,sizeof(query));

	format(temp,sizeof(temp)," WHERE id = '%i'",gPlayerCars[i][carID][ID]),							strcat(query,temp,sizeof(query));
	mysql_tquery(connects, query, "", "");
	return true;
}
stock loading_cars(playerid,car) {
	if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return 1;
	new house = PlayerInfo[playerid][pHouse]-1;
	if(PlayerInfo[playerid][pRoom]) {
		if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
			gPlayerCars[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
			gPlayerCars[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
			A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
		else if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
			gPlayerCars[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
			gPlayerCars[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
			A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
	}
	else if(!gHouses[house][houseImprove][2]) {
		if(house_car[playerid][0] != INVALID_VEHICLE_ID) {
			gPlayerCars[playerid][carFuel][0] = VehicleInfo[house_car[playerid][0]][vFuel];
			gPlayerCars[playerid][carDrived][0] = VehicleInfo[house_car[playerid][0]][vDrived];
			A_DestroyVehicle(house_car[playerid][0]),house_car[playerid][0] = INVALID_VEHICLE_ID;
		}
		else if(house_car[playerid][1] != INVALID_VEHICLE_ID) {
			gPlayerCars[playerid][carFuel][1] = VehicleInfo[house_car[playerid][1]][vFuel];
			gPlayerCars[playerid][carDrived][1] = VehicleInfo[house_car[playerid][1]][vDrived];
			A_DestroyVehicle(house_car[playerid][1]),house_car[playerid][1] = INVALID_VEHICLE_ID;
		}
	}
	else if(gHouses[house][houseImprove][2]) {
		if(house_car[playerid][car] != INVALID_VEHICLE_ID) {
			A_DestroyVehicle(house_car[playerid][car]);
			gPlayerCars[playerid][carFuel][car] = VehicleInfo[house_car[playerid][car]][vFuel];
			gPlayerCars[playerid][carDrived][car] = VehicleInfo[house_car[playerid][car]][vDrived];
			house_car[playerid][car] = INVALID_VEHICLE_ID;
		}
	}
	if(PlayerInfo[playerid][pRoom]) {
		switch(PlayerInfo[playerid][pRoom]) {
			case 1..60: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[PlayerInfo[playerid][pRoom]-1][0], hotel_spawnscar[PlayerInfo[playerid][pRoom]-1][1], hotel_spawnscar[PlayerInfo[playerid][pRoom]-1][2], hotel_spawnscar[PlayerInfo[playerid][pRoom]-1][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 61..120: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[PlayerInfo[playerid][pRoom]-61][0], hotel_spawnscar[PlayerInfo[playerid][pRoom]-61][1], hotel_spawnscar[PlayerInfo[playerid][pRoom]-61][2], hotel_spawnscar[PlayerInfo[playerid][pRoom]-61][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 121..180: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[PlayerInfo[playerid][pRoom]-121][0], hotel_spawnscar[PlayerInfo[playerid][pRoom]-121][1], hotel_spawnscar[PlayerInfo[playerid][pRoom]-121][2], hotel_spawnscar[PlayerInfo[playerid][pRoom]-121][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 181..240: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], hotel_spawnscar[PlayerInfo[playerid][pRoom]-181][0], hotel_spawnscar[PlayerInfo[playerid][pRoom]-181][1], hotel_spawnscar[PlayerInfo[playerid][pRoom]-181][2], hotel_spawnscar[PlayerInfo[playerid][pRoom]-181][3] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
		}
		if(strcmp(NumberVehicle[playerid][car],"TRANSIT",true)) SetVehicleNumberPlate(house_car[playerid][car], NumberVehicle[playerid][car]);
		else SetVehicleNumberPlate(house_car[playerid][car], "TRANSIT");
		SetVehicleVirtualWorld(house_car[playerid][car],GetPVarInt(playerid, "selectedhotel"));
		LinkVehicleToInterior(house_car[playerid][car],101);
	}
	else if(!gHouses[house][houseImprove][2]) {
		house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car], gHouses[house][houseParkX], gHouses[house][houseParkY], gHouses[house][houseParkZ], gHouses[house][houseParkR] , gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
		if(strcmp(NumberVehicle[playerid][car],"TRANSIT",true)) SetVehicleNumberPlate(house_car[playerid][car], NumberVehicle[playerid][car]);
		else SetVehicleNumberPlate(house_car[playerid][car], "TRANSIT");
	}
	else if(gHouses[house][houseImprove][2]) {
		new id = -1;
		switch(gHouses[house][houseClass]) {
			case 0: id = 0;
			case 1: id = 2;
			case 2: id = 4;
			case 3: id = 6;
		}
		new hint = gHouses[house][houseHint];
		new interior = hinterior_info[hint][h_interior];
		switch(car) {
			case 0: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car],cargarage[id][0],cargarage[id][1],cargarage[id][2],cargarage[id][3], gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
			case 1: house_car[playerid][car] = A_CreateVehicle(gPlayerCars[playerid][carModel][car],cargarage[id+1][0],cargarage[id+1][1],cargarage[id+1][2],cargarage[id+1][3], gPlayerCars[playerid][carColor_one][car] ,gPlayerCars[playerid][carColor_two][car], -1,VEHICLE_TYPE_PLAYER);
		}
		if(strcmp(NumberVehicle[playerid][car],"TRANSIT",true)) SetVehicleNumberPlate(house_car[playerid][car], NumberVehicle[playerid][car]);
		else SetVehicleNumberPlate(house_car[playerid][car], "TRANSIT");
		SetVehicleVirtualWorld(house_car[playerid][car],PlayerInfo[playerid][pHouse]);
		LinkVehicleToInterior(house_car[playerid][car],interior);
	}
	LoadTuning(playerid,house_car[playerid][car],car);
	VehicleInfo[house_car[playerid][car]][vFuel] = 50.0;
	VehicleInfo[house_car[playerid][car]][vDrived] = gPlayerCars[playerid][carDrived][car];
	SetVehicleParamsEx(house_car[playerid][car],false,false,false,true,false,false,false);

	TrunkInfo[house_car[playerid][car]][tDrugs] = gPlayerCars[playerid][carNarko][car];
	TrunkInfo[house_car[playerid][car]][tMats] = gPlayerCars[playerid][carMats][car];
	TrunkInfo[house_car[playerid][car]][tKanistra] = gPlayerCars[playerid][carKanistra][car];
	TrunkInfo[house_car[playerid][car]][tGun][0] = gPlayerCars[playerid][carDeagle][car];
	TrunkInfo[house_car[playerid][car]][tGun][1] = gPlayerCars[playerid][carAK47][car];
	TrunkInfo[house_car[playerid][car]][tGun][2] = gPlayerCars[playerid][carM4][car];
	TrunkInfo[house_car[playerid][car]][tGun][3] = gPlayerCars[playerid][carShot][car];
	TrunkInfo[house_car[playerid][car]][tOpen] = gPlayerCars[playerid][carOpen][car];

    strmid(VehicleInfo[house_car[playerid][car]][vOwner], OwnerVehicle[playerid][car], 0, strlen(OwnerVehicle[playerid][car]), MAX_PLAYER_NAME);
    
	VehicleInfo[house_car[playerid][car]][vPEngine][0] = gPlayerCars[playerid][carPEngine_1][car];
	VehicleInfo[house_car[playerid][car]][vPEngine][1] = gPlayerCars[playerid][carPEngine_2][car];
	VehicleInfo[house_car[playerid][car]][vPEngine][2] = gPlayerCars[playerid][carPEngine_3][car];
	VehicleInfo[house_car[playerid][car]][vPEngine][3] = gPlayerCars[playerid][carPEngine_4][car];
	VehicleInfo[house_car[playerid][car]][vPEngine][4] = gPlayerCars[playerid][carPEngine_5][car];

	VehicleInfo[house_car[playerid][car]][vPBrake][0] = gPlayerCars[playerid][carPBrake_1][car];
	VehicleInfo[house_car[playerid][car]][vPBrake][1] = gPlayerCars[playerid][carPBrake_2][car];
	VehicleInfo[house_car[playerid][car]][vPBrake][2] = gPlayerCars[playerid][carPBrake_3][car];
	VehicleInfo[house_car[playerid][car]][vPBrake][3] = gPlayerCars[playerid][carPBrake_4][car];
	VehicleInfo[house_car[playerid][car]][vPBrake][4] = gPlayerCars[playerid][carPBrake_5][car];
	VehicleInfo[house_car[playerid][car]][vLock] = 1;
    VehicleInfo[house_car[playerid][car]][vKey] = 0;

	for(new i; i < 5; i ++) {
		if(VehicleInfo[house_car[playerid][car]][vPEngine][i]) VehicleInfo[house_car[playerid][car]][vEngineBoost] += engine_name_boost[i];
		if(VehicleInfo[house_car[playerid][car]][vPBrake][i]) VehicleInfo[house_car[playerid][car]][vBrakeBoost] += brake_name_boost[i];
	}
	//if(VehicleInfo[house_car[playerid][car]][vEngineBoost] == 4) perf_engine_object(house_car[playerid][car]);
	return 1;
}
stock sell_cars(playerid,car) {
	if(!PlayerInfo[playerid][pHouse] && !PlayerInfo[playerid][pRoom]) return 1;
	if(gPlayerCars[playerid][carModel][car] == 481) return ErrorMessage(playerid, "Данное Т/С нельзя продати");
	//if(GetPVarInt(playerid,"_changecar") || GetPVarInt(playerid,"changecar")) return SendClientMessage(playerid,COLOR_GREY,"В данный момент вы не можете продати свой автомобіль!");
	new modelid = gPlayerCars[playerid][carModel][car] - 400;
	new price = floatround(gTransport[modelid][trPrice]*0.8);

	FI[fWHITEHOUSE][fBank] += floatround(gTransport[modelid][trPrice]*0.2);
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);

	GiveMoney(playerid,price,"продажа ТС в гос");

	RemoveTuning(playerid,house_car[playerid][car],car);
	gPlayerCars[playerid][carDrived][car] = 0;

	gPlayerCars[playerid][carModel][car] = 481;
	gPlayerCars[playerid][carColor_one][car] = 203;
	gPlayerCars[playerid][carColor_two][car] = 203;
	strmid(NumberVehicle[playerid][car], "TRANSIT", 0, strlen("TRANSIT"), 255);
	save_perf_sell(playerid,car);
	if(house_car[playerid][car] != INVALID_VEHICLE_ID) {
		for(new i; i < 5; i ++) {
			VehicleInfo[house_car[playerid][car]][vPEngine][i] = 0;	
			VehicleInfo[house_car[playerid][car]][vPBrake][i] = 0;		
		}
		A_DestroyVehicle(house_car[playerid][car]);
		house_car[playerid][car] = INVALID_VEHICLE_ID;
	}
	save_car(playerid,car);
	SendOk(playerid, "Ви продали свой автомобіль");
	return 1;
}
SendStreamMessage(Float:radius, playerid, const mes[], color) {
	new Float:X,
		Float:Y,
		Float:Z,
		vw = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid,X,Y,Z);
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPlayerVirtualWorld(i) == vw) {
			if(PlayerToPoint(radius,i,X,Y,Z)) SendClientMessage(i, color, mes);
		}
	}
}
stock DoAction(playerid,action[],Float:distance = 13.0) {
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	new string[128];
	format(string,sizeof(string),"%s (%s)",action,player_name[playerid]);
	SendStreamMessage(distance, playerid, string, COLOR_PURPLE);
	return 1;
}
stock TryAction(playerid,action[],Float:distance = 13.0) {
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	new luck[24],string[144];
	if((random(2-0)+0) == 1) strcat(luck,"{33AA33}Удачно");
	else strcat(luck,"{FF0000}Неудачно");
	format(string,sizeof(string),"%s %s | %s",player_name[playerid],action,luck);
	SendStreamMessage(distance, playerid, string, COLOR_PURPLE);
	return 1;
}
stock AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z) {
	new Float:trunkpos[5][4];
	trunkpos[2][0]=x;
	trunkpos[2][1]=y;
	trunkpos[2][2]=z;
	trunkpos[2][3]=a;
	trunkpos[2][0]-=1.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]-=1.5*floatcos(-trunkpos[2][3],degrees);
	trunkpos[0]=trunkpos[2];
	trunkpos[1]=trunkpos[2];
	trunkpos[0][0]=trunkpos[2][0]+2.0*floatsin(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[0][1]=trunkpos[2][1]+2.0*floatcos(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[1][0]=trunkpos[2][0]+0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[1][1]=trunkpos[2][1]+0.5*floatcos(-trunkpos[2][3],degrees);
	GetPlayerCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2]);
	SetPVarFloat(playerid,"oldtrunkcamposx",trunkpos[3][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy",trunkpos[3][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz",trunkpos[3][2]);
	GetPlayerCameraFrontVector(playerid,trunkpos[4][0],trunkpos[4][1],trunkpos[4][2]);
	InterpolateCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2],trunkpos[0][0],trunkpos[0][1],trunkpos[0][2]+2.4,2000,CAMERA_MOVE);
	SetPVarFloat(playerid,"oldtrunkcamposx2",trunkpos[3][0] + trunkpos[4][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy2",trunkpos[3][1] + trunkpos[4][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz2",trunkpos[3][2] + trunkpos[4][2]);
	InterpolateCameraLookAt(playerid,trunkpos[3][0] + trunkpos[4][0],trunkpos[3][1] + trunkpos[4][1],trunkpos[3][2] + trunkpos[4][2],trunkpos[1][0],trunkpos[1][1],trunkpos[1][2]+0.8,2000,CAMERA_MOVE),
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
	trunkpos[2][0]+=0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]+=0.5*floatcos(-trunkpos[2][3],degrees);
	SetPlayerPosAC(playerid,trunkpos[2][0],pos_y,pos_z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetPlayerFacingAngle(playerid,trunkpos[2][3]);
	return 1;
}
stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance) {
	new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style) {
		case 0: {
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
		case 1: {
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 2: {
			a += 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		case 3: {
			a -= 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return false;
	}
	return true;
}
stock SaveTrunk(vehicleid) {
	new slot_vehicle_player[2]={-1,...};
	for(new i=0;i<MAX_PLAYERS;i++) {
		if(!IsPlayerConnected(i)) continue;
		if(vehicleid == house_car[i][0]) {
			slot_vehicle_player[0]=0;
			slot_vehicle_player[1]=i;
			break;
		}
		else if(vehicleid == house_car[i][1]) {
			slot_vehicle_player[0]=1;
			slot_vehicle_player[1]=i;
			break;
		}
	}
	if(slot_vehicle_player[0] != -1) {
		new playerid=slot_vehicle_player[1];
		new slot_vehicle=slot_vehicle_player[0];

		gPlayerCars[playerid][carNarko][slot_vehicle] = TrunkInfo[vehicleid][tDrugs];
		gPlayerCars[playerid][carMats][slot_vehicle] = TrunkInfo[vehicleid][tMats];
		gPlayerCars[playerid][carKanistra][slot_vehicle] = TrunkInfo[vehicleid][tKanistra];
		gPlayerCars[playerid][carOpen][slot_vehicle] = TrunkInfo[vehicleid][tOpen];
		gPlayerCars[playerid][carDeagle][slot_vehicle] = TrunkInfo[vehicleid][tGun][0];
		gPlayerCars[playerid][carAK47][slot_vehicle] = TrunkInfo[vehicleid][tGun][1];
		gPlayerCars[playerid][carM4][slot_vehicle] = TrunkInfo[vehicleid][tGun][2];
		gPlayerCars[playerid][carShot][slot_vehicle] = TrunkInfo[vehicleid][tGun][3];
	}
	return 1;
}
stock trunk_close(playerid) {
	new Float:tX=GetPVarFloat(playerid,"oldtrunkcamposx");
	new Float:tY=GetPVarFloat(playerid,"oldtrunkcamposy");
	new Float:tZ=GetPVarFloat(playerid,"oldtrunkcamposz");
	new Float:tX2=GetPVarFloat(playerid,"oldtrunkcamposx2");
	new Float:tY2=GetPVarFloat(playerid,"oldtrunkcamposy2");
	new Float:tZ2=GetPVarFloat(playerid,"oldtrunkcamposz2");
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);
	InterpolateCameraPos(playerid,x,y,z,tX,tY,tZ,1500,CAMERA_MOVE);
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,tX2,tY2,tZ2,1500,CAMERA_MOVE);
	SetTimerEx("SetCameraBehindPlayerDelay",1501,0,"i",playerid);
	GetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);

	SetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
	idaofcar[playerid] = -1;
	DeletePVar(playerid,"oldtrunkcamposx");
	DeletePVar(playerid,"oldtrunkcamposy");
	DeletePVar(playerid,"oldtrunkcamposz");
	DeletePVar(playerid,"oldtrunkcamposx2");
	DeletePVar(playerid,"oldtrunkcamposy2");
	DeletePVar(playerid,"oldtrunkcamposz2");
	return 1;
}
stock ShowSettings(playerid) {
	new string[700];
	new talk[25],style[25],radio[30],spawn[30];

	switch(PlayerInfo[playerid][pSettings][4]) {
		case 0 : talk = "Стандартний";
		case 7 : talk = "Ні";
	    default: format(talk,sizeof(talk),"Стиль %d",PlayerInfo[playerid][pSettings][4]);
	}
	switch(PlayerInfo[playerid][pSettings][5]) {
		case 0: style = "Стандартний";
	    case 1: style = "Бокс";
	    case 2: style = "Кунг-Фу";
	    case 3: style = "Кик-Бокс";
	}
	switch(PlayerInfo[playerid][pSettings][2]) {
		case fLSNEWS: radio = "Радиоцентр ЛС";
	    case fSFNEWS: radio = "Радиоцентр СФ";
	    case fLVNEWS: radio = "Радиоцентр ЛВ";
		case 0: radio = "Відключений";
	}
	switch(PlayerInfo[playerid][pSpawn]) {
		case 0: spawn = "Вокзал";
	    case 1: spawn = "Будинок/Готель";
	    case 2: spawn = "Організація";
	    case 3: spawn = "Будинок сім'ї";
	}
	format:string("Найменування\tСтатус\n\
					"YELLOW"1."W" Ніки гравців\t"ORANGE"%s\n"YELLOW"2."W" Чат організації\t"ORANGE"%s\n"YELLOW"3."W" Чат компанії(ТК,Таксі)\t"ORANGE"%s\n\
	"YELLOW"4."W" Ефіри\t"ORANGE"%s\n"YELLOW"5."W" Стиль розмови\t"ORANGE"%s\n"YELLOW"6."W" Стиль бійки\t"ORANGE"%s\n"YELLOW"7."W" Показувати голод\t"ORANGE"%s\n"YELLOW"8."W" Показувати кейс\t"ORANGE"%s\n"YELLOW"9."W" Прогрузка текстур\t"ORANGE"%s\n"YELLOW"10."W" Назва сім'ї над головой\t"ORANGE"%s\n"YELLOW"11."W" Дамаг информер\t"ORANGE"%s\n\
	"YELLOW"12."W" Місце спавна\t"ORANGE"%s\n"YELLOW"13."W" Аксесуари",
		PlayerInfo[playerid][pSettings][0] ? ("Вкл") : ("Вимк"),
		PlayerInfo[playerid][pSettings][1] ? ("Вкл") : ("Вимк"),
		PlayerInfo[playerid][pSettings][3] ? ("Вкл") : ("Вимк"),
		radio,talk,style,PlayerInfo[playerid][pSettings][6] ? ("Вкл") : ("Вимк"),PlayerInfo[playerid][pSettings][7] ? ("Вкл") : ("Вимк"),PlayerInfo[playerid][pSettings][8] ? ("Вкл") : ("Вимк"),PlayerInfo[playerid][pSettings][9] ? ("Вкл") : ("Вимк"),PlayerInfo[playerid][pSettings][10] ? ("Вкл") : ("Вимк"),spawn
	);
    D(playerid,D_MENU_SETTING,DSTH,"Настройки",string,"Змінити","Назад");
    return 1;
}
CB: OnPlayerSelectPassword(playerid, password[]) {
	new rows;
	cache_get_row_count(rows);
	if(rows) D(playerid,D_CHANGE_PASS,DSI, ""YELLOW"Смена пароля","\n\n"W"Введіть новый пароль:\n\n", "Ввід", "Назад");
	else D(playerid,D_CHANGE_PASS_SELECT,DSI, ""YELLOW"Смена пароля","\n\n"W"Введіть свой старый пароль:\n\n"NO"*{f6f6d9} Пароль введён неверно\n\n", "Ввід", "Назад");
	return 1;
}
CB: OnPlayerAttachTrailer(playerid, vehicleid, trailerid) {
	if((trailerid != PlayerTrailer[playerid] && PlayerInfo[playerid][pJob] != 2) && (trailerid != TK_Trailer[playerid] && (PlayerInfo[playerid][bizz_work] == 5 || PlayerInfo[playerid][bizz_work] == 6 || PlayerInfo[playerid][bizz_work] == 7))) {
		ErrorMessage(playerid,"Цей прицеп принадлежит другому гравцю");
		return DetachTrailerFromVehicle(vehicleid);
	}
	else if(trailerid == PlayerTrailer[playerid]) SetPVarInt(playerid,"attach_trailer",1);
	else if(trailerid == TK_Trailer[playerid]) TI[playerid][tTrucker][3] = 0;
	return 1;
}

CB: OnPlayerDeattachTrailer(playerid,vehicleid,trailerid) {
	if(trailerid == PlayerTrailer[playerid]) {
	    DeletePVar(playerid,"attach_trailer");
		PlayerTrailerTime[playerid] = 30;
	}
	else if(trailerid == TK_Trailer[playerid]) {
	    TI[playerid][tTrucker][3] = 120;
	}
	return 1;
}
CB: UnTazer(playerid) {
	if(!IsPlayerConnected(playerid)) return 1;
	ClearAnimations(playerid);
	ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0, 0);
	TogglePlayerControllable(playerid,true);
	TI[playerid][tTazer] = false;
	return 1;
}
stock IsPlayerStream(Float:radi, playerid, targetid) {
	if(!IsPlayerConnected(targetid)) return 0;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(targetid,X,Y,Z);
	return PlayerToPoint(radi,playerid,X,Y,Z);
}
stock IntToStr(value) {
	new tmp[30];
	valstr(tmp, value);
	return tmp;
}
stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z) {
	if(IsPlayerInAnyVehicle(playerid)) return false;
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z)) return ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
	ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);
	return true;
}
stock load_heal() {
	new name[24],rows;
	new member,heal;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`MedHeal` FROM `accounts` WHERE `pMember` = 8 ORDER BY `MedHeal` DESC LIMIT 5");
	cache_get_row_count(rows);
	if(rows) {
		new str[128],text[400];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "MedHeal",heal);


			format(str,sizeof(str),""ORANGE"%d. {f6f6d9}%s [%d]\n",i+1,name,heal),strcat(text,str);
			UpdateDynamic3DTextLabelText(med_turn_text[0], -1, text);
		}
	}
	cache_delete(result);

	new rand = random(3);
	disease = rand;
	new text[300];
	strcat(text,""W"Зона заражения:");
	switch(rand) {
		case 0: {
			format(text,sizeof(text),"%s\n"YELLOW"Гетто",text);
			UpdateDynamic3DTextLabelText(med_turn_text[3], -1, text);
		}
		case 1: {
			format(text,sizeof(text),"%s\n"YELLOW"Заброшеный аэропорт",text);
			UpdateDynamic3DTextLabelText(med_turn_text[3], -1, text);
		}
		case 2: {
			format(text,sizeof(text),"%s\n"YELLOW"Карьер",text);
			UpdateDynamic3DTextLabelText(med_turn_text[3], -1, text);
		}
	}
	load_heal_2();
	return 1;
}
stock load_heal_2() {
	new name[24],rows;
	new member,heal;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`MedHeal` FROM `accounts` WHERE `pMember` = 9 ORDER BY `MedHeal` DESC LIMIT 5");
	cache_get_row_count(rows);
	if(rows) {
		new str[128],text[400];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "MedHeal",heal);

			format(str,sizeof(str),""ORANGE"%d. {f6f6d9}%s [%d]\n",i+1,name,heal),strcat(text,str);
			UpdateDynamic3DTextLabelText(med_turn_text[1], -1, text);
		}
	}
	cache_delete(result);
	load_heal_3();
	return 1;
}
stock load_heal_3() {
	new name[24],rows;
	new member,heal;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`MedHeal` FROM `accounts` WHERE `pMember` = 10 ORDER BY `MedHeal` DESC LIMIT 5");
	cache_get_row_count(rows);
	if(rows) {
		new str[128],text[400];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "MedHeal",heal);

			format(str,sizeof(str),""ORANGE"%d. {f6f6d9}%s [%d]\n",i+1,name,heal),strcat(text,str);
			UpdateDynamic3DTextLabelText(med_turn_text[2], -1, text);
		}
	}
	cache_delete(result);
	return 1;
}
stock load_advert() {
	new name[24],rows;
	new member,advert;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`Advert` FROM `accounts` WHERE `pMember` = 11 ORDER BY `Advert` DESC LIMIT 5");
	cache_get_row_count(rows);
	if(rows) {
		new str[128],text[500];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "Advert",advert);

			format(str,sizeof(str),""ORANGE"%d. {f6f6d9}%s [%d]\n",i+1,name,advert),strcat(text,str);
			UpdateDynamic3DTextLabelText(advert_turn_text[0], -1, text);
		}
	}
	cache_delete(result);
	load_advert_2();
	return 1;
}
stock load_advert_2() {
	new name[24],rows;
	new member,advert;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`Advert` FROM `accounts` WHERE `pMember` = 12 ORDER BY `Advert` DESC LIMIT 5");
	cache_get_row_count(rows);
	if(rows) {
		new str[128],text[500];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "Advert",advert);

			format(str,sizeof(str),""ORANGE"%d. {f6f6d9}%s [%d]\n",i+1,name,advert),strcat(text,str);
			UpdateDynamic3DTextLabelText(advert_turn_text[1], -1, text);
		}
	}
	cache_delete(result);
	load_advert_3();
	return 1;
}
stock load_advert_3() {
	new name[24],rows;
	new member,advert;
	new Cache:result = mysql_query(connects, "SELECT `Name`,`pMember`,`Advert` FROM `accounts` WHERE `pMember` = 13 ORDER BY `Advert` DESC LIMIT 5");
	cache_get_row_count(rows);
	if(rows) {
		new str[128],text[500];
		strcat(text,""W"Лучшие работники:\n\n");
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", name, MAX_PLAYER_NAME);
			cache_get_value_name_int(i, "pMember",member);
			cache_get_value_name_int(i, "Advert",advert);

			format(str,sizeof(str),""ORANGE"%d. {f6f6d9}%s [%d]\n",i+1,name,advert),strcat(text,str);
			UpdateDynamic3DTextLabelText(advert_turn_text[2], -1, text);
		}
	}
	cache_delete(result);
	return 1;
}
CB: alogin(playerid,const giveplayerid[]) {
	new inputtext[16];
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	GetPVarString(playerid,"inputtext",inputtext,15);
	new query[160];
	format(query, sizeof(query), "UPDATE `admin` SET `password` = MD5('%s') WHERE `name` = '%s'", inputtext, player_name[playerid]);
	mysql_pquery(connects,query);
	SendClientMessage(playerid, CGOLD, "Добро пожаловать в команду адміністрації "FullServName"!");

	cache_get_value_int(0,"rank",PlayerInfo[playerid][pAdmin]);
	cache_get_value_int(0,"kick",gAdmin[playerid][0]);
	cache_get_value_int(0,"ban",gAdmin[playerid][1]);
	cache_get_value_int(0,"mute",gAdmin[playerid][2]);
	cache_get_value_int(0,"pm",gAdmin[playerid][3]);
	cache_get_value_int(0,"warn",gAdmin[playerid][4]);
	cache_get_value_int(0,"jail",gAdmin[playerid][5]);
	cache_get_value_int(0,"vig",gAdmin[playerid][6]);
	cache_get_value_int(0,"blockadmin",gAdmin[playerid][7]);
	cache_get_value_int(0,"rep",gAdmin[playerid][8]);

	new saturday = 1310155200, w = gettime(), day_week;
	while(w - saturday > 60 * 60 * 24) {
		w -= 60 * 60 * 24;
		day_week ++;
	}
	while(day_week >= 7) day_week -= 7;
	static const Names_Days[7][22] = {"online_saturday","online_sunday","online_monday","online_tuesday","online_wednesday","online_thursday","online_friday"};
	if(!strcmp(Names_Days[day_week],"online_monday")) cache_get_value_int(0,"online_monday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_tuesday")) cache_get_value_int(0,"online_tuesday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_wednesday")) cache_get_value_int(0,"online_wednesday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_thursday")) cache_get_value_int(0,"online_thursday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_friday")) cache_get_value_int(0,"online_friday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_saturday")) cache_get_value_int(0,"online_saturday",gAdminTime[playerid]);
	if(!strcmp(Names_Days[day_week],"online_sunday")) cache_get_value_int(0,"online_sunday",gAdminTime[playerid]);

	if(gAdmin[playerid][7] == 1) {
		PlayerInfo[playerid][pLeader] = 0;
		PlayerInfo[playerid][pMember] = 0;
		PlayerInfo[playerid][pRank] = 0;
		SendClientMessage(playerid,COLOR_REDD,"Ви заморожены как адміністратор");
		return 1;
	}
	dostup[playerid] = 1;
	ACLoad(playerid);
	
	if(strlen(PlayerInfo[playerid][pPrefix]) > 1)
		{
			new string[120];
			format(string,sizeof(string), "[A] » %s {f6f6d9}%s авторизувався в адмін панелі", PlayerInfo[playerid][pPrefix], player_name[playerid]), SendAdminMessage(CGOLD, string);
		}
	else
		{
			static const f_str[] = "[A] » %s {f6f6d9}%s авторизувався в адмін панелі";
			new str[sizeof(f_str) +1 + (-2 + 32) + (-2 + MAX_PLAYER_NAME)];
			format(str, sizeof(str), f_str,arank[PlayerInfo[playerid][pAdmin]],player_name[playerid]), SendAdminMessage(CGOLD, str);
		}

	query = "";
	format(query, sizeof(query), "UPDATE `admin` SET online_status = 1 WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
	mysql_pquery(connects, query, "", "");
	
	/*query = "";
	format(query, sizeof(query), "SELECT * FROM `FullDostup` WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
	mysql_pquery(connects, query, "load_fd","d", playerid);*/
	return 1;
}
/*CB: load_fd(playerid)
{
    new rows;
	cache_get_row_count(rows);
	
	if(rows) {
        cache_get_value_int(0,"level",FullInfo[playerid][fLevel]);
	}
	return 1;
}*/
CB: password_adm(playerid,const inputtext[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		ErrorMessage(playerid, "Пароль введен неверно");
		SetPVarInt(playerid, "Popytki", GetPVarInt(playerid, "Popytki") + 1);
		if(GetPVarInt(playerid, "Popytki") > 4) {
			DeletePVar(playerid, "Popytki");
			gAdmin[playerid][7] = 1;
			Kick(playerid);
		}
	}
	else {
		cache_get_value_int(0,"rank",PlayerInfo[playerid][pAdmin]);
		cache_get_value_int(0,"kick",gAdmin[playerid][0]);
		cache_get_value_int(0,"ban",gAdmin[playerid][1]);
		cache_get_value_int(0,"mute",gAdmin[playerid][2]);
		cache_get_value_int(0,"pm",gAdmin[playerid][3]);
		cache_get_value_int(0,"warn",gAdmin[playerid][4]);
		cache_get_value_int(0,"jail",gAdmin[playerid][5]);
		cache_get_value_int(0,"vig",gAdmin[playerid][6]);
		cache_get_value_int(0,"blockadmin",gAdmin[playerid][7]);
		cache_get_value_int(0,"rep",gAdmin[playerid][8]);

		new saturday = 1310155200, w = gettime(), day_week;
		while(w - saturday > 60 * 60 * 24) {
			w -= 60 * 60 * 24;
			day_week ++;
		}
		while(day_week >= 7) day_week -= 7;
		static const Names_Days[7][22] = {"online_saturday","online_sunday","online_monday","online_tuesday","online_wednesday","online_thursday","online_friday"};
		if(!strcmp(Names_Days[day_week],"online_monday")) cache_get_value_int(0,"online_monday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_tuesday")) cache_get_value_int(0,"online_tuesday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_wednesday")) cache_get_value_int(0,"online_wednesday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_thursday")) cache_get_value_int(0,"online_thursday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_friday")) cache_get_value_int(0,"online_friday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_saturday")) cache_get_value_int(0,"online_saturday",gAdminTime[playerid]);
		if(!strcmp(Names_Days[day_week],"online_sunday")) cache_get_value_int(0,"online_sunday",gAdminTime[playerid]);

		if(gAdmin[playerid][7] == 1) {
			PlayerInfo[playerid][pLeader] = 0;
			PlayerInfo[playerid][pMember] = 0;
			PlayerInfo[playerid][pRank] = 0;
			SendClientMessage(playerid,COLOR_REDD,"Ви заморожены как адміністратор");
			return 1;
		}
		dostup[playerid] = 1;
		ACLoad(playerid);

		for(new i;i<10;i++) {
			if(ChetInfo[i][cheatid1]==playerid) {
				TextDrawSetString(CheatText[i], "-");
				Cheat1 ++;
				if(Cheat1 > 9) Cheat1 = 0;
			}
		}

		if(strlen(PlayerInfo[playerid][pPrefix]) > 1)
		{
			new string[120];
			format(string,sizeof(string), "[A] » %s {f6f6d9}%s авторизувався в адмін панелі", PlayerInfo[playerid][pPrefix], player_name[playerid]), SendAdminMessage(CGOLD, string);
		}
		else
		{
			static const f_str[] = "[A] » %s {f6f6d9}%s авторизувався в адмін панелі";
			new str[sizeof(f_str) +1 + (-2 + 32) + (-2 + MAX_PLAYER_NAME)];
			format(str, sizeof(str), f_str,arank[PlayerInfo[playerid][pAdmin]],player_name[playerid]), SendAdminMessage(CGOLD, str);
		}
		if(!GetString(player_ip_check[playerid],player_ip[playerid])) {
			new str_adm[128];
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
       			if(!PlayerInfo[i][pAdmin] || !dostup[i]) continue;
				format(str_adm, sizeof(str_adm), "[! ADM !] У %s різняться IP (%s) с IP останнього входу (%s)", player_name[playerid],player_ip[playerid],PlayerInfo[playerid][pIpReg]);
				SendClientMessage(i, CGOLD, str_adm);
			}
		}

		new qeury[128];
		format(qeury, sizeof(qeury), "UPDATE `admin` SET `online_connection` = NOW(), online_status = 1 WHERE `Name` = '%s' LIMIT 1", player_name[playerid]);
		mysql_pquery(connects, qeury, "", "");
	}
	return 1;
}

CB: rjenter(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	if(!PlayerInfo[playerid][pGoogleSec]) return ErrorMessage(playerid, "У Вас відсутня защита Google Authenticator");
	new string[64];
	cache_get_value_int(0,"lvl",DJlvl[playerid]);
 	cache_get_value(0, "nick", DJname[playerid],25);
	format(string, sizeof(string), "[DJ %s]"W" %s(%i) авторизовался",DJname[playerid],player_name[playerid],playerid);
	SendDJMessage(COLOR_YELLOW, string);
	jdostup[playerid] = 1;
	return 1;
}

CB: alogin1(playerid) {
	new passwords[32];
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	//if(!PlayerInfo[playerid][pGoogleSec]) return ErrorMessage(playerid, "У Вас відсутня защита Google Authenticator");
	cache_get_value(0, "password", passwords, 31);
	if(!strcmp(passwords,"qwerty",true)) {
		SetPVarInt(playerid,"aLogin",1);
		D(playerid, D_ALOGIN, DSP, ""YELLOW"Авторизація", "\n\n"W"Для доступа до адмін привілегій, Вам необхідно авторизуватися:\n\t"YELLOW"Придумайте пароль от 6 до 15 символов\n\n"NO"Якщо ви забули пароль, ніхто вам відновлювати його не буде", "Вход", "Відміна");
	}
	else {
		SetPVarInt(playerid,"aLogin",0);
		D(playerid, D_ALOGIN, DSP, ""YELLOW"Авторизація", "\n\n"W"Для доступа до адмін привілегій, Вам необхідно авторизуватися:\n\n", "Вход", "Відміна");
	}
	return 1;
}
CB: aloading(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	SendClientMessage(playerid, COLOR_YELLOW, "[Admins Team] "W"Для виходу на чергування, ведіть "YELLOW"/alogin");
	return 1;
}
CB: add_dj(playerid,giveplayerid,level) {
	new rows;
	cache_get_row_count(rows);
	new sqlcmd[350],string[128];
	if(rows) 
	{
		if(level) return ErrorMessage(playerid,"Гравець уже состоит в команде Dj");
		else {
			format(sqlcmd, 128, "DELETE FROM `rjlist` WHERE `pid`='%d'", PlayerInfo[giveplayerid][pID]);
			mysql_pquery(connects, sqlcmd, "", "");
			DJlvl[giveplayerid] = 0;
			format(string, sizeof(string), "%s успішно удален из списка DJ", player_name[giveplayerid]);
			SendOk(playerid, string);
		}
	}
	else {
			if(!level) return ErrorMessage(playerid,"Гравець не состоит в команде Dj");
			SetPVarInt(playerid,"makeDJ",giveplayerid);
			D(playerid,D_DJMAKE,DSI, ""YELLOW"Введіть ник DJ","\n\n"W"Введіть ник DJ:\n\n\
																Мінімальна кількість символів: "YELLOW"3\n\
																"W"Максимальна кількість символів: "YELLOW"15","Змінити","Відміна");
	}
	return 1;
}
CB: add_gs(playerid,const giveplayerid[],level) {
	new rows;
	cache_get_row_count(rows);
	new sqlcmd[350],string[128];
	if(!rows) return ErrorMessage(playerid,"Гравець не знайдений");
	new load_level;
	cache_get_value_int(0,"pHelper",load_level);
	if(load_level != 0) {
		if(level == 0) {
			format(sqlcmd, 128, "UPDATE `accounts` SET `pHelper` = '0' WHERE `Name`='%s'", giveplayerid);
			mysql_pquery(connects, sqlcmd, "", "");
			format(string, sizeof(string), "%s успішно удален из списка Game Support", giveplayerid);
			SendOk(playerid, string);
		}
		else {
			format(sqlcmd, 128, "UPDATE `accounts` SET `pHelper` = '1' WHERE `Name`='%s'",giveplayerid);
			mysql_pquery(connects, sqlcmd, "", "");
			format(string, sizeof(string), "%s успішно добавлен в список Game Support", giveplayerid);
			SendOk(playerid, string);
		}
	}
	return 1;
}
CB: Moderator(playerid,const giveplayerid[],level) {
	new rows;
	cache_get_row_count(rows);
	new sqlcmd[350],string[128];
	if(rows != 0) {
		new load_level;
		cache_get_value_int(0,"rank",load_level);
		if(load_level != 0) {
			if(level == 0) {
				format(sqlcmd, 128, "DELETE FROM `admin` WHERE `Name`='%s'", giveplayerid);
				mysql_pquery(connects, sqlcmd, "", "");
				format(string, sizeof(string), "%s успішно удален из списка модераторов", giveplayerid);
				SendOk(playerid, string);
			}
			else {
				format(sqlcmd, 128, "UPDATE `admin` SET  `rank` = '%d' WHERE `Name` = '%s' LIMIT 1", level,giveplayerid);
				mysql_pquery(connects, sqlcmd, "", "");
				format(string, sizeof(string), "Рівень адміністрування у %s змінений на %d", giveplayerid, level);
				SendOk(playerid, string);
			}
		}
	}
	else {
		if(level == 0) return ErrorMessage(playerid,"Гравець не адміністратор.");
		format(sqlcmd, sizeof(sqlcmd), "INSERT INTO `admin` (`Name`, `rank`, `online_connection`,`CheckName`, `date_start`) VALUES ('%s', %d, NOW(),'%s', NOW())", giveplayerid, level, player_name[playerid]);
		mysql_pquery(connects, sqlcmd, "","");

		format(string, sizeof(string), "%s успішно добавлен в список модераторов. Рівень полномочий %d", giveplayerid, level);
		SendOk(playerid,string);
	}
	return 1;
}
stock exit_garage(vehicleid, worldid, bool:tune = false) {
	new id;
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPlayerVehicleID(i) == vehicleid) {
			TI[i][tVirtualWorld] = id;
			TI[i][tInterior] = worldid;
			SetPlayerInterior(i,worldid);
			if(tune) id = i, SetPlayerVirtualWorld(i,id);
			else SetPlayerVirtualWorld(i,worldid);
			SetPlayerTime(i,tmphour, tmpminute);
		}
	}
	LinkVehicleToInterior(vehicleid, worldid);
	if(tune) SetVehicleVirtualWorld(vehicleid, id);
	else SetVehicleVirtualWorld(vehicleid, worldid);
	return 1;
}
stock enter_garage(vehicleid, worldid,house,interior) {
	new id;
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPlayerVehicleID(i) == vehicleid) {
			TI[i][tVirtualWorld] = id;
			TI[i][tInterior] = interior;
			SetPlayerInterior(i,interior);
			TI[i][tSelectHouse] = house;
			SetPlayerVirtualWorld(i,worldid);
			SetPlayerTime(i,tmphour, tmpminute);
		}
	}
	LinkVehicleToInterior(vehicleid, interior);
	SetVehicleVirtualWorld(vehicleid, worldid);
	return 1;
}
stock IsAIP(const text[]) {
	new numbers;
	for(new i = 0;i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return true;
	return false;
}

CB: all_referals(playerid,const names[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Рефералы не знайдені");
	new level,stats[3];
	for(new i = 0; i < rows; i++) {
		cache_get_value_int(i,"pLevel",level);
		if(level == 2) stats[0] ++;
		if(level == 3) stats[1] ++;
		if(level >= 4) stats[2] ++;
	}
	static const f_str[] = ""W"Нік: "YELLOW"%s\n\n\
"W"Гравці які досягли 2 лвл: "ORANGE"[%d]\n\
"W"Гравці які досягли 3 лвл: "ORANGE"[%d]\n\
"W"Гравці які досягли 4+ лвл: "ORANGE"[%d]\n\n\
"W"Всього гравців запрошено: "YELLOW"[%d]";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4) + (-2 + 4) + (-2 + 4) + (-2 + 4)];
	format(string,sizeof(string),f_str,names,stats[0],stats[1],stats[2],rows);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Рефералы",string,"Закрити","");
	return 1 ;
}
CB: AGetID(playerid, id) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Аккаунт не знайдений");
	new ids,names[MAX_PLAYER_NAME+1];
	cache_get_value_int(0,"pID",ids);
	cache_get_value(0,"Name",names,MAX_PLAYER_NAME);
	new string[256];
	format(string,sizeof(string),""W"%sНомер аккаунта:      \t%i\n",string,id);
	format(string,sizeof(string),"%sИмя:      \t\t%s\n\n",string,names);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"GETID",string,"Закрити","");
	return 1;
}
CB: AGetStats(playerid, const name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Аккаунт не знайдено");
	new level,awarn,money,moneyb,id;
	new leader,member,rank,house;
	new biz,regip[17],onlin[33],drug[25];
	new ip[17];
	cache_get_value_int(0,"pID",id);
	cache_get_value_int(0,"pLevel",level);
	cache_get_value_int(0,"pWarns",awarn);
	cache_get_value_int(0,"pCash",money);
	cache_get_value_int(0,"pBank",moneyb);
	cache_get_value_int(0,"pLeader",leader);
	cache_get_value_int(0,"pMember",member);
	cache_get_value_int(0,"pRank",rank);
	cache_get_value_int(0,"bussiness",biz);
	cache_get_value_int(0,"house",house);
	cache_get_value(0,"pIpReg",regip,16);
	cache_get_value(0,"pvIp",ip,16);
	cache_get_value(0,"pOnline",onlin,32);
	cache_get_value(0,"pDrug",drug,24);
	new string[1024];
	format(string,sizeof(string),""W"%sНомер аккаунта:      \t%i\n",string,id);
	format(string,sizeof(string),"%sІм'я:      \t\t%s\n\n",string,name);
	format(string,sizeof(string),"%sРівень:      \t\t%d\n",string,level);
	format(string,sizeof(string),"%sПопереджень:      \t\t%d\n",string,awarn);
	format(string,sizeof(string),"%sГроші(нал):      \t%d\n",string,money);
	format(string,sizeof(string),"%sГроші(банк):      \t%d\n",string,moneyb);
	format(string,sizeof(string),"%sЛідер:      \t\t%d\n",string,leader);
	format(string,sizeof(string),"%sФракція:      \t\t%d\n",string,member);
	format(string,sizeof(string),"%sРанг:      \t\t%d\n",string,rank);
	if(biz != 0) format(string,sizeof(string),"%sбізнес:          \t\t%d(%s)\n",string,biz,gBusiness[biz-1][bizzName]);
	else format(string,sizeof(string),"%sбізнес:      Відсутній)\n",string,biz);
	format(string,sizeof(string),"%sБудинок:          \t\t%d\n",string,house);
	format(string,sizeof(string),"%sR-IP:      \t\t%s\n",string,regip);
	format(string,sizeof(string),"%sL-IP:      \t\t%s\n",string,ip);
	format(string,sizeof(string),"%sOnline:\t\t\t%s\n",string,onlin);
	format(string,sizeof(string),"%sВказував при реєстрації:\t\t\t%s\n\n",string,drug);
	if(!GetString(regip,ip)) format(string,sizeof(string),"%s"NO" IP реєстрації та IP останнього входа різні\n",string);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"OFFSTATS",string,"Закрити","");
	return 1;
}
CB: get_info_player(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Аккаунт не знайдений");
	new name[MAX_PLAYER_NAME];
	new ipreg[17];
	new getonip[17];
	new datareg[32+1];

	cache_get_value(0,"Name",name, MAX_PLAYER_NAME);
	cache_get_value(0,"pIpReg",ipreg, 16);
	cache_get_value(0,"pvIp",getonip, 16);
	cache_get_value(0,"pDataReg",datareg, 32+1);

	new id,cash,level,donate;
	cache_get_value_int(0,"pID",id);
	cache_get_value_int(0,"pCash",cash);
	cache_get_value_int(0,"pLevel",level);
	cache_get_value_int(0,"donatemoney",donate);

	new string[512];
	format(string, sizeof(string), ""W"Номер аккаунта: "YELLOW"%d\nГроші готівкою: "GREEN"$%d\nРівень: "YELLOW"%d\nREG-IP: "YELLOW"%s\nLAST-IP: "YELLOW"%s\n"W"Донат: "YELLOW"%d\nЗарегистрирован: "YELLOW"%s",
	id,cash,level,ipreg,getonip,donate,datareg);
	D(playerid,DIALOG_NONE,DSM,name,string,"Закрити","");
	return 1;
}
CB:offwarn(playerid, const Nick[],const Reason[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Аккаунт не знайдений");
	new query[300];
	new count_warns;
	cache_get_value_int(0,"pWarns",count_warns);
	if((count_warns+1) < 3) {

		format(query, sizeof(query), "UPDATE `accounts` SET `pWarns` = '%i', `warntime` = '%i', `pLeader` = '0', `pMember` = '0', `pRank` = '0' WHERE `Name` = '%s' LIMIT 1",(count_warns+1),unix + 7*86400,Nick);
		mysql_pquery(connects,query);

		WriteLog(LOG_WARN,player_name[playerid],Nick,Reason);
		gAdmin[playerid][ADMIN_WARN] ++;

		new string[128];
		format(string,sizeof(string),"Адміністратор %s выдал предупреждение гравцю %s [%i/3]. Причина: %s",player_name[playerid],Nick,(count_warns+1),Reason);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
		//Insert_Warn(Nick,count_warns+1,player_name[playerid],Reason);
	}
	else {
		if(IsBannedName(Nick)) return ErrorMessage(playerid, "Цей гравець уже заблокирован");
		new string[144];
		BanName(Nick, player_name[playerid], 30, Reason);
		format(string, sizeof(string), "Адміністратор %s забанил (3 предупреждения) %s на %d днів в оффлайне. Причина: %s",player_name[playerid], Nick, 30, Reason);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
	}
	off_add_jobinfo(Nick,"Недееспособен");
	return 1;
}
stock Insert_Warn(const name[],warn, const admin[], const reason[]) {
	string_replace(reason, "'", ' ');
	new query[512];
	mysql_format(connects, query, sizeof(query), "INSERT INTO `warns`(`name`,`warn`, `admin`, `reason`, `time`) VALUES ('%s','%d','%s','%s',NOW())", name, warn, admin, reason);
	mysql_pquery(connects, query, "", "");
	return 1;
}
stock string_replace(text[], const find[2], replace, pos = 0) {
	while ((pos = strfind(text, find, false, pos)) != -1) {
		text[pos] = replace;
	}
}
CB: warninfo(playerid,type) {
	new rows, string[295], time[24], anick[24], reason[34], query[34];
	cache_get_row_count(rows);
	format(string, sizeof(string), "{ffcf00}Дата и время\t\t Кем выдан\tПричина"W"\n\n");
	for(new i = 0; i < rows; i++) {
	    cache_get_value_name(i, "time", query); strmid(time, query, 0, strlen(query), 24);
	    cache_get_value_name(i, "admin", query); strmid(anick, query, 0, strlen(query), MAX_PLAYER_NAME);
	    cache_get_value_name(i, "reason", query); strmid(reason, query, 0, strlen(query), 34);
	 	format(string, sizeof(string), "%s%s\t%s\t%s\n",string, time, anick, reason);
	}
	if(!type) return D(GetPVarInt(playerid, "warninfo"), DIALOG_NONE, DSM, ""YELLOW"Предупреждения", string, "Закрити", "");
	else D(playerid, DIALOG_NONE, DSM, ""YELLOW"Предупреждения", string, "Закрити", "");
	return 1;
}
stock fork_start() {
	if(fork_pickups > 0) return 1;
	new rand = random(sizeof(fork_allpickups));
	fork_pickup = CreateDynamicPickup(11715,23,fork_allpickups[rand][0],fork_allpickups[rand][1],fork_allpickups[rand][2],201,87);
	fork_pickups = 1;
	return true;
}
stock ether_closed(playerid) {
	for(new i; i<3; i++) {
		if(calls_news[i] == playerid && calls_ether[i] != INVALID_PLAYER_ID) {
			SendOk(calls_ether[i], "Ведущий отключил приём звонков");
			PhoneStatus(calls_ether[i],false);
			calls_ether[i] = INVALID_PLAYER_ID;
			calls_news[i] = INVALID_PLAYER_ID;
		}
	}
	switch(GetTeamID(playerid)) {
		case fLSNEWS: {
			if(calls_news[0] == playerid) {
				calls_news[0] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
			}
		}
		case fSFNEWS: {
			if(calls_news[1] == playerid) {
				calls_news[1] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
			}
		}
		case fLVNEWS: {
			if(calls_news[2] == playerid) {
				calls_news[2] = INVALID_PLAYER_ID;
				new string[128];
				format(string,sizeof(string),"%s завершил(а) приём звонков",player_name[playerid]);
				SendFamilyMessage(PlayerInfo[playerid][pMember], 0x139BECFF, string);
			}
		}
	}
}
CB: ShowNumber(playerid,str[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid,"Не знайдено");
	new number[11],string[156],query[128];
	cache_get_value_name(0,"number",number,10);
	if(!strcmp(number,str,true)) cache_get_value_name(0,"owner",query,MAX_PLAYER_NAME);
	format(string,sizeof(string),"{FFFFFF}Гос.номер: {FFFF00}%s{FFFFFF}\nХозяин: {FFFF00}%s{FFFFFF}",str,query);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Запрос",string,"Закрити","");
	return 1;
}
CMD:robhouse(playerid, params[]) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Ви не бандит");
	new idx = -1;

	for(new i = 0; i < gHouseCount; i ++) {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, gHouses[i][houseX], gHouses[i][houseY], gHouses[i][houseZ])) {
			idx = i;
			break;
		}
	}
	if(idx == -1) return ErrorMessage(playerid, "Ви повині знаходиться поруч зі своїм будинком");
	new Float:vehx, Float:vehy, Float:vehz;
	GetVehiclePos(rob_veh[playerid], vehx, vehy, vehz);
	if(!IsPlayerInRangeOfPoint(playerid, 11.0, vehx,vehy,vehz)) return ErrorMessage(playerid, "Ви должны находиться рядом с фургоном");
   	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] == -1) return ErrorMessage(playerid,"Грабить дом можно только на территории гетто");
	if(gHouses[idx][houseOwnerID] == PlayerInfo[playerid][pID]) return ErrorMessage(playerid,"Ви не можете ограбить свой дом");
	if(!gHouses[idx][houseOwnerID]) return ErrorMessage(playerid,"У этого будинку нет владельца");
	if(gHouses[idx][houseRob]) return ErrorMessage(playerid, "Цей дом уже грабили в этом часу");
	if(!PlayerInfo[playerid][pJemmy]) return ErrorMessage(playerid,"У вас немає відмичок. Купити їх можна в 24-7");
	
	JobTempProcess[playerid] = 9;
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	RandomYareNforJOBS(playerid);
	TogglePlayerControllable(playerid, false);
	gHouses[idx][houseRob] = true;
	if(QuestProgress[playerid][6] < 15 && AcceptQuest[playerid][6] != 0) QuestProgress[playerid][6] ++,save_quest(playerid,6);
	if(QuestProgress[playerid][6] == 15 && AcceptQuest[playerid][6] != 0) {
		D(playerid,DIALOG_NONE,DSM, ""YELLOW"Квест",""W"Ви успішно ограбили 15 домов. Це завдання можна закінчити та забрати за нього нагороду","Закрити","");
		NextStapQI(playerid,6);
	}
	return 1;
}
CMD:getgun(playerid,params[]) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid,"Ви не бандит");
	switch(PlayerInfo[playerid][pMember]) {
		case fBALLAS: if(!IsPlayerInRangeOfPoint(playerid,20.0,1939.0865,-1120.5308,26.4909) && GetPlayerVirtualWorld(playerid) != 52) return ErrorMessage(playerid,"Необхідно находиться в доме/на респе Ballas");
		case fVAGOS: if(!IsPlayerInRangeOfPoint(playerid,20.0,2756.3188,-1180.4659,69.3984) && GetPlayerVirtualWorld(playerid) != 53) return ErrorMessage(playerid,"Необхідно находиться в доме/на респе Vagos");
		case fGROVE: if(!IsPlayerInRangeOfPoint(playerid,20.0,2495.8179,-1679.6707,13.3391) && GetPlayerVirtualWorld(playerid) != 54) return ErrorMessage(playerid,"Необхідно находиться в доме/на респе Grove");
		case fAZTEC: if(!IsPlayerInRangeOfPoint(playerid,20.0,1677.8265,-2117.4241,13.5469) && GetPlayerVirtualWorld(playerid) != 55) return ErrorMessage(playerid,"Необхідно находиться в доме/на респе Aztec");
		case fRIFA: if(!IsPlayerInRangeOfPoint(playerid,20.0,2730.9592,-1952.6282,13.5394) && GetPlayerVirtualWorld(playerid) != 56) return ErrorMessage(playerid,"Необхідно находиться в доме/на респе Rifa");
	}
	if(!FI[GetTeamID(playerid)][fSklad]) return ErrorMessage(playerid,"Лідер вашої банди закрив доступ до складу");
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fUseStock]) {
		new str[128];
		format(str,sizeof(str),"Склад доступний з %i ранга", FI[GetTeamID(playerid)][fUseStock]);
		ErrorMessage(playerid,str);
		return 1;
	}
	if(sscanf(params,"dd",params[0],params[1])) {
		SendClientMessage(playerid, COLOR_GREY, "0 - SD-Pistol | 1 - Desert Eagle | 2 - MP5 | 3 - Shotgun | 4 - M4 | 5 - AK-47 | 6 - Rifle");
		return SendEsp(playerid, "/getgun [ID зброї] [патрони]");
	}
	new gun;
	switch(params[0]) {
		case 0: gun = 23;
		case 1: gun = 24;
		case 2: gun = 29;
		case 3: gun = 25;
		case 4: gun = 31;
		case 5: gun = 30;
		case 6: gun = 33;
		default: return 1;
	}
	SetPVarInt(playerid,"noneedgun",0);
	for(new i;i<12;i++) {
		new weapid,ammot;
		GetPlayerWeaponData(playerid,i,weapid,ammot);
		if(weapid == gun) {
			SetPVarInt(playerid,"noneedgun",1); 
			break;
		}
	}
	if(FI[GetTeamID(playerid)][fMats]<(params[1]*MakeGunData[params[0]][mgunamount]) && !GetPVarInt(playerid,"noneedgun")) return ErrorMessage(playerid,"На складі недостаточно боєприпасів");
	if(FI[GetTeamID(playerid)][fMats]<params[1] && GetPVarInt(playerid,"noneedgun")) return ErrorMessage(playerid,"На складі недостаточно боєприпасів");
	if(params[1] < 1 || params[1] > 200) return ErrorMessage(playerid,"Не можна брать меньше 1 и більше 200 пт");
	MeAction(playerid,"взял(а) зброю зі складу");
	if(!GetPVarInt(playerid,"noneedgun")) FI[GetTeamID(playerid)][fMats] -= MakeGunData[params[0]][mgunamount];
	SetPVarInt(playerid,"noneedgun",0);

	FI[GetTeamID(playerid)][fMats] -= params[1];
	UpdateFraction(GetTeamID(playerid),"Mats",FI[GetTeamID(playerid)][fMats]);

	AC_GivePlayerWeapon(playerid,MakeGunData[params[0]][mgunid],params[1]);
	static const f_str[] = "[F] %s[%d] взял(а) зброю зі складу [%d пт]";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 4)];
	
 	format(string,sizeof(string),f_str,player_name[playerid],playerid,params[1]);
	SendFamilyMessage(PlayerInfo[playerid][pMember],0x6699ccFF,string);
	return 1;
}
CMD:makegun(playerid) {
	if(!IsAGang(playerid) && !IsAMafia(playerid)) return ErrorMessage(playerid,"Ви не бандит/мафіози");
	if(!PlayerInfo[playerid][pMats]) return ErrorMessage(playerid, "У вас немає боєприпасів");
	if(PlayerInfo[playerid][pJailTime]) return ErrorMessage(playerid, "Не можна використовувати в тюрмі");
	if(player_to_golod[playerid]) return ErrorMessage(playerid, "Не можна використовувати на голодних іграх");
	if(TI[playerid][tDuel] != -1) return ErrorMessage(playerid, "Не можна використовувати на поєдинках");
	new string[512];
	string = "Зброя\tбоєприпасів"W"\n";
	for(new i = 0; i < 7; i++) {
		format(string,sizeof(string),"%s%s\t%i\n",string,MakeGunData[i][mgunname],MakeGunData[i][mgunamount]);
	}
	D(playerid,D_MAKEGUN,DSTH,"Сборка зброї",string,"Вибрати","Закрити");
	return 1;
}
CB: GzCheck(i,napad,vlad) {
	new string[128];
	foreach(new m:Player) {
		if(IsAGang(m)) {
			if(GZInfo[i][gTime] < 300) {
				if(!infight[m]) {
					TextDrawShowForPlayer(m, inFigh);
					infight[m] = true;
				}
			}
			if(!GetPVarInt(m,"ppkz")) {
				GangZoneFlashForPlayer(m,GZInfo[i][gID],GetGangColor(napad));
				TextDrawBoxColor(Capture[3], gang_color(napad));
				TextDrawBoxColor(Capture[4], gang_color(vlad));
				for(new z = 0;z < 10;z++) {
					TextDrawShowForPlayer(m, Capture[z]);
				}

				format(string,sizeof(string),"%s",Convert(GZInfo[i][gTime]));
				TextDrawSetString(Capture[6],string);

				format(string,sizeof(string),"%s",gang_name(vlad));
				TextDrawSetString(Capture[7],string);

				format(string,sizeof(string),"%s",gang_name(napad));
				TextDrawSetString(Capture[9],string);

				format(string,sizeof(string),"%d",CountOnZone[vlad]);
				TextDrawSetString(Capture[2],string);

				format(string,sizeof(string),"%d",CountOnZone[napad]);
				TextDrawSetString(Capture[1],string);
				SetPVarInt(m,"ppkz",true);
			}
			else {
				format(string,sizeof(string),"%s",Convert(GZInfo[i][gTime]));
				TextDrawSetString(Capture[6],string);

				format(string,sizeof(string),"%d",CountOnZone[vlad]);
				TextDrawSetString(Capture[2],string);

				format(string,sizeof(string),"%d",CountOnZone[napad]);
				TextDrawSetString(Capture[1],string);
			}
		}
	}
	if(GZInfo[i][gTime] >= 1) GZInfo[i][gTime] --;
	else if(GZInfo[i][gTime] < 1) {
		new strlolka[112];
		if(CountOnZone[vlad] == CountOnZone[napad] || CountOnZone[vlad] > CountOnZone[napad]) {
			format(strlolka,112,"%s отстояли свою территорию",GFrac(vlad));
		}
		else {
			format(strlolka,112,"%s захватили территорию у банди %s",GFrac(napad),GFrac(vlad));
			VladGzone[GZInfo[i][gFrakVlad]]--;
			VladGzone[GZInfo[i][gNapad]]++;
			GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
			add_gang_points(GZInfo[i][gNapad],5);
		}
		SendBand(COLOR_ORANGE,strlolka);
		new id_killed = -1;
		new max_killed = -1;
		foreach(new x:Player) {
			if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
			if(IsAGang(x) && GetPVarInt(x,"ppkz")) EndCapt(x);
			if(GetPVarInt(x,"killed_shot")) {
				if(GetPVarInt(x,"killed_shot")>max_killed) {
					max_killed = GetPVarInt(x,"killed_shot");
					id_killed = x;
				}
				DeletePVar(x,"killed_shot");
			}
		}
		if(id_killed != -1 && max_killed != -1) {
			format(string,128,"Уничтожил більше всего противников "W"%s {E6251E}Вбивств: "W"%i", player_name[id_killed],max_killed);
			SendBand(COLOR_ORANGE,string);
			if(PlayerInfo[id_killed][pFamily]) reputation_family(PlayerInfo[id_killed][pFamily]-1,3);
		}
		CountOnZone[napad] = 0;
		CountOnZone[vlad] = 0;
		GZInfo[i][gTime] = 0;

		TextDrawSetString(Capture[1],"0");
		TextDrawSetString(Capture[2],"0");
		GZInfo[i][ZoneOnBattle] = 0;
		GangZoneStopFlashForAll(GZInfo[i][gID]);
		GangZoneHideForAll(GZInfo[i][gID]);
		GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
		SaveGZ(i);
		capture_kd[napad] = unix + (70 * 60);
		capture_kd[vlad] = unix + (60 * 60);
		zahvat = false;
		KillTimer(GZInfo[i][gzTimer]);
		GZInfo[i][gzTimer] = 0;
		DestroyDynamicArea(gz_area);
	}
	if(i == 90) black_prods[0] = GZInfo[i][gFrakVlad],black_prods[9] = unix + 60*60*72; SaveMarket(),check_terrs();
	return 1;
}
stock UpdateMorozed() {
	new quer_moroz[350];
	format(quer_moroz,350,"UPDATE `fracmorozed` SET `MOROZ_BALLAS`='%d',`MOROZ_VAGOS`='%d',`MOROZ_GROVE`='%d',`MOROZ_RIFA`='%d',`MOROZ_AZTECAS`='%d',`MOROZ_LCN`='%d',`MOROZ_YAKUZA`='%d',`MOROZ_RM`='%d'",fracmoroz[0],fracmoroz[1],fracmoroz[2],fracmoroz[3],fracmoroz[4],fracmoroz[5],fracmoroz[6],fracmoroz[7]);
	mysql_tquery(connects,quer_moroz,"","");
	return 1;
}
stock SetPosInFrontOfPlayer(playerid,giveplayerid,Float:distance) {
	new Float:x,Float:y,Float:z,Float:a;
	GetPlayerPos(playerid, x, y,z);
	GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	SetPlayerPosAC(giveplayerid,x,y,z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetPlayerFacingAngle(giveplayerid,a);
}
stock GoAnim(playerid,const alib[],const aanim[],Float:atime,amove,ax,ay,az,af,ac) {
	ApplyAnimation(playerid,alib,aanim,atime,amove,ax,ay,az,af,ac);
	return 1;
}
stock IsLeapYear(year) return (year % 4 == 0);
stock TimestampToDate(Timestamp, &year, &month, &day, &hour, &minute, &second, HourGMT, MinuteGMT = 0) {
	new MonthTimes[12][4] = {
		{ 31, 31, 2678400, 2678400 },
		{ 28, 29, 2419200, 2505600 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 },
		{ 30, 30, 2592000, 2592000 },
		{ 31, 31, 2678400, 2678400 }
	};
	new tmp = 2;
	year = 1970;
	month = 1;
	Timestamp -= 172800;

	new log_amount ;
	for(;;) {
		if(log_amount>37) {
			printf ( "[TimestampToDate] %d iteration.", log_amount ) ;
		}
		log_amount ++ ;
		if(Timestamp >= 31536000) {
			year ++;
			Timestamp -= 31536000;
			tmp ++;
			if(tmp == 4) {
				if(Timestamp >= 31622400) {
						tmp = 0;
						year ++;
						Timestamp -= 31622400;
				}
				else break;
			}
		}
		else break;
	}
	for(new i = 0; i < 11; i ++) {
		if(Timestamp >= MonthTimes[i][2 + IsLeapYear(year)]) {
				month ++;
				Timestamp -= MonthTimes[i][2 + IsLeapYear(year)];
		}
		else break;
	}
	day = 1 + (Timestamp / 86400);
	Timestamp %= 86400;
	hour = HourGMT + (Timestamp / 3600);
	Timestamp %= 3600;
	minute = MinuteGMT + (Timestamp / 60);
	second = (Timestamp % 60);
	if(minute > 59) {
		minute = 0;
		hour ++;
	}
	if(hour > 23) {
		hour -= 24;
		day ++;
	}
	if(day > MonthTimes[month][IsLeapYear(year)]) {
		day = 1;
		month ++;
	}
	if(month > 12) {
		month = 1;
		year ++;
	}
	return 1;
}
stock UpdateLicenses(playerid) {
	new query[156];
	format(query, sizeof(query), "UPDATE `accounts` SET `licenses` = '%d,%d,%d,%d' WHERE `pID` = '%d'", lic[playerid][0],lic[playerid][1],lic[playerid][2],lic[playerid][3],PlayerInfo[playerid][pID]);
	mysql_pquery(connects, query, "", "");
	return 1;
}
stock GetTickets(playerid) {
    TOTALTICKETS[playerid] = 0;
	new query[256];
    format(query,sizeof(query),"SELECT * FROM `"TABLE_TICKETS"` WHERE `Name` = '%s'",player_name[playerid]);
	return mysql_tquery(connects, query, "check_tickets", "i", playerid);
}
CB: check_tickets(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return D(playerid,DIALOG_NONE,DSM, ""YELLOW"Список штрафов","Неоплаченных штрафов нет","Закрити","");
	new text[144], price, item,string[1024];
	for(new x = 0; x < rows; x++) {
		cache_get_value_name_int(x, "id", TL[playerid][x][tID]);

		cache_get_value_name(x, "give_name", TL[playerid][x][tName], MAX_PLAYER_NAME);

		cache_get_value_name_int(x, "total", TL[playerid][x][tPrice]);

		cache_get_value_name(x, "reason", TL[playerid][x][tReason], 64);
		cache_get_value_name(x, "date", TL[playerid][x][tDate], 32);

		price += TL[playerid][x][tPrice];
		TOTALTICKETS[playerid]++;
		if(TOTALTICKETS[playerid] == 15) {
			SendClientMessage(playerid,COLOR_GREY,"Показаны первые 15 штрафов");
			break;
		}
	}
	strcat(string,"№\tПричина\tСумма\n");
	format(text,sizeof(text),"-.\tОплатить все штрафы\t{88F83E}%i вирт\n",price), strcat(string,text);
	for(new i; i < TOTALTICKETS[playerid]; i++) {
		item++;
		format(text,sizeof(text),"{ffffff}%i.\t%s\t{FF0000}%i вирт\n",item,TL[playerid][i][tReason], TL[playerid][i][tPrice]);
		strcat(string,text);
	}
	return D(playerid,D_TICKET,DSTH,"Список штрафов",string,"Далі","Відміна");
}
stock arrest(playerid) {
	DelGun(playerid);
	if(PlayerInfo[playerid][pSearch] <= 5) {
		PlayerInfo[playerid][pJail] = GetNearestPolice(playerid);
		PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pSearch] * 600);
	}
	else {
		PlayerInfo[playerid][pJail] = 4;
		PlayerInfo[playerid][pJailTime] = 4500;
	}
	UpdatePlayerData(playerid,"pJail",PlayerInfo[playerid][pJail]);
	UpdatePlayerData(playerid,"pJailTime",PlayerInfo[playerid][pJailTime]);
	PlayerInfo[playerid][pSearch] = 0;
	UpdatePlayerData(playerid,"pSearch",PlayerInfo[playerid][pSearch]);
	PlayerInfo[playerid][pArrested] += 1;
	UpdatePlayerData(playerid,"pArrested",PlayerInfo[playerid][pArrested]);
	PlayerInfo[playerid][pZakonp] -= 3;
	if(PlayerInfo[playerid][pZakonp] < -100) PlayerInfo[playerid][pZakonp] = -100;
	SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pSearch]);
	SetPlayerArmour(playerid, 0);
}
CB: showall_callback(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Використовуйте команду ще раз");
	new string[1512];
	string = "Имя\t\tРанг\n\n"W"";
	for(new i = 0; i < rows; i++) {
		new name[MAX_PLAYER_NAME+1];
		cache_get_value_name(i,"Name",name,MAX_PLAYER_NAME+1);
		new rang;
		cache_get_value_int(i,"pRank",rang);
		format(string,sizeof(string),"%s%s\t\t%i\n",string,name,rang);
	}
	if(rows >= 20) {
		SALLROWS[playerid]++;
		D(playerid,D_SHOWALL,DSTH,"Члены організації оффлайн",string,"Далі","Відміна");
	}
	else D(playerid,DIALOG_NONE,DSTH,"Члены організації оффлайн",string,"Закрити","");
	return 1 ;
}
CB: info_fraction(playerid,ID) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return 1;
	new idd = 0,ids = 0;
	for(new i = 0; i < rows; i++) {
		new rang;
		cache_get_value_int(i,"pRank",rang);
		if(rang == FI[ID][fInviteRang]) idd ++;
	}
	static const f_str[] = ""W"\nОрганізація: "YELLOW"%s\n\
"W"Лідер: "GREEN"%s\n\n\
"W"Поставлен: "YELLOW"%s "W"| "YELLOW"%s\n\
"W"Гравці організації онлайн: "YELLOW"%d\n\
"W"Всього гравців в організації: "YELLOW"%d\n\
"W"Заступників в організації: "YELLOW"%d";
	new string[sizeof(f_str) +1 + (-2 + 25) + (-2 + 25) + (-2 + 53) + (-2 + 7)];
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pMember] != ID)continue;
		if(PlayerInfo[i][pRank] < 1 || PlayerInfo[i][pMember] < 1) continue;
		if(!start_work[i]) continue;
		ids++;
	}
	format(string,sizeof(string),f_str,FI[ID][fName],FI[ID][fLeader],FI[ID][fAdmin],FI[ID][fTime],ids,rows,idd);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Інформація",string,"Закрити","");
	return 1 ;
}
CB: info_funcmembers(bizz) {
	new rows;
	new query[128];
	format(query, sizeof(query), "SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	cache_delete(result);
	return rows;
}
CB: fam_members(fam) {
	new rows;
	new query[128];
	format(query, sizeof(query), "SELECT * FROM accounts WHERE family = '%d'", fam);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	cache_delete(result);
	return rows;
}
SendSpyMessage(fraca, color, mes[]) {
	new string[144];
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPVarInt(i,"tipster_listen") == fraca && GetPVarInt(i,"tipster_listen") > 0) {
			format(string, sizeof(string), "[TIPSTER] %s", mes);
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}
CB: FuelCar(playerid) {
	new step = GetPVarInt(playerid,"tank_fill");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return 0;
	if(GetPVarInt(playerid,"tank_vfuel")+step <= VehicleInfo[vehicleid][vFuel]) {
		DeletePVar(playerid,"tank_fill");
		DeletePVar(playerid,"tank_vfuel");
		TogglePlayerControllable(playerid,true);
		return 1;
	}
	VehicleInfo[vehicleid][vFuel] += 1.0;
	SetTimerEx("FuelCar",500,0,"i",playerid);
	return 1;
}
stock save_slotitem(playerid) {
	new query[256];
	format(query,sizeof(query),"UPDATE accounts SET pSlotItem = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pSlotItem][0],PlayerInfo[playerid][pSlotItem][1],PlayerInfo[playerid][pSlotItem][2],
		PlayerInfo[playerid][pSlotItem][3],PlayerInfo[playerid][pSlotItem][4],PlayerInfo[playerid][pSlotItem][5],PlayerInfo[playerid][pSlotItem][6],PlayerInfo[playerid][pSlotItem][7],PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query);
}
stock save_slotitem_use(playerid) {
	new query[256];
	format(query,sizeof(query),"UPDATE accounts SET pSlotItem_Use = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pSlotItem_Use][0],PlayerInfo[playerid][pSlotItem_Use][1],PlayerInfo[playerid][pSlotItem_Use][2],
		PlayerInfo[playerid][pSlotItem_Use][3],PlayerInfo[playerid][pSlotItem_Use][4],PlayerInfo[playerid][pSlotItem_Use][5],PlayerInfo[playerid][pSlotItem_Use][6],PlayerInfo[playerid][pSlotItem_Use][7],PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query);
}
stock save_settings(playerid) {
	new query[260];
	format(query,sizeof(query),"UPDATE accounts SET Settings = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pSettings][0],PlayerInfo[playerid][pSettings][1],PlayerInfo[playerid][pSettings][2],
		PlayerInfo[playerid][pSettings][3],PlayerInfo[playerid][pSettings][4],PlayerInfo[playerid][pSettings][5],PlayerInfo[playerid][pSettings][6],PlayerInfo[playerid][pSettings][7],PlayerInfo[playerid][pSettings][8],PlayerInfo[playerid][pSettings][9],PlayerInfo[playerid][pSettings][10],PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query);
}
stock save_funcar(bizz) {
	new query[320],data[256];
	for(new i;i<20;i++) {
		if(!i) format(data,sizeof(data),"%d",FuncBizz[bizz][funcbCar][i]);
		else format(data,sizeof(data),"%s|%d",data,FuncBizz[bizz][funcbCar][i]);
	}
	format(query,sizeof(query),"UPDATE business_func SET car = '%s' WHERE bizzID = '%d'", data, bizz);
	mysql_tquery(connects, query);
}
stock save_funtarif(bizz) {
	new query[320],data[256];
	for(new i;i<4;i++) {
		if(!i) format(data,sizeof(data),"%d",FuncBizz[bizz][funcbTarif][i]);
		else format(data,sizeof(data),"%s|%d",data,FuncBizz[bizz][funcbTarif][i]);
	}
	format(query,sizeof(query),"UPDATE business_func SET tarif = '%s' WHERE BINARY bizzID = '%d'", data, bizz);
	mysql_tquery(connects, query);
}
stock load_color(playerid) {
	for(new i = 0, cindex = 0; i < sizeof(func_bcolor); i++) {
		if(i == 0) {
			func_bcolor[i] = TextDrawCreate(475.548797, 143.249954, "usebox");
			TextDrawLetterSize(func_bcolor[i], 0.000000, 18.152412);
			TextDrawTextSize(func_bcolor[i], 141.367492, 0.000000);
			TextDrawAlignment(func_bcolor[i], 1);
			TextDrawColor(func_bcolor[i], 41215);
			TextDrawBoxColor(func_bcolor[i], -1888497599);
			TextDrawUseBox(func_bcolor[i], true);
			TextDrawSetShadow(func_bcolor[i], 0);
			TextDrawSetOutline(func_bcolor[i], 0);
			TextDrawFont(func_bcolor[i], 1);
		}
		if(i > 0) {
			if(i >= 1) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 140.583419, "LD_BEAT:chit");
			if(i == 8) cindex = 0, func_bcolor[i] = TextDrawCreate(144.000000, 192.500015, "LD_BEAT:chit");
			if(i > 8) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 192.500015, "LD_BEAT:chit");
			if(i == 15) cindex = 0,func_bcolor[i] = TextDrawCreate(144.000000, 244.416671, "LD_BEAT:chit");
			if(i > 15) func_bcolor[i] = TextDrawCreate(144.000000 + (45.000000 * cindex), 244.416671, "LD_BEAT:chit");
			TextDrawLetterSize( func_bcolor[i], 0.000000, 0.000000);
			TextDrawTextSize( func_bcolor[i], 58.096633, 65.333282);
			TextDrawAlignment( func_bcolor[i], 1);
			TextDrawColor(func_bcolor[i], color_td[i][col_id]);
			TextDrawSetShadow(func_bcolor[i], 0);
			TextDrawSetOutline(func_bcolor[i], 0);
			TextDrawFont( func_bcolor[i], 4);
			TextDrawSetSelectable( func_bcolor[i], true);
			cindex++;
		}
		TextDrawShowForPlayer(playerid,func_bcolor[i]);
	}
	SetPVarInt(playerid,"select_colortd",1);
	SelectTextDraw(playerid, 0xFFFFFFFF);
	SendClientMessage(playerid,0x00FF00FF,"[Подсказка] "W"Для закриття вікна натисніть "YELLOW"ESC");
	return 1;
}
CB: load_captcha(playerid) {
	for(new i = 0, cindex = 0,cindex_2 = 0; i < sizeof(Captcha); i++) {
		if(i == 0) {
			Captcha[i] = CreatePlayerTextDraw(playerid, 278.666778, 107.037078, "Enter_Passwort");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.192333, 0.894814);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);

		}
		if(i == 1) {
			Captcha[i] = CreatePlayerTextDraw(playerid,256.666473, 105.377822, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.533334);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.000000, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1819704319);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 2) {
			Captcha[i] = CreatePlayerTextDraw(playerid,256.666656, 124.459274, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 18.299999);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.000000, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], -197);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 3) {//низ слева бокс
			Captcha[i] = CreatePlayerTextDraw(playerid,256.333190, 294.948120, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.396001);
			PlayerTextDrawTextSize(playerid,Captcha[i], 308.199218, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1836481535);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 4) {//низ справа бокс
			Captcha[i] = CreatePlayerTextDraw(playerid,313.203063, 294.948089, "box");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 1.401001);
			PlayerTextDrawTextSize(playerid,Captcha[i], 364.415466, 0.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawUseBox(playerid,Captcha[i], 1);
			PlayerTextDrawBoxColor(playerid,Captcha[i], 1836481535);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 1);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i == 5) {
			Captcha[i] = CreatePlayerTextDraw(playerid,277.033721, 293.689025, "x");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.267333, 1.471408);
			PlayerTextDrawTextSize(playerid,Captcha[i], 10.307392, 12.833320);
			PlayerTextDrawAlignment(playerid,Captcha[i], 2);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
		}
		if(i == 6) {
			Captcha[i] = CreatePlayerTextDraw(playerid,332.700317, 293.274169, "ok");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.267333, 1.471408);
			PlayerTextDrawTextSize(playerid,Captcha[i], 38.418739, 13.416661);
			PlayerTextDrawAlignment(playerid,Captcha[i], 2);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
		}
		if(i == 7) {
			Captcha[i] = CreatePlayerTextDraw(playerid,276.000091, 119.325920, "");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid,Captcha[i], 71.000000, 30.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], 121);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 0);
			PlayerTextDrawFont(playerid,Captcha[i], 5);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetPreviewModel(playerid,Captcha[i], 1581);
			PlayerTextDrawSetPreviewRot(playerid,Captcha[i], 2.000000, 0.000000, 0.000000, 1.000000);
		}
		if(i == 8) {
			Captcha[i] = CreatePlayerTextDraw(playerid,293.833374, 126.433341, "----");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.399999, 1.558518);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], -1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 255);
			PlayerTextDrawFont(playerid,Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 1);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
		}
		if(i > 8) {
			if(i >= 9) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 139.237091,"");//123
			if(i == 12) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 174.696350,"");//4
			if(i > 12) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 174.696350,"");//56
			if(i == 15) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 208.911254,"");//7
			if(i > 15) Captcha[i] = CreatePlayerTextDraw(playerid, 255.999954 + (30.999954 * cindex), 208.911254,"");
			if(i == 18) cindex = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 286.799621, 242.511260,"");
			PlayerTextDrawLetterSize(playerid,Captcha[i], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid,Captcha[i], 47.000000, 52.000000);
			PlayerTextDrawAlignment(playerid,Captcha[i], 1);
			PlayerTextDrawColor(playerid,Captcha[i], 131165);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetOutline(playerid,Captcha[i], 0);
			PlayerTextDrawBackgroundColor(playerid,Captcha[i], 0);
			PlayerTextDrawFont(playerid,Captcha[i], 5);
			PlayerTextDrawSetProportional(playerid,Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid,Captcha[i], 0);
			PlayerTextDrawSetPreviewModel(playerid,Captcha[i], 11727);
			PlayerTextDrawSetPreviewRot(playerid,Captcha[i], 0.000000, 0.000000, 0.000000, 1.000000);
			//PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);
			cindex++;
		}
		if(i > 18) {
			new string[512];
			format(string, sizeof(string), "%c", TextArray[i - 19]);
			if(i >= 19) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 154.640762,string);//123
			if(i == 22) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 189.570419,string);//4
			if(i > 22) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 189.570419,string);//56
			if(i == 25) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 224.414886,string);//7
			if(i > 25) Captcha[i] = CreatePlayerTextDraw(playerid, 277.633422 + (32.5 * cindex_2), 224.414886,string);
			if(i == 28) cindex_2 = 0, Captcha[i] = CreatePlayerTextDraw(playerid, 310.333691, 257.600158,string);
			PlayerTextDrawTextSize(playerid, Captcha[i], 16.0, 16.0);
			PlayerTextDrawSetSelectable(playerid, Captcha[i], 1);

			PlayerTextDrawFont(playerid, Captcha[i], 2);
			PlayerTextDrawSetProportional(playerid, Captcha[i], 1);
			PlayerTextDrawLetterSize(playerid, Captcha[i], 0.341666, 2.151703);
			PlayerTextDrawAlignment(playerid, Captcha[i], 2);
			PlayerTextDrawSetOutline(playerid, Captcha[i], 0);
			PlayerTextDrawSetShadow(playerid, Captcha[i], 0);
			cindex_2++;
		}
		PlayerTextDrawShow(playerid, Captcha[i]);
		SelectTextDraw(playerid, COLOR_BLUE);
	}
}
stock tuning_cars(playerid,car) {
	new improve[256];
	if(gPlayerCars[playerid][carVehcom_1][car]) strcat(improve,"Спойлер\n");
	if(gPlayerCars[playerid][carVehcom_2][car]) strcat(improve,"Капот\n");
	if(gPlayerCars[playerid][carVehcom_3][car]) strcat(improve,"Воздухозаборник\n");
	if(gPlayerCars[playerid][carVehcom_4][car]) strcat(improve,"Боковая юбка\n");
	if(gPlayerCars[playerid][carVehcom_5][car]) strcat(improve,"Фары\n");
	if(gPlayerCars[playerid][carVehcom_6][car]) strcat(improve,"Нитро\n");
	if(gPlayerCars[playerid][carVehcom_7][car]) strcat(improve,"Вихлопна труба\n");
	if(gPlayerCars[playerid][carVehcom_8][car]) strcat(improve,"Диски\n");
	if(gPlayerCars[playerid][carVehcom_9][car]) strcat(improve,"Стерео\n");
	if(gPlayerCars[playerid][carVehcom_10][car]) strcat(improve,"Гидравлика\n");
	if(gPlayerCars[playerid][carVehcom_11][car]) strcat(improve,"Передний бампер\n");
	if(gPlayerCars[playerid][carVehcom_12][car]) strcat(improve,"Задний бампер\n");
	for(new i; i < 12; i++) {
		if(gPlayerCars[playerid][carVehcom_%d][car] == 0) strcat(improve,"Відсутні");
	}
	return 1;
}
stock GetCarClassName(classid,classname[],size=sizeof(classname)) {
	switch(classid) {
		case 0: format(classname,size,"Эконом");
		case 1: format(classname,size,"Стандарт");
		case 2: format(classname,size,"Спорт");
		case 3: format(classname,size,"Мото");
	}
}
stock change_carcancel(playerid,id_prodaet) {
	DeletePVar(playerid,"carProdaet");
	DeletePVar(playerid,"carCena");
	DeletePVar(playerid,"sellcar_type");
	DeletePVar(playerid,"carPokupaet");
	DeletePVar(id_prodaet,"carPokupaet");
	DeletePVar(id_prodaet,"numbercar1");
	DeletePVar(id_prodaet,"numbercar2");
	return 1;
}
CB: UpdateGameDice(s) {
	new wait_game_dice[10], count_players = 0, count_score = 0;
	format(wait_game_dice,10,"~g~%d",InfoDice[s][dice_game_start_time] - gettime());
	for(new c = 0; c < 5; c++) {
		if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
		if(Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] == 0) continue;

		if(InfoDice[s][dice_score][c]) count_score++;
		count_players++;
		GameTextForPlayer(InfoDice[s][dice_gamer][c],wait_game_dice,1200,6);
		if(InfoDice[s][dice_game_start_time] <= gettime()) {
			if(InfoDice[s][dice_score][c] == 0) {
				InfoDice[s][dice_score][c] = dice_random[random(sizeof(dice_random))];
				UpdateTextCasino(s);
				UpdateScores(s);
			}
		}
	}
	GameTextForPlayer(InfoDice[s][dice_crup],wait_game_dice,1200,6);
	if(InfoDice[s][dice_game_start_time] <= gettime() || (count_players == count_score)) {
		new str_win_dice[156];
		new itogs[3] = -1; itogs[0] = -1; itogs[1] = -1; itogs[2] = -1;

		for(new c = 0; c < 5; c++) {
			if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
			if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_score][c] > itogs[0]) itogs[0] = InfoDice[s][dice_score][c], itogs[1] = InfoDice[s][dice_gamer][c];
		}
		for(new c = 0; c < 5; c++) {
			if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
			if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_gamer][c] != itogs[1] && InfoDice[s][dice_score][c] == itogs[0]) itogs[2] = InfoDice[s][dice_gamer][c];
		}
		if(itogs[2] > -1) {
			for(new c = 0; c < 5; c++) {
				if(InfoDice[s][dice_gamer][c] == INVALID_PLAYER_ID) continue;
				if(InfoDice[s][dice_score][c] > 1 && InfoDice[s][dice_score][c] == itogs[0]) {
					InfoDice[s][dice_game_start_time] = gettime() + 30;
					SendClientMessage(InfoDice[s][dice_gamer][c],CGOLD,"Ви попали в наступний раунд. У вас є 30 секунд, щоб кинути кубики");
				}
				else Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] = 0;
				InfoDice[s][dice_score][c] = 0;
				SetTimerEx("score_update",2000,false,"i",s);
			}
		}
		else if(itogs[1] > -1) {
			new money = floatround(InfoDice[s][dice_bank]*0.0001);
			format(str_win_dice,sizeof(str_win_dice),"Гра завершена. Победитель: "W"%s "GREEN"(выпало: "W"%d)",player_name[itogs[1]],itogs[0]);
			GiveMoney(itogs[1],floatround(InfoDice[s][dice_bank] - money),"победа в казино");

			for(new c = 0; c < 5; c++) {
				if(InfoDice[s][dice_gamer][c]==INVALID_PLAYER_ID) continue;
				Casino_Flag[InfoDice[s][dice_gamer][c]][casino_bet_cash] = 0;
				InfoDice[s][dice_score][c] = 0;
				SendClientMessage(InfoDice[s][dice_gamer][c], COLOR_GREEN, str_win_dice);
			}
			if(IsPlayerConnected(InfoDice[s][dice_crup])) {
				SendClientMessage(InfoDice[s][dice_crup], COLOR_GREEN, str_win_dice);
				PlayerInfo[InfoDice[s][dice_crup]][pSalary] += money;
			}
			InfoDice[s][dice_bank] = 0;
			InfoDice[s][dice_stavka] = 0;
			SetTimerEx("score_update",2000,false,"d",s);
			InfoDice[s][dice_game_start] = false;
			KillTimer(InfoDice[s][dice_game_start_timer]);
			InfoDice[s][dice_game_start_timer] = -1;
			/*if(!IsPlayerInDynamicArea(ids, InfoDice[s][dice_area]) && !InfoDice[s][dice_game_start]) {
				ShowCasino_TD(ids, Casino_Flag[ids][select_casino_table]);
			}*/
		}
	}
	return 1;
}
CB: score_update(s) {
	UpdateTextCasino(s);
	UpdateScores(s);
	return true;
}
stock Load_PTD_Dice(playerid) {
	if(PTD_DiceStat[playerid]==PlayerText:-1) {
		PTD_DiceStat[playerid] = CreatePlayerTextDraw(playerid, 466.178741, 278.833099, "_~w~Bet:_~g~0$_~n~_~w~Bank:_~g~0$_~n~_~w~Your_cash:_~g~0$");
		PlayerTextDrawLetterSize(playerid, PTD_DiceStat[playerid], 0.270556, 1.500832);
		PlayerTextDrawTextSize(playerid, PTD_DiceStat[playerid], 603.924194, 35.000011);
		PlayerTextDrawAlignment(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawColor(playerid, PTD_DiceStat[playerid], -1);
		PlayerTextDrawUseBox(playerid, PTD_DiceStat[playerid], true);
		PlayerTextDrawBoxColor(playerid, PTD_DiceStat[playerid], 1149760170);
		PlayerTextDrawSetShadow(playerid, PTD_DiceStat[playerid], 0);
		PlayerTextDrawSetOutline(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid, PTD_DiceStat[playerid], 187);
		PlayerTextDrawFont(playerid, PTD_DiceStat[playerid], 1);
		PlayerTextDrawSetProportional(playerid, PTD_DiceStat[playerid], 1);
	}
	PlayerTextDrawShow(playerid,PTD_DiceStat[playerid]);
	return 1;
}
stock UpdateTableText(c) {
	new update_table_text[156];
	new mark[5][10];
	for(new i=0;i<5;i++) {
		if(InfoDice[c][dice_gamer][i]==INVALID_PLAYER_ID)strcat(mark[i],"_");
		else if(Casino_Flag[InfoDice[c][dice_gamer][i]][casino_bet_cash]!=0)strcat(mark[i],"+_");
	}
	format(update_table_text, 156, "%s%s~n~%s%s~n~%s%s~n~%s%s~n~%s%s",
	mark[0],(InfoDice[c][dice_gamer][0]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][0]]),
	mark[1],(InfoDice[c][dice_gamer][1]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][1]]),
	mark[2],(InfoDice[c][dice_gamer][2]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][2]]),
	mark[3],(InfoDice[c][dice_gamer][3]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][3]]),
	mark[4],(InfoDice[c][dice_gamer][4]==INVALID_PLAYER_ID)?("-"):(player_name[InfoDice[c][dice_gamer][4]]));
	TextDrawSetString(Casino_TD[Casino_TD_TableNicks][c],update_table_text);
	return 1;
}
stock UpdateScores(s) {
	new mark[5][2];
	for(new i=0;i<5;i++) {
		if(InfoDice[s][dice_score][i]<=3) strcat(mark[i],"r");
		else if(InfoDice[s][dice_score][i]>=4 && InfoDice[s][dice_score][i]<=6)strcat(mark[i],"w");
		else if(InfoDice[s][dice_score][i]>=7 && InfoDice[s][dice_score][i]<=9)strcat(mark[i],"y");
		else if(InfoDice[s][dice_score][i]>=10 && InfoDice[s][dice_score][i]<=12)strcat(mark[i],"G");
	}
	new string_set_score[64];
	format(string_set_score,64,"~%s~%d~n~~%s~%d~n~~%s~%d~n~~%s~%d~n~~%s~%d",mark[0],InfoDice[s][dice_score][0],mark[1],InfoDice[s][dice_score][1],mark[2],InfoDice[s][dice_score][2],mark[3],InfoDice[s][dice_score][3],mark[4],InfoDice[s][dice_score][4]);
	TextDrawSetString(Casino_TD[Casino_TD_TableScore][s],string_set_score);
	return 1;
}
stock UpdateTextCasino(c) {
	new update_string_casino_text[500];
	format(update_string_casino_text,500,CASINO_TEXT_STRING,
	c+1,(InfoDice[c][dice_crup] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_crup]]) : ("-"),(InfoDice[c][dice_gamer][0] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][0]]) : ("-"),(InfoDice[c][dice_gamer][1] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][1]]) : ("-"),
	(InfoDice[c][dice_gamer][2] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][2]]) : ("-"),(InfoDice[c][dice_gamer][3] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][3]]) : ("-"),
	(InfoDice[c][dice_gamer][4] != INVALID_PLAYER_ID) ? (player_name[InfoDice[c][dice_gamer][4]]) : ("-"),
	InfoDice[c][dice_stavka],InfoDice[c][dice_bank],(InfoDice[c][dice_game_start]) ? ("{37A65F}Игра начата") : ("{EB3F36}Игра не начата"));
	UpdateDynamic3DTextLabelText(InfoDice[c][dice_text], -1, update_string_casino_text);
	for(new p = 0; p < 5; p++) {
		if(InfoDice[c][dice_gamer][p]==INVALID_PLAYER_ID) continue;
		if(PTD_DiceStat[InfoDice[c][dice_gamer][p]] != PlayerText:-1 && Casino_Flag[InfoDice[c][dice_gamer][p]][show_casino_td] == 1) {
			new ptd_dice_string[80];
			format(ptd_dice_string,80,"_~w~Bet:_~g~%d$_~n~_~w~Bank:_~g~%d$_~n~_~w~Your_cash:_~g~%d$",InfoDice[c][dice_stavka],InfoDice[c][dice_bank],PlayerInfo[InfoDice[c][dice_gamer][p]][pCash]);
			PlayerTextDrawSetString(InfoDice[c][dice_gamer][p],PTD_DiceStat[InfoDice[c][dice_gamer][p]],ptd_dice_string);
		}
	}
	if(InfoDice[c][dice_crup] != INVALID_PLAYER_ID) {
		if(PTD_DiceStat[InfoDice[c][dice_crup]]!=PlayerText:-1 && Casino_Flag[InfoDice[c][dice_crup]][show_casino_td]==1) {
			new ptd_dice_string[80];
			format(ptd_dice_string,80,"_~w~Bet:_~g~%d$_~n~_~w~Bank:_~g~%d$_~n~_~w~Your_cash:_~g~%d$",InfoDice[c][dice_stavka],InfoDice[c][dice_bank],PlayerInfo[InfoDice[c][dice_crup]][pCash]);
			PlayerTextDrawSetString(InfoDice[c][dice_crup],PTD_DiceStat[InfoDice[c][dice_crup]],ptd_dice_string);
		}
	}
	UpdateTableText(c);
	UpdateScores(c);
	return 1;
}
stock ShowCasino_TD(playerid, select_table, bool:canceled = true) {
	if(Casino_Flag[playerid][show_casino_td] == 1) {
		if(Casino_Flag[playerid][casino_bet_cash] != 0 && !InfoDice[select_table][dice_game_start]) {
			GiveMoney(playerid,Casino_Flag[playerid][casino_bet_cash],"забрал ставку в казино");
			InfoDice[select_table][dice_bank] -= InfoDice[select_table][dice_stavka];
			Casino_Flag[playerid][casino_bet_cash] = 0;
		}
		if(InfoDice[select_table][dice_crup] == playerid) {
			InfoDice[select_table][dice_crup] = INVALID_PLAYER_ID;
		}
		else {
			for(new i = 0;i<5;i++) {
				if(InfoDice[select_table][dice_gamer][i] == playerid) {
					InfoDice[select_table][dice_score][i] = 0;
					InfoDice[select_table][dice_gamer][i] = INVALID_PLAYER_ID;
					break;
				}
			}
		}
		UpdateScores(select_table);
		UpdateTextCasino(select_table);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Box]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Set_Bet]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Dice]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Exit]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableNicks][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableScore][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_TableName][select_table]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Box]);
		TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Enum]);
		for(new i = 0; i < 5; i++) {
			if(i<2)TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Modeled][i]);
			TextDrawHideForPlayer(playerid,Casino_TD[Casino_TD_Lines][i]);
		}
		PlayerTextDrawHide(playerid,PTD_DiceStat[playerid]);
		if(canceled) CancelSelectTextDraw(playerid);
		Casino_Flag[playerid][show_casino_td] = 0;
		Casino_Flag[playerid][select_casino_table] = -1;
		return 1;
	}
	Load_PTD_Dice(playerid);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Box]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Set_Bet]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Dice]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Exit]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableNicks][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableScore][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_TableName][select_table]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Box]);
	TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Enum]);
	for(new i = 0; i < 5; i++) {
		if(i<2)TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Modeled][i]);
		TextDrawShowForPlayer(playerid,Casino_TD[Casino_TD_Lines][i]);
	}
	SelectTextDraw(playerid,0x9BF2EAAA);
	Casino_Flag[playerid][show_casino_td] = 1;
	return 1;
}
CB: HorseAnimTimer() {
	new bool:playing = false;
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPVarInt(i,"Watching") == 1) {
	        playing = true;
	        break;
		}
	}
	new string[80], HorseWon;
	for(new po = 0;po < 4;po++) {
	    HorsePosX[po] = HorsePosX[po] + (random(600) / 100);
		if(HorsePosX[po] >= 560) {
			HorseStop = 1;
			HorseWon = po+1;
		}
	}
 	if(playing == true) {
		if(HorseAnimCount == 9) HorseAnimCount = 1;
		for(new po = 0;po < 4;po++) {
		    HorsePosX[po] = HorsePosX[po] + (random(600) / 100);
			TextDrawDestroy(Horse[po]);
		   	TextDrawDestroy(HorseNum[po]);
		   	format(string, sizeof(string), "LD_OTB:hrs%i", HorseAnimCount);
	 		Horse[po] = TextDrawCreate(HorsePosX[po], 200+50*po, string);
	    	HorseInfo(Horse[po]);
	    	format(string,30,"LD_OTB2:Ric%d",po+1);
	    	HorseNum[po] = TextDrawCreate(HorsePosX[po] + 15, 204+50*po, string);
	    	HorseNumInfo(HorseNum[po]);
		}
		HorseAnimCount++;
	 	foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(GetPVarInt(i,"Watching") == 1)  {
		        //SetPlayerCameraPos(playerid, -331.6986, 1925.2861, 105.6225);
		        for(new po = 0;po < 4;po++) {
				   	TextDrawShowForPlayer(i,Horse[po]);
				   	TextDrawShowForPlayer(i,HorseNum[po]);
				}
		    }
		}
	}
	if(HorseStop == 0) SetTimer("HorseAnimTimer", 100, 0);
	else {
	    if(HorseWon != 0)  {
			HorseStop = 1;
			RaceStarted = 0;
	  		UpdateDynamic3DTextLabelText(Horses3D, 0xFFFFFFFF,"Информационный экран по лошадиным скачкам\nСтатус: {FF0000}Подготовка{ffffff}\nНажміть: `H`");
			format(string,30,"Лошадь №%d победила!",HorseWon);
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		 	    TextDrawHideForPlayer(i,BG[1]);
			    TextDrawHideForPlayer(i,BG[0]);
			    TextDrawHideForPlayer(i,Start2);
			    TextDrawHideForPlayer(i,Finish2);
			    TextDrawHideForPlayer(i,Horse[0]);
			    TextDrawHideForPlayer(i,HorseNum[0]);
				TextDrawHideForPlayer(i,Horse[1]);
			    TextDrawHideForPlayer(i,HorseNum[1]);
				TextDrawHideForPlayer(i,Horse[2]);
			    TextDrawHideForPlayer(i,HorseNum[2]);
				TextDrawHideForPlayer(i,Horse[3]);
			    TextDrawHideForPlayer(i,HorseNum[3]);
				TextDrawHideForPlayer(i,Start);
			    TextDrawHideForPlayer(i,Finish);
				if(IsPlayerInRangeOfPoint(i,10,828.2830,6.6600,1004.1870)) SendClientMessage(i,COLOR_LIGHTGREEN, string);
				if(GetPVarInt(i,"MoneyBet") > 0) {
					if(GetPVarInt(i,"BetOnHorse") == HorseWon) {
						SendClientMessage(i, COLOR_GREEN, "Ваша ставка выиграла! Ваш приз увеличен в 2 раза!");
						PlayerPlaySound(i, 31205, 0.0, 0.0, 0.0);
						//GivePlayerCash(i, GetPVarInt(i,"MoneyBet") * 2,"Ставка");
					}
					else SendClientMessage(i, COLOR_LIGHTRED, "Ваша ставка проиграла!");
				}
				if(GetPVarInt(i,"Watching") == 1)TogglePlayerControllable(i, 1),SetCameraBehindPlayer(i);
		  		SetPVarInt(i,"Watching",0);
				SetPVarInt(i,"BetOnHorse",0);
				SetPVarInt(i,"MoneyBet",0);
			}
			for(new po = 0;po < 4;po++) {
		    	Horse[po] = TextDrawCreate(0, 200+50*po, "LD_OTB:hrs8");
				HorseInfo(Horse[po]);
				HorsePosX[po] = 0;
				format(string,30,"LD_OTB2:Ric%d",po+1);
				HorseNum[po] = TextDrawCreate(15, 204+50*po,string);
		    	HorseNumInfo(HorseNum[po]);
			}
		}
	}
}
CB: HorseStartTimer() {
	new string[15];
	format(string, sizeof(string), "~r~%d",HorseCD);
	if(HorseCD > 0) HorseCD--,SetTimer("HorseStartTimer", 2000, 0);
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(GetPVarInt(i,"Watching") == 1) {
		    if(HorseCD > 0) GameTextForPlayer(i,string, 1000, 3);
		    else GameTextForPlayer(i,"~y~GO GO GO!", 1000, 3),SetPlayerCameraPos(i, -331.6986, 1925.2861, 105.6225), SetPlayerCameraLookAt(i, 318.7538, -1998.8700, 17.8250, 1);
		}
	}
	if(HorseCD <= 0) SetTimer("HorseAnimTimer", 100, 0);
	return 1;
}
stock HorseInfo(Text:horseid) {
    TextDrawFont(horseid, 4);
    TextDrawColor(horseid,0xFFFFFFFF);
    TextDrawTextSize(horseid,64,64);
}
stock HorseNumInfo(Text:horsenumid) {
    TextDrawFont(horsenumid, 4);
    TextDrawColor(horsenumid,0xFFFFFFFF);
    TextDrawTextSize(horsenumid,32,32);
}
CB: ClearAnim(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial",4.0,0,0,0,0,0,1);
CB: DiceOff(id) {
	ClearAnims(id);
	if(TI[id][tKubik] == 1) {
		TI[id][tKubik] = 0;
		if(IsPlayerAttachedObjectSlotUsed(id,1)) RemovePlayerAttachedObject(id,1);// забрали кубик
	}
}
stock IsTextInvalid(const text[]) {
	if(strfind(text, "none", true) != -1) return 1; 
	if(strfind(text, "None", true) != -1) return 1; 
	if(strfind(text, "NONE", true) != -1) return 1; 
	if(strfind(text, "'", true) != -1) return 1; 
	if(strfind(text, "/", true) != -1) return 1; 
	if(strfind(text, "%", true) != -1) return 1; 
	if(strfind(text, ".", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "@", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, "`", true) != -1) return 1;
	if(strfind(text, ",", true) != -1) return 1;
	return 0;
}
stock IsARPName(const Name[]) {
	new simb_, RP_Name[2][24];
	new playerid;
	for(new i = 0;i < strlen(Name);i ++) {
		if(Name[i] == '_') simb_ ++;
	}
	if(simb_ != 1) return false;
	sscanf(Name,"p<_>s[24]s[24]",RP_Name[0],RP_Name[1]);
	if(!IsAGoodName(RP_Name[0]) || !IsAGoodName(RP_Name[1])) return false;
	if(IsPlayerNPC(playerid)) return true;
	return true;
}
stock IsAGoodName(const Name[]) {
	new playerid;
	new NameChars;
	if(IsPlayerNPC(playerid))return 1;
	if(strlen(Name) < 2) return false;
	if(Name[0] < 'A' || Name[0] > 'Z') return false;
	for(new i = 1;i < strlen(Name);i ++) {
		if(Name[i] < 'a' || Name[i] > 'z') {
			if(Name[i] >= 'A' && Name[i] <= 'Z') NameChars ++;
			else return false;
		}
		if(NameChars > 1) return false;
	}
	return true;
}
CB: CallChangeName(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		ErrorMessage(playerid, "Цей никнейм занят");
		DeletePVar(playerid,"WantNickChange");
		return 1;
	}

	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(playerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	new string[156];
	format(string,sizeof(string),"[A] %s[%d] подав заявку на зміну ніка. Бажаємий нік: %s",player_name[playerid],playerid,playerName);
	AdmMSG(COLOR_YELLOW,string,3);
	AdmMSG(COLOR_YELLOW,"Щоб змінити йому нік Використовуйте /setnick",3);
	SendOk(playerid, "Заявка на зміну ніка відправлена адміністрації");
	return 1;
}
CB: GrandChangeName(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		SetPVarInt(playerid,"grand_fix",true);
		ChangeName(playerid);
	}
	else ErrorMessage(playerid, "Цей никнейм занят");
	return 1;
}
CB: GrandChangeName2(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) {
		SetPVarInt(playerid,"grand_fix2",true);
		ChangeName(playerid);
	}
	else ErrorMessage(playerid, "Цей никнейм занят");
	return 1;
}

stock ChangeName(playerid) {
	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(playerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	if(GetPlayerID(playerName) != INVALID_PLAYER_ID) {
		return ErrorMessage(playerid,"У вас присутствуют запрещенные символы в никнейме");
	}

	new query[350];
	format(query,sizeof(query), "UPDATE `accounts` SET `Name` = '%s' WHERE `pID` = '%d' LIMIT 1",playerName,PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `accounts` SET `pDrug` = '%s' WHERE BINARY `pDrug` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `cars` SET `owner` = '%s' WHERE BINARY `owner` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	if(score_number[playerid] > 0) {
		format(query,sizeof(query), "UPDATE `bank` SET `owner` = '%s' WHERE BINARY `owner` = '%s'",playerName,player_name[playerid]);
		mysql_tquery(connects, query, "", "");
	}
	format(query,sizeof(query), "UPDATE `unitpay_payments` SET `account` = '%s' WHERE BINARY `account` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	if(PlayerInfo[playerid][pFamily] > 0) {
		if(!strcmp(gFamily[PlayerInfo[playerid][pFamily]-1][famOwner],player_name[playerid])){
			strmid(gFamily[PlayerInfo[playerid][pFamily]-1][famOwner],playerName,0,strlen(playerName),MAX_PLAYER_NAME);
			query = "";
			format(query,sizeof(query), "UPDATE `family` SET `owner` = '%s' WHERE `ID` = '%d' LIMIT 1",playerName,gFamily[PlayerInfo[playerid][pFamily]-1][famID]);
			mysql_tquery(connects, query, "", "");
		}
		if(!strcmp(gFamily[PlayerInfo[playerid][pFamily]-1][famCOwner],player_name[playerid])){
			strmid(gFamily[PlayerInfo[playerid][pFamily]-1][famCOwner],playerName,0,strlen(playerName),MAX_PLAYER_NAME);
			query = "";
			format(query,sizeof(query), "UPDATE `family` SET `cowner` = '%s' WHERE `ID` = '%d' LIMIT 1",playerName,gFamily[PlayerInfo[playerid][pFamily]-1][famID]);
			mysql_tquery(connects, query, "", "");
		}
	}
	if(PlayerInfo[playerid][pBusiness] > 0) {
		format(query,128,"UPDATE `business` SET `owner` = '%s' WHERE `id` = '%d'",playerName,PlayerInfo[playerid][pBusiness]);
		mysql_tquery(connects, query,"","");
		SetString(gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzOwner],playerName);
		UpdateBusinessText(PlayerInfo[playerid][pBusiness]-1);
	}
	if(PlayerInfo[playerid][pAirport] > 0) {
		format(query,128,"UPDATE `airports` SET `owner` = '%s' WHERE `id` = '%d'",playerName,PlayerInfo[playerid][pAirport]);
		mysql_tquery(connects, query,"","");
		SetString(gAirs[PlayerInfo[playerid][pAirport]-1][airOwner],playerName);
		UpdateAirportsText(PlayerInfo[playerid][pAirport]-1);
	}
	if(PlayerInfo[playerid][pHotel] > 0) {
		format(query,128,"UPDATE `hotels` SET `owner` = '%s' WHERE `id` = '%d'",playerName,PlayerInfo[playerid][pHotel]);
		mysql_tquery(connects, query,"","");
		SetString(gHotels[PlayerInfo[playerid][pHotel]-1][hotelOwner],playerName);
		UpdateHotelText(PlayerInfo[playerid][pHotel]-1);
	}
	if(PlayerInfo[playerid][pHouse] > 0) {
		strmid(gHouses[PlayerInfo[playerid][pHouse]-1][houseOwner], playerName, 0, strlen(playerName), MAX_PLAYER_NAME);
		SaveHome(PlayerInfo[playerid][pHouse]-1);
	}
	if(PlayerInfo[playerid][pRoom] > 0) {
		SetString(gRooms[PlayerInfo[playerid][pRoom]-1][roomsOwner], playerName);
		query = "";
		format(query,sizeof(query),"UPDATE `rooms` SET `owner` = '%s' WHERE `id` = '%d'",gRooms[PlayerInfo[playerid][pRoom]-1][roomsOwner],PlayerInfo[playerid][pRoom]);
		mysql_tquery(connects, query);
	}
	format(query, sizeof(query), "INSERT INTO `nickname_history` (`nh_owner`,`nh_oldname`,`nh_newname`,`nh_date`) VALUES ('%d','%s','%s',NOW())", 
	PlayerInfo[playerid][pID], player_name[playerid],playerName);
	mysql_tquery(connects, query);

	format(query,sizeof(query), "UPDATE `adminlog` SET `NamePlayer` = '%s' WHERE BINARY `NamePlayer` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `givecash` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `fraclog` SET `Name` = '%s' WHERE BINARY `Name` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	format(query,sizeof(query), "UPDATE `fraclog` SET `NameP` = '%s' WHERE BINARY `NameP` = '%s'",playerName,player_name[playerid]);
	mysql_tquery(connects, query, "", "");

	new string[128];
	format(string,sizeof(string), "%s изменил(а) имя на %s",player_name[playerid],playerName);
	SendClientMessageToAll(COLOR_YELLOW, string);
	SetPVarInt(playerid,"changename_fix",true);
	SetPlayerName(playerid, playerName);
	strmid(player_name[playerid], playerName, 0, strlen(playerName), 31);
	SendClientMessage(playerid,COLOR_YELLOW,"Пропишите новый ник в окне SA-MP");
	if(GetPVarInt(playerid,"grand_fix")) {
		PlayerInfo[playerid][pRouble] -= 20;
		UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
		DeletePVar(playerid,"grand_fix");
	}
	if(GetPVarInt(playerid,"grand_fix2")) {
		PlayerInfo[playerid][pVipName] = unix + 86400*vip_status[PlayerInfo[playerid][pVips]][vip_changename];
		UpdatePlayerData(playerid,"pVipName",PlayerInfo[playerid][pVipName]);
		DeletePVar(playerid,"grand_fix2");
	}
	DeletePVar(playerid,"WantNickChange");
	return 1;
}
stock creare_funccar(bizz,slot) {
	switch(bizz) {
		case 2..4: {
			FuncBizz[bizz][funcbCars][slot] = CreateBizVehicle(bizz,FuncBizz[bizz][funcbCar][slot],car_bizz[FuncBizz[bizz][funcbSlot]][slot][0],car_bizz[FuncBizz[bizz][funcbSlot]][slot][1],car_bizz[FuncBizz[bizz][funcbSlot]][slot][2],car_bizz[FuncBizz[bizz][funcbSlot]][slot][3],color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car], RES_CAR_TIME);
			add_taxitext(bizz,slot);
		}
		case 5..7: {
			FuncBizz[bizz][funcbCars][slot] = CreateBizVehicle(bizz,FuncBizz[bizz][funcbCar][slot],car_bizz[FuncBizz[bizz][funcbSlot]][slot][0],car_bizz[FuncBizz[bizz][funcbSlot]][slot][1],car_bizz[FuncBizz[bizz][funcbSlot]][slot][2],car_bizz[FuncBizz[bizz][funcbSlot]][slot][3],color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car], RES_CAR_TIME);
		}
	}
	FuncBizz[bizz][funcbCarID][slot] = -1;
	VehicleInfo[FuncBizz[bizz][funcbCars][slot]][vFuel] = gTransport[GetVehicleModel(FuncBizz[bizz][funcbCars][slot])-400][trTank];
	SetVehicleParamsEx(FuncBizz[bizz][funcbCars][slot],false,false,false,false,false,false,false);
	return 1;
}
stock update_bfunc(list,bizz,color = -1,slot = -1) {
	switch(list) {
		case 0: {
			for(new i; i < 20; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) continue;
				if(FuncBizz[bizz][funcbCarID][i] == -1) {
					SetDynamicObjectMaterial(tuningtaxi_shash[FuncBizz[bizz][funcbSlot]][i], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[color][col_shash]);
				}
			}
		}
		case 1: {
			new string[54];
			format(string,sizeof(string),"{%s}%s",color_td[FuncBizz[bizz][funcbColor]][col_rgb],FuncBizz[bizz][funcbName]);
			SetDynamicObjectMaterialText(biz_text[FuncBizz[bizz][funcbSlot]], 0, string, 130, "Segoe Script", 50, 1, 0xFF000000, 0x00000000, 1);
			UpdateBusinessText(bizz-1);
			for(new i; i < 20; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) continue;
				VehicleInfo[FuncBizz[bizz][funcbCars]][vColor] = color_td[FuncBizz[bizz][funcbColor]][col_car];
				if(FuncBizz[bizz][funcbCarID][i] == -1) {
					ChangeVehicleColor(FuncBizz[bizz][funcbCars][i],color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car]);
				}
			}
		}
		case 2: {
			for(new i; i < 20; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) continue;
				new string[13];
				format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
				SetDynamicObjectMaterialText(tuningtaxi_text[FuncBizz[bizz][funcbSlot]][i], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
				SetDynamicObjectMaterialText(tuningtaxi_text_1[FuncBizz[bizz][funcbSlot]][i], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			}
		}
		case 3: {
			if(gBusiness[bizz-1][bizzType] == 11) {
				DestroyDynamicObject(tuningtaxi[FuncBizz[bizz][funcbSlot]][slot]);
				DestroyDynamicObject(tuningtaxi_1[FuncBizz[bizz][funcbSlot]][slot]);
				DestroyDynamicObject(tuningtaxi_shash[FuncBizz[bizz][funcbSlot]][slot]);
				DestroyDynamicObject(tuningtaxi_text[FuncBizz[bizz][funcbSlot]][slot]);
				DestroyDynamicObject(tuningtaxi_text_1[FuncBizz[bizz][funcbSlot]][slot]);
				add_taxitext(bizz,slot);
			}
			ChangeVehicleColor(FuncBizz[bizz][funcbCars][slot],color_td[FuncBizz[bizz][funcbColor]][col_car],color_td[FuncBizz[bizz][funcbColor]][col_car]);
			FuncBizz[bizz][funcbCarID][slot] = -1;
		}
	}
}
stock cancel_selectcolor(playerid) {
	for(new h = 0;h < 22;h++) {
		TextDrawHideForPlayer(playerid,func_bcolor[h]);
		CancelSelectTextDraw(playerid);
		DeletePVar(playerid,"select_colortd");
		DeletePVar(playerid,"color_shashka");
		DeletePVar(playerid,"color_allcolor");
		DeletePVar(playerid,"SelectButton");
	}
}
CB: sim_bizz(playerid, number){
	new rows;
	cache_get_row_count(rows);
	if(rows) return ErrorMessage(playerid,"Цей номер уже используется");
	else {
		switch(number) {
			case 1111,2222,3333,4444,5555,6666,7777,8888: {
				if(gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzBank] < 300000) return ErrorMessage(playerid,"На рахунку Вашого бізнеса недостаточно коштів");
				gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzBank] -= 300000;
			}
			default: {
				if(gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzBank] < 50000) return ErrorMessage(playerid,"На рахунку Вашого бізнеса недостаточно коштів");
				gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzBank] -= 50000;
			}
		}
		UpdateBusinessData(PlayerInfo[playerid][pBusiness],"bank",gBusiness[PlayerInfo[playerid][pBusiness]-1][bizzBank]);
		FuncBizz[PlayerInfo[playerid][pBusiness]][funcbNum] = number;
		UpdateFuncBizzData(PlayerInfo[playerid][pBusiness],"number",FuncBizz[PlayerInfo[playerid][pBusiness]][funcbNum]);
		new string[128];
		format(string,sizeof(string),"Ви приобрели номер телефона "YELLOW"%d{f6f6d9} для Вашого таксопарка",number);
		SendOk(playerid,string);
		new str[76];
		format(str,sizeof(str),"[TAXI] Новый номер Вашого таксопарка: %d",number);
		BizzMSG(PlayerInfo[playerid][pBusiness],COLOR_YELLOW,str);
	}
	return true;
}
CB: members_funcbizz(playerid,bizz) {
	new names[24],last[30],cash,status,string[3600],str[128],rows;
	new query[128];
	format(query, sizeof(query), "SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Список сотрудников пуст");
	strcat(string,"№. Имя\tДоступ\tДоход в кассу\tПоследний вход\n");
	for(new i; i < rows; i ++) {
		cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
		cache_get_value_name(i, "pOnline",last,30);
		cache_get_value_name_int(i, "bizz_cash",cash);
		cache_get_value_name_int(i, "bizz_status",status);
		new id = GetPlayerID(names);
		if(IsPlayerConnected(id)) {
			format(str, sizeof(str), ""YELLOW"%d. "W"%s\t%s\t%d\tОнлайн\n", i+1, names,taxi_class[status-1],PlayerInfo[id][bizz_cash]),strcat(string,str);
		}
		else format(str, sizeof(str), ""YELLOW"%d. "W"%s\t%s\t%d\t%s\n", i+1, names,taxi_class[status-1],cash,last),strcat(string,str);
	}
	cache_delete(result);
	D(playerid,D_BIZZ_TAXI_MEM,DSTH,"Сотрудники таксопарка",string,"Далі","Закрити");
	return 1;
}
stock sell_bizztaxi(bizz) {
	new query[128],querydel[174],names[25],rows;
	format(query, sizeof(query), "SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
			new id = GetPlayerID(names);
			if(IsPlayerConnected(id)) {
				if(GetPlayerState(id) == PLAYER_STATE_DRIVER && VehicleInfo[GetPlayerVehicleID(id)][vBizz] == PlayerInfo[id][bizz_work]) RemovePlayerFromVehicleAC(id);
				PlayerInfo[id][bizz_work] = 0;
				PlayerInfo[id][bizz_status] = 0;
			}
			format(querydel,sizeof(querydel),"UPDATE `accounts` SET `bizz_work` = '0',`bizz_status` = '0' WHERE `Name` = '%s'",names);
			mysql_tquery(connects, querydel, "", "");
		}
	}
	cache_delete(result);
	SetString(FuncBizz[bizz][funcbName],"---");
	SetString(FuncBizz[bizz][funcbNameCar],"---");
	new querys[156];
	format(querys,sizeof(querys),"UPDATE `business_func` SET `name` = '---',`name_car` = '---',`members` = '0' WHERE `bizzID` = '%i'",bizz);
	mysql_tquery(connects, querys, "", "");
	new string[54];
	format(string,sizeof(string),"{%s}%s",color_td[FuncBizz[FuncBizz[bizz][funcbID]][funcbColor]][col_rgb],FuncBizz[FuncBizz[bizz][funcbID]][funcbName]);
	SetDynamicObjectMaterialText(biz_text[FuncBizz[FuncBizz[bizz][funcbID]][funcbSlot]], 0, string, 130, "Segoe Script", 50, 1, 0xFF000000, 0x00000000, 1);
	UpdateBusinessText(bizz);
}
stock add_taxitext(bizz,slot) {
	new id = FuncBizz[bizz][funcbSlot];
	switch(FuncBizz[bizz][funcbCar][slot]) {
		case 426: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.450, 0.930, 0.000, 0.000, 0.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.434, 0.711, 360.000, -54.999, 90.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.681, 0.557, -360.000, -54.999, -90.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.070, -0.450, 0.950, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.070, -0.450, 0.950, 360.000, 360.000, 180.000);
		}
		case 438: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.030, 0.880, 0.000, 0.000, 90.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.109, 0.850, 0.000, 0.000, 90.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.050, 0.850, 0.000, 0.000, -90.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], -0.005, -1.531, 0.430, 0.000, -31.600, 270.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 1.087, 0.570, 0.000, -28.700, 90.000);
		}
		case 483: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 1.551, 1.130, 0.000, 0.000, 0.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.090, 1.551, 1.110, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.090, 1.551, 1.110, 0.000, 0.000, 180.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], -0.920, -1.331, 0.000, 0.000, 0.000, 180.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.920, -1.661, 0.000, 0.000, 0.000, 0.000);
		}
		case 540: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.630, 0.810, 0.000, 0.000, 0.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.506, 0.548, 360.000, -56.500, 90.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.847, 0.438, -360.000, -56.500, -90.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.090, -0.650, 0.800, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.080, -0.640, 0.800, 0.000, 0.000, 180.000);
		}
		case 560: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.230, 0.900, 0.000, 0.000, 0.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.080, -0.250, 0.900, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.080, -0.250, 0.900, 0.000, 0.000, 180.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.685, 0.648, 0.000, -49.599, 90.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.274, 0.618, 0.000, -51.499, -90.000);
		}
		case 550: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -0.430, 0.800, 0.000, 0.000, 0.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.080, -0.440, 0.800, 0.000, 0.000, 0.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], -0.080, -0.440, 0.800, 0.000, 0.000, 180.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.595, 0.441, 0.000, -48.399, 270.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.557, 0.569, 0.000, -53.999, 90.000);
		}
		case 580: {
			new string[13];
			format(string,sizeof(string),"%s",FuncBizz[bizz][funcbNameCar]);
			tuningtaxi_shash[id][slot] = CreateDynamicObject(19308,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_shash[id][slot], 0, 10101, "2notherbuildsfe", "ferry_build14", color_td[FuncBizz[bizz][funcbShash]][col_shash]);
			AttachDynamicObjectToVehicle(tuningtaxi_shash[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.350, 1.130, 0.000, 0.000, 90.000);
			tuningtaxi[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.450, 1.130, 0.000, 0.000, 90.000);
			tuningtaxi_1[id][slot] = CreateDynamicObject(19476,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_1[id][slot], 0, "TAXI", 100, "Ariel", 90, 1, -16777216, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.250, 1.130, 0.000, 0.000, -90.000);
			tuningtaxi_text[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text[id][slot], 0, string, 100, "Ariel", 20, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, 0.710, 0.870, 0.000, -30.100, 90.000);
			tuningtaxi_text_1[id][slot] = CreateDynamicObject(19477,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0);
			SetDynamicObjectMaterial(tuningtaxi_text_1[id][slot], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0);
			SetDynamicObjectMaterialText(tuningtaxi_text_1[id][slot], 0, string, 100, "Ariel", 25, 1, -984833, 0, 1);
			AttachDynamicObjectToVehicle(tuningtaxi_text_1[id][slot], FuncBizz[bizz][funcbCars][slot], 0.000, -1.685, 0.764, 0.000, -30.100, -90.000);
		}
	}
}
stock showstattaxi(playerid,bizz) {
	new id = 0;
	for(new i; i < 20; i ++) {
		if(FuncBizz[bizz][funcbCar][i] == 0) continue;
		id++;
	}
	static const f_str[] = "\n\n"ORANGE"Назва:\t\t"W"%s\n\
"ORANGE"Власник:\t\t"W"%s\n\
"ORANGE"Гос. ціна\t\t"W"%d\n\n\n\
"ORANGE"Номер телефона:\t"W"%d\n\
"ORANGE"Процент стягуваний із таксистів: "W"%d%\n\
"ORANGE"Тарифи:\n\
\t"W"Економ:\t\t"GREEN"$%d\n\
\t"W"Комфорт:\t\t"GREEN"$%d\n\
\t"W"Мікроавтобус:\t"GREEN"$%d\n\
\t"W"Бізнес:\t\t"GREEN"$%d\n\n\
"ORANGE"Співробітників:\t\t\t"W"%d\n\
"ORANGE"Автомобілів:\t\t"W"%d";
	new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 8) + (-2 + 5) + (-2 + 4) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 4) + (-2 + 4)];
	format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz-1][bizzOwner],gBusiness[bizz-1][bizzSellPrice],
	FuncBizz[bizz][funcbNum],FuncBizz[bizz][funcbPercent],FuncBizz[bizz][funcbTarif][0],FuncBizz[bizz][funcbTarif][1],
	FuncBizz[bizz][funcbTarif][2],FuncBizz[bizz][funcbTarif][3],info_funcmembers(bizz),id);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Таксопарк",string,"Закрити","");
}
stock showstattk(playerid,bizz) {
	new id = 0;
	for(new i; i < 16; i ++) {
		if(FuncBizz[bizz][funcbCar][i] == 0) continue;
		id++;
	}
	static const f_str[] = "\n\n"ORANGE"Назва:\t\t"W"%s\n\
"ORANGE"Власник:\t\t"W"%s\n\
"ORANGE"Гос. ціна\t\t"W"%d\n\n\n\
"ORANGE"Процент стягуваний із дальнобойщиков:\t"W"%d%\n\
"ORANGE"Співробітників:\t\t\t\t"W"%d\n\
"ORANGE"Групових автомобілів:\t\t"W"%d";
	new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 8) + (-2 + 5) + (-2 + 4) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 6) + (-2 + 4) + (-2 + 4)];
	format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz-1][bizzOwner],gBusiness[bizz-1][bizzSellPrice],
	FuncBizz[bizz][funcbPercent],info_funcmembers(bizz),id);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Транспортна компанія",string,"Закрити","");
}
bizz_update(bizz) {
	new query[170], year, month, day;
	getdate(year, month, day);
	format(query, sizeof(query), "INSERT INTO `business_stats`(`bizz`, `day`, `month`, `year`, `money`) VALUES ('%d','%d','%d','%d','%d')", bizz, day,month,year, gBusiness[bizz][bizzBankDay]);
	mysql_tquery(connects, query, "", "");
	gBusiness[bizz][bizzBankDay] = 0;
	gBusiness[bizz][bizzVisitors] = 0;
	SaveBusiness(bizz);
}
CB: bizz_stats(playerid,bizz) {
    new rows;
 	cache_get_row_count(rows);
	new string[800];
	new day,month,year, str[124], money,allmoney;
	static const months[12][12] = {"січень","лютий","березень","квітень","травень","червень","липень","серпень","вересень","жовтень","листопад","грудень"};
	static const f_str[] = ""ORANGE"Статистика доходів за останні 10 днів:\n"W"Налогообложення: "YELLOW"%d%%\n\n";
	format(str,sizeof(str),f_str,Nalog[3]),strcat(string, str);
    if(!rows) {
		new years, monthss, days;
		getdate(years, monthss, days);
		format(str,sizeof(str),""W"%d %s %d\t\t"GREEN"$%d\n",days,months[monthss-1],years,gBusiness[bizz][bizzBankDay]), strcat(string,str);
		allmoney += gBusiness[bizz][bizzBankDay];
		format(str,sizeof(str),"\n"W"Всего\t\t\t\t"GREEN"$%d",allmoney), strcat(string,str);
		D(playerid,DIALOG_NONE,DSM, ""YELLOW"Доходи", string, "Закрити","");
		return 1;
	}
	if(rows > 9) {
	    new query[264];
		mysql_format(connects, query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%d' LIMIT %d,%d", bizz, rows-9, rows);
		mysql_tquery(connects, query, "bizz_stats", "dd", playerid,bizz);
		return 1;
	}
	new years, monthss, days;
	getdate(years, monthss, days);
	for(new i; i < rows; i++) {
		cache_get_value_name_int(i, "day", day);
		cache_get_value_name_int(i, "month", month);
		cache_get_value_name_int(i, "year", year);
		cache_get_value_name_int(i, "money", money);
		allmoney += money;
		format(str,sizeof(str),""W"%d %s %d\t\t"GREEN"$%d\n",day,months[month-1],year,money), strcat(string,str);
	}
	format(str,sizeof(str),""W"%d %s %d\t\t"GREEN"$%d\n",days,months[monthss-1],years,gBusiness[bizz][bizzBankDay]), strcat(string,str);
	allmoney += gBusiness[bizz][bizzBankDay];
	format(str,sizeof(str),"\n"W"Всего\t\t\t"GREEN"$%d",allmoney), strcat(string,str);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Доходы", string, "Закрити","");
	return 1;
}
stock dialog_taxi(playerid,bizz,listitem) {
	switch(listitem) {
		case 0: {
			new day;
			day = (gBusiness[bizz-1][bizzDay]-gettime())/86400;
			static const f_str[] = ""W"Назва:\t\t"YELLOW"%s\n\
"W"Власник:\t\t"YELLOW"%s\n\
"W"Количество днів:\t"YELLOW"%d\n\
"W"Гос. ціна\t\t"YELLOW"%d\n\
"W"Касса:\t\t\t"YELLOW"$%d\n\
"W"Оплата:\t\t"YELLOW"$%d/день\n\
"W"Налогообложение:\t"YELLOW"%d%";
			new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 3) + (-2 + 3) + (-2 + 8) + (-2 + 8) + (-2 + 8) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz-1][bizzOwner],day,gBusiness[bizz-1][bizzSellPrice],gBusiness[bizz-1][bizzBank],floatround(gBusiness[bizz-1][bizzSellPrice]*bizz_rent/2),Nalog[3]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Таксопарк",string,"Закрити","");
		}
		case 1: {
			static const f_str[] = ""W"Стан рахунку: "GREEN"$%d\n"YELLOW"1."W" Зняти гроші\n"YELLOW"2."W" Покласти гроші";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[PlayerInfo[playerid][pBusiness] - 1][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""YELLOW"Керування касою",string,"Далі","Назад");
		}
		case 2: {
			new string[1512],str[128];
			strcat(string,"№\tАвтомобіль\tИспользуется сотрудником\n");
			for(new i; i < 20; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) format(str, sizeof(str), "%d\t-\t-\n", i+1),strcat(string,str);
				else if(FuncBizz[bizz][funcbCarID][i] == -1) format(str, sizeof(str), "%d\t%s\t-\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName]),strcat(string,str);
				else format(str, sizeof(str), "%d\t%s\t%s\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName],player_name[FuncBizz[bizz][funcbCarID][i]]),strcat(string,str);
			}
			SetPVarInt(playerid,"func_car_taxi",listitem-1);
			D(playerid, D_BIZZ_TAXI_CAR, DSTH, "Таксопарк", string, "Вибрати", "Відміна");
		}
		case 3: {
			load_color(playerid);
			SetPVarInt(playerid,"color_allcolor",1);
		}
		case 4: {
			load_color(playerid);
			SetPVarInt(playerid,"color_shashka",1);
		}
		case 5: {
			D(playerid,D_BIZZ_TAXI_NAME,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть нову назву таксопарка:\n\n\
Мінімальна кількість символів: "YELLOW"3\n\
"W"Максимальна кількість символів: "YELLOW"20","Змінити","Відміна");
		}
		case 6: {
			D(playerid,D_BIZZ_TAXI_NAMECAR,DSI, ""YELLOW"Назва таксі","\n\n"W"Введіть нову назву на автомобілях:\n\n\
Мінімальна кількість символів: "YELLOW"3\n\
"W"Максимальна кількість символів: "YELLOW"12","Змінити","Відміна");
		}
		case 7: {
			static const f_str[] = "№. Класс\tТариф\n"YELLOW"1. "W"Эконом\t"GREEN"$%d\n\
"YELLOW"2. "W"Комфорт\t"GREEN"$%d\n\
"YELLOW"3. "W"Микроавтобус\t"GREEN"$%d\n\
"YELLOW"4. "W"Бізнес\t"GREEN"$%d";
			new string[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,FuncBizz[bizz][funcbTarif][0],FuncBizz[bizz][funcbTarif][1],FuncBizz[bizz][funcbTarif][2],FuncBizz[bizz][funcbTarif][3]);
			D(playerid, D_BIZZ_TAXI_TARIF, DSTH, "Тарифы", string, "Змінити", "Відміна");
		}
		case 8: {
			D(playerid,D_BIZZ_TAXI_PERCENT,DSI, ""YELLOW"Процент от прибыли","\n\n"W"Введіть процент взымаемый от прибыли таксистів Вашого таксопарка\n\n\
Доступный диапазон: от "YELLOW"1% "W"до "YELLOW"50%","Змінити","Відміна");
		}
		case 9: {
			static const f_str[] = "\n\n"W"Текущий номер Вашого таксопарка: "YELLOW"%d\n\n\
"W"Введіть желаемый новый номер телефона для Вашого таксопарка\n\
Доступный диапазон: от "YELLOW"1000"W" до "YELLOW"9900\n\
"W"Вартість номера: "GREEN"$50000\n\
"W"Вартість номера с 4 одинаоквыми числами: "GREEN"$300000\n\n";
			new string[sizeof(f_str) +1 + (-2 + 5)];
			format(string,sizeof(string),f_str,FuncBizz[PlayerInfo[playerid][pBusiness]][funcbNum]);
			D(playerid,D_BIZZ_TAXI_PHONE,DSI, ""YELLOW"Купівля номера телефону",string,"Купити","Відміна");
		}
		case 10: members_funcbizz(playerid,PlayerInfo[playerid][bizz_work]);
		case 11: {
			new query[156];
			format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", PlayerInfo[playerid][bizz_work]-1);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,PlayerInfo[playerid][bizz_work]-1);
		}
		case 12: {
			new string[156];
			format(string,sizeof(string),""W"Ви хочете продати таксопарк государству за "GREEN"$%d?\n\n{f6f6d9}Для продажи таксопарка гравцю введіть: /sellbusiness [ID гравця] [Сумма]",floatround(gBusiness[bizz-1][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""YELLOW"Бізнесс",string,"Продати","Відміна");
		}
	}
}
stock dialog_tk(playerid,bizz,listitem) {
	switch(listitem) {
		case 0: {
			new day;
			day = (gBusiness[bizz-1][bizzDay]-gettime())/86400;
			static const f_str[] = ""W"Назва:\t\t"YELLOW"%s\n\
"W"Власник:\t\t"YELLOW"%s\n\
"W"Количество днів:\t"YELLOW"%d\n\
"W"Гос. ціна\t\t"YELLOW"%d\n\
"W"Касса:\t\t\t"YELLOW"$%d\n\
"W"Оплата:\t\t"YELLOW"$%d/день\n\
"W"Налогообложение:\t"YELLOW"%d%";
			new string[sizeof(f_str) +1 + (-2 + 20) + (-2 + MAX_PLAYER_NAME) + (-2 + 3) + (-2 + 3) + (-2 + 8) + (-2 + 8) + (-2 + 8) + (-2 + 5) + (-2 + 5)];
			format(string,sizeof(string),f_str,FuncBizz[bizz][funcbName],gBusiness[bizz-1][bizzOwner],day,gBusiness[bizz-1][bizzSellPrice],gBusiness[bizz-1][bizzBank],floatround(gBusiness[bizz-1][bizzSellPrice]*bizz_rent/2),Nalog[3]);
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Транспортная компания",string,"Закрити","");
		}
		case 1: {
			static const f_str[] = ""W"Стан рахунку: "GREEN"$%d\n"YELLOW"1."W" Зняти гроші\n"YELLOW"2."W" Покласти гроші";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[PlayerInfo[playerid][pBusiness] - 1][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""YELLOW"Керування касою",string,"Далі","Назад");
		}
		case 2: {
			new string[1512],str[128];
			strcat(string,"№\tАвтомобіль\tИспользуется сотрудником\n");
			for(new i; i < 16; i ++) {
				if(FuncBizz[bizz][funcbCar][i] == 0) format(str, sizeof(str), "%d\t-\t-\n", i+1),strcat(string,str);
				else if(FuncBizz[bizz][funcbCarID][i] == -1) format(str, sizeof(str), "%d\t%s\t-\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName]),strcat(string,str);
				else format(str, sizeof(str), "%d\t%s\t%s\n", i+1,gTransport[FuncBizz[bizz][funcbCar][i]-400][trName],player_name[FuncBizz[bizz][funcbCarID][i]]),strcat(string,str);
			}
			SetPVarInt(playerid,"func_car_taxi",listitem-1);
			D(playerid, D_BIZZ_TAXI_CAR, DSTH, "Транспортная компания", string, "Вибрати", "Відміна");
		}
		case 3: {
			load_color(playerid);
			SetPVarInt(playerid,"color_allcolor",1);
		}
		case 4: {
			D(playerid,D_BIZZ_TAXI_NAME,DSI, ""YELLOW"Назва транспортної компанії","\n\n"W"Введіть нову назву транспортної компанії:\n\n\
														Мінімальна кількість символів: "YELLOW"3\n\
														"W"Максимальна кількість символів: "YELLOW"20","Змінити","Відміна");
		}
		case 5: {
			D(playerid,D_BIZZ_TAXI_PERCENT,DSI, ""YELLOW"Процент от прибыли","\n\n"W"Введіть відсоток, що стягується від прибутку працівників Вашої транспортної компанії\n\n\
														Доступный диапазон: от "YELLOW"1% "W"до "YELLOW"50%","Змінити","Відміна");
		}
		case 6: members_funcbizz_tk(playerid,PlayerInfo[playerid][bizz_work]);
		case 7: {
			new query[156];
			format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", PlayerInfo[playerid][bizz_work]-1);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,PlayerInfo[playerid][bizz_work]-1);
		}
		case 8: {
			new string[156];
			format(string,sizeof(string),""W"Ви хочете продати транспортную компанию государству за "GREEN"$%d?\n\n{f6f6d9}Для продажи транспортной компании гравцю введіть: /sellbusiness [ID гравця] [Сумма]",floatround(gBusiness[bizz-1][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""YELLOW"Бізнесс",string,"Продати","Відміна");
		}
	}
}
CB: members_funcbizz_tk(playerid,bizz) {
	new names[24],last[30],cash,lcash,status,string[3600],str[128],rows;
	new query[128];
	format(query, sizeof(query), "SELECT * FROM accounts WHERE bizz_work = '%d'", bizz);
	new Cache:result = mysql_query(connects, query);
	cache_get_row_count(rows);
	if(rows == 0) return SendClientMessage(playerid, COLOR_GREY, "Список сотрудников пуст");
	strcat(string,"№. Ім'я, Посада\tДоход за сутки\tОбщий доход\tПоследний вход\n");
	for(new i; i < rows; i ++) {
		cache_get_value_name(i, "Name", names, MAX_PLAYER_NAME);
		cache_get_value_name(i, "pOnline",last,30);
		cache_get_value_name_int(i, "bizz_cash",cash);
		cache_get_value_name_int(i, "bizz_lcash",lcash);
		cache_get_value_name_int(i, "bizz_status",status);
		new id = GetPlayerID(names);
		if(IsPlayerConnected(id)) {
			format(str, sizeof(str), ""YELLOW"%d. "W"%s [%s]\t%d\t%d\tОнлайн\n", i+1, names,tk_class[status-1],PlayerInfo[id][bizz_lcash],PlayerInfo[id][bizz_cash]),strcat(string,str);
		}
		else format(str, sizeof(str), ""YELLOW"%d. "W"%s [%s]\t%d\t%d\t%s\n", i+1, names,tk_class[status-1],lcash,cash,last),strcat(string,str);
	}
	cache_delete(result);
	D(playerid,D_BIZZ_TK_MEM,DSTH,"Сотрудники транспортной компании",string,"Далі","Закрити");
	return 1;
}
stock EnableGPSForPlayer(playerid, Float:x, Float:y, Float:z) {
	gpss[playerid] = 1;
	SetPlayerCheckpoint(playerid, Float:x, Float:y, Float:z, 4.0);
	return 1;
}
stock bizz_pay(bizz,price) {
	new percent_wh = floatround(price/100) * Nalog[3];
	new percent_mafia = 0;
	if(gBusiness[bizz][bizzMafia]) {
		percent_mafia = floatround((price-percent_wh)/100) * Nalog[4];
		AddMafiaBank(bizz,floatround(percent_mafia));
	}
	new income = percent_wh + percent_mafia;
	gBusiness[bizz][bizzBank] += (price-income);
	UpdateBusinessData(bizz+1,"bank",gBusiness[bizz][bizzBank]);
	gBusiness[bizz][bizzBankDay] += (price-income);
	UpdateBusinessData(bizz+1,"bankday",gBusiness[bizz][bizzBankDay]);

	UpdateBusinessData(bizz+1,"product",gBusiness[bizz][bizzProduct]);
	FI[fWHITEHOUSE][fBank] += percent_wh;
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
}
stock AddMafiaBank(bizid, sum) {
	switch(gBusiness[bizid][bizzMafia]) {
		case fLCN: gBankMafia[0][bizid] += sum,FI[fLCN][fBank] += sum, UpdateFraction(fLCN,"Bank",FI[fLCN][fBank]);
		case fYAKUZA: gBankMafia[1][bizid] += sum,FI[fYAKUZA][fBank] += sum, UpdateFraction(fYAKUZA,"Bank",FI[fYAKUZA][fBank]);
		case fRM: gBankMafia[2][bizid] += sum,FI[fRM][fBank] += sum, UpdateFraction(fRM,"Bank",FI[fRM][fBank]);
	}
	return 1;
}
stock GetEngineStat(vehicleid) {
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}
GetVehicleState(vehicleid) return VehicleState[vehicleid];
CB: FuelTmier() {
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(IsAPlane(i) && IsABoat(i) && IsABike(i) && IsAVelik(i)) continue;
		if(!GetEngineStat(i)) continue;
		if(VehicleInfo[i][vFuel] >= 0.015) VehicleInfo[i][vFuel] -= 0.015;
		else VehicleInfo[i][vFuel] = 0;
	}
}
stock skin_player(playerid) {
	A_SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	PlayerInfo[playerid][pFracSkin] = 0;
	UpdatePlayerData(playerid,"pModel",0);
}
CB: OnPlayerCaptchaLoaded(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid,"История еще пуста");
	new string[128], string_strcat[800], status[32], ip[32], _date[32];
	for(new z; z < rows; z++) {
		cache_get_value_name(z, "clIP", ip);
		cache_get_value_name(z, "clDate", _date);
		cache_get_value_name(z, "clStatus", status);
		format(string, sizeof(string), "{FFFFFF}%d. Дата: %s | IP: %s - %s\n", z+1, _date, ip, (strval(status) ? (""GREEN"Удачно"W"") : (""NO"Неудачно"W"")));
		strcat(string_strcat, string);
	}
	D(playerid, DIALOG_NONE, DSM, ""YELLOW"Інформація", string_strcat, "Закрити", "");
	return true;
}
stock dialog_business(playerid,bizz,listitem) {
	switch(listitem) {
		case 0: {
			static const f_str[] = ""W"Стан рахунку: "GREEN"$%d\n"YELLOW"1."W" Зняти гроші\n"YELLOW"2."W" Покласти гроші";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,gBusiness[bizz][bizzBank]);
			D(playerid,D_BIZZ_BANK,DSL,""YELLOW"Керування касою",string,"Далі","Назад");
		}
		case 1: D(playerid,dBusinessProd,DSI, ""YELLOW"Заказ продуктов","\n\n"W"Введіть кількість продуктов, которое хочете заказать:\n\n","Далі","Відміна");
		case 2: ShowBusinessInformation(playerid,bizz,D_BIZZ_STATS);
		case 3: {
			if(gBusiness[bizz][bizzStatus]) {
				gBusiness[bizz][bizzStatus] = 0;
				SendOk(playerid,"Бізнес закрыт");
			}
			else {
				gBusiness[bizz][bizzStatus] = 1;
				SendOk(playerid,"Бізнес открыт");
			}
			UpdateBusinessData(bizz+1,"status",gBusiness[bizz][bizzStatus]);
			UpdateBusinessText(bizz);
		}
		case 4: {
			static const f_str[] = ""YELLOW"1."W" Розширення склада "GREEN"$100.000 "ORANGE"[%s]\n\
"YELLOW"2."W" Відображення в GPS "GREEN"$200.000 "ORANGE"[%s]\n\
"YELLOW"3."W" Зниження субдсидії "GREEN"$200.000 "ORANGE"[%s]";
			new string[sizeof(f_str) +1 + (-2 + 12) + (-2 + 12) + (-2 + 12)];
			format(string,sizeof(string),f_str,gBusiness[bizz][bizzUpgrade][0]>=10000?("Є"):("Відсутня"),gBusiness[bizz][bizzUpgrade][1]==1?("Є"):("Відсутня"),gBusiness[bizz][bizzUpgrade][2]==1?("Є"):("Відсутня"));
			D(playerid,D_BIZZ_UPGRADE,DIALOG_STYLE_LIST,"Покращення",string,"Купити","Назад");
		}
		case 5: {
			if(gBusiness[bizz][bizzType] == 7) D(playerid,D_BIZZ_PRICE,DSI, ""YELLOW"Бізнес","\n\n"W"Введіть цену за 1 литр\nПримечание: от "GREEN"$12"W" до "GREEN"$24\n\n","Змінити","Відміна");
			else D(playerid,D_BIZZ_PRICE,DSI, ""YELLOW"Бізнес","\n\n"W"Введіть цену за 1 ед. товара\nПримечание: от "GREEN"$1"W" до "GREEN"$5\n\n","Змінити","Відміна");
		}
		case 6: D(playerid,D_BIZZ_ENTER,DSI, ""YELLOW"Бізнес","\n\n"W"Введіть ціну за вхід\nПримечание: от "GREEN"$0"W" до "GREEN"$5000\n\n","Змінити","Відміна");
		case 7: {
			new query[156];
			format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", bizz);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,bizz);
		}
		case 8: {
			static const f_str[] = "\n\n"W"Ви дійсно хочете продати бізнес государству за "GREEN"$%d?\n\n{f6f6d9}Для продажи бізнеса гравцю введіть: /sellbusiness [ID гравця] [Сумма]\n\n";
			new string[sizeof(f_str) +1 + (-2 + 8)];
			format(string,sizeof(string),f_str,floatround(gBusiness[bizz][bizzSellPrice]/100*80));
			D(playerid,D_BIZZ_SELL,DSM, ""YELLOW"Бізнес",string,"Продати","Відміна");
		}
	}
}
CreateATM(playerid, atmID) {
	new vw, Float:ATMPosa[4], string[128], int;

	GetPlayerPos(playerid, ATMPosa[0], ATMPosa[1], ATMPosa[2]);
	GetPlayerFacingAngle(playerid, ATMPosa[3]);

	vw  = GetPlayerVirtualWorld(playerid);
	int = GetPlayerInterior(playerid);

	ATMData[atmID][ATM_Pos][0]   = ATMPosa[0] + (1.4 * floatsin(-ATMPosa[3], degrees));
	ATMData[atmID][ATM_Pos][1]   = ATMPosa[1] + (1.4 * floatsin(-ATMPosa[3], degrees));
	ATMData[atmID][ATM_Pos][2]   = ATMPosa[2];
	ATMData[atmID][ATM_Pos][3]   = 0;
	ATMData[atmID][ATM_Pos][4]   = 0;
	ATMData[atmID][ATM_Pos][5]   = ATMPosa[3];
	ATMData[atmID][atm_VW]  	 = vw;
	ATMData[atmID][atm_INT]  	 = int;
	ATMData[atmID][atm_Taken]    = 1;
	
	ATMData[atmID][atm_Object] = CreateDynamicObject(2754, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], 0.0, 0.0, ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_VW], ATMData[atmID][atm_INT]);

	new query[128];
	format(query, sizeof(query), "INSERT INTO `atms` (atmID) VALUES ('%i')", atmID);
	mysql_tquery(connects, query, "OnQueryFinish", "i", atmID);

	format(string, sizeof(string), "%s успішно создал ATM(ID: %d)", player_name[playerid], atmID);
	SendOk(playerid, string);

	UpdateATMLabel(atmID);
	SaveATM(atmID);
	return 1;
}

DeleteATM(playerid, atmID) {
	new string[128],query[128];
	format(query, sizeof(query), "DELETE FROM `atms` WHERE `atmID` = '%d'", atmID);
	mysql_tquery(connects, query);

	ATMData[atmID][ATM_Pos][0]   = -1141241;
	ATMData[atmID][ATM_Pos][1]   = -11241241;
	ATMData[atmID][ATM_Pos][2]   = -111412414;
	ATMData[atmID][ATM_Pos][3]   = 0;
	ATMData[atmID][ATM_Pos][4]   = 0;
	ATMData[atmID][ATM_Pos][5]   = 0;
	ATMData[atmID][atm_VW]  	 = 13;
	ATMData[atmID][atm_INT]  	 = 0;
	ATMData[atmID][atm_Taken]  	 = 0;

	if(ATMData[atmID][atm_Object]) DestroyDynamicObject(ATMData[atmID][atm_Object]);
	
	if(ATMData[atmID][atm_Label]) Delete3DTextLabel(ATMData[atmID][atm_Label]);

	format(string, sizeof(string), "%s успішно удалил ATM(ID: %d)", player_name[playerid], atmID);
	SendOk(playerid, string);
	return 1;
}

GetNearestATM(playerid) {
	new atmID = -1;
	for (new i = 1; i < MAX_ATM; i ++) {
		if (ATMData[i][atm_Taken] && IsPlayerInRangeOfPoint(playerid, 2.0, ATMData[i][ATM_Pos][0], ATMData[i][ATM_Pos][1], ATMData[i][ATM_Pos][2])) {
			atmID = i;
			break;
		}
	}
	return atmID;
}

SaveATM(atmID) {
	new query[257];
	format(query, sizeof(query), "UPDATE `atms` SET `ATM_X` = '%f', `ATM_Y` = '%f', `ATM_Z` = '%f', `ATM_VW` = '%i'", ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2], ATMData[atmID][atm_VW]);
	format(query, sizeof(query), "%s, `ATM_ROTX` = '%f', `ATM_ROTY` = '%f', `ATM_ROTZ` = '%f', `ATM_INT` = '%d' WHERE `atmID` = '%d'", query, ATMData[atmID][ATM_Pos][3], ATMData[atmID][ATM_Pos][4], ATMData[atmID][ATM_Pos][5], ATMData[atmID][atm_INT], atmID);
	return mysql_tquery(connects, query);
}

UpdateATMLabel(atmID) {
	if(ATMData[atmID][atm_Label]) Delete3DTextLabel(ATMData[atmID][atm_Label]);
	ATMData[atmID][atm_Label] = Create3DTextLabel(""YELLOW"Банкомат\n"W"Натисніть: "GREEN"ALT",-1, ATMData[atmID][ATM_Pos][0], ATMData[atmID][ATM_Pos][1], ATMData[atmID][ATM_Pos][2]+0.75, 10.0, ATMData[atmID][atm_VW]);
}

stock ShowATMMenu(playerid) {
	new atm = GetNearestATM(playerid);
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0,0);
	new string[156];
	if(ATMData[atm][atm_Bank]) format(string,sizeof(string),""YELLOW"Банкомат "W"| {%s}%s "W"| Комісія: "ORANGE"%d%",color_td[FuncBizz[ATMData[atm][atm_Bank]+1][funcbColor]][col_rgb],FuncBizz[ATMData[atm][atm_Bank]+1][funcbName],FuncBizz[ATMData[atm][atm_Bank]+1][funcbPercent3]);
	else format(string,sizeof(string),""YELLOW"Банкомат"W" | Комісія: "ORANGE"1%");
	D(playerid, D_ATM, DSL, string,
		""GREEN"1."W" Зняти готівку\n\
		 "GREEN"2."W" Покласти готівку\n\
		 "GREEN"3."W" Пополнить рахунок телефона", "Далі", "Закрити");
	return 1;
}
stock GetWeekName(UTC, name[], const size = sizeof(name)) {
	return strunpack(name, gDaysOfWeek[((unix + UTC * 3600) / 86400) % 7], size);
}
stock getDay() {
	new week_name[10];
	GetWeekName(0, week_name);
	return week_name;
}
SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:angle) {
	setX[playerid] = x;
	setY[playerid] = y;
	setZ[playerid] = z;
	SetSpawnInfo(playerid, GetPlayerTeam(playerid), skin, x, y, z, angle, -1, -1, -1, -1, -1, -1);
}
stock SpecPlayer(playerid,id) {
	if(!IsPlayerConnected(id) || id == INVALID_PLAYER_ID) return ErrorMessage(playerid, "Гравець не знайдений");

	if(SERIU[playerid][sID] != id && PlayerInfo[playerid][pAdmin]<5) {
		new str[128];
		format(str,sizeof(str),"[A] %s[%d] начал следить за %s[%d]",player_name[playerid],playerid,player_name[id],id);
		AdmMSG(0xAFAFAFAA, str,1);
	}
	SpecPl(playerid,true);
	if(SERIU[playerid][sID] != INVALID_PLAYER_ID) TI[SERIU[playerid][sID]][tSpectr] = INVALID_PLAYER_ID;
	TI[id][tSpectr] = playerid;

 	SERIU[playerid][sID] = id;
 	SetPlayerInterior(playerid,GetPlayerInterior(id));
 	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(id));
 	if(IsPlayerInAnyVehicle(id)) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(id));
 	else PlayerSpectatePlayer(playerid, id);
	ShowMenuForPlayer(specmenu,playerid);
	recon_update(playerid,id);
	return 1;
}
stock recon_update(playerid,id) {
	new Float:hppp, Float:aermor, Float:health,nedee,oner[30],speedcar, mes2[350],maxspeed = 0;
	GetPlayerArmour(id,aermor);
	GetPlayerHealth(id,hppp);
	if(IsPlayerInAnyVehicle(id)) GetVehicleHealth(GetPlayerVehicleID(id),health);
	if(GetPlayerState(id) == 2) {
		new carid = GetPlayerVehicleID(id);
		if(GetEngineStat(carid)) oner = "on";
		else oner = "off";
		nedee = floatround(VehicleInfo[carid][vFuel], floatround_floor);
		speedcar = GetPlayerVehicleSpeed(id);
		maxspeed = MaxSpeedCar[GetVehicleModel(GetPlayerVehicleID(id))-400];
	}
	format(mes2,sizeof(mes2),"~w~%s~n~ID: %d~n~~n~~r~Ping: ~w~%d~n~~n~~y~LVL: ~w~%d~n~~y~EXP: ~w~%d~n~~y~Health: ~w~%.2f~n~~y~Armour: ~w~%.2f~n~~n~~g~Weapon: ~w~%d~n~~g~Ammo: ~w~%d~n~~n~~g~Speed: ~w~%d~n~~g~Car HP: ~w~%.0f~n~~g~Car Speed: ~w~%d/%d~n~~g~Car ENGINE: ~w~%s~n~~g~Car Fuel: ~w~%d~n~",player_name[id],id,GetPlayerPing(id),PlayerInfo[id][pLevel],PlayerInfo[id][pExp],hppp,aermor,GetPlayerWeapon(id),GetPlayerAmmo(id), GetPlayerVehicleSpeed(id),health,speedcar,maxspeed,oner,nedee);
	PlayerTextDrawSetString(playerid,RECON[playerid],mes2);
}
CB: CheckDelAcc(playerid, name[]) {
    new rows;
    cache_get_row_count(rows);
    if(!rows) return ErrorMessage(playerid,"Аккаунт не знайдений");
	new acc_id, acc_lvl;
	cache_get_value_name_int(0, "pID", acc_id),
	cache_get_value_name_int(0, "pLevel", acc_lvl);
	if(GetPVarInt(playerid, "delstatus") == acc_id) {
		new query[128], info[85];
		mysql_format(connects, query, sizeof(query), "DELETE FROM `accounts` WHERE BINARY `Name` = '%s'", name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `"TABLE_ADMIN"` WHERE name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `"TABLE_CARS"` WHERE BINARY owner = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `bank` WHERE BINARY owner = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `questsprogress` WHERE BINARY name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `ban` WHERE BINARY Name = '%s'",name);
		mysql_tquery(connects, query, "", "");
		mysql_format(connects, query, sizeof(query), "DELETE FROM `promocode_used` WHERE idacca = '%s'",acc_id);
		mysql_tquery(connects, query, "", "");

		format(info, sizeof(info), "[A] Аккаунт %s [ID: %d] [LVL: %d] успішно удален", name, acc_id, acc_lvl);
		AdmMSG(CADMIN_INFO,info,4);
		DeletePVar(playerid, "delstatus");

		WriteLog(LOG_DELACC,player_name[playerid],name,"Удаление аккаунта");
	}
	else {
		SetPVarInt(playerid, "delstatus", acc_id);
		new string[128];
		format(string, sizeof(string), "Ник: %s, номер: %d, лвл: %d. Видалити аккаунт?",name,acc_id,acc_lvl);
		SendClientMessage(playerid, 0xFF6600AA, string);
		SendClientMessage(playerid, COLOR_YELLOW, "Для ОТМЕНЫ удаления введіть /delacc без ника");
		SendClientMessage(playerid, COLOR_YELLOW, "Для ПОДТВЕРЖДЕНИЯ повторите /delacc [ник]");
	}
	return true;
}
StealMats(playerid) {
	new string[128], stmats = random(15)+1;
	new f = stmats * vip_status[PlayerInfo[playerid][pVips]][vip_armmats];
	if(vip_status[PlayerInfo[playerid][pVips]][vip_mats] < f + PlayerInfo[playerid][pMats]) return ErrorMessage(playerid, "В кишені недостатньо місце для зберігання боєприпасів");

	if(PlayerInfo[playerid][pMats] + f > vip_status[PlayerInfo[playerid][pVips]][vip_mats]) f = vip_status[PlayerInfo[playerid][pVips]][vip_mats] - PlayerInfo[playerid][pMats];

	switch(GetPlayerVirtualWorld(playerid)) {
		case 30: {
			if(FI[fARMYLV][fMats] < f) return ErrorMessage(playerid, "На складі не достаточно боєприпасів");
			FI[fARMYLV][fMats] -= f;
		}
		case 31: {
			if(FI[fARMYSF][fMats] < f) return ErrorMessage(playerid, "На складі не достаточно боєприпасів");
			FI[fARMYSF][fMats] -= f;
		}
		case 35: {
			if(zavodsklad < f) return ErrorMessage(playerid, "На складі не достаточно боєприпасів");
			zavodsklad -= f;
		}
	}

	format(string, 20, "~y~~g~MATS: +%d", f);
	GameTextForPlayer(playerid, string, 2500, 6);

	PlayerInfo[playerid][pMats] += f;
	if(QuestProgress[playerid][5] < 500 && AcceptQuest[playerid][5] != 0 && AcceptQuest[playerid][5] != 2) {
		QuestProgress[playerid][5] += f;
		if(QuestProgress[playerid][5] >= 500) QuestProgress[playerid][5] = 500;
	}
	if(QuestProgress[playerid][5] == 500 && AcceptQuest[playerid][5] != 0 && AcceptQuest[playerid][5] != 2) {
		D(playerid,DIALOG_NONE,DSM, ""YELLOW"Квест",""W"Ви успішно украли 500ед боєприпасів. Це завдання можна закінчити та забрати за нього нагороду","Закрити","");
		NextStapQI(playerid,5);
	}
	return 1;
}
stock UpdateDonate(playerid) {
	new query[200];
	format(query,sizeof(query),"SELECT `donatemoney` FROM `accounts` WHERE `pID` = '%d'", PlayerInfo[playerid][pID]);
	mysql_pquery(connects, query, "UpdatePlayerDonate","d",playerid);
	return 1;
}

CB: UpdatePlayerDonate(playerid) {
	cache_get_value_int(0,"donatemoney",PlayerInfo[playerid][pRouble]);
	UpdatePlayerData(playerid,"donatemoney",PlayerInfo[playerid][pRouble]);
	return 1;
}
stock GetArendCarID(vehicleid, &arend_id = INVALID_PLAYER_ID) {
    // Возвращает ID ячейки в массиве ArendInfo
    // В переменную "arend_id" записывает ID гравця, арендующего ТС

    arend_id = INVALID_PLAYER_ID;
	for(new i = 0; i < sizeof(ArendInfo); i ++) {
	    if(vehicleid == ArendInfo[i][aID]) {
      		if(IsPlayerConnected(ArendInfo[i][aPlayerID])) {
            	arend_id = ArendInfo[i][aPlayerID];
			}
			return i;
		}
 	}
	return -1;
}

stock GetVehicleArendID(vehicleid) {
	new playerid = INVALID_PLAYER_ID, get_rent = GetArendCarID(vehicleid, playerid);
    if(get_rent != (-1)) {
	    if(playerid == INVALID_PLAYER_ID || !IsPlayerConnected(playerid)) {
	        ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
	        return INVALID_PLAYER_ID;
	    }
	    return ArendInfo[get_rent][aPlayerID];
	}
	return INVALID_PLAYER_ID;
}
arendaor_closed(h) {
	new query[128];
	for(new i = 0; i < 3; i++) {
		if(strcmp(gHouseArendator[h][i],"None")) {
			new bool:check_online = false;
			foreach(new x:Player) {
				if(!TI[x][tLogin] ||  AntiCheatIsKickedWithDesync(x)) continue;
				if(!strcmp(gHouseArendator[h][i],player_name[x])) {
					SendClientMessage(x,COLOR_REDD,"Ви были выселены с будинку");
					UpdatePlayerData(x,"tempkey",0);
					PlayerInfo[x][pTempKey] = 0;
					check_online = true;
					break;
				}
			}
			if(!check_online) {
				format(query,sizeof(query),"UPDATE `accounts` SET `tempkey` = '0' WHERE `Name` = '%s' LIMIT 1",gHouseArendator[h][i]);
				mysql_pquery(connects, query, "", "");
			}
			strmid(gHouseArendator[h][i],"None",0,strlen("None"),31);
		}
		SaveHome(h);
	}
}
stock ShowFPass(playerid,actplayerid) {
	new jobname[32],classname[15],string[1024];
	new houseid = PlayerInfo[playerid][pHouse]-1;
	if(PlayerInfo[playerid][pJob] > 0) {
		switch(PlayerInfo[playerid][pJob]) {
			case 1: jobname = "Водитель автобуса";
			case 2: jobname = "Механик";
			case 3: jobname = "Развозчик продуктов/топлива";
			default: jobname = "Безработный";
		}
	}
	new housenumber[15];
	if(houseid > 0) {
		switch(gHouses[houseid][houseClass]) {
			case 0: classname = "Эконом";
			case 1: classname = "Cредний";
			case 2: classname = "Элитный";
			case 3: classname = "Особняк";
		}	
		valstr(housenumber,PlayerInfo[playerid][pHouse]);
	}
	else {
		housenumber = "Відсутній";
		classname = "Відсутній";
	}
	strcat(string, "\n\t"YELLOW"ОБЩИЕ ДАННЫЕ:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штаті: "W"%d\n\t"ORANGE"%s: "W"%s\n\t"ORANGE"Законопослушность: "W"%d\n\n",
	string,player_name[playerid],PlayerInfo[playerid][pLevel],(PlayerInfo[playerid][pSex] == 1) ? ("Жена") : ("Муж"),(strlen(PlayerInfo[playerid][pMarried]) > 4) ? ("Есть") : ("Ні"),PlayerInfo[playerid][pZakonp]);
	format(string, sizeof(string), "%s\t"YELLOW"ПРОПИСКА:\n\n\t"ORANGE"Дом: "W"%s\n\t"ORANGE"Клас будинку: "W"%s\n\n", string,housenumber,classname);
	if(PlayerInfo[playerid][pRank] > 0 && PlayerInfo[playerid][pMember] > 0) {
		format(string, sizeof(string), "%s\t"YELLOW"ТРУДОВЕ ВЛАШТУВАННЯ:\n\n\t"ORANGE"Место работы: "W"%s\n\t"ORANGE"Звание: "W"%s\n\n\n",string, FI[TI[playerid][tMasked]][fName],GetRankName(TI[playerid][tMasked],TI[playerid][tFakePass]+1));
	}
	else strcat(string, "\t"YELLOW"ТРУДОВЕ ВЛАШТУВАННЯ:\n\t"W"Відсутнє\n\n");
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}ПАСПОРТ        ",string,"Закрити","");
	return 1;
}
stock ShowUdJur(playerid,giveplayerid) {
	new string[236];
	format(string, sizeof(string), "\t"YELLOW"==== Інформація ====\n\n\
									"W"Ім'я: "GREEN"%s\n\
									"W"Років в штаті: "GREEN"%d\n\
									"W"Місце работи: "GREEN"%s\n\
									"W"Посада: "GREEN"%s(%d)", player_name[playerid],PlayerInfo[playerid][pLevel],FI[PlayerInfo[playerid][pMember]][fName],GetRankName(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]),PlayerInfo[playerid][pRank]);
	D(giveplayerid, DIALOG_NONE, DSM, ""YELLOW"Посвідчення",string,"Закрити","");

	SetPlayerAttachedObject(playerid,2,1581,5,0.092000,0.030999,-0.006000,15.399999,82.499771,178.099761,0.195999,0.114999,0.221000);
    ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,0,0,0,0,1);
	SetTimerEx("PlayerUdostover",1000,false,"i",playerid);
}
stock ShowUd(playerid,giveplayerid) {
	new string[236];
	format(string, sizeof(string), "\t"YELLOW"==== Інформація ====\n\n\
									"W"Ім'я: "GREEN"%s\n\
									"W"Років в штаті: "GREEN"%d\n\
									"W"Підрозділ: "GREEN"%s\n\
									"W"Звання: "GREEN"%s(%d)", player_name[playerid],PlayerInfo[playerid][pLevel],FI[PlayerInfo[playerid][pMember]][fName],GetRankName(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]),PlayerInfo[playerid][pRank]);
	D(giveplayerid, DIALOG_NONE, DSM, ""YELLOW"Посвідчення",string,"Закрити","");

	SetPlayerAttachedObject(playerid,2,1581,5,0.092000,0.030999,-0.006000,15.399999,82.499771,178.099761,0.195999,0.114999,0.221000);
    ApplyAnimation(playerid,"GHANDS","gsign5LH",4.1,0,0,0,0,0,1);
	SetTimerEx("PlayerUdostover",1000,false,"i",playerid);
}
stock ShowSkill(playerid,giveplayerid) {
	new strname[56];
	format(strname, sizeof(strname), "{ffcf00}Навыки владения зброї %s", player_name[playerid]);
	new strkill[1006];
	new points[6];
    points[0] = 100 - PlayerInfo[playerid][pGunSkill][0];
	points[1] = 100 - PlayerInfo[playerid][pGunSkill][1];
	points[2] = 100 - PlayerInfo[playerid][pGunSkill][2];
	points[3] = 100 - PlayerInfo[playerid][pGunSkill][3];
	points[4] = 100 - PlayerInfo[playerid][pGunSkill][4];
	points[5] = 100 - PlayerInfo[playerid][pGunSkill][5];
	if(PlayerInfo[playerid][pGunSkill][0] > 100) PlayerInfo[playerid][pGunSkill][0] = 100;
	if(PlayerInfo[playerid][pGunSkill][1] > 100) PlayerInfo[playerid][pGunSkill][1] = 100;
	if(PlayerInfo[playerid][pGunSkill][2] > 100) PlayerInfo[playerid][pGunSkill][2] = 100;
	if(PlayerInfo[playerid][pGunSkill][3] > 100) PlayerInfo[playerid][pGunSkill][3] = 100;
	if(PlayerInfo[playerid][pGunSkill][4] > 100) PlayerInfo[playerid][pGunSkill][4] = 100;
	if(PlayerInfo[playerid][pGunSkill][5] > 100) PlayerInfo[playerid][pGunSkill][5] = 100;
	format(strkill,1000,""W"SD-Pistol:\t"YELLOW"%s "W"%d/100%%\nDesert Eagle:\t"YELLOW"%s "W"%d/100%%\nShotGun:\t"YELLOW"%s "W"%d/100%%\nMP5\t\t"YELLOW"%s "W"%d/100%%\nAK47:\t\t"YELLOW"%s "W"%d/100%%\nM4:\t\t"YELLOW"%s "W"%d/100%%\n\n\n\
	"W"Стиль боя\tБокс %s\n\
	"W"Стиль боя\tКунг-Фу %s\n\
	"W"Стиль боя\tКик-Бокс %s",
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][0],points[0]),PlayerInfo[playerid][pGunSkill][0],
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][1],points[1]),PlayerInfo[playerid][pGunSkill][1],
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][2],points[2]),PlayerInfo[playerid][pGunSkill][2],
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][3],points[3]),PlayerInfo[playerid][pGunSkill][3],
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][4],points[4]),PlayerInfo[playerid][pGunSkill][4],
	ToDevelopSkills(PlayerInfo[playerid][pGunSkill][5],points[5]),PlayerInfo[playerid][pGunSkill][5],
	PlayerInfo[playerid][pBox] < 1 ? ("{f6f6d9}[Не изучен]"):(""ORANGE"[Изучен]"),
	PlayerInfo[playerid][pBox] < 2 ? ("{f6f6d9}[Не изучен]"):(""ORANGE"[Изучен]"),
	PlayerInfo[playerid][pBox] < 3 ? ("{f6f6d9}[Не изучен]"):(""ORANGE"[Изучен]"));
	D(giveplayerid, DIALOG_NONE, DSM, strname, strkill, "Закрити","");
}
stock ShowWBook(playerid,giveplayerid) {
	new query[138];
	format(query, sizeof(query), "SELECT * FROM `jobinfo` WHERE `ji_uid` ='%d' AND ( `ji_fraction` < 15 OR `ji_fraction` > 22 )", PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "joblist_callback", "ii", playerid, giveplayerid);	
}
stock ShowLic(playerid,giveplayerid) {
	static const f_str[] = ""W"Водительские права: %s\n\
"W"Ліцензія пилота: %s\n\
"W"Ліцензія на водний транспорт: %s\n\
"W"Ліцензія на зброю: %s";
	new string[sizeof(f_str) +100];
	format(string,sizeof(string),f_str,(lic[playerid][0]) ? (""GREEN"Есть") : (""NO"Ні"),(lic[playerid][1]) ? (""GREEN"Есть") : (""NO"Ні"),(lic[playerid][2]) ? (""GREEN"Есть") : (""NO"Ні"),(lic[playerid][3]) ? (""GREEN"Есть") : (""NO"Ні"));
	D(giveplayerid, DIALOG_NONE, DSM, ""YELLOW"Лицензии", string, "Закрити", "");
}
stock ShowPass(playerid,actplayerid) {
	new jobname[32],classname[15],string[1024];
	new houseid = PlayerInfo[playerid][pHouse]-1;
	if(PlayerInfo[playerid][pJob] > 0) {
		switch(PlayerInfo[playerid][pJob]) {
			case 1: jobname = "Водитель автобуса";
			case 2: jobname = "Механик";
			case 3: jobname = "Развозчик продуктов/топлива";
			default: jobname = "Безработный";
		}
	}
	new housenumber[15];
	if(houseid > 0) {
		switch(gHouses[houseid][houseClass]) {
			case 0: classname = "Эконом";
			case 1: classname = "Cредний";
			case 2: classname = "Элитный";
			case 3: classname = "Особняк";
		}	
		valstr(housenumber,PlayerInfo[playerid][pHouse]);
	}
	else {
		housenumber = "Відсутній";
		classname = "Відсутній";
	}
	strcat(string, "\n\t"YELLOW"ОБЩИЕ ДАННЫЕ:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штаті: "W"%d\n\t"ORANGE"%s: "W"%s\n\t"ORANGE"Законопослушность: "W"%d\n\n",
	string,player_name[playerid],PlayerInfo[playerid][pLevel],(PlayerInfo[playerid][pSex] == 1) ? ("Жена") : ("Муж"),(strlen(PlayerInfo[playerid][pMarried]) > 4) ? ("Есть") : ("Ні"),PlayerInfo[playerid][pZakonp]);
	format(string, sizeof(string), "%s\t"YELLOW"ПРОПИСКА:\n\n\t"ORANGE"Дом: "W"%s\n\t"ORANGE"Клас будинку: "W"%s\n\n", string,housenumber,classname);
	if(PlayerInfo[playerid][pRank] > 0 && PlayerInfo[playerid][pMember] > 0) {
		format(string, sizeof(string), "%s\t"YELLOW"ТРУДОВЕ ВЛАШТУВАННЯ:\n\n\t"ORANGE"Место работы: "W"%s\n\t"ORANGE"Звание: "W"%s\n\n\n",string, FI[PlayerInfo[playerid][pMember]][fName],GetRankName(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]));
	}
	else strcat(string, "\t"YELLOW"ТРУДОВЕ ВЛАШТУВАННЯ:\n\t"W"Відсутнє\n\n");
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}ПАСПОРТ        ",string,"Закрити","");
	return 1;
}
stock ShowMedcard(playerid,actplayerid) {
	new string[512];
	strcat(string, "\n\t"YELLOW"Інформація:\n\n");
	format(string, sizeof(string), "%s\t"ORANGE"Имя: "W"%s\n\t"ORANGE"Лет в штаті: "W"%d\n\t"ORANGE"Пол: "W"%s\n\n",
	string,player_name[playerid],PlayerInfo[playerid][pLevel],(PlayerInfo[playerid][pSex] == 1) ? ("Мужской") : ("Женский"));
	format(string, sizeof(string), "%s\t"YELLOW"ХВОРОБИ:\n\n\t"ORANGE"Наркозалежність: "W"%d\n\t"ORANGE"Грипп: "W"%s\n\t"ORANGE"Анорексия: "W"%s\n\n", string,PlayerInfo[playerid][pAddiction],(PlayerInfo[playerid][pDisease][0] == 1) ? ("Болен") : ("Здоров"),(PlayerInfo[playerid][pDisease][1] == 1) ? ("Болен") : ("Здоров"));
	D(actplayerid,DIALOG_NONE,DSM,"        		{FAD086}Медична карта        		",string,"Закрити","");
	return 1;
}
stock ShowGetGun(playerid) {
	if(!PlayerInfo[playerid][pMember]) return true;
	new string[512];
	new id_str_set_gun[64];
	new team;
	switch(GetPlayerVirtualWorld(playerid)) {
		case 40: team = fLSPD;
		case 41: team = fSFPD;
		case 42: team = fLVPD;
		case 43: team = fFBI;
	}
	string = ""W"";
	for(new i = 0 ; i < 9 ; i++) {
		if(FW[i][team][fwGunID] == 0 || FW[i][team][fwGunAmmo] == 0) continue;
		if(FW[i][team][fwArmor] == 1) {
			format(id_str_set_gun, sizeof(id_str_set_gun), ""YELLOW"%d."W" Бронежилет\n",i+1);
			strcat(string,id_str_set_gun);
			continue;
		}
		format(string,sizeof(string) , "%s"YELLOW"%d."W" %s\t%d\n",string,i+1,FW[i][team][fwName],FW[i][team][fwGunAmmo]);
	}
	D(playerid,dGiveGunTD,DST,""YELLOW"Зброя",string,"Вибрати","Відміна");
	return true;
}
CB: AttachTrailerToVehicleEx(trailerid,vehicleid) AttachTrailerToVehicle(trailerid,vehicleid);
CB: UnCallisionForPlayer(playerid) DisableRemoteVehicleCollisions(playerid, false);
CB: OnServerRestarting() {
	SendClientMessageToAll(COLOR_REDD,""FullServName" | Restart...");
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		SaveAccount(i), save_car(i,0), save_car(i,1);
		SetPlayerInterior(i, 0);
		SetPlayerVirtualWorld(i, 0);
		InterpolateCameraPos(i, 1178.088012, 1204.779541, 105.671997, 2501.051269, 1285.838867, 118.900398, 5000);
		InterpolateCameraLookAt(i, 1175.603149, 1201.194458, 103.228073, 2496.586669, 1285.855346, 116.649597, 5000);
		kick(i);
	}
	SendRconCommand("gmx");
	printf("Auto Restart - Reloading...");
	return true;
}
CB: promo_check(playerid, code[]) {
    new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Вказаний промокод не знайдений");
	new code_money, code_skils, code_lics, used_count;
    cache_get_value_index_int(0, 1, code_money);
	cache_get_value_index_int(0, 2, code_skils);
	cache_get_value_index_int(0, 3, code_lics);
    cache_get_value_index_int(0, 5, used_count);
    SetPVarInt(playerid, "code_money_", code_money);
	SetPVarInt(playerid, "code_skills_", code_skils);
	SetPVarInt(playerid, "code_lics_", code_lics);
    SetPVarInt(playerid, "used_count_", used_count);
	new query[200];
	format(query, sizeof(query), "SELECT * FROM "T_PROMOCODE_USED" WHERE idacca = %d", PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "promo_check2", "ds", playerid, code);
    return 1;
}
CB: promo_check2(playerid, code[]) {
    new rows;
	cache_get_row_count(rows);
	if(rows) {
        ErrorMessage(playerid, "Ви уже использовали промокод");
		DeletePVar(playerid, "code_money_");
		DeletePVar(playerid, "code_skills_");
		DeletePVar(playerid, "code_lics_");
		DeletePVar(playerid, "used_count_");
        return 1;
    }
	new query[300];
	format(query, sizeof(query), "INSERT INTO "T_PROMOCODE_USED" (idacca,code) VALUE (%d,'%s')", PlayerInfo[playerid][pID], code);
	mysql_tquery(connects, query, "", "");
	new code_money, used_count,code_skills, code_lics;
	code_money = GetPVarInt(playerid, "code_money_");
	code_skills = GetPVarInt(playerid, "code_skills_");
	code_lics = GetPVarInt(playerid, "code_lics_");
	used_count = GetPVarInt(playerid, "used_count_");
    new string[128];
	format(string, sizeof(string), "Промокод "YELLOW"%s"W" активирован", code);
	SendClientMessage(playerid, COLOR_WHITE, string);
	if(PlayerInfo[playerid][pLevel] < 4) {
		PlayerInfo[playerid][pMPromo] = code_money;
		UpdatePlayerData(playerid,"pMPromo",code_money);

		if(code_skills != 6) {
			new str2[6][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4"};
			new stri[128];
			format(stri,sizeof(stri),"Вам было добавлено 100% навыка владения зброєю - "W"%s",str2[code_skills]);
			SendOk(playerid,stri);
			PlayerInfo[playerid][pGunSkill][code_skills] = 100;
			SaveAccount(playerid);
		}
		if(code_lics != 4) {
			new str3[4][20] = {"Вод.права","виліт","Вод.транспорт","Зброя"};
			new stri[128];
			format(stri,sizeof(stri),"Вам була видана ліцензія - "W"%s",str3[code_lics]);
			SendOk(playerid,stri);
			lic[playerid][code_lics] = 1;
			UpdateLicenses(playerid);
		}
		new str[128];
		format(str,sizeof(str),""ORANGE"$%d{f6f6d9} будет выдано при досягненні 4 игрового рівня",code_money);
		SendOk(playerid,str);
	}
	else {
		if(code_skills != 6) {
			new str2[6][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4"};
			new stri[128];
			format(stri,sizeof(stri),"Вам було добавлено 25% навичок володіння зброєю - "W"%s",str2[code_skills]);
			SendOk(playerid,stri);
			if(PlayerInfo[playerid][pGunSkill][code_skills] + 25 < 100) PlayerInfo[playerid][pGunSkill][code_skills] += 25;
			SaveAccount(playerid);
		}
		if(code_lics != 4) {
			new str3[4][20] = {"Вод.права","виліт","Вод.транспорт","Зброя"};
			new stri[128];
			format(stri,sizeof(stri),"Вам була видана ліцензія - "W"%s",str3[code_lics]);
			SendOk(playerid,stri);
			lic[playerid][code_lics] = 1;
			UpdateLicenses(playerid);
		}
		GiveMoney(playerid, code_money, "промокод");
	}
	used_count ++;
	query = "";
    format(query, sizeof(query), "UPDATE "T_PROMOCODE" SET used_count = %d WHERE code = '%s'", used_count, code);
    mysql_tquery(connects, query, "", "");

    DeletePVar(playerid, "code_money_");
	DeletePVar(playerid, "code_skills_");
	DeletePVar(playerid, "code_lics_");
	DeletePVar(playerid, "used_count_");
    return 1;
}

CB: promo_create(playerid, code[]) {
    new rows;
	cache_get_row_count(rows);
	if(rows >= 150) return ErrorMessage(playerid, "Достигнут лимит промокодов (150 шт.)");
    new load_code[32], free_slot = -1;
    for(new i; i < rows; i++) {
        cache_get_value_index(i, 0, load_code, 32);
        if(!strcmp(load_code, code, false)) {
			free_slot = i;
        	break;
  		}
    }
    if(free_slot != -1) {
		ErrorMessage(playerid, "Вказаний промокод уже есть в списке");
		DeletePVar(playerid, "promoname");
		DeletePVar(playerid, "promoskills");
		DeletePVar(playerid, "promolic");
		DeletePVar(playerid, "promomoney");
		return 0;
	}
    new promodays = GetPVarInt(playerid, "promoskills");
    new promoplayers = GetPVarInt(playerid, "promolic");
    new promomoney = GetPVarInt(playerid, "promomoney");
	new query[300];
    format(query, sizeof(query), "INSERT INTO "T_PROMOCODE" (code,money,skills,lics,data) VALUES ('%s',%d,%d,%d,%d)", code, promomoney, promodays, promoplayers, gettime()+promodays);
    mysql_tquery(connects, query, "", "");

	new str2[7][13] = {"SD-Pistol","Deagle","ShotGun","MP5","AK-47","M4","Не выдавать"};
	new str3[5][20] = {"Вод.права","виліт","Вод.транспорт","Зброя","Не выдавать"};

	new string[356];
    format(string, sizeof(string), "\
		"W"Промокод "YELLOW"%s"W" успішно створений!\n\
		Кількість грошей "GREEN"$%i"W"\n\
		Навички володіння зброєю: "ORANGE"%s"W"\n\
		Ліцензія: "ORANGE"%s",
	code,promomoney,str2[promodays],str3[promoplayers]);
    D(playerid, DIALOG_NONE, DSM, "Промокод створений", string, "Закрити", "");
    DeletePVar(playerid, "promoname");
	DeletePVar(playerid, "promolic");
	DeletePVar(playerid, "promoskills");
	DeletePVar(playerid, "promomoney");
	return 1;
}

CB: promo_show(playerid) {
    new rows;
	cache_get_row_count(rows);
    if(!rows) {
		ErrorMessage(playerid, "Промокоди не знайдені");
		return D(playerid, D_PROMO, DSL, ""YELLOW"Промокоди", ""YELLOW"1."W" Список промокодів\n"YELLOW"2."W" Створити промокод\n"YELLOW"3."W" Видалити промокод", "Вибрати", "Назад");
	}
    new code[32], code_money, code_days, used_count;
    new string[2500];
    strcat(string, ""W"Назва\t\t"W"Сума\t\t"W"Використовувань\n");
    for(new i; i < rows; i++) {
        cache_get_value_index(i, 0, code, 32);
        cache_get_value_index_int(i, 1, code_money);
        cache_get_value_index_int(i, 2, code_days);
        cache_get_value_index_int(i, 5, used_count);
        format(string, sizeof(string),"%s%s\t\t%d$\t\t%d раз\n", string, code, code_money, used_count);
    }
    D(playerid, DIALOG_NONE, DST, "Список промокодів", string, "Закрити", "");
	return 1;
}

CB: promo_dell(playerid, code[]) {
    new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Вказаний промокод не знайдений");
	new string[128];
    format(string, sizeof(string), ""W"Промокод "ORANGE"%s""W"" успішно видалений", code);
    D(playerid, DIALOG_NONE, DSM, " ", string, "Закрити", "");
    new query[128];
    format(query, sizeof(query), "DELETE FROM "T_PROMOCODE" WHERE code = '%s'", code);
    mysql_tquery(connects, query, "", "");
	return 1;
}
stock AdvertTimer() {
	new string[144];
	if(gAdvertTime > 0) gAdvertTime--;
	for(new d;d<MAX_ADVERT_COUNT;d++) {
		if(gAdvert[d][adTime] > 0) gAdvert[d][adTime]--;
		if(gAdvert[d][adCheked] && gAdvert[d][adTime] == 0) {
			if(IsPlayerConnected(gAdvert[d][adID]) && strlen(gAdvert[d][adText])) {
				if(gAdvert[d][adVIP]) {
					format(string,sizeof(string),"VIP | СМИ %s | %s. Оголошення от: %s[%d] (тел. %d)",gAdvert[d][adNews],gAdvert[d][adText],gAdvert[d][adSender],gAdvert[d][adID],gAdvert[d][adPhone]);
					SendClientMessageToAll(0xFA8072,string);
				}
				else {
					format(string,sizeof(string),"СМИ %s | %s. Оголошення от: %s[%d] (тел. %d)",gAdvert[d][adNews],gAdvert[d][adText],gAdvert[d][adSender],gAdvert[d][adID],gAdvert[d][adPhone]);
					SendClientMessageToAll(0xFA8072,string);
				}

				format(string,sizeof(string),"\t\t\t\tОголошення допустил(а) в эфир: %s",gAdvert[d][adCheker]);
				SendClientMessageToAll(0x2d442c00,string);

				strdel(gAdvert[d][adSender],0,24);
				gAdvert[d][adPhone] = 0;
				strdel(gAdvert[d][adText],0,100);
				strdel(gAdvert[d][adCheker],0,24);
				gAdvert[d][adID] = -1;
				gAdvert[d][adBusy] = false;
				gAdvert[d][adCheked] = false;
				gAdvert[d][adCheking] = false;
				gAdvert[d][adTime] = 0;
				gAdvert[d][adVIP] = false;
			}
			else {
				strdel(gAdvert[d][adSender],0,24);
				gAdvert[d][adPhone] = 0;
				strdel(gAdvert[d][adText],0,100);
				strdel(gAdvert[d][adCheker],0,24);
				gAdvert[d][adBusy] = false;
				gAdvert[d][adID] = -1;
				gAdvert[d][adCheked] = false;
				gAdvert[d][adCheking] = false;
				gAdvert[d][adTime] = 0;
				gAdvert[d][adVIP] = false;
			}
		}
	}
	if(gAdvertCount > 0) gAdvertCount--;
	return 1;
}
CB: drug_effect(playerid) {
	new hour, minute;
	gettime(hour, minute);
	SetPlayerTime(playerid, hour, minute);
	SetPlayerWeather(playerid, 2);
	SetPlayerDrunkLevel(playerid, 0);
	return 1;
}
CMD:alogin(playerid, params[]) {
	if(GetPVarInt(playerid, "check_alogin") > gettime()) return true;
	if(dostup[playerid] == 1) return ErrorMessage(playerid, "Ви уже авторизировались в адмін-панели.");
	new query[156];
	format(query, sizeof(query), "SELECT * FROM `admin` WHERE `Name` = '%s'", player_name[playerid]);
	mysql_tquery(connects, query, "alogin1", "i",playerid);
	SetPVarInt(playerid, "check_alogin", gettime()+5);
	return 1;
}
CMD:djlogin(playerid, params[]) {
	if(GetPVarInt(playerid, "check_alogin") > gettime()) return true;
	if(jdostup[playerid] == 1) return ErrorMessage(playerid, "Ви уже авторизировались как диджей.");
	new query[156];
	format(query, sizeof(query), "SELECT `lvl`,`nick` FROM `rjlist` WHERE `pid` = '%d'", PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "rjenter", "i",playerid);
	SetPVarInt(playerid, "check_alogin", gettime()+5);
	return 1;
}
CMD:ahelp(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	D(playerid,D_ADMC,DSL,""YELLOW"Адмін допомога",""YELLOW"1."W" Рівень [1]\n"YELLOW"2."W" Рівень [2]\n"YELLOW"3."W" Рівень [3]\n"YELLOW"4."W" Рівень [4]\n"YELLOW"5."W" Рівень [5]\n"YELLOW"6."W" Рівень [6]","Вибрати","Відміна");
	return 1;
}
stock SaveGZ(i) {
	new query[256];
	format(query, sizeof(query), "UPDATE `gangzone` SET `gang_owner`= '%d' WHERE `id` = '%d' LIMIT 1",GZInfo[i][gFrakVlad],GZInfo[i][gID]);
	mysql_pquery(connects,query);
	return 1;
}
stock send_disease(playerid) {
	SendOk(playerid,"Ви попали в зону розповсюдження захворювань");
	SendOk(playerid,"Радимо вам звернутися до медиків в любій із пунктів МЧС");
	SendOk(playerid,"(( Увага! Стан вашого життя (HP) буде падати значно швидше ))");
	PlayerInfo[playerid][pDisease][0] = 1;
	UpdatePlayerData(playerid,"pDisease_0",1);
	return 1;
}
stock active_accept(playerid) {
	if(TI[playerid][tDiceID] != INVALID_PLAYER_ID ||
	TI[playerid][tRaceID] != INVALID_PLAYER_ID ||
	GetPVarInt(playerid, "race_offer") ||
	GetPVarInt(playerid,"hi") ||
	GetPVarInt(playerid,"invstat") != -1 ||
	GetPVarInt(playerid, "lices") ||
	GetPVarInt(playerid, "skills") ||
	GetPVarInt(playerid, "uds") ||
	GetPVarInt(playerid, "udjur") ||
	GetPVarInt(playerid, "pass") ||
	GetPVarInt(playerid, "fpass") ||
	GetPVarInt(playerid, "medcard") ||
	GetPVarInt(playerid, "taxi_id") ||
	GetPVarInt(playerid, "tk_id") ||
	HealOffer[playerid] != INVALID_PLAYER_ID ||
	GetPVarInt(playerid, "repairoffee") ||
	GetPVarInt(playerid, "kiss") ||
	GetPVarInt(playerid, "drugoffee") ||
	GetPVarInt(playerid, "gunoffee") ||
	GetPVarInt(playerid, "ZoneOffer") ||	
	GetPVarInt(playerid, "sim_id_sell") ||
	GetPVarInt(playerid, "bizzProdaet") ||
	GetPVarInt(playerid, "hotelProdaet") ||
	GetPVarInt(playerid, "airProdaet") ||
	GetPVarInt(playerid, "houseSeller") ||
	GetPVarInt(playerid, "carProdaet")) return 1;
	else return 0;
}
CMD:a(playerid, params[])
{
        if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
        if(sscanf(params,"s[100]",params[0])) return SendEsp(playerid, "/a [текст]");
		new string[128*4];
        if(strlen(PlayerInfo[playerid][pPrefix]) > 1) format(string,sizeof(string), "{a3acb1}[A] %s "W"%s[%d]"W": %s", PlayerInfo[playerid][pPrefix], player_name[playerid], playerid, params[0]);
        else format(string,sizeof(string), "{a3acb1}[A] "W"%s "W"%s[%d]"W": %s", arank[PlayerInfo[playerid][pAdmin]], player_name[playerid], playerid, params[0]);
        SendAdminMessage(COLOR_WHITE, string);
        return 1;
}
CMD:kick(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(GetPVarInt(playerid,"kikk")>gettime()+18) return Kick(playerid);
	if(GetPVarInt(playerid,"kik") > gettime()) {
	    ErrorMessage(playerid,"Можно раз в 7 секунд");
		SetPVarInt(playerid,"kikk",gettime()+3);
		return false;
	}
	new text[130],string[356],giveplayerid;
	if(sscanf(params, "us[128]",giveplayerid,text)) return SendEsp(playerid, "/kick [playerid] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви вказали свій ID");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin]) return 1;
	if(GetString(player_name[giveplayerid],"Klaus_Gurren") || GetString(player_name[giveplayerid],"Klaus_Gurren")
	|| GetString(player_name[giveplayerid],"Klaus_Gurren")) return 1;
    if(IsAIP(text))return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не більше 30 символов");
	format(string, 128, "Адміністратор %s кикнул %s. Причина: %s",player_name[playerid],player_name[giveplayerid],text);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	WriteLog(LOG_KICK,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_KICK] ++;
	new hour,minute;
	new year,month,day;

	getdate(year, month, day);
	gettime(hour,minute);
	static const f_str[] = "\
"W"Увага! Вы были "NO"кикнуты"W" с сервера.\n\n\
"W"Кикнул: "NO"%s\n\
"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
"W"Причина: "ORANGE"%s\n\n\
"W"Если вы считаете, что это помилка, сделайте скриншот(F8) данного окна,\n\
иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid], day, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрити", "");
	Kick(giveplayerid);
	SetPVarInt(playerid,"kik",gettime()+7);
	return true;
}
alias:pm("ans");
CMD:pm(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new text[130],string[144],giveplayerid;
    if(sscanf(params, "us[128]",giveplayerid,text)) return SendEsp(playerid, "/pm [playerid] [текст]");
    if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(strlen(text) > 80) return ErrorMessage(playerid,"Не більше 80 символов");
	if(IsAIP(text)) return 1;
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Не можна ответить самому себе");
	format(string, sizeof(string), "Ответ от %s[%i]: %s",player_name[playerid],playerid,text);
	SendClientMessage(giveplayerid, 0xffa141FF, string);
	format(string, sizeof(string), ""W"%s[%i] {FFa500}К "W"%s[%i]: {FFa500}%s",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid,text);
	SendAdminMessage(0xFfa500AA, string);
	if(!rep_system) gAdmin[playerid][ADMIN_PM] ++;
	PlayerPlaySound(giveplayerid, 4203, 0.0, 0.0, 0.0);
    return true;
}
CMD:reps(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(!rep_system) return ErrorMessage(playerid,"Временно недоступно. Воспользуйтесь /pm");
	for(new i;i<MAX_REPORTS;i++) {
		if(PlayerReport[i] != -1) {
			if(ReportSlot[i] == 1) continue;
			new string[400];
			new stringer[150];
			format(string, sizeof(string), ""W"Жалоба от %s[%i]\n\n{f6f6d9}%s\n", player_name[PlayerReport[i]], PlayerReport[i], TextReport[i]);
			D(playerid,D_REPORT_1,DSI, ""YELLOW"Репорт",string,"Прийняти","Відміна");
			ReportID[playerid] = i;
			ReportSlot[i] = 1;
			format(stringer, sizeof stringer, "Адміністратор %s[%d] обрабатывает Вашу жалобу",player_name[playerid],playerid);
			SendUse(PlayerReport[i], stringer);
			return 1;
		}
	}
	ErrorMessage(playerid, "Репорт пуст");
	return 1;
}
CMD:gg(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid,"/gg [id]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	new string[128];
	format(string,sizeof(string),"Ответ от %s[%i]: Приятной Вам ігри на сервере "FullServName"",player_name[playerid],playerid);
	SendClientMessage(giveplayerid, 0xffa141FF, string);
	format(string, sizeof(string), ""W"%s[%i] {FFa500}К "W"%s[%i]: {FFa500}Приятной Вам ігри на сервере "FullServName"",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	SendAdminMessage(0xFfa500AA, string);
	PlayerPlaySound(giveplayerid, 4203, 0.0, 0.0, 0.0);
	return true;
}
CMD:mute(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new time, text[33],string[144],giveplayerid;	
	if(sscanf(params, "uds[32]",giveplayerid,time,text)) return SendEsp(playerid, "/mute [playerid] [хвилини] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви вказали свій ID");
	if(PlayerInfo[giveplayerid][pMute]) return ErrorMessage(playerid,"У гравця уже є заглушка чата");
    if(IsAIP(text))return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Причина повинна бути меньше 30 символов");
 	if(time > 300) return ErrorMessage(playerid,"Видати заглушку чата можно максимум на 300 хвилин");
	if(GetPVarInt(playerid,"ban")>gettime()) return ErrorMessage(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	PlayerInfo[giveplayerid][pMute] = time*60;
	UpdatePlayerData(giveplayerid,"mute",PlayerInfo[giveplayerid][pMute]);
	format(string, sizeof(string), "Адміністратор %s заглушив чат %s на %d хвилин. Причина: %s",player_name[playerid],player_name[giveplayerid], time, text);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	SendOk(giveplayerid, "Час до зняття заглушки чата: "W"/time");
	gAdmin[playerid][ADMIN_MUTE] ++;
	WriteLog(LOG_MUTE,player_name[playerid],player_name[giveplayerid],text);
	return true;
}
CMD:offunmute(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new string[220],giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/offunmute [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець онлайн");
    format(string, sizeof(string), "SELECT `mute` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
    new mute = 0;
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_int(0, "mute", mute);
		if(mute == 0) {
			ErrorMessage(playerid, "У данного гравця немає заглушки чата");
			cache_delete(result);
			return 1;
		}
		new query[128];
		format(query, sizeof query, "UPDATE `accounts` SET `mute` = '0' WHERE `Name` = '%s' LIMIT 1", params);
		mysql_pquery(connects,query);
		new str[128];
		format(str, sizeof(str), "[A] %s[%d] снят бан чата в оффлайн гравцю %s", player_name[playerid], playerid, params);
		AdmMSG(0xAFAFAFAA, str,1);
	}
	cache_delete(result);
	return 1;
}
CMD:unmute(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[144],giveplayerid;	
	if(sscanf(params, "u",giveplayerid)) return SendEsp(playerid, "/unmute [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(!PlayerInfo[giveplayerid][pMute]) return ErrorMessage(playerid,"У гравця нет бана чата");
	PlayerInfo[giveplayerid][pMute] = 0;
	UpdatePlayerData(giveplayerid,"mute",0);
	format(string, sizeof(string), "Адміністратор %s снял бан чата у %s",player_name[playerid],player_name[giveplayerid]);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	WriteLog(LOG_UNMUTE,player_name[playerid],player_name[giveplayerid],"снял бан чата");
	return true;
}
CMD:offmute(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new name[MAX_PLAYER_NAME],time,reason[31],giveplayerid;

	if(sscanf(params, "s[20]is[30]",name,time,reason)) return SendEsp(playerid, "/offmute [ник] [хвилини] [причина]");
	if(strlen(reason) > 30) return ErrorMessage(playerid,"Причина повинна бути меньше 30 символов");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Даний гравець онлайн");
	if(time > 300 || time < 5) return ErrorMessage(playerid, "Від 5 до 300 хвилин");
	if(GetPVarInt(playerid,"ban")>gettime()) return ErrorMessage(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", name);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid, "Цей гравець не знайдений");
	new query_str[128];
	format(query_str, sizeof(query_str), "UPDATE `accounts` SET mute = '%d' WHERE BINARY Name = '%s'",time*60,name);
	mysql_tquery(connects,query_str);
	cache_delete(result);

	new string[144];
	format(string, sizeof(string), "Ви выдали мут гравцю %s на %d хвилин",name,time);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	format(string, sizeof(string), "[A] (OFFMUTE) %s[%d] выдал мут гравцю %s на %d хвилин. Причина: %s",player_name[playerid],playerid,name,time,reason);
	AdmMSG(0xAFAFAFAA, string,1);
	gAdmin[playerid][ADMIN_MUTE] ++;
	WriteLog(LOG_MUTE,player_name[playerid],name,reason);
	return 1;
}
CMD:weap(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return	SendEsp(playerid, "/weap [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	new Gun[13], Ammos[13],string[700];
	for(new i = 0; i < 13; i++) {
		GetPlayerWeaponData(giveplayerid, i, Gun[i], Ammos[i]);
		format(string, sizeof(string), "%s"W"Slot: %i\t Weaponid: %i\t Ammo: %i\n", string, i, Gun[i], Ammos[i]);
		if(i == 12) format(string, sizeof(string), "%s\n",string);
	}
	D(playerid, DIALOG_NONE, DSM, player_name[giveplayerid], string, "Закрити", "");
	return 1;
}
CMD:cweap(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new id;
	if(sscanf(params,"u",id)) return SendEsp(playerid, "/cweap [id]");
	new string[150];
   	DelGun(id);
   	format(string,sizeof(string),"Ви відібрали зброю у гравця %s[%d]",player_name[id],id);
   	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	return true;
}
CMD:admins(playerid) {
 	if(PlayerInfo[playerid][pAdmin] < 1 && !PlayerInfo[playerid][pVips]) return true;
 
	new countleader = 0;
	new string[2000],str[156];
	
	string = "ID\tНік\tПосада\tРівень\n";
	foreach(new i:Player) {
		if(!IsPlayerConnected(i) || (!TI[i][tLogin]) || (PlayerInfo[i][pAdmin] <= 0)) continue;
		if(strlen(PlayerInfo[playerid][pPrefix]) > 1) format(str, sizeof(str), ""W"%i\t%s\t%s\t%d%s\n",i,player_name[i],PlayerInfo[playerid][pPrefix],PlayerInfo[i][pAdmin],TI[i][tAFK]>=3?("{ffa800} [AFK]"):("")),strcat(string,str);
		else format(str, sizeof(str), ""W"%i\t%s\t%s\t%d%s\n",i,player_name[i],arank[PlayerInfo[playerid][pAdmin]],PlayerInfo[i][pAdmin],TI[i][tAFK]>=3?("{ffa800} [AFK]"):("")),strcat(string,str);
		countleader++;
	}
	if(countleader > 0) {
		D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Адміністрація",string, "Закрити", "");
		
		new str_adm[128];
		format(str_adm, sizeof(str_adm), "в мережі "W"%i{f6f6d9} адміністратор(ів)", countleader);
		SendOk(playerid,str_adm);
	}
	else D(playerid, DIALOG_NONE, DSM, ""YELLOW"Адміністрація",""W"Немає адміністраторів в мережі", "Закрити", "");
	return 1;
}
CMD:afklist(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new count = 0 ;
	new string[3000];
    foreach(new i : Player) {
    	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(TI[i][tAFK] < 3) continue;
		new str[128];
		format(str, sizeof(str), ""W"%s[%d] | %d LVL | "NO"AFK: %d\n", player_name[i], i, PlayerInfo[i][pLevel], TI[i][tAFK]);
		strcat (string, str);
		count++;
	}
	if(count == 0) return ErrorMessage(playerid,"Немає гравців в AFK");
    else D(playerid,DIALOG_NONE,DSM, ""YELLOW"Гравець в AFK", string, "Закрити", "");
	return 1 ;
}
CMD:jail(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new time,text[31],string[144],giveplayerid;
    if(sscanf(params, "uds[30]",giveplayerid,time,text)) return SendEsp(playerid, "/jail [playerid] [хвилини] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid, "Не можна посадить себя в тюрьму");
	if(PlayerInfo[giveplayerid][pJailTime]) return ErrorMessage(playerid, "Гравець в тюрьме");
	if(time > 300 || time < 5) return ErrorMessage(playerid, "От 5 до 300 хвилин");
	if(strlen(text) > 30) return ErrorMessage(playerid,"Причина повинна бути меньше 30 символов");
    if(IsAIP(text))return 1;
	format(string, sizeof(string), "Ви посадили %s в тюрьму",player_name[giveplayerid]);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	format(string, sizeof(string), "Адміністратор %s посадил в ДеМорган %s на %d хвилин. Причина: %s",player_name[playerid],player_name[giveplayerid],time,text);
	SendClientMessageToAll(COLOR_LIGHTRED, string);

	DelGun(giveplayerid);
	PlayerInfo[giveplayerid][pJail] = 5;
	PlayerInfo[giveplayerid][pJailTime] = time*60;

	UpdatePlayerData(giveplayerid,"pJailTime", PlayerInfo[giveplayerid][pJailTime]);
	UpdatePlayerData(giveplayerid,"pJail", 5);

	GameTextForPlayer(giveplayerid, "~w~YOU IN ~R~JAIL", 5000, 4);
	format(string, sizeof(string), "Ви были посажены в тюрьму адміністратором %s на %i хвилин(ы). Причина: %s",player_name[playerid],time,text);
	SendOk(giveplayerid, string);
	SendOk(giveplayerid, "Время до выхода на свободу: "W"/time");
	PlayerSpawn(giveplayerid);
	if(giveplayerid != playerid) gAdmin[playerid][ADMIN_JAIL] ++;
	WriteLog(LOG_JAIL,player_name[playerid],player_name[giveplayerid],text);
	return true;
}
CMD:offunjail(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new string[220],giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/offunjail [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець онлайн");
    format(string, sizeof(string), "SELECT `pJailTime` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
    new jail = 0;
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_int(0, "pJailTime", jail);
		if(jail == 0) {
			ErrorMessage(playerid, "Цей гравець не находится в КПЗ");
			cache_delete(result);
			return 1;
		}
		new query[128];
		format(query, sizeof query, "UPDATE `accounts` SET `pJailTime` = '0',`pJail` = '0' WHERE `Name` = '%s' LIMIT 1", params);
		mysql_pquery(connects,query);
		new str[128];
		format(str, sizeof(str), "[A] %s[%d] вытащил изз КПЗ в оффлайн гравця %s", player_name[playerid], playerid, params);
		AdmMSG(0xAFAFAFAA, str,1);
	}
	cache_delete(result);
	return 1;
}
CMD:offjail(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new name[MAX_PLAYER_NAME],time,reason[31],giveplayerid;
	if(sscanf(params, "s[20]is[30]",name,time,reason)) return SendEsp(playerid, "/offjail [ник] [хвилини] [причина]");
	if(strlen(reason) > 30) return ErrorMessage(playerid,"Причина повинна бути меньше 30 символов");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець онлайн");
	if(time > 300 || time < 5) return ErrorMessage(playerid, "Від 5 до 300 хвилин");

	new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1", name);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid, "Цей гравець не знайдений");
	new query_str[128];
	format(query_str, sizeof(query_str), "UPDATE `accounts` SET pJail = '5',pJailTime = '%d' WHERE BINARY Name = '%s'",time*60,name);
	mysql_tquery(connects,query_str);
	cache_delete(result);

	new string[128];
	format(string, sizeof(string), "Ви посадили %s в тюрьму на %d хвилин",name,time);
	SendClientMessage(playerid, COLOR_LIGHTRED, string);

	format(string, sizeof(string), "Адміністратор %s посадив в ДеМорган %s на %d хвилин. Причина: %s",player_name[playerid],name,time,reason);
	SendClientMessageToAll(COLOR_LIGHTRED, string);

	gAdmin[playerid][ADMIN_JAIL] ++;
	WriteLog(LOG_JAIL,player_name[playerid],name,reason);
	return 1;
}
CMD:unjail(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendEsp(playerid, "/unjail [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(!PlayerInfo[giveplayerid][pJailTime] && PlayerInfo[giveplayerid][pJail] == 0) return ErrorMessage(playerid, "Гравець не в тюрьме");
	new string[128];
	format(string, sizeof(string), "Ви освободили %s", player_name[giveplayerid]);
	SendClientMessage(playerid, 0x09B000AA, string);
	format(string, sizeof(string), "[A] %s[%d] выпустил гравця %s[%d] из тюрьмы.",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(CADMIN_INFO,string,3);
	format(string, sizeof(string), "Адміністратор %s[%d] выпустил Вас на свободу!",player_name[playerid],playerid);
	SendOk(giveplayerid,string);
	PlayerInfo[giveplayerid][pJailTime] = 0;
	PlayerInfo[giveplayerid][pJail] = 0;
	UpdatePlayerData(giveplayerid,"pJailTime", 0);
	UpdatePlayerData(giveplayerid,"pJail", 0);
	PlayerSpawn(giveplayerid);
	WriteLog(LOG_UNJAIL,player_name[playerid],player_name[giveplayerid],"Випустил из тюрьмы");
	return 1;
}
CMD:prisoners(playerid, const params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;

	new string[(57+MAX_PLAYER_NAME-4+3+11+1)*30];
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!PlayerInfo[i][pJailTime]) continue;
		format(string, sizeof(string), "%s"ORANGE"%s"W" | ID: "YELLOW"%d"W" | Время: "GREEN"%d\n", string, player_name [i], i, PlayerInfo[i][pJailTime]);
	}
	if(isnull(string)) ErrorMessage(playerid, "Затриманих немає");
	else D(playerid, DIALOG_NONE, DSM, ""YELLOW"Список затриманих", string, "Закрити", "");
	return 1;
}
alias:aad("msg");
CMD:aad(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 100) return SendEsp(playerid,"/aad [повідомлення]");
	if(GetPVarInt(playerid,"aad") > gettime() && PlayerInfo[playerid][pAdmin] < 4) {
	    ErrorMessage(playerid,"Можно раз в 15 секунд");
		return false;
	}
	SetPVarInt(playerid,"aad",gettime()+15);
	
	new string[128*4];
	if(strlen(PlayerInfo[playerid][pPrefix]) > 1) format(string, sizeof(string), "%s"W" %s: %s", PlayerInfo[playerid][pPrefix], player_name[playerid], params);
	else format(string, sizeof(string), "%s"W" %s: %s", arank[PlayerInfo[playerid][pAdmin]], player_name[playerid], params);
	SendClientMessageToAll(0xFFCD00AA,string);
	return 1;
}
CMD:gettime(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendEsp(playerid, "/gettime [ид гравця]");
	new string[800];
	if(PlayerInfo[giveplayerid][pMute] > 0) {
		format(string, 128, "Осталось молчать: "YELLOW"%d секунд", PlayerInfo[giveplayerid][pMute]);
		SendOk(playerid, string);
	}
	if(PlayerInfo[giveplayerid][pJailTime] > 0) {
		format(string, 128, "Осталось сидеть: "YELLOW"%d секунд", PlayerInfo[giveplayerid][pJailTime]);
		SendUse(playerid, string);
	}
	new hour, minuite, second, year, month, day, saturday = 1310155200, w = gettime(), day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24) {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	static const Names_Months[12][12] = {"січень","лютий","березень","квітень","травень","червень","липень","серпень","вересень","жовтень","листопад","грудень"};
    static const Names_Days[7][12] = {"субота","неділя","понеділок","вівторок","середа","четвер","п'ятниця"};
    format(string, sizeof(string), "\
		"W"Поточний час: "YELLOW"%02d:%02d\n\
		"W"Сьогоднішня дата: {33AA33}%s, %d %s %04d м.\n\n\
		"W"Час в грі за годину:\t\t"YELLOW"%d мин\n\
		"W"Час в грі за сьогодні:\t"YELLOW"%s\n\
		"W"Час в грі за вчора:\t"YELLOW"%s\n\
		"W"AFK за сьогодні:\t\t"ORANGE"%s\n\
		"W"AFK за вчора:\t\t\t"ORANGE"%s",
		hour, minuite,
		Names_Days[day_week], day, Names_Months[month-1], year,
		PlayerInfo[giveplayerid][pPlayTime][0],
		ConvertsCmdTime(gOnlinePlayer[giveplayerid][0]),
		ConvertsCmdTime(gOnlinePlayer[giveplayerid][1]),
		ConvertsCmdTime(gOnlinePlayerAFK[giveplayerid][0]),
		ConvertsCmdTime(gOnlinePlayerAFK[giveplayerid][1]),
		BonusInfo[act_timerullet]-PlayerInfo[giveplayerid][pPlayTime][1]);
	D(playerid, DIALOG_NONE, DSM, ""YELLOW"Точний час", string, "Закрити", "");
	return 1;
}
CMD:gm(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	if(player_gm{playerid}) {
		player_gm{playerid} = 0;
		SendOk(playerid,"ГМ отключен");
	}
	else player_gm{playerid} = 1,SendOk(playerid,"ГМ включен");
	return 1;
}
CMD:alock(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	GetVehicleParamsEx(GetNearestVehicle(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
	switch(doors) {
	    case 0: GameTextForPlayer(playerid, "~r~LOCK", 5000, 3), doors_status(GetNearestVehicle(playerid), playerid);
		case 1: GameTextForPlayer(playerid, "~g~UNLOCK", 5000, 3), doors_status(GetNearestVehicle(playerid), playerid);
	}
	return true;
}
/*CMD:ram(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new houseid = TI[playerid][tSelectHouse];
	SetPlayerPosAC(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][0],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][1],hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][2],houseid+1,hinterior_info[gHouses[houseid][houseHint]][h_interior]);
	SetPlayerFacingAngle(playerid,hinterior_info[gHouses[houseid][houseHint]][h_pos_exit][3]);
	return true;
}*/
CMD:tp(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 && dostup[playerid] == 0 && PlayerInfo[playerid][pYoutube] == 0) return true;
	D(playerid, D_TP_LIST, DSL,""YELLOW"Телепорт", ""YELLOW"1."W" Організації\n"YELLOW"2."W" Роботи\n"YELLOW"3."W" Вокзали\n"YELLOW"4."W" Банки\n"YELLOW"5."W" Транспортні компанії\n"YELLOW"6."W" Таксопарки\n"YELLOW"7."W" Інше", "Вибрати", "Відміна");
	return true;
}
CMD:re(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 && dostup[playerid] == 0 && PlayerInfo[playerid][pYoutube] == 0) return true;
	if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Заборонено починати слідити з транспорта");
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendEsp(playerid, "/re(con) [ид гравця]");
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(!TI[giveplayerid][tLogin]) return ErrorMessage(playerid,"Гравець не авторизувався");
	
	if(SERIU[playerid][sID] == INVALID_PLAYER_ID) {
		//if(TI[playerid][tSpectate]==true) SpecPl(playerid,false);
		TI[playerid][preOrg] = PlayerInfo[playerid][pMember];
		TI[playerid][preOrgg] = PlayerInfo[playerid][pRank];
		GetPlayerPos(playerid,TI[playerid][Admin_X],TI[playerid][Admin_Y],TI[playerid][Admin_Z]);
		avir[playerid] = GetPlayerVirtualWorld(playerid);
		aint[playerid] = GetPlayerInterior(playerid);
		//TogglePlayerControllable(playerid,true);
		PlayerTextDrawShow(playerid,RECON[playerid]);
	}
	start_work[playerid] = true;
	PlayerInfo[playerid][pMember] = PlayerInfo[giveplayerid][pMember];
	PlayerInfo[playerid][pRank] = 1;
	TI[playerid][pOldSkin] = GetPlayerSkin(playerid);
	SpecPlayer(playerid,giveplayerid);
	ShowMenuForPlayer(specmenu,playerid);
	return 1;
}
CMD:reoff(playerid,const params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 && dostup[playerid] == 0 && PlayerInfo[playerid][pYoutube] == 0) return true;
	Lastspec[playerid]=SERIU[playerid][sID];
 	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING) SpecPl(playerid,false);
	HideMenuForPlayer(specmenu,playerid);
	SettingSpawn(playerid);
	return 1;
}
CMD:getskills(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/getskills [id гравця]");
    if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	new strname[56];
	format(strname, sizeof(strname), "{ffcf00}Навыки владения зброї %s", player_name[giveplayerid]);
	new strkill[1006];
	new points[6];
    points[0] = 100 - PlayerInfo[giveplayerid][pGunSkill][0];
	points[1] = 100 - PlayerInfo[giveplayerid][pGunSkill][1];
	points[2] = 100 - PlayerInfo[giveplayerid][pGunSkill][2];
	points[3] = 100 - PlayerInfo[giveplayerid][pGunSkill][3];
	points[4] = 100 - PlayerInfo[giveplayerid][pGunSkill][4];
	points[5] = 100 - PlayerInfo[giveplayerid][pGunSkill][5];
	format(strkill,1000,""W"SD-Pistol:\t"YELLOW"%s "W"%d/100%%\nDesert Eagle:\t"YELLOW"%s "W"%d/100%%\nShotGun:\t"YELLOW"%s "W"%d/100%%\nMP5\t\t"YELLOW"%s "W"%d/100%%\nAK47:\t\t"YELLOW"%s "W"%d/100%%\nM4:\t\t"YELLOW"%s "W"%d/100%%",
	ToDevelopSkills(PlayerInfo[giveplayerid][pGunSkill][0],points[0]),PlayerInfo[giveplayerid][pGunSkill][0],
	ToDevelopSkills(PlayerInfo[giveplayerid][pGunSkill][1],points[1]),PlayerInfo[giveplayerid][pGunSkill][1],
	ToDevelopSkills(PlayerInfo[giveplayerid][pGunSkill][2],points[2]),PlayerInfo[giveplayerid][pGunSkill][2],
	ToDevelopSkills(PlayerInfo[giveplayerid][pGunSkill][3],points[3]),PlayerInfo[giveplayerid][pGunSkill][3],
	ToDevelopSkills(PlayerInfo[giveplayerid][pGunSkill][4],points[4]),PlayerInfo[giveplayerid][pGunSkill][4],
	ToDevelopSkills(PlayerInfo[giveplayerid][pGunSkill][5],points[5]),PlayerInfo[giveplayerid][pGunSkill][5]);
	D(playerid, DIALOG_NONE, DSM, strname, strkill, "Закрити","");
	return 1;
}
//-----------------------------------------[2 рівень]-------------------------------------------//
CMD:aimcheck(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(SERIU[playerid][sID] == INVALID_PLAYER_ID) return ErrorMessage(playerid,"Ви ни за кем не следите");
	new targetid = GetPlayerTargetPlayer(SERIU[playerid][sID]);
	if(targetid != INVALID_PLAYER_ID && GetPlayerState(targetid) == 1 && TI[targetid][tAFK] < 3)  {
		new Float:x[2], Float:y[2], Float:z[2], Float:a;
		GetPlayerPos(SERIU[playerid][sID], x[0], y[0], z[0]);
		GetPlayerFacingAngle(SERIU[playerid][sID], a);
		GetXYInFrontOfPoint(x[0], y[0], a, -3.0);
		new Float:aimhp;
		GetPlayerHealth(targetid,aimhp);
		SetPVarFloat(targetid,"aimtest",aimhp);
		GetPlayerPos(targetid, x[1], y[1], z[1]);
		SetPlayerPosAC(targetid, x[0], y[0], z[0],TI[targetid][tVirtualWorld], TI[targetid][tInterior]);
		SetPlayerHealth(targetid,300);
		SendClientMessage(targetid,COLOR_YELLOW,"Не волнуйтесь! Это обычная проверка на аим");
		SetTimerEx("onPTMCheck", 500, false, "iifffi", SERIU[playerid][sID], targetid, x[1], y[1], z[1], playerid);
		new string[128];
		format(string, sizeof string, "[A] %s[%d] проверяет гравця %s[%d] на аим", player_name[playerid],playerid, player_name[SERIU[playerid][sID]], SERIU[playerid][sID]);
		SendAdminMessage(COLOR_GREY, string);
	}
	else ErrorMessage(playerid,"Гравець ни в кого не целится");
	return 1;
}
CMD:get(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 23)  return SendEsp(playerid,"/get [Nick Name]");
	new query[256];
	format(query, sizeof(query), "SELECT `pID`, `Name`, `pCash`, `pLevel`, `pIpReg`, `pvIp`, `pDataReg`, `donatemoney` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
	mysql_tquery(connects, query, "get_info_player", "i", playerid);
	return 1;
}
CMD:spcar(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	return true;
}
CMD:gotocar(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(sscanf(params,"d",params[0])) return SendEsp(playerid, "/gotocar [id]");
	if(!GetVehicleModel(params[0])) return ErrorMessage(playerid, "Данной машини на сервере нет");
	new Float: x,Float:y,Float:z;
	GetVehiclePos(params[0],x,y,z);
	SetPlayerPosAC(playerid,x,y,z,GetVehicleVirtualWorld(params[0]),0);
	return true;
}
CMD:getherecar(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new id, string[150], Float:X, Float:Z, Float:Y;
	if(sscanf(params,"d",id)) return SendEsp(playerid, "/getherecar [id]");
	if(!GetVehicleModel(params[0])) return ErrorMessage(playerid, "Данной машини на сервере нет");
	GetPlayerPos(playerid,X,Y,Z);
	SetVehicleVirtualWorld(id,GetPlayerVirtualWorld(playerid));
	SetVehiclePos(id, X-4, Y, Z+1);
	format(string,sizeof(string),"Ви телепортировали к себе авто ID: "W"%d",id);
	SendOk(playerid,string);
	return true;
}
alias:goto("G");
CMD:goto(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/g(oto) [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	new Float:X, 
		Float:Y, 
		Float:Z, 
		Float:A;
	switch(GetPlayerState(giveplayerid)) {
		case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER: {
			GetVehiclePos(GetPlayerVehicleID(giveplayerid), X, Y, Z);
			GetVehicleZAngle(GetPlayerVehicleID(giveplayerid), A);
		}
		case PLAYER_STATE_ONFOOT: {
			GetPlayerPos(giveplayerid, X, Y, Z);
			GetPlayerFacingAngle(giveplayerid, A);
		}
		default: return ErrorMessage(playerid, "Гравець не заспавнился");
	}
	switch(GetPlayerState(playerid)) {
		case PLAYER_STATE_ONFOOT, PLAYER_STATE_PASSENGER: {
			SetPlayerPosAC(playerid,X,Y+1.5,Z,GetPlayerVirtualWorld(giveplayerid),GetPlayerInterior(giveplayerid));
			SetPlayerFacingAngle(playerid,A);
		}
		case PLAYER_STATE_DRIVER: {
			new vehicleid = GetPlayerVehicleID(playerid);
			SetVehiclePos(vehicleid, X, Y+1.5, Z);
			SetVehicleZAngle(vehicleid, A);
			LinkVehicleToInterior(vehicleid,GetPlayerInterior(giveplayerid));
			SetVehicleVirtualWorld(vehicleid,GetPlayerVirtualWorld(giveplayerid));
		}
		default: return 1;
	}
	if(TI[giveplayerid][tSelectedBusinessID]) TI[playerid][tSelectedBusinessID] = TI[giveplayerid][tSelectedBusinessID];
	if(TI[giveplayerid][tSelectHouse]) TI[playerid][tSelectHouse] = TI[giveplayerid][tSelectHouse];
	return 1;
}
CMD:hp(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 && dostup[playerid] == 0 && PlayerInfo[playerid][pYoutube] == 0) return true;
	SetPlayerHealth(playerid, 100);
	SetFullness(playerid, 100);
	return true;
}
alias:spawn("sp");
CMD:spawn(playerid, const params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	PlayerSpawn(playerid);
	return true;
}
CMD:fv(playerid, const params[]) {
    if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(IsPlayerInAnyVehicle(playerid)) {
		SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
		RepairVehicle(GetPlayerVehicleID(playerid));
		return true;
	}
	else {
		if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/fv [ID гравця]");
		new model = GetVehicleModel(giveplayerid);
		if(!model) return ErrorMessage(playerid,"Цей гравець не в автомобиле");
		SetVehicleHealth(GetPlayerVehicleID(giveplayerid), 1000.0);
		RepairVehicle(GetPlayerVehicleID(giveplayerid));
		return 1;
	}
}
CMD:atipster(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;

	new fraction_member;		
	if(sscanf(params,"i", fraction_member)) return SendEsp(playerid, "/atipster [ID фракції]");
	if(!(1 <= fraction_member <= MAX_FRACTIONS)) return SendEsp(playerid, "/atipster [ID фракції]");

	if(GetPVarInt(playerid,"admin_tipster")) {
		SendOk(playerid,"Ви отключили прослушку");
		DeletePVar(playerid,"admin_tipster");
	}
	else {
		SetPVarInt(playerid,"admin_tipster", fraction_member);
		new string[70];
		format(string, sizeof(string),"Ви начали прослушку фракції "W"%s", FI[fraction_member][fName]);
		SendOk(playerid,string);
		SendOk(playerid,"Використовуйте /atipster ще раз щоб отключить прослушку");
	}	
	return 1;
}
CMD:astats(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/astats [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	ShowStats(playerid,giveplayerid,1);
	return true;
}
//-----------------------------------------[3 рівень]-------------------------------------------//
CMD:tskin(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0 || PlayerInfo[playerid][pYoutube] == 0) return true;
	new skin,giveplayerid;
    if(sscanf(params, "ud", giveplayerid,skin)) return SendEsp(playerid, "/tskin [id гравця] [id скина]");
	if(skin > 311 || skin < 1) return ErrorMessage(playerid, "Неправильный ID скина!");
	A_SetPlayerSkin(giveplayerid, skin);
	SendOk(giveplayerid,"Адміністратор видав вам тимчасовий скін");
	return true;
}
CMD:skin(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new skin;
    if(sscanf(params, "d",skin)) return SendEsp(playerid, "/skin [id скина]");
	if(skin > 311 || skin < 1) return ErrorMessage(playerid, "Неправильный ID скина!");

	PlayerInfo[playerid][pSkin] = skin;
	A_SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	UpdatePlayerData(playerid,"Skin",PlayerInfo[playerid][pSkin]);
	return true;
}
CMD:inf(playerid, params[]) { 
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new string[150];
	format(string, sizeof(string), "Инт %d Мир %d",GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid));
	SendOk(playerid,string);
	return true;
}
CMD:theftrob(playerid, params[]) { //угон
	if(theftCheck[playerid][1] != 4)  return ErrorMessage(playerid,"Тебе не нужно взломывать дом!");
	TogglePlayerControllable(playerid, false);
	TI[playerid][tProcess][0] = 0;
	TI[playerid][tProcess][1] = 10;
	JobTempProcess[playerid] = 16;
	RandomYareNforJOBS(playerid);
	PlayerTextDrawColor(playerid, YandNsysTDPlayer[playerid][1], -1);
	for(new YN = 0;YN < 3;YN++) {
		TextDrawShowForPlayer(playerid, YandNsysTD[YN]);
		if(YN < 2) PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][YN]);
	}
	return true;
}
alias:theftprogress("thprogress","progresstheft");  //угон
CMD:theftprogress(playerid, params[]) {  //угон
	new string[850];
	static const f_str[] = ""O"_________________________________________________________________________\n\n\
"W"Навык автоугона:\n\n\
"W"Ваш рівень угона: "YELLOW"%d\n\
"W"Прогресс: "YELLOW"%d/%d машин\n\n\
"W"Скилл автоугонщника:\n\
1. С 1 LvL з'являється можливість взяти Faggio для задания у актеров\n\
2. С 5 LvL транспорт для задания заменяется на BMX.\n\
3. С 10 LvL транспорт для задания заменяется на PSJ - 600.\n\
4. С 15 LvL з'являється можливість вскрывать любой вид транспорта вне работы Автоугонщика.\n\
5. С 20 LvL з'являється можливість позвонить Jackson'y на номер 1218181 для получения задания.\n\
6. С 25 LvL з'являється можливість вскрывать машину без відмичок.\n\n\
"O"_________________________________________________________________________";
	
	format(string,sizeof(string),f_str,PlayerInfo[playerid][ptheftSkill],PlayerInfo[playerid][ptheftExp],TheftSkillMax[PlayerInfo[playerid][ptheftSkill]]);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Перегляд навыка",string, "Закрити", "");
	return true;
}
CMD:theftcancel(playerid, params[]) {  //угон
	if(thefttime[playerid] == 0) return ErrorMessage(playerid, "Ви не начинали автоугон!");
	SendOk(playerid,"Ви отменили задание, ваш навык угона понижен.");
	DestroyDynamicArea(theftarea[playerid][0]);
	DisablePlayerCheckpoint(playerid);
	DestroyDynamicCP(theftCheck[playerid][0]);
	A_DestroyVehicle(theftIDveh[playerid][0]);
	theftIDveh[playerid][0] = INVALID_VEHICLE_ID;
	if(theftveh[playerid][0] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(theftveh[playerid][0]);
		theftveh[playerid][0] = INVALID_VEHICLE_ID;
	}
	theftplayer[playerid][0] = 1010;
	theftplayer[playerid][1] = 0;
	theftCheck[playerid][1] = 0;
	PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
	thefttime[playerid] = 0;
	if(PlayerInfo[playerid][ptheftExp] == 0) {
		if(PlayerInfo[playerid][ptheftSkill] != 0) PlayerInfo[playerid][ptheftSkill]--, UpdatePlayerData(playerid,"theftSkill",PlayerInfo[playerid][ptheftSkill]);
		PlayerInfo[playerid][ptheftExp] = TheftSkillMax[PlayerInfo[playerid][ptheftSkill]]-1, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
	} 
	else {
		if(PlayerInfo[playerid][ptheftExp] != 0) PlayerInfo[playerid][ptheftExp]--, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
	}
	return true;
}

 
CMD:theft(playerid, params[]) {  //угон
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    if(sscanf(params, "ddd",params[0],params[1], params[2])) return SendEsp(playerid, "/theft [id][LVL][EXP]");
	PlayerInfo[params[0]][ptheftSkill] = params[1];
	PlayerInfo[params[0]][ptheftExp] = params[2];
	UpdatePlayerData(playerid,"theftSkill",PlayerInfo[params[0]][ptheftSkill] );
	UpdatePlayerData(playerid,"theftExp",PlayerInfo[params[0]][ptheftExp]);
	SendClientMessage(playerid, -1, "Видано!");	
	return true;
}
stock FindNearestHouseCar(playerid) //угон
{
	new status;
   	foreach(new i:Player) {
   		if(playerid == i) continue; 
   		if(theftplayer[playerid][1] != 0) continue;
   		if(PlayerInfo[i][ptheftHome] > gettime() || PlayerInfo[i][ptheftHome] == 0) {
			if(house_car[i][0] != INVALID_VEHICLE_ID){
				 if(!IsPlayerInVehicle(i, house_car[i][0])) {
				 	if(gHouses[PlayerInfo[i][pHouse]-1][houseImprove][2] && GetVehicleVirtualWorld(house_car[i][0]) !=0 ) {
			 			new houseid = PlayerInfo[i][pHouse]-1;
		   				SendOk(playerid,"Розташування будинку де знаходиться машина успішно зазначено у вашому GPS");
		   				EnableGPSForPlayer(playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
						theftarea[playerid][0] = CreateDynamicSphere(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 15.0, 0, 0, playerid);
						theftCheck[playerid][0] = CreateDynamicCP(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 1.0,0,0,playerid);
						theftCheck[playerid][1] = 4;
						theftIDveh[playerid][1] = i;
						theftIDveh[playerid][0] = house_car[i][0];
						thefttime[playerid] = GetTheftTimelimit(playerid);
						PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
						status = 1;
						break;
				 	}
				 	else {
						new Float:vehx, Float:vehy, Float:vehz;
						GetVehiclePos(house_car[i][0], vehx, vehy, vehz);
						SendOk(playerid,"Розташування машини успішно відзначено у вашому GPS");
						EnableGPSForPlayer(playerid,vehx, vehy, vehz);
						theftarea[playerid][0] = CreateDynamicSphere(vehx, vehy, vehz, 15.0, 0, 0, playerid);
						theftIDveh[playerid][0] = house_car[i][0];
						theftIDveh[playerid][1] = i;
						theftCheck[playerid][1] = 1;
						theftIDveh[playerid][2] = 0;
						if(thefttime[playerid] == 0)thefttime[playerid] = GetTheftTimelimit(playerid);
						PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
						theftplayer[i][0] = playerid; 
						status = 1;
						break;
					}
				 }
			}
			if(house_car[i][1] != INVALID_VEHICLE_ID){
				 if(!IsPlayerInVehicle(i, house_car[i][1])){
				 	if(gHouses[PlayerInfo[i][pHouse]-1][houseImprove][2] && GetVehicleVirtualWorld(house_car[i][1]) !=0){
		 				new houseid = PlayerInfo[i][pHouse]-1;
		   				SendOk(playerid,"Розташування будинку де знаходиться машина успішно зазначено у вашому GPS");
		   				EnableGPSForPlayer(playerid,gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ]);
						theftarea[playerid][0] = CreateDynamicSphere(gHouses[houseid][houseX], gHouses[houseid][houseY], gHouses[houseid][houseZ], 15.0, 0, 0, playerid);
						theftCheck[playerid][1] = 4;
						theftIDveh[playerid][1] = i;
						theftIDveh[playerid][0] = house_car[i][1];
						thefttime[playerid] = GetTheftTimelimit(playerid);
						PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
						status = 1;
				 	}
				 	else {
						new Float:vehx, Float:vehy, Float:vehz;
						GetVehiclePos(house_car[i][1], vehx, vehy, vehz);
						SendOk(playerid,"Розташування машини успішно відзначено у вашому GPS");
						EnableGPSForPlayer(playerid,vehx, vehy, vehz);
						theftarea[playerid][0] = CreateDynamicSphere(vehx, vehy, vehz, 10.0, 0, 0, playerid);
						theftIDveh[playerid][0] = house_car[i][1];
						theftIDveh[playerid][1] = i;
						theftCheck[playerid][1] = 1;
						theftIDveh[playerid][2] = 1;
						if(thefttime[playerid] == 0) thefttime[playerid] = GetTheftTimelimit(playerid);
						PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
						theftplayer[i][0] = playerid; 
						status = 1;
						break;
					}
				 }
			}
		}
    } 
    if(!status) ErrorMessage(playerid, "На жаль, брат, но в данний момент для тебе немає завдань!");
    return 1;
}

CMD:ban(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new day,text[130],string[415],giveplayerid;
	if(sscanf(params, "uds[128]",giveplayerid,day,text)) return SendEsp(playerid, "/ban [playerid] [дни] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не більше 30 символов");
    if(IsAIP(text))return 1;
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви вказали свій ID");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin]) return 1;
	if(GetString(player_name[giveplayerid],"Klaus_Gurren") || GetString(player_name[giveplayerid],"Klaus_Gurren")
	|| GetString(player_name[giveplayerid],"Klaus_Gurren")) return 1;
	if(day > 30 || 1 > day) return ErrorMessage(playerid,"От 1 до 30 днів");
	format(string, 128, "Адміністратор %s забанил гравця %s на %d днів. Причина: %s",player_name[playerid],player_name[giveplayerid],day,text);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	new ip[17];
	GetPlayerIp(giveplayerid,ip,sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",player_name[giveplayerid],PlayerInfo[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	SendAdminMessage(COLOR_LIGHTRED,string);
	BanName(player_name[giveplayerid], player_name[playerid], day, text);
	WriteLog(LOG_BAN,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);
	string = "";
	static const f_str[] = "\
"W"Увага! Ваш аккаунт был "NO"заблокирован"W"\n\n\
"W"Заблокировал: "NO"%s\n\
"W"Дни: "ORANGE"%d\n\
"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
"W"Причина: "ORANGE"%s\n\n\
"W"Если вы считаете, что это помилка, сделайте скриншот(F8) данного окна,\n\
иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid], day,days, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрити", "");

	if(PlayerInfo[giveplayerid][pFamily]) reputation_family(PlayerInfo[giveplayerid][pFamily]-1,-3);

	Kick(giveplayerid);
	return true;
}
CMD:iban(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new text[130],string[415],giveplayerid;
	if(sscanf(params, "us[128]",giveplayerid,text)) return SendEsp(playerid, "/iban [playerid] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви вказали свій ID");
    if(IsAIP(text)) return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не більше 30 символов");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin]) return 1;
	if(GetString(player_name[giveplayerid],"Klaus_Gurren") || GetString(player_name[giveplayerid],"Klaus_Gurren")
	|| GetString(player_name[giveplayerid],"Klaus_Gurren")) return 1;
	format(string, 128, "Адміністратор %s забанил гравця %s. Причина: %s",player_name[playerid],player_name[giveplayerid],text);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	new ip[17];
	GetPlayerIp(giveplayerid,ip,sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",player_name[giveplayerid],PlayerInfo[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	SendAdminMessage(COLOR_LIGHTRED,string);
	BanName(player_name[giveplayerid], player_name[playerid], 100, text);
	WriteLog(LOG_BAN,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);
	string = "";
	static const f_str[] = "\
"W"Увага! Ваш аккаунт был "NO"заблокирован"W"\n\n\
"W"Заблокировал: "NO"%s\n\
"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
"W"Причина: "ORANGE"%s\n\n\
"W"Если вы считаете, что это помилка, сделайте скриншот(F8) данного окна,\n\
иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid],days, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрити", "");
	Kick(giveplayerid);
	return true;
}
CMD:delfences(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	for(new i;i<MAX_OGRAD;i++) {
		if(object[i]!=-1) {
			GetDynamicObjectPos(object[i],x,y,z);
			if(IsPlayerInRangeOfPoint(playerid,2,x,y,z)) {
				if(objectrot[i] != -1) {
					DestroyDynamicObject(objectrot[i]);
					objectrot[i]=-1;
				}
				DestroyDynamicObject(object[i]);
				object[i]=-1;
				SendOk(playerid,"Ограждение успішно убрано");
				return 1;
			}
		}
	}
	return true;
}

CMD:sistema(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
    if(sscanf(params,"s[84]",params[0])) return SendEsp(playerid, "/sistema [текст]");
    new stringa[145];
    format(stringa,144,""YELLOW"[Система] "W"%s",params[0],params[0]);
    SendClientMessageToAll(COLOR_WHITE, stringa);
    return true;
}

CMD:warn(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new text[130],string[415],giveplayerid;	
	if(sscanf(params, "us[128]",giveplayerid,text)) return SendEsp(playerid, "/warn [playerid] [причина]");
	if(GetPVarInt(playerid,"ban")>gettime()) {
	    ErrorMessage(playerid,"Можно раз в 10 секунд");
		SetPVarInt(playerid,"bann",gettime()+3);
		return false;
	}
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви вказали свій ID");
    if(IsAIP(text))return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не більше 30 символов");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin]) return 1;
	if(GetString(player_name[giveplayerid],"Klaus_Gurren") || GetString(player_name[giveplayerid],"Klaus_Gurren")
	|| GetString(player_name[giveplayerid],"Klaus_Gurren")) return 1;
	if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin]) return ErrorMessage(playerid, "Адміністратору нельзя выдать предупреждение");
	if(PlayerInfo[giveplayerid][pLeader]) return ErrorMessage(playerid, "Лідеру нельзя выдать предупреждение");

	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);

	if(PlayerInfo[giveplayerid][pFamily]) reputation_family(PlayerInfo[giveplayerid][pFamily]-1,-3);
	if(PlayerInfo[giveplayerid][pWarns]++ >= 2) {
		format(string, sizeof(string), "Адміністратор %s забанил гравця (3 предупреждения) %s на 30 днів. Причина: %s", player_name[playerid],player_name[giveplayerid], text);
		SendClientMessageToAll(COLOR_LIGHTRED, string);

		BanName(player_name[giveplayerid], player_name[playerid], 30, text);
		WriteLog(LOG_BAN,player_name[playerid],player_name[giveplayerid],text);
		gAdmin[playerid][ADMIN_BAN] ++;
		string = "";
		static const f_str[] = "\
"W"Увага! Ваш аккаунт был "NO"заблокирован"W"\n\n\
"W"Заблокировал: "NO"%s\n\
"W"Дни: "ORANGE"%d\n\
"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
"W"Причина: "ORANGE"%s\n\n\
"W"Если вы считаете, что это помилка, сделайте скриншот(F8) данного окна,\n\
иначе Ваша жалоба будет не принята.";
		format(string,sizeof(string),f_str,player_name[playerid], 30,days, month, year,hour, minute,text);

		new str[MAX_PLAYER_NAME+1];
		format(str,sizeof(str),"%s",player_name[giveplayerid]);
		D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрити", "");
		Kick(giveplayerid);
	}
	else {
		if(!GetPVarInt(giveplayerid,"AntiWarn")) {
			//Insert_Warn(player_name[giveplayerid], PlayerInfo[giveplayerid][pWarns],player_name[playerid],text);

			PlayerInfo[giveplayerid][punWarnstime] = unix + 7*86400;
			PlayerInfo[giveplayerid][pLeader] = 0;
			PlayerInfo[giveplayerid][pJob] = 0;
			PlayerInfo[giveplayerid][pMember] = 0;

			UpdatePlayerData(giveplayerid, "pWarns",PlayerInfo[giveplayerid][pWarns]);
			UpdatePlayerData(giveplayerid, "warntime", PlayerInfo[giveplayerid][punWarnstime]);
			UpdatePlayerData(giveplayerid, "pLeader", 0);
			UpdatePlayerData(giveplayerid, "pJob", 0);
			UpdatePlayerData(giveplayerid, "pMember",0);
			Kick(giveplayerid);
		}
		format(string, sizeof(string), "Адміністратор %s выдал предупреждение гравцю %s [%d|3]. Причина: %s", player_name[playerid], player_name[giveplayerid], PlayerInfo[giveplayerid][pWarns], text);
	    SendClientMessageToAll(COLOR_LIGHTRED, string);
		WriteLog(LOG_WARN,player_name[playerid],player_name[giveplayerid],text);
		SetPVarInt(giveplayerid,"AntiWarn", true);
		static const f_str[] = "\
"W"Увага! Вам выдали "NO"предупреждение"W"\n\n\
"W"Видал: "NO"%s\n\
"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
"W"Причина: "ORANGE"%s\n\n\
"W"Если вы считаете, что это помилка, сделайте скриншот(F8) данного окна,\n\
иначе Ваша жалоба будет не принята.";
		format(string,sizeof(string),f_str,player_name[playerid], days, month, year,hour, minute,text);
		gAdmin[playerid][ADMIN_WARN] ++;
	}
	add_jobinfo(giveplayerid,"Недееспособен");

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрити", "");
	return 1;
}
CMD:hid(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new houseid;
	if(sscanf(params,"d", houseid)) return SendEsp(playerid, "/hid [номер будинку]");
	new string[30];
	if(!(1 <= houseid <= gHouseCount)) {
		format(string, sizeof(string), "От 1 до %d", gHouseCount);
		ErrorMessage(playerid, string);
		return 1;
	}
	SetPlayerPosAC(playerid, gHouses[houseid-1][houseX], gHouses[houseid-1][houseY], gHouses[houseid-1][houseZ],0,0);
	SetPlayerFacingAngle(playerid, gHouses[houseid-1][houseR]);
	GameTextForPlayer(playerid, "~w~HOUSE", 5000, 1);
	return 1;
}
CMD:graff(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new graff;
	if(sscanf(params,"d", graff)) return SendEsp(playerid, "/graff [номер граффити]");
	if(!(1 <= graff < 121)) return ErrorMessage(playerid, "От 1 до 120");
	SetPlayerPosAC(playerid,GrafInfo[graff][gr_x][0],GrafInfo[graff][gr_x][1],GrafInfo[graff][gr_x][2],0,0);
	GameTextForPlayer(playerid, "~w~GRAFFITY", 5000, 1);
	return 1;
}
CMD:bizz(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new bizzid;
	if(sscanf(params,"d", bizzid)) return SendEsp(playerid, "/bizz [номер бізнеса]");
	new string[30];
	if(!(0 <= bizzid <= gBusinessCount)) {
		format(string, sizeof(string), "От 0 до %d", gBusinessCount);
		ErrorMessage(playerid, string);
		return 1;
	}
	SetPlayerPosAC(playerid,gBusiness[bizzid][bizzX], gBusiness[bizzid][bizzY], gBusiness[bizzid][bizzZ],0,0);
	SetPlayerFacingAngle(playerid, gBusiness[bizzid][bizzR]);
	GameTextForPlayer(playerid, "~w~BIZZ", 5000, 1);
	return 1;
}
CMD:int(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new interior;
	if(sscanf(params,"i", interior)) return SendEsp(playerid,"/int [1-140]");

	switch(interior) {
		case 1: SetPlayerPos(playerid,-25.884499,-185.868988,1003.549988), SetPlayerInterior(playerid,17);
		case 2: SetPlayerPos(playerid,6.091180,-29.271898,1003.549988), SetPlayerInterior(playerid,10);
		case 3: SetPlayerPos(playerid,-30.946699,-89.609596,1003.549988), SetPlayerInterior(playerid,18);
		case 4: SetPlayerPos(playerid,-25.132599,-139.066986,1003.549988), SetPlayerInterior(playerid,16);
		case 5: SetPlayerPos(playerid,-27.312300,-29.277599,1003.549988), SetPlayerInterior(playerid,4);
		case 6: SetPlayerPos(playerid,-26.691599,-55.714897,1003.549988), SetPlayerInterior(playerid,6);
		case 7: SetPlayerPos(playerid,-1827.147338,7.207418,1061.143554), SetPlayerInterior(playerid,14);
		case 8: SetPlayerPos(playerid,2.384830,33.103397,1199.849976), SetPlayerInterior(playerid,1);
		case 9: SetPlayerPos(playerid,315.856170,1024.496459,1949.797363), SetPlayerInterior(playerid,9);
		case 10: SetPlayerPos(playerid,286.148987,-40.644398,1001.569946), SetPlayerInterior(playerid,1);
		case 11: SetPlayerPos(playerid,286.800995,-82.547600,1001.539978), SetPlayerInterior(playerid,4);
		case 12: SetPlayerPos(playerid,296.919983,-108.071999,1001.569946), SetPlayerInterior(playerid,6);
		case 13: SetPlayerPos(playerid,314.820984,-141.431992,999.661987), SetPlayerInterior(playerid,7);
		case 14: SetPlayerPos(playerid,316.524994,-167.706985,999.661987), SetPlayerInterior(playerid,6);
		case 15: SetPlayerPos(playerid,302.292877,-143.139099,1004.062500), SetPlayerInterior(playerid,7);
		case 16: SetPlayerPos(playerid,235.508994,1189.169897,1080.339966), SetPlayerInterior(playerid,3);
		case 17: SetPlayerPos(playerid,225.756989,1240.000000,1082.149902), SetPlayerInterior(playerid,2);
		case 18: SetPlayerPos(playerid,223.043991,1289.259888,1082.199951), SetPlayerInterior(playerid,1);
		case 19: SetPlayerPos(playerid,225.630997,1022.479980,1084.069946), SetPlayerInterior(playerid,7);
		case 20: SetPlayerPos(playerid,295.138977,1474.469971,1080.519897), SetPlayerInterior(playerid,15);
		case 21: SetPlayerPos(playerid,328.493988,1480.589966,1084.449951), SetPlayerInterior(playerid,15);
		case 22: SetPlayerPos(playerid,385.803986,1471.769897,1080.209961), SetPlayerInterior(playerid,15);
		case 23: SetPlayerPos(playerid,375.971985,1417.269897,1081.409912), SetPlayerInterior(playerid,15);
		case 24: SetPlayerPos(playerid,490.810974,1401.489990,1080.339966), SetPlayerInterior(playerid,2);
		case 25: SetPlayerPos(playerid,447.734985,1400.439941,1084.339966), SetPlayerInterior(playerid,2);
		case 26: SetPlayerPos(playerid,227.722992,1114.389893,1081.189941), SetPlayerInterior(playerid,5);
		case 27: SetPlayerPos(playerid,260.983978,1286.549927,1080.299927), SetPlayerInterior(playerid,4);
		case 28: SetPlayerPos(playerid,221.666992,1143.389893,1082.679932), SetPlayerInterior(playerid,4);
		case 29: SetPlayerPos(playerid,27.132700,1341.149902,1084.449951), SetPlayerInterior(playerid,10);
		case 30: SetPlayerPos(playerid,-262.601990,1456.619995,1084.449951), SetPlayerInterior(playerid,4);
		case 31: SetPlayerPos(playerid,22.778299,1404.959961,1084.449951), SetPlayerInterior(playerid,5);
		case 32: SetPlayerPos(playerid,140.278000,1368.979980,1083.969971), SetPlayerInterior(playerid,5);
		case 33: SetPlayerPos(playerid,234.045990,1064.879883,1084.309937), SetPlayerInterior(playerid,6);
		case 34: SetPlayerPos(playerid,-68.294098,1353.469971,1080.279907), SetPlayerInterior(playerid,6);
		case 35: SetPlayerPos(playerid,-285.548981,1470.979980,1084.449951), SetPlayerInterior(playerid,15);
		case 36: SetPlayerPos(playerid,-42.581997,1408.109985,1084.449951), SetPlayerInterior(playerid,8);
		case 37: SetPlayerPos(playerid,83.345093,1324.439941,1083.889893), SetPlayerInterior(playerid,9);
		case 38: SetPlayerPos(playerid,260.941986,1238.509888,1084.259888), SetPlayerInterior(playerid,9);
		case 39: SetPlayerPos(playerid,1038.509888,-0.663752,1001.089966), SetPlayerInterior(playerid,3);
		case 40: SetPlayerPos(playerid,446.622986,509.318970,1001.419983), SetPlayerInterior(playerid,12);
		case 41: SetPlayerPos(playerid,2216.339844,-1150.509888,1025.799927), SetPlayerInterior(playerid,15);
		case 42: SetPlayerPos(playerid,833.818970,7.418000,1004.179993), SetPlayerInterior(playerid,3);
		case 43: SetPlayerPos(playerid,-100.325996,-22.816500,1000.741943), SetPlayerInterior(playerid,3);
		case 44: SetPlayerPos(playerid,964.376953,2157.329834,1011.019958), SetPlayerInterior(playerid,1);
		case 45: SetPlayerPos(playerid,-2239.569824,130.020996,1035.419922), SetPlayerInterior(playerid,6);
		case 46: SetPlayerPos(playerid,662.641601,-571.398803,16.343263), SetPlayerInterior(playerid,0);
		case 47: SetPlayerPos(playerid,614.581420,-23.066856,1004.781250), SetPlayerInterior(playerid,1);
		case 48: SetPlayerPos(playerid,612.508605,-129.236114,1001.992187), SetPlayerInterior(playerid,3);
		case 49: SetPlayerPos(playerid,-1786.603759,1215.553466,28.531250), SetPlayerInterior(playerid,0);
		case 50: SetPlayerPos(playerid,-2048.605957,162.093444,28.835937), SetPlayerInterior(playerid,1);
		case 51: SetPlayerPos(playerid,2170.284,1618.629,999.9766), SetPlayerInterior(playerid,1);
		case 52: SetPlayerPos(playerid,1889.975,1018.055,31.88281), SetPlayerInterior(playerid,10);
		case 53: SetPlayerPos(playerid,-2158.719971,641.287964,1052.369995), SetPlayerInterior(playerid,1);
		case 54: SetPlayerPos(playerid,1133.069946,-9.573059,1000.750000), SetPlayerInterior(playerid,12);
		case 55: SetPlayerPos(playerid,207.737991,-109.019997,1005.269958), SetPlayerInterior(playerid,15);
		case 56: SetPlayerPos(playerid,204.332993,-166.694992,1000.578979), SetPlayerInterior(playerid,14);
		case 57: SetPlayerPos(playerid,207.054993,-138.804993,1003.519958), SetPlayerInterior(playerid,3);
		case 58: SetPlayerPos(playerid,203.778000,-48.492397,1001.799988), SetPlayerInterior(playerid,1);
		case 59: SetPlayerPos(playerid,226.293991,-7.431530,1002.259949), SetPlayerInterior(playerid,5);
		case 60: SetPlayerPos(playerid,161.391006,-93.159156,1001.804687), SetPlayerInterior(playerid,18);
		case 61: SetPlayerPos(playerid,493.390991,-22.722799,1000.686951), SetPlayerInterior(playerid,17);
		case 62: SetPlayerPos(playerid,501.980988,-69.150200,998.834961), SetPlayerInterior(playerid,11);
		case 63: SetPlayerPos(playerid,-227.028000,1401.229980,27.769798), SetPlayerInterior(playerid,18);
		case 64: SetPlayerPos(playerid,460.099976,-88.428497,999.621948), SetPlayerInterior(playerid,4);
		case 65: SetPlayerPos(playerid,454.973950,-110.104996,999.717957), SetPlayerInterior(playerid,5);
		case 66: SetPlayerPos(playerid,452.489990,-18.179699,1001.179993), SetPlayerInterior(playerid,1);
		case 67: SetPlayerPos(playerid,681.474976,-451.150970,-25.616798), SetPlayerInterior(playerid,1);
		case 68: SetPlayerPos(playerid,366.923980,-72.929359,1001.507812), SetPlayerInterior(playerid,10);
		case 69: SetPlayerPos(playerid,365.672974,-10.713200,1001.869995), SetPlayerInterior(playerid,9);
		case 70: SetPlayerPos(playerid,372.351990,-131.650986,1001.449951), SetPlayerInterior(playerid,5);
		case 71: SetPlayerPos(playerid,377.098999,-192.439987,1000.643982), SetPlayerInterior(playerid,17);
		case 72: SetPlayerPos(playerid,244.411987,305.032990,999.231995), SetPlayerInterior(playerid,1);
		case 73: SetPlayerPos(playerid,271.884979,306.631989,999.325989), SetPlayerInterior(playerid,2);
		case 74: SetPlayerPos(playerid,291.282990,310.031982,999.154968), SetPlayerInterior(playerid,3);
		case 75: SetPlayerPos(playerid,302.181000,300.722992,999.231995), SetPlayerInterior(playerid,4);
		case 76: SetPlayerPos(playerid,322.197998,302.497986,999.231995), SetPlayerInterior(playerid,5);
		case 77: SetPlayerPos(playerid,346.870025,309.259033,999.155700), SetPlayerInterior(playerid,6);
		case 78: SetPlayerPos(playerid,-959.873962,1952.000000,9.044310), SetPlayerInterior(playerid,17);
		case 79: SetPlayerPos(playerid,388.871979,173.804993,1008.389954), SetPlayerInterior(playerid,3);
		case 80: SetPlayerPos(playerid,220.4109,1862.277,13.147), SetPlayerInterior(playerid,0);
		case 81: SetPlayerPos(playerid,772.112000,-3.898650,1000.687988), SetPlayerInterior(playerid,5);
		case 82: SetPlayerPos(playerid,774.213989,-48.924297,1000.687988), SetPlayerInterior(playerid,6);
		case 83: SetPlayerPos(playerid,773.579956,-77.096695,1000.687988), SetPlayerInterior(playerid,7);
		case 84: SetPlayerPos(playerid,1527.229980,-11.574499,1002.269958), SetPlayerInterior(playerid,3);
		case 85: SetPlayerPos(playerid,1523.509888,-47.821198,1002.269958), SetPlayerInterior(playerid,2);
		case 86: SetPlayerPos(playerid,2496.049805,-1693.929932,1014.750000), SetPlayerInterior(playerid,3);
		case 87: SetPlayerPos(playerid,1263.079956,-785.308960,1091.959961), SetPlayerInterior(playerid,5);
		case 88: SetPlayerPos(playerid,1291.725341,-788.319885,96.460937), SetPlayerInterior(playerid,0);
		case 89: SetPlayerPos(playerid,516.650,-18.611898,1001.459961), SetPlayerInterior(playerid,3);
		case 90: SetPlayerPos(playerid,2464.109863,-1698.659912,1013.509949), SetPlayerInterior(playerid,2);
		case 91: SetPlayerPos(playerid,2526.459961,-1679.089966,1015.500000), SetPlayerInterior(playerid,1);
		case 92: SetPlayerPos(playerid,2543.659912,-1303.629883,1025.069946), SetPlayerInterior(playerid,2);
		case 93: SetPlayerPos(playerid,1212.019897,-28.663099,1001.089966), SetPlayerInterior(playerid,3);
		case 94: SetPlayerPos(playerid,744.542969,1437.669922,1102.739990), SetPlayerInterior(playerid,6);
		case 95: SetPlayerPos(playerid,1204.809937,-11.586800,1001.089966), SetPlayerInterior(playerid,2);
		case 96: SetPlayerPos(playerid,1204.809937,13.586800,1001.089966), SetPlayerInterior(playerid,2);
		case 97: SetPlayerPos(playerid,940.921997,-17.007000,1001.179993), SetPlayerInterior(playerid,3);
		case 98: SetPlayerPos(playerid,964.106995,-53.205498,1001.179993), SetPlayerInterior(playerid,3);
		case 99: SetPlayerPos(playerid,-2661.009766,1415.739990,923.305969), SetPlayerInterior(playerid,3);
		case 100: SetPlayerPos(playerid,-2637.449951,1404.629883,906.457947), SetPlayerInterior(playerid,3);
		case 101: SetPlayerPos(playerid,-735.5619504,484.351318,1371.952270), SetPlayerInterior(playerid,1);
		case 102: SetPlayerPos(playerid,-794.8064,491.6866,1376.195), SetPlayerInterior(playerid,1);
		case 103: SetPlayerPos(playerid,-835.2504,500.9161,1358.305), SetPlayerInterior(playerid,1);
		case 104: SetPlayerPos(playerid,-813.431518,533.231079,1390.782958), SetPlayerInterior(playerid,1);
		case 105: SetPlayerPos(playerid,2350.339844,-1181.649902,1028.000000), SetPlayerInterior(playerid,5);
		case 106: SetPlayerPos(playerid,2807.619873,-1171.899902,1025.579956), SetPlayerInterior(playerid,8);
		case 107: SetPlayerPos(playerid,318.564972,1118.209961,1083.979980), SetPlayerInterior(playerid,5);
		case 108: SetPlayerPos(playerid,1412.639893,-1.787510,1000.931946), SetPlayerInterior(playerid,1);
		case 109: SetPlayerPos(playerid,1302.519897,-1.787510,1000.931946), SetPlayerInterior(playerid,18);
		case 110: SetPlayerPos(playerid,2522.0,-1673.383911,14.8), SetPlayerInterior(playerid,0);
		case 111: SetPlayerPos(playerid,-219.322601,1410.444824,27.773437), SetPlayerInterior(playerid,18);
		case 112: SetPlayerPos(playerid,2324.419922,-1147.539917,1050.719971), SetPlayerInterior(playerid,12);
		case 113: SetPlayerPos(playerid,-972.4957,1060.983,1358.914), SetPlayerInterior(playerid,10);
		case 114: SetPlayerPos(playerid,411.625977,-21.433298,1001.799988), SetPlayerInterior(playerid,2);
		case 115: SetPlayerPos(playerid,418.652985,-82.639793,1001.959961), SetPlayerInterior(playerid,3);
		case 116: SetPlayerPos(playerid,412.021973,-52.649899,1001.959961), SetPlayerInterior(playerid,12);
		case 117: SetPlayerPos(playerid,-204.439987,-26.453999,1002.299988), SetPlayerInterior(playerid,16);
		case 118: SetPlayerPos(playerid,-204.439987,-8.469600,1002.299988), SetPlayerInterior(playerid,17);
		case 119: SetPlayerPos(playerid,-204.439987,-43.652496,1002.299988), SetPlayerInterior(playerid,3);
		case 120: SetPlayerPos(playerid,246.783997,63.900200,1003.639954), SetPlayerInterior(playerid,6);
		case 121: SetPlayerPos(playerid,246.375992,109.245995,1003.279968), SetPlayerInterior(playerid,10);
		case 122: SetPlayerPos(playerid,288.745972,169.350998,1007.179993), SetPlayerInterior(playerid,3);
		case 123: SetPlayerPos(playerid,1494.429932,1305.629883,1093.289917), SetPlayerInterior(playerid,3);
		case 124: SetPlayerPos(playerid,-2029.719971,-115.067993,1035.169922), SetPlayerInterior(playerid,3);
		case 125: SetPlayerPos(playerid,420.484985,2535.589844,10.020289), SetPlayerInterior(playerid,10);
		case 126: SetPlayerPos(playerid,-2184.751464,2413.111816,5.156250), SetPlayerInterior(playerid,0);
		case 127: SetPlayerPos(playerid,-1397.782470,-203.723114,1051.346801), SetPlayerInterior(playerid,7);
		case 128: SetPlayerPos(playerid,-1398.103515,933.445434,1041.531250), SetPlayerInterior(playerid,15);
		case 129: SetPlayerPos(playerid,-1428.809448,-663.595886,1060.219848), SetPlayerInterior(playerid,4);
		case 130: SetPlayerPos(playerid,-1486.861816,1642.145996,1060.671875), SetPlayerInterior(playerid,14);
		case 131: SetPlayerPos(playerid,-1401.830000,107.051300,1032.273000), SetPlayerInterior(playerid,1);
		case 132: SetPlayerPos(playerid,1382.615600,2184.345703,11.023437), SetPlayerInterior(playerid,0);
		case 133: SetPlayerPos(playerid,297.9414,-64.3876,1001.5156), SetPlayerInterior(playerid,4);
		case 134: SetPlayerPos(playerid,302.1602,-164.7588,999.6105), SetPlayerInterior(playerid,6);
		case 135: SetPlayerPos(playerid,614.31,-125.22,997.99), SetPlayerInterior(playerid,3);
		case 136: SetPlayerPos(playerid,72.03800201,394.72299194,1041.23596191), SetPlayerInterior(playerid,5);
		case 137: SetPlayerPos(playerid,258.6563,-42.7578,1001.0234), SetPlayerInterior(playerid,14);
		case 138: SetPlayerPos(playerid,1887.25000000,508.48001099,1204.37194824), SetPlayerInterior(playerid,5);
		case 139: SetPlayerPos(playerid,1583.48498535,534.78302002,1128.39794922), SetPlayerInterior(playerid,5);
		case 140: SetPlayerPos(playerid,2527.09692383,464.17098999,2636.01293945), SetPlayerInterior(playerid,8);
		default: SendEsp(playerid,"/int [1-140]");
	}
	return 1;
}

CMD:gethere(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/gethere [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	new player_state = GetPlayerState(giveplayerid);
	if(!(1 <= player_state <= 3)) return ErrorMessage(playerid,"Гравець не вступил в гру");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin]) return ErrorMessage(playerid,"Его нельзя телепортировать");
	new Float:X,
		Float:Y,Float:Z, 
		Float:A,
		vehicleid = GetPlayerVehicleID(giveplayerid),
		interior = GetPlayerInterior(playerid),
		virtualworld = GetPlayerVirtualWorld(playerid);
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);

	switch(GetPlayerState(giveplayerid)) {
		case PLAYER_STATE_ONFOOT: {
			SetPlayerPosAC(giveplayerid, X,Y+2,Z,virtualworld,interior);
			SetPlayerFacingAngle(giveplayerid, A);
		}
		case PLAYER_STATE_DRIVER: {
			LinkVehicleToInterior(vehicleid, interior);
			SetVehicleVirtualWorld(vehicleid, virtualworld);
			SetVehiclePos(vehicleid, X, Y+2, Z);
			SetVehicleZAngle(vehicleid, A);
		}
		case PLAYER_STATE_PASSENGER: {
			RemovePlayerFromVehicleAC(giveplayerid);
			SetPlayerPosAC(giveplayerid, X, Y+2, Z,virtualworld,interior);
			SetPlayerFacingAngle(giveplayerid, A);
		}
	}
	new string[128];
	format(string, sizeof(string), "Ви були телепортовані адміністратором %s", player_name[playerid]);
	SendOk(giveplayerid,string);

	format(string, sizeof(string), "Ви телепортировали %s к себе", player_name[giveplayerid]);
	SendOk(playerid,string);
	return 1;
}
CMD:spcars(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/spcars [время]");
	if(giveplayerid < 5 || giveplayerid > 30) return ErrorMessage(playerid, "От 5 до 30 секунд");
	new string[64];
	format(string,sizeof(string), "Машини зареспавняться через %i секунд",giveplayerid);
	SendOk(playerid, string);
	SendClientMessageToAll(COLOR_RED,string);
	SetTimerEx("SpcarsAvto",giveplayerid*1000,false,"i",playerid);
	return true;
}
CMD:setnick(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"i",giveplayerid)) return SendEsp(playerid, "/setnick [ID]");
	new playerName[MAX_PLAYER_NAME+1];
	GetPVarString(giveplayerid, "WantNickChange", playerName, MAX_PLAYER_NAME);
	if(!strlen(playerName)) return ErrorMessage(playerid,"Гравець не подавал завку на смену ника");
	WriteLog(LOG_CHANGENAME,player_name[playerid],player_name[giveplayerid],playerName);
	if(GetPVarInt(giveplayerid,"changename_fix")) return 1;
	ChangeName(giveplayerid);
	new string[128];
	format(string, sizeof(string), "[A] %s разрешил смену ника гравцю %s",player_name[playerid],player_name[giveplayerid]);
	AdmMSG(0xAFAFAFAA, string,1);
	return 1;
}
CMD:freeze(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return	SendEsp(playerid, "/freeze [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin]) return ErrorMessage(playerid, "Его нельзя");
	TogglePlayerControllable(giveplayerid, 0);
	new string[128];
	format(string, sizeof(string), "[A] %s был заморожен адміністратором %s",player_name[giveplayerid],player_name[playerid]);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:unfreeze(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return	SendEsp(playerid, "/unfreeze [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin]) return ErrorMessage(playerid, "Его нельзя");
	TogglePlayerControllable(giveplayerid, 1);
	new string[128];
	format(string, sizeof(string), "[A] %s разморозил %s",player_name[playerid],player_name[giveplayerid]);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:slap(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/slap [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);

	new Float:slx, 
		Float:sly, 
		Float:slz,
		string[128];
	GetPlayerPos(giveplayerid, slx, sly, slz);
	SetPlayerPosAC(giveplayerid, slx, sly, slz+5,TI[giveplayerid][tVirtualWorld], TI[giveplayerid][tInterior]);
	PlayerPlaySound(giveplayerid, 1130, slx, sly, slz+5);
	format(string, sizeof(string), "[A] %s подкинул гравця %s", player_name[playerid],player_name[giveplayerid]);
	AdmMSG(0xAFAFAFAA, string,1);
	return 1;
}
CMD:mark(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new Float: MarkX, Float: MarkY, Float: MarkZ;
	GetPlayerPos(playerid, MarkX, MarkY, MarkZ);
	SetPVarFloat(playerid, "MarkX", MarkX);
	SetPVarFloat(playerid, "MarkY", MarkY);
	SetPVarFloat(playerid, "MarkZ", MarkZ);
	SetPVarInt(playerid, "MarkInt", GetPlayerInterior(playerid));
	SetPVarInt(playerid, "MarkVW", GetPlayerVirtualWorld(playerid));
	SendOk(playerid, "Позиция для телепорта сохранена");
	return 1;
}
CMD:gotomark(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	if(GetPlayerState(playerid) == 2) {
		new tmpcar = GetPlayerVehicleID(playerid);
		SetVehiclePos(tmpcar, GetPVarFloat(playerid, "MarkX"), GetPVarFloat(playerid, "MarkY"), GetPVarFloat(playerid, "MarkZ"));
	}
	else SetPlayerPosAC(playerid, GetPVarFloat(playerid, "MarkX"), GetPVarFloat(playerid, "MarkY"), GetPVarFloat(playerid, "MarkZ"),GetPVarInt(playerid, "MarkVW"),GetPVarInt(playerid, "MarkInt"));
	SendOk(playerid, "Ви телепортировались на сохраненную ранее позицию");
	return 1;
}
CMD:satiety(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
    if(sscanf(params, "ud",giveplayerid,hp)) return SendEsp(playerid, "/satiety [playerid] [сытость]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(hp >= 101) return ErrorMessage(playerid,"Не можна давать більше 100 хп");
	PlayerInfo[giveplayerid][pSatiety] = hp;
	SetFullness(giveplayerid, PlayerInfo[giveplayerid][pSatiety]);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] установил %d сытости гравцю %s[%d]",player_name[playerid],playerid,hp,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:healsiun(playerid) return SetPlayerHealth(playerid, 100.0);
CMD:sethp(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
    if(sscanf(params, "ud",giveplayerid,hp)) return SendEsp(playerid, "/sethp [playerid] [HP]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(hp < 0 || hp >= 1001) return ErrorMessage(playerid,"Не можна давать меньше 0 и більше 1000 хп");
	SetPlayerHealth(giveplayerid, hp);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] установил %d здоровья гравцю %s[%d]",player_name[playerid],playerid,hp,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:setarm(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new hp,giveplayerid;
    if(sscanf(params, "ud",giveplayerid,hp)) return SendEsp(playerid, "/setarm [playerid] [armour]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(hp >= 101) return ErrorMessage(playerid,"Не можна давать більше 100 брони");
	SetPlayerArmour(giveplayerid, hp);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] установил %d брони гравцю %s[%d]",player_name[playerid],playerid,hp,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	return true;
}
CMD:offstats(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new text = strlen(params);
	if(!text) return SendEsp(playerid, "/offstats [Nick Name]");
	if(text < 3 || text > 24) return ErrorMessage(playerid, "От 3 до 24 символов");
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
	mysql_tquery(connects, query, "AGetStats", "is", playerid, params);
	return 1;
}
CMD:getid(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/getid [ID]");
	new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `pID` = '%d' LIMIT 1", giveplayerid);
	mysql_tquery(connects, query, "AGetID", "ii", playerid, giveplayerid);
	return 1;
}
//4
CMD:asettax(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/asettax [гроші]");
    if(giveplayerid < 100000 || giveplayerid > 1000000) return ErrorMessage(playerid, "От $100000 до $1000000");
    FI[fWHITEHOUSE][fBank] += giveplayerid;
	UpdateFraction(fWHITEHOUSE,"Bank",FI[fWHITEHOUSE][fBank]);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] добавив в казну штата $%d",player_name[playerid],playerid,giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	return 1;
}
CMD:awarehouse(playerid, const params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	static const f_str[] = "\
"W"На складі Армія ЛВ: \t\t\t"ORANGE"%i\n\
"W"На складі Армія СФ: \t\t"ORANGE"%i\n\
"W"На складі FBI: \t\t\t"ORANGE"%i\n\
"W"На складі LSPD: \t\t\t"ORANGE"%i\n\
"W"На складі SFPD: \t\t\t"ORANGE"%i\n\
"W"На складі LVPD: \t\t\t"ORANGE"%i\n\
"W"На складі Італійської мафії: \t"ORANGE"%i\n\
"W"На складі Японської мафії: \t\t"ORANGE"%i\n\
"W"На складі Української мафії: \t\t"ORANGE"%i\n\
"W"На складі Ballas: \t\t\t"ORANGE"%i\n\
"W"На складі Vagos: \t\t\t"ORANGE"%i\n\
"W"На складі Grove: \t\t\t"ORANGE"%i\n\
"W"На складі Aztecas: \t\t\t"ORANGE"%i\n\
"W"На складі Rifa: \t\t\t"ORANGE"%i\n\
"W"Зброяний завод: \t\t\t"ORANGE"%i\n\
"W"Нефтезавод: \t\t\t\t"ORANGE"%i\n\
"W"Лісопилка: \t\t\t\t"ORANGE"%i";
	new string[sizeof(f_str) +1 + 100];
	format(string,sizeof(string),f_str,FI[fARMYLV][fMats],FI[fARMYSF][fMats],FI[fFBI][fMats],FI[fLSPD][fMats],
										FI[fSFPD][fMats],FI[fLVPD][fMats],FI[fLCN][fMats],FI[fYAKUZA][fMats],FI[fRM][fMats],
										FI[fBALLAS][fMats],FI[fVAGOS][fMats],FI[fGROVE][fMats],FI[fAZTEC][fMats],FI[fRIFA][fMats],zavodsklad,oilsklad,woodsklad);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Стан складів",string,"Закрити","");
	return true;
}
//-----------------------------------------[4 рівень]-------------------------------------------//
CMD:skick(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new string[144],giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendEsp(playerid, "/skick [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(GetString(player_name[giveplayerid],"Klaus_Gurren") || GetString(player_name[giveplayerid],"Klaus_Gurren")
	|| GetString(player_name[giveplayerid],"Klaus_Gurren")) return 1;
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin] && !GetString(player_name[playerid],"Klaus_Gurren")
	&& !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
	format(string, sizeof(string), "[A] %s[%d] кикнул без лишнего шума гравця %s[%d]",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(CADMIN_INFO,string,4);
	Kick(giveplayerid);
	WriteLog(LOG_SKICK,player_name[playerid],player_name[giveplayerid],"SKick");
	return 1;
}

CMD:rban(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(sscanf(params,"s[16]", params[0])) return SendEsp(playerid, "/banip [ип]");
	if(GetString(params,"46.62.15.59")) return 1;
	if(GetString(params,"46.62.15")) return 1;
	new null;
	for(new i = 0; i < strlen(params[0]); i++) {
		if(strfind(params[i],".",true) == 0) null++;
	}
	if(null != 3) return ErrorMessage(playerid,"Неверный IP адрес. Пример для бана подсети: 127.0.0. (Должны присутствовать 3 точки)");
	new query[128];
	format(query, sizeof(query), "INSERT INTO `banip` (`IP`,`admin`) VALUES ('%s','%s')",params,player_name[playerid]);
 	mysql_tquery(connects, query, "", "");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] забанил IP: %s",player_name[playerid],playerid,params);
	SendAdminMessage(CADMIN_INFO, string);
	WriteLog(LOG_BANIP,player_name[playerid],params,"блокировка IP");
	return true;
}
CMD:unrban(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 18) return SendEsp(playerid, "/unrban [IP адрес]");
	new null;
	for(new i = 0; i < strlen(params[0]); i++) {
		if(strfind(params[i],".",true) == 0) null++;
	}
	if(null != 3) return SendClientMessage(playerid,COLOR_GREY,"Неверный IP адрес");
	new query[128];
	format(query,sizeof(query), "DELETE FROM `banip` WHERE `IP` = '%s'",params);
 	mysql_tquery(connects, query, "", "");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] разбанил IP: %s",player_name[playerid],playerid,params);
	SendAdminMessage(CADMIN_INFO, string);
	WriteLog(LOG_UNBANIP,player_name[playerid],params,"разблокировка IP");
	return true;
}
CMD:offban(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new name[25],text[130],string[128],day,giveplayerid;
	if(sscanf(params, "p< >s[24]ds[128]", name,day,text)) return SendEsp(playerid, "/offban [Nick Name] [дни] [причина]");
	if(day > 30 || 1 > day) return ErrorMessage(playerid,"От 1 до 30 днів");
	if(GetString(name,"Klaus_Gurren") || GetString(name,"Klaus_Gurren") || GetString(name,"Klaus_Gurren")) return 1;
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець онлайн");
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не більше 30 символов");
	if(!IsBannedNameReg(name)) return ErrorMessage(playerid, "Цей гравець не зарегистрирован на сервере");
 	BanName(name, player_name[playerid], day, text);
	format(string, sizeof(string), "Адміністратор %s забанил %s на %d днів в оффлайне. Причина: %s",player_name[playerid], name, day, text);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	gAdmin[playerid][ADMIN_BAN] ++;
	WriteLog(LOG_BAN,player_name[playerid],name,text);
	return true;
}
CMD:ioffban(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new name[25],text[130],string[128],giveplayerid;
	if(sscanf(params, "p< >s[24]s[128]", name,text)) return SendEsp(playerid, "/ioffban [Nick Name] [причина]");
	if(GetString(name,"Klaus_Gurren") || GetString(name,"Klaus_Gurren") || GetString(name,"Klaus_Gurren")) return 1;
	if(!IsBannedNameReg(name)) return ErrorMessage(playerid, "Цей гравець не зарегистрирован на сервере");
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець онлайн");
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не більше 30 символов");
 	BanName(name, player_name[playerid], 1000, text);
	format(string, sizeof(string), "Адміністратор %s забанил %s в оффлайне. Причина: %s",player_name[playerid], name, text);
	SendClientMessageToAll(COLOR_LIGHTRED,string);
	gAdmin[playerid][ADMIN_BAN] ++;
	WriteLog(LOG_BAN,player_name[playerid],name,text);
	return true;
}
CMD:offwarn(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new name[MAX_PLAYER_NAME],text[130],giveplayerid;
    if(sscanf(params, "s[24]s[128]", name, text)) return SendEsp(playerid, "/offwarn [Nick Name] [причина]");
	if(GetString(name,"Klaus_Gurren") || GetString(name,"Klaus_Gurren") || GetString(name,"Klaus_Gurren")) return 1;
	sscanf(name, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець онлайн");
	if(strlen(text) > 30) return ErrorMessage(playerid,"Не більше 30 символов");
    new query[128];
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s'", name);
    mysql_tquery(connects, query, "offwarn", "dss", playerid, name, text);
	return true;
}
CMD:unban(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new string[220];
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/unban [Nick Name]");
    if(!IsBannedName(params)) return  ErrorMessage(playerid, "Цей гравець не заблокирован");
    mysql_escape_string(params, UnbanName[playerid]);
   	new NAME_ADMIN[24], NAME_PLAYER[24], BAN_REASON[32], UNBAN_DATA = 0;

    format(string, sizeof(string), "SELECT * FROM `ban` WHERE BINARY `Name` = '%s' LIMIT 1", UnbanName[playerid]);
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_index(0,1,NAME_PLAYER,24);
		cache_get_value_index(0,2,NAME_ADMIN,24);
		cache_get_value_index(0,3,BAN_REASON,24);
		cache_get_value_index_int(0,4,UNBAN_DATA);
		if(UNBAN_DATA > unix) {
			new date_ban[6];
			timestamp_to_date(UNBAN_DATA,date_ban[0],date_ban[1],date_ban[2],date_ban[3],date_ban[4],date_ban[5]);

			format(string,sizeof(string),"\
			"W"Заблокирован:\t"NO"%s\n\
			"W"Заблокировал:\t"ORANGE"%s\n\
			"W"Причина:\t\t"ORANGE"%s\n\
			"W"Разблокировка:\t"ORANGE"%02d/%02d/%02d %02d:%02d:%02d",
			NAME_PLAYER,NAME_ADMIN, BAN_REASON ,date_ban[2],date_ban[1],date_ban[0],date_ban[3],date_ban[4],date_ban[5]);
			D(playerid,D_UNBAN,DSM, ""YELLOW"Інформація о забаненном",string,"Разбанить","Відміна");
		}
		else ErrorMessage(playerid, "Цей гравець не заблокирован");
	}
	cache_delete(result);
	return 1;
}
CMD:setfuel(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return 1;
	new giveplayerid;
 	if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/setfuel [кількість літрів]");
	if(giveplayerid < 10 || giveplayerid > 50) return ErrorMessage(playerid, "Літрів від 10 до 50");
	new vehid = GetPlayerVehicleID(playerid);
	new string[128];
    format(string,sizeof(string),"Ви встановили транспорту %d літрів топлива",giveplayerid);
	SendOk(playerid,string);
	VehicleInfo[vehid][vFuel] = giveplayerid;
    return 1;
}
CMD:fin(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	for(new b; b < gBusinessCount; b++) {
		if(PlayerToPoint(10.0, playerid, gBusiness[b][bizzX], gBusiness[b][bizzY], gBusiness[b][bizzZ])) {
			new query[156];
			format(query, sizeof(query), "SELECT * FROM `business_stats` WHERE `bizz` = '%i'", b);
			mysql_tquery(connects, query, "bizz_stats", "ii", playerid,b);
		}
	}
	return 1;
}
CMD:veh(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new car, color1, color2;
    if(sscanf(params,"ddd",car,color1,color2)) return SendEsp(playerid,"/veh [CAR ID] [color] [color]");
	if(car < 400 || car > 611) return ErrorMessage(playerid, "ID автомобіля от 400 до 611");
	if(color1 < 0 || color1 > 256 || color2 < 0 || color2 > 256) return ErrorMessage(playerid, "№ кольори автомобіля від 0 до 256");
	new null;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
		null++;
	}
	if(null >= 25) return ErrorMessage(playerid,"Не можна создавать більше 25 адмін машин");
	new Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,A);
	X += 1.5;
	new vehicleid = A_CreateVehicle(car, X,Y,Z,A, color1, color2, -1,VEHICLE_TYPE_ADMIN);
    SetVehicleParamsEx(vehicleid,false,false,false,false,false,false,false);
	SetVehicleNumberPlate(vehicleid, "Admin Car");
	LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
	VehicleInfo[vehicleid][veX] = X;
	VehicleInfo[vehicleid][veY] = Y;
	VehicleInfo[vehicleid][veZ] = Z;
	VehicleInfo[vehicleid][vFuel] = 100.0;
	
	new string[90];
	format(string, sizeof(string), "[A] %s[%d] создал авто. ID: %i",player_name[playerid],playerid,vehicleid);
	AdmMSG(0xAFAFAFAA, string,1);
	SendOk(playerid,"Щоб видалити авто,введіть: "W"/delveh");
	SendOk(playerid,"Щоб видалити всі адмін т/с, введіть: "W"/alldelveh");
	return true;
}
CMD:delveh(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new vehicleid = GetPlayerVehicleID(playerid);
    if(VehicleInfo[vehicleid][vType] != VEHICLE_TYPE_ADMIN) return ErrorMessage(playerid,"Цей автомобіль нельзя видалити");
    A_DestroyVehicle(vehicleid);
    new string[90];
	format(string, sizeof(string), "[A] %s[%d] видалив авто. ID: %i",player_name[playerid],playerid,vehicleid);
	AdmMSG(0xAFAFAFAA, string,1);
    SendOk(playerid,"Аавтомобіль був видалений");
    return 1;
}
CMD:alldelveh(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(VehicleInfo[i][vType] != VEHICLE_TYPE_ADMIN) continue;
		A_DestroyVehicle(i);
	}
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] видалив всі створені т/с",player_name[playerid],playerid);
	AdmMSG(0xAFAFAFAA, string,1);
    SendOk(playerid,"Всі адмін т/с видалені");
    return 1;
}
CMD:unwarn(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/unwarn [playerid]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(PlayerInfo[giveplayerid][pWarns] == 0) return ErrorMessage(playerid, "У гравця нет предупреждений");
    new query[128];
    format(query, sizeof(query), "DELETE FROM `warns` WHERE `name` = '%s' AND `warn` = '%d'", player_name[giveplayerid], PlayerInfo[giveplayerid][pWarns]);
	mysql_tquery(connects, query, "", "");
	PlayerInfo[giveplayerid][pWarns]--;
	UpdatePlayerData(giveplayerid,"pWarns",PlayerInfo[giveplayerid][pWarns]);
	new string[92];
	format(string, sizeof(string), "[A] %s[%d] удалил 1 предупреждение гравцю %s[%d]", player_name[playerid], playerid, player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);

	format(string, sizeof(string), "Адміністратор %s удалил Вам 1 предупреждение", player_name[playerid]);
	SendClientMessage(giveplayerid, CGOLD, string);
	return 1;
}
CMD:offunwarn(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
    new string[220],giveplayerid;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/offunwarn [Nick Name]");
	sscanf(params, "u", giveplayerid);
	if(giveplayerid != INVALID_PLAYER_ID) return ErrorMessage(playerid, "Цей гравець онлайн");
    format(string, sizeof(string), "SELECT `pWarns` FROM `accounts` WHERE `Name` = '%s' LIMIT 1", params);
    new warns = 0;
	new Cache:result = mysql_query(connects, string);
	new rows = cache_num_rows();
	if(rows > 0) {
		cache_get_value_int(0, "pWarns", warns);
		if(warns == 0) {
			ErrorMessage(playerid, "Варны відсутні");
			cache_delete(result);
			return 1;
		}
		new query[128];
		format(query, sizeof query, "UPDATE `accounts` SET `pWarns` = '%d' WHERE `Name` = '%s' LIMIT 1", warns-1,params);
		mysql_pquery(connects,query);
		new str[128];
		format(str, sizeof(str), "[A] %s[%d] удалил предупреждения в оффлайн гравцю %s", player_name[playerid], playerid, params);
		AdmMSG(0xAFAFAFAA, str,1);
	}
	cache_delete(result);
	return 1;
}
CMD:weather(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/weather [id]");
	new string[128];
	format(string, sizeof(string), "[A] %s сменил номер погоды на %d", player_name[playerid], giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	SetWeather(giveplayerid);
	return true;
}
CMD:uval(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new reason[130],giveplayerid;
	if(sscanf(params, "ds[128]", giveplayerid, reason)) return SendEsp(playerid, "/uval [id] [причина]");
	if(strlen(reason)>40) return ErrorMessage(playerid,"Не більше 40 символов");
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(!PlayerInfo[giveplayerid][pMember]) return ErrorMessage(playerid, "Гравець не состоит в організації");
	if(GetString(FI[GetTeamID(giveplayerid)][fLeader],player_name[giveplayerid])) return ErrorMessage(playerid,"Лідера можна зняти тільки через /makeleader");

	static const f_str[] = "Адміністратор %s[%i] звільнив вас із організації. Причина: %s";
	new string[sizeof(f_str) +1 + (-2 + 25) + (-2 + 4) + (-2 + 31)];

	format(string, sizeof(string), f_str, player_name[playerid],playerid, reason);
	SendClientMessage(giveplayerid, 0xFF182DFF, string);

	format(string, sizeof(string), "[A] %s[%d] выгнал гравця %s[%d] из фракції",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);

	SetPlayerArmour(giveplayerid, 0);
	ResetPlayerWeapons(giveplayerid);

	if(start_work[giveplayerid]) {
		SendOk(giveplayerid,"робочий день закінчений");
		start_work[giveplayerid] = 0;
		UpdatePlayerData(giveplayerid, "FracDuty", 0);
	}
	if(IsAGang(playerid)) EndCapt(playerid);
	add_jobinfo(giveplayerid,reason);
	PlayerInfo[giveplayerid][pMember] = 0;
	PlayerInfo[giveplayerid][pRank] = 0;
	PlayerInfo[giveplayerid][pFracSkin] = 0;
	PlayerInfo[giveplayerid][pLeader] = 0;
	SetPlayerColor(giveplayerid, TEAM_HIT_COLOR);
	if(PlayerInfo[giveplayerid][pHouse] > 0) PlayerInfo[giveplayerid][pSpawn] = 1;
	else PlayerInfo[giveplayerid][pSpawn] = 0;
	skin_player(giveplayerid);
	SaveAccount(giveplayerid);
	WriteLog(LOG_UVAL,player_name[playerid],player_name[giveplayerid],reason);
	return 1;
}
CMD:ears(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	static const command_message[][] = {
		"Слушать смс ON",
		"Слушать смс OFF"
	};
	SendClientMessage(playerid, COLOR_REDD, command_message[GetPVarInt(playerid, "BigEarSms")]);
	SetPVarInt(playerid, "BigEarSms", !GetPVarInt(playerid, "BigEarSms"));
	return 1;
}
CMD:hpall(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/hpall [радиус]");
    if(giveplayerid < 5 || giveplayerid > 15) return ErrorMessage(playerid, "Радиус от 5 до 15 метров");
    new Float:pos[3];
    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
        if(IsPlayerInRangeOfPoint(i, params[0], pos[0], pos[1], pos[2])) {
            SetPlayerHealth(i, 100.0);
            SendOk(i, "Адміністратор восстановил Вам здоровье");
        }
	}
	SendOk(playerid, "Всем гравцям в указанном радиусе было восстановлено здоровье");
	return 1;
}
CMD:spall(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/spall [радиус]");
    if(giveplayerid < 5 || giveplayerid > 15) return ErrorMessage(playerid, "Радиус от 5 до 15 метров");
    new Float:pos[3];
    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
    foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
        if(IsPlayerInRangeOfPoint(i, params[0], pos[0], pos[1], pos[2])) {
            PlayerSpawn(i);
        }
	}
	SendOk(playerid, "Все гравці в указанном радиусе были заспавнены");
	return 1;
}
CMD:gettax(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new string[128];
	format(string, sizeof(string), "В казні штата: "ORANGE"$%i", FI[fWHITEHOUSE][fBank]);
	SendOk(playerid, string);
	return 1;
}
CMD:sban(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new day,text[130],string[415],giveplayerid;
	if(sscanf(params, "uds[128]",giveplayerid,day,text)) return SendEsp(playerid, "/sban [playerid] [дни] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви вказали свій ID");
	if(strlen(text)>30) return ErrorMessage(playerid,"Не більше 30 символов");
	if(IsAIP(text)) return 1;
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin]) return 1;
	if(GetString(player_name[giveplayerid],"Klaus_Gurren") || GetString(player_name[giveplayerid],"Klaus_Gurren")
	|| GetString(player_name[giveplayerid],"Klaus_Gurren")) return 1;
	if(day > 30 || 1 > day) return ErrorMessage(playerid,"От 1 до 30 днів");
	format(string, 144, "[A] %s[%d] забанил гравця %s без лишнего шума на %d днів. Причина: %s",player_name[playerid],playerid, player_name[giveplayerid],day,text);
	AdmMSG(CADMIN_INFO,string,3);
	new ip[17];
	GetPlayerIp(giveplayerid,ip,sizeof(ip));
	format(string, sizeof(string), "Name [%s]  R-IP [%s]  L-IP [%s]  IP [%s]",player_name[giveplayerid],PlayerInfo[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	AdmMSG(CADMIN_INFO,string,3);
	BanName(player_name[giveplayerid], player_name[playerid], day, text);
	WriteLog(LOG_SBAN,player_name[playerid],player_name[giveplayerid],text);
	gAdmin[playerid][ADMIN_BAN] ++;
	new hour,minute;
	new year,month,days;

	getdate(year, month, days);
	gettime(hour,minute);
	string = "";
	static const f_str[] = "\
"W"Увага! Ваш аккаунт был "NO"заблокирован"W"\n\n\
"W"Заблокировал: "NO"%s\n\
"W"Дни: "ORANGE"%d\n\
"W"Дата: "ORANGE"%d-%d-%d %02d:%02d\n\
"W"Причина: "ORANGE"%s\n\n\
"W"Если вы считаете, что это помилка, сделайте скриншот(F8) данного окна,\n\
иначе Ваша жалоба будет не принята.";
	format(string,sizeof(string),f_str,player_name[playerid], day,days, month, year,hour, minute, text);

	new str[MAX_PLAYER_NAME+1];
	format(str,sizeof(str),"%s",player_name[giveplayerid]);
	D(giveplayerid, DIALOG_NONE, DSM, str, string, "Закрити", "");
	Kick(giveplayerid);
	return true;
}
CMD:settime(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/settime [час] (0-23)");
	SetWorldTime(giveplayerid);
	return true;
}
alias:gun("givegun");
CMD:gun(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new gun,ammo,giveplayerid;
    if(sscanf(params, "udd",giveplayerid,gun,ammo)) return SendEsp(playerid, "/gun [id] [id зброї] [патрони]");
	if(ammo < 1 || ammo > 9999) return ErrorMessage(playerid, "Не можна меньше 1 или більше 9999 патронів!");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(gun == 38) return ErrorMessage(playerid, "Minigun запрещён на сервере");
	if(!PlayerInfo[giveplayerid][pAdmin] && (gun != 24 && gun != 25 && gun != 29 && gun != 30 && gun != 31)) return ErrorMessage(playerid,"Ця зброя доступна тільки адміністрації");
	AC_GivePlayerWeapon(giveplayerid,gun,ammo);
	
	static const f_str[] = "Зброю була видана гравцю %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME)];
	format(string,sizeof(string),f_str, player_name[giveplayerid]);
	SendOk(playerid,string);

	new str[128];
	format(str, sizeof(str), "[A] %s[%d] видав зброю [gun %d | patron %d] гравцю %s[%d]",player_name[playerid],playerid,gun,ammo,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, str,1);
	WriteLog(LOG_GUN,player_name[playerid],player_name[giveplayerid],"Видача зброї");
	return true;
}
//-----------------------------------------[5 рівень]-------------------------------------------//
CMD:fakename(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new Namers[MAX_PLAYER_NAME];
	GetPlayerName(playerid,Namers,MAX_PLAYER_NAME);
	if(!GetString(player_name[playerid],Namers)) {
		SetPlayerName(playerid,player_name[playerid]);
		return 1;
	}
   	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/fakename [Nick Name]");
	if(GetString(params,"Klaus_Gurren") || GetString(params,"Klaus_Gurren") || GetString(params,"Klaus_Gurren")) return 1;
	SetPlayerName(playerid,params);
	SendOk(playerid,"Имя успішно изменено, щоб вернуть настоящее, введіть команду повторно");
	return 1;
}

CMD:amusic(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new nonf;
	if(sscanf(params, "f",nonf)) return SendEsp(playerid, "/amusic [радиус 1 - 300 или 0 - выключить] [ссылка]");
	if(nonf == 0) {
		Sounds = 0;
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			StopAudioStreamForPlayer(i);
			UseSound[i] = 0;
		}
		return SendOk(playerid, "Музыка отключена");
	}
	new path[150];
	if(sscanf(params, "ds[150]",params[0],path)) return SendEsp(playerid, "/amusic [радиус 1 - 300 или 0 - выключить] [ссылка]");
	if(params[0] < 1 || params[0] > 300) return ErrorMessage(playerid,"От 1 до 300");
	format(stream, sizeof(stream),"%s",path);
	rads = params[0];
	Sounds = 1;
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	streampos[0] = x1;
	streampos[1] = y1;
	streampos[2] = z1;
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		UseSound[i] = 0;
	}
	SendOk(playerid, "Музыка включена");
	return 1;
}
CMD:tempzone(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/tempzone [банда]");
	if(giveplayerid != fBALLAS && giveplayerid != fVAGOS && giveplayerid != fGROVE && giveplayerid != fAZTEC && giveplayerid != fRIFA) return ErrorMessage(playerid,"Банда вказана не вірно");
	for(new i = 0; i < TOTALGZ; i++) {
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) {
			GZInfo[i][gFrakVlad] = giveplayerid;
			GangZoneStopFlashForAll(GZInfo[i][gZone]);
			GangZoneHideForAll(GZInfo[i][gZone]);
			GangZoneShowForAll(GZInfo[i][gZone],GetGangZoneColor(i));
			new query[128];
			format(query,sizeof(query),"UPDATE `"TABLE_GANGZONE"` SET `gang_owner` = '%i' WHERE `id` = %i",GZInfo[i][gFrakVlad],GZInfo[i][gID]);
 			mysql_tquery(connects, query, "", "");
			return true;
		}
	}
	return true;
}
CMD:getdonate(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/getdonate [ник]");
	new query[156];
	format(query, sizeof(query), "SELECT donatemoney FROM accounts WHERE Name = '%s'", params);
	mysql_tquery(connects, query, "OnPlayerDonateCheck", "is", playerid, params);
	return 1;
}
CMD:respv(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new Float: position[3],Float:rad;
	if(sscanf(params, "f", rad)) return SendEsp(playerid, "/respv [радиус]");
	if(rad > 100 || rad < 2) return ErrorMessage(playerid, "Радиус от 2 до 100");
	GetPlayerPos(playerid, position[0], position[1], position[2]);
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		GetVehiclePos(i,position[0],position[1],position[2]);
		if(IsPlayerInRangeOfPoint(playerid,rad,position[0],position[1],position[2])) SetVehicleToRespawn(i);
	}
	SendOk(playerid, "Машини в выбранном радиусе заспавнены");
	return true;
}
//-----------------------------------------[6 рівень]-------------------------------------------//
CMD:reloadbans(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	SendRconCommand("reloadbans");
	SendOk(playerid, "Бан-лист перезагружен");
	return true;
}
CMD:saveall(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    SaveServer();
	SendOk(playerid, "Все данные сохранены");
	return true;
}
CMD:restartservera(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	SendClientMessageToAll(COLOR_YELLOW, "Через дві хвидини пройде автоматичне перезавантаження сервера");
	SendClientMessageToAll(COLOR_YELLOW, "Прохання закінчити всі свої роботи. Дякую за розуміння");
	SetTimer("OnServerRestarting", 100000, false);
	return true;
}
CMD:delacc(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    if(sscanf(params,"s[128]",params[0])) return SendEsp(playerid, "/delacc [Nick Name]");
	if(GetString(params[0],"Klaus_Gurren") || GetString(params[0],"Klaus_Gurren") || GetString(params[0],"Klaus_Gurren")) return 1;
	if(!strlen(params[0])) {
	    if(GetPVarInt(playerid, "delstatus")) {
	        SendClientMessage(playerid, COLOR_YELLOW, "Ви отменили удаление аккаунта");
            DeletePVar(playerid, "delstatus");
	    }
	    else SendEsp(playerid, "/delacc [Nick Name]");
	}
	else {
		new query[128];
		format(query, sizeof(query), "SELECT * FROM `accounts` WHERE BINARY `Name` = '%s'", params[0]);
	    mysql_tquery(connects, query, "CheckDelAcc", "ds", playerid, params[0]);
	}
	return true;
}
//-----------------------------------------[5 рівень]-------------------------------------------//
CMD:tpcor(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new Float:x,Float:z,Float:y;
	if(sscanf(params,"p<,>fff",x,y,z)) return SendEsp(playerid,"/tpcor [x] [y] [z]");
	SetPlayerPosAC(playerid,Float:x,Float:y,Float:z,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	return 1;
}

CMD:addzone(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || !dostup[playerid]) return true;
	new string[1024],str[56];
    strcat(string,"Создать зеленую зону\n");
    for(new g = 1; g <= TOTALZONE; g++) {
    	format(str, sizeof(str), "%i. %s\n", GREENZONE[g][grid], GREENZONE[g][grName]);
     	strcat(string,str);
	}
 	return D(playerid, D_GREENZONE, 2, "Зеленые зоны", string, "Вибрати", "Закрити");
}
CMD:vip(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/vip [VIP]");
	PlayerInfo[playerid][pVips] = giveplayerid;
	
	static const f_str[] = "VIP: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	
  	format(string, sizeof(string), f_str,giveplayerid);
 	SendClientMessage(playerid,COLOR_GREY,string);
	return 1;
}
CMD:trulet(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/trulet [VIP]");
	PlayerInfo[playerid][pPlayTime][1] = giveplayerid;
	
	static const f_str[] = "pPlayTime: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	
  	format(string, sizeof(string), f_str,giveplayerid);
 	SendClientMessage(playerid,COLOR_GREY,string);
	return 1;
}
CMD:svw(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/sv [WORLD]");
	SetPlayerVirtualWorld(playerid,giveplayerid);
	
	static const f_str[] = "Виртуальный мир: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];
	
  	format(string, sizeof(string), f_str,giveplayerid);
 	SendClientMessage(playerid,COLOR_GREY,string);
	return 1;
}
CMD:si(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/si [INTERIOR]");
    SetPlayerInterior(playerid,giveplayerid);
    
    static const f_str[] = "Інтер'єр: %i";
	new string[sizeof(f_str) +1 + (-2 + 4)];

  	format(string, sizeof(string), f_str,giveplayerid);
 	SendClientMessage(playerid,COLOR_GREY,string);
    return 1;
}
CMD:payday(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	//if(!GetString(player_name[playerid],"Oscar_Floyd") || !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
	PayDay();
	return true;
}
CMD:cc(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	for(new i = 0; i < 60; i++) SendClientMessageToAll(COLOR_WHITE, "");
	SendClientMessageToAll(-1,"Ігровий чат очищений адміністрацією сервера");
	return true;
}
CMD:setskin(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new skin,giveplayerid;
    if(sscanf(params, "ud", giveplayerid,skin)) return SendEsp(playerid, "/setskin [id гравця] [id скина]");
	if(skin > 311 || skin < 1) return ErrorMessage(playerid, "Неправильный ID скина!");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	PlayerInfo[giveplayerid][pSkin] = skin;
	new string[72];
	format(string, sizeof(string), "Ви змінили скін %s на номер: %i",player_name[giveplayerid],skin);
	SendOk(playerid, string);
	A_SetPlayerSkin(giveplayerid, PlayerInfo[giveplayerid][pSkin]);
	UpdatePlayerData(giveplayerid,"Skin",PlayerInfo[giveplayerid][pSkin]);
	return true;
}
CMD:fuelcars(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new null,string[128];
	for(new i = GetVehiclePoolSize()+1; --i != 0;) {
		if(!VehicleInfo[i][vJob] && !VehicleInfo[i][vTeam]) continue;
		VehicleInfo[i][vFuel] = gTransport[GetVehicleModel(i)-400][trTank];
		null++;
	}
	format(string,sizeof(string),"%i автомобилей было заправлено!", null);
	SendOk(playerid,string);
	return 1;
}
CMD:setskill(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
    if(sscanf(params, "udd",params[0],params[1],params[2])) {
		SendUse(playerid, "/setskill [playerid/часть ника] [номер] [количество]");
		SendOk(playerid, "[0] Slinced Pistol | [1] Desert Eagle | [2] ShotGun | [3] MP5 | [4] AK47 | [5] M4A1");
		return true;
	}
	if(params[1] > 6 || params[1] < 0) return SendClientMessage(playerid,COLOR_GREY,"Неизвестное значение");
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pGunSkill][params[1]] = params[2];
	SendOk(playerid, "Рівень володіння зброєю гравцю встановлений");
	return true;
}
CMD:givemoney(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendEsp(playerid, "/givemoney [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	GiveMoney(id,money,"GiveMoney(adm)");
	format(string,sizeof(string),"Ви дали гравцю %s $%d",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	return true;
}
CMD:givedonate(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendEsp(playerid, "/givedonate [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	PlayerInfo[id][pRouble] += money;
	UpdatePlayerData(id, "donatemoney", PlayerInfo[id][pRouble]);
	format(string,sizeof(string),"Ви видали донат %s %d B-COIN",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	return true;
}
CMD:ylevel(playerid, params[]) {
 	if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
	new hp,giveplayerid;
    if(sscanf(params, "ud",giveplayerid,hp)) return SendEsp(playerid, "/ylevel [playerid] [HP]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(hp >= 11) return ErrorMessage(playerid,"Не можна давать більше 10 lvl");
	PlayerInfo[giveplayerid][pLevel] = hp;
	DollahScoreUpdate(giveplayerid);
	UpdatePlayerData(giveplayerid,"pLevel",hp);
	printf("NAMBAVAN ДАЛ %d LVL %s",hp,player_name[giveplayerid]);
	return true;
}
CMD:level(playerid, params[]) {
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/level [percent]");
	BonusInfo[act_level] = giveplayerid;
	SendOk(playerid,"Изменено");
	return true;
}
CMD:selected(playerid, params[]) {
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/selected [percent]");
	BonusInfo[act_select] = giveplayerid;
	SendOk(playerid,"Изменено");
	return true;
}
CMD:buycars(playerid, params[]) {
	new giveplayerid;
    if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/buycars [percent]");
	BonusInfo[act_buycar] = giveplayerid;
	SendOk(playerid,"Изменено");
	return true;
}
CMD:youtube(playerid) {
	if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
	D(playerid, D_PROMO, DSL, ""YELLOW"Промокоди", ""YELLOW"1."W" Список промокодів\n"YELLOW"2."W" Створити промокод\n"YELLOW"3."W" Видалити промокод", "Вибрати", "Назад");
	return 1;
}
CMD:ysetskill(playerid, params[]) {
    if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
    if(sscanf(params, "udd",params[0],params[1],params[2])) {
		SendUse(playerid, "/ysetskill [playerid/часть ника] [номер] [количество]");
		SendOk(playerid, "[0] Slinced Pistol |[1] Desert Eagle |[2] ShotGun |[3] MP5 |[4] AK47 |[5] M4A1");
		return true;
	}
	if(params[1] > 6 || params[1] < 0) return SendClientMessage(playerid,COLOR_GREY,"Неизвестное значение");
	if(!IsPlayerConnected(params[0])) return true;
	PlayerInfo[params[0]][pGunSkill][params[1]] = params[2];
	SendOk(playerid, "Рівень володіння зброєю гравцю встановлений");
	return true;
}
CMD:ylist(playerid) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    new name[44],rows, count, string[750];
	new Cache:result = mysql_query(connects, "SELECT `Name`,`youtube` FROM `accounts` WHERE `youtube` = 1 LIMIT 50");
    cache_get_row_count(rows);
    if(rows)
    {
       static const f_str[] = "%i. %s\n";
       new str[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 7)];
       for(new i; i < rows; i ++)
       {
	       cache_get_value_name(i, "Name", name, 44);
           count++;
	       format(str, sizeof(str), f_str, count, name);
           strcat(string, str);
       }
       D(playerid, DIALOG_NONE, DSL, ""W"Список ютуберов", string, "Закрити", "");
    }
    cache_delete(result);
    if(count == 0) return D(playerid, DIALOG_NONE, DSM, ""YELLOW"Список ютуберов", ""W"Список ютуберов отсутствует", "Закрити", "");
 	return true;
}
CMD:ygivemoney(playerid, params[]) {
    if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendEsp(playerid, "/ygivemoney [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	GiveMoney(id,money,"GiveMoney(adm)");
	format(string,sizeof(string),"Ви дали гравцю %s $%d",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	printf("NAMBAVAN ДАЛ %d грошей %s",money,player_name[id]);
	return true;
}
CMD:ygivedonate(playerid, params[]) {
    if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
    new id,money,string[150];
    if(sscanf(params,"ud",id,money)) return SendEsp(playerid, "/ygivedonate [id/name] [money]");
    if(!IsPlayerConnected(id)) return false;
	PlayerInfo[id][pRouble] += money;
	UpdatePlayerData(id, "donatemoney", PlayerInfo[id][pRouble]);
	format(string,sizeof(string),"Ви дали донат %s %d руб",player_name[id],money);
	SendClientMessage(playerid,-1,string);
	printf("NAMBAVAN ДАЛ %d доанта %s",money,player_name[id]);
	return true;
}
CMD:setacc(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
    if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
	new stat,amount,giveplayerid;
	if(sscanf(params, "udd",giveplayerid,stat,amount)) {
		SendEsp(playerid, "/setacc [id] [номер] [количество]");
		SendClientMessage(playerid, COLOR_GRAD4, "[1] Рівень | [2] Законопослушность| [3] Боєприпаси");
		SendClientMessage(playerid, COLOR_GRAD2, "[4] Exp | [5] Работа гравця | [6] рахунок мобильного");
		SendClientMessage(playerid, COLOR_GRAD2, "[7] Наркотики | [8] | Наркозалежність | [9] Аптечки");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch (stat) {
		case 1: {
			PlayerInfo[giveplayerid][pLevel] = amount;
   			DollahScoreUpdate(giveplayerid);
			UpdatePlayerData(giveplayerid,"pLevel",amount);
		}
		case 2: PlayerInfo[giveplayerid][pZakonp] = amount,UpdatePlayerData(giveplayerid,"pZakonp",amount);
        case 3: PlayerInfo[giveplayerid][pMats] = amount,UpdatePlayerData(giveplayerid,"pMats",amount);
		case 4: PlayerInfo[giveplayerid][pExp] = amount;
		case 5: PlayerInfo[giveplayerid][pJob] = amount,UpdatePlayerData(giveplayerid,"pJob",amount);
		case 6: PlayerInfo[giveplayerid][pMobile] = amount,UpdatePlayerData(giveplayerid,"pMobile",amount);
		case 7: PlayerInfo[giveplayerid][pDrugs] = amount,UpdatePlayerData(giveplayerid,"pDrugs",amount);
		case 8: PlayerInfo[giveplayerid][pAddiction] = amount;
		case 9: PlayerInfo[giveplayerid][pMedKit] = amount,UpdatePlayerData(giveplayerid,"pMedKit",amount);
	}
	SendOk(playerid, "Успішно изменено");
	return true;
}
CMD:coord(playerid)
{
	new Float:x,Float:y,Float:z,Float:a,string[90];
	GetPlayerFacingAngle(playerid,a);
	GetPlayerPos(playerid,x,y,z);
	
	format(string, sizeof(string),"X: %f | Y: %f | Z: %f | A: %f",x,y,z,a);
	SendClientMessage(playerid,0xFFFFFFFF,string);
	return true;
}
CMD:setstat(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	if(!GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren") && !GetString(player_name[playerid],"Klaus_Gurren")) return 1;
	new stat,amount,giveplayerid;
	if(sscanf(params, "udd",giveplayerid,stat,amount)) {
		SendEsp(playerid, "/setstat [id] [номер] [количество]");
		SendClientMessage(playerid, COLOR_GRAD4, "[1] Рівень | [2] Законопослушность| [3] Боєприпаси");
		SendClientMessage(playerid, COLOR_GRAD3, "[4] Номер телефона | [5] Exp");
		SendClientMessage(playerid, COLOR_GRAD2, "[6] VIP | [7] Работа гравця| [8] Гроші в банке");
		SendClientMessage(playerid, COLOR_GRAD2, "[9] рахунок мобильного | [10] Гроші | [11] Наркотики");
		SendClientMessage(playerid, COLOR_GRAD2, "[12] Донат рахунокчик [13] Наркозалежність [14] Аптечки");
		return true;
	}
	if(!IsPlayerConnected(giveplayerid)) return true;
	if(giveplayerid == INVALID_PLAYER_ID) return true;
	switch (stat) {
		case 1: {
			PlayerInfo[giveplayerid][pLevel] = amount;
   			DollahScoreUpdate(giveplayerid);
			UpdatePlayerData(giveplayerid,"pLevel",amount);
		}
		case 2: PlayerInfo[giveplayerid][pZakonp] = amount,UpdatePlayerData(giveplayerid,"pZakonp",amount);
        case 3: PlayerInfo[giveplayerid][pMats] = amount,UpdatePlayerData(giveplayerid,"pMats",amount);
		case 4: PlayerInfo[giveplayerid][pPhone] = amount,UpdatePlayerData(giveplayerid,"pPhone",amount);
		case 5: PlayerInfo[giveplayerid][pExp] = amount;
		//case 6: PlayerInfo[giveplayerid][pVips] = unix + amount*86400,UpdatePlayerData(giveplayerid,"pVips",PlayerInfo[giveplayerid][pVips]);
		case 7: PlayerInfo[giveplayerid][pJob] = amount,UpdatePlayerData(giveplayerid,"pJob",amount);
		case 8: PlayerInfo[giveplayerid][pBank] = amount,UpdatePlayerData(giveplayerid,"pBank",amount);
		case 9: PlayerInfo[giveplayerid][pMobile] = amount,UpdatePlayerData(giveplayerid,"pMobile",amount);
		case 10: PlayerInfo[giveplayerid][pCash] = amount,UpdatePlayerData(giveplayerid,"pCash",amount);
		case 11: PlayerInfo[giveplayerid][pDrugs] = amount,UpdatePlayerData(giveplayerid,"pDrugs",amount);
		case 12: PlayerInfo[giveplayerid][pRouble] = amount,UpdatePlayerData(giveplayerid,"donatemoney",amount);
		case 13: PlayerInfo[giveplayerid][pAddiction] = amount;
		case 14: PlayerInfo[giveplayerid][pMedKit] = amount,UpdatePlayerData(giveplayerid,"pMedKit",amount);
	}
	SendOk(playerid, "Успішно изменено");
	return true;
}
CMD:setmats(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new amount,giveplayerid;
	if(sscanf(params, "dd",giveplayerid,amount)) SendEsp(playerid, "/setstat [id] [количество]"),
	SendEsp(playerid, "1. Поліція ЛС | 2. Поліція СФ | 3. Поліція ЛВ | 4. ФБР | 5. Армія СФ | 6. Армія ЛВ"),
	SendEsp(playerid, "7. Ballas | 8. Vagos | 9. Grove | 10. Aztecas | 11. Rifa"),
	SendEsp(playerid, "12. Італьянська мафія(LCN) | 13. Японская мафія(YAKUZA) | 14. Українська мафія(RM)"),
	SendEsp(playerid, "15. Зброяний завод | 16. Нефтезавод | 17. ціна за 1г нарко притон | 18. лісопилка");
	switch(giveplayerid) {
		case 1: FI[fLSPD][fMats] = amount,UpdateFraction(fLSPD,"Mats",FI[fLSPD][fMats]);
		case 2: FI[fSFPD][fMats] = amount,UpdateFraction(fSFPD,"Mats",FI[fSFPD][fMats]);
		case 3: FI[fLVPD][fMats] = amount,UpdateFraction(fLVPD,"Mats",FI[fLVPD][fMats]);
		case 4: FI[fFBI][fMats] = amount,UpdateFraction(fFBI,"Mats",FI[fFBI][fMats]);
		case 5: FI[fARMYSF][fMats] = amount,UpdateFraction(fARMYSF,"Mats",FI[fARMYSF][fMats]);
		case 6: FI[fARMYLV][fMats] = amount,UpdateFraction(fARMYLV,"Mats",FI[fARMYLV][fMats]);

		case 7: FI[fBALLAS][fMats] = amount,UpdateFraction(fBALLAS,"Mats",FI[fBALLAS][fMats]);
		case 8: FI[fVAGOS][fMats] = amount,UpdateFraction(fVAGOS,"Mats",FI[fVAGOS][fMats]);
		case 9: FI[fGROVE][fMats] = amount,UpdateFraction(fGROVE,"Mats",FI[fGROVE][fMats]);
		case 10: FI[fAZTEC][fMats] = amount,UpdateFraction(fAZTEC,"Mats",FI[fAZTEC][fMats]);
		case 11: FI[fRIFA][fMats] = amount,UpdateFraction(fRIFA,"Mats",FI[fRIFA][fMats]);

		case 12: FI[fLCN][fMats] = amount,UpdateFraction(fLCN,"Mats",FI[fLCN][fMats]);
		case 13: FI[fYAKUZA][fMats] = amount,UpdateFraction(fYAKUZA,"Mats",FI[fYAKUZA][fMats]);
		case 14: FI[fRM][fMats] = amount,UpdateFraction(fRM,"Mats",FI[fRM][fMats]);

		case 15: zavodsklad = amount,UpdateOtherData("gun_mats",zavodsklad);
		case 16: oilsklad = amount,UpdateOtherData("oil_mats",oilsklad);
		case 17: pricedrugs = amount,UpdateOtherData("pricedrugs",pricedrugs);
		case 18: woodsklad = amount,UpdateOtherData("woodsklad",woodsklad);
		default: ErrorMessage(playerid,"Сталася помилка");
	}
	if(giveplayerid != 0) SendOk(playerid,"Ви успішно поповнили склад");
	return 1;
}
CMD:getip(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendEsp(playerid, "/getip [playerid]");
    new ip[15],string[128];
	GetPlayerIp(giveplayerid,ip,15);
	format(string, sizeof(string), "Nik [%s]   R-IP [%s]   L-IP [%s]   IP [%s]",player_name[giveplayerid],PlayerInfo[giveplayerid][pIpReg],player_ip[giveplayerid],ip);
	SendClientMessage(playerid,0x6BB3FFAA,string);
	return true;
}
CMD:prefix(playerid, params[])
{
        if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
        if(sscanf(params, "ds[24]", params[0], params[1])) return SendEsp(playerid, "/prefix [ID] [Префікс]");
        if(!TI[params[0]][tLogin]) return ErrorMessage(playerid,"Гравець не авторизувався");
        if(PlayerInfo[params[0]][pAdmin] < 1 || dostup[playerid] == 0) return ErrorMessage(playerid,"Гравець не адміністратор або не авторизувався");
        
        new string[144], query[144];
        sscanf(params[1], "s[24]", PlayerInfo[params[0]][pPrefix]);
        format(string, sizeof(string), "[A] %s встановив префікс '%s' адміністратору: %s", player_name[playerid], PlayerInfo[params[0]][pPrefix], player_name[params[0]]);
        SendAdminMessage(0xAFAFAFAA, string);
        format(query, sizeof(query), "UPDATE `accounts` SET `prefix` = '%s' WHERE `pID` = '%d'", PlayerInfo[params[0]][pPrefix], PlayerInfo[params[0]][pID]);
        mysql_tquery(connects,query);
        return 1;
}
CMD:makeadmin(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0)
		return true;
		
	new Name[30],Level;
	if(sscanf(params, "s[30]d",Name,Level))
		return SendEsp(playerid, "/makeadmin [id / ник] [рівень]");
	if(strcmp(Name, player_name[playerid]) || strval(Name) == playerid)
	if(!isNumeric(Name)) {
		new id_name = strval(Name);
		if(id_name == playerid)
		    return ErrorMessage(playerid, "Ви не можете изменить самому себе рівень адміністрування!");
	}
	if(!(0 <= Level <= 6))
		return ErrorMessage(playerid, "От 0 до 6");
	if(!strcmp(Name,"Klaus_Gurren") || !strcmp(Name,"Klaus_Gurren") || !strcmp(Name,"Klaus_Gurren"))
		return SendClientMessage(playerid,COLOR_REDD,"Не вийде)");

	new query[128];
	if(!isNumeric(Name)) {
		new id_name = strval(Name);
		if(!IsPlayerConnected(id_name))
			return ErrorMessage(playerid, not_id);
		if(!strcmp(Name,"Klaus_Gurren") || !strcmp(Name,"Klaus_Gurren") || !strcmp(Name,"Klaus_Gurren"))
			return SendClientMessage(playerid,COLOR_REDD,"Не вийде)");
			
		format(query, sizeof(query), "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", player_name[id_name]);
		mysql_pquery(connects, query, "Moderator", "dsd",playerid,player_name[id_name],Level);
		return 1;
	}
	format(query, sizeof(query), "SELECT * FROM `admin` WHERE `name` = '%s' LIMIT 1", Name);
	mysql_pquery(connects, query, "Moderator", "dsd",playerid,Name,Level);
	return 1;
}
CMD:makegs(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0)
		return true;
		
	new Name[30],Level;
	if(PlayerInfo[playerid][pAdmin] < 6)
		return ErrorMessage(playerid, "Ви не можете назначить себя на Support'a");
	if(sscanf(params, "s[30]d",Name,Level))
		return SendEsp(playerid, "/makegs [id / ник] [1 - назначить | 0 - зняти]");
	if(!(0 <= Level <= 1))
		return ErrorMessage(playerid, "От 0 до 1");
		
	new query[128];
	if(!isNumeric(Name)) {
		new id_name = strval(Name);
		if(!IsPlayerConnected(id_name)) return ErrorMessage(playerid, not_id);
		if(PlayerInfo[id_name][pHelper] == Level) return ErrorMessage(playerid,"Гравець уже состоит/не состоит в Game Support");
		PlayerInfo[id_name][pHelper] = Level;
		UpdatePlayerData(id_name,"pHelper",Level);
		new str[128];
		format(str,sizeof str,""W"%s {f6f6d9}Успішно добавлен/удален в/из Game Support",player_name[id_name]);
		SendOk(playerid,str);
		if(Level == 0) TI[id_name][tHelperDuty] = false;
		return 1;
	}
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `Name` = '%s' LIMIT 1", Name);
	mysql_pquery(connects, query, "add_gs", "dsd",playerid,Name,Level);
	return 1;
}
alias:gamesupports("gamesupp","gsupp","supports","support","helper","helpers");
CMD:gamesupports(playerid) {
	new countleader = 0;
	new string[1024],str[156];
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!PlayerInfo[i][pHelper] || !TI[i][tHelperDuty]) continue;
		format(str, sizeof(str), ""W"%s[%i] %s\n",player_name[i],i,TI[i][tAFK]>=3?("{ffa800}[AFK]"):("")),strcat(string,str);
		countleader++;
	}
	if(countleader > 0) {
		format(string, sizeof(string), "%s\n"ORANGE"в мережі %i Game Support's", string,countleader);
		D(playerid, DIALOG_NONE, DSM, ""YELLOW"Game Supports",string, "Закрити", "");
	}
	else D(playerid, DIALOG_NONE, DSM, ""YELLOW"Game Supports",""W"Нет Game Supports в мережі", "Закрити", "");
	return 1;
}
CMD:askmute(playerid, params[]) {
    if(!PlayerInfo[playerid][pHelper] || !TI[playerid][tHelperDuty]) return true;
	new time, text[33],string[144],giveplayerid;	
	if(sscanf(params, "uds[32]",giveplayerid,time,text)) return SendEsp(playerid, "/askmute [playerid] [хвилини] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви вказали свій ID");
	if(PlayerInfo[giveplayerid][pAskmute]) return ErrorMessage(playerid,"У гравця уже закрыт доступ к подаче вопросов");
    if(IsAIP(text))return 1;
	if(strlen(text) > 30) return ErrorMessage(playerid,"Причина повинна бути меньше 30 символів");
 	if(time > 15) return ErrorMessage(playerid,"Заблокувати подачу можно максимум на 15 хвилин");
	if(GetPVarInt(playerid,"ban")>gettime()) return ErrorMessage(playerid,"Можно раз в 10 секунд");
    SetPVarInt(playerid,"ban",gettime()+10);
	PlayerInfo[giveplayerid][pAskmute] = time*60;
	UpdatePlayerData(giveplayerid,"pAskmute",PlayerInfo[giveplayerid][pAskmute]);
	format(string, sizeof(string), "Саппорт %s закрыл доступ к вопросам %s на %d мин. Причина: %s",player_name[playerid],player_name[giveplayerid], time, text);
	SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
	
	format(string, sizeof(string), "[GS MUTE]"W" %s закрыл доступ к вопросам %s на %d мин. Причина: %s",player_name[playerid],player_name[giveplayerid], time, text);
	SendGSMessage(COLOR_YELLOW, string);
	
	WriteLog(LOG_MUTE,player_name[playerid],player_name[giveplayerid],text);
	return true;
}

CMD:gs(playerid, params[]) {
    if(!PlayerInfo[playerid][pHelper] || !TI[playerid][tHelperDuty]) return true;
	new string[144],text[130];
	if(sscanf(params,"s[128]",text)) return SendEsp(playerid,"/gs [текст]");
	format(string, sizeof(string), "[GS]"W" %s(%i): %s",player_name[playerid],playerid,text);
	SendGSMessage(COLOR_YELLOW, string);
	return true;
}

CMD:dj(playerid, params[]) {
    if(!DJlvl[playerid]) return true;
	new string[144],text[130];
	if(sscanf(params,"s[128]",text)) return SendEsp(playerid,"/dj [текст]");
	format(string, sizeof(string), "[DJ %s]"W" %s(%i): %s",DJname[playerid],player_name[playerid],playerid,text);
	SendDJMessage(COLOR_YELLOW, string);
	return true;
}

CMD:djmsg(playerid, params[]) {
    if(!DJlvl[playerid]) return true;
	if(DJmsg > gettime()) return ErrorMessage(playerid,"Команду можна використовувати раз в 10 хвилин!");
	D(playerid, D_DJMSG, DSL, ""YELLOW"Вибір текста", ""YELLOW"1."W" Вариант 1\n"YELLOW"2."W" Вариант 2\n"YELLOW"3."W" Вариант 3\n"YELLOW"4."W" Вариант 4\n"YELLOW"5."W" Вариант 5", "Вибрати", "Закрити");
	return true;
}
CMD:makedj(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 && DJlvl[playerid] < 2) return true;
	new giveplayerid,Level;
	if(sscanf(params, "dd",giveplayerid,Level)) return SendEsp(playerid, "/makedj [id] [1 - назначить | 0 - зняти]");
	if(!(0 <= Level <= 1)) return ErrorMessage(playerid, "От 0 до 1");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	if(DJlvl[giveplayerid] && Level) return ErrorMessage(playerid,"Гравець уже состоит в команде Dj");
	new query[100];
	format(query, sizeof(query), "SELECT * FROM `rjlist` WHERE `pid` = '%d' LIMIT 1", PlayerInfo[giveplayerid][pID]);
	mysql_pquery(connects, query, "add_dj", "ddd",playerid,giveplayerid,Level);
	return 1;
}

CMD:gspiar(playerid, params[]) {
	if(!PlayerInfo[playerid][pHelper] || !TI[playerid][tHelperDuty]) return true;
	if(GetSVarInt("gspiar_timer") > gettime()) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(GetSVarInt("gspiar_timer") - unix, year, month, day, hour, minute, second);
		new string[128];
		format(string,sizeof(string),"Пользоваться данной командой можно через: "W"%02d:%02d", minute, second);
		ErrorMessage(playerid, string);
		return 1;
	}
	SendClientMessageToAll(COLOR_YELLOW,"Є питання по грі? Задай його нашим Game Support's - /ask");
	SetSVarInt("gspiar_timer", gettime() + 60*5);
	return 1;
}

CMD:gsduty(playerid, params[]) {
    if(!PlayerInfo[playerid][pHelper]) return true;
	new string[144];
	if(!TI[playerid][tHelperDuty]) {
		TI[playerid][tHelperDuty] = true;
		format(string, sizeof(string), "[GS]"W" %s(%i) заступил(а) на дежурство",player_name[playerid],playerid);
		SendGSMessage(COLOR_YELLOW, string);
	}
	else {
		format(string, sizeof(string), "[GS]"W" %s(%i) покинул(а) дежурство",player_name[playerid],playerid);
		SendGSMessage(COLOR_YELLOW, string);
		TI[playerid][tHelperDuty] = false;
	}
	return true;
}
CMD:asks(playerid, params[]) {
	if(!PlayerInfo[playerid][pHelper] || !TI[playerid][tHelperDuty]) return true;
	for(new i;i<MAX_ASK;i++) {
		if(PlayerReportAsk[i] != -1) {
			if(ReportSlotAsk[i] == 1) continue;
			new string[400];
			new stringer[150];
			format(string, sizeof(string), ""W"Вопрос от %s[%i]\n\n{f6f6d9}%s\n", player_name[PlayerReportAsk[i]], PlayerReportAsk[i], TextAsk[i]);
			D(playerid,D_ASK_1,DSI, ""YELLOW"Game Support's'",string,"Прийняти","Відміна");
			ReportIDAsk[playerid] = i;
			ReportSlotAsk[i] = 1;
			format(stringer, sizeof stringer, "Game Support %s[%d] обрабатывает Ваш вопрос",player_name[playerid],playerid);
			SendUse(PlayerReportAsk[i], stringer);
			return 1;
		}
	}
	ErrorMessage(playerid, "Питання відсутні");
	return 1;
}
CMD:last(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return ErrorMessage(playerid, "Вам недоступна эта функція");
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/last [Nick_Name]");
    new query[128];
    format(query, sizeof(query), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params);
	new Cache:result = mysql_query(connects, query);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid,"Аккаунт не знайдений");
    cache_get_value_name(0, "pOnline",query,30);
    static const f_str[] = "Ник: %s | Последний вход: %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 9)];
	format(string,sizeof(string),f_str,params,query);
	SendClientMessage(playerid,COLOR_BLUE,string);
	cache_delete(result);
	return true;
}
CMD:makeleader(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	new string[64], strings[1024];
	strcat(strings,"№\tОрганизація\tЛідер\n");
	for(new i = 1;i < MAX_FRACTIONS;i ++) {
		format(string,sizeof(string),"%i\t%s\t%s\n",i,FI[i][fName],FI[i][fLeader]);
		strcat(strings,string);
	}
	D(playerid,D_MAKELEADER_INFO,DSTH,"Лідери організацій",strings,"Вибрати","Відміна");
	return 1;
}
CMD:infoips(playerid,params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 19) return SendEsp(playerid, "/infoips [IP]");
    new QUERY[256];
    format(QUERY, sizeof(QUERY), "SELECT HIGH_PRIORITY * FROM `"TABLE_ACCOUNTS"` WHERE `pvIp` LIKE '%s%s%s'","%",params,"%");
	new Cache:result = mysql_query(connects, QUERY);
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid,"IP адрес не знайдений");
    new tmpas[16],regip[16],mname[32],level;
    for(new i = 0; i < rows; i++) {
	    cache_get_value_name(i, "Name", mname, MAX_PLAYER_NAME);
	    cache_get_value_name(i, "pvIp", tmpas, 16);
	    cache_get_value_name(i, "pIpReg", regip, 16);
	    cache_get_value_name_int(i,"pLevel", level);

		static const f_str[] = "%s | LAST-IP: %s | REG-IP: %s | LVL: %d";
		new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 16) + (-2 + 16) + (-2 + 4)];

		format(string,sizeof(string),f_str,mname,tmpas, regip,level);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
    cache_delete(result);
	return true;
}
CMD:mutelist(playerid, const params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new countmute = 0,string[1024],str[128];
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pMute] > 0) {
			format(str, sizeof(str), ""YELLOW"%d. "ORANGE"%s"W" | ID: "YELLOW"%d"W" | Секунд: "GREEN"%d\n",countmute+1,player_name[i],i,PlayerInfo[i][pMute]),strcat(string,str);
			countmute++;
		}
	}
	if(countmute == 0) return ErrorMessage(playerid, "Немає гравців з баном чата");
	D(playerid, DIALOG_NONE, DSM, ""YELLOW"Гравці с баном чата", string, "Закрити", "");
	return true;
}
CMD:agetip(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	if(isnull(params) || strlen(params) > 25) return SendEsp(playerid, "/agetip [Ник]");
	new QUERY[128];
	format(QUERY, sizeof(QUERY), "SELECT * FROM `"TABLE_ACCOUNTS"` WHERE `Name` = '%s'",params);
	new Cache:result = mysql_query(connects, QUERY),ip[2][17];
	new rows = cache_num_rows();
	if(rows == 0) return ErrorMessage(playerid,"Аккаунт не знайдений!");
	
	cache_get_value_name(0, "pvIp",ip[0],16);
	cache_get_value_name(0, "pIpReg",ip[1],16);

	static const f_str[] = "Ник: %s | IP: %s | IP при регистрации: %s";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 17) + (-2 + 17)];

	format(string,sizeof(string),f_str,params,ip[0],ip[1]);
	SendClientMessage(playerid,COLOR_BLUE,string);
	cache_delete(result);
	return true;
}
CMD:captfreeze(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0) return true;
	new gang_id, time,string[128];
	if(sscanf(params,"ii",gang_id, time)) {
		SendClientMessage(playerid,COLOR_GREY,"/captfreeze [id] [часов]");
		SendClientMessage(playerid,COLOR_GREY,"1 - The Ballas | 2 - The Vagos | 3 - The Grove");
		SendClientMessage(playerid,COLOR_GREY,"4 - The Rifa | 5 - The Aztecas | 6 - LCN");
		SendClientMessage(playerid,COLOR_GREY,"7 - Yakuza | 8 - Russian Mafia");
		return 1;
	}
	if(gang_id < 1 || gang_id > 8 || time < 0) {
		SendClientMessage(playerid,COLOR_GREY,"/captfreeze [id] [часов]");
		SendClientMessage(playerid,COLOR_GREY,"1 - The Ballas | 2 - The Vagos | 3 - The Grove");
		SendClientMessage(playerid,COLOR_GREY,"4 - The Rifa | 5 - The Aztecas | 6 - LCN");
		SendClientMessage(playerid,COLOR_GREY,"7 - Yakuza | 8 - Russian Mafia");
		return 1;
	}
	if(time == 0) {
		fracmoroz[gang_id-1] = 0;
		format(string, sizeof(string), "Адміністратор %s разморозил банду %s",player_name[playerid],fracmorozName[gang_id-1]);
	}
	else {
		fracmoroz[gang_id-1] = unix+(3600*time);
		format(string, sizeof(string), "Адміністратор %s заморозил банду %s на %d час(ов)",player_name[playerid],fracmorozName[gang_id-1],time);
	}
	SendBand(COLOR_LIGHTRED, string);
	AdmMSG(COLOR_LIGHTRED, string,1);
	UpdateMorozed();
	return 1;
}
/*CMD:warns(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] != 0) {
		new giveplayerid;
	    if(PlayerInfo[playerid][pAdmin] < 2 || dostup[playerid] == 0) return true;
	    if(sscanf(params, "d", giveplayerid)) return SendEsp(playerid, "/warns [playerid]");
		if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	    if(PlayerInfo[giveplayerid][pWarns] == 0) return ErrorMessage(playerid,"На данном аккаунте предупреждений нет");
		new query[128];
	    format(query, sizeof(query), "SELECT * FROM `warns` WHERE `name` = '%s' ORDER BY `warn` DESC LIMIT %d", player_name[giveplayerid], PlayerInfo[giveplayerid][pWarns]);
	    mysql_tquery(connects, query, "warninfo", "ii", giveplayerid,0);
	    SetPVarInt(giveplayerid, "warninfo", playerid);
	}
	else {
	    if(PlayerInfo[playerid][pWarns] == 0) return ErrorMessage(playerid,"На Вашем аккаунте предупреждений нет");
	    new query[128];
	    format(query, sizeof(query), "SELECT * FROM `warns` WHERE `name` = '%s' ORDER BY `warn` DESC LIMIT %d", player_name[playerid], PlayerInfo[playerid][pWarns]);
	    mysql_tquery(connects, query, "warninfo", "ii", playerid,1);
	}
	return 1;
}*/
CMD:apanel(playerid, const params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new string[1612];
	switch(PlayerInfo[playerid][pAdmin]) {
		case 1: format(string,sizeof(string),""YELLOW"1."W" Адміністрація\n"YELLOW"2."W" Заспавнитись\n"YELLOW"3."W" Влаштуватись на роботу\n"YELLOW"4."W" Гравці в тюрмі\n"YELLOW"5."W" Гравці з баном чата\n"YELLOW"6."W" Адмін інформація %s\n"YELLOW"7."W" Kill List %s",(!PlayerInfo[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PlayerInfo[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
		case 2: format(string,sizeof(string),""YELLOW"1."W" Адміністрація\n"YELLOW"2."W" Заспавнитись\n"YELLOW"3."W" Влаштуватись на роботу\n"YELLOW"4."W" Гравці в тюрмі\n"YELLOW"5."W" Гравці з баном чата\n"YELLOW"6."W" Адмін інформація %s\n"YELLOW"7."W" Kill List %s\n"YELLOW"8."W" Онлайн організацій\n"YELLOW"9."W" Відремонтувати автомобіль",(!PlayerInfo[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PlayerInfo[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
		case 3: format(string,sizeof(string),""YELLOW"1."W" Адміністрація\n"YELLOW"2."W" Заспавнитись\n"YELLOW"3."W" Влаштуватись на роботу\n"YELLOW"4."W" Гравці в тюрмі\n"YELLOW"5."W" Гравці з баном чата\n"YELLOW"6."W" Адмін інформація %s\n"YELLOW"7."W" Kill List %s\n"YELLOW"8."W" Онлайн організацій\n"YELLOW"9."W" Відремонтувати автомобіль\n"YELLOW"10."W" Стан складів\n"YELLOW"11."W" Дізнатись заморозки банд/мафій",(!PlayerInfo[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PlayerInfo[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
		case 4: format(string,sizeof(string),""YELLOW"1."W" Адміністрація\n"YELLOW"2."W" Заспавнитись\n"YELLOW"3."W" Влаштуватись на роботу\n"YELLOW"4."W" Гравці в тюрмі\n"YELLOW"5."W" Гравці з баном чата\n"YELLOW"6."W" Адмін інформація %s\n"YELLOW"7."W" Kill List %s\n"YELLOW"8."W" Онлайн організацій\n"YELLOW"9."W" Відремонтувати автомобіль\n"YELLOW"10."W" Стан складів\n"YELLOW"11."W" Дізнатись заморозки банд/мафій\n"YELLOW"12."W" Банлист\n"YELLOW"13."W" Можливо взламані\n"YELLOW"14."W" Билборди\n"YELLOW"15."W" Поєдинки %s",(!PlayerInfo[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PlayerInfo[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!duels) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
		case 5: format(string,sizeof(string),""YELLOW"1."W" Адміністрація\n"YELLOW"2."W" Заспавнитись\n"YELLOW"3."W" Влаштуватись на роботу\n"YELLOW"4."W" Гравці в тюрмі\n"YELLOW"5."W" Гравці з баном чата\n"YELLOW"6."W" Адмін інформація %s\n"YELLOW"7."W" Kill List %s\n"YELLOW"8."W" Онлайн організацій\n"YELLOW"9."W" Відремонтувати автомобіль\n"YELLOW"10."W" Стан складів\n"YELLOW"11."W" Дізнатись заморозки банд/мафій\n"YELLOW"12."W" Банлист\n"YELLOW"13."W" Можливо взламані\n"YELLOW"14."W" Билборди\n"YELLOW"15."W" Поєдинки %s\n"YELLOW"16."W" Античіт\n"YELLOW"17."W" Казино %s\n"YELLOW"18."W" Репорт %s\n"YELLOW"19."W" Заповнити склад банд/мафій\n"YELLOW"20."W" Ліміт Invite",(!PlayerInfo[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PlayerInfo[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!duels) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!casino) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!rep_system) ? ("{FF182D}[OLD]") : ("{33AA33}[NEW]"));
		case 6,7: format(string,sizeof(string),""YELLOW"1."W" Адміністрація\n"YELLOW"2."W" Заспавнитись\n"YELLOW"3."W" Влаштуватись на роботу\n"YELLOW"4."W" Гравці в тюрмі\n"YELLOW"5."W" Гравці з баном чата\n"YELLOW"6."W" Адмін інформація %s\n"YELLOW"7."W" Kill List %s\n"YELLOW"8."W" Онлайн організацій\n"YELLOW"9."W" Відремонтувати автомобіль\n"YELLOW"10."W" Стан складів\n"YELLOW"11."W" Дізнатись заморозки банд/мафій\n"YELLOW"12."W" Банлист\n"YELLOW"13."W" Можливо взламані\n"YELLOW"14."W" Билборди\n"YELLOW"15."W" Поєдинки %s\n"YELLOW"16."W" Античіт\n"YELLOW"17."W" Казино %s\n"YELLOW"18."W" Репорт %s\n"YELLOW"19."W" Заповнити склад банд/мафій\n"YELLOW"20."W" Ліміт Invite\n"YELLOW"21."W" Далекобійники\n"YELLOW"22."W" Промокоди\n"YELLOW"23."W" Бонуси\n"YELLOW"24."W" Поповнити продукти в бізнесі(скільки заказав власник)\n"YELLOW"25."W" Анти ТК %s\n"YELLOW"26. "W"Настройки VIP-уровнів\n"YELLOW"27. "W"Стартовий бонус {33AA33}[NEW!]\n\
		"YELLOW"28. "W"Диалог обновления %s",(!PlayerInfo[playerid][pAdmMSG]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!PlayerInfo[playerid][pAdmKL]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!duels) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!casino) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!rep_system) ? ("{FF182D}[OLD]") : ("{33AA33}[NEW]"),(!anti_tk) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"),(!OthersInfo[show_update]) ? ("{FF182D}[OFF]") : ("{33AA33}[ON]"));
	}
    D(playerid,D_ADMIN_PANEL,DSL,""YELLOW"Адмін панель",string,"Вибрати","Відміна");
	return true;
}
CMD:new(playerid) {
	if(OthersInfo[show_update] == 0) return ErrorMessage(playerid, "Команда була відключена адміністратором.");
	if(OthersInfo[show_update] == 1) D(playerid, DIALOG_NONE, DSM, ""YELLOW"samp ukraine v.1.0 | "W"Оновлення "YELLOW"16.07.2023", "\n\
	"W"~ Добавлена команда /sistema (писати від імені системи)\n\
	"W"~ Виправлення багів сервера\n\
	"W"~ Виправлення багів сервера", "Закрити", "");
	return 1;
}
CMD:gsinfo(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params, "d",giveplayerid)) return SendEsp(playerid, "/gsinfo [ID]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	new string[200];
	format(string,sizeof(string),"Ответов: "W"\t\t%d",PlayerInfo[giveplayerid][pAsk]);
	D(playerid,DIALOG_NONE,DSM,player_name[giveplayerid],string,"Закрити","");
	return 1;
}
CMD:ainfo(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;

	new string[512];
	format(string,sizeof(string),""ORANGE"Киков: "W"\t\t%d\n"ORANGE"Банов: "W"\t\t%d\n"ORANGE"Мутов: "W"\t\t%d\n"ORANGE"Ответов: "W"\t\t%d\n"ORANGE"Варнов: "W"\t\t%d\n"ORANGE"Джайлов: "W"\t\t%d\n"ORANGE"Репутация: "W"\t\t%d\n\n"ORANGE"Онлайн за текущий день:"W"\t%s",gAdmin[playerid][0],gAdmin[playerid][1],gAdmin[playerid][2],gAdmin[playerid][3],gAdmin[playerid][4],gAdmin[playerid][5],gAdmin[playerid][8],ConvertsCmdTime(gAdminTime[playerid]));
	D(playerid,DIALOG_NONE,DSM,player_name[playerid],string,"Закрити","");
	return 1;
}
CMD:admstats(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	D(playerid, D_ADMIN_TIME, DSI, ""YELLOW"Статистика адміністратора", "\n\n"W"Для перегляду статистики адміністратора\nукажите его ник:\n\n", "Ввід", "Відміна");
	return 1;
}
CMD:agiverank(playerid,params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new rankid,giveplayerid;
	if(sscanf(params,"ui", giveplayerid, rankid)) return SendEsp(playerid, "/agiverank [id] [ранг]");
	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	if(!PlayerInfo[giveplayerid][pMember]) return ErrorMessage(playerid, "Гравець не в організації");
	if(rankid > (FI[PlayerInfo[giveplayerid][pMember]][fMaxRang]-1) || rankid < 1) return ErrorMessage(playerid, "Ви допустили ошибку");
	new string[128];
	format(string, sizeof(string), "[A] %s изменил ранг гравцю %s c %d на %d", player_name[playerid],player_name[giveplayerid],PlayerInfo[giveplayerid][pRank],rankid);
	AdmMSG(0xAFAFAFAA, string,1);

	format(string, sizeof(string), "Адміністратор "YELLOW"%s{f6f6d9} изменил Вам ранг на "W"%d",player_name[playerid],rankid);
	SendUse(giveplayerid, string);

	PlayerInfo[giveplayerid][pRank] = rankid;
	UpdatePlayerData(giveplayerid,"pRank", rankid);
	return 1;
}
CMD:setbizmafia(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;

	new mafiaid;
	if(sscanf(params,"d",mafiaid)) {
		SendEsp(playerid, "/setbizmafia [номер]");
		SendClientMessage(playerid,COLOR_GREY, "1 - Італійська | 2 - Японська | 3 - Українська");
		return 1;
	}
	if(mafiaid < 1 || mafiaid > 3) return 1;
	for(new b; b < gBusinessCount; b++) {
		if(!PlayerToPoint(4.0,playerid,gBusiness[b][bizzX],gBusiness[b][bizzY],gBusiness[b][bizzZ])) continue;
		switch(mafiaid) {
			case 1: gBusiness[b][bizzMafia] = fLCN;
			case 2: gBusiness[b][bizzMafia] = fYAKUZA;
			case 3: gBusiness[b][bizzMafia] = fRM;
		}
		static const mafia_name[][] = {
			"Італьянська мафія",
			"Японська мафія",
			"Українська мафія"
		};
		new string[128];
		format(string, sizeof(string), "[A] %s изменил контроль бізнеса %s - %s", player_name[playerid], gBusiness[b][bizzName], mafia_name[mafiaid-1]);
		AdmMSG(0xAFAFAFAA, string,1);
		UpdateBusinessText(b);
		UpdateBusinessData(b+1,"mafia",gBusiness[b][bizzMafia]);
		break;
	}
	return 1;
}
CMD:gspawn(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3 || dostup[playerid] == 0) return true;
	new giveplayerid;
	if(sscanf(params,"u", giveplayerid)) return SendEsp(playerid, "/gspawn [id]");

	if(giveplayerid == INVALID_PLAYER_ID) return ErrorMessage(playerid, not_id);
	PlayerSpawn(giveplayerid);
	new string[128];
	format(string, sizeof(string), "[A] %s[%d] заспавнил гравця %s[%d]",player_name[playerid],playerid,player_name[giveplayerid],giveplayerid);
	AdmMSG(0xAFAFAFAA, string,1);
	format(string, sizeof(string), "Вас заспавнил адміністратор %s[%d]",player_name[playerid],playerid);
	SendOk(giveplayerid, string);
	return 1;
}
CMD:vibor(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
	D(playerid, D_ELECTION, DSL, ""YELLOW"Керування виборами", ""YELLOW"1."W" Список кандидатів\n"YELLOW"2."W" Добавити кандидата\n"YELLOW"3."W" Зняти кандитата\n"YELLOW"4."W" Почати вибори\n"YELLOW"5."W" Закінчити вибори", "Вибрати", "Закрити");
	return 1;
}
CMD:inet(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
    new stats[100], stringstats[70], string[60],giveplayerid;
	if(sscanf(params, "u",giveplayerid)) return SendEsp(playerid, "/inet [playerid]");
	GetPlayerNetworkStats(giveplayerid, stats, sizeof(stats));
    new last = strfind(stats, "Packetloss: ");
    new Float:packetloss = 0.0;
    if(last != -1) {
	    strmid(stringstats, stats, last, strlen(stats));
	    new last2 = strfind(stringstats, "%");
	    if(last != -1)  {
	        strdel(stats, 0, strlen(stats));
	        strmid(stats, stringstats, last2-3, last2);
	        packetloss = floatstr(stats);
	    }
    }
	format(string, sizeof(string), "Name: %s | PacketLoss: %.0f",player_name[giveplayerid],packetloss);
	SendClientMessage(playerid,0x6BB3FFAA,string);
	return true;
}

CMD:timestat(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new str[256];
	format(str, sizeof(str),"Последнее время прокрутки Timer_Unix: (%d ms). пик: (%d ms).\n", time_grandtimer, time_grandtimer_max);
	format(str, sizeof(str),"%sПоследнее время прокрутки OnPlayerUpdate: (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"newkeys\": (%d ms). пик: (%d ms).\nПоследнее время прокрутки \"second_timer\": (%d ms). пик: (%d ms).", str, time_update,time_update_max,time_newkeys,time_newkeys_max,time_second,time_second_max);
	D(playerid,DIALOG_NONE,DSM, ""YELLOW"Нагрузка мода", str, "Закрити", "");
	return 1;
}
CMD:getvw(playerid) {
	if(PlayerInfo[playerid][pAdmin] < 1 || dostup[playerid] == 0) return true;
	new str[64];
	format(str, sizeof(str), "Виртуальный мир: %i %i",GetPlayerVirtualWorld(playerid),TI[playerid][tSelectedBusinessID]);
 	SendClientMessage(playerid,-1,str);
	return 1;
}
CMD:createatm(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new atmID = -1;
	for(new a = 1; a < MAX_ATM; a++) {
		if(ATMData[a][atm_Taken] == 0) {
			atmID = a;
			break;
		}
	}
	if(atmID == -1) return ErrorMessage(playerid, "Максимальної кількості банкоматів досягнуто");
	CreateATM(playerid, atmID);
	return 1;
}

CMD:editatm(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 6 || dostup[playerid] == 0) return true;
	new atmID, title[29];
	if(!sscanf(params, "i", atmID)) {
		if(atmID < 1 || atmID > MAX_ATM) return ErrorMessage(playerid, "Указан неверный банкомат!");

		if(ATMData[atmID][atm_Taken] == 0) return ErrorMessage(playerid, "Банкомат, который Ви хочете редактировать, не активен");

		EdittingATM[playerid] = atmID;

		format(title, sizeof(title), "Изменение ATM: (ID: %d)", atmID);
		D(playerid, DIALOG_ATM_EDIT, DSL, title, "Изменение позиции(редактор)\nПеренести позицию на свои координаты\nУдаление ATM", "Далі", "Відміна");
	}
	else SendEsp(playerid, "/editatm [atmID]");
	return 1;
}
CMD:poscar(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 7 || dostup[playerid] == 0) return true;
	if(sscanf(params, "d",params[0])) return SendEsp(playerid, "/poscar [дом]");
	new carid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(carid) != 560) return ErrorMessage(playerid, "Сядьте в султан");
	
	new Float: lwx, Float:lwy, Float:lwz,Float:a;
	GetVehiclePos(carid,lwx, lwy, lwz);
	GetVehicleZAngle(carid,a);

	gHouses[params[0]-1][houseParkX] = lwx;
	gHouses[params[0]-1][houseParkY] = lwy;
	gHouses[params[0]-1][houseParkZ] = lwz;
	gHouses[params[0]-1][houseParkR] = a;
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	SendOk(playerid, "Координаты машини встановлені(Я надеюсь ты поставил машину ровно)");
	new query[256];
	format(query,sizeof(query),"UPDATE `houses` SET `parkx` = '%.2f',`parky` = '%.2f',`parkz` = '%.2f',`parkr` = '%.2f' WHERE id = '%d'",gHouses[params[0]-1][houseParkX],gHouses[params[0]-1][houseParkY],gHouses[params[0]-1][houseParkZ],gHouses[params[0]-1][houseParkR],params[0]);
	mysql_tquery(connects, query);
	return true;
}
CMD:mp(playerid, params[]) {
    if(!Teleport) return ErrorMessage(playerid,"Активных мероприятий нет");
    if(IsPlayerInAnyVehicle(playerid)) return ErrorMessage(playerid, "Не можна использовать в машине");
    if(PlayerInfo[playerid][pJailTime] >= 1) return ErrorMessage(playerid, "Ви в тюрьме");
    if(PlayerInfo[playerid][pHospital]) return ErrorMessage(playerid, "Ви в лікарні");
    if(Teleport_Plus[playerid] == 1) return ErrorMessage(playerid, "Ви уже использовали эту команду");
	if(Teleport_Players[1] >= Teleport_Players[0]) return ErrorMessage(playerid,"Недостаточно мест на мероприятии");
    D(playerid, D_MP_3, DSM, ""YELLOW"Телепортация", "\n\n"W"Ви уверены, что хочете попасть в место проведения мероприятия?\n\n", "Так", "Ні");
    return 1;
}
CMD:gomp(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 4 || dostup[playerid] == 0 && PlayerInfo[playerid][pYoutube] == 0) return true;
    if(!Teleport) D(playerid, D_MP, DSL, ""YELLOW"МЕРОПРИЯТИЕ", ""YELLOW"1."W" Создать телепорт\n"YELLOW"2."W" Роздати зброю\n"YELLOW"3."W" Раздать жизнь\n"YELLOW"4."W" Раздать броню\n"YELLOW"5."W" Обезоружить всех\n"YELLOW"6."W" Забрать броню\n"YELLOW"7."W" Заморозить гравців (радиус 50м)\n"YELLOW"8."W" Разморозить гравців (радиус 50м)\n"YELLOW"9."W" Выдать временный скин\n"YELLOW"10."W" Ввести назва\n"YELLOW"11."W" Указать кількість учасників на МП", "Вибрати", "Відміна");
	else D(playerid, D_MP, DSL, ""YELLOW"МЕРОПРИЯТИЕ", ""YELLOW"1."W" Видалити телепорт\n"YELLOW"2."W" Роздати зброю\n"YELLOW"3."W" Раздать жизнь\n"YELLOW"4."W" Раздать броню\n"YELLOW"5."W" Обезоружить всех\n"YELLOW"6."W" Забрать броню\n"YELLOW"7."W" Заморозить гравців (радиус 50м)\n"YELLOW"8."W" Разморозить гравців (радиус 50м)\n"YELLOW"9."W" Выдать временный скин\n"YELLOW"10."W" Ввести назва\n"YELLOW"11."W" Указать кількість учасників на МП", "Вибрати", "Відміна");
    return 1;
}
CMD:bizwar(playerid) {
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Ви не мафиози");
	if(PlayerInfo[playerid][pRank] < 9) return ErrorMessage(playerid, "Вам не доступна данная команда");
	if(BizWarTime[0] > 0 || BizWarTime[1] > 0) return ErrorMessage(playerid, "Война за бізнес уже идет");
	if(tmphour < 12 || tmphour > 22) return ErrorMessage(playerid, "Использовать команду можно только с 12:00 до 22:00");
	if(BizHourTime > 0) {
		new string[128];
		format(string,sizeof(string),"Таймер до следующего захвата {AFAFAF}[%d мин]", BizHourTime);
		ErrorMessage(playerid, string);
		return 1;
	}
	new gang1 = -1;
	switch(PlayerInfo[playerid][pMember]) {
		case fLCN: gang1 = MOROZ_LCN;
		case fYAKUZA: gang1 = MOROZ_YAKUZA;
		case fRM: gang1 = MOROZ_RM;
	}
	if(gang1 != -1) {
		if(fracmoroz[gang1] > unix) return ErrorMessage(playerid, "Ваша мафія не может принимать участия в войнах. (заморожена адміністратором)");
	}
	for(new h;h<gBusinessCount;h++) {
		if(!IsPlayerInRangeOfPoint(playerid,3,gBusiness[h][bizzX], gBusiness[h][bizzY], gBusiness[h][bizzZ])) continue;
		switch(GetPlayerVirtualWorld(playerid)) {
			case 46: h = 7;
			case 47: h = 8;
			case 48: h = 9;
		}
		new gang = -1;
		switch(gBusiness[h][bizzMafia]) {
			case fLCN: gang = MOROZ_LCN;
			case fYAKUZA: gang = MOROZ_YAKUZA;
			case fRM: gang = MOROZ_RM;
		}
		if(gang != -1) {
			if(fracmoroz[gang] > unix) return ErrorMessage(playerid, "мафія, которой Ви хочете забить стрелу не может принимать участия в войнах. (заморожена адміністратором)");
		}
		if(gBusiness[h][bizzMafia] == PlayerInfo[playerid][pMember]) return ErrorMessage(playerid, "Цей бізнес під впливом вашої мафії");
		if(gBusiness[h][bizzMafia] <= 0) {
			gBusiness[h][bizzMafia] = PlayerInfo[playerid][pMember];
			UpdateBusinessData(h+1,"mafia",gBusiness[h][bizzMafia]);
			UpdateBusinessText(h);
			SendClientMessage(playerid, COLOR_BLUE, "Бізнес взятий під вплив вашої мафії");
			return 1;
		}
		else {
			new string[156];
			format(string, sizeof(string), ""W"Цей бізнес "GREEN"%s"W" принадлежит {%06x}%s\n\n"YELLOW"\tВы согласны почати захват бізнеса?",gBusiness[h][bizzName], gFractionSpawn[gBusiness[h][bizzMafia]][fracColor] >>> 8,GetMN(gBusiness[h][bizzMafia]));
			if(!IsPlayerInBandOnline(gBusiness[h][bizzMafia])) return ErrorMessage(playerid,"мафія на яку ви збираєтеся напасти не в мережі");
			D(playerid,D_BIZWAR,DSM, ""YELLOW"Атака бізнеса",string,"Так","Ні");
			SetPVarInt(playerid, "bizwar_id", h);
			return 1;
		}
	}
	return ErrorMessage(playerid, "Необхідно находиться рядом с бізнесом");
}
CMD:bizlist(playerid, params[]) {
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Ви не мафиози");
	new count_business = 1,string[3400];
	string = ""W"№. назва + Доход бізнеса за сегодня\n\n";
	new fracid = -1;
	switch(PlayerInfo[playerid][pMember]) {
		case fLCN:fracid = 0;
		case fYAKUZA:fracid = 1;
		case fRM:fracid = 2;
	}
	for(new i; i<gBusinessCount; i++) {
		if(gBusiness[i][bizzMafia] != PlayerInfo[playerid][pMember]) continue;
		if(fracid != -1) {
			if(count_business > 50) break;
			format(string, sizeof(string), "%s"YELLOW"%i."W" %s + $%d\n",string, count_business, gBusiness[i][bizzName],gBankMafia[fracid][i]);
			count_business++;
		}
	}
	if(count_business < 50) D(playerid, DIALOG_NONE, DSM, ""YELLOW"Бізнеси мафии", string, "Закрити", "");
	else D(playerid, dBizList, DSM, ""YELLOW"Бізнеси мафии", string, "Далі", "Закрити");
	return 1;
}
CMD:tie(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/tie [id]");
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вам недоступна ця команда");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	if(TI[playerid][tTied])  return ErrorMessage(playerid, "Ви связаны");
	if(TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Гравець уже связан");
	if (!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Гравець далеко от Вас");
	if(giveplayerid == playerid) return ErrorMessage(playerid,not_id);
	if(!IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) != 2 && !IsPlayerInVehicle(giveplayerid, GetPlayerVehicleID(playerid))) return ErrorMessage(playerid, "Гравець не в машине");
	new string[128];
	format(string, sizeof(string), "достал(а) веревку и связал(а) %s", player_name[giveplayerid]);
	MeAction(playerid,string, 5.0);
	TogglePlayerControllable(giveplayerid, 0);
	TI[giveplayerid][tTied] = true;
	return 1;
}
CMD:untie(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendClientMessage(playerid, CWHITE, "Використовуйте: /untie [id]");
	else if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid,not_id);
	else if(!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Гравець далеко от Вас");
	else if(TI[playerid][tTied])  return ErrorMessage(playerid, "Ви связаны");
	else if(!TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Гравець не связан");
	else if(giveplayerid == playerid)  return ErrorMessage(playerid,not_id);
	new string[128];
	format(string, sizeof(string), "%s развязал %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	TogglePlayerControllable(giveplayerid, 1);
	TI[giveplayerid][tTied] = false;
	return 1;
}
CMD:giveradio(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Ви не мафиози");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	else if(sscanf(params,"d",giveplayerid))return SendEsp(playerid, "/giveradio [id]");
	else if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	else if (!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Гравець далеко от Вас");
	else if(giveplayerid == playerid) return 1;
	else if(!GetPVarInt(giveplayerid,"takeradio")) return ErrorMessage(playerid, "У гравця не отбирали рацию");
	new string[128];
	format(string, sizeof(string), "%s вернул(а) Вам рацию", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	DeletePVar(giveplayerid,"takeradio");
	format(string, sizeof(string), "%s вернул(а) рацию %s 'y", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:takeradio(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Ви не мафиози");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/takeradio [id]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	if(GetPVarInt(giveplayerid,"takeradio")) return ErrorMessage(playerid, "У него нет телефона");
	if(!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Гравець далеко от Вас");
	else if(!TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Гравець не связан");
	if(giveplayerid == playerid) return ErrorMessage(playerid, not_id);
	new string[128];
	format(string, sizeof(string), "%s забрал(а) у Вас рацию", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	SetPVarInt(giveplayerid,"takeradio", true);
	format(string, sizeof(string), "%s забрал(а) рацию у %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}

CMD:bag(playerid,params[]) {
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Ви не мафиози");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(sscanf(params,"i",params[0])) return SendEsp(playerid,"/bag [playerid]");
	if(!IsPlayerConnected(params[0])) return ErrorMessage(playerid, not_id);
	if(playerid == params[0]) return ErrorMessage(playerid, not_id);
	if(GetPlayerDistanceToPlayer(playerid, params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid, "Гравець слишком далеко");
	new str_mh[78];
	if(p_mh[params[0]]==PlayerText:-1) {
		p_mh[params[0]]=CreatePlayerTextDraw(params[0],0.000000,0.000000,"|");
		PlayerTextDrawBackgroundColor(params[0],p_mh[params[0]], 255);
		PlayerTextDrawFont(params[0],p_mh[params[0]], 1);
		PlayerTextDrawLetterSize(params[0],p_mh[params[0]], 0.500000, 49.799957);
		PlayerTextDrawColor(params[0],p_mh[params[0]], -1);
		PlayerTextDrawSetOutline(params[0],p_mh[params[0]], 0);
		PlayerTextDrawSetProportional(params[0],p_mh[params[0]], 1);
		PlayerTextDrawSetShadow(params[0],p_mh[params[0]], 1);
		PlayerTextDrawUseBox(params[0],p_mh[params[0]], 1);
		PlayerTextDrawBoxColor(params[0],p_mh[params[0]], 255);
		PlayerTextDrawTextSize(params[0],p_mh[params[0]],640.000000,0.000000);
		PlayerTextDrawShow(params[0],p_mh[params[0]]);
		format(str_mh,78,"надел(а) мешок на голову %s",player_name[params[0]]);
		MeAction(playerid,str_mh);
		SendOk(playerid,"Щоб зняти мешок натисніть "W"/bag{f6f6d9} ще раз");
	}
	else {
		PlayerTextDrawHide(params[0],p_mh[params[0]]);
		PlayerTextDrawDestroy(params[0],p_mh[params[0]]);
		p_mh[params[0]]=PlayerText:-1;
		format(str_mh,78,"снял(а) мешок с головы %s",player_name[params[0]]);
		MeAction(playerid,str_mh);
	}
	return true;
}
CMD:yhelp(playerid) {
    if(PlayerInfo[playerid][pYoutube] == 0) return true;
    D(playerid,DIALOG_NONE,DSM, ""YELLOW"Команди ютубера","{FCCB37}/hp"W" - поповнити своє життя\n\
	{FCCB37}/yveh"W" - створити транспорт\n\
	{FCCB37}/gomp"W" - створити захід\n\
	{FCCB37}/re(/reoff)"W" - слідкувати за гравце/завершити слідкування\n\n\
	{FCCB37}/yskin"W" - видати собі тимчасовий скін\n\n\
	"G"*"W" Відкритий телепорт по карті","Закрити","");
	return true;
}
CMD:yskin(playerid, params[]) {
	if(PlayerInfo[playerid][pYoutube] == 0) return true;
	new skin;
	if(sscanf(params, "i", skin)) return SendClientMessage(playerid, COLOR_WHITE,"Виконистовуйте: /yskin [id скина]");
	if(skin == 74 || skin > 311 || skin < 1) return SendClientMessage(playerid, COLOR_GREY, "Не правильний ID скіна!");
	A_SetPlayerSkin(playerid, skin);
	SendOk(playerid,"Ви змінили собі скін");
	return true;
}
CMD:yveh(playerid) {
   if(PlayerInfo[playerid][pYoutube] == 0) return true;
   D(playerid,D_YOUTUBE_CAR,DSL, ""YELLOW"Транспорт",""YELLOW"1."W" Mitsubishi Lancer\n"YELLOW"2."W" NRG-500\n"YELLOW"3."W" BMX\n"YELLOW"4."W" Vortex\n"YELLOW"5."W" S.W.A.T\n"YELLOW"6."W" Monster\n"YELLOW"7."W" Bugatti Veyron\n"YELLOW"8."W" Maverick","Выбрать","Закрити");
   return true;
}
CMD:setyt(playerid, params[]) {
   if(PlayerInfo[playerid][pAdmin] < 5 || dostup[playerid] == 0) return true;
   new name[24], string[350];
   if(sscanf(params,"s[24]i",name, params[0])) return SendClientMessage(playerid, COLOR_WHITE,"Використовуйте: /setyt [ім'я гравця] [1 - видати, 0 - забрати]");
   mysql_format(connects, string, sizeof(string),"SELECT * FROM `accounts` WHERE `Name` = '%s'", name);
   mysql_pquery(connects, string, "make_youtube", "dsd",playerid, name, params[0]);
   return true;
}
CMD:givephone(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Ви не мафиози");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	else if(sscanf(params,"d",giveplayerid))return SendEsp(playerid, "/givephone [id]");
	else if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	else if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid, "Гравець слишком далеко");
	else if(giveplayerid == playerid) return ErrorMessage(playerid, "Не можна вернуть телефон самому себе");
	else if(!GetPVarInt(giveplayerid,"takephone")) return ErrorMessage(playerid, "У гравця не отбирали телефон");
	new string[128];
	format(string, sizeof(string), "%s вернул(а) Вам телефон", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	DeletePVar(giveplayerid,"takephone");
	format(string, sizeof(string), "%s вернул(а) телефон %s 'y", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:takephone(playerid,params[]) {
	new giveplayerid;
	if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Ви не мафиози");
	if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
	if(sscanf(params,"d",giveplayerid))return SendEsp(playerid, "/takephone [id]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	if(GetPVarInt(giveplayerid,"takephone") || !PlayerInfo[giveplayerid][pPhone]) return ErrorMessage(playerid, "У него нет телефона");
	else if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid, "Гравець слишком далеко");
	else if(!TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Гравець не связан");
	if(giveplayerid == playerid) return ErrorMessage(playerid, not_id);
	new string[128];
	format(string, sizeof(string), "%s забрал(а) у Вас мобильный", player_name[playerid]);
	SendClientMessage(giveplayerid, 0x6ab1ffaa, string);
	SetPVarInt(giveplayerid,"takephone", true);
	format(string, sizeof(string), "%s забрал(а) мобильный у %s", player_name[playerid] ,player_name[giveplayerid]);
	SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	return 1;
}
CMD:gag(playerid,params[]) {
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/gag [id]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
	if(giveplayerid == playerid) return ErrorMessage(playerid, not_id);
	if(!TI[giveplayerid][tTied]) return ErrorMessage(playerid, "Гравець не связан");
	if(TI[playerid][tTied]) return ErrorMessage(playerid, "Ви связаны");
	if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid, "Гравець слишком далеко");
	new string[128];
	if(TI[giveplayerid][tGag]) {
		TI[giveplayerid][tGag] = false;
		TI[giveplayerid][tGagTime] = 0;
		format(string, sizeof(string), "%s вытащил кляп у %s'a", player_name[playerid] ,player_name[giveplayerid]);
		SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	}
	else {
		if(!IsAMafia(playerid)) return ErrorMessage(playerid, "Вам недоступна ця команда");
		if(PlayerInfo[playerid][pRank] < 3) return ErrorMessage(playerid,"Доступно с 3 ранга");
		TI[giveplayerid][tGag] = true;
		TI[giveplayerid][tGagTime] = 600;
		format(string, sizeof(string), "%s вставив кляп в рот %s'у", player_name[playerid] ,player_name[giveplayerid]);
		SendStreamMessage(30.0, playerid, string, 0xE75480FF);
	}
	return 1;
}
CMD:zone(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функція");
	new total = 0,string[128];
	for(new i = 0; i < TOTALGZ; i++) {
		if(GZInfo[i][gFrakVlad] == PlayerInfo[playerid][pMember]) total++;
	}
	format(string,sizeof(string),"Територій под контролем: "YELLOW"%d",total);
	SendOk(playerid,string);
	return 1;
}
CMD:kd(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функція");
	new h, m, s; gettime(h,m,s);
	if(h < 14 || h >= 23) {
		D(playerid,DIALOG_NONE,DIALOG_STYLE_TABLIST, "Інформація", ""YELLOW"1."W" The Ballas\t"NO"Воевать можно с 14:00\n\
								"YELLOW"2."W" The Vagos\t"NO"Воевать можно с 14:00\n\
								"YELLOW"3."W" The Grove\t"NO"Воевать можно с 14:00\n\
								"YELLOW"4."W" The Aztec\t"NO"Воевать можно с 14:00\n\
								"YELLOW"5."W" The Rifa\t"NO"Воевать можно с 14:00", "Закрити", "");
		return 1;
	}
	new year[5], month[5], day[5], hour[5], minute[5], second[5],strs_0[35],strs_1[35],strs_2[35],strs_3[35],strs_4[35];
	if(capture_kd[fBALLAS] >= unix) {
		timestamp_to_date(capture_kd[fBALLAS]-unix, year[0], month[0], day[0], hour[0], minute[0], second[0]);
		format(strs_0,sizeof strs_0,""NO"%dч %dм %dс",hour[0], minute[0], second[0]);
	}
	else hour[0] = minute[0] = second[0] = 0,strs_0 = ""GREEN"Захват возможен";
	if(capture_kd[fVAGOS] >= unix) {
		timestamp_to_date(capture_kd[fVAGOS]-unix, year[1], month[1], day[1], hour[1], minute[1], second[1]);
		format(strs_1,sizeof(strs_1),""NO"%dч %dм %dс",hour[1], minute[1], second[1]);
	}
	else hour[1] = minute[1] = second[1] = 0,strs_1 = ""GREEN"Захват возможен";
	if(capture_kd[fGROVE] >= unix) {
		timestamp_to_date(capture_kd[fGROVE]-unix, year[2], month[2], day[2], hour[2], minute[2], second[2]);
		format(strs_2,sizeof(strs_2),""NO"%dч %dм %dс",hour[2], minute[2], second[2]);
	}
	else hour[2] = minute[2] = second[2] = 0,strs_2 = ""GREEN"Захват возможен";
	if(capture_kd[fAZTEC] >= unix) {
		timestamp_to_date(capture_kd[fAZTEC]-unix, year[3], month[3], day[3], hour[3], minute[3], second[3]);
		format(strs_3,sizeof(strs_3),""NO"%dч %dм %dс",hour[3], minute[3], second[3]);
	}
	else hour[3] = minute[3] = second[3] = 0,strs_3 = ""GREEN"Захват возможен";
	if(capture_kd[fRIFA] >= unix) {
		timestamp_to_date(capture_kd[fRIFA]-unix, year[4], month[4], day[4], hour[4], minute[4], second[4]);
		format(strs_4,sizeof(strs_4),""NO"%dч %dм %dс",hour[4], minute[4], second[4]);
	}
	else hour[4] = minute[4] = second[4] = 0,strs_4 = ""GREEN"Захват возможен";
	
	static const f_str[] = ""YELLOW"1."W" The Ballas\t%s\n\
"YELLOW"2."W" The Vagos\t%s\n\
"YELLOW"3."W" The Grove\t%s\n\
"YELLOW"4."W" The Aztec\t%s\n\
"YELLOW"5."W" The Rifa\t%s";
	new string[sizeof(f_str) + 140];
	format(string,sizeof(string),f_str,strs_0,strs_1,strs_2,strs_3,strs_4);
	D(playerid,DIALOG_NONE,DST, "Інформація", string, "Закрити", "");
	return 1;
}
CMD:gangtop(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функція");
	D(playerid,D_GANGTOP,DST, "Інформація", ""YELLOW"1."W" Территории\n"YELLOW"2."W" Граффити\n"YELLOW"3."W" Текущий рейтинг\n"YELLOW"4."W" G-POINTS", "Вибрати", "Закрити");
	return 1;
}
CMD:dipinfo(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функція");
	dialog_diplom(playerid,false);
	return 1;
}
CMD:givekey(playerid, params[]) {
	if(!PlayerInfo[playerid][pMember]) return ErrorMessage(playerid, "Вам не доступна эта функція");
	new giveplayerid;
	if(sscanf(params,"d",giveplayerid)) return SendEsp(playerid, "/givekey [id]");
	if(IsAGang(playerid)) if(PlayerInfo[playerid][pRank] < 5) return ErrorMessage(playerid, "Доступно с 3 ранга");
	if(giveplayerid == playerid) return ErrorMessage(playerid,"Ви не можете выдать пропуск самому себе");
	if(GetPlayerDistanceToPlayer(playerid, giveplayerid) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(giveplayerid)) return ErrorMessage(playerid, "Гравець слишком далеко");
	if(TI[giveplayerid][tEnter][PlayerInfo[playerid][pMember]]) {
		MeAction(playerid,"забрал(а) пропуск");
		TI[giveplayerid][tEnter][PlayerInfo[playerid][pMember]] = false;
		SendOk(giveplayerid,"У Вас забрали пропуск");
		return 1;
	}
	if(!TI[giveplayerid][tEnter][PlayerInfo[playerid][pMember]]) {
		MeAction(playerid,"Видал(а) пропуск");
		TI[giveplayerid][tEnter][PlayerInfo[playerid][pMember]] = true;
		SendOk(giveplayerid,"Вам выдали пропуск");
		return 1;
	}
	return 1;
}

CMD:gpay(playerid, params[]) {
	if(!IsAGang(playerid) || !PlayerInfo[playerid][pLeader]) return ErrorMessage(playerid, "Вам не доступна эта функція");
	if(sscanf(params, "d", params[0])) return SendEsp(playerid, "/gpay [сумма]");
	if(params[0] < 1 || params[0] > 100000) return ErrorMessage(playerid, "От $1 и до $100.000");
	new num = 0 ;
	foreach(new i:Player) {
		if(!TI[i][tLogin] || AntiCheatIsKickedWithDesync(i)) continue;
		if(PlayerInfo[i][pMember] != PlayerInfo[playerid][pMember] || playerid == i) continue;
		num++;
	}
	new string[128];
	format(string, sizeof(string), "\n\n"W"Ви дійсно хочете выдать премию в розмірі "ORANGE"$%d"W" членам вашої банди?\n\n", params[0]*num);
	D(playerid, D_GANG_PAY, DSM, ""YELLOW"Видача премии", string, "Видать", "Відміна");
	SetPVarInt(playerid, "prem_gang_money", params[0]);
	return 1 ;
}

CMD:capture(playerid) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid, "Вам не доступна эта функція");
	if(zahvat == true) return ErrorMessage(playerid, "В данный момент идёт захват территории");
	if(PlayerInfo[playerid][pRank] < 9) return ErrorMessage(playerid, "Доступно с 9 ранга");
	new h, m, s; gettime(h,m,s);
	if(h < 14 || h >= 23) return ErrorMessage(playerid, "Использовать команду можно только с 14:00 до 23:00");
	new string[244];
	//if(RecoveryTime == PlayerInfo[playerid][pMember]) return ErrorMessage(playerid, "Ваша банда может почати захват только через капт");
	if(capture_kd[PlayerInfo[playerid][pMember]] > unix) {
		new year, month, day, hour, minute, second;
		timestamp_to_date(capture_kd[PlayerInfo[playerid][pMember]] - unix, year, month, day, hour, minute, second);
		format(string,128,"Таймер до следующего захвата {AFAFAF}[%02d:%02d:%02d]", hour, minute, second);
		ErrorMessage(playerid, string);
		return 1;
	}
	new gang1 = -1;
	switch(PlayerInfo[playerid][pMember]) {
		case fBALLAS: gang1 = MOROZ_BALLAS;
		case fVAGOS: gang1 = MOROZ_VAGOS;
		case fGROVE: gang1 = MOROZ_GROVE;
		case fAZTEC: gang1 = MOROZ_AZTECAS;
		case fRIFA: gang1 = MOROZ_RIFA;
	}
	if(gang1 != -1) {
		if(fracmoroz[gang1] > unix) {
			ErrorMessage(playerid,"Ваша банда заморожена");
			return 1;
		}
	}
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] != -1) {
		new i = IDGZ[playerid];
		if(capture_kd[GZInfo[i][gFrakVlad]] > unix) {
			new year, month, day, hour, minute, second;
			timestamp_to_date(capture_kd[GZInfo[i][gFrakVlad]] - unix, year, month, day, hour, minute, second);
			format(string,128,"Таймер до следующего захвата данной банди {AFAFAF}[%02d:%02d:%02d]", hour, minute, second);
			ErrorMessage(playerid, string);
			return 1;
		}
		if(PlayerInfo[playerid][pMember] == GZInfo[i][gFrakVlad]) return ErrorMessage(playerid,"Ви не можете захватити собственную территорию");
		if(i == 90 && black_prods[9] > unix) return ErrorMessage(playerid,"В данный момент борьба за чёрный рынок недоступна");
		if(i == 97 || i == 93 || i == 41 || i == 0 || i == 24) return ErrorMessage(playerid,"Не можна закаптить спавн банди");
		if(f_diplomacy[PlayerInfo[playerid][pMember] - 15][GZInfo[i][gFrakVlad] - 15] == dip_status_alliance) return ErrorMessage(playerid,"С данной бандой заключен союз");
		if(!IsPlayerInBandOnline(GZInfo[i][gFrakVlad])) return ErrorMessage(playerid, "Банда на яку ви збираєтеся напасти не в мережі / Меньше трёх человек");
		new gang = -1;

		switch(GZInfo[i][gFrakVlad]) {
			case fBALLAS: gang = MOROZ_BALLAS;
			case fVAGOS: gang = MOROZ_VAGOS;
			case fGROVE: gang = MOROZ_GROVE;
			case fAZTEC: gang = MOROZ_AZTECAS;
			case fRIFA: gang = MOROZ_RIFA;
		}
		if(gang != -1) {
			if(fracmoroz[gang] > unix) {
				ErrorMessage(playerid,"Банду яку ви хочете захватити неможливо");
				ErrorMessage(playerid,"Вона заморожена адміністратором, очікуйте повідомлення в чаті коли мороз буде знятий");
				return 1;
			}
		}
		new attemptslot= -1;
		switch(PlayerInfo[playerid][pMember]) {
			case fVAGOS: attemptslot = 0;
			case fBALLAS: attemptslot = 1;
			case fGROVE: attemptslot = 2;
			case fRIFA: attemptslot = 3;
			case fAZTEC: attemptslot = 4;
		}
		if(attemptslot != -1) {
			if(CaptureAttempt[attemptslot] >= MAX_ATTEMPT_GANG) {
				format(string, 128, "Ваша банда уже воевала более %i раз", MAX_ATTEMPT_GANG);
				ErrorMessage(playerid, string);
				return 1;
			}
		}
		zahvat = true;
		//RecoveryTime = PlayerInfo[playerid][pMember];
		GZInfo[i][gTime] = 60*15;
		GZInfo[i][gNapad] = PlayerInfo[playerid][pMember];
		format(string, 112, "%s(%s) начал(a) захват территории банди %s",GFrac(PlayerInfo[playerid][pMember]),player_name[playerid],GFrac(GZInfo[i][gFrakVlad]));
		SendBand(COLOR_LIGHTRED,string);
		format(string, 144, "[A] Начался капт между бандой %s и %s",GFrac(PlayerInfo[playerid][pMember]),GFrac(GZInfo[i][gFrakVlad]));
		AdmMSG(COLOR_YELLOW, string, 1);
		GangZoneFlashForAll(GZInfo[i][gID],GetGangColor(GZInfo[i][gNapad]));
		
		GZInfo[i][ZoneOnBattle] = 1;
		new Float:x_pos,Float:y_pos,Float:z_pos;
		GetPlayerPos(playerid, x_pos,y_pos,z_pos);
		gz_area = CreateDynamicSphere(x_pos,y_pos,z_pos, 170, 0,0);
		GZInfo[i][gzTimer] = SetTimerEx("GzCheck",1000,1,"iii",i, PlayerInfo[playerid][pMember], GZInfo[i][gFrakVlad]);
		if(attemptslot != -1) CaptureAttempt[attemptslot] ++;

		if(QuestProgress[playerid][9] < 1 && AcceptQuest[playerid][9] != 0) QuestProgress[playerid][9] ++;
		if(QuestProgress[playerid][9] == 1 && AcceptQuest[playerid][9] != 0) {
			D(playerid,DIALOG_NONE,DSM, ""YELLOW"Квест",""W"Ви успішно спровоцировали войну. Це завдання можна закінчити та забрати за нього нагороду","Закрити","");
			NextStapQI(playerid,9);
		}
		return 1;
	}
	else ErrorMessage(playerid, "Необхідно находится на территории которую хочете завоевать");
	return 1;
}
CMD:sklad(playerid, params[]) {
	if((!IsAGang(playerid) && !IsAMafia(playerid)) || PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна ця команда");
	new str[9];
	if(FI[GetTeamID(playerid)][fSklad] == 0) FI[GetTeamID(playerid)][fSklad] = 1,str = "открыл";
	else FI[GetTeamID(playerid)][fSklad] = 0,str = "закрыл";
	static const f_str[] = "[F] %s[%d] %s(а) склад";
	new string[sizeof(f_str) +1 + (-2 + MAX_PLAYER_NAME) + (-2 + 4) + (-2 + 9)];

	format(string,sizeof(string),f_str,player_name[playerid],playerid,str);
	SendFamilyMessage(PlayerInfo[playerid][pMember],0x6ab1ffaaff,string);
	UpdateFraction(GetTeamID(playerid),"Sklad",FI[GetTeamID(playerid)][fSklad]);
	return 1;
}
CMD:sellgun(playerid,params[]) {
    new weapname[24];
    if(!IsAGang(playerid)) return ErrorMessage(playerid,"Ви не бандит");
	if(sscanf(params,"udd",params[0],params[1],params[2])) return SendEsp(playerid,"/sellgun [id гравця] [к-во патронів] [ціна]");
	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return ErrorMessage(playerid,not_id);
	if(GetPlayerDistanceToPlayer(playerid,params[0]) > 3.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(params[0])) return ErrorMessage(playerid,"Ви далеко друг от друга");
	if(params[2] > 10000 || params[2] < 1) return ErrorMessage(playerid,"Ціна повинна бути от $1 до $10.000");
	if(params[1] > 100 || params[1] < 1) return ErrorMessage(playerid,"От 1 до 100 патрон");
	if(!GetPlayerWeapon(playerid)) return ErrorMessage(playerid,"Візьміть в руку зброю, яку бажаєте продати");
	if(GetPlayerAmmo(playerid) < params[1]) return ErrorMessage(playerid,"У Вас недостаточно патронів");
	IDGZ[playerid] = GetIDGZ(playerid);
	if(IDGZ[playerid] == -1) return ErrorMessage(playerid,"продавати можна тільки на своїй території");
	new i = IDGZ[playerid];
	if(PlayerInfo[playerid][pMember] != GZInfo[i][gFrakVlad]) return ErrorMessage(playerid,"продавати зброю можна тільки на своїй території");

	SetPVarInt(playerid,"gunoffee",params[0]);
	SetPVarInt(params[0],"gunoffee",params[0]);
	SetPVarInt(params[0],"gunoffer",playerid);
	SetPVarInt(params[0],"gunprice",params[2]);
	SetPVarInt(params[0],"gunammo",params[1]);
	SetPVarInt(params[0],"gunid",GetPlayerWeapon(playerid));
	GetWeaponName(GetPlayerWeapon(playerid),weapname,24);

	new string[512];
	format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} Купити "W"%s [%d]{f6f6d9} за "ORANGE"$%d",player_name[params[0]],weapname,params[1],params[2]);
	SendUse(playerid, string);
	format(string, sizeof(string), ""YELLOW"%s{f6f6d9} предложил Вам Купити "W"%s [%d]{f6f6d9} за "ORANGE"$%d",player_name[playerid],weapname,params[1],params[2]);
	SendUse(params[0], string);
	SendClientMessage(params[0],COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");
	return true;
}
CMD:bmarket(playerid) {
	if(!IsAGang(playerid) || PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна ця команда");
	if(black_prods[0] != GetTeamID(playerid)) return ErrorMessage(playerid,"чорний ринок крышует інша банда");
	static const f_str[] = "Найменування\tЦіна\tСклад\n\
Наркотики\t%d\t%d\n\
Боєприпаси\t%d\t%d\n\
Бронежилет\t%d\t%d\n\
Армейская форма\t%d\t%d\n";
	new string[sizeof(f_str) +2 + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5) + (-2 + 5)];
	format(string,sizeof(string),f_str,black_prods[5],black_prods[1],black_prods[6],black_prods[2],black_prods[7],black_prods[3],black_prods[8],black_prods[4]);
	D(playerid,D_BLACK_MARKET,DSTH,"Чорний ринок",string,"Вибрати","Відміна");
	return 1;
}
alias:bandchat("bc");
CMD:bandchat(playerid, params[]) {
	if(!IsAGang(playerid)) return ErrorMessage(playerid,"Ви не бандит");
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна ця команда");
	if(isnull(params) || strlen(params) > 100) return SendEsp(playerid, "/bc [текст]");
	if(PlayerInfo[playerid][pMute] > 0) return ErrorMessage(playerid, "У Вас бан чата");
	if(TI[playerid][tGag]) return ErrorMessage(playerid, "У Вас кляп");
	if(GetPVarInt(playerid,"bc_timer") > unix) return ErrorMessage(playerid, "Можно писать в эту рацию 1 раз в 30 секунд");  
	SetPVarInt(playerid, "bc_timer", unix+30);
	new string[144];
	format(string, sizeof(string), "[BC] {%06x}%s "W"%s[%d]: %s", gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor] >>> 8,FI[PlayerInfo[playerid][pMember]][fName],player_name[playerid],playerid, params);
	SendBand(COLOR_RED, string);
	foreach(new i:Player) {
		switch(GetPVarInt(i,"admin_tipster")) {
			case fBALLAS,fVAGOS,fGROVE,fAZTEC,fRIFA: SendClientMessage(i, COLOR_LIGHTRED, string);
		}
	}
	return 1;
}
CMD:fmute(playerid, params[]) {
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна ця команда");
	new id, time, reason[100], string[150];
	if(sscanf(params,"dds[100]", id, time, reason)) return SendEsp(playerid, "/fmute [id] [время] [причина]");
	if(IsAIP(reason)) return 1;
	if(time < 1 || time > 60) return ErrorMessage(playerid, "Видати заглушку не можна меньше ніж на 1 хвилини і більше 60 хвилин");
	if(GetTeamID(id) != GetTeamID(playerid)) return ErrorMessage(playerid, "Цей гравець не знаходиться в вашій організації");
	if(PlayerInfo[id][pLeader] > 0) return ErrorMessage(playerid,"Ви не можете выдать заглушку лідеру");
	if(PlayerInfo[id][pFMute]) return ErrorMessage(playerid, "У данного гравця уже есть заглушка");
	format(string,sizeof(string),"%s заглушив(ла) гравця %s на %d хвилин. Причина: %s",player_name[playerid],player_name[id],time,reason);
	SendFamilyMessage(GetTeamID(playerid),COLOR_LIGHTRED, string);
	PlayerInfo[id][pFMute] = time*60;
	UpdatePlayerData(id,"pFMute",PlayerInfo[id][pFMute]);
	return true;
}
CMD:funmute(playerid, params[]) {
	if(PlayerInfo[playerid][pRank] < FI[GetTeamID(playerid)][fInviteRang]) return ErrorMessage(playerid,"Вам недоступна ця команда");
	new id, string[150];
	if(sscanf(params,"d", id)) return SendEsp(playerid, "/funmute [id]");
	if(GetTeamID(id) != GetTeamID(playerid)) return ErrorMessage(playerid, "Цей гравець не знаходиться в вашій організації");
	if(!PlayerInfo[id][pFMute]) return ErrorMessage(playerid, "У данного гравця нет заглушки");
	format(string,sizeof(string),"%s разглушил(а) гравця %s",player_name[playerid],player_name[id]);
	SendFamilyMessage(GetTeamID(playerid),COLOR_LIGHTRED, string);
	PlayerInfo[id][pFMute] = 0;
	UpdatePlayerData(id,"pFMute",PlayerInfo[id][pFMute]);
	return true;
}
CMD:sellzone(playerid,params[]) {
	if(!PlayerInfo[playerid][pLeader]) return 1;
	IDGZ[playerid] = GetIDGZ(playerid);
	new giveplayerid;
	if(IDGZ[playerid] != -1) {
		new i = IDGZ[playerid];
		if(PlayerInfo[playerid][pLeader] != GZInfo[i][gFrakVlad]) return ErrorMessage(playerid, "Ви не на своей территории");
		else if(sscanf(params,"dd",giveplayerid,params[1])) return SendEsp(playerid, "/sellzone [id] [ціна]");
		else if(params[1] < 10000 || params[1] > 100000) return ErrorMessage(playerid, "Ціна повинна бути: от 10000 до 100000");
		else if(!IsPlayerConnected(giveplayerid)) return ErrorMessage(playerid, not_id);
		else if(!IsPlayerStream(5.0, playerid, giveplayerid)) return ErrorMessage(playerid, "Ви далеко від цієї людини");
		else if(giveplayerid == playerid) return ErrorMessage(playerid, "Эта итак Ваша территория");
		if(i == 97 || i == 93 || i == 41 || i == 0 || i == 24) return ErrorMessage(playerid,"Не можна продати спавн банди");
		if(!PlayerInfo[giveplayerid][pLeader]) return ErrorMessage(playerid,"Продажа Територій доступна лідерам банд");

		new string[325];
		format(string, sizeof(string), "Ви предложили "YELLOW"%s{f6f6d9} Купити территорию за "ORANGE"$%d",player_name[giveplayerid],params[1]);
		SendUse(playerid, string);
		format(string, sizeof(string), ""YELLOW"%s{f6f6d9} предложил Вам Купити территорию за за "ORANGE"$%d",player_name[playerid],params[1]);
		SendUse(giveplayerid, string);
		SendClientMessage(giveplayerid,COLOR_BLUE,"Натисніть "YES"Y "BLUE"щоб согласиться "NO"N "BLUE"для отказа");

		SetPVarInt(giveplayerid,"ZoneOffer", playerid + 1);
		SetPVarInt(giveplayerid,"ZonePrice", params[1]);
		SetPVarInt(giveplayerid,"sellzone", PlayerInfo[playerid][pMember]);
	}
	return 1;
}
EndCapt(m) {
	for(new z = 0;z < 10;z++) {
		TextDrawHideForPlayer(m, Capture[z]);
	}
	//for(new i = 0; i < 5; i++) SendDeathMessageToPlayer(m, INVALID_PLAYER_ID, INVALID_PLAYER_ID, WEAPONSTATE_UNKNOWN);
	DeletePVar(m,"ppkz");
	TextDrawHideForPlayer(m, inFigh);
	infight[m] = false;
}
CB: MinigameReset() {
	if(g_game_status != 0) {
		new null;
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(!TI[i][tBlockWars]) continue;
			null++;
			if(null > 0) {
				if(g_game_status != 1) {
					GameTextForPlayer(i, " ", 10, 3);
					TogglePlayerControllable(i, 0);
					SetTimerEx("UnFreeze" , 800, false, "i", i);
					SetPlayerPosAC(i,GetPVarFloat(i,"pos_comp_x"),GetPVarFloat(i,"pos_comp_y"),GetPVarFloat(i,"pos_comp_z"),GetPVarInt(i,"comp_vw"),GetPVarInt(i,"comp_int"));
				}
			}
		}
		g_game_status = 0;
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(!TI[i][tBlockWars]) continue;
			TI[i][tBlockWars] = false;
		}
		if(g_arena_created) {
			for(new i; i < 64; i++) {
				DestroyDynamicObject(b_objectid[i]);
				DestroyDynamicObject(b_button[i]);
				DestroyDynamicPickup(b_pickupid[i]);
				if(i < sizeof b_gobjectid) DestroyDynamicObject(b_gobjectid[i]);
			}
			g_arena_created = false;
		}
	}
}
stock SetBlockColor(blockid, color) {
	if(g_arena_created) {
		b_has_color[blockid] = color;
		SetDynamicObjectMaterial(b_objectid[blockid], 0, 8398, "luxorland", "des_dirt1", color);
	}
}
stock GetBlockColor(blockid) {
	if(g_arena_created) return b_has_color[blockid];
	return -1;
}

stock GetBlockPos(blockid, &Float:pos_x, &Float:pos_y, &Float:pos_z) {
	if(g_arena_created) GetDynamicObjectPos(b_objectid[blockid], pos_x, pos_y, pos_z);
}

stock GetRandomBlock() {
	if(g_arena_created) return random(64);
	return -1;
}

stock SetBlockUniqueID(blockid, uniqueid) {
	if(g_arena_created) b_unique_id[blockid] = uniqueid;
}
CB: MinigamePrepare() {
	if(g_game_status == 1) {
  		new null;
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(!TI[i][tBlockWars]) continue;
			null++;
		}
		if(null < 2) {
		    foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(!TI[i][tBlockWars]) continue;
				SendClientMessage(i,COLOR_GREY, "Гра 'Capture Blocks' была отменена из-за недостатка участников");
				MinigameReset();
				return 0;
			}
		}
		if(!g_arena_created) {
			new Float:pos[3] = { 540.0, -2140.0, -1.0 };
			new Float:tmp_x = pos[0];

			b_gobjectid[0] = CreateDynamicObject(18981, pos[0] -12.499999, pos[1] -12.499998, pos[2] +1.970000, 0.000000, 90.000000, 0.000000,101);
			SetDynamicObjectMaterial(b_gobjectid[0], 0, 19373, "all_walls", "desgreengrass", 0);
			b_gobjectid[1]= CreateDynamicObject(18981, pos[0] -12.499999, pos[1] +12.500001, pos[2] +1.970000, 0.000007, 89.999992, 270.000000,101);
			SetDynamicObjectMaterial(b_gobjectid[1], 0, 19373, "all_walls", "desgreengrass", 0);
			b_gobjectid[2] = CreateDynamicObject(18981, pos[0] +12.500000, pos[1] +12.500004, pos[2] +1.970000, 0.000006, 90.000000, 180.000030,101);
			SetDynamicObjectMaterial(b_gobjectid[2], 0, 19373, "all_walls", "desgreengrass", 0);
			b_gobjectid[3] = CreateDynamicObject(18981, pos[0] +12.500014, pos[1] -12.499995, pos[2] +1.970000, 0.000005, 90.000000, 90.000068,101);
			SetDynamicObjectMaterial(b_gobjectid[3], 0, 19373, "all_walls", "desgreengrass", 0);

			for(new i; i < 64; i++) {
				b_has_color[i] = 0xFFFFFFFF;
				b_unique_id[i] = -1;
				if(i % 8 == 0 && i != 0) {
					pos[0] = tmp_x;
					pos[1] += 5.7;
				}
				b_objectid[i] = CreateDynamicObject(18764, pos[0] -19.991994, pos[1] -19.991994, pos[2] +0.005, 0.00, 0.00, 0.00,101);
				b_button[i] = CreateDynamicObject(18762, pos[0] -19.991994, pos[1] -19.991994, pos[2] +0.009, 0.00, 0.00, 0.00,101);
				SetDynamicObjectMaterial(b_objectid[i], 0, 8398, "luxorland", "des_dirt1", 0xFFFFFFFF);
				b_pickupid[i] = CreateDynamicPickup(19300, 1, pos[0] -19.991994, pos[1] -19.991994, pos[2] +4.00);
				pos[0] += 5.7;
			}
			g_arena_created = true;
		}
		new Float:x, Float:y, Float:z, j;
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(!TI[i][tBlockWars]) continue;
			p_has_color[i] = g_default_colors[j];
			GetBlockPos(g_start_pos[j], x, y, z);
			SetPlayerPosAC(i,x, y, z + 3,101,0);
			TogglePlayerControllable(i, 0);
			SetCameraBehindPlayer(i);
			j++;
		}
		g_game_status = 2;
		SetTimerEx("MinigameCountdown", 1000, 0, "i", 3);
		return true;
	}
	return 0;
}
CB: MinigameCountdown(count) {
	if(g_game_status == 2) {
		if(count > 0) {
			new str[2];
			format(str, sizeof str, "%i", count);
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(!TI[i][tBlockWars]) continue;
				if(IsPlayerInRangeOfPoint(i, 30.0, 540.0, -2140.0, -1.0)) {
					GameTextForPlayer(i, str, 2000, 3);
					PlayerPlaySound(i, 1056, 540.0, -2140.0, -1.0);
				}
			}
			count--;
			SetTimerEx("MinigameCountdown", 1000, 0, "i", count);
		}
		else {
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(!TI[i][tBlockWars]) continue;
				if(IsPlayerInRangeOfPoint(i, 30.0, 540.0, -2140.0, -1.0)) {
					GameTextForPlayer(i, "~g~START!", 2000, 3);
					PlayerPlaySound(i, 1057, 540.0, -2140.0, -1.0);
					TogglePlayerControllable(i, 1);
				}
				else TI[i][tBlockWars] = false;
			}
			SetTimerEx("MinigameUpdate", 1000, 0, "i", 60);
		}
	}
}
CB: MinigameUpdate(seconds) {
	if(g_game_status == 2) {
	    new null;
		foreach(new i:Player) { 
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(!TI[i][tBlockWars]) continue;
			null++;
		}
		if(null < 2) {
		    foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(!TI[i][tBlockWars]) continue;
				SendClientMessage(i,COLOR_GREY, "Гра 'Capture Blocks' была отменена из-за недостатка участников");
				MinigameReset();
				return 0;
			}
		}
		new str[128], red, blue, green, yellow;

		for(new i; i < 64; i++) {
			if(GetBlockColor(i) == 0xFFE61400) red++;
			if(GetBlockColor(i) == 0xFF0066CC) blue++;
			if(GetBlockColor(i) == 0xFF319A31) green++;
			if(GetBlockColor(i) == 0xFFFF7F00) yellow++;
		}
		if(seconds > 10) format(str, sizeof str, "~n~~n~~n~~n~~n~~n~~n~~n~~n~ ~y~Time left: ~w~%d ~n~~r~] ~w~%03d ~b~] ~w~%03d ~g~] ~w~%03d ~y~] ~w~%03d", seconds, red, blue, green, yellow);
		else format(str, sizeof str, "~n~~n~~n~~n~~n~~n~~n~~n~~n~ ~y~Time left: ~r~%d ~n~~r~] ~w~%03d ~b~] ~w~%03d ~g~] ~w~%03d ~y~] ~w~%03d", seconds, red, blue, green, yellow);
		foreach(new i:Player) { 
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(!TI[i][tBlockWars]) continue;
			GameTextForPlayer(i, str, 5000, 3);
		}
		seconds--;
		if(seconds >= 0) SetTimerEx("MinigameUpdate", 1000, 0, "i", seconds);
		else {
			new winner, min_value = 0, u_blocks[MAX_PLAYERS], bool:draw = false;
			for(new j; j < 64; j++) {
				if(GetBlockUniqueID(j) != -1) u_blocks[GetBlockUniqueID(j)]++;
			}

			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(!TI[i][tBlockWars]) continue;
				if(u_blocks[i] > min_value) {
					winner = i;
					min_value = u_blocks[i];
				}
			}
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(!TI[i][tBlockWars]) continue;
				if(winner != i) {
					if(u_blocks[winner] == u_blocks[i]) draw = true;
				}
			}
			if(draw) {
				foreach(new i:Player) {
					if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
					if(!TI[i][tBlockWars]) continue;
					SendOk(i, "Гра 'Capture Blocks' закончилась в ничью");
				}
			}
			else {
				format(str, sizeof str, "Гра 'Capture Blocks' успішно завершена, победитель - "W"%s", player_name[winner]);
				foreach(new i:Player) {
					if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
					if(!TI[i][tBlockWars]) continue;
					SendClientMessage(i,CGOLD, str);
				}
			}
			MinigameReset();
		}
	}
	return true;
}
OnPlayerCaptureBlock(playerid, blockid) {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!TI[i][tBlockWars]) continue;
		if(g_game_status == 2) {
			if(GetBlockUniqueID(blockid) != playerid) {
				SetBlockColor(blockid, p_has_color[playerid]);
				SetBlockUniqueID(blockid, playerid);
			}
		}
	}
	return true;
}
stock GetBlockUniqueID(blockid) {
	if(g_arena_created) return b_unique_id[blockid];
	return -1;
}
stock UpdateInfoTD(playerid) {
	new string[128];
    if(TI[playerid][tDMArea][0]) format(string,sizeof(string),"~r~Kills:~w~ %d~n~~r~Deaths:~w~ %d",TI[playerid][tDMArea][1],TI[playerid][tDMArea][2]);
    if(TI[playerid][tGunArea][0]) format(string,sizeof(string),"~r~Kills Gun:~w~ %d/3~n~~r~Guns:~w~ %d/6",TI[playerid][tGunArea][1],TI[playerid][tGunArea][3]);
	if(!strlen(string)) PlayerTextDrawHide(playerid,DmArenaTextDraw[playerid]);
	else {
	    switch(string[0]) {
			case '~': strdel(string,0,3);
		}
	    PlayerTextDrawSetString(playerid,DmArenaTextDraw[playerid], string);
		PlayerTextDrawShow(playerid,DmArenaTextDraw[playerid]);
	}
	return 1;
}
stock ResetGunsArena() {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!TI[i][tGunArea][0]) continue;
		TI[i][tGunArea][0] = 1;
		TI[i][tGunArea][1] = 0;
		TI[i][tGunArea][2] = 0;
		TI[i][tGunArea][3] = 1;
		SendOk(i,"Для выхода из Гонки Вооружений,Використовуйте: "W"/power");
		DelGun(i);
		AC_GivePlayerWeapon(i, ArenaGun[5], 3000);
		new rand = random(sizeof(DMPositions));
		SetPlayerPosAC(i, DMPositions[rand][0], DMPositions[rand][1], DMPositions[rand][2],141,141);
		SetPlayerHealth(i, 100.0);
		SetPlayerColor(i,0x56FB4EFF);
		new string[128];
		format(string,sizeof(string),"{1bd12f}Kills Gun:{ffffff}%d/3\n{1bd12f}Guns:{ffffff}%d/6",TI[i][tGunArea][1],TI[i][tGunArea][3]);
		DestroyDynamic3DTextLabel(DMSTATUS[i]);
		DMSTATUS[i] = CreateDynamic3DTextLabel(string, 0xFF6347FF, 0,0,0.4,10.0,i,INVALID_VEHICLE_ID,1,-1,-1,-1,10);
	}
}
stock get_disease(playerid, targetid) {
	new string[256],str[64], null;
	strcat(string,"Болезнь\tСтатус\tВартість\n");

	new price_1,price_2;
	if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
		new seller_1 = floatround(1500/100*vip_status[PlayerInfo[playerid][pVips]][vip_disease]);
		new seller_2 = floatround(2500/100*vip_status[PlayerInfo[playerid][pVips]][vip_disease]);
		price_1 = (1500-seller_1);
		price_2 = (2500-seller_2);
	}
	else {
		if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
			new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
			new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
			price_1 = (1500-seller_1);
			price_2 = (2500-seller_2);
		}
		else if(BonusInfo[act_select] == 2) {
			new seller_1 = floatround(1500/100*BonusInfo[act_disease]);
			new seller_2 = floatround(2500/100*BonusInfo[act_disease]);
			price_1 = (1500-seller_1);
			price_2 = (2500-seller_2);
		}
	    else {
	    	price_1 = 1500;
	    	price_1 = 2500;
	    }
	}

	if(PlayerInfo[targetid][pDisease][0]) format(str,sizeof(str),"Грипп\tБолен\t"GREEN"%d\n",price_1),strcat(string,str), take_items[playerid][null] = 0, null++;
	if(PlayerInfo[targetid][pDisease][1]) format(str,sizeof(str),"Анорексия\tБолен\t"GREEN"%d\n",price_2),strcat(string,str), take_items[playerid][null] = 1, null++;
    if(!null) return SendClientMessage(playerid,COLOR_GREY,"Хвороба не обнаружено");
	SetPVarInt(playerid,"gheal",targetid), D(playerid,D_DISEASE,DSTH,"Состояние",string,"Лечить","Відміна");
	return 1;
}
stock TextFind(const text[],const findtext[]) return strfind(text, findtext) != -1;

stock ValidChar(mailchar) {
	if((mailchar >= 'A' && mailchar <= 'Z') || (mailchar >= 'a' && mailchar <= 'z')
	|| (mailchar >= '0' && mailchar <= '9') || (mailchar == '-') || (mailchar == '_')
	|| (mailchar == '@') || (mailchar == '.')) return 1;
	return 0;
}

stock IsValidEmail(const email[]) {
	new bool:Succes = true;
	new bool:Good;
	for(new i; i < strlen(email); i++) {
	    if(email[i] == '@') {
		    if(!Good) Good = true;
		    else {
				Good = false;
		    	break;
			}
		}
	    if(!ValidChar(email[i])) Succes = false;
	}
	if(!Good) Succes = false;
	if(!TextFind(email,".ru") && !TextFind(email,".com") && !TextFind(email,".ua") && !TextFind(email,".su")) Succes = false;
	if(!TextFind(email,"@")) Succes = false;
  	return Succes;
}
CB: OnGuardFixUpdateInformation(targetid, const cheat_name[], cheat_code , value_one, value_two) {
	if(value_one < value_two) return true;
	CallRemoteFunction("OnGuardMessageServerForChat","isd", targetid, cheat_name, cheat_code);
	return true;
}
CB: OnPlayerDonateCheck(playerid, name[]) {
    new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Гравець не знайдений");
    new credits;
	cache_get_value_int(0, "donatemoney", credits);
	SetPVarInt(playerid, "check_credits", credits);
	SetPVarString(playerid, "check_name", name);
    new query[256];
	format(query, sizeof(query), "SELECT * FROM unitpay_payments WHERE account = '%s' AND status = 1 ORDER BY dateComplete DESC LIMIT 0,20;", name);
	mysql_tquery(connects, query, "unitpay_callback", "dd", playerid, 1);
	return 1;
}
CB: unitpay_callback(playerid, type) {
    switch(type) {
		case 0: {
		    new rows;
		    cache_get_row_count(rows);
		    if(!rows) return ErrorMessage(playerid,"Історія поповнень відсутня");
		    new sum, datetime[30], str[1000];
		    for(new i; i < rows; i++) {
		    	cache_get_value_index_int(i, 3, sum);
		    	cache_get_value_index(i, 6, datetime, 30);
		    	format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("B-COIN"):(sum<5)?("B-COIN"):("B-COIN"));
	    	}
		    new string[1024];
	        format(string, sizeof(string), "\
				"W"Стан рахунку:\t\t"GREEN"%i B-COIN\n\
				{3399FF}20 последних пополнений"W"\n\n\
				%s\n\
				"ORANGE"Поповнити рахунок можно на "YELLOW"samp-ukraine.com",
				PlayerInfo[playerid][pRouble], str);
	        D(playerid, DIALOG_NONE, DSM, ""YELLOW"Інформація про поповнення", string, "Закрити", "");
		}
		case 1: {
		    new rows;
		    cache_get_row_count(rows);
		    new name[MAX_PLAYER_NAME];
			GetPVarString(playerid,"check_name",name,MAX_PLAYER_NAME);
			DeletePVar(playerid,"check_name");
			if(!rows) {
			    new string[512];
		        format(string, sizeof(string), "\
		        	"W"Ник:\t\t\t\t%s\n\
					"W"Стан рахунку:\t\t"GREEN"%i B-COIN\n\
					{AFAFAF}Історія поповнень відсутня\n",
					name, GetPVarInt(playerid, "check_credits"));
		        D(playerid, DIALOG_NONE, DSM, ""YELLOW"Інформація про поповнення", string, "Закрити", "");
		        DeletePVar(playerid, "check_credits");
			    return 1;
			}
		    new sum, datetime[30], str[1000];
		    for(new i; i < rows; i++) {
		    	cache_get_value_index_int(i, 3, sum);
		    	cache_get_value_index(i, 6, datetime, 30);
		    	format(str, sizeof(str), "%s%s - %i %s\n", str, datetime, sum, (sum==1)?("B-COIN"):(sum<5)?("B-COIN"):("B-COIN"));
	    	}
			new string[1024];
	        format(string, sizeof(string), "\
	        	"W"Ник:\t\t\t\t%s\n\
				"W"Стан рахунку:\t\t"GREEN"%i B-COIN\n\
				{3399FF}20 последних пополнений"W"\n\n\
				%s",
				name, GetPVarInt(playerid, "check_credits"), str);
	        D(playerid, DIALOG_NONE, DSM, ""YELLOW"Інформація про поповнення", string, "Закрити", "");
	        DeletePVar(playerid, "check_credits");
		}
	}
	return 1;
}
CB: load_online_today(playerid) {
    new rows;
	cache_get_row_count(rows);
	if(!rows) {
		gOnlinePlayer[playerid][0] = 0;
		gOnlinePlayerAFK[playerid][0] = 0;
	}
	else {
		cache_get_value_index_int(0,3,gOnlinePlayer[playerid][0]);
		cache_get_value_index_int(0,4,gOnlinePlayerAFK[playerid][0]);
	}
	return 1;
}
CB: load_online_yesterday(playerid) {
    new rows;
	cache_get_row_count(rows);
	if(!rows) {
		gOnlinePlayer[playerid][1] = 0;
		gOnlinePlayerAFK[playerid][1] = 0;
	}
	else {
  		cache_get_value_index_int(0,3,gOnlinePlayer[playerid][1]);
		cache_get_value_index_int(0,4,gOnlinePlayerAFK[playerid][1]);
	}
    return 1;
}
CMD:quest(playerid) {
	if(car_autoschool[playerid] != INVALID_VEHICLE_ID) return ErrorMessage(playerid,"Запрещено во время экзамена");
	new string[1024],num;
	string = ""YELLOW"Задание\t"YELLOW"Прогресс\n";
	for(new i;i<MAX_QUESTS;i++) {
		if(AcceptQuest[playerid][i]!=0 && QuestProgress[playerid][i]!=100) {
		    if(QuestProgress[playerid][i]<QI[i][LastProgress]) format(string,sizeof(string),"%s\n"W"%s\t"ORANGE"%d/%d\n",string,QI[i][QuestName],QuestProgress[playerid][i],QI[i][LastProgress]);
		    else if(QuestProgress[playerid][i]==100) format(string,sizeof(string),"%s\n"W"%s\t"NO"Виполнено\n",string,QI[i][QuestName]);
		    else format(string,sizeof(string),"%s\n"W"%s\t"GREEN"Можно завершить\n",string,QI[i][QuestName]);
			QuestShow[playerid][num]=i;
			num++;
		}
	}
	if(num) D(playerid,D_QUEST_2,DSTH,"Квест",string,"Вибрати","Відміна");
	else ErrorMessage(playerid,"Активних квестових ліній не знайдено");
	return 1;
}
stock NextStapQI(playerid,id) {
	switch(id) {
	    case 1: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 40) {
				SendOk(playerid,"Розташування Яблучного саду успішно відзначено у вашому GPS");
				EnableGPSForPlayer(playerid,-118.2737,7.1584,3.1172);
	        }
	        else if(QuestProgress[playerid][id] == 40) {
				new rand = random(2);
				if(rand == 1) EnableGPSForPlayer(playerid,1770.8281,-1887.7174,13.5600); 
				else EnableGPSForPlayer(playerid,1981.0763,-2039.7773,13.5708); 
			}
	    }
		case 2: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 15) {
				SendOk(playerid,"Розташування Зброяного заводу успішно відзначено у вашому GPS");
				EnableGPSForPlayer(playerid,2675.6917,-2405.5618,13.4675);
	        }
	        else if(QuestProgress[playerid][id] == 15) {
				new rand = random(2);
				if(rand == 1) EnableGPSForPlayer(playerid,1770.8281,-1887.7174,13.5600); 
				else EnableGPSForPlayer(playerid,1981.0763,-2039.7773,13.5708); 
			}
	    }
		case 3: {
	        if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 10) {
				SendOk(playerid,"Розташування Нафтозаводу успішно відзначено у вашому GPS");
				EnableGPSForPlayer(playerid,302.3781,1411.4307,9.3229);
	        }
	        else if(QuestProgress[playerid][id] == 10) {
				new rand = random(2);
				if(rand == 1) EnableGPSForPlayer(playerid,1770.8281,-1887.7174,13.5600); 
				else EnableGPSForPlayer(playerid,1981.0763,-2039.7773,13.5708); 
			}
	    }
		case 4: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 20) {
				SendOk(playerid,"Розташування Лісопилки успішно відзначено у вашому GPS");
				EnableGPSForPlayer(playerid,-495.1036,-1568.1460,9.8474);
	        }
	        else if(QuestProgress[playerid][id] == 20) {
				new rand = random(2);
				if(rand == 1) EnableGPSForPlayer(playerid,1770.8281,-1887.7174,13.5600); 
				else EnableGPSForPlayer(playerid,1981.0763,-2039.7773,13.5708); 
			}
		}
		case 5: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 500) {
				SendOk(playerid,"Розташування Складу успішно зазначено у вашому GPS");
				new rand = random(2);
				if(rand == 0) EnableGPSForPlayer(playerid,252.0355,1834.5072,17.6709); 
				else if(rand == 1 ) EnableGPSForPlayer(playerid,-1366.5562,497.6943,11.1953);
				else EnableGPSForPlayer(playerid,2708.6196,-2444.9922,13.6398);
	        }
	        else if(QuestProgress[playerid][id] == 500) {
				quest_gung(playerid);
				AcceptQuest[playerid][id] = 2;
			}
		}
		case 6: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 15) {
				SendOk(playerid,"Грабувати можна любий будинок, який знаходиться на вашій території");
	        }
	        else if(QuestProgress[playerid][id] == 15) {
				quest_gung(playerid);
			}
		}
		case 7: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 10) {
				SendOk(playerid,"Продайте зброю любому гравцю");
	        }
	        else if(QuestProgress[playerid][id] == 10) {
				quest_gung(playerid);
			}
		}
		case 8: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 20) {
				SendOk(playerid,"Убейте 20 гравців во время капта");
	        }
	        else if(QuestProgress[playerid][id] == 20) {
				quest_gung(playerid);
			}
		}
		case 9: {
			if(QuestProgress[playerid][id] >= 0 && QuestProgress[playerid][id] < 1) {
				SendOk(playerid,"Спровоцируйте войну за территорию");
	        }
	        else if(QuestProgress[playerid][id] == 1) {
				quest_gung(playerid);
			}
		}
	}
	save_quest(playerid,id);
	return 1;
}
stock quest_gung(playerid) {
	switch(PlayerInfo[playerid][pMember]) {
		case fBALLAS: EnableGPSForPlayer(playerid,1942.2025,-1117.6656,26.4455); 
		case fVAGOS: EnableGPSForPlayer(playerid,2747.1582,-1180.8827,69.4016); 
		case fGROVE: EnableGPSForPlayer(playerid,2498.2842,-1687.7340,13.5188); 
		case fAZTEC: EnableGPSForPlayer(playerid,1669.6034,-2118.1514,13.5469); 
		case fRIFA: EnableGPSForPlayer(playerid,2735.0513,-1949.6676,13.5394); 
	}
}
stock quest_register(playerid) {
	new Float:dist[2],total_spawn = 0;
	dist[0] = GetPlayerDistanceFromPoint(playerid, 1770.8281,-1887.7174,13.5600);
	dist[1] = GetPlayerDistanceFromPoint(playerid, 1981.0763,-2039.7773,13.5708);

	if(dist[0] < dist[1]) total_spawn = 1;

	if(total_spawn == 0) EnableGPSForPlayer(playerid,1770.8281,-1887.7174,13.5600); 
	else EnableGPSForPlayer(playerid,1981.0763,-2039.7773,13.5708);
	SendClientMessage(playerid, COLOR_YELLOW, "Советуем пройти первоначальные квесты и заробити грошей");
}
stock save_quest(playerid,id) {
	new query[300];
    format(query, sizeof(query), "UPDATE `questsprogress` SET `progress`='%d',`accept`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], AcceptQuest[playerid][id], id, player_name[playerid]);
    mysql_tquery(connects, query);
}
stock SendBotMessage(playerid,const mesage[]) {
	new id;
	if(!TI[playerid][tLogin]) return 0;
	new Float:x, Float:y, Float:z,Float:x1, Float:y1, Float:z1;
	new Float: minDist,minA=-1;
	GetPlayerPos(playerid, x1, y1, z1);
	for(new i;i<MAX_ACTORSS;i++) {
		if(!IsActorStreamedIn(i,playerid)) continue;
		if(GetActorVirtualWorld(i) != GetPlayerVirtualWorld(playerid)) continue;
		GetActorPos(i, x, y, z);
		new Float: Dist=PointToPoint(x,y,z,x1,y1,z1);
		if(Dist<30) {
			if (minDist>Dist || minDist==0) {
				minA = i;
				minDist = Dist;
			}
		}
	}
	if(minA!=-1) {
		ApplyActorAnimation(minA,"PED", "IDLE_CHAT",4.1,0,1,1,1,1);
		Update3DTextLabelText(tActor[minA], -1, mesage);
		actortime[minA]=10;
		id =minA;
	}
	if(strfind(mesage, "\n")==-1) SendClientMessage(playerid,COLOR_GREY,mesage);
	return id;
}
CB: LoadQuestMysql(playerid) {
	new rows;
	cache_get_row_count(rows);
	for(new i; i< rows; i++) {
		new idquest;
	    cache_get_value_index_int(i,0,idquest);
		cache_get_value_index_int(i,1,QuestProgress[playerid][idquest]);
		cache_get_value_index_int(i,2,AcceptQuest[playerid][idquest]);
	}
	return 1;
}
CB: SpecPl(playerid,bool:spec) {
	TI[playerid][tSpectate] = spec;
	TogglePlayerSpectating(playerid,spec);
}
stock RandomYareNforJOBS(playerid) {
	if(TI[playerid][tProcess][0] < 0) {
		ClearAnimations(playerid,1);
		ClearAnimationsEX(playerid);
		TogglePlayerControllable(playerid, 1);
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		if(JobTempProcess[playerid] == 4) TI[playerid][tClothesWork][1] = 1;
		if(JobTempProcess[playerid] == 5) {
			WD::[TI[playerid][tJobWood][2]][woodUse] = false;
			TI[playerid][tJobWood][2] = -1;
		}
		if(JobTempProcess[playerid] == 7) {
			RemovePlayerAttachedObject(playerid, 7);
			Fishing[playerid] = false;
		}
		if(JobTempProcess[playerid] == 9) {
			PlayerInfo[playerid][pJemmy] --;
			UpdatePlayerData(playerid,"pJemmy",PlayerInfo[playerid][pJemmy]);
		}
		if(JobTempProcess[playerid] == 15 || JobTempProcess[playerid] == 16) { //Угон
			DestroyDynamicArea(theftarea[playerid][0]);
			DisablePlayerCheckpoint(playerid);
			DestroyDynamicCP(theftCheck[playerid][0]);
			if(theftveh[playerid][0] != INVALID_VEHICLE_ID) {
				A_DestroyVehicle(theftveh[playerid][0]);
				theftveh[playerid][0] = INVALID_VEHICLE_ID;
			}
			theftplayer[playerid][0] = 1010;
			theftplayer[playerid][1] = 0;
			theftCheck[playerid][1] = 0;
			PlayerTextDrawHide(playerid, theft_PTD[playerid][0]);
			thefttime[playerid] = 0;
			if(PlayerInfo[playerid][ptheftExp] == 0) {
				if(PlayerInfo[playerid][ptheftSkill] != 0) PlayerInfo[playerid][ptheftSkill]--, UpdatePlayerData(playerid,"theftSkill",PlayerInfo[playerid][ptheftSkill]);
				PlayerInfo[playerid][ptheftExp] = TheftSkillMax[PlayerInfo[playerid][ptheftSkill]]-1, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
			} 
			else {
				if(PlayerInfo[playerid][ptheftExp] != 0) PlayerInfo[playerid][ptheftExp]--, UpdatePlayerData(playerid,"theftExp",PlayerInfo[playerid][ptheftExp]);
			}
		}
		JobTempProcess[playerid] = 0;
		return true;
	}
	new yarentext[32],yarenbutton;
	format(yarentext,32,"~w~PRESS_");
	switch(random(3)) {
		case 0:strcat(yarentext,"~g~Y"),yarenbutton = 65536;
		case 1:strcat(yarentext,"~g~H"),yarenbutton = 2455;
		case 2:strcat(yarentext,"~g~N"),yarenbutton = 131072;
	}
	PlayerTextDrawFont(playerid, YandNsysTDPlayer[playerid][0], 1);
	PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][0],yarentext);
	PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][0]);
	SetPVarInt(playerid,"Klavisha",yarenbutton);
	if(TI[playerid][tProcess][0] > 10) TI[playerid][tProcess][0] = 10;
	switch(TI[playerid][tProcess][0]) {
		case 0:PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],"~w~IIIIIIIIII");
		case 1..9: {
			new yarenstring[100];
			for(new g = 0;g < TI[playerid][tProcess][0];g++) {
				if(g == 0)strcat(yarenstring,"~g~I");
				else strcat(yarenstring,"I");
			}
			new svoboda = 10 - TI[playerid][tProcess][0];
			for(new go = 0;go < svoboda;go++) {
				if(go == 0)strcat(yarenstring,"~w~I");
				else strcat(yarenstring,"I");
			}
			PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],yarenstring);
		}
		case 10:PlayerTextDrawSetString(playerid,YandNsysTDPlayer[playerid][1],"~g~IIIIIIIIII");
	}
	PlayerTextDrawShow(playerid,YandNsysTDPlayer[playerid][1]);
	return true;
}
stock MyButtonSystem(playerid) {
	new testprocees = 10/TI[playerid][tProcess][1];
	TI[playerid][tProcess][0] += testprocees;
	RandomYareNforJOBS(playerid);
	switch(JobTempProcess[playerid]) {
		case 1: ApplyAnimation(playerid, "FLAME","FLAME_FIRE", 4.1,1,1,1,1,0,0);
		case 2: ApplyAnimation(playerid, "PED","IDLE_taxi", 4.1,1,1,1,1,0,0);
		case 3: ApplyAnimation(playerid, "BUDDY","buddy_reload", 4.1,1,1,1,1,0,0);
		case 4: {
			if(!GetPVarInt(playerid,"id_object")) {
				if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid,8);
				new objectid = CreateDynamicObject(2384,clothes_works[GetPVarInt(playerid,"clothes_id")][0],clothes_works[GetPVarInt(playerid,"clothes_id")][1],clothes_works[GetPVarInt(playerid,"clothes_id")][2],0.0,0.0,0.0);
				SetPVarInt(playerid,"id_object",objectid);
				TI[playerid][tClothesWork][1] = 4;
				Streamer_Update(playerid);
			}
			ApplyAnimation(playerid, "CAR_CHAT","CAR_Sc4_BL", 4.1,1,1,1,1,0,0);
		}
		case 5: ApplyAnimation(playerid, "CHAINSAW","WEAPON_csaw", 4.1,1,1,1,1,0,0);
		case 6: ApplyAnimation(playerid, "CHAINSAW","CSAW_G", 4.1,1,1,1,1,0,0);
		case 7: ApplyAnimation(playerid,"SWORD","SWORD_3",4.1, 0, 1, 1, 1, 0, 1);
		case 8: ApplyAnimation(playerid,"INT_SHOP","shop_cashier",4.1,1,0,0,1,1, 1);
		case 9: ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,1,1, 1);
	}
	if(TI[playerid][tProcess][0] >= 10) {
		TI[playerid][tProcess][0] = -1;
		TI[playerid][tProcess][1] = -1;
		for(new YN = 0;YN < 3;YN++) {
			TextDrawHideForPlayer(playerid, YandNsysTD[YN]);
			if(YN < 2) PlayerTextDrawHide(playerid,YandNsysTDPlayer[playerid][YN]);
		}
		switch(JobTempProcess[playerid]) {
			case 1: {
				sad_temp_1(TI[playerid][tJobSad][1]-1);
				PlayerDelayBailer(playerid);
				DeletePVar(playerid,"bailer");
				JobTempProcess[playerid] = 0;
			}
			case 2: {
				sad_temp_4(TI[playerid][tJobSad][1]-1,playerid);
				JobTempProcess[playerid] = 0;
			}
			case 3: {
				GunReady(playerid);
				TI[playerid][tJobGun][1] = 1;
				JobTempProcess[playerid] = 0;
			}
			case 4: {
				clothes_timer(playerid);
				JobTempProcess[playerid] = 0;
			}
			case 5: {
				WoodsPlayer(playerid,TI[playerid][tJobWood][2]);
				JobTempProcess[playerid] = 0;
			}
			case 7: {
				fish_player(playerid);
				JobTempProcess[playerid] = 0;
			}
			case 8: {
				if(GetPVarInt(playerid,"JOBOSMOTR") > 0) {
				    JobTempProcess[playerid] = 0;
				    new automobile = GetPVarInt(playerid,"JOBOSMOTR");
				    DeletePVar(playerid,"JOBOSMOTR");
					PlayerInfo[playerid][pInstrument] -= 1;
					UpdatePlayerData(playerid,"pInstr",PlayerInfo[playerid][pInstrument]);
					new vehydid = GetPVarInt(playerid,"MechOsmotrVEHID");
					ClearAnimationsEX(playerid);
					TogglePlayerControllable(playerid, true);
					new panels_job,doors_job,lights_job,tires_job;
					GetVehicleDamageStatus(vehydid, panels_job,doors_job,lights_job,tires_job);
					switch(automobile) {
						case 1: SendOk(playerid,"Двери транспорта успішно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,0,lights_job,tires_job),SetPlayerChatBubble(playerid, "починил двери транспорта", COLOR_PURPLE, 15, 5000);
						case 2: SendOk(playerid,"Корпус транспорта успішно починен"),UpdateVehicleDamageStatus(vehydid,0,doors_job,lights_job,tires_job),SetPlayerChatBubble(playerid, "починил корпус транспорта", COLOR_PURPLE, 15, 5000);
						case 3: SendOk(playerid,"Фары транспорта успішно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,doors_job,0,tires_job),SetPlayerChatBubble(playerid, "починил фары транспорта", COLOR_PURPLE, 15, 5000);
						case 4: SendOk(playerid,"Колеса транспорта успішно починены"),UpdateVehicleDamageStatus(vehydid,panels_job,doors_job,lights_job,0),SetPlayerChatBubble(playerid, "заменил колеса транспорта", COLOR_PURPLE, 15, 5000);
						case 5: SendOk(playerid,"Двигатель транспорта успішно починен"),SetVehicleHealth(vehydid,1000),SetPlayerChatBubble(playerid, "починил двигатель транспорта", COLOR_PURPLE, 15, 5000),GetVehicleParamsEx(vehydid,engine,lights,alarm,doors,bonnet,boot,objective),SetVehicleParamsEx(vehydid,engine,lights,alarm,doors,false,boot,objective);
					}
				}
			}
			case 9: {
				new Float:angle,Float:distance,Float:vehx, Float:vehy, Float:vehz,Float:x_pos, Float:y_pos, Float:z_pos;
			    GetVehicleModelInfo(GetVehicleModel(rob_veh[playerid]), 1, vehx, distance, vehz);
			    distance = distance/2 + 0.1;
			    GetVehiclePos(rob_veh[playerid], vehx, vehy, vehz);
			    GetVehicleZAngle(rob_veh[playerid], angle);
			    vehx += (distance * floatsin(-angle+180, degrees));
			    vehy += (distance * floatcos(-angle+180, degrees));

			    new string[64];
				format(string,sizeof(string),"Техника: "O"%iод:",VG[rob_veh[playerid]][vgAmount][0]);
				VG[rob_veh[playerid]][vgText] = CreateDynamic3DTextLabel(string,COLOR_WHITE,vehx, vehy, vehz+0.5,20.0);
			    VG[rob_veh[playerid]][vgPickup] = CreateDynamicPickup(19133,1,vehx, vehy, vehz-0.5);
				VG[rob_veh[playerid]][vgArea] = CreateDynamicSphere(vehx, vehy, vehz,1.0);

				VG[rob_veh[playerid]][vgRobHouse] = true;

				GetPlayerPos(playerid,x_pos,y_pos,z_pos);
				RobPlayer[playerid][RobArea] = CreateDynamicSphere(x_pos,y_pos,z_pos, 1.5, 0,0);
				RobPlayer[playerid][RobPickup] = CreateDynamicPickup(19134, 23, x_pos,y_pos,z_pos, 0,0);

				RobPlayer[playerid][RobRand] = random(7)+2;

				format(string,sizeof(string),"Доступно техники: "O"%iод:",RobPlayer[playerid][RobRand]);
				RobPlayer[playerid][RobText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, x_pos,y_pos,z_pos+0.5,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1,-1,10);
				ClearAnimationsEX(playerid);
				TogglePlayerControllable(playerid, true);
			}
			case 15: { //угон
				SendOk(playerid,"Машина взломана, везите ее на склад");
			 	if(theftveh[playerid][0] != INVALID_VEHICLE_ID) { 
	 				A_DestroyVehicle(theftveh[playerid][0]);
	 				theftveh[playerid][0] = INVALID_VEHICLE_ID;
					theftveh[playerid][1] = 0;
					PlayerTextDrawHide(playerid, theft_PTD[playerid][1]);
				}
				ClearAnimationsEX(playerid);
				TogglePlayerControllable(playerid, true);
			  	JobTempProcess[playerid] = 0;
			  	GetVehicleParamsEx(theftIDveh[playerid][0],engine,lights,alarm,doors,bonnet,boot,objective);
			  	if(doors) doors_status(theftIDveh[playerid][0], playerid);
			  	theftCheck[playerid][1] = 2;
				theftarea[playerid][1] =  random(3);
				switch(theftarea[playerid][1]){
					case 0: {
						EnableGPSForPlayer(playerid,2415.5767,-2467.5305,13.6250);
						SendOk(playerid,"Розташування складу LS успішно зазначено у вашому GPS");
						theftarea[playerid][0] = CreateDynamicSphere(2415.5767,-2467.5305,13.6250, 15.0, 0, 0, playerid);
					}
					case 1: {
						EnableGPSForPlayer(playerid,951.9211,2070.2153,10.8203);
						SendOk(playerid,"Розташування складу LV успішно зазначено у вашому GPS");
						theftarea[playerid][0] = CreateDynamicSphere(951.9211,2070.2153,10.8203, 15.0, 0, 0, playerid);
					}
					case 2: {
						EnableGPSForPlayer(playerid,-2117.7361,-249.2475,35.3203);
						SendOk(playerid,"Розташування складу SF успішно зазначено у вашому GPS");
						theftarea[playerid][0] = CreateDynamicSphere(-2117.7361,-249.2475,35.3203, 15.0, 0, 0, playerid);
					}
				}
				PlayerInfo[theftIDveh[playerid][1]][ptheftHome] = gettime()+1200;
				UpdatePlayerData(theftIDveh[playerid][1],"theftHome",PlayerInfo[theftIDveh[playerid][1]][ptheftHome]);
				theftplayer[playerid][1] = 1200;
			}
			case 16: { //угон
				ClearAnimationsEX(playerid);
				TogglePlayerControllable(playerid, true);
			  	JobTempProcess[playerid] = 0;
				new i = PlayerInfo[theftIDveh[playerid][1]][pHouse]-1;
				new Veh = theftIDveh[playerid][0];
				SetVehiclePos(Veh, gHouses[i][houseParkX], gHouses[i][houseParkY], gHouses[i][houseParkZ]);
				SetVehicleZAngle(Veh, gHouses[i][houseParkR]);
				exit_garage(Veh,0);
				new Float:vehx, Float:vehy, Float:vehz;
				GetVehiclePos(Veh, vehx, vehy, vehz);
				SendOk(playerid,"Взлом гаража удался, машина біля будинку");
				EnableGPSForPlayer(playerid,vehx, vehy, vehz);
				theftarea[playerid][0] = CreateDynamicSphere(vehx, vehy, vehz, 15.0, 0, 0, playerid);
				theftCheck[playerid][1] = 1;
				theftIDveh[playerid][2] = 0;
				thefttime[playerid] = GetTheftTimelimit(playerid);
				PlayerTextDrawShow(playerid, theft_PTD[playerid][0]);
				theftplayer[theftIDveh[playerid][1]][0] = playerid; 
			}
		}
	}
	return true;
}
stock NonSym(const str[], max = 0, min = 0)  {
	static BadNameChars[][2] = {"/","\n","`","~","%","^","&","[","]","{","}","|","'"};
	for(new i = 0; i < sizeof( BadNameChars ); i++) {
		if(strfind( str, BadNameChars[i], true ) != -1 || strlen( str ) > max || strlen( str ) < min) return 1;
	}
	return 0;
}
stock Hunger(playerid,type) {
	switch(type) {
	    case 0: {
			TextDrawShowForPlayer(playerid,HungerFon[0]);
			TextDrawShowForPlayer(playerid,HungerFon[1]);
			PlayerTextDrawTextSize(playerid,HungerProgres[playerid], 549.5 + PlayerInfo[playerid][pSatiety] / 100.0 * 54.5, 40.000000);
			PlayerTextDrawShow(playerid,HungerProgres[playerid]);
		}
		case 1: {
			PlayerTextDrawHide(playerid,HungerProgres[playerid]);
			TextDrawHideForPlayer(playerid,HungerFon[0]);
			TextDrawHideForPlayer(playerid,HungerFon[1]);
		}
	}
}
stock SetFullness(playerid, ammount) {
	if(ammount > 100) PlayerInfo[playerid][pSatiety] = 100;
	else if(ammount < 0) PlayerInfo[playerid][pSatiety] = 0;
	else PlayerInfo[playerid][pSatiety] = ammount;
	if(PlayerInfo[playerid][pSettings][6] > 0) Hunger(playerid,0);
	return true;
}
stock GiveFullness(playerid, ammount) {
	SetFullness(playerid,PlayerInfo[playerid][pSatiety] + ammount);
	if(PlayerInfo[playerid][pSatiety] + ammount > 100) PlayerInfo[playerid][pSatiety] = 100;
	if(PlayerInfo[playerid][pSettings][6] > 0) Hunger(playerid,0);
}
stock GetVehicleSpeed(vehicleid) {
	new Float:coord[3];
	GetVehicleVelocity(vehicleid,coord[0],coord[1],coord[2]);	
	new Float:speed = floatsqroot(floatpower(floatabs(coord[0]), 2.0) + floatpower(floatabs(coord[1]), 2.0) + floatpower(floatabs(coord[2]), 2.0)) * 100.3;
    return floatround(speed);
}
stock _GetVehicleSpeed(vehicleid) {
    new Float:X, Float:Y, Float:Z, Float:speed;
    GetVehicleVelocity(vehicleid, X, Y, Z) ;
    speed =((floatsqroot((X*X) + (Y*Y))*10) / 1.65) * 30;
    return floatround(speed, floatround_round);
}
CB: NoRoof(playerid) {
    new carid = GetPlayerSurfingVehicleID(playerid);
    if(carid != INVALID_VEHICLE_ID) {
        new Float:speed = GetVehicleSpeed(carid);
        new cm = GetVehicleModel(carid);
        switch(cm) {
            case 430,446,452,453,454,472,473,478,484,493,554,543,595,422,605,600,592:{return 1;}
            default:{}
        }
        if(speed > 30) {
            new Float:slx, Float:sly, Float:slz;
            GetPlayerPos(playerid, slx, sly, slz);
            SetPlayerPosAC(playerid, slx, sly, slz+2.5,TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
            ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
        }
    }
    return 1;
}
CB: WoodsPlayer(playerid,wood) {
	new j = TI[playerid][tJobWood][2];
	WD::[j][woodUse] = false;
	SetPlayerAttachedObject(playerid,8,1463,5,0.073999,0.186000,0.105998,95.299972,-175.499984,-72.199935,0.540999,0.350999,0.610999);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	TI[playerid][tJobWood][3] = 2;
	TI[playerid][tJobWood][1] = 1;
	TogglePlayerControllable(playerid,true);
	TI[playerid][tJobWood][2] = -1;
	return 1;
}
CB: bl_callback(playerid) {
	new rows, line_string[128], dialog_string[1380], bl_accuser[32], bl_accused[32], bl_reason_l[42];
	cache_get_row_count(rows);
	new rows_page = GetPVarInt (playerid, "bl_page") - 1;
	SetPVarInt(playerid, "bl_rows", rows) ;
	if(rows) {
		strcat(dialog_string,""ORANGE"Далее >>>\n") ;
		strcat(dialog_string,""ORANGE"<<< Назад\n") ;
		for(new i = rows_page * 10 ; i <  rows_page * 10 + 10 ; i ++) {
			if(i >= rows) break;

			cache_get_value(i,"f_bl_accused", bl_accused, 32);
			cache_get_value(i,"f_bl_accuser", bl_accuser, 32);
			cache_get_value(i,"f_bl_reason", bl_reason_l, 42);

			format(line_string, sizeof(line_string), "%s | Причина: %s | Добавив: %s\n", bl_accused, bl_reason_l, bl_accuser);
			strcat(dialog_string, line_string);
		}
	}
	else return ErrorMessage(playerid, "Чорний список організації пуст" ), pc_cmd_bl(playerid);
	D(playerid,D_BL_ALL,DSL, ""YELLOW"Чорний список", dialog_string, "Вибрати", "Назад");
	return 1 ;
}
CB: bl_loading_callback(playerid) {
	new rows;
	cache_get_row_count(rows);
	if(rows) {
		for(new i, fr_id; i < rows; i++) {
			cache_get_value_int(i,"f_bl_id", fr_id);

			bl_info[playerid][bl_fraction][fr_id] = true;

			cache_get_value(i, "f_bl_reason", bl_info[playerid][bl_reason][fr_id], 32);
		}
	}
	return 1 ;
}
stock IsValidPlayer(player, playerid) {
	return (player != INVALID_PLAYER_ID && player == playerid);
}
stock CheckPlayerRing(playerid) {
	new string[100];
	if(RingInfo[0][rgState] < 2) {
		new player1 = RingInfo[0][rgPlayer][0];
		new player2 = RingInfo[0][rgPlayer][1];
		new ring = -1;
		if(player1 == playerid) ring = 0;
		else if(player2 == playerid) ring = 1;
		if(ring != -1 && (IsValidPlayer(player1, playerid) || IsValidPlayer(player2, playerid))) {
			format(string, sizeof(string), ""W"[РЭФЕРИ]{f6f6d9} Поединок между "ORANGE"%s{f6f6d9} и "ORANGE"%s{f6f6d9} закончился так и не начавшись", player_name[player1], player_name[player2]);
			RingCP[0] = CreateDynamicCP(763.0551,8.9309,1001.1639, 1.0, 97);
			RingCP[1] = CreateDynamicCP(758.6935,13.4365,1001.1639, 1.0, 97);
			SendOk(player1, string);
			SendOk(player2, string);
			dell_arena();
		}
	}
	else {
		new player1 = RingInfo[0][rgPlayer][0];
		new player2 = RingInfo[0][rgPlayer][1];
		RingCP[0] = CreateDynamicCP(763.0551,8.9309,1001.1639, 1.0, 97);
		RingCP[1] = CreateDynamicCP(758.6935,13.4365,1001.1639, 1.0, 97);
		if(player1 == playerid) format(string, sizeof(string), ""W"[РЭФЕРИ]{f6f6d9} Победителем поединка стал - "ORANGE"%s", player_name[player2]);
		else format(string, sizeof(string), ""W"[РЭФЕРИ]{f6f6d9} Победителем поединка стал - "ORANGE"%s", player_name[player1]);
		SendOk(player1, string);
		SendOk(player2, string);
		dell_arena();
	}
	return true;
}
stock dell_arena() {
	if(TOTALSTYLELIST) {
		for(new idx = 0; idx < TOTALSTYLELIST; idx++) {
			RingInfo[0][rgPlayer][0] = RingInfo[idx+1][rgPlayer][0];
			RingInfo[0][rgPlayer][1] = RingInfo[idx+1][rgPlayer][1];
			RingInfo[0][rgState] = RingInfo[idx+1][rgState];
			RingInfo[0][rgTime] = RingInfo[idx+1][rgTime];
			RingInfo[0][rgPrice] = RingInfo[idx+1][rgPrice];

			RingInfo[idx+1][rgPlayer][0] = -1;
			RingInfo[idx+1][rgPlayer][1] = -1;
			RingInfo[idx+1][rgState] = 0;
			RingInfo[idx+1][rgTime] = 0;
			RingInfo[idx+1][rgPrice] = 0;
		}
	}
	else {
		RingInfo[0][rgPlayer][0] = -1;
		RingInfo[0][rgPlayer][1] = -1;
		RingInfo[0][rgState] = 0;
		RingInfo[0][rgTime] = 0;
		RingInfo[0][rgPrice] = 0;
	}
}
stock GetEndWord(const text[], word) {
	new len = strlen(text);
    for(new i = word; i < len; i ++) {
	    if(i == (len-1) ) return i + 1;
	    else if(text[i] == ' ') return i;
	}
	return -1;
}
stock GetWord(const text[], word, wordstr[], sizword) {
	new w;
	for(new i; i < strlen(text); i ++) {
	    if(text[i] != ' ' && ( (i-1) < 0 || text[i - 1] == ' ') ) {
	        if(w == word) {
				strmid(wordstr, text, i, GetEndWord(text, i), sizword);
				return i;
			}
			w ++;
	    }
	}
	return 0;
}
CB: tk_load(playerid,quantity) {
	if(!TI[playerid][tLogin]) return 1;
	new string[40];
	if(!TI[playerid][tTrucker][0]) TI[playerid][tTrucker][0]+=100;
	else TI[playerid][tTrucker][0] += floatround(quantity/16.67);
	//else TI[playerid][tTrucker][0] += floatround(quantity/2);
	if(TI[playerid][tTrucker][0] >= quantity) {
		TI[playerid][tTrucker][0] = quantity;
		format(string,sizeof(string),"~y~LOADING:~w~%d/%d",TI[playerid][tTrucker][0],quantity);
		GameTextForPlayer(playerid,string,5000,1);

		new Veh = GetPlayerVehicleID(playerid);	
		switch(GetPVarInt(playerid,"tk_spawn")) {
			case 1: {
				new rand = random(sizeof(tk_gun));
				SetVehiclePos(Veh, tk_gun[rand][0],tk_gun[rand][1],tk_gun[rand][2]);
				SetVehiclePos(TK_Trailer[playerid], tk_gun[rand][0],tk_gun[rand][1]-1,tk_gun[rand][2]);
				SetVehicleZAngle(Veh, tk_gun[rand][3]);
				static const f_str[] = ""ORANGE"1."W" Порт м. СФ "GREEN"[$%d т.]";
				new str[sizeof(f_str) +1 + (-2 + 5)];
				format(str,sizeof(str),f_str,tk_unloading[0]);
				D(playerid,D_TRUCK_UNLOAD,DSL,""YELLOW"Доставка",str,"Вибрати","");
			}
			case 2: {
				new rand = random(sizeof(tk_wood));
				SetVehiclePos(Veh, tk_wood[rand][0],tk_wood[rand][1],tk_wood[rand][2]);
				SetVehicleZAngle(Veh, tk_wood[rand][3]);
				SetVehiclePos(TK_Trailer[playerid], tk_wood[rand][0],tk_wood[rand][1]-1,tk_wood[rand][2]);
				//SetVehicleZAngle(Veh, TK_Trailer[playerid]);

				static const f_str[] = ""ORANGE"1."W" Порт м. СФ "GREEN"[$%d т.]\n"ORANGE"2."W" Порт м. ЛС "GREEN"[$%d т.]";
				new str[sizeof(f_str) +1 + (-2 + 5) + (-2 + 5) + (-2 + 5)];
				format(str,sizeof(str),f_str,tk_unloading[1],tk_unloading[2],tk_unloading[3]);

				D(playerid,D_TRUCK_UNLOAD_2,DSL,""YELLOW"Доставка",str,"Вибрати","");
			}
		}
		DeletePVar(playerid,"tk_spawn");
		AttachTrailerToVehicle(TK_Trailer[playerid],Veh);
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid,0);
		SetVehicleVirtualWorld(Veh,0);
		SetVehicleVirtualWorld(TK_Trailer[playerid],0);
		SetTimerEx("AttachTrailerToVehicleEx",1000,false,"ii",TK_Trailer[playerid],Veh);
		DisableRemoteVehicleCollisions(playerid, true);
		SetTimerEx("UnCallisionForPlayer",30000,false,"i",playerid);
	}
	else SetTimerEx("tk_load",5000,false,"ii",playerid,quantity);
	format(string,sizeof(string),"~y~LOADING:~w~%d/%d",TI[playerid][tTrucker][0],quantity);
	GameTextForPlayer(playerid,string,5000,1);
	return 1;
}
stock GetPlayerFAngle(playerid, &Float:angle) {
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
	else GetPlayerFacingAngle(playerid, angle);
}
CheckPlayerGoCuff(playerid) {
    GotoInfo[playerid][gtX] = 0.0;
	GotoInfo[playerid][gtY] = 0.0;
	GotoInfo[playerid][gtZ] = 0.0;
	GotoInfo[playerid][gtTPX] = 0.0;
	GotoInfo[playerid][gtTPY] = 0.0;
	GotoInfo[playerid][gtTPZ] = 0.0;

	if(GotoInfo[playerid][gtGoID] != INVALID_PLAYER_ID) GotoInfo[GotoInfo[playerid][gtGoID]][gtID] = INVALID_PLAYER_ID;

	GotoInfo[playerid][gtID] = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtGoID] = INVALID_PLAYER_ID;
	GotoInfo[playerid][gtState] = 0;
	GotoInfo[playerid][gtStayed] = 0;
    return true;
}
stock TurnPlayerFaceToPlayer(playerid, facingtoid) {
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	SetPlayerFaceToPoint(playerid, x, y);
	return true;
}
stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y) {
    new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
    return true;
}
stock ShiftCords(style, &Float:x, &Float:y, &Float:z, Float:a, Float:distance) {
	#pragma unused z
	switch(style) {
	    case 0: {
	        x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
	    }
	    case 1: {
		    x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
		default: return false;
	}
	return true;
}
stock ReportDell(i) {
	PlayerReport[i] = -1;
    TextReport[i][0] = EOS;
    TextReportAdmin[i][0] = EOS;
    ReportSlot[i] = -1;
    return 1;
}
stock ReportDellAsk(i) {
	PlayerReportAsk[i] = -1;
    TextAsk[i][0] = EOS;
    ReportSlotAsk[i] = -1;
    return 1;
}
stock DropGun(playerid,weaponid,ammo) {
	if(GPDIO[weaponid] == 0 ) return ErrorMessage(playerid, "Цю зброю не можна викинути");
	new string[556];
	for(new freeslot=0;freeslot<MAX_DROP_GUNS;freeslot++) {
		if(drop_gun[freeslot][dg_object] != -1) continue;
		new Float: pos[4];
		GetPlayerPos(playerid, pos[0], pos[1] , pos[2]);
		GetPlayerFacingAngle(playerid, pos [ 3 ] ) ;
	
		drop_gun[freeslot][dg_object] = CreateDynamicObject(GPDIO[weaponid],pos[0], pos[1], pos[2]-0.97, 96, 110,pos[3]);
		drop_gun[freeslot][dg_gun]  =  weaponid;
		drop_gun[freeslot][dg_ammo] = ammo;
		Streamer_Update(playerid);

		new weapons[13][2];
		for(new S = 0; S<13; S++) {
			GetPlayerWeaponData(playerid, S, weapons[S][0], weapons[S][1]) ;
		}
		DelGun(playerid);
		for(new S = 0; S<13 ; S++) {
			if(weapons[S][0] != drop_gun[freeslot][dg_gun] && weapons[S][0] != 0) {
				AC_GivePlayerWeapon(playerid,weapons[S][0],weapons[S][1]);
			}
		}
		drop_gun[freeslot][dg_time] = 2;
		format(string,sizeof(string),""STANDART_GUN_TEXT"", WeaponNames[drop_gun[freeslot][dg_gun]]);
		if(drop_gun[freeslot][dg_text] == Text3D:-1) drop_gun[freeslot][dg_text] = Create3DTextLabel(string,0xFFFFFFFF, pos[0], pos[1], pos[2] + 0.2, 10.5, GetPlayerVirtualWorld(playerid));
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 2, 0, 0, 0, 0, 0,0);
		MeAction(playerid,"Вибросил(а) зброю");
		break;
	}
	return true;
}
CB: onPTMCheck(playerid, targetid, Float:x, Float:y, Float:z, checker) {
	SetPlayerHealth(targetid,GetPVarFloat(targetid,"aimtest"));
	DeletePVar(targetid,"aimtest");
	SetPlayerPosAC(targetid, x, y, z,TI[targetid][tVirtualWorld], TI[targetid][tInterior]);
	SendClientMessage(checker,-1,"Если гравець повернулся на {FF9900}180 градусов"W", то он использует AIM");
}
stock GetXYInFrontOfPoint(&Float:x, &Float:y, Float:angle, Float:distance) {
	x += (distance * floatsin(-angle, degrees));
	y += (distance * floatcos(-angle, degrees));
}
stock GetMN(fraca) {
	new mafianame[28];
	switch(fraca) {
		case fYAKUZA: mafianame = "Japan Mafia";
		case fRM: mafianame = "Russian Mafia";
		case fLCN: mafianame = "Italian Mafia";
	}
	return mafianame;
}
stock MafiaTimeCapture(faction, MafiaNapadss) {
	SendFamilyMessage(faction, 0xFF0000FF, "Увага, стрела началась!");
    SendFamilyMessage(MafiaNapadss, 0xFF0000FF, "Увага, стрела началась!");
	BizWarTime[0] = 0;
	BizWarTime[1] = 60*10;
	return true;
}
BizWarTimer() {
	if(BizWarTime[1] > 0) {
		BizWarTime[1]--;
		foreach(new m:Player) {
			if(!TI[m][tLogin] ||  AntiCheatIsKickedWithDesync(m)) continue;
			new string[128];
			if(GetPVarInt(m,"ppkz2") && !IsAMafia(m)) EndBizwar(m);
			if(MZInfo[bFrakVlad]!=PlayerInfo[m][pMember] && MZInfo[bNapad] != PlayerInfo[m][pMember]) continue;
			if(!GetPVarInt(m,"ppkz2")) {
				GangZoneFlashForPlayer(m,biz_war_gangzone,gFractionSpawn[MZInfo[bNapad]][fracColor]);
				TextDrawShowForPlayer(m, Bizwar[0]);
				format(string,50,"~w~Time: ~g~%s",date("%ii:%ss",BizWarTime[1]));
				TextDrawSetString(Bizwar[0],string);
				format(string,50,"~w~%s Kills: ~g~0",GetMN(MZInfo[bFrakVlad]));
				TextDrawSetString(Bizwar[1],string);
				TextDrawShowForPlayer(m, Bizwar[1]);
				format(string,50,"~w~%s Kills: ~g~0",GetMN(MZInfo[bNapad]));
				TextDrawSetString(Bizwar[2],string);
				TextDrawShowForPlayer(m, Bizwar[2]);
				SetPVarInt(m,"ppkz2",true);
			}
			else {
				format(string,50,"~w~Time: ~g~%s",date("%ii:%ss",BizWarTime[1]));
				TextDrawSetString(Bizwar[0],string);
				format(string,50,"~w~%s Kills: ~g~%d",GetMN(MZInfo[bFrakVlad]),MZInfo[bCountDead][MZInfo[bFrakVlad]]);
				TextDrawSetString(Bizwar[1],string);
				format(string,50,"~w~%s Kills: ~g~%d",GetMN(MZInfo[bNapad]),MZInfo[bCountDead][MZInfo[bNapad]]);
				TextDrawSetString(Bizwar[2],string);
			}
		}
		if(BizWarTime[1] == 1) {
			new mafianame[24];
			switch(MZInfo[bNapad]) {
				case fYAKUZA: mafianame = "Japan Mafia";
				case fRM: mafianame = "Russian Mafia";
				case fLCN: mafianame = "Italian Mafia";
			}
			new mafianamev[24],string[240];
			switch(MZInfo[bFrakVlad]) {
				case fYAKUZA: mafianamev = "Japan Mafia";
				case fRM: mafianamev = "Russian Mafia";
				case fLCN: mafianamev = "Italian Mafia";
			}
			if(MZInfo[bCountDead][MZInfo[bFrakVlad]] > MZInfo[bCountDead][MZInfo[bNapad]]) {
				format(string,sizeof(string), "%s не удалось отобрать у вас контроль над бізнесом %s. бізнес отбит",GetMN(MZInfo[bNapad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Вам не удалось отобрать у мафии %s котроль над бізнесом %s. бізнес оставлен",GetMN(MZInfo[bFrakVlad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
			}
			else if(MZInfo[bCountDead][MZInfo[bFrakVlad]] == MZInfo[bCountDead][MZInfo[bNapad]]) {
				format(string,sizeof(string), "Стрела за бізнес %s закончилась ничьей. бізнес потерян",gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Стрела за бізнес %s закончилась ничьей. бізнес оставлен",gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
				UpdateBusinessText(MZInfo[bBiz]);
			}
			else {
				format(string,sizeof(string), "%s забрала у вас контроль над бізнесом %s. бізнес потерян",GetMN(MZInfo[bNapad]),gBusiness[MZInfo[bBiz]][bizzName]);
				SendFamilyMessage(MZInfo[bFrakVlad], 0xFF0000FF, string);
				format(string,sizeof(string), "Ви отобрали контроль над бізнесом %s у мафии %s. Бізнес захвачен",gBusiness[MZInfo[bBiz]][bizzName],GetMN(MZInfo[bFrakVlad]));
				SendFamilyMessage(MZInfo[bNapad], 0xFF0000FF, string);
				gBusiness[MZInfo[bBiz]][bizzMafia] = MZInfo[bNapad];
				UpdateBusinessData(MZInfo[bBiz]+1,"mafia",gBusiness[MZInfo[bBiz]][bizzMafia]);
				UpdateBusinessText(MZInfo[bBiz]);
			}
			new id_killed = -1;
			new max_killed = -1;
			foreach(new i:Player) {
				if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(GetPVarInt(i,"m_killed_shot")) {
					if(GetPVarInt(i,"m_killed_shot")>max_killed) {
						max_killed = GetPVarInt(i,"m_killed_shot");
						id_killed = i;
					}
					DeletePVar(i,"m_killed_shot");
				}
			}
			foreach(new m:Player) {
				if(!TI[m][tLogin] ||  AntiCheatIsKickedWithDesync(m)) continue;
				if(MZInfo[bFrakVlad]!=PlayerInfo[m][pMember] && MZInfo[bNapad]!=PlayerInfo[m][pMember]) continue;
				if(id_killed != -1 && max_killed != -1) {
					format(string,128,"Уничтожил більше всего противников "W"%s {E6251E}Вбивств: "W"%i", player_name[id_killed],max_killed);
					SendClientMessage(m,0xE8FF1CFF,string);
					if(PlayerInfo[id_killed][pFamily]) reputation_family(PlayerInfo[id_killed][pFamily]-1,3);
				}
				EndBizwar(m);
			}
			MZInfo[bFrakVlad] = 0;
			MZInfo[bNapad] = 0;
			MZInfo[bBiz] = 255;

			GangZoneStopFlashForAll(biz_war_gangzone);
			GangZoneHideForAll(biz_war_gangzone);
			GangZoneDestroy(biz_war_gangzone);
			biz_war_gangzone = - 1;
			war_gangzone = - 1;

			BizWarTime[1] = 0;
			BizHourTime = 1;
			MZInfo[bCountDead][MZInfo[bNapad]] = 0;
			MZInfo[bCountDead][MZInfo[bFrakVlad]] = 0;
		}
	}
}
EndBizwar(m) {
	TextDrawHideForPlayer(m,Bizwar[0]);
	TextDrawHideForPlayer(m,Bizwar[1]);
	TextDrawHideForPlayer(m,Bizwar[2]);
	DeletePVar(m,"ppkz2");
	//for(new num; num < 10; num++) SendDeathMessageToPlayer(m,6000,5005, 255);
}
stock IsASymbol(text[], first, end) {
	if(first < 0) first = 0;
	if(end >= strlen(text)) end = strlen(text) - 1;
	for(new i = first; i <= end; i ++) return true;
	return false;
}
CB: OnCheatDetected(playerid, const ip_address[], type, code) {
	if(PlayerInfo[playerid][pAdmin]) return 1;
	if(playerid != INVALID_PLAYER_ID && AntiCheat[code][acValue] == 1) {
		switch(code) {
			case 2: {
				if(TI[playerid][tSelectSkin]) return 1;
			}
			case 5, 11, 14, 32, 39: return true;
			case 38: {
				ErrorMessage(playerid, "Увага!"W" У Вас слабке інтернет з'єднання");
				ErrorMessage(playerid, "Для більш комфортної гри необхідно оптимізувати роботу мережевого экрана PC/MOBILE");
				ErrorMessage(playerid, "А також, рекомендуємо вам провірити пристрій на наявність шкідливих ПО");
				return true;
			}
			case 12: return SetPlayerHealth(playerid, GetPlayerHP(playerid));
			case 13: return SetPlayerArmour(playerid, GetPlayerARM(playerid));
			case 15..17: DelGun(playerid);
			case 40: {
				ErrorMessage(playerid, MAX_CONNECTS_MSG);
				AntiCheatKickWithDesync(playerid, 40);
				return true;
			}
			case 41: {
				ErrorMessage(playerid, UNKNOWN_CLIENT_MSG);
				AntiCheatKickWithDesync(playerid, 41);
				return true;
			}
			case 43..47: {
				DelGun(playerid);
				Kick(playerid);
				return true;
			}
			case 30: {
				PlayerSpawn(playerid);
				return true;
			}
		}
		new acHour, acMin, acSec ,string[768];
		gettime(acHour, acMin, acSec);
		
		strcat(string, ""NO"Ви были отсоединены от сервера Анти-Чит системой.\n\n\
"W"Не исключено, что это могло произойти по ошибке, в таком случае, приносим свои извинения.\n");
		strcat(string, "Ви можете помочь нам в улучшении Анти-Чит системы, для этого сделайте скриншот экрана {9ACD32}(F8)\n\
"W"И отправьте его на наш форум в {9ACD32}Технический раздел > Ошибочные срабатывания анти-чита.\n\n\
{CECECE}Ниже приведены данные, полученные от Анти-Чит системы:\n");
		format(string,sizeof(string),"%sНик-Нейм: {9ACD32}%s\n\
{CECECE}Идентификатор: {9ACD32}#%03i | %s\n\
{CECECE}Задержка: {9ACD32}%i мс.\n\
{CECECE}Время на момент срабатывания: {9ACD32}%02d:%02d:%02d\n\n\
\t{FF6347}Напоминаем, что использование чит-программ наказывается блокировкой аккаунта!",string,player_name[playerid],code,AntiCheat[code][acName],GetPlayerPing(playerid),acHour, acMin, acSec);
		D(playerid, DIALOG_NONE, DSM, ""YELLOW"Уведомление системы безопасности", string, "Закрити", "");

		format(string, 144, "[ANTICHEAT] %s был кикнут %s (#%d)", player_name[playerid],AntiCheat[code][acName],code);
		AdmMSG(COLOR_GREY, string,2);
		//
		AntiCheatKickWithDesync(playerid, code);
	}
	else if(playerid != INVALID_PLAYER_ID && AntiCheat[code][acValue] == 2) AddCheater(playerid);
	return true;
}
stock UpdateBuildText(b_id) {
	new font_face[12];
	switch(BildInfo[b_id][bFontFace]) {
	    case 0: font_face = "Arial";
	    case 1: font_face = "Calibri";
	    case 2: font_face = "Tahoma";
	    case 3: font_face = "Verdana";
	}
 	new text[144+16];
	if(!BildInfo[b_id][bOwned]) {
		text = "{000000}Рекламне місце вільне";
		BildInfo[b_id][bAligment] = 1, BildInfo[b_id][bFontSize]=25, BildInfo[b_id][bBackColor] = 1;
	}
	else format(text,144+16,"{000000}%s",BildInfo[b_id][bText]);
	return SetDynamicObjectMaterialText(BildInfo[b_id][bObjectID], 0,text, 130, font_face, BildInfo[b_id][bFontSize], 0, 0xFF000000,Colors_BIG[BildInfo[b_id][bBackColor]], BildInfo[b_id][bAligment]);
}
stock ShowPlayerEditMenu(playerid) {
	new string[400] = ""YELLOW"№ Параметр\t"YELLOW"Значение\n", str[64], p_var = GetPVarInt(playerid,"SelectBildID"), font_face[12], aligment_name[18];
	BildIntro(playerid, p_var, -13);
	switch(BildInfo[p_var][bFontFace]) {
	    case 0: font_face = "Arial";
	    case 1: font_face = "Calibri";
	    case 2: font_face = "Tahoma";
	    case 3: font_face = "Verdana";
	}
	switch(BildInfo[p_var][bAligment]) {
	    case 0: aligment_name = "По левому краю";
	    case 1: aligment_name = "По центру";
	    case 2: aligment_name = "По правому краю";
	}
	strcat(string,"\n"YELLOW"1."W" Текст\t{f6f6d9}Змінити");
	format(str,64,"\n"YELLOW"2."W" Колір фона\t{%s}Фон",Colors_LOW[BildInfo[p_var][bBackColor]]), strcat(string,str);
	format(str,64,"\n"YELLOW"3."W" Шрифт текста\t%s",font_face), strcat(string,str);
	format(str,64,"\n"YELLOW"4."W" Розмір текста\t%i",BildInfo[p_var][bFontSize]), strcat(string,str);
	format(str,64,"\n"YELLOW"5."W" Выравнивание текста\t%s",aligment_name), strcat(string,str);
	strcat(string,"\n"YELLOW"6."W" Розірвати договір оренди");
	return D(playerid,D_BILL_SETTING,DSTH,""YELLOW"Настройка реклами",string,"Вибрати","Закрити");
}
stock BildIntro(playerid, b_id, c_dist) {
	new Float: x = BildInfo[b_id][bPos][0], Float: y = BildInfo[b_id][bPos][1];
    GetXYInFront(x, y, BildInfo[b_id][bPos][3], c_dist);
    TogglePlayerControllable(playerid, false);
	SetPlayerPosAC(playerid, x, y, BildInfo[b_id][bPos][2],TI[playerid][tVirtualWorld], TI[playerid][tInterior],true);
    SetPlayerCameraPos(playerid, x, y, BildInfo[b_id][bPos][2]);
    SetPlayerCameraLookAt(playerid, BildInfo[b_id][bPos][0], BildInfo[b_id][bPos][1], BildInfo[b_id][bPos][2]);
    return SetPlayerInterior(playerid, 0), true;
}
stock BildExit(playerid) {
	SetPlayerInterior(playerid,1);
	SetPlayerPosAC(playerid, GetPVarFloat(playerid,"bild_x"),GetPVarFloat(playerid,"bild_y"),GetPVarFloat(playerid,"bild_z"),TI[playerid][tVirtualWorld], TI[playerid][tInterior]);
	SetCameraBehindPlayer(playerid), TogglePlayerControllable(playerid, 1);
    return true;
}
stock GetXYInFront(&Float:x, &Float:y, Float:angle, Float:distance) {
    x += (distance * floatsin(-angle, degrees));
    y += (distance * floatcos(-angle, degrees));
}
CB: OnCheckStatsAdmin(playerid, name[]) {
	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid, "Адміністратор не знайдений");
    new string[150], string2[250],stringer[1512];
    new check_online_monday, check_online_tuesday, check_online_wednesday,
		check_online_thursday, check_online_friday, check_online_saturday,
		check_online_sunday, check_online_allday,
		check_kicked, check_warned, check_baned, check_muted,
		check_jail,check_rep,check_pm;

	cache_get_value_name_int(0, "online_monday",check_online_monday);
	cache_get_value_name_int(0, "online_tuesday",check_online_tuesday);
	cache_get_value_name_int(0, "online_wednesday",check_online_wednesday);
	cache_get_value_name_int(0, "online_thursday",check_online_thursday);
	cache_get_value_name_int(0, "online_friday",check_online_friday);
	cache_get_value_name_int(0, "online_saturday",check_online_saturday);
	cache_get_value_name_int(0, "online_sunday",check_online_sunday);

	cache_get_value_name_int(0, "kick",check_kicked);
	cache_get_value_name_int(0, "ban",check_baned);
	cache_get_value_name_int(0, "warn",check_warned);
	cache_get_value_name_int(0, "mute",check_muted);
	cache_get_value_name_int(0, "pm",check_pm);
	cache_get_value_name_int(0, "jail",check_jail);
	cache_get_value_name_int(0, "rep",check_rep);

    strcat(stringer, "{FFA200}Тижневий онлайн\n\n");
    format(string, sizeof(string), ""W"Понеділок:\t\t"YELLOW"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_monday), (check_online_monday/3600>=3)?("{46CA00}Виконана"):(check_online_monday/3600>=2)?("{FFCC00}Не виконана"):("{F63D00}Не виконана"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Вівторок\t\t"YELLOW"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_tuesday),  (check_online_tuesday/3600>=3)?("{46CA00}Виконана"):(check_online_tuesday/3600>=2)?("{FFCC00}Не виконана"):("{F63D00}Не виконана"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Середа\t\t\t"YELLOW"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_wednesday),  (check_online_wednesday/3600>=3)?("{46CA00}Виконана"):(check_online_wednesday/3600>=2)?("{FFCC00}Не виконана"):("{F63D00}Не виконана"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Четвер\t\t"YELLOW"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_thursday),  (check_online_thursday/3600>=3)?("{46CA00}Виконана"):(check_online_thursday/3600>=2)?("{FFCC00}Не виконана"):("{F63D00}Не виконана"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"П'ятниця\t\t"YELLOW"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_friday),  (check_online_friday/3600>=3)?("{46CA00}Виконана"):(check_online_friday/3600>=2)?("{FFCC00}Не виконана"):("{F63D00}Не виконана"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Субота\t\t"YELLOW"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_saturday),  (check_online_saturday/3600>=3)?("{46CA00}Виконана"):(check_online_saturday/3600>=2)?("{FFCC00}Не виконана"):("{F63D00}Не виконана"));
    strcat(stringer, string);
    format(string, sizeof(string), ""W"Неділя\t\t"YELLOW"%s "W"| Норма онлайна - %s\n", ConvertsCmdTime(check_online_sunday),  (check_online_sunday/3600>=3)?("{46CA00}Виконана"):(check_online_sunday/3600>=2)?("{FFCC00}Не виконана"):("{F63D00}Не виконана"));
    strcat(stringer, string);

    check_online_allday = check_online_monday + check_online_tuesday + check_online_wednesday + check_online_thursday + check_online_friday + check_online_saturday + check_online_sunday;

    format(string, sizeof(string), "\n{AFAFAF}Загальний онлайн:\t"YELLOW"%s "W"| Норма онлайна - %s\n\n", ConvertsCmdTime(check_online_allday), (check_online_allday/3600>=21)?("{46CA00}Виконана"):(check_online_allday/3600>=19)?("{FFCC00}Не виконана"):("{F63D00}Не виконана"));
    strcat(stringer, string);

    strcat(stringer, "{FFA200} Видача покарань\n\n");
    format(string2, sizeof(string2), ""W"Кікнув:\t\t\t\t"YELLOW"%i\n", check_kicked);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Заварнив:\t\t\t\t"YELLOW"%i\n", check_warned);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Забанив:\t\t\t\t"YELLOW"%i\n", check_baned);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Prison:\t\t\t\t\t"YELLOW"%i\n", check_jail);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Замутив:\t\t\t\t"YELLOW"%i\n", check_muted);
    strcat(stringer, string2);
    format(string2, sizeof(string2), ""W"Репорти:\t\t\t\t"YELLOW"%i\n", check_pm);
    strcat(stringer, string2);
	format(string2, sizeof(string2), ""W"РЕПУТАЦІЯ:\t\t\t\t"YELLOW"%i", check_rep);
    strcat(stringer, string2);

    D(playerid, DIALOG_NONE, DSM, name, stringer, "Закрити", "");
	return 1;
}
stock getDayEx() {
    new hour, minuite, second, year, month, day, w = gettime(), saturday = 1310155200, day_week;
    gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24) {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	return day_week;
}
CB: SetCameraBehindPlayerDelay(playerid) SetCameraBehindPlayer(playerid);
CB: SaveQuests(playerid,id) {
	new query[356];
	format(query, sizeof(query), "UPDATE `questsprogress` SET `progress`='%d' WHERE `idquest`='%d' AND `name`='%s';", QuestProgress[playerid][id], id, player_name[playerid]);
	mysql_tquery(connects, query);
	return 1;
}
stock dialog_anticheat(playerid) {
	new string[2512] = "Код\tНазва\tСтан\n";
	new str[3][50] = {""NO"Відключений"W"",""GREEN"Кік"W"",""BLUE"Попередження"W""};
	for(new i; i<53; i++) {
		format(string,sizeof(string),"%s%d\t%s\t%s\n",string,AntiCheat[i][acID],AntiCheat[i][acName],str[AntiCheat[i][acValue]]);
	}
	return D(playerid,D_ANTICHEAT,DSTH,""YELLOW"Античит",string,"Вибрати","Закрити");
}
stock AtachPlayerAcces(playerid, setobject,skinid) {
    switch(setobject) {
    	case 19035,19034,19033,19032,19031,19030,19029,19028,19027,19026,19025,19024,19023,19022,19021,19020,19019,19018,19017,19016,19015,19014,19013,19012,19011,19010,19009,19008,19007,19006: {
    	    if(PlayerInfo[playerid][pSlotItem_Use][1] == 1) {
	    		switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
					case 2: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
					case 4: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
					case 5: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
					case 6: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
					case 7: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 8: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 9: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 10: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 11: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 12: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 13: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 14: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 15: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 17: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 19: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 20: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 21: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 22: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 23: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 24: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
					case 25: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 26: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 27: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 28: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 29: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 31: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 39: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 40: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 41: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 42: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 44: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
					case 46: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 49: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 50: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 54: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 58: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
					case 59: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
					case 60: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
					case 61: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
					case 66: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 67: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 68: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 69: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 70: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 71: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 72: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 73: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 76: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
					case 78: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 79: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 83: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 90: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 91: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 93: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
					case 94: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
					case 95: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
					case 96: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
					case 97: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
					case 98: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 101: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 102: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 103: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
					case 105: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
					case 106: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
					case 107: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
					case 108: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
					case 109: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
					case 110: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
					case 111: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
					case 112: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
					case 113: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
					case 117: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
					case 118: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
					case 119: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
					case 120: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
					case 121: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
					case 122: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
					case 124: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
					case 125: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
					case 126: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 127: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 128: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 134: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
					case 135: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
					case 136: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
					case 142: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
					case 147: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
					case 148: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
					case 150: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
					case 153: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
					case 154: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
					case 155: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
					case 160: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
					case 163: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
					case 164: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
					case 165: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
					case 166: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
					case 169: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
					case 170: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
					case 171: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
					case 172: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
					case 176: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 177: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 179: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 180: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 181: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 182: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 183: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 184: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
					case 186: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
					case 187: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
					case 188: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
					case 189: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 190: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 191: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 192: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 193: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 194: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 195: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
					case 200: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
					case 202: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 206: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 210: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 211: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 212: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
					case 213: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 214: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 216: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 217: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 219: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 220: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 221: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
					case 222: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
					case 223: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 224: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 225: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 226: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 227: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 228: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 229: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
					case 230: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
					case 233: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
					case 235: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
					case 236: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
					case 239: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
					case 240: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
					case 247: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
					case 248: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
					case 250: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
					case 252: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
					case 254: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
					case 255: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
					case 258: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
					case 259: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
					case 261: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
					case 262: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
					case 265: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
					case 266: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
					case 267: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 270: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 272: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 273: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 274: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 275: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 276: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
					case 280: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 281: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 282: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 283: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 286: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 287: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 288: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 291: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 292: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
					case 293: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
					case 295: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
					case 296: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
					case 297: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 299: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 306: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 307: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 308: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 309: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 1, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					default: ErrorMessage(playerid,"Аксесуар очки, не відображатиметься на цьому скіні");
				}
			}
		}
		case 19069,19067,19068: {
		    if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
	    			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.000000,1.000000,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.033000,1.000000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,0.000998, 0.000000,90.000000,95.899993, 1.000000,1.000000,1.000000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.000999,0.000998, 0.000000,90.000000,95.899993, 1.175000,1.000000,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.006999,0.000998, 0.000000,90.000000,95.899993, 1.092000,1.000000,1.000000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,-0.006000,0.000998, 0.000000,90.000000,95.899993, 1.137000,1.050999,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.013999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 0.987000,1.091999,0.866999);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.122000,1.091999,0.866999);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.021000,0.001998, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130997,0.017000,-0.003001, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
					case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.074997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.027000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.009000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.002999,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.024000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.035999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.014999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.002999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.012999,0.008999, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
					case 63: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
					case 64: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.025999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.024999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.004000,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.019999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
					case 75: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.003000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.034000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
					case 85: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016000,-0.010001, 0.000000,90.000000,95.400001, 1.151999,1.240999,1.000000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.027000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.001999,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,-0.003999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.011999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.032000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.002000,0.002999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.012000,0.003999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.019000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.010000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.000000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.026000,-0.010001, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
					case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
					case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.065998,0.019000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
					case 132: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.035998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
					case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
					case 144: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.007999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.004999,0.010999, 0.000000,90.000000,95.400001, 1.176999,1.087000,1.000000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.009000,0.000999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.002999,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.007999,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.011000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.008000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,-0.009999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.026000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.014000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,-0.006999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.001000,0.002998, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001000,-0.001001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.004000,-0.009001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.011000,-0.004000, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.015000,0.000999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.015000,0.000999, 0.000000,90.000000,96.400009, 1.231999,1.000000,1.000000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.005000,0.000999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.076998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.010000,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.010000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,0.022000,-0.003000, 0.000000,90.000000,96.400009, 0.964999,1.000000,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.009999,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
					case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.004000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.004000,-0.005000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.004000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.003000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.013000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005999,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
					default: ErrorMessage(playerid,"Аксесуар шапка, не відображатиметься на цьому скіні");
				}
			}
		}
		case 18953,18954: {
		    if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
	    			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.002001, 0.000000,-0.799996,-8.600006, 1.000000,1.000000,1.050999);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,0.008999, 2.000010,-5.999990,5.400008, 1.000000,1.042000,1.079000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.032000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.007000,-0.002001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.032000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098997,0.008000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.020000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.016000,0.003998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.004000,0.000998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.014000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.023000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.005000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.063998,0.015000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.027000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.909000,1.206000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.005000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.974000,1.206000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.040000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.017000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.004000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.020000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.025000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,0.014000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,0.006000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.006000,-0.004000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.025000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.030000,-0.000000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.001000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.010000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.029000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.018000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.005000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.005000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.013000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.014000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.025000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.000999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.024000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.003999,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.017000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104998,0.018000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.018000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.000000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.005000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.011000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.003000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 190: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.020000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.012000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,0.004000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.010000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.015000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.012999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.017999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.014000,0.001999, 2.000010,2.000011,-26.199983, 1.000000,0.970000,1.166000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.003000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.029000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.023000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.132000,1.166000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.011000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,-0.002999,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.015000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 243: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.091998,0.023000,0.001998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.023000,-0.004001, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.005000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.019000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.010000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.027000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.015000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.013000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,0.002998, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
					case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.007999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.021000,-0.003001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.030000,-0.003001, 0.000000,0.899997,-23.200000, 1.000000,1.075999,1.131999);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.131999);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
					default: ErrorMessage(playerid,"Аксесуар шапка, не відображатиметься на цьому скіні");
				}
			}
		}
		case 19554: {
		    if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
	    			case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.009999,0.001998, 0.400000,-3.699999,12.699994, 1.114999,1.000000,1.238999);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.013000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.025000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.007999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.000000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.025000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.011999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,-0.025000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153997,0.005000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,-0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165997,-0.014999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.010000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,0.004000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.011000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.005000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.018999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108997,-0.009000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108997,0.011999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,-0.008000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.006999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.014000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,-0.010000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,-0.020000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.000999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.311000,1.367000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.017999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.010000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.007999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.016000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.001000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.015000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.023000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.001999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.005000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,0.012999,-0.002001, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.108000,1.314000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,0.987000,1.314000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.007999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,-0.000000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.002000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.002000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.008999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.010000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.019000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.371001,1.374000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,-0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170997,-0.023000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.009999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.018000,1.294000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.008999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.005999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.014000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.000999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.005000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.006999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.001999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,0.010999,-0.002001, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.006000,0.000998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.007000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,0.019999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153997,0.012999,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,-0.020000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.018999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.128001,1.429999);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.288001,1.429999);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,-0.005000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,-0.015000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,-0.007000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,-0.002000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,0.004999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.004999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.000000,-0.004001, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 268: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,-0.001999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.004999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.011000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159997,0.010000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.278001,1.319999);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.137000);
					case 293: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.216000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,0.008000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.216000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.295000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.006999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.012000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.001000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.000000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
					default: ErrorMessage(playerid,"Аксесуар шапка, не відображатиметься на цьому скіні");
				}
			}
		}
		case 18947,18948,18949,18950,18951: {
			if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
				switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.014000,-0.008000, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.126000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,13.600016, 1.000000,1.000000,1.000000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.001000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.008000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.007000,0.003998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.027000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.001000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.005000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.015000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.006999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.024000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.037000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.008999,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.013000,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.028000,0.000998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.196998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,0.002999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.180998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.011000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.000000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.003999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.016000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.023000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.010999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.005000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.007999,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.022000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.007000,-0.005001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.008999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.005000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.004999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.009000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.001000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.005999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,0.017000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.012999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.003000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.188998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.800999,0.970000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
					default: ErrorMessage(playerid,"Аксесуар шляпа, не відображатиметься на цьому скіні");
				}
			}
		}
		case 18933,18932,18928,18942,18943,18940,18929,18926: {
			if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
				switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.000000,1.072000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.020000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.015001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.002000,-0.019001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.022000,-0.007000, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.014000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.016001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
					case 24: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012999,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,1.120000,1.075000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.000999,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.011000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.024000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,-0.004000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.010001, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,-0.010000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.031000,-0.022001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.003999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.014999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.033000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.033000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177997,0.000999,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.013000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,0.982000,1.019999);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.013000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.001000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,0.005999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,1.005999,1.019999);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.003999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,0.007999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,-0.023000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.012999,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,-0.026000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.186997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,-0.027000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140997,-0.004000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,0.003999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.028000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.028000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,-0.021000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.002000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.009000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,-0.005000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,-0.005000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,0.971000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.016000,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125997,0.005999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150997,-0.022000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133997,-0.018000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156997,-0.018000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167997,-0.018000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.024000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151997,-0.010000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,0.019999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 138: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 139: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 141: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 145: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.033000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.178997,-0.028000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179997,-0.042000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114997,0.002999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152997,-0.001000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,-0.001000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.000999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145997,-0.009000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163997,-0.025000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.016000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,-0.029000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.016000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.021000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.128000,1.059000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,-0.006000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.068999,1.009000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.016000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.022000,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.001000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.016000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.028000,-0.016001, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.037000,-0.020000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.023000,-0.017000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.033000,-0.019000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
					case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.041000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.023000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.002000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101998,-0.004000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.002999,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.033000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.025000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.019000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,-0.045000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.039000,-0.006000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.041000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.010999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.114998,-0.015000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.012999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.003000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.006000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.009000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.011000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,-0.004000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
					case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.009000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.068999);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.011000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.101999,1.106000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.187998,-0.023000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.183000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.010000,-0.020000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
					case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.013000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.029000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.019000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.030000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,-0.004000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.016000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.021000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,1.033999,1.004000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.027000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.012000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.006000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.011000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.013000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.021000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.019000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.176998,-0.031000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.015000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,-0.028000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.032000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.072000,-0.016000, -175.400024,173.999984,139.900024, 1.074999,0.970999,1.044000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.020000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.005000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.001999,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 307: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.028000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
					default:ErrorMessage(playerid,"Аксесуар кепка, не відображатиметься на цьому скіні!");
				}
			}
		}
		case 18955,18956,18957,18959: {
			if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
				switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105997,0.034000,0.000998, 6.799999,90.000000,97.500000, 0.925999,1.092999,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124997,0.034000,-0.005001, 8.500000,89.899986,76.199981, 1.024999,1.115999,1.000000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.045000,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.028999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.015999,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.037000,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,-0.001999,-0.005001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,-0.002001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.085997,0.019000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.014000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.027000,-0.004001, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.027000,0.004998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.002001, 8.500000,89.899986,81.099990, 1.047000,1.030999,1.000000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.029000,-0.007001, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
					case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.082997,0.023000,-0.004000, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.101997,0.023000,-0.003001, 8.500000,89.899986,81.099990, 1.047000,1.156999,1.000000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.058998,0.026000,-0.009001, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.036000,0.002998, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.027000,-0.003001, 8.500000,89.899986,81.099990, 0.988000,1.017999,1.000000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.045999,-0.003001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.035000,-0.006001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.018000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.046000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097997,0.056999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109997,0.010999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144997,0.037999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.017999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.026999,-0.004001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.026999,-0.005001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.037999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.033999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.025999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.040999,0.006998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.040999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.018999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.035999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.013999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
					case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.097998,0.049999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
					case 89: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.007999,-0.001001, 8.500000,89.899986,81.099990, 1.002000,1.065999,1.000000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.027999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.022999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 93: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.093998,0.009999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.031999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,0.028999,0.001998, 8.500000,89.899986,81.099990, 1.042000,1.123999,1.000000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.044999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.033999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.028999,0.004999, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.019999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.023999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.037999,-0.004000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.031999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.030999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.029999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.029999,-0.005000, 8.500000,89.899986,81.099990, 1.042000,1.059999,1.000000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.032999,-0.005000, 8.500000,89.899986,81.099990, 0.935000,1.012999,1.000000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.005000, 8.500000,89.899986,81.099990, 0.980000,1.012999,1.000000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.016000,0.004999, 0.000000,90.000000,115.000000, 1.000000,1.000000,1.000000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.024000,-0.005001, 0.000000,90.000000,115.000000, 1.057999,1.191999,1.000000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.030000,-0.001000, 0.000000,90.000000,93.100013, 1.057999,1.102999,1.000000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.034000,-0.001000, 0.000000,90.000000,93.100013, 0.913999,1.102999,1.000000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,-0.001000, 0.000000,90.000000,93.100013, 0.970999,1.102999,1.000000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.027000,0.000999, 0.000000,90.000000,93.100013, 1.066999,1.102999,1.000000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.046000,-0.008000, 0.000000,90.000000,93.100013, 1.099999,1.102999,1.000000);
					case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.105998,0.028000,0.000999, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
					case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.078998,0.028000,-0.004000, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.000000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
					case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.013000,-0.000000, 0.000000,90.000000,93.100013, 0.913999,0.943999,1.000000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 152: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103997,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166997,0.001000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.021000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100997,0.027000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120997,0.031000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.022000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141997,-0.002999,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.025000,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139997,0.016000,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132997,0.016000,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149997,0.016000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154997,0.021999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123997,0.021999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.013999,-0.009000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.025999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.025999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.104997,0.024000,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137997,0.018999,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.012999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155997,0.018999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.021999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.044999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.083997,0.033999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.043999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084997,0.027999,0.002999, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
					case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.019999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.031999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.015999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.004999,0.000999, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147997,0.034000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.014000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129997,0.048000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128997,0.034000,-0.000000, 0.000000,90.000000,93.100013, 1.076999,1.121999,1.024999);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094997,0.019000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.099997,0.005000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.073998,0.020000,-0.001001, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.084998,0.032999,0.000998, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.031999,-0.000001, 0.000000,90.000000,101.900001, 1.059000,1.115999,1.000000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.020999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122997,0.027999,-0.004001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118997,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.026999,0.007998, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116997,0.031999,0.002998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112997,0.025999,0.003998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.041999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,-0.002001, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110997,0.020999,0.000998, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136997,0.020999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096997,0.025999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.024999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.034999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119997,0.024999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.032999,-0.001001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.090997,0.028999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.028999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126997,0.023999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.005999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.015999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.035999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.024999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107997,0.027999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
					default:ErrorMessage(playerid,"Аксесуар кепка, не відображатиметься на цьому скіні!");
				}
			}
		}
		case 19161, 19162: {
			if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
				switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998, -0.004, -0.001001, 0, 0.600003, -6.399982, 1, 1, 1,069000);
					default:ErrorMessage(playerid,"Аксесуар кепка, не відображатиметься на цьому скіні!");
				}
			}
		}
		case 18924,18925,18921,18923,18922: {
		    if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
			    	case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.000999,-0.010001, 0.199998,-5.700015,-8.800018, 1.000000,1.000000,1.085000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.000000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.005000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.015000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.011999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,-0.021999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.002000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.006000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.016999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.092998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,0.015000,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,0.947999,1.029000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.120998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.008000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.006000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.123000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.011999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.200000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.012000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.017000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,-0.011999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,0.004000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.005999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.002000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.004999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.008000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,0.001000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.013000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.006999,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.012000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.005999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.014999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.015000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.003999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002000,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.002999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.000000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.014999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.010999,-0.000001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.008001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.001999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003999,-0.006001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.018000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.020999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 150: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.027999,1.079000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.013999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.208999,1.217000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.002000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.005999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,0.001000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.013999,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.002000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.012999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,-0.012999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.004999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.010999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.005999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.010999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.002999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.003999,0.001999, 0.199998,-5.700015,-8.800018, 1.074000,0.936999,0.979000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,0.003000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,-0.001999,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.136998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.177998,-0.007999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,-0.019999,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.012000,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,-0.015999,-0.000000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.012000,-0.002000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.000000,-0.005000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.006999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.005999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.005000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.012000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.001999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.007000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.017999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.181998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.153998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,-0.007999,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
					default: ErrorMessage(playerid,"Аксесуар берет, не відображатиметься на цьому скіні");
				}
		    }
		}
		case 18968,18967,18969: {
		    if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
			    switch(skinid) {
			    	case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,-0.005001, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.007999,0.001998, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.015000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.004999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,0.018000,-0.000001, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,0.012000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127997,-0.000000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.027000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,-0.013000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.002998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.009999,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.138998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.014000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.003000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.081998,0.017999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.029000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.098998,0.008999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.037999,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.023000,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.004999,-0.005000, 0.000000,90.000000,93.699989, 1.078999,1.138000,1.000000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.043999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.031999,-0.004000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.017999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 62: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.026999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.014999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.008999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.002999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.006999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.006999,0.006999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.182998,0.025999,0.003999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.011999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 88: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.032999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.010999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.005999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 94: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.079998,0.022999,0.001999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.001999,0.001999, 0.199999,91.999984,90.599967, 0.934999,0.991000,1.000000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.015999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.035999,-0.003000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.015999,-0.005000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.006001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.001000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.118998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.020999,-0.002000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,0.003999, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,0.033999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 129: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 130: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.069998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 131: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 146: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.107998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.171998,-0.002000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 157: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.112998,-0.001000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.127998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 177: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,0.009999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 195: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 196: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.096998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 199: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.108998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.142998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 202: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.094998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 211: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.113998,0.021999,-0.000000, 0.199999,91.999984,90.599967, 0.855999,1.005000,1.000000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.129998,0.018999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 216: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 218: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 219: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,0.008999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.179998,0.021999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 224: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.004000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 225: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.009000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,0.022999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.012999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.116998,0.000999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 230: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.102998,0.015999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 233: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.100998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.080998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.103998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 237: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.002999,1.090000,1.000000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.001998, 0.000000,90.000000,82.699989, 1.000000,1.057000,1.000000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 251: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.122998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.088998,0.030000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 263: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,0.004999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.008999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.007999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.014999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115998,0.011999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.111998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.167998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.003000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.160998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.172998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 306: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 308: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 309: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
					default: ErrorMessage(playerid,"Аксесуар панамка, не відображатиметься на цьому скіні");
				}
		    }
		}
		case 18911,18912,18913,18914,18915,18916,18917,18918,18919: {
			if(PlayerInfo[playerid][pSlotItem_Use][3] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093999,0.018000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
					case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.029000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
					case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104999,0.024000,0.001999, -86.200012,-1.500002,-96.000038, 1.083999,1.000000,1.107000);
					case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.131999,0.012999,0.001999, -84.100021,5.999998,-96.600036, 1.268999,1.000000,1.107000);
					case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.106999,0.023999,0.001999, -84.100021,5.999998,-96.600036, 1.354999,1.000000,1.107000);
					case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.006999,0.001999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.028999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.020999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.024999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.009999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.014999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.083999,0.030999,0.000999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
					case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,-0.004000,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
					case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.018999,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
					case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.014999,-0.004000, -87.500000,2.199998,-95.200027, 1.123999,1.000000,1.032000);
					case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.007999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.005999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.023999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.027999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
					case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.003999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.032000);
					case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.008999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
					case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
					case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
					case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.025999,-0.006000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
					case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.034999,0.000999, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
					case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.019999,-0.007000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
					case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.022999,-0.006000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
					case 32: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.008000,-0.003000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.975000);
					case 33: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.013999,0.009999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 35: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 36: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 37: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 38: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.032999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.018999,-0.002000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
					case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.056999,0.006999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.975000);
					case 43: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.012999,0.014999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
					case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.034999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
					case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.031999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.934000);
					case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.033000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
					case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
					case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.018000,-0.004000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.102000);
					case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.014000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
					case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086999,0.024000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
					case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.004000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
					case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.017000,-0.001000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
					case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.006000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
					case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.011000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
					case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.015000,-0.000000, -87.500000,16.199996,-95.200027, 1.069999,1.000000,0.930000);
					case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.022000,-0.000000, -87.500000,16.199996,-95.200027, 0.967999,1.000000,0.930000);
					case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.048999,0.024000,0.000999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.930000);
					case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.021000,0.002999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,1.000000);
					case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
					case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
					case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.022000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 84: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.018000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008000,-0.002000, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
					case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.017999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.020000);
					case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
					case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.047999,0.018999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
					case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
					case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.021999,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
					case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,0.965000);
					case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.035000,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
					case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.022999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
					case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
					case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 1.043999,1.000000,1.048000);
					case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 104: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
					case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.984000);
					case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.917000);
					case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.031999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.008000);
					case 114: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.027999,-0.005000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 115: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.024999,-0.004000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 116: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.024999,-0.007000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
					case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
					case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.003000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
					case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
					case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
					case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.117999,1.000000,1.177000);
					case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,1.177000);
					case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
					case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
					case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.024999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
					case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.035999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
					case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 0.912999,1.000000,0.925000);
					case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.023999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
					case 137: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.002000,-0.004000, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
					case 141: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.035999,0.020999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
					case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.997999,1.000000,1.059000);
					case 143: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.057999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064999,0.009999,0.005999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 152: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
					case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.062999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
					case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,-0.002000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
					case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.023999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.068000);
					case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.024999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.031999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
					case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.018999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.045000);
					case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.065999,0.012999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.039999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 173: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.030999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 174: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 175: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
					case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.098999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.040999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.009999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.026999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
					case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.013999,0.007999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.025999,0.002999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.016999,-0.001000, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
					case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.066999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 203: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 204: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.082000,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
					case 208: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.892999,1.000000,1.014000);
					case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
					case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.045999,0.026999,-0.002000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
					case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.024999,-0.003000, -87.500000,16.199996,-95.200027, 0.859000,1.000000,0.883000);
					case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.072999,0.038999,-0.003000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,0.883000);
					case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.043999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.060999,1.000000,0.894000);
					case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.068999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,0.894000);
					case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.015000,0.029999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
					case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
					case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
					case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.205000);
					case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.021999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
					case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.075999,0.030999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
					case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.059999,0.010999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,0.965000);
					case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,0.018999,0.000000, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.965000);
					case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.051999,-0.004000,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.030999,0.003999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.028999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 237: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.050999,0.009999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081999,0.015999,0.009000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
					case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.067999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 249: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.058999,0.023999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.055999,0.019999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071999,0.020999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.003999,0.005000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
					case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
					case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
					case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.041999,0.014999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.052999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,-0.000000,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.008999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 269: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 271: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
					case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.019999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
					case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
					case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
					case 284: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.024999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
					case 285: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.016999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
					case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,-0.001000,-0.002999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
					case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.010999,0.008000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
					case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,-0.000999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 289: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.005999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 290: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.013999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.027999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.053999,0.007999,-0.003999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.069999,0.011999,-0.006999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 294: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.012999,0.003000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.020999,0.001000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.020999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
					case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
					case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
					case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.078999,0.017999,0.003000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
					case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
					case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,0.001000, -87.500000,16.199996,-95.200027, 1.059998,1.000000,1.062000);
					case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
					case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
					case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
					case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
					case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
					default:ErrorMessage(playerid,"Аксесуар бандана, не відображатиметься на цьому скіні");
				}
			}
		}
		case 19101..19120: {
			if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.007000,0.012999, 0.000000,173.499969,-154.900054, 1.151999,1.000000,1.145000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.183998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.026000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.013000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.003000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.119998,-0.026000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,0.002999,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.156998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.004999,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 39: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.095998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.121998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.123998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.019999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.143998,-0.007999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 50: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.128998,-0.020000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.173998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.007999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.010000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 78: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 79: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.137998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.012000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,0.001999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.003000,-0.009001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 124: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.175998,0.002999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.124998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.196000,1.089999,1.130000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.162998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.163998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.007000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.147998,-0.024000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.007000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.007000,0.002998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.012000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.151998,-0.019999,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,0.013000,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.145998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.139998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.117998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.132998,-0.007999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.155998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.152998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.169998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.157998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.166998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.149998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.158998,-0.019999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.164998,0.001000,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.140998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.168998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.134998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.008999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.154998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.161998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.197998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.332000,1.058999,1.191000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.133998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.00001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
					default:ErrorMessage(playerid,"Аксесуар каска, не відображатиметься на цьому скіні");
				}
			}
		}
		case 19036,19037,19038: {
			if(PlayerInfo[playerid][pSlotItem_Use][3] == 1) {
		    	switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
					case 2: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
					case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
					case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
					case 6: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
					case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 8: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 10: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 11: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 12: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 13: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
					case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 19: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 22: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 23: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
					case 24: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
					case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 27: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 28: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 29: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 31: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 39: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 40: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 41: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 42: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
					case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
					case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 49: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 50: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 54: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
					case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
					case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
					case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
					case 61: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
					case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 67: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 71: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 72: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 73: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
					case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
					case 78: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 79: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 83: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
					case 90: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 93: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
					case 94: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
					case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
					case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
					case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
					case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 102: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
					case 103: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
					case 105: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
					case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
					case 107: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
					case 108: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
					case 109: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
					case 110: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
					case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
					case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
					case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
					case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
					case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
					case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
					case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
					case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
					case 122: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
					case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
					case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
					case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 128: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
					case 134: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
					case 135: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
					case 136: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
					case 142: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
					case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
					case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
					case 150: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
					case 153: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
					case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
					case 155: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
					case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
					case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
					case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
					case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
					case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
					case 169: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
					case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
					case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
					case 172: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
					case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 177: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
					case 181: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
					case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
					case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
					case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
					case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
					case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 190: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 193: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 194: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
					case 195: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
					case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
					case 202: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 211: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
					case 212: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
					case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 214: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 216: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 219: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 220: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
					case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
					case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
					case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 224: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 225: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 226: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
					case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
					case 230: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
					case 233: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
					case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
					case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
					case 239: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
					case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
					case 247: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
					case 248: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
					case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
					case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
					case 254: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
					case 255: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
					case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
					case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
					case 261: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
					case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
					case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
					case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
					case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 270: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
					case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
					case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
					case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 283: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 287: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 288: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 291: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
					case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
					case 293: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
					case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
					case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
					case 297: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 299: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 306: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 307: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 308: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 309: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
					default:ErrorMessage(playerid,"Аксесуар маска, не відображатиметься на цьому скіні");
				}
			}
		}
		case 18976: {
			if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0.042999, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.369, 1.527000);
					default:ErrorMessage(playerid,"Аксесуар спорт-шлем, не відображатиметься на цьому скіні");
				}
			}
		}
		case 18977, 18978, 18979, 18645: {
			if(PlayerInfo[playerid][pSlotItem_Use][0] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 3: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 4: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 5: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 7: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 9: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 10: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 11: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 12: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 14: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 15: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 17: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 18: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 20: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 21: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 25: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 26: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 28: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 30: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 40: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 43: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 44: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 45: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 46: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 47: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 48: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 49: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 54: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 55: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 56: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 57: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 58: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 59: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 60: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 66: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 67: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 68: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 69: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 70: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 72: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 73: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 76: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 82: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 83: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 84: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 86: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 90: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 91: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 95: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 96: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 97: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 98: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 100: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 101: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 102: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 103: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 105: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 106: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 108: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 109: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 110: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 111: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 112: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 113: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 114: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 116: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 117: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 118: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 119: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 120: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 121: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 122: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 123: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 125: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 126: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 127: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 128: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 147: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 148: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 151: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 154: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 156: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 160: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 162: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 163: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 164: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 165: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 166: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 169: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 170: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 171: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 172: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 176: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 179: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 180: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 182: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 183: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 184: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 185: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 186: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 187: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 188: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 189: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 191: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 192: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 193: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 194: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 200: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 206: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 207: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 208: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 210: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 212: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 213: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 214: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 217: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 221: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 222: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 223: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 226: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 227: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 228: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 229: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 234: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 235: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 236: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 240: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 247: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 248: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 250: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 252: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 254: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 258: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 259: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 262: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 265: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 266: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 267: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 272: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 273: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 274: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 275: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 276: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 280: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 281: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 282: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 286: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 290: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 291: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 292: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 294: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 295: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 296: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 297: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 298: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 299: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 300: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 301: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 302: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 303: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 304: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 305: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 310: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					case 311: SetPlayerAttachedObject (playerid, 0, setobject, 2, 0.089998, 0, 0.000999, -121.599906, 96.400039, -147.299835, 1.1, 1.129, 1.527000);
					default:ErrorMessage(playerid,"Аксесуар спорт-шлем, не відображатиметься на цьому скіні");
				}
			}
		}
		case 19421, 19422, 19423, 19424: {
			if(PlayerInfo[playerid][pSlotItem_Use][6] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.286000,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
					case 2: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.303999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
					case 3: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.293999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
					case 4: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
					case 5: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355999,0.071000,0.005000, -81.499992,-113.599922,94.599967, 1.099000,1.044999,1.000000);
					case 6: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.347999,0.090000,0.000000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
					case 7: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.323998,0.104999,-0.008999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
					case 8: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.301999,0.112999,0.001999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
					case 9: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.314998,0.089999,0.001999, -90.599975,-108.399971,91.199943, 1.000000,1.000000,1.000000);
					case 10: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.243998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 11: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 12: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.313999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 13: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 14: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338999,0.102000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 15: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.325999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 16: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.367999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 17: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.346999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 18: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.299998,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 19: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.354999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 20: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 21: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 22: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.357999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 23: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 24: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 25: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 26: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.349999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 27: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 28: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.343999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 30: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342999,0.102000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 33: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.294999,0.092000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 34: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 35: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 36: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 37: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 38: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 39: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 40: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.298999,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 43: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 44: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 45: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.299999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 46: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.323999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 47: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 48: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.343999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 57: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.354999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 58: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.278999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 59: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 60: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.344999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 61: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 66: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 67: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 68: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 69: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 70: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 71: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 72: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 73: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 76: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 78: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.380998,0.109999,0.003000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 79: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.364998,0.109999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 90: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 91: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 93: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 94: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 95: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.266998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 96: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.360998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 97: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.311998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 98: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318998,0.098999,0.000000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 100: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.341998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 102: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.102999,-0.008999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 105: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.366998,0.082000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
					case 106: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 107: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 108: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 109: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 110: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 111: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.360998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 112: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.309998,0.084999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 113: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.332998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 114: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 115: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 116: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 117: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 118: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 119: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 120: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 121: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 122: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 123: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 124: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 125: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 126: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 127: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.335998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 128: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.316998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 134: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.247998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 136: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.247998,0.099999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 137: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 141: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 142: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.097999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 143: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.109000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 147: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.109000,0.007000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 148: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 150: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 153: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.110000,0.008000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 154: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.312998,0.110000,-0.004999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 155: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.110000,-0.010999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 156: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.110000,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 160: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.303998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 163: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 164: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355998,0.107000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 165: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 166: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 170: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 171: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 172: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 173: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 174: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 175: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 176: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 177: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 179: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 180: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 181: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 182: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 183: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.333998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 184: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.103999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 185: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.090999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 186: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 187: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.111999,0.013000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 188: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.329998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 189: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 190: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 191: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 193: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 194: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 195: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.358998,0.101999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 200: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 202: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 206: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 208: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 210: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.256998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 211: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.330998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 212: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.252998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 217: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.327998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 219: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 220: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 221: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 222: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 223: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.092999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 227: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.361998,0.096999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 228: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 229: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.274998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
					case 230: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.301998,0.101999,-0.003999, -90.599975,-104.999977,92.599967, 1.109000,1.000000,1.000000);
					case 233: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.336998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
					case 234: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.277998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
					case 235: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.268998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
					case 236: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.274998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 239: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.387998,0.111999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 240: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.325998,0.087999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 247: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 248: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 250: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.002999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 252: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 254: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 255: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.332998,0.103999,0.009000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 258: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 259: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 261: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.276998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 262: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.317998,0.083999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 265: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.317998,0.083999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 266: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.304998,0.070999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 267: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.531998,0.082000,-0.039000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 269: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.368998,0.068000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 270: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.355998,0.091000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 271: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.339998,0.094000,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 272: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.334998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 273: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.315998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 274: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 275: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 276: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 280: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 281: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 282: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 283: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 284: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.104999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 285: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.342998,0.090999,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 286: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.337998,0.086999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 287: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.345998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 288: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.341998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
					case 289: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,-0.000999, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 290: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 291: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 292: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.328996,0.074000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 293: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 294: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 295: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 296: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.260996,0.093999,0.007001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 297: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.318996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 298: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.312996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 300: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 301: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 302: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 303: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 304: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 305: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 306: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 307: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 308: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 309: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 310: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					case 311: SetPlayerAttachedObject(playerid, 6, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
					default:ErrorMessage(playerid,"Аксесуар наушники, не відображатиметься на цьому скіні");
				}
			}
		}
		case 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053: {
			if(PlayerInfo[playerid][pSlotItem_Use][7] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.003998,-0.001999, 51.200016,53.199977,142.800018, 0.963999,0.916999,1.000000);
					case 2: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.005999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
					case 3: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.007999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
					case 4: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.012999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
					case 5: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.018998,-0.000999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
					case 8: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.003998,-0.011999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
					case 11: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 13: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 14: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 15: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.002998,-0.015999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 18: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.010998,-0.012999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 20: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
					case 21: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 23: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 24: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.009998,-0.011999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 25: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 26: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 28: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 30: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 31: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
					case 32: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,0.008001, 51.200016,70.499969,142.800018, 0.964999,0.921999,1.000000);
					case 34: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 35: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 36: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 37: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 38: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.024000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 40: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.024000,-0.003998,-0.010998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 41: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,0.001001, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 42: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.012998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 43: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 44: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 45: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.015998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 46: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.008998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 47: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,0.001001,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 48: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,0.001001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 49: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 51: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 52: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 53: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 55: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 56: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 57: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,0.005001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 58: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.003998,-0.007998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 59: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.011998,-0.004998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 60: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.002998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 61: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011999,-0.014998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
					case 66: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
					case 67: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
					case 69: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
					case 72: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
					case 73: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.010998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
					case 78: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
					case 79: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
					case 86: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
					case 88: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,0.001001,-0.028998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
					case 90: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.007998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
					case 91: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
					case 93: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
					case 94: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.009998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
					case 95: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
					case 96: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
					case 97: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.040998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
					case 98: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.002998,0.001001, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 100: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.002998,-0.002998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 101: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.007998,-0.006998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 102: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.003998,-0.004998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 104: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,0.001001,-0.001998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
					case 105: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.363999,1.386999,1.000000);
					case 106: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 107: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 108: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 109: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 110: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 112: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.022999,-0.008998,-0.012998, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 114: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 116: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
					case 119: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.006000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.128999,1.127999,1.000000);
					case 121: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 122: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.001998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 124: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 125: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 126: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.007000,-0.010998,-0.010998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
					case 128: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.007000,-0.004998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
					case 129: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.024999,-0.005998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
					case 132: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.011998,0.013001, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
					case 133: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.005998,-0.008998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
					case 134: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.012998,-0.005998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
					case 142: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
					case 147: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 0.984000,0.977999,1.000000);
					case 149: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.015998,-0.001998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
					case 151: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.010998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
					case 154: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.013998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
					case 155: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.000998,-0.005998, 51.200016,70.499969,142.800018, 1.250000,1.087999,1.000000);
					case 156: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.000998,-0.009998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
					case 160: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.008998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
					case 163: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
					case 164: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
					case 165: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
					case 166: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
					case 167: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.010998,-0.013999, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
					case 169: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,-0.004998, 51.200016,70.499969,142.800018, 1.016000,1.304999,1.000000);
					case 170: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,0.002001, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
					case 171: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,-0.007998, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
					case 172: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.008998,0.001001, 51.200016,70.499969,142.800018, 0.956000,1.095999,1.000000);
					case 173: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.006998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
					case 174: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
					case 175: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.450000,1.353999,1.000000);
					case 176: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 177: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 179: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 180: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 181: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 184: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.011998,-0.001998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 185: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.008998,-0.010999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 188: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000000, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 189: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 191: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
					case 192: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 193: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 194: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 195: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 196: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 198: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.014998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 200: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 201: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 202: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 206: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 207: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 209: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,0.008000, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 210: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 211: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 214: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 215: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 216: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
					case 217: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 220: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.010998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 221: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 222: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 223: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 224: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 225: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
					case 226: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 229: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 231: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 233: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 234: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 235: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 236: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
					case 239: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 240: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 247: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 250: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.009998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 252: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 254: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.002998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 255: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.008998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 258: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 259: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 263: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 265: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 266: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 267: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 269: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 270: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,0.005001, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 271: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.008998,-0.006999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 273: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.020000,-0.013998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 274: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 275: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 276: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 280: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 281: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 282: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 283: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 285: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.002998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 287: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 288: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 289: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 291: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 292: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 293: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.050999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 298: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.028999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 300: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 301: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 302: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 303: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 304: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 305: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 306: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 307: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 308: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 309: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 310: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					case 311: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
					default:ErrorMessage(playerid,"Аксесуар годинник, не відображатиметься на цьому скіні");
				}
			}
		}
		case 18910, 18909, 18908, 18907, 18906: {
			if(PlayerInfo[playerid][pSlotItem_Use][3] == 1) {
		    	switch (skinid) {
					case 1: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,-0.001000,0.000000, -92.499984,-7.199993,-98.099990, 1.114999,1.000000,0.901000);
					case 3: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.006999,0.007000, -92.499984,-7.199993,-98.099990, 1.188999,1.256000,1.157000);
					case 4: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
					case 5: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
					case 7: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.123000,0.017000,0.001999, -84.299972,-5.799993,-98.099990, 1.216999,1.256000,1.011999);
					case 9: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.091000,0.003000,0.001999, -84.299972,-5.799993,-98.099990, 1.237999,1.256000,1.057999);
					case 14: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104000,0.013000,0.006000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,1.122999);
					case 15: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.071000,-0.015999,-0.000000, -91.399986,-5.799993,-92.200004, 1.181999,1.256000,0.974999);
					case 17: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.100000,0.009000,-0.000000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,0.974999);
					case 18: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.085999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 0.994999,1.256000,1.021000);
					case 20: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.037999,1.256000,1.094000);
					case 21: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.132999,1.256000,1.094000);
					case 25: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.157999,1.056999,0.877000);
					case 26: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.005999,1.056999,1.086000);
					case 30: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116999,0.003000,-0.002000, -91.399986,-5.799993,-92.200004, 1.277999,1.056999,1.107000);
					case 44: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,0.016000,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,0.863000);
					case 45: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097999,-0.002999,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,1.034000);
					case 46: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120999,0.020000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
					case 47: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120999,0.011000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
					case 48: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.130999,-0.004999,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
					case 57: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.130999,0.024000,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
					case 58: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.002000,-0.000000, -91.399986,-5.799993,-92.200004, 1.002999,1.056999,0.939000);
					case 59: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.126999,0.006000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,1.119000);
					case 60: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.001000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
					case 66: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.001000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
					case 68: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.027000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
					case 69: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,-0.017999,0.003999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
					case 70: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,0.012000,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
					case 76: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.107999,-0.019999,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,1.005000);
					case 86: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,0.000999, -91.399986,-5.799993,-92.200004, 1.084999,1.358999,0.969000);
					case 91: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,0.007000, -91.399986,-5.799993,-92.200004, 1.206999,1.358999,1.074000);
					case 95: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.096000,-0.010999,-0.000000, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
					case 96: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.114000,0.004000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
					case 97: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,-0.004999,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
					case 98: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.099000,0.021000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,1.086000);
					case 100: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
					case 101: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,0.003000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
					case 106: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.115000,-0.001999,-0.004000, -91.399986,-5.799993,-92.200004, 1.318998,1.358999,1.158000);
					case 111: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.118000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.197998,1.126999,0.946000);
					case 112: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.086000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.055998,1.126999,0.946000);
					case 113: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.126999,1.101000);
					case 117: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
					case 118: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
					case 119: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,0.975000);
					case 120: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,-0.005999,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
					case 121: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
					case 123: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.242998,1.126999,1.113000);
					case 124: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
					case 125: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.120000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
					case 126: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.129000,-0.009999,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
					case 127: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.129000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
					case 147: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.119998,1.157999,1.061000);
					case 148: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.181998,1.157999,1.135000);
					case 151: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.449998,1.497999,1.211000);
					case 154: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.001999, -91.399986,-5.799993,-92.200004, 1.075998,1.218000,1.063000);
					case 156: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.002999,0.001999, -91.399986,-5.799993,-92.200004, 1.325998,1.434000,1.209000);
					case 160: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.084000,0.015000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
					case 162: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
					case 163: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.000998,1.086000,0.897000);
					case 164: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
					case 165: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
					case 166: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.010000,0.005000, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
					case 170: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.010000,-0.001999, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.215000);
					case 171: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.142000);
					case 176: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
					case 179: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.112000,0.006000,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
					case 180: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.139000,-0.006000,0.000000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
					case 182: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
					case 183: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
					case 184: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 185: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.135000,-0.002999,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 186: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.124000,-0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 187: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,-0.010000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 188: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.103000,-0.001000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 189: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.008000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
					case 191: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
					case 192: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
					case 200: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.222998,1.306000,1.103000);
					case 206: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.020999,0.001000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
					case 207: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087000,0.006999,-0.000999, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
					case 210: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.087000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
					case 213: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.109000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
					case 217: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.006000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
					case 221: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,0.002000,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.174000);
					case 222: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.007999,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.204000);
					case 223: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
					case 227: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
					case 228: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.004000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
					case 229: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.097000,-0.009999,0.002000, -91.399986,-5.799993,-92.200004, 1.200998,1.306000,1.009000);
					case 234: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.116000,-0.020999,0.002000, -91.399986,-5.799993,-92.200004, 0.980998,1.115000,0.973000);
					case 235: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.064000,-0.004999,0.002000, -91.399986,-5.799993,-92.200004, 1.021999,1.115000,0.973000);
					case 236: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.095000,-0.003999,0.002000, -91.399986,-5.799993,-92.200004, 1.051999,1.115000,1.028000);
					case 240: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.010000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
					case 250: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
					case 252: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
					case 258: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.237999,1.115000,1.182000);
					case 259: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.104000,-0.002999,0.002000, -91.399986,-5.799993,-92.200004, 1.302999,1.267000,1.182000);
					case 262: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
					case 265: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
					case 266: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.093000,0.002000,-0.000999, -91.399986,-5.799993,-92.200004, 1.200999,1.267000,0.945000);
					case 267: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.100000,-0.008999,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
					case 272: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.122000,0.000000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
					case 273: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.081000,0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
					case 274: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 275: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 276: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 280: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.016000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 281: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.102000,0.004000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
					case 282: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.011000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
					case 286: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.005000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
					case 292: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,-0.002999,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
					case 295: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.110000,0.002000,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
					case 296: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,-0.017999,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
					case 300: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
					case 301: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
					case 302: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
					case 303: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
					case 304: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
					case 305: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
					case 310: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
					case 311: SetPlayerAttachedObject (playerid, 3, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
					default:ErrorMessage(playerid,"Аксесуар бандана, не відображатиметься на цьому скіні");
				}
			}
		}
		case 3026: {
		    if(PlayerInfo[playerid][pSlotItem_Use][5] == 1) {
			    switch(skinid) {
			    	case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.204000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
					case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.237000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
					case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.228000,-0.062999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000 );
					case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.056999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,0.918998,0.905000 );
					case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.117999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
					case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.194000,-0.079999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
					case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.219000,-0.057999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000 );
					case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.061999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
					case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207000,-0.058999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
					case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.262000,-0.071999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000 );
					case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.189000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.158000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.184999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.129999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.243000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167000,-0.077000,-0.014999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.145000,-0.077000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 31: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.239000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.173000,-0.068999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.199000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.150000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 38: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 39: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.196000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.203000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.171999,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 50: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.218999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.232999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.174999,-0.074000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.116999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.202999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.141999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.155999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.167999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.162999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.207999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.118999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000 );
					case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.888999 );
					case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999 );
					case 89: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999 );
					case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.999998,0.826000 );
					case 91: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.048999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.122999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.022999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.071999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000 );
					case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000 );
					case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000 );
					case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.046999,-0.112000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000 );
					case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000 );
					case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.055999,-0.123000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.035999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.051999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000 );
					case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.080000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.098999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.112999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 129: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.186999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 130: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.153999,-0.085000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 131: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.069000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.175999,-0.069000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.156999,-0.064000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.093999,-0.094000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000 );
					case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.161999,-0.082000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.111999,-0.086000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.076999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 144: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 146: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.060000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.099999,-0.081000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.115999,-0.064000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.107999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.086000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.105999,-0.065000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 162: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.094999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.044999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 203: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 204: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 207: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.095999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.154999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.148999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.083999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 224: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 225: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.043999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.068999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.139999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.067999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.045999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.085999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.072999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.075999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.078999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.063999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.113999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.062999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 263: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.089999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.097999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,   0.121000,-0.078000,-0.030000 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.102999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.109999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.065999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.088999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.084999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.057999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.060999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.070999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.135999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.130999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.050999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000 );
					default:ErrorMessage(playerid,"Аксесуар рюкзак, не відображатиметься на цьому скіні");
				}
			}
		}
		case 371: {
		    if(PlayerInfo[playerid][pSlotItem_Use][5] == 1) {
			    switch(skinid) {
			    	case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.087999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.181999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.012000,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 8: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.122999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.107999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 10: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.077999,-0.127999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.105999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 29: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.021999,-0.126999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 33: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 40: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 41: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 42: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.098999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 49: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.032000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 53: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 54: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 55: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.097999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 56: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.037000,-0.125999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.038999,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.011000,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 62: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.020999,-0.106999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 65: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.103999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 66: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 67: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.010000,-0.122999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 69: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.031000,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.046000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.007999,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 76: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.017999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 77: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.051999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.008999,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 82: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 83: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 84: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 85: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.002000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.121999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 88: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.111999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 90: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.094999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 93: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.009000,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.045000,-0.120999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.101999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.140999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.131999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 103: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.026999,-0.159999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.044999,-0.156999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 105: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.012999,-0.170999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.096999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 113: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.041999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 117: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 118: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 128: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 132: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.050999,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 133: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.017000,-0.094999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.091999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.127999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.035999,-0.098999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.018999,-0.089999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 141: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.084999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 142: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 143: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 148: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 150: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 151: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.135999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 152: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.006999,-0.122999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 157: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 158: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 159: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 167: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 168: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 169: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.086999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 172: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 176: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 177: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 180: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.022000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 190: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 196: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.047999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 198: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.030000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 199: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.067999,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.007000,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 201: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.094999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 214: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 215: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 216: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 219: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004000,-0.103999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.035000,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 226: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.024999,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.099999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.030999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 233: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.024000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.026000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 241: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 242: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 243: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.031999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.004999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.068000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 253: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.016000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 262: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.231000,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 268: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 269: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.157999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.033000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.010000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.005999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.019999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.002000,-0.136999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
					case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.001000,-0.127999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.055000,-0.119000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.041000,-0.130999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.008000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 298: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.106999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.048000,-0.123999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
					default:ErrorMessage(playerid,"Аксесуар рюкзак, не відображатиметься на цьому скіні");
				}
			}
		}
		case 19559: {
		    if(PlayerInfo[playerid][pSlotItem_Use][5] == 1) {
			    switch(skinid) {
					case 1: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
					case 2: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
					case 3: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000 );
					case 4: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.099000,-0.046999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.067000,1.079998,1.029000 );
					case 5: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.330000,1.319998,1.228000 );
					case 6: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.095000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.978000,1.154998,1.164000 );
					case 7: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049000,-0.039000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.084000,1.154998,1.164000 );
					case 9: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000 );
					case 11: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.077000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000 );
					case 12: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052000,-0.048999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000 );
					case 13: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.093000,-0.035999,-0.006000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000 );
					case 14: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
					case 15: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
					case 17: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000 );
					case 18: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
					case 19: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.108000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
					case 20: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000 );
					case 21: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.012000,1.071998,1.093000 );
					case 22: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.078000,1.071998,1.093000 );
					case 23: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.951000,1.071998,1.093000 );
					case 24: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000 );
					case 25: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000 );
					case 28: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000 );
					case 30: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000 );
					case 32: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.058000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000 );
					case 34: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000 );
					case 35: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
					case 36: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
					case 37: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000 );
					case 43: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.965001,0.922999,0.975000 );
					case 44: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000 );
					case 45: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.017000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000 );
					case 46: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.103000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
					case 47: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
					case 48: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000 );
					case 57: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.146999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.962001,0.902998,0.999000 );
					case 58: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.851001,0.902998,0.999000 );
					case 59: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999 );
					case 60: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.057999,-0.009000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999 );
					case 61: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.029000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999 );
					case 68: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999 );
					case 70: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
					case 71: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.031000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
					case 72: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.063999,-0.040000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999 );
					case 73: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.091000,-0.050999,0.000000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.035001 );
					case 78: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.102999,-0.031999,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.138001 );
					case 79: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.036998,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001 );
					case 86: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.085999,-0.072999,0.002999 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001 );
					case 94: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,0.002999 ,  0.000000,90.000000,0.000000 ,  0.933999,1.000999,1.138001 );
					case 95: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.022999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  0.901998,1.000999,1.138001 );
					case 96: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.065999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001 );
					case 97: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001 );
					case 98: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
					case 100: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
					case 101: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.031999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
					case 102: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001 );
					case 104: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.034999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.177999,1.176999,1.394001 );
					case 106: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001 );
					case 107: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001 );
					case 108: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.026999,1.176999,1.394001 );
					case 109: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 110: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 111: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.026999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 112: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.018000,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 114: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 115: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001 );
					case 116: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.144999,1.436999,1.394001 );
					case 119: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
					case 120: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
					case 121: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001 );
					case 122: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.948999,1.224999,1.394001 );
					case 123: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.256999,1.394001 );
					case 124: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
					case 125: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
					case 126: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001 );
					case 127: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  1.123998,1.363999,1.394001 );
					case 134: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  0.980999,1.067999,1.082000 );
					case 135: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.067999,1.432999,1.372001 );
					case 136: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.939999,0.939999,1.126001 );
					case 137: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.007000 ,  0.000000,90.000000,0.000000 ,  0.869999,0.939999,1.126001 );
					case 147: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
					case 153: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
					case 154: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001 );
					case 155: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.154999,1.391999,1.199001 );
					case 156: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.080999,1.245999,1.199001 );
					case 160: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.870999,1.104999,1.199001 );
					case 161: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.979999,1.306999,1.199001 );
					case 163: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001 );
					case 164: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001 );
					case 165: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
					case 166: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
					case 170: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001 );
					case 171: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.088999,1.270001 );
					case 173: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 174: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 175: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 179: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.046999,-0.040999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 181: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.068999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 182: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 183: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 184: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 185: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.044999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001 );
					case 186: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001 );
					case 187: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001 );
					case 188: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 189: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 191: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 192: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 193: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 194: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 195: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.043999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 200: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 202: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 206: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 208: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.039999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 210: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.006000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001 );
					case 211: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.058999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001 );
					case 212: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.016000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001 );
					case 213: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.077999,1.239999,1.270001 );
					case 217: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.950999,1.239999,1.270001 );
					case 220: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.041999,-0.021999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.239999,1.270001 );
					case 221: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 222: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 223: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.017999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 227: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.078999,-0.080999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 228: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001 );
					case 229: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 230: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 234: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 235: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 236: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001 );
					case 239: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.072999,-0.057999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.039998,1.337998,1.324001 );
					case 240: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.982998,1.153998,1.324001 );
					case 247: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.057999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
					case 248: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
					case 250: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001 );
					case 252: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.068999,0.003999 ,  0.000000,90.000000,0.000000 ,  1.009999,1.295998,1.324001 );
					case 254: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.097998,1.295998,1.324001 );
					case 255: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.049999,-0.030999,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.045999,1.053998,1.249001 );
					case 258: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.052999,-0.005999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001 );
					case 259: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.042999,-0.012999,-0.014000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001 );
					case 261: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.029999,-0.038999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.867999,0.918998,1.073001 );
					case 265: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.015999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.042998,1.238001 );
					case 266: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.040999,-0.051999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
					case 267: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.245999,-0.034999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
					case 270: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
					case 271: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.048999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001 );
					case 272: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.011999,-0.017000 ,  0.000000,90.000000,0.000000 ,  1.216999,1.113998,1.238001 );
					case 273: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.036999,-0.009999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.026999,0.996998,1.238001 );
					case 274: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 275: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 276: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 280: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 281: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 282: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 283: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 284: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 285: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.073999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 286: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001 );
					case 287: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001 );
					case 288: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001 );
					case 289: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.037999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
					case 290: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.051999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
					case 291: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001 );
					case 292: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
					case 293: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
					case 294: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.079999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001 );
					case 295: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.038999,1.172998,1.238001 );
					case 296: SetPlayerAttachedObject (playerid, 5, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 297: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.048999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 299: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.074999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 300: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 301: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 302: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 303: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 304: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 305: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001 );
					case 306: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
					case 307: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
					case 308: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
					case 309: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001 );
					case 310: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001 );
					case 311: SetPlayerAttachedObject (playerid, 5, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001 );
					default:ErrorMessage(playerid,"Аксесуар рюкзак, не відображатиметься на цьому скіні");
				}
			}
		}
	}
	return 1;
}
stock texdraw_skill(playerid,weapon) {
	for(new i = 0;i < 4;i++) {
		TextDrawShowForPlayer(playerid,skill_td[i]);
		if(i < 2) PlayerTextDrawShow(playerid,skill_player_td[playerid][i]);
	}
	switch(weapon) {
		case 0: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"SD-PISTOL");
		case 1: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"Desert Eagle");
		case 2: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"SHOTGUN");
		case 3: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"MP5");
		case 4: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"AK-47");
		case 5: PlayerTextDrawSetString(playerid,skill_player_td[playerid][0],"M4");
	}
	new str[13];
	format(str,sizeof str, "%d/100",PlayerInfo[playerid][pGunSkill][weapon]);
	PlayerTextDrawSetString(playerid,skill_player_td[playerid][1],str);
	SetTimerEx("destroyTDskill",2500,false,"i",playerid);
}
CB: destroyTDskill(playerid) {
	for(new i = 0;i < 4;i++) {
		TextDrawHideForPlayer(playerid,skill_td[i]);
		if(i < 2) PlayerTextDrawHide(playerid,skill_player_td[playerid][i]);
	}
}
const UNOCCUPIED_SYNC = 209;
IPacket:UNOCCUPIED_SYNC(playerid, BitStream:bs)
{
    new UNOCCUPIED[PR_UnoccupiedSync];
    BS_ReadUint8(bs, 8);
    BS_ReadUnoccupiedSync(bs, UNOCCUPIED);
    //
    if(!(-1.0 <= UNOCCUPIED[PR_roll][0] <= 1.00000)
            || !(-1.0 <= UNOCCUPIED[PR_roll][1] <= 1.00000)
            || !(-1.0 <= UNOCCUPIED[PR_direction][0] <= 1.00000)
            || !(-1.0 <= UNOCCUPIED[PR_roll][2] <= 1.00000)
            || !(-1.0 <= UNOCCUPIED[PR_direction][1] <= 1.00000)
            || !(-1.0 <= UNOCCUPIED[PR_direction][2] <= 1.00000)
            || !(-20000.0 <= UNOCCUPIED[PR_position][0] <= 20000.00000)
            || !(-20000.0 <= UNOCCUPIED[PR_position][1] <= 20000.00000)
            || !(-20000.0 <= UNOCCUPIED[PR_position][2] <= 20000.00000)
            || !(-1.00000 <= UNOCCUPIED[PR_angularVelocity][0] <= 1.00000)
            || !(-1.00000 <= UNOCCUPIED[PR_angularVelocity][1] <= 1.00000)
            || !(-1.00000 <= UNOCCUPIED[PR_angularVelocity][2] <= 1.00000)
            || !(-100.00000 <= UNOCCUPIED[PR_velocity][0] <= 100.00000)
            || !(-100.00000 <= UNOCCUPIED[PR_velocity][1] <= 100.00000)
            || !(-100.00000 <= UNOCCUPIED[PR_velocity][2] <= 100.00000)) return false;
    return true;
}
CB: OnVehicleRequestDeath(vehicleid, killerid) {
    if(VehicleInfo[vehicleid][vType] != VEHICLE_TYPE_TRAILER) {
        new Float:Healths;
        GetVehicleHealth(vehicleid, Healths);
        if(Healths >= 300.0) return false;
    }
    return true;
}
stock A_SetPlayerSkin(playerid,skin) {
	SetPlayerSkin(playerid,skin);
	for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++) {
		if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	}
	for(new i = 0; i < 8; i++) {
		if(!PlayerInfo[playerid][pSlotItem][i]) continue;
    	AtachPlayerAcces(playerid, PlayerInfo[playerid][pSlotItem][i],GetPlayerSkin(playerid));
	}
	return 1;
}
stock game_dm() {
	if(open_game == 1 && time_registr_game > 1){
		time_registr_game --;
		if(time_registr_game == 300) SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" До кінця реєстрації на Божевільні війни залишилося 5 хв. (/gps > Громадські місця > Центр розваг)");
		if(time_registr_game == 120) {
			SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" До кінця реєстрації на Божевільні війни залишилося 2 хв. (/gps > Громадські місця > Центр розваг)");
			game_players[2] = 20;
			SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Вільних місців на божевільних війнах: "YELLOW"20"W". Використовуйте "YELLOW"/game 2"W" для телепорта");
		}
		if(time_registr_game == 20) game_players[2] = 0;
	} 
	else if(open_game == 1 && time_registr_game == 1) {
	    if(players_in_game >= 3) {
			time_registr_game = 0;
		    time_play_game = 300;
		    game_start = 1;
		    open_game = 0;
		    SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Увага! Cумасшедшие Войны почалися!");
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		    	if(player_to_game[i] == 1) {
		    	    kills_player_game[i] = 0;
		    	    new random_spawn = random(sizeof spawns_pos_game);
					SetPlayerPosAC(i, spawns_pos_game[random_spawn][0],spawns_pos_game[random_spawn][1],spawns_pos_game[random_spawn][2],201,10);
					SetPlayerFacingAngle(i, spawns_pos_game[random_spawn][4]);
					SetPlayerHealth(i,100.0);
					new random_weapon = random(sizeof weapon_id_game);
					AC_GivePlayerWeapon(i, weapon_id_game[random_weapon], 999);
					for(new t; t != 6; t++) TextDrawShowForPlayer(i, td_game[t]);
					new string[24];
					format(string,sizeof(string),"$%d",money_in_game);
					TextDrawSetString(td_game[5], string);
					if(TI[i][tCashDM]) TI[i][tCashDM] = 0;
					SetPlayerColor(i,0xBC2C2CFF);
				}
			}
		}
		else {
		    time_registr_game = 0;
	    	time_play_game = 0;
	    	game_start = 0;
	    	open_game = 0;
			money_in_game = 0;
			new query[100];
			format(query, sizeof(query), "DELETE FROM `dm_arena` WHERE 1");
			mysql_tquery(connects, query);
			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_game);
			UpdateDynamic3DTextLabelText(gamedm_text,-1,string);
		 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Cумасшедшие Войны были відмінені. Не достатня кількість учасників");
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(player_to_game[i] == 1) player_to_game[i] = 0;
				if(TI[i][tCashDM]) GiveMoney(i,TI[i][tCashDM],"возвращение взноса сумасшедших войн"),TI[i][tCashDM] = 0;
			}
		}
	}
	if(game_start == 1 && time_play_game > 1) {
	    time_play_game--;
	    foreach(new i:Player) {
	    	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
	        if(player_to_game[i] == 1) {
	    	    new string[24];
				format(string,sizeof(string),"%s",Convert(time_play_game));
		        TextDrawSetString(td_game[4], string);   
			}
		}
	}
	else if(game_start == 1 && time_play_game == 1) {
		time_registr_game = 0;
    	time_play_game = 0;
    	game_start = 0;
    	open_game = 0;
	 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Увага! Cумасшедшие Войны успішно закінчені");
	 	End();
		UpdateDynamic3DTextLabelText(gamedm_text,-1,"Общий взнос: "O"$0");
	 	foreach(new i:Player) {
	 		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(player_to_game[i] == 1) {
				for(new t; t != 6; t++) TextDrawHideForPlayer(i, td_game[t]);
				player_to_game[i] = 0;
				new random_spawn = random(sizeof spawns_pos_game_end);
				SetPlayerPosAC(i, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
				SetPlayerFacingAngle(i, spawns_pos_game_end[random_spawn][4]);
				SetPlayerHealth(i,100.0);
				SetPlayerArmour(i, 0);
				if(PlayerInfo[i][pMember] && start_work[i]) {
					A_SetPlayerSkin(i,PlayerInfo[i][pFracSkin]);
					SetPlayerColor(i,gFractionSpawn[PlayerInfo[i][pMember]][fracColor]);
				}
				else SetPlayerColor(i,0xFFFFFF11);
				DelGun(i);
			}
		}
	}
    new hour,minuite,second;
    gettime(hour,minuite,second);
    if(((hour == 8 && minuite == 05 || hour == 10 && minuite == 05  || hour == 12 && minuite == 05  || hour == 14 && minuite == 05 || hour == 16 && minuite == 05 || hour == 18 && minuite == 05 || hour == 20 && minuite == 05 || hour == 22 && minuite == 05) && open_game == 0) || open_game == 999) {
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Увага! Открыта регистрация на Cумасшедшие Войны");
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" У вас є 10 хвилин для проходження реєстрації. (/gps > Громадські місця > Центр розваг)");
        time_registr_game = 600;
        money_in_game = 0;
        players_in_game = 0;
        open_game = 1;
        game_start = 0;
        game_players[2] = 0;
		new query[100];
		format(query, sizeof(query), "DELETE FROM `dm_arena` WHERE 1");
		mysql_tquery(connects, query);

		new string[70];
		format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_game);
		UpdateDynamic3DTextLabelText(gamedm_text,-1,string);
	}
	return 1;
}
stock End() {
	new Cache:result = mysql_query(connects, "SELECT `Name`,`kills_dm` FROM `dm_arena` ORDER BY `kills_dm` DESC LIMIT 3");
	new rows = cache_num_rows();
	if(rows) {
		new name[MAX_PLAYER_NAME];
		new kills[3];
		new str[156];
		for(new i; i < rows; i ++) {
            cache_get_value_name(i, "Name",name,MAX_PLAYER_NAME);
			if(i==0) {
			    new priz_player_1 = money_in_game/100*50;
				cache_get_value_int(i, "kills_dm", kills[0]);
				format(str,sizeof(str),"%s {f6f6d9}занимает 1 место. Он убил "YELLOW"%d{f6f6d9} гравців и выиграл "ORANGE"$%d",name,kills[0],priz_player_1);
				SendClientMessageToDM(-1,str);
				if(IsPlayerConnected(GetPlayerID(name))) {
					if(PlayerInfo[GetPlayerID(name)][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(GetPlayerID(name),priz_player_1*BonusInfo[act_mp],"победа в сумасшедших войнах");
					else if(BonusInfo[act_select] == 2) GiveMoney(GetPlayerID(name),priz_player_1*BonusInfo[act_mp],"победа в сумасшедших войнах");
				    else GiveMoney(GetPlayerID(name),priz_player_1,"победа в сумасшедших войнах");
				}
			}
			if(i==1) {
			    new priz_player_2 = money_in_game/100*30;
				cache_get_value_int(i, "kills_dm", kills[1]);
				format(str,sizeof(str),"%s {f6f6d9}занимает 2 место. Он убил "YELLOW"%d{f6f6d9} гравців и выиграл "ORANGE"$%d",name,kills[1],priz_player_2);
				SendClientMessageToDM(-1,str);
				if(IsPlayerConnected(GetPlayerID(name))) {
					if(PlayerInfo[GetPlayerID(name)][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(GetPlayerID(name),priz_player_2*BonusInfo[act_mp],"победа в сумасшедших войнах");
					else if(BonusInfo[act_select] == 2) GiveMoney(GetPlayerID(name),priz_player_2*BonusInfo[act_mp],"победа в сумасшедших войнах");
				    else GiveMoney(GetPlayerID(name),priz_player_2,"победа в сумасшедших войнах");
				}
			}
			if(i==2) {
			    new priz_player_3 = money_in_game/100*20;
				cache_get_value_int(i, "kills_dm", kills[2]);
				format(str,sizeof(str),"%s {f6f6d9}занимает 3 место. Он убил "YELLOW"%d{f6f6d9} гравців и выиграл "ORANGE"$%d",name,kills[2],priz_player_3);
				SendClientMessageToDM(-1,str);
				if(IsPlayerConnected(GetPlayerID(name))) {
					if(PlayerInfo[GetPlayerID(name)][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(GetPlayerID(name),priz_player_3*BonusInfo[act_mp],"победа в сумасшедших войнах");
					else if(BonusInfo[act_select] == 2) GiveMoney(GetPlayerID(name),priz_player_3*BonusInfo[act_mp],"победа в сумасшедших войнах");
				    else GiveMoney(GetPlayerID(name),priz_player_3,"победа в сумасшедших войнах");
				}
			}
		}
	}
	cache_delete(result);
	return 1;
}
stock SendClientMessageToDM(color,const string[]) {
	foreach(Player,i) {
		if(!player_to_game[i]) continue;
		SendClientMessage(i,color,string);
	}
	return true;
}
CB: UnFreeze(playerid) TogglePlayerControllable(playerid, 1);
CB: GetMoney() {
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
 		if(PlayerInfo[i][pCash] != GetPlayerMoney(i) && TI[i][tLogin]) ResetPlayerMoney(i), GivePlayerMoney(i, PlayerInfo[i][pCash]);
	}
	return ;
}
stock Race_End(playerid) {
	new string[256];
	new priz_lv_1 = (money_in_race_lv/100)*50;
	new priz_lv_2 = (money_in_race_lv/100)*30;
	new priz_lv_3 = (money_in_race_lv/100)*20;
	switch(race_lead_lv) {
	    case 0: {
	    	race_lead_lv = 1;
			format(string,sizeof(string),"%s[%d]{f6f6d9} завершил гонку "YELLOW"первым{f6f6d9}. Его время "W"%s{f6f6d9}, виграш "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),priz_lv_1);
			SendClientMessageToRace(-1,string);
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(playerid,priz_lv_1*BonusInfo[act_mp],"победа в безумных гонках");
			else if(BonusInfo[act_select] == 2) GiveMoney(playerid,priz_lv_1*BonusInfo[act_mp],"победа в безумных гонках");
		    else GiveMoney(playerid,priz_lv_1,"победа в безумных гонках");
	    }
	    case 1: {
	    	race_lead_lv = 2;
			format(string,sizeof(string),"%s[%d]{f6f6d9} завершил гонку "YELLOW"другии{f6f6d9}. Его час "W"%s{f6f6d9}, приз "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),priz_lv_2);
			SendClientMessageToRace(-1,string);
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(playerid,priz_lv_2*BonusInfo[act_mp],"победа в безумных гонках");
			else if(BonusInfo[act_select] == 2) GiveMoney(playerid,priz_lv_2*BonusInfo[act_mp],"победа в безумных гонках");
		    else GiveMoney(playerid,priz_lv_2,"победа в безумных гонках");

	    }
	    case 2: {
	    	race_lead_lv = 3;
			format(string,sizeof(string),"%s[%d]{f6f6d9} завершил гонку "YELLOW"третьим{f6f6d9}. Его время "W"%s{f6f6d9}, виграш "ORANGE"%d", player_name[playerid],playerid,Convertss(time_race_lv),priz_lv_3);
			SendClientMessageToRace(-1,string);
			if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(playerid,priz_lv_3*BonusInfo[act_mp],"победа в безумных гонках");
			else if(BonusInfo[act_select] == 2) GiveMoney(playerid,priz_lv_3*BonusInfo[act_mp],"победа в безумных гонках");
		    else GiveMoney(playerid,priz_lv_3,"победа в безумных гонках");

	    }
	   	default: {
	    	format(string,sizeof(string),"%s[%d]{f6f6d9} завершил гонку. Его время "W"%s{f6f6d9}",player_name[playerid],playerid,Convertss(time_race_lv));
			SendClientMessageToRace(-1,string);
	    }
	}
	A_DestroyVehicle(player_car_race_lv_id[playerid]);
	player_car_race_lv_id[playerid] = INVALID_VEHICLE_ID;
	player_to_race_lv[playerid] = 0;
	for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, td_game[t]);
	new random_spawn = random(sizeof spawns_pos_game_end);
	SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3,true);
	SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
	return true;
}

stock SendClientMessageToRace(color,const string[]) {
	foreach(Player,i)if(player_to_race_lv[i] == 1) SendClientMessage(i,color,string);
	return true;
}
race_game() {
    if(race_lv_start != 0) {
		time_race_lv++;
		new string[24];
		format(string,sizeof(string),"%s",Convert(time_race_lv));
        TextDrawSetString(td_game[4], string);
        if(time_race_lv == 1200) {
			UpdateDynamic3DTextLabelText(gamerace_text,-1,"Общий взнос: "O"$0");
            random_car_race_lv = INVALID_VEHICLE_ID;
		    time_registr_race_lv = 0;
	    	time_race_lv = 0;
      		race_lv_start = 0;
	    	open_race_lv = 0;
	    	race_lead_lv = 0;
		 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Божевільні гонки успішно завершені");
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(player_to_race_lv[i] == 1) Race_End(i);
			}
		}
	}
    if(open_race_lv != 0 && time_registr_race_lv != 0) {
		time_registr_race_lv --;
		if(time_registr_race_lv == 300) SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" До кінця реєстрації на Божевільні гонки залишилося 5 хв. (/gps > Громадські місця > Центр розваг)");
		if(time_registr_race_lv == 120) {
			SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" До кінця реєстрації на Божевільні гонки залишилося 2 хв. (/gps > Громадські місця > Центр розваг)");
			game_players[0] = 25-players_in_race_lv;
			new string[144];
			format(string,sizeof(string),"{cec710}[Центр розваг]"W" Вільних місць на божевільні гонках: "YELLOW"%d"W". Використовуйте "YELLOW"/game 0"W" для телепорта",game_players[0]);
			SendClientMessageToAll(COLOR_GREY, string);
		}
		if(time_registr_race_lv == 20) game_players[0] = 0;
		if(time_registr_race_lv < 10) {
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		    	if(player_to_race_lv[i] == 1) {
				    new str[24];
				    format(str, sizeof(str), "~r~%d",time_registr_race_lv);
				    GameTextForPlayer(i, str, 500, 3);
				}
			}
		}
	}
    if(open_race_lv == 1 && time_registr_race_lv == 9) {
	    if(players_in_race_lv < 3) {
		    random_car_race_lv = INVALID_VEHICLE_ID;
		    time_registr_race_lv = 0;
	    	time_race_lv = 0;
      		race_lv_start = 0;
	    	open_race_lv = 0;
	    	race_lead_lv = 0;
			money_in_race_lv = 0;
			new string[70];
			format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_race_lv);
			UpdateDynamic3DTextLabelText(gamerace_text,-1,string);
		 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Безумные Гонки были відмінені. Не достатня кількість учасників");
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(player_to_race_lv[i] == 1) player_to_race_lv[i] = 0;
				if(TI[i][tCashRace]) GiveMoney(i,TI[i][tCashRace],"возвращение взноса безумных гонок"),TI[i][tCashRace] = 0;
			}
		}
	    open_race_lv = 3;
	    new random_car = random(sizeof car_id_race_lv);
	    random_car_race_lv = car_id_race_lv[random_car];
	    foreach(new i:Player) {
	    	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
	    	if(player_to_race_lv[i] == 1) {
	    	    SendOk(i, "До старта гонки 10 секунд");
				switch(race_type) {
					case 0: {
						player_car_race_lv_id[i] = A_CreateVehicle(random_car_race_lv,
						spawns_car_race_sity[player_to_race_lv_id[i]-1][0],spawns_car_race_sity[player_to_race_lv_id[i]-1][1],
						spawns_car_race_sity[player_to_race_lv_id[i]-1][2], spawns_car_race_sity[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],0);
						SetPlayerInterior(i,0);
					}
					case 1: {
						player_car_race_lv_id[i] = A_CreateVehicle(568,
						spawns_car_race_desert[player_to_race_lv_id[i]-1][0],spawns_car_race_desert[player_to_race_lv_id[i]-1][1],
						spawns_car_race_desert[player_to_race_lv_id[i]-1][2], spawns_car_race_desert[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],0);
						SetPlayerInterior(i,0);
					}
					case 2: {
						player_car_race_lv_id[i] = A_CreateVehicle(571,
						spawns_car_race_kart[player_to_race_lv_id[i]-1][0],spawns_car_race_kart[player_to_race_lv_id[i]-1][1],
						spawns_car_race_kart[player_to_race_lv_id[i]-1][2], spawns_car_race_kart[player_to_race_lv_id[i]-1][3], -1, -1, -1,VEHICLE_TYPE_RACE);
						LinkVehicleToInterior(player_car_race_lv_id[i],7);
						SetPlayerInterior(i,7);
					}
				}
				SetPlayerVirtualWorld(i,300);
				SetVehicleVirtualWorld(player_car_race_lv_id[i], 300);
                PutPlayerInVehicle(i, player_car_race_lv_id[i], 0);
				SetVehicleParamsEx(player_car_race_lv_id[i],true,false,false,false,false,false,false);
				SetVehicleHealth(player_car_race_lv_id[i],3000.0);
				VehicleInfo[player_car_race_lv_id[i]][vFuel] = 100.0;
                SetPlayerHealth(i,100);
                TogglePlayerControllable(i, 0);
                for(new t; t != 6; t++) TextDrawShowForPlayer(i, td_game[t]);
				new string[24];
				format(string,sizeof(string),"$%d",money_in_race_lv);
				TextDrawSetString(td_game[5], string);
			}
		}
	}
	if(open_race_lv == 3 && time_registr_race_lv == 1) {
	    time_registr_race_lv = 0;
	    open_race_lv = 0;
	    SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Увага! Безумные Гонки почалися!");
	    foreach(new i:Player)  {
	    	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
	    	if(player_to_race_lv[i] == 1) {
	    	    GameTextForPlayer(i, "~g~GO-GO-GO", 1000, 3);
                TogglePlayerControllable(i, 1);
				if(TI[i][tCashRace]) TI[i][tCashRace] = 0;
                time_race_lv = 0;
                race_lv_start = 1;
                SetPVarInt(i,"RaceCP",1);
				SetNextRaceCP(i,race_type);
			}
		}
	}
    new hour,minuite,second;
    gettime(hour,minuite,second);
    if(((hour == 7 && minuite == 05 || hour == 9 && minuite == 05  || hour == 11 && minuite == 05  || hour == 13 && minuite == 05 || hour == 15 && minuite == 05 || hour == 17 && minuite == 05 || hour == 19 && minuite == 05 || hour == 21 && minuite == 05|| hour == 23 && minuite == 05) && open_race_lv == 0) || open_race_lv == 999)  {
		new str[3][11] = {"Городская","Бездорожье","Картинг"};
		race_type = random(sizeof(str));
		new string[128];
		format(string,sizeof string,"{cec710}[Центр розваг]"W" Увага! Открыта регистрация на Безумные Гонки. Трасса: %s",str[race_type]);
        SendClientMessageToAll(COLOR_GREY, string);
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" У вас є 10 хвилин для проходження реєстрації. (/gps > Громадські місця > Центр розваг)");
        time_registr_race_lv = 600;// время на регистрацию изменить после тестов на 600 (10 хвилин)
        money_in_race_lv = 0;
        players_in_race_lv = 0;
        open_race_lv = 1;
        time_race_lv = 0;
        race_lv_start = 0;
        race_lead_lv = 0;
        game_players[0] = 0;

		format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_race_lv);
		UpdateDynamic3DTextLabelText(gamerace_text,-1,string);
	}
	return 1;
}
stock Convertss(number) {
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	else format(string, 30, "%d:%02d", mins, secs);
	return string;
}
stock GetCoordDoorVehicle(vehicleid, &Float:x, &Float:y, &Float:z) // угон
{
    new Float:angle,Float:distance;
    GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);  
    distance = distance/2 + 0.1; 
    GetVehiclePos(vehicleid, x, y, z);
    GetVehicleZAngle(vehicleid, angle); 
    x -= (distance * floatsin(-angle+89, degrees)); 
    y -= (distance * floatcos(-angle+89, degrees)); 
    return 1;
}  
stock GetCoordBonnetVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x -= (distance * floatsin(-angle+180, degrees));
	y -= (distance * floatcos(-angle+180, degrees));
	return true;
}
stock GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z) {
	new Float:angle,Float:distance;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
	distance = distance/2 + 0.1;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, angle);
	x += (distance * floatsin(-angle+180, degrees));
	y += (distance * floatcos(-angle+180, degrees));
	return true;
}
golod_game() {
    if(golod_start != 0) {
		time_golod++;
		new string[24];
		format(string,sizeof(string),"%s",Convert(900-time_golod));
        TextDrawSetString(td_game[4], string);
        if(time_golod >= 15) {
        	for(new i; i != 21; i++) {
        		if(objgolod[i] == -1 && pickups_game_golod_2[i] == -1) {
        			golod_object(i);
        		}
        	}
        }
        new ids = 0;
	 	foreach(new i:Player) {
	 		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(player_to_golod[i] == 1) ids++;
			if(ids == 1 && players_in_golod == 1) {
				golod_end(i);
				SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" голодні ігри успішно закінчені");
				new strings[128];
				format(strings,sizeof(strings),"{cec710}[Центр розваг]"W" Победителем голодных игр становится "W"%s{00FF00}.",player_name[i]);
				SendClientMessageToAll(COLOR_GREY, strings);
				format(strings,sizeof(strings),"{cec710}[Центр розваг]"W" Его приз : "ORANGE"$%d",money_in_golod);
				SendClientMessageToAll(COLOR_GREY, strings);

				if(PlayerInfo[i][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) GiveMoney(i,money_in_golod*BonusInfo[act_mp],"победа в голодных играх");
				else if(BonusInfo[act_select] == 2) GiveMoney(i,money_in_golod*BonusInfo[act_mp],"победа в голодных играх");
			    else GiveMoney(i,money_in_golod,"победа в голодных играх");

				golod_gameover();
				return 1;
			}
		}
        if(time_golod == 900) {
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(player_to_golod[i] == 1) {
					SendOk(i,"На острові виживших залишилося декілька, приз не дістається нікому");
					golod_end(i);
				    golod_gameover();
				    SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" голодні ігри успішно закінчені");
				}
			}
		}
	}
    if(time_gamegolod != 0) {
		time_gamegolod --;
		if(time_gamegolod == 300) SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" До кінця реєстрації на голодні ігри осталось 5 мин. (/gps > Громадські місця > Центр розваг)");
		if(time_gamegolod == 120) {
			SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" До кінця реєстрації на голодні ігри залишилося 2 хв. (/gps > Громадські місця > Центр розваг)");
			game_players[1] =  21-players_in_golod;
			new string[144];
			format(string,sizeof(string),"{cec710}[Центр розваг]"W" Вільних місць на голодних іграх: "YELLOW"%d"W". Використовуйте "YELLOW"/game 1"W" для телепорта",game_players[1]);
			SendClientMessageToAll(COLOR_GREY, string);
		}
		if(time_gamegolod == 20) game_players[1] = 0;
		if(time_gamegolod < 10) {
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		    	if(player_to_golod[i]) {
		    		TogglePlayerControllable(i, true);
				    new str[24];
				    format(str, sizeof(str), "~r~%d",time_gamegolod);
				    GameTextForPlayer(i, str, 500, 3);
				}
			}
		}
	}
    if((open_gamegolod == 1 && time_gamegolod == 10) || (open_gamegolod == 1 && players_in_golod == 21)) {
    	time_gamegolod = 10;
	    if(players_in_golod < 3) {
		    golod_gameover();
		 	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" голодні ігри были відмінені. Не достатня кількість учасників");
		 	foreach(new i:Player) {
		 		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
				if(player_to_golod[i] == 1) player_to_golod[i] = 0;
				if(TI[i][tCashRace]) GiveMoney(i,TI[i][tCashRace],"возвращение взноса голодні ігри"),TI[i][tCashRace] = 0;
			}
		}
	    open_gamegolod = 3;
	    if((open_gamegolod == 3 && time_gamegolod == 10)) {
	    	new picks = -1;
	    	SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Увага! голодні ігри почалися");
		    foreach(new i:Player) {
		    	if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		    	if(player_to_golod[i] == 1) {
		    		if(TI[i][tAFK] >= 4) {
		    			PlayerSpawn(i);
		    			ErrorMessage(i,"Ви были исключены из ігри по причине - АФК");
		    		}
				    open_gamegolod = 0;
					if(TI[i][tCashRace]) TI[i][tCashRace] = 0;
	                time_golod = 0;
	                golod_start = 1;
		    	    SendOk(i, "До старта ігри 10 секунд, советуем не покидать место до начала ігри");
					
					SetPlayerColor(i,0x56FB4EFF);
	                DelGun(i);
					SetPlayerPosAC(i,spawns_pos_golod[player_to_golod_id[i]-1][0],spawns_pos_golod[player_to_golod_id[i]-1][1],spawns_pos_golod[player_to_golod_id[i]-1][2],0,0);
					SetCameraBehindPlayer(i);
					SetPlayerHealth(i, 50);
					SetPlayerArmour(i, 0);
					TogglePlayerControllable(i, false);
					picks++;

					pickups_game_golod[picks] = CreateDynamicPickup(11745,23,pickup_game_golod[player_to_golod_id[i]-1][0],pickup_game_golod[player_to_golod_id[i]-1][1],pickup_game_golod[player_to_golod_id[i]-1][2],-1,-1);

	                for(new t; t != 6; t++) TextDrawShowForPlayer(i, td_game[t]);
					new string[24];
					format(string,sizeof(string),"$%d",money_in_golod);
					TextDrawSetString(td_game[5], string);
				}
			}
		}
	}
    new hour,minuite,second;
    gettime(hour,minuite,second);
    if(((hour == 12 && minuite == 30 || hour == 18 && minuite == 30  || hour == 21 && minuite == 30) && open_gamegolod == 0) || open_gamegolod == 999) {
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" Увага! Відкрита реєстрація на голодні ігри");
        SendClientMessageToAll(COLOR_GREY, "{cec710}[Центр розваг]"W" У вас є 10 хвилин для проходження реєстрації. (/gps > Громадські місця > Центр розваг)");
        time_gamegolod = 600;// время на регистрацию изменить после тестов на 600 (10 хвилин)
        money_in_golod = 0;
        players_in_golod = 0;
        open_gamegolod = 1;
        time_golod = 0;
        golod_start = 0;
        game_players[1] = 0;
        new string[70];
		format(string,sizeof(string),"Общий взнос: "O"$%d",money_in_golod);
		UpdateDynamic3DTextLabelText(golod_text,-1,string);
	}
	return 1;
}
stock golod_end(playerid) {
	if(player_to_golod[playerid] == 1) {
		player_to_golod[playerid] = 0;
		for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, td_game[t]);
		new random_spawn = random(sizeof spawns_pos_game_end);
		SetPlayerPosAC(playerid, spawns_pos_game_end[random_spawn][0],spawns_pos_game_end[random_spawn][1],spawns_pos_game_end[random_spawn][2],200,3);
		SetPlayerFacingAngle(playerid, spawns_pos_game_end[random_spawn][4]);
		SetPlayerArmour(playerid, 0);
		DelGun(playerid);

		if(PlayerInfo[playerid][pMember] && start_work[playerid]) {
			SetPlayerColor(playerid,gFractionSpawn[PlayerInfo[playerid][pMember]][fracColor]);
		}
		else SetPlayerColor(playerid,0xFFFFFF11);
	}
}
stock golod_gameover() {
	UpdateDynamic3DTextLabelText(golod_text,-1,"Общий взнос: "O"$0");
    time_gamegolod = 0;
    time_golod = 0;
    golod_start = 0;
    open_gamegolod = 0;
    players_in_golod = 0;
    money_in_golod = 0;
	for(new i; i != 21; i++) {
		if(pickups_game_golod[i] != -1) {
			DestroyDynamicPickup(pickups_game_golod[i]);
			pickups_game_golod[i] = -1;
		}
		if(pickups_game_golod_2[i] != -1) {
			DestroyDynamicPickup(pickups_game_golod_2[i]);
			pickups_game_golod_2[i] = -1;
		}
		if(objgolod[i] != -1) {
			DestroyDynamicObject(objgolod[i]);
			objgolod[i] = -1;
		}
	}
}
stock golod_deatch(playerid,ids) {
	player_to_golod[playerid] = 0;
	for(new t; t != 6; t++) TextDrawHideForPlayer(playerid, td_game[t]);
	new string[144];
	format(string, sizeof(string), ""NO"[Увага]"W" Гравець - "ORANGE"%s"W" погибает. Осталось в живых: "ORANGE"%d",player_name[playerid],ids);
	foreach(new i:Player) {
		if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
		if(!golod_start) continue;
		if(!player_to_golod[i]) continue;
		SendClientMessage(i,-1,string);
	}
}
stock golod_object(i) {
	objgolod[i] =  CreateDynamicObject(2903, pickup_game_obj[i][0], pickup_game_obj[i][1], pickup_game_obj[i][2], pickup_game_obj[i][3], pickup_game_obj[i][4], pickup_game_obj[i][5], -1, -1, -1, 300, 300);
	MoveDynamicObject(objgolod[i], pickup_game_objmoved[i][0], pickup_game_objmoved[i][1], pickup_game_objmoved[i][2], pickup_game_objmoved[i][3],0.0000,0.0000,0.0000);
}
stock save_diplomation(playerid,frac) {
	new query[90];
	mysql_format(connects, query, sizeof(query), "UPDATE `diplomation` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` =  '%d' LIMIT 1",
	f_diplomacy[PlayerInfo[playerid][pMember] - 15][0], f_diplomacy[PlayerInfo[playerid][pMember] - 15][1],
	f_diplomacy[PlayerInfo[playerid][pMember] - 15][2], f_diplomacy[PlayerInfo[playerid][pMember] - 15][3],
	f_diplomacy[PlayerInfo[playerid][pMember] - 15][4], f_diplomacy[PlayerInfo[playerid][pMember] - 15][5],
	f_diplomacy[PlayerInfo[playerid][pMember] - 15][6], f_diplomacy[PlayerInfo[playerid][pMember] - 15][7],frac);
	mysql_tquery(connects, query, "", "");
}
stock dialog_diplom(playerid,bool:type) {
	static const f_str[][] = { 
"{f6f6d9}Нейтралитет",
""NO"Война",
""GREEN"Союз",
""YELLOW"Запрос на союз",
""YELLOW"Запрос на союз"
	};
	new pvar_string[8], step;
	new string[310];
	for(new i = 0 ; i < 8; i ++) {
		if(i + 15 == PlayerInfo[playerid][pMember]) continue;
		
		format(pvar_string, 8, "d_%d", step);
		SetPVarInt(playerid, pvar_string, i + 15);
		
		strcat(string, "{");
		strcat(string, GetColorFrac(i + 15));
		strcat(string, "}");
		strcat(string, FI[i + 15][fName]);
		strcat(string, "\t");
		strcat(string, f_str[f_diplomacy[PlayerInfo[playerid][pMember] - 15][i]]);
		strcat(string, "\n");
		step++;
	}
	if(type == true) D(playerid, D_DIPLOMATION, DIALOG_STYLE_TABLIST, ""YELLOW"Дипломатия", string, "Вибрати", "Відміна");
	else D(playerid, DIALOG_NONE, DIALOG_STYLE_TABLIST, ""YELLOW"Дипломатия", string, "Закрити", "");
	return 1;
}
CB: joblist_callback(playerid, targetid) {
	new rows = cache_num_rows(),fields = 0;
	if(rows) {
		new string[3000];
		if(rows > 15) fields = rows - 15;
		format(string, 82, "Дата прийому\tДата звільнення\tРанг\t\tОрганізація\tДогани\tПричина\n");
		for(new i = fields; i < rows; i++) {
			new ji_dateinvite[16],
				ji_dateuninvite[16],
				ji_reason[48],
				ji_fraction,
				ji_warnings,
				ji_rang;

			new str[16 + 16 + 48 + 32 + 24];
			cache_get_value_name_int(i, "ji_fraction", ji_fraction);
			cache_get_value_name_int(i, "ji_warnings", ji_warnings);
			cache_get_value_name_int(i, "ji_rang", ji_rang);

			cache_get_value_name(i, "ji_date_invite", ji_dateinvite, 16);
			cache_get_value_name(i, "ji_date_uninvite", ji_dateuninvite, 16);
			cache_get_value_name(i, "ji_reason", ji_reason, 48);
			
			format(str, sizeof(str), ""W"%s\t%s\t\t%s(%d)\t%s\t%d\t\t%s\n",
															ji_dateinvite,
															ji_dateuninvite,
															GetRankName(ji_fraction,ji_rang),
															ji_rang,
															FI[ji_fraction][fName],
															ji_warnings,
															ji_reason);
			strcat(string, str);
		}
		D(targetid, DIALOG_NONE, DSM, ""YELLOW"Трудова книжка", string, "Закрити", "");
	}
	else return ErrorMessage(playerid, "Записи в трудовій книжці відсутні");
	return 1 ;
}
stock add_jobinfo(playerid,const string[]) {
	new query[310];
	format(query, sizeof(query), "INSERT INTO `jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_warnings`,`ji_rang`) SELECT `pID`, `fraction_date`, NOW(), '%s','%d','%d','%d' FROM `accounts` WHERE `pID` = '%d'",
	string, PlayerInfo[playerid][pMember], PlayerInfo[playerid][pfWarn],PlayerInfo[playerid][pRank], PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "", "" ) ;
}
stock off_add_jobinfo(const name[],const string[]) {
	new strings[200];
	format(strings, sizeof(strings), "SELECT `pID`,`pMember`,`pRank`,`fwarn` FROM `accounts` WHERE BINARY `Name` = '%s' LIMIT 1",name);
	new Cache:result = mysql_query(connects, strings);
	new rows = cache_num_rows();
	new id,member,warn,rank;
	if(rows) {
		cache_get_value_name_int(0, "pID",id);
		cache_get_value_name_int(0, "pMember",member);
		cache_get_value_name_int(0, "pRank",rank);
		cache_get_value_name_int(0, "fwarn",warn);
	}
    cache_delete(result);

    new query[310];
	format(query, sizeof(query), "INSERT INTO `jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_warnings`,`ji_rang`) SELECT `pID`, `fraction_date`, NOW(), '%s','%d','%d','%d' FROM `accounts` WHERE `pID` = '%d'",
	string, member, warn,rank, id);
	mysql_tquery(connects, query, "", "" ) ;
	return 1;
}
stock add_datefrac(playerid) {
	new query[100];
	format(query,sizeof(query),"UPDATE `accounts` SET `fraction_date` = NOW() WHERE `pID` = '%d' LIMIT 1",PlayerInfo[playerid][pID]);
	mysql_tquery(connects, query, "", "" ) ;
}
stock IsValidVehicleModel(modelid) { // Проверка на существующую модель транспорта
	if(modelid >= 400 && modelid <= 611) {
		return true;
	}
	return false;
}
SetVehicleSpeed(vehicleid, Float:speed) {
    if(speed <= 0) return true;
    new Float: speed_X, Float: speed_Y, Float: speed_Z;
    GetVehicleVelocity(vehicleid, speed_X, speed_Y, speed_Z);
  
    new Float:test = floatsqroot(floatadd(floatadd(floatpower(speed_X, 2), floatpower(speed_Y, 2)),  floatpower(speed_Z, 2))) * 100.3;
    new Float:dif =  speed / test;
        
    if(dif != 0 && test != 0) SetVehicleVelocity(vehicleid, speed_X*dif, speed_Y*dif, speed_Z);
    return true;
}
stock perfomans_engine(playerid) {
	new vehicleid = GetPlayerVehicleID(playerid);
	new string[750];
	new str[100];

	new price[5],seller[5];

	for(new i; i < 5; i++) {
		if(VehicleInfo[vehicleid][vPEngine][i]) format(str,sizeof(str), ""W"%s "YELLOW"[+ %.1f %s]\t"GREEN"встановлено\n", engine_name[i],engine_name_boost[i],"%");
		else {
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				seller[i] = floatround(engine_name_price[i]/100*vip_status[PlayerInfo[playerid][pVips]][vip_perfonans]);
				price[i] = (engine_name_price[i]-seller[i]);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[i] = floatround(engine_name_price[i]/100*BonusInfo[act_perfomance]);
					price[i] = (engine_name_price[i]-seller[i]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[i] = floatround(engine_name_price[i]/100*BonusInfo[act_perfomance]);
					price[i] = (engine_name_price[i]-seller[i]);
				}
			    else price[i] = engine_name_price[i];
			}
		    format(str, sizeof(str), "{f6f6d9}%s "YELLOW"[+ %.1f %s]\t"ORANGE"$%d\n", engine_name[i],engine_name_boost[i],"%", price[i]);
		}
		strcat(string, str);
	}
	D(playerid, D_PERF_ENGINE, DIALOG_STYLE_TABLIST, ""YELLOW"Покращення двигуна", string, "Купити", "Назад");
}
stock perfomans_brake(playerid) {
	new vehicleid = GetPlayerVehicleID(playerid);
	new string[700];
	new str[100];

	new price[5],seller[5];

	for(new i; i < 5; i ++) {
		if(VehicleInfo[vehicleid][vPBrake][i]) format(str, sizeof(str), ""W"%s "YELLOW"[+ %.1f %s]\t"GREEN"встановлено\n", brake_name[i],brake_name_boost[i],"%");
		else {
			if(PlayerInfo[playerid][pVips] == VIP_PLATINA || PlayerInfo[playerid][pVips] == VIP_ECSCLUSIVE || PlayerInfo[playerid][pVips] == VIP_FOREVER) {
				seller[i] = floatround(brake_name_price[i]/100*vip_status[PlayerInfo[playerid][pVips]][vip_perfonans]);
				price[i] = (brake_name_price[i]-seller[i]);
			}
			else {
				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) {
					seller[i] = floatround(brake_name_price[i]/100*BonusInfo[act_perfomance]);
					price[i] = (brake_name_price[i]-seller[i]);
				}
				else if(BonusInfo[act_select] == 2) {
					seller[i] = floatround(brake_name_price[i]/100*BonusInfo[act_perfomance]);
					price[i] = (brake_name_price[i]-seller[i]);
				}
			    else price[i] = brake_name_price[i];
			}
		    format(str, sizeof(str), "{f6f6d9}%s "YELLOW"[+ %.1f %s]\t"ORANGE"$%d\n", brake_name[i],brake_name_boost[i],"%", price[i]);
		}
		strcat(string, str);
	}		
	D(playerid, D_PERF_BRAKE, DIALOG_STYLE_TABLIST, ""YELLOW"Тормозная система", string, "Купити", "Назад");
}
stock GetVehicleRotation(vehicleid,&Float:rx,&Float:ry,&Float:rz) {
	new Float:qw,Float:qx,Float:qy,Float:qz;
	GetVehicleRotationQuat(vehicleid,qw,qx,qy,qz);
	rx = asin(2*qy*qz-2*qx*qw ) ;
	ry = -atan2(qx*qz+qy*qw,0.5-qx*qx-qy*qy);
	rz = -atan2(qx*qy+qz*qw,0.5-qx*qx-qz*qz);
}
stock RemovePlayerFromVehicleAC(playerid) {
	RemovePlayerFromVehicle(playerid);
	return true;
}
DamageActive(playerid) {
	if(PlayerInfo[playerid][pSettings][10]) return true;
	return false;
}
PlayerSpectate(playerid) {
	return TI[playerid][tSpectr];
}
public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &weapon, &bodypart) {
	if(issuerid != INVALID_PLAYER_ID) {
		if(0 <= weapon <= 46 && playerid != INVALID_PLAYER_ID) {
			if(TI[issuerid][tAFK] >= 3 || PlayerInfo[issuerid][pJailTime]) return false;
			else if(player_gm{playerid}) return false;
			else if(weapon == 3 || (TI[issuerid][tTazers][0] > 0 && weapon == TI[issuerid][tTazers][1])) {
				if(!TI[playerid][tTazer] ) {
					if(IsACop(issuerid)) {
						if(TI[issuerid][tTazers][0] > 0 && weapon != 3) {
							TI[issuerid][tTazers][0]--;
							if(TI[issuerid][tTazers][0] == 0) {
								ErrorMessage(issuerid, "Парализующие боєприпаси закончены. Следующая зарядка через 2 хвилины");
								SetPVarInt(issuerid ,"tazershoottime", unix + 60*2);
								TI[issuerid][tTazers][0] = 0;
								TI[issuerid][tTazers][1] = 0;
							}
						}
						switch(GetPlayerAnimationIndex(issuerid)) {
							case 17: SetTimerEx("UnTazer",5 * 1000, 0, "i", playerid);
							case 18: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
							case 19: SetTimerEx("UnTazer",15 * 1000, 0, "i", playerid);
							default: SetTimerEx("UnTazer",10 * 1000, 0, "i", playerid);
						}
						SendClientMessage(issuerid, COLOR_GREY, "Натисніть "YELLOW"N{f6f6d9} около гравця щоб сковать его");
						TI[playerid][tTazers][2] = issuerid;
						TI[issuerid][tTazers][2] = playerid;
						TI[playerid][tTazer] = true;
						TogglePlayerControllable(playerid,false);
						ApplyAnimation(playerid, "PED", "FLOOR_hit_f", 4.0, 0, 1, 1, 1, 0, 1);
						new string[60];
						format(string,sizeof(string),"оглушил(а) %s",player_name[playerid]);
						MeAction(issuerid,string);
						return false;
					}
				}
			}
			if(weapon != 43 && weapon != 9 && GetPlayerSpecialAction(issuerid) != SPECIAL_ACTION_DRINK_SPRUNK && GetPlayerSpecialAction(issuerid) != SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(issuerid) != SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(issuerid)!=SPECIAL_ACTION_DRINK_BEER) {
				if(!IsACop(issuerid) && !IsAArm(issuerid) && PlayerInfo[issuerid][pMember] != fWHITEHOUSE && IsAGreenZone(issuerid)) {
					anti_dm{issuerid} ++;
					D(issuerid, DIALOG_NONE, DSM, ""YELLOW"Предупреждение","\n\n"W"В данном месте запрещено драться\n"NO"*{f6f6d9} В случае повторных нарушений Вы будете кикнуты", "Закрити", "" );
					if(anti_dm{issuerid} >= 5) {
						ErrorMessage(issuerid,"Ви были кикнуты за попытки DM в зеленой зоне");
						Kick(issuerid);
					}
					return false;
				}
				if(anti_tk) {
					if(PlayerInfo[issuerid][pMember] == PlayerInfo[playerid][pMember] && FI[PlayerInfo[playerid][pMember]][fAntiTK] && TI[playerid][tDuel] == -1 && TI[issuerid][tDuel] == -1 && player_to_game[issuerid] == 0 && player_to_golod[issuerid] == 0 && TI[issuerid][tGunArea][0] == 0 && TI[issuerid][tDMArea][0] == 0) {
						ErrorMessage(issuerid,"Запрещено наносить урон членам своей організації");
						return false;
					}
				}
			}
		}
	}
	return true;
}
stock dialog_bonuses(playerid) {
	static const f_str[] = "Найменування\tФактор\n\
"W"Пришвидшена прокачка опиту\t"YELLOW"%d x\n\
"W"Пришвидшена прокачка скіла зброї\t"YELLOW"%d x\n\
"W"Пришвидшена прокачка скіла удара по груші\t"YELLOW"%d x\n\
"W"Приз в заходах развл. центра\t"YELLOW"%d x\n\
"W"Створення зброї\t"YELLOW"%d x\n\
"W"Збільшений улов риби\t"YELLOW"%d x\n\
"W"Знижка на оренду номера в готелі\t"YELLOW"%d %%\n\
"W"Знижка на покупку скина\t"YELLOW"%d %%\n\
"W"Знижка на покупку транспорта\t"YELLOW"%d %%\n\
"W"Знижка на аренду транспорта\t"YELLOW"%d %%\n\
"W"Знижка на покупку ліцензій\t"YELLOW"%d %%\n\
"W"Знижка на покупку покращень в будинок\t"YELLOW"%d %%\n\
"W"Знижка на лікування захворювань\t"YELLOW"%d %%\n\
"W"Знижка на зміну статі в лікарні\t"YELLOW"%d %%\n\
"W"Знижка на отримання мед. карти\t"YELLOW"%d %%\n\
"W"Знижка на покупку номерів ТС\t"YELLOW"%d %%\n\
"W"Знижка на покращення в Perfomance Tune\t"YELLOW"%d %%\n\
"W"Знижка на тюнинг в Автомайстерні\t"YELLOW"%d %%\n\
"W"Час для отримання бонусного кейса\t"YELLOW"%d мін\n\
"W"Промокод\t"YELLOW"%d x\n\
"W"Pay Day (ЗП)\t"YELLOW"%d x\n\
"W"Донат\t"YELLOW"%d x\n\
\
";
	new string[sizeof(f_str) + 50];
	format(string,sizeof(string),f_str,
		BonusInfo[act_exp],
		BonusInfo[act_skill],
		BonusInfo[act_sport],
		BonusInfo[act_mp],
		BonusInfo[act_gun],
		BonusInfo[act_fish],
		BonusInfo[act_renthotel],
		BonusInfo[act_buyskin],
		BonusInfo[act_buycar],
		BonusInfo[act_rentcar],
		BonusInfo[act_buylic],
		BonusInfo[act_buyimprove],
		BonusInfo[act_disease],
		BonusInfo[act_changesex],
		BonusInfo[act_medcard],
		BonusInfo[act_buynubmbercar],
		BonusInfo[act_perfomance],
		BonusInfo[act_tune],
		BonusInfo[act_timerullet],
		BonusInfo[act_promocode],
		BonusInfo[act_payday],
		BonusInfo[act_donate]);
	D(playerid, D_BONUSES, DSTH, ""YELLOW"Керування бонусами",string, "Змінити", "Закрити");
	return 1;
}
stock accs_select(playerid, id) {
	if(GetPVarInt(playerid,"buy_accses")) {
		new price;
		switch(type_acces[playerid]) {
			case 1: {
				new max_accs = sizeof(acces_id_glass)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_glass[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_glass[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_glass[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 2: {
				new max_accs = sizeof(acces_id_hat)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_hat[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_hat[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_hat[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 3: {
				new max_accs = sizeof(acces_id_bonnet)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_bonnet[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_bonnet[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_bonnet[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 4: {
				new max_accs = sizeof(acces_id_cap)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_cap[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_cap[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_cap[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 5: {
				new max_accs = sizeof(acces_id_beret)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_beret[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_beret[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_beret[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 6: {
				new max_accs = sizeof(acces_id_bandanas)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_bandanas[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_bandanas[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_bandanas[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 7: {
				new max_accs = sizeof(acces_id_panam)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_panam[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_panam[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_panam[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 8: {
				new max_accs = sizeof(acces_id_sporthat)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_sporthat[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_sporthat[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_sporthat[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 9: {
				new max_accs = sizeof(acces_id_kask)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_kask[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_kask[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_kask[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 10: {
				new max_accs = sizeof(acces_id_mask)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_mask[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_mask[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_mask[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 11: {
				new max_accs = sizeof(acces_id_headphones)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_headphones[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_headphones[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_headphones[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 12: {
				new max_accs = sizeof(acces_id_watch)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_watch[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_watch[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_watch[GetPVarInt(playerid,"acs_select")][0]);
			}
			case 13: {
				new max_accs = sizeof(acces_id_backpack)-1;
				if(id == 0) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")+1);
					if(GetPVarInt(playerid,"acs_select") >= max_accs) SetPVarInt(playerid,"acs_select",0);
				}
				else if(id == 1) {
					SetPVarInt(playerid,"acs_select",GetPVarInt(playerid,"acs_select")-1);
					if(GetPVarInt(playerid,"acs_select") <= 0) SetPVarInt(playerid,"acs_select",max_accs);
				}
				AtachPlayerAcces(playerid, acces_id_backpack[GetPVarInt(playerid,"acs_select")][0],GetPlayerSkin(playerid));
				price = acces_id_backpack[GetPVarInt(playerid,"acs_select")][1];
				SetPVarInt(playerid,"id_acs",acces_id_backpack[GetPVarInt(playerid,"acs_select")][0]);
			}
		}
   		SetPVarInt(playerid, "price_acs", price);
		new string[12];
		format(string,sizeof(string),"$%d",price);
		PlayerTextDrawSetString(playerid,buy_player_skins[playerid],string);
	}
 	return 1;
}
stock accs_close(playerid) {
	new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
	GetPlayerCameraPos(playerid,x,y,z);
	InterpolateCameraPos(playerid,x,y,z,212.5107 + (2.5 * floatsin(-89.8527, degrees)), -41.5253 + (2.5 * floatcos(-89.8527, degrees)), 1002.0234,1200);
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,212.5107,-41.5253,1002.0234,1200);
	buyacces(playerid);
	return 1;
}
public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle) {
	print ("[OnQueryError] SQL ERROR. QUERY:") ;
	return print ( query ) ;
}
stock reputation_family(family,point) {
	gFamily[family][famExp] += point;
	if(gFamily[family][famExp] < 0) gFamily[family][famExp] = 0;
	if(gFamily[family][famExp] >= fam_point_upgrade[gFamily[family][famLvl]-1]) {
		gFamily[family][famLvl]++;
		gFamily[family][famExp] = 0;
		UpdateFamily(family+1,"lvl",gFamily[family][famLvl]);
	}
	gFamily[family][famPoint] += point;
	if(gFamily[family][famPoint] < 0) gFamily[family][famPoint] = 0;
	UpdateFamily(family+1,"point",gFamily[family][famPoint]);
	UpdateFamily(family+1,"exp",gFamily[family][famExp]);
}
stock SetPlayerPosAC(playerid, Float:x, Float:y, Float:z, world, interior, setUP = false) {
    if(playerid != INVALID_PLAYER_ID) {
        if(!setUP) {
            if(TI[playerid][tVirtualWorld] != world) {
                TI[playerid][tVirtualWorld] = world;
                SetPlayerVirtualWorld(playerid, world);
            }
            if(TI[playerid][tInterior] != interior) {
                TI[playerid][tInterior] = interior;
                SetPlayerInterior(playerid, interior);
                //
                if(!interior) SetPlayerTime(playerid,tmphour, tmpminute);
                else SetPlayerTime(playerid,11, 00);
            }
        }
        else {
            SetPlayerVirtualWorld(playerid, world);
            SetPlayerInterior(playerid, interior);
            //
            if(!interior) SetPlayerTime(playerid,tmphour, tmpminute);
            else SetPlayerTime(playerid,11, 00);
        }
        //
        SetPlayerPos(playerid, x, y, z);
    }
}
stock auto_news(slot,playerid) {
	format(gAdvert[slot][adSender],24,"%s",player_name[playerid]);
	gAdvert[slot][adID] = playerid;
	gAdvert[slot][adPhone] = PlayerInfo[playerid][pPhone];
	gAdvert[slot][adBusy] = true;
	gAdvert[slot][adTime] = gAdvertTime;
	gAdvertTime += 30;

	SetString(gAdvert[slot][adCheker],"Name Bot");
	
	gAdvert[slot][adCheking] = false;
	gAdvert[slot][adCheked] = true;

	SendOk(playerid,"Оголошення подано в редакцию. Очікуйте публікації");
}

stock Float:GetSpeed(Float:x = 0.0, Float:y = 0.0, Float:z = 0.0) {             // швидкість
	return floatsqroot((x * x) + (y * y) + (z * z)) * 100.0;
}
stock SearchIndex(index, ...) {                                                 // Поиск нужного значения
	for(new id = (numargs() - 1); id >= 1; --id) {
		if(index == getarg(id)) {
            return true;
		}
	}
    return false;
}
CB: StartDrawing(playerid) {
	SendOk(playerid,"Ви начали рисовать граффити");
	SetPVarInt(playerid, "SettingGraffiti", 1);
	graf_timer[playerid] = SetTimerEx("graffity", 5000, 0, "i", playerid);
	return 1;
}
GraffitiDone(playerid) {
	if(!GetPVarInt(playerid, "SettingGraffiti")) return 1;
	new obj;
	switch(PlayerInfo[playerid][pMember]) {
		case 0: obj = 18666;
		case 20: obj = 18659;
		case 21: obj = 18661;
		case 22: obj = 18663;
		case 18: obj = 18664;
		case 19: obj = 18665;//вагос
	}
	DestroyDynamicObject(GrafInfo[GetPVarInt(playerid,"Grafity")][gObject]);
	GrafInfo[GetPVarInt(playerid,"Grafity")][gObject] = CreateDynamicObject(obj, GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][0], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][1], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][2], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][3], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][4], GrafInfo[GetPVarInt(playerid,"Grafity")][gr_x][5]);
	GrafInfo[GetPVarInt(playerid,"Grafity")][gFrak] = PlayerInfo[playerid][pMember];

	if(GetPVarInt(playerid, "SettingGraffiti") == 1) DeletePVar(playerid, "SettingGraffiti");
	GameTextForPlayer(playerid,"~g~GOOD", 1000, 5);
	Streamer_Update(playerid);
	new query[128];
	format(query,sizeof(query),"UPDATE `graffity` SET `gGang` = '%d' WHERE `gID` = '%d'",PlayerInfo[playerid][pMember],GetPVarInt(playerid,"Grafity"));
	mysql_tquery(connects, query);
	if(PlayerInfo[playerid][pMember]) add_gang_points(PlayerInfo[playerid][pMember],1);
	return 1;
}

GraffitiFailed(playerid) {
	if(GetPVarInt(playerid, "SettingGraffiti") == 1) {
		DeletePVar(playerid, "SettingGraffiti");
	}
	GameTextForPlayer(playerid,"~r~FAILED", 1000, 5);
	return 1;
}
CB: graffity(playerid) {
	GraffitiDone(playerid);
	return 1;
}
start_invets() {
	new hour,minuite,second;
    gettime(hour,minuite,second);
	if(((hour == 15 && minuite == 00 || hour == 18 && minuite == 00  || hour == 21 && minuite == 00) && start_invent == 0) || start_invent == 999) {
		new rand = random(5);
		switch(rand) {
			case 0: {
				invent_object[0] = CreateDynamicObject(10230, 2104.242676, -133.861801, 6.500231, -0.000015, 0.000174, -55.608521, -1, -1);
				invent_object[1] = CreateDynamicObject(10140, 2111.754150, -146.703476, 6.655522, -0.000015, 0.000174, -55.608521, -1, -1);
				invent_object[2] = CreateDynamicObject(10229, 2102.900635, -134.403580, 5.371629, -0.000015, 0.000174, -55.600094, -1, -1);
				invent_object[3] = CreateDynamicObject(10231, 2102.458984, -133.932190, 7.968227, 0.000015, 0.000174, -55.608521, -1, -1);
				invent_object[4] = CreateDynamicObject(2358, 2112.021973, -151.625534, 7.080909, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[5] = CreateDynamicObject(2358, 2109.310303, -149.975220, 5.742988, 0.000000, 0.000000, 32.999996, -1, -1);
				invent_object[6] = CreateDynamicObject(2358, 2110.861572, -151.375900, 5.732987, 0.000000, 0.000000, -143.300095, -1, -1);
				invent_object[7] = CreateDynamicObject(2973, 2107.790039, -149.040421, 5.512980, 0.000000, 0.000000, 32.500000, -1, -1);
				invent_object[8] = CreateDynamicObject(2358, 2108.951904, -150.168488, 5.982986, 0.000000, 0.000000, 29.200003, -1, -1);
				invent_object[9] = CreateDynamicObject(2358, 2108.569092, -150.460464, 5.732983, 0.000000, 0.000000, 32.400024, -1, -1);
				invent_object[10] = CreateDynamicObject(2358, 2109.066895, -151.921326, 5.702985, 0.000000, 0.000000, 151.700012, -1, -1);
				invent_object[11] = CreateDynamicObject(3576, 2111.075684, -153.540909, 7.062979, 0.000000, 0.000000, 28.000000, -1, -1);
				invent_object[12] = CreateDynamicObject(1472, 2099.938477, -105.594109, 0.563136, 0.000000, 0.000000, -56.399986, -1, -1);

				invent_area = CreateDynamicSphere(2111.1006,-149.9893,6.6330,1.0,0,0);
				invent_pickup = CreateDynamicPickup(2358,1,2111.1006,-149.9893,6.6330);

				invent_text = CreateDynamic3DTextLabel("Доступно боєприпасів: "YELLOW"1000000"W"\nКорабль отплывает через: "YELLOW"10:00",-1,2111.1006,-149.9893,6.6330,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

				invent_car[0] = A_AddStaticVehicleEx(573, 2152.5193,-91.2772,2.3182,123.1225, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[1] = A_AddStaticVehicleEx(573, 2149.1650,-86.3414,2.3560,124.3310, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[2] = A_AddStaticVehicleEx(573, 2146.0286,-81.4231,2.4411,122.8258, 0, 0, 100000,VEHICLE_TYPE_INVENT);
			}
			case 1: {
				invent_object[0] = CreateDynamicObject(10140, 388.085083, 264.257263, 6.661983, -0.000015, 0.000174, -131.308578, -1, -1);
				invent_object[1] = CreateDynamicObject(10230, 398.622955, 274.655975, 6.506702, -0.000015, 0.000174, -131.308578, -1, -1);
				invent_object[2] = CreateDynamicObject(10229, 397.673889, 275.712158, 5.388098, -0.000015, 0.000174, -131.300156, -1, -1);
				invent_object[3] = CreateDynamicObject(10231, 398.119781, 276.375153, 7.974698, 0.000015, 0.000174, -131.308578, -1, -1);
				invent_object[4] = CreateDynamicObject(12990, 436.394989, 275.091095, -0.050209, 1.000000, 0.000000, 47.499973, -1, -1);
				invent_object[5] = CreateDynamicObject(2358, 386.990723, 266.496460, 5.759471, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[6] = CreateDynamicObject(2358, 384.485931, 263.138000, 5.729457, 0.000000, 0.000000, 97.600006, -1, -1);
				invent_object[7] = CreateDynamicObject(2358, 384.953461, 264.630249, 5.779465, 0.000000, 0.000000, 51.899998, -1, -1);
				invent_object[8] = CreateDynamicObject(2358, 383.429321, 263.491211, 7.287386, 0.000000, 0.000000, 90.299980, -1, -1);
				invent_object[9] = CreateDynamicObject(3576, 381.759094, 262.642273, 7.109454, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[10] = CreateDynamicObject(2973, 384.754761, 267.181152, 5.489464, 0.000000, 0.000000, 0.000000, -1, -1);

				invent_area = CreateDynamicSphere(386.5243,264.7455,6.6395,1.0,0,0);
				invent_pickup = CreateDynamicPickup(2358,1,386.5243,264.7455,6.6395);

				invent_text = CreateDynamic3DTextLabel("Доступно боєприпасів: "YELLOW"1000000"W"\nКорабль отплывает через: "YELLOW"10:00",-1,386.5243,264.7455,6.6395,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

				invent_car[0] = A_AddStaticVehicleEx(573, 449.0636,285.7321,3.7312,320.7332, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[1] = A_AddStaticVehicleEx(573, 454.3954,281.5191,5.5157,319.2804, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[2] = A_AddStaticVehicleEx(573, 459.3694,277.7152,6.8065,319.4318, 0, 0, 100000,VEHICLE_TYPE_INVENT);
			}
			case 2: {
				invent_object[0] = CreateDynamicObject(10230, -618.381897, 1340.657104, 6.505430, -0.000015, 0.000174, 95.691437, -1, -1);
				invent_object[1] = CreateDynamicObject(10231, -616.775391, 1339.923828, 7.973426, 0.000015, 0.000174, 95.691437, -1, -1);
				invent_object[2] = CreateDynamicObject(10229, -616.941162, 1340.523560, 5.376828, -0.000015, 0.000174, 95.699867, -1, -1);
				invent_object[3] = CreateDynamicObject(10140, -618.797607, 1355.524414, 6.660633, -0.000015, 0.000174, 95.691437, -1, -1);
				invent_object[4] = CreateDynamicObject(12990, -644.423584, 1311.956177, -0.184137, -0.200000, 0.000000, 95.600082, -1, -1);
				invent_object[5] = CreateDynamicObject(2973, -614.349304, 1355.592896, 5.538197, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[6] = CreateDynamicObject(2358, -616.204956, 1355.847046, 5.778196, 0.000000, 0.000000, -115.699989, -1, -1);
				invent_object[7] = CreateDynamicObject(2358, -613.962769, 1357.898682, 5.758193, 0.000000, 0.000000, -83.699997, -1, -1);
				invent_object[8] = CreateDynamicObject(2358, -614.326294, 1359.169067, 5.838187, 0.000000, 0.000000, -36.499996, -1, -1);
				invent_object[9] = CreateDynamicObject(2358, -615.542480, 1359.478149, 6.936115, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[10] = CreateDynamicObject(2358, -616.904968, 1359.828491, 5.728176, 0.000000, 0.000000, -32.299999, -1, -1);
				invent_object[11] = CreateDynamicObject(3576, -615.659912, 1360.812622, 6.638184, 0.000000, 0.000000, 23.200003, -1, -1);

				invent_area = CreateDynamicSphere(-616.5085,1357.8522,6.6382,1.0,0,0);
				invent_pickup = CreateDynamicPickup(2358,1,-616.5085,1357.8522,6.6382);

				invent_text = CreateDynamic3DTextLabel("Доступно боєприпасів: "YELLOW"1000000"W"\nКорабль отплывает через: "YELLOW"10:00",-1,-616.5085,1357.8522,6.6382,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

				invent_car[0] = A_AddStaticVehicleEx(573, -655.0260,1301.3538,2.9825,196.5188, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[1] = A_AddStaticVehicleEx(573, -660.4362,1299.8541,4.3086,194.7582, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[2] = A_AddStaticVehicleEx(573, -666.5983,1297.9779,5.4421,197.0744, 0, 0, 100000,VEHICLE_TYPE_INVENT);
			}
			case 3: {
				invent_object[0] = CreateDynamicObject(11544, -2082.449951, 1437.092285, 6.508672, 0.000000, 0.000001, -179.199966, -1, -1);
				invent_object[1] = CreateDynamicObject(11544, -2082.434570, 1439.656372, 6.495479, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[2] = CreateDynamicObject(10230, -2117.358643, 1446.714600, 6.509205, -0.000015, 0.000174, 179.691528, -1, -1);
				invent_object[3] = CreateDynamicObject(10231, -2116.444336, 1448.221802, 7.977202, 0.000015, 0.000174, 179.691528, -1, -1);
				invent_object[4] = CreateDynamicObject(10229, -2117.089355, 1448.167603, 5.380603, -0.000015, 0.000174, 179.699951, -1, -1);
				invent_object[5] = CreateDynamicObject(10140, -2132.064453, 1447.862061, 6.664429, -0.000015, 0.000174, 179.691528, -1, -1);
				invent_object[6] = CreateDynamicObject(3576, -2132.250732, 1452.117065, 6.641973, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[7] = CreateDynamicObject(2358, -2133.795410, 1451.087524, 5.721964, 0.000000, 0.000000, -86.299973, -1, -1);
				invent_object[8] = CreateDynamicObject(2358, -2133.871826, 1452.299805, 5.761968, 0.000000, 0.000000, -89.000015, -1, -1);
				invent_object[9] = CreateDynamicObject(2358, -2136.068848, 1451.279175, 5.761960, 0.000000, 0.000000, 87.800003, -1, -1);
				invent_object[10] = CreateDynamicObject(2358, -2135.206787, 1453.409668, 5.741961, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[11] = CreateDynamicObject(2973, -2137.604004, 1451.545532, 5.641953, 0.000000, 0.000000, 0.000000, -1, -1);

				invent_area = CreateDynamicSphere(-2134.9451,1451.1205,6.6420,1.0,0,0);
				invent_pickup = CreateDynamicPickup(2358,1,-2134.9451,1451.1205,6.6420);

				invent_text = CreateDynamic3DTextLabel("Доступно боєприпасів: "YELLOW"1000000"W"\nКорабль отплывает через: "YELLOW"10:00",-1,-2134.9451,1451.1205,6.6420,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

				invent_car[0] = A_AddStaticVehicleEx(573, -2076.9006,1431.4683,6.8104,1.0114, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[1] = A_AddStaticVehicleEx(573, -2088.0339,1431.6237,6.8120,0.4476, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[2] = A_AddStaticVehicleEx(573, -2093.4871,1431.5728,6.8097,0.4905, 0, 0, 100000,VEHICLE_TYPE_INVENT);
			}
			case 4: {
				invent_object[0] = CreateDynamicObject(10140, -1181.576294, -2058.731934, 6.755518, -0.000015, 0.000174, 99.991577, -1, -1);
				invent_object[1] = CreateDynamicObject(10230, -1180.033203, -2073.431641, 6.600316, -0.000015, 0.000174, 99.991577, -1, -1);
				invent_object[2] = CreateDynamicObject(10229, -1178.627441, -2073.492676, 5.471714, -0.000015, 0.000174, 100.000008, -1, -1);
				invent_object[3] = CreateDynamicObject(10231, -1178.388428, -2074.077881, 8.068312, 0.000015, 0.000174, 99.991577, -1, -1);
				invent_object[4] = CreateDynamicObject(2358, -1180.716919, -2052.462891, 5.863063, 0.000000, 0.000000, -64.299995, -1, -1);
				invent_object[5] = CreateDynamicObject(2358, -1179.489258, -2057.641357, 5.843081, 0.000000, 0.000000, -75.900009, -1, -1);
				invent_object[6] = CreateDynamicObject(2358, -1179.171021, -2054.212158, 5.843069, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[7] = CreateDynamicObject(2973, -1178.781128, -2052.540283, 5.733065, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[8] = CreateDynamicObject(2358, -1178.232910, -2054.296875, 5.803070, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[9] = CreateDynamicObject(3576, -1177.878052, -2057.660645, 6.733084, 0.000000, 0.000000, 0.000000, -1, -1);
				invent_object[10] = CreateDynamicObject(2358, -1176.896606, -2055.341797, 5.873070, 0.000000, 0.000000, -84.200005, -1, -1);

				invent_area = CreateDynamicSphere(-1180.3551,-2055.5645,6.7331,1.0,0,0);
				invent_pickup = CreateDynamicPickup(2358,1,-1180.3551,-2055.5645,6.7331);

				invent_text = CreateDynamic3DTextLabel("Доступно боєприпасів: "YELLOW"1000000"W"\nКорабль отплывает через: "YELLOW"30:00",-1,-1180.3551,-2055.5645,6.7331,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, -1, -1);

				invent_car[0] = A_AddStaticVehicleEx(573, -1263.8719,-2109.1672,24.7768,102.9227, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[1] = A_AddStaticVehicleEx(573, -1262.1937,-2115.2349,25.4879,101.4348, 0, 0, 100000,VEHICLE_TYPE_INVENT);
				invent_car[2] = A_AddStaticVehicleEx(573, -1260.6613,-2121.5640,26.2166,102.8287, 0, 0, 100000,VEHICLE_TYPE_INVENT);
			}
		}
		SendCop(0x54548CFF,"Сухогруз Name прибыл в San Andreas. Отплытие через 30 хвилин");
		SendCop(0x54548CFF,"Подсказка: В каждом ящике по 5000 патронів. За вбивство гравця из нелегальної організації легальной виплачується 3.000 $, наоборот 1.500 ");

		SendArmy(0x54548CFF,"Сухогруз Name прибыл в San Andreas. Отплытие через 30 хвилин");
		SendArmy(0x54548CFF,"Подсказка: В каждом ящике по 5000 патронів. За вбивство гравця из нелегальної організації легальной виплачується 3.000 $, наоборот 1.500 ");

		SendBand(0x54548CFF,"Сухогруз Name прибыл в San Andreas. Отплытие через 30 хвилин");
		SendBand(0x54548CFF,"Подсказка: В каждом ящике по 5000 патронів. За вбивство гравця из нелегальної організації легальной виплачується 3.000 $, наоборот 1.500 ");

		invent_zone_id = rand;
		invent_zone = GangZoneCreate(invent_place[invent_zone_id][0],invent_place[invent_zone_id][1],invent_place[invent_zone_id][2],invent_place[invent_zone_id][3]);
		GangZoneShowForAll(invent_zone,COLOR_RED);
		GangZoneFlashForAll(invent_zone, COLOR_RED);

		SetVehicleHealth(invent_car[0],10000.0);
		VehicleInfo[invent_car[0]][vFuel] = 100.0;
		SetVehicleHealth(invent_car[1],10000.0);
		VehicleInfo[invent_car[1]][vFuel] = 100.0;
		SetVehicleHealth(invent_car[2],10000.0);
		VehicleInfo[invent_car[2]][vFuel] = 100.0;

		start_invent = 1;
		invent_time = unix + 600*3;
		invent_mats =  1000000;
	}
}
public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z) {
	if(IsValidDynamicObject(objectid)) {
		switch(Streamer_GetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_MODEL_ID)) {                                                     
			case 1551,1664: //1664 еще ид бутылки            
			{   
				new skills;
				new vipskills;

				if(PlayerInfo[playerid][pLevel] <= BonusInfo[act_level] && BonusInfo[act_select] == 1) skills = BonusInfo[act_skill],vipskills = BonusInfo[act_skill] + 1;
				else if(BonusInfo[act_select] == 2) skills = BonusInfo[act_skill],vipskills = BonusInfo[act_skill] + 1;
			    else skills = 1,vipskills = 2;
				switch(weaponid) {
					case 23: {
						SetPVarInt(playerid, "SkillSD",GetPVarInt(playerid, "SkillSD") +1);
						if(GetPVarInt(playerid, "SkillSD") >= Ammo_SDPISTOL && PlayerInfo[playerid][pGunSkill][0] < 100) {
							if(PlayerInfo[playerid][pVips]) PlayerInfo[playerid][pGunSkill][0]+=vipskills;
							else PlayerInfo[playerid][pGunSkill][0] += skills;
							SetPVarInt(playerid, "SkillSD",0);
							texdraw_skill(playerid,0);
						}
					}
					case 24: {
						SetPVarInt(playerid, "SkillD",GetPVarInt(playerid, "SkillD") +1);
						if(GetPVarInt(playerid, "SkillD") >= Ammo_DEAGLE && PlayerInfo[playerid][pGunSkill][1] < 100) {
							if(PlayerInfo[playerid][pVips]) PlayerInfo[playerid][pGunSkill][1]+=vipskills;
							else PlayerInfo[playerid][pGunSkill][1] += skills;
							SetPVarInt(playerid, "SkillD",0);
							texdraw_skill(playerid,1);
						}
					}
					case 25: {
						SetPVarInt(playerid, "SkillShot",GetPVarInt(playerid, "SkillShot") +1);
						if(GetPVarInt(playerid, "SkillShot") >= Ammo_SHOTGUN && PlayerInfo[playerid][pGunSkill][2] < 100) {
							if(PlayerInfo[playerid][pVips]) PlayerInfo[playerid][pGunSkill][2]+=vipskills;
							else PlayerInfo[playerid][pGunSkill][2] += skills;
							SetPVarInt(playerid, "SkillShot",0);
							texdraw_skill(playerid,2);
						}
					}
					case 29: {
						SetPVarInt(playerid, "SkillMP5",GetPVarInt(playerid, "SkillMP5") +1);
						if(GetPVarInt(playerid, "SkillMP5") >= Ammo_MP5 && PlayerInfo[playerid][pGunSkill][3] < 100) {
							if(PlayerInfo[playerid][pVips]) PlayerInfo[playerid][pGunSkill][3]+=vipskills;
							else PlayerInfo[playerid][pGunSkill][3] += skills;
							SetPVarInt(playerid, "SkillMP5",0);
							texdraw_skill(playerid,3);
						}
					}
					case 30: {
						SetPVarInt(playerid, "SkillAk47",GetPVarInt(playerid, "SkillAk47") +1);
						if(GetPVarInt(playerid, "SkillAk47") >= Ammo_AK47 && PlayerInfo[playerid][pGunSkill][4] < 100) {
							if(PlayerInfo[playerid][pVips]) PlayerInfo[playerid][pGunSkill][4]+=vipskills;
							else PlayerInfo[playerid][pGunSkill][4] += skills;
							SetPVarInt(playerid, "SkillAk47",0);
							texdraw_skill(playerid,4);
						}
					}
					case 31: {
						SetPVarInt(playerid, "SkillM4",GetPVarInt(playerid, "SkillM4") +1);
						if(GetPVarInt(playerid, "SkillM4") >= Ammo_M4A1 && PlayerInfo[playerid][pGunSkill][5] < 100) {
							if(PlayerInfo[playerid][pVips]) PlayerInfo[playerid][pGunSkill][5]+=vipskills;
							else PlayerInfo[playerid][pGunSkill][5] += skills;
							SetPVarInt(playerid, "SkillM4",0);
							texdraw_skill(playerid,5);
						}
					}
				}
				SetPlayerSkills(playerid);
				DestroyDynamicObject(objectid);//Удаляем объект	
				ShootingCount[playerid]--;
				new boxobjid;
				switch(GetPVarInt(playerid,"shootingpl")) {
					case 67: boxobjid = 0;
					case 68: boxobjid = 1;   //аммо лс
					case 69: boxobjid = 2;   //аммо сф
					case 70: boxobjid = 3;  //аммо лв
					case 71: boxobjid = 4;
					case 72: boxobjid = 4;
					case 73: boxobjid = 4;  // грув
					case 74: boxobjid = 4;  // вагос
					case 75: boxobjid = 4;  // рифа
					case 76: boxobjid = 5;  // lspd
					case 77: boxobjid = 5;  // sfpd
					case 78: boxobjid = 5;  // lva
				}
				if(ShootingCount[playerid] == 0) {
					ShootingCount[playerid] = 2;
					new Float:X,Float:Y,Float:Z;
					GetDynamicObjectPos(BoxObject[boxobjid][BoxID[playerid]],X,Y,Z);
				 	BottleObject[playerid][0] = CreateDynamicObject(1551, X+0.177886,Y+0.056518,Z+0.578125,   0.00000, 0.00000, 0.00000, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
					BottleObject[playerid][1] = CreateDynamicObject(1551, X+0.177856,Y+0.24109,Z+0.578125,   0.00000, 0.00000, 0.00000, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
					Streamer_Update(playerid);
				}     
			}                                                 
		}    
	}
    return true;    
}
stock IsPlayerShootingBox(playerid, fractionid, pickid){
	if(PlayerInfo[playerid][pMember] != fractionid) return ErrorMessage(playerid,"Цей тир Вам недоступний");
	SetPVarInt(playerid, "shootingpl",pickid);
	if(!ShootingStart[playerid])  {
		return D(playerid, D_AMMOSG, DSM, ""YELLOW"Тир",""W" Ви дійсно хочете почати тренування?", "Так", "Ні");
	}
	else return D(playerid, D_AMMOSG, DSM, ""YELLOW"Тир",""W" Ви дійсно хочете закінчити тренування?", "Так", "Ні");
} 
stock CreateShootingBox(playerid){
	new mapshooting, maxbox,boxobjid;
	switch(GetPVarInt(playerid,"shootingpl")) {
		case 67: {
			mapshooting = 0, maxbox = 4,boxobjid = 0; 
			ShootingArea[playerid] = CreateDynamicSphere(-1346.7603,355.8449,7.0743, 40.0, -1, -1, playerid);
		}
		case 68: mapshooting = 1, maxbox = 8,boxobjid = 1;   //аммо лс
		case 69: mapshooting = 2, maxbox = 8,boxobjid = 2;   //аммо сф
		case 70: mapshooting = 3, maxbox = 8, boxobjid = 3;  //аммо лв
		case 71: mapshooting = 4, maxbox = 8, boxobjid = 4;
		case 72: mapshooting = 5, maxbox = 8, boxobjid = 4;
		case 73: mapshooting = 6, maxbox = 8, boxobjid = 4;  // грув
		case 74: mapshooting = 7, maxbox = 8, boxobjid = 4;  // вагос
		case 75: mapshooting = 8, maxbox = 8, boxobjid = 4;  // рифа
		case 76: mapshooting = 9, maxbox = 8, boxobjid = 5;  // lspd
		case 77: mapshooting = 10, maxbox = 8, boxobjid = 5;  // sfpd
		case 78: mapshooting = 11, maxbox = 8, boxobjid = 5;  // lva
	}
	if(!ShootingStart[playerid]) {
		new string[30];
		for(new i = 0; i < maxbox; i++){
			if(!BoxStatus[mapshooting][i]) {
				BoxID[playerid] = i;
				BoxStatus[mapshooting][i] = 1;
				BoxPlayerID[mapshooting][i] = playerid;
				break;
			}
		}
		if(BoxID[playerid] == -1) return ErrorMessage(playerid,"На жаль, но все кабінки зайняті");
		format(string, 30, "Займіть кабінку №%i",BoxID[playerid]+1);
		SetPlayerAttachedObject(playerid, 7, 19424, 2,0.05,0.0,0.0,90.0,360.0,270.0);
		SendOk(playerid, string);
		new Float:X,Float:Y,Float:Z;
		GetDynamicObjectPos(BoxObject[boxobjid][BoxID[playerid]],X,Y,Z);
		BottleObject[playerid][0] = CreateDynamicObject(1551, X+0.177886,Y+0.056518,Z+0.578125,   0.00000, 0.00000, 0.00000, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
		BottleObject[playerid][1] = CreateDynamicObject(1551, X+0.177856,Y+0.24109,Z+0.578125,   0.00000, 0.00000, 0.00000, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), playerid);
		ShootingStart[playerid] = 1;
		ShootingCount[playerid] = 2;
		Streamer_Update(playerid);
	}
	else {
		RemovePlayerAttachedObject(playerid, 7);
		SendOk(playerid, "Ви закінчили тренування");
		for(new i = 0; i < 2; i++)  DestroyDynamicObject(BottleObject[playerid][i]);
		if(GetPVarInt(playerid,"shootingpl") == 67) DestroyDynamicArea(ShootingArea[playerid]);
		ShootingStart[playerid] = 0;
		ShootingCount[playerid] = 0;
		for(new i = 0; i < maxbox; i++){
			if(BoxPlayerID[mapshooting][i] == playerid){
				BoxStatus[mapshooting][i] = 0;
				BoxPlayerID[mapshooting][i] = -1;
				BoxID[playerid] = -1;
				break;
			}
		}
	}
	return true;
}
stock ghetto_info(playerid) {
	new graff[5];
	for(new i; i<CountGraffity; i++) {
		if(GrafInfo[i][gFrak] == fBALLAS) graff[0]++;
		if(GrafInfo[i][gFrak] == fVAGOS) graff[1]++;
		if(GrafInfo[i][gFrak] == fGROVE) graff[2]++;
		if(GrafInfo[i][gFrak] == fAZTEC) graff[3]++;
		if(GrafInfo[i][gFrak] == fRIFA) graff[4]++;
	}
	/*static const f_str[] = "\t\t{8813E7}Ballas"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							\t\t{DBD604}Vagos"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							\t\t{009F00}Grove"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							\t\t{01FCFF}Aztecas"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							\t\t{83BFBF}Rifa"W"\n\
							Граффити: {8813E7}%d/120"W"\n\
							Ghetto Points: {8813E7}%d"W"\n\n\
							";
	new string[sizeof(f_str) + 40];
	format(string,sizeof(string),f_str,graff[0],FI[fBALLAS][fPoints],graff[1],FI[fVAGOS][fPoints],graff[2],FI[fGROVE][fPoints],graff[3],FI[fAZTEC][fPoints],graff[4],FI[fRIFA][fPoints]);
	D(playerid, DIALOG_NONE, DSM, ""YELLOW"Інформація",string, "Закрити", "");*/
	static const f_str[] = "\t\t{8813E7}Ballas"W"\n\
Граффити: {8813E7}%d/120"W"\n\n\
\t\t{DBD604}Vagos"W"\n\
Граффити: {8813E7}%d/120"W"\n\n\
\t\t{009F00}Grove"W"\n\
Граффити: {8813E7}%d/120"W"\n\n\
\t\t{01FCFF}Aztecas"W"\n\
Граффити: {8813E7}%d/120"W"\n\n\
\t\t{83BFBF}Rifa"W"\n\
Граффити: {8813E7}%d/120"W"";
	new string[sizeof(f_str) + 40];
	format(string,sizeof(string),f_str,graff[0],graff[1],graff[2],graff[3],graff[4]);
	D(playerid, DIALOG_NONE, DSM, ""YELLOW"Інформація",string, "Закрити", "");
}
stock leave_robhouse(playerid) {
	if(rob_veh[playerid] != INVALID_VEHICLE_ID) {
		A_DestroyVehicle(rob_veh[playerid]);
		rob_veh[playerid] = INVALID_VEHICLE_ID;
	}
	if(IsValidDynamicPickup(RobPlayer[playerid][RobPickup])) {
		DestroyDynamicPickup(RobPlayer[playerid][RobPickup]);
		DestroyDynamicArea(RobPlayer[playerid][RobArea]);
		DestroyDynamic3DTextLabel(RobPlayer[playerid][RobText]);
	}
}
public OnOutcomingRPC(playerid, rpcid, BitStream:bs) {
	if (playerid == -1) {
		return true;
	}
	if(TI[playerid][loadingMode] == 1) {
		if (rpcid == 84 || rpcid == 44) {
			TI[playerid][loadingMode] = 2;
			PlayerTextDrawTextSize(playerid,LoadTexturess[playerid], 211.777893+26*2, 0.000000);
			PlayerTextDrawShow(playerid,LoadTexturess[playerid]);
		}
	} 
	else if (TI[playerid][loadingMode] == 2) {
		if(rpcid == 84 || rpcid == 44) {
			TI[playerid][loadingModelPlayer] = 0;
			PlayerTextDrawTextSize(playerid,LoadTexturess[playerid], 211.777893+26*4, 0.000000);
			PlayerTextDrawShow(playerid,LoadTexturess[playerid]);
		} 
		else {
			TI[playerid][loadingModelPlayer]++;
			if(TI[playerid][loadingModelPlayer] > 3) {
				TI[playerid][loadingMode] = 0;
				PlayerTextDrawTextSize(playerid,LoadTexturess[playerid], 211.777893, 0.000000);
				for(new i; i < 4; i ++) TextDrawHideForPlayer(playerid, LoadTextures[i]); // Закрываем TextDraw'ы
				PlayerTextDrawHide(playerid, LoadTexturess[playerid]); // Показываем TextDraw'ы
				TogglePlayerControllable(playerid, true); // Размораживаем гравця
			}
		}
	}
	return true;
}
CB: OnPlayerUpdateLoadingMode(playerid) {
	if(TI[playerid][loadingMode]) return 1;
	if(!PlayerInfo[playerid][pSettings][8]) {
		FreezePlayerForTime(playerid,3);
		return 1;
	}
	else {
		TI[playerid][loadingMode] = 1;
		TI[playerid][loadingModelPlayer] = 0;
		TogglePlayerControllable(playerid, 0);
		for(new i; i < 4; i ++) TextDrawShowForPlayer(playerid, LoadTextures[i]); // Показываем TextDraw'ы
		PlayerTextDrawShow(playerid, LoadTexturess[playerid]); // Показываем TextDraw'ы
	}
	return true;
}
stock duel_message(playerid,id) {
	if(DI[id][duel_create] == false) {
		static const f_str[] = ""YELLOW"№ Найменування\t"YELLOW"Значение\n\
"YELLOW"1."W" Тип\t"GREEN"%s\n\
"YELLOW"2."W" Раунды\t"GREEN"%d\n\
"YELLOW"3."W" Взнос\t"ORANGE"$%d\n\
"YELLOW"4."W" Зброя\t"GREEN"%s\n\
"YELLOW"5."W" Доп. Зброя\t"GREEN"%s\n\
"YELLOW"6."W" Карта\t"GREEN"%s\n\
"YELLOW"8."W" Здоровье\t"GREEN"%d\n\
"YELLOW"9."W" Броня\t"GREEN"%d\n\
"YELLOW"10."W" Пароль лобби\t"GREEN"%s\n\
"YELLOW"-"YELLOW" Создать лобби";
		new string[sizeof(f_str) + 100];
		new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
		new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
		new password_duel[12];
		if(!DI[id][duel_password]) password_duel = "Відсутній";
		else format(password_duel,sizeof(password_duel),"%d",DI[id][duel_password]);
		format(string,sizeof(string),f_str,duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour],password_duel);
		D(playerid,D_DUEL_1,DSTH,""YELLOW"Дуэли | Создать лобби",string,"Вибрати","Відміна");
	}
	else {
		static const f_str[] = ""YELLOW"№ Найменування\t"YELLOW"Значение\n\
"YELLOW"1."W" Тип\t"GREEN"%s\n\
"YELLOW"2."W" Раунды\t"GREEN"%d\n\
"YELLOW"3."W" Взнос\t"ORANGE"$%d\n\
"YELLOW"4."W" Зброя\t"GREEN"%s\n\
"YELLOW"5."W" Доп. Зброя\t"GREEN"%s\n\
"YELLOW"6."W" Карта\t"GREEN"%s\n\
"YELLOW"8."W" Здоровье\t"GREEN"%d\n\
"YELLOW"9."W" Броня\t"GREEN"%d\n\
"YELLOW"10."W" Пароль лобби\t"GREEN"%s\n\
"YELLOW"-"NO" Видалити лобби";
		new string[sizeof(f_str) + 100];
		new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
		new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
		new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};
		new password_duel[12];
		if(!DI[id][duel_password]) password_duel = "Відсутній";
		else format(password_duel,sizeof(password_duel),"%d",DI[id][duel_password]);
		format(string,sizeof(string),f_str,duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour],password_duel);
		D(playerid,D_DUEL_1,DSTH,""YELLOW"Дуэли | Создать лобби",string,"Вибрати","Відміна");
	}
}
stock duel_delete(id,bool:end) {
	if(id != -1) {
		foreach(new i:Player) {
			if(!TI[i][tLogin] ||  AntiCheatIsKickedWithDesync(i)) continue;
			if(TI[i][tDuel] != id) continue;
			if(end == false) {
				SendOk(i,"Лобби удалено, все члены лобби распущены");
				GiveMoney(i,DI[id][duel_money],"возвращение взноса дуэль");
			}
			TI[i][tDuel] = -1;
			TI[i][tDuelLobby] = -1;
		}
		DI[id][duel_owner_id] = DI[id][duel_id][0] = DI[id][duel_id][1] = DI[id][duel_id][2] = DI[id][duel_id][3] = DI[id][duel_id][4] = DI[id][duel_id][5] = INVALID_PLAYER_ID;
		DI[id][duel_gun] = DI[id][duel_gun_2] = 0;
		DI[id][duel_money] = 1000;
		DI[id][duel_raund] = 1;
		DI[id][duel_type] = 0;
		DI[id][duel_map] = 0;
		DI[id][duel_health] = 100;
		DI[id][duel_armour] = 0;
		DI[id][duel_start] = false;
		DI[id][duel_create] = false;
		DI[id][duel_password] = 0;
		DI[id][duel_point_1] = DI[id][duel_point_2] = DI[id][duel_vw] = 0;
	}
}
stock duel_enter(playerid,id) {
	static const f_str[] = ""YELLOW"№ Найменування\t"YELLOW"Значение\n\
"YELLOW"1."W" Создатель\t"GREEN"%s\n\
"YELLOW"2."W" Тип\t"GREEN"%s\n\
"YELLOW"3."W" Раунды\t"GREEN"%d\n\
"YELLOW"4."W" Взнос\t"ORANGE"$%d\n\
"YELLOW"5."W" Зброя\t"GREEN"%s\n\
"YELLOW"6."W" Доп. Зброя\t"GREEN"%s\n\
"YELLOW"7."W" Карта\t"GREEN"%s\n\
"YELLOW"8."W" Здоровье\t"GREEN"%d\n\
"YELLOW"9."W" Броня\t"GREEN"%d";
	new string[sizeof(f_str) + 100];
	new duel_types[3][7] = {"1 VS 1","2 VS 2","3 VS 3"};
	new duel_guns[5][13] = {"Desert Eagle","ShotGun","MP5","AK-47","M4"};
	new duel_guns_2[6][13] = {"Не выбрано","Desert Eagle","ShotGun","MP5","AK-47","M4"};
	new duel_maps[3][11] = {"Карта №1","Карта №2","Карта №3"};

	format(string,sizeof(string),f_str,player_name[DI[id][duel_owner_id]],duel_types[DI[id][duel_type]],DI[id][duel_raund],DI[id][duel_money],duel_guns[DI[id][duel_gun]],duel_guns_2[DI[id][duel_gun_2]],duel_maps[DI[id][duel_map]],DI[id][duel_health],DI[id][duel_armour]);
	return D(playerid,D_DUEL_3,DSTH,""YELLOW"Дуэли | Інформація",string,"Увійти","Відміна");
}
stock duel_lobby_2(playerid,id) {
	new string[256],name[30],name_2[30],name_3[30],name_4[30];
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) format(name,sizeof(name),"1. %s\n",player_name[DI[id][duel_id][0]]);
	else format(name,sizeof(name),"1. ----\n");
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) format(name_2,sizeof(name_2),"2. %s\n",player_name[DI[id][duel_id][1]]);
	else format(name_2,sizeof(name_2),"2. ----\n");
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) format(name_3,sizeof(name_3),"1. %s\n",player_name[DI[id][duel_id][2]]);
	else format(name_3,sizeof(name_3),"1. ----\n");
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) format(name_4,sizeof(name_4),"2. %s\n",player_name[DI[id][duel_id][3]]);
	else format(name_4,sizeof(name_4),"2. ----\n");
	format(string,sizeof(string),"%s\n%s\n \n%s\n%s",name,name_2,name_3,name_4);
	D(playerid,D_DUEL_4,DSL,""YELLOW"Лобби",string,"Вибрати","Покинуть");
	return 1;
}
stock duel_lobby_3(playerid,id) {
	new string[256],name[30],name_2[30],name_3[30],name_4[30],name_5[30],name_6[30];
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) format(name,sizeof(name),"1. %s\n",player_name[DI[id][duel_id][0]]);
	else format(name,sizeof(name),"1. ----\n");
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) format(name_2,sizeof(name_2),"2. %s\n",player_name[DI[id][duel_id][1]]);
	else format(name_2,sizeof(name_2),"2. ----\n");
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) format(name_3,sizeof(name_3),"3. %s\n",player_name[DI[id][duel_id][2]]);
	else format(name_3,sizeof(name_3),"3. ----\n");
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) format(name_4,sizeof(name_4),"1. %s\n",player_name[DI[id][duel_id][3]]);
	else format(name_4,sizeof(name_4),"1. ----\n");
	if(DI[id][duel_id][4] != INVALID_PLAYER_ID) format(name_5,sizeof(name_5),"2. %s\n",player_name[DI[id][duel_id][4]]);
	else format(name_5,sizeof(name_5),"2. ----\n");
	if(DI[id][duel_id][5] != INVALID_PLAYER_ID) format(name_6,sizeof(name_6),"3. %s\n",player_name[DI[id][duel_id][5]]);
	else format(name_6,sizeof(name_6),"3. ----\n");
	format(string,sizeof(string),"%s\n%s\n%s\n \n%s\n%s\n%s",name,name_2,name_3,name_4,name_5,name_6);
	D(playerid,D_DUEL_5,DSL,""YELLOW"Лобби",string,"Вибрати","Покинуть");
	return 1;
}
stock duel_exit(playerid,id) {
	switch(TI[playerid][tDuelLobby]) {
		case 0: DI[id][duel_id][0]   = INVALID_PLAYER_ID;
		case 1: DI[id][duel_id][1] = INVALID_PLAYER_ID;
		case 2: DI[id][duel_id][2] = INVALID_PLAYER_ID;
		case 3: DI[id][duel_id][3] = INVALID_PLAYER_ID;
		case 4: DI[id][duel_id][4] = INVALID_PLAYER_ID;
		case 5: DI[id][duel_id][5] = INVALID_PLAYER_ID;
	}
}
stock start_duel_1(id) {
	DI[id][duel_start] = true;
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][0],1666.8864,1344.3644,2515.3765,DI[id][duel_id][1]+1,0);
		SetPlayerFacingAngle(DI[id][duel_id][0], 268.5859);
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		DelGun(DI[id][duel_id][0]);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][0], COLOR_RED);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][1],1690.8783,1344.3864,2515.3765,DI[id][duel_id][1]+1,0);
		SetPlayerFacingAngle(DI[id][duel_id][1],90.6343);
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		DelGun(DI[id][duel_id][1]);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][1], COLOR_BLUE);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
}
stock start_duel_2(id) {
	DI[id][duel_start] = true;
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][0],1690.6786,1333.3387,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][0], 60.2641);
		TogglePlayerControllable(DI[id][duel_id][0], 1);
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		if(DI[id][duel_gun_2]) {
			AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][0], COLOR_RED);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][1],1690.0475,1352.0634,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][1],103.8178);
		TogglePlayerControllable(DI[id][duel_id][1], 1);
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		if(DI[id][duel_gun_2]) {
			AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][1], COLOR_RED);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][2],1668.1543,1352.7336,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][2],239.4924);
		TogglePlayerControllable(DI[id][duel_id][2], 1);
		SetCameraBehindPlayer(DI[id][duel_id][2]);
		if(DI[id][duel_gun_2]) {
			AC_GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		AC_GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][2], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][2], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][2], COLOR_BLUE);
		DI[id][duel_leave][2] = 0;
	}
	else DI[id][duel_leave][2] = 1;
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][3],1667.2173,1334.7279,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][3],286.8062);
		TogglePlayerControllable(DI[id][duel_id][3], 1);
		SetCameraBehindPlayer(DI[id][duel_id][3]);
		if(DI[id][duel_gun_2]) {
			AC_GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		}
		AC_GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][3], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][3], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][3], COLOR_BLUE);
		DI[id][duel_leave][3] = 0;
	}
	else DI[id][duel_leave][3] = 1;
}
stock start_duel_3(id) {
	DI[id][duel_start] = true;
	if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][0],1690.6786,1333.3387,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][0], 60.2641);
		SetCameraBehindPlayer(DI[id][duel_id][0]);
		TogglePlayerControllable(DI[id][duel_id][0], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][0], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][0], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][0], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][0], COLOR_RED);
		DI[id][duel_leave][0] = 0;
	}
	else DI[id][duel_leave][0] = 1;
	if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][1],1690.0475,1352.0634,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][1],103.8178);
		SetCameraBehindPlayer(DI[id][duel_id][1]);
		TogglePlayerControllable(DI[id][duel_id][1], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][1], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][1], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][1], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][1], COLOR_RED);
		DI[id][duel_leave][1] = 0;
	}
	else DI[id][duel_leave][1] = 1;
	if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][2],1690.8053,1344.2802,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][2],90.0545);
		SetCameraBehindPlayer(DI[id][duel_id][2]);
		TogglePlayerControllable(DI[id][duel_id][2], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][2], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][2], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][2], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][2], COLOR_RED);
		DI[id][duel_leave][2] = 0;
	}
	else DI[id][duel_leave][2] = 1;
	if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][3],1668.1543,1352.7336,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][3],239.4924);
		SetCameraBehindPlayer(DI[id][duel_id][3]);
		TogglePlayerControllable(DI[id][duel_id][3], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][3], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][3], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][3], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][3], COLOR_BLUE);
		DI[id][duel_leave][3] = 0;
	}
	else DI[id][duel_leave][3] = 1;
	if(DI[id][duel_id][4] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][4],1667.2173,1334.7279,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][4],286.8062);
		SetCameraBehindPlayer(DI[id][duel_id][4]);
		TogglePlayerControllable(DI[id][duel_id][4], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][4], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][4], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][4], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][4], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][4], COLOR_BLUE);
		DI[id][duel_leave][4] = 0;
	}
	else DI[id][duel_leave][4] = 1;
	if(DI[id][duel_id][5] != INVALID_PLAYER_ID) {
		SetPlayerPosAC(DI[id][duel_id][5],1666.4225,1344.4668,2515.3765,DI[id][duel_vw],0);
		SetPlayerFacingAngle(DI[id][duel_id][5],265.1860);
		SetCameraBehindPlayer(DI[id][duel_id][5]);
		TogglePlayerControllable(DI[id][duel_id][5], 1);
		if(DI[id][duel_gun_2]) AC_GivePlayerWeapon(DI[id][duel_id][5], duel_id_gun[DI[id][duel_gun_2]-1], 1000);
		AC_GivePlayerWeapon(DI[id][duel_id][5], duel_id_gun[DI[id][duel_gun]], 1000);
		SetPlayerHealth(DI[id][duel_id][5], DI[id][duel_health]);
		SetPlayerArmour(DI[id][duel_id][5], DI[id][duel_armour]);
		SetPlayerColor(DI[id][duel_id][5], COLOR_BLUE);
		DI[id][duel_leave][5] = 0;
	}
	else DI[id][duel_leave][5] = 1;
}
stock end_duel(playerid,type) {
	new id = TI[playerid][tDuel];
	switch(DI[TI[playerid][tDuel]][duel_type]) {
		case 0: {
			switch(type) {
				case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_leave][0] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_1(id);
						else duel_end_1(playerid);
					}
					else if(DI[id][duel_leave][1] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_1(id);
						else duel_end_1(playerid);
					}
				}
				case 1: {
					if(DI[id][duel_id][0] == playerid) {
						DelGun(DI[id][duel_id][0]);
						if(PlayerInfo[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PlayerInfo[DI[id][duel_id][0]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_point_2]++;
						duel_end_1(playerid);
					}
					if(DI[id][duel_id][1] == playerid) {
						DelGun(DI[id][duel_id][1]);
						if(PlayerInfo[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PlayerInfo[DI[id][duel_id][1]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						DI[id][duel_point_2]++;
						duel_end_1(playerid);
					}
				}
			}
		}
		case 1: {
			switch(type) {
				case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_id][2] == playerid) DI[id][duel_leave][2] = 1;
					if(DI[id][duel_id][3] == playerid) DI[id][duel_leave][3] = 1;
					if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_2(id);
						else duel_end_2(playerid);
					}
					else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_2(id);
						else duel_end_2(playerid);
					}
					else {
						SetPlayerPosAC(playerid, 1708.4227,1342.3707,2525.3727,DI[id][duel_vw],true);
						TogglePlayerControllable(playerid,0);
						SetPlayerInterior(playerid, 0);
					    SetPlayerCameraPos(playerid, 1679.155151, 1341.519409, 2545.137939);
					    SetPlayerCameraLookAt(playerid, 1679.162963, 1341.955078, 2540.156982);
					    Streamer_Update(playerid);
					}
				}
				case 1: {
					if(DI[id][duel_id][0] == playerid) {
						DelGun(DI[id][duel_id][0]);
						if(PlayerInfo[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PlayerInfo[DI[id][duel_id][0]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_leave][0] = 1;
						DI[id][duel_id][0] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][1] == playerid) {
						DelGun(DI[id][duel_id][1]);
						if(PlayerInfo[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PlayerInfo[DI[id][duel_id][1]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][0] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][2] == playerid) {
						DelGun(DI[id][duel_id][2]);
						if(PlayerInfo[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
							A_SetPlayerSkin(DI[id][duel_id][2],PlayerInfo[DI[id][duel_id][2]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][2],gFractionSpawn[PlayerInfo[DI[id][duel_id][2]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][2],PlayerInfo[DI[id][duel_id][2]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
						DI[id][duel_leave][2] = 1;
						DI[id][duel_id][2] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
					if(DI[id][duel_id][3] == playerid) {
						DelGun(DI[id][duel_id][3]);

						if(PlayerInfo[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
							A_SetPlayerSkin(DI[id][duel_id][3],PlayerInfo[DI[id][duel_id][3]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][3],gFractionSpawn[PlayerInfo[DI[id][duel_id][3]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][3],PlayerInfo[DI[id][duel_id][3]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
						DI[id][duel_leave][3] = 1;
						DI[id][duel_id][3] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_2(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
							else if(DI[id][duel_leave][2] == 1 && DI[id][duel_leave][3] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_2(id);
								else duel_end_2(playerid);
							}
						}
					}
				}
			}
		}
		case 2: {
			switch(type) {
				case 0: {
					if(DI[id][duel_id][0] == playerid) DI[id][duel_leave][0] = 1;
					if(DI[id][duel_id][1] == playerid) DI[id][duel_leave][1] = 1;
					if(DI[id][duel_id][2] == playerid) DI[id][duel_leave][2] = 1;
					if(DI[id][duel_id][3] == playerid) DI[id][duel_leave][3] = 1;
					if(DI[id][duel_id][4] == playerid) DI[id][duel_leave][4] = 1;
					if(DI[id][duel_id][5] == playerid) DI[id][duel_leave][5] = 1;
					if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_2]++;
						if(DI[id][duel_raund]) start_duel_3(id);
						else duel_end_3(playerid);
					}
					else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
						DI[id][duel_raund]--;
						DI[id][duel_point_1]++;
						if(DI[id][duel_raund]) start_duel_3(id);
						else duel_end_3(playerid);
					}
					else {
						SetPlayerPosAC(playerid, 1708.4227,1342.3707,2525.3727,DI[id][duel_vw],true);
						TogglePlayerControllable(playerid,0);
						SetPlayerInterior(playerid, 0);
					    SetPlayerCameraPos(playerid, 1679.155151, 1341.519409, 2545.137939);
					    SetPlayerCameraLookAt(playerid, 1679.162963, 1341.955078, 2540.156982);
					    Streamer_Update(playerid);
					}
				}
				case 1: {
					if(DI[id][duel_id][0] == playerid) {
						DelGun(DI[id][duel_id][0]);
						if(PlayerInfo[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
							A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PlayerInfo[DI[id][duel_id][0]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
						DI[id][duel_leave][0] = 1;
						DI[id][duel_id][0] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][1] == playerid) {
						DelGun(DI[id][duel_id][1]);
						if(PlayerInfo[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
							A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PlayerInfo[DI[id][duel_id][1]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
						DI[id][duel_leave][1] = 1;
						DI[id][duel_id][1] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][0] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_2]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][2] == playerid) {
						DelGun(DI[id][duel_id][2]);
						if(PlayerInfo[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
							A_SetPlayerSkin(DI[id][duel_id][2],PlayerInfo[DI[id][duel_id][2]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][2],gFractionSpawn[PlayerInfo[DI[id][duel_id][2]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][2],PlayerInfo[DI[id][duel_id][2]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
						DI[id][duel_leave][2] = 1;
						DI[id][duel_id][2] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][1] == INVALID_PLAYER_ID && DI[id][duel_id][2] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][3] == playerid) {
						DelGun(DI[id][duel_id][3]);

						if(PlayerInfo[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
							A_SetPlayerSkin(DI[id][duel_id][3],PlayerInfo[DI[id][duel_id][3]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][3],gFractionSpawn[PlayerInfo[DI[id][duel_id][3]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][3],PlayerInfo[DI[id][duel_id][3]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
						DI[id][duel_leave][3] = 1;
						DI[id][duel_id][3] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][4] == INVALID_PLAYER_ID && DI[id][duel_id][5] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][4] == playerid) {
						DelGun(DI[id][duel_id][4]);

						if(PlayerInfo[DI[id][duel_id][4]][pMember] && start_work[DI[id][duel_id][4]]) {
							A_SetPlayerSkin(DI[id][duel_id][4],PlayerInfo[DI[id][duel_id][4]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][4],gFractionSpawn[PlayerInfo[DI[id][duel_id][4]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][4],PlayerInfo[DI[id][duel_id][4]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
						DI[id][duel_leave][4] = 1;
						DI[id][duel_id][4] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID && DI[id][duel_id][5] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
					if(DI[id][duel_id][5] == playerid) {
						DelGun(DI[id][duel_id][5]);

						if(PlayerInfo[DI[id][duel_id][5]][pMember] && start_work[DI[id][duel_id][5]]) {
							A_SetPlayerSkin(DI[id][duel_id][5],PlayerInfo[DI[id][duel_id][5]][pFracSkin]);
							SetPlayerColor(DI[id][duel_id][5],gFractionSpawn[PlayerInfo[DI[id][duel_id][5]][pMember]][fracColor]);
						}
						else A_SetPlayerSkin(DI[id][duel_id][5],PlayerInfo[DI[id][duel_id][5]][pSkin]);
						SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
						DI[id][duel_leave][5] = 1;
						DI[id][duel_id][5] = INVALID_PLAYER_ID;
						if(DI[id][duel_id][3] == INVALID_PLAYER_ID && DI[id][duel_id][4] == INVALID_PLAYER_ID) {
							DI[id][duel_point_1]++;
							duel_end_3(playerid);
						}
						else {
							if(DI[id][duel_leave][0] == 1 && DI[id][duel_leave][1] == 1 && DI[id][duel_leave][2] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_2]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
							else if(DI[id][duel_leave][3] == 1 && DI[id][duel_leave][4] == 1 && DI[id][duel_leave][5] == 1) {
								DI[id][duel_raund]--;
								DI[id][duel_point_1]++;
								if(DI[id][duel_raund]) start_duel_3(id);
								else duel_end_3(playerid);
							}
						}
					}
				}
			}
		}
	}
	return 1;
}
stock duel_end_1(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][0],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PlayerInfo[DI[id][duel_id][0]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PlayerInfo[DI[id][duel_id][0]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][1],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][1],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PlayerInfo[DI[id][duel_id][1]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PlayerInfo[DI[id][duel_id][1]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][0],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
}
stock duel_end_2(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][0],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PlayerInfo[DI[id][duel_id][0]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PlayerInfo[DI[id][duel_id][0]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][1],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PlayerInfo[DI[id][duel_id][1]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PlayerInfo[DI[id][duel_id][1]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][2],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][3],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][2],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][2],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][2]);

			if(DI[id][duel_id][2]) add_gang_points(PlayerInfo[DI[id][duel_id][2]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
				A_SetPlayerSkin(DI[id][duel_id][2],PlayerInfo[DI[id][duel_id][2]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][2],gFractionSpawn[PlayerInfo[DI[id][duel_id][2]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][2],PlayerInfo[DI[id][duel_id][2]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][3],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][3],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][3]);

			if(DI[id][duel_id][3]) add_gang_points(PlayerInfo[DI[id][duel_id][3]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
				A_SetPlayerSkin(DI[id][duel_id][3],PlayerInfo[DI[id][duel_id][3]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][3],gFractionSpawn[PlayerInfo[DI[id][duel_id][3]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][3],PlayerInfo[DI[id][duel_id][3]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][0],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][1],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
}
stock duel_end_3(playerid) {
	new id = TI[playerid][tDuel];
	if(DI[id][duel_point_1] > DI[id][duel_point_2]) {
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][0],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][0],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][0]);

			if(DI[id][duel_id][0]) add_gang_points(PlayerInfo[DI[id][duel_id][0]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][0]][pMember] && start_work[DI[id][duel_id][0]]) {
				A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][0],gFractionSpawn[PlayerInfo[DI[id][duel_id][0]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][0],PlayerInfo[DI[id][duel_id][0]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][1],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][1],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][1]);

			if(DI[id][duel_id][1]) add_gang_points(PlayerInfo[DI[id][duel_id][1]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][1]][pMember] && start_work[DI[id][duel_id][1]]) {
				A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][1],gFractionSpawn[PlayerInfo[DI[id][duel_id][1]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][1],PlayerInfo[DI[id][duel_id][1]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][2],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][2],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][2]);

			if(DI[id][duel_id][2]) add_gang_points(PlayerInfo[DI[id][duel_id][2]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][2]][pMember] && start_work[DI[id][duel_id][2]]) {
				A_SetPlayerSkin(DI[id][duel_id][2],PlayerInfo[DI[id][duel_id][2]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][2],gFractionSpawn[PlayerInfo[DI[id][duel_id][2]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][2],PlayerInfo[DI[id][duel_id][2]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][3],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][4] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][4],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][5] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][5],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
	else {
		if(DI[id][duel_id][3] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][3],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][3],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][3]);

			if(DI[id][duel_id][3]) add_gang_points(PlayerInfo[DI[id][duel_id][3]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][3]][pMember] && start_work[DI[id][duel_id][3]]) {
				A_SetPlayerSkin(DI[id][duel_id][3],PlayerInfo[DI[id][duel_id][2]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][3],gFractionSpawn[PlayerInfo[DI[id][duel_id][3]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][3],PlayerInfo[DI[id][duel_id][3]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][3],GetPVarFloat(DI[id][duel_id][3],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][3],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][4] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][4],DI[id][duel_money]*2,"Виігриш дуэль");
			SendOk(DI[id][duel_id][4],"Ви победили в дуэли");
			DelGun(DI[id][duel_id][4]);

			if(DI[id][duel_id][4]) add_gang_points(PlayerInfo[DI[id][duel_id][4]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][4]][pMember] && start_work[DI[id][duel_id][4]]) {
				A_SetPlayerSkin(DI[id][duel_id][4],PlayerInfo[DI[id][duel_id][4]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][4],gFractionSpawn[PlayerInfo[DI[id][duel_id][4]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][4],PlayerInfo[DI[id][duel_id][4]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][4],GetPVarFloat(DI[id][duel_id][4],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][4],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][5] != INVALID_PLAYER_ID) {
			GiveMoney(DI[id][duel_id][5],DI[id][duel_money]*2,"виграли дуэль");
			SendOk(DI[id][duel_id][5],"Ви перемогли в поєдинках");
			DelGun(DI[id][duel_id][5]);

			if(DI[id][duel_id][5]) add_gang_points(PlayerInfo[DI[id][duel_id][5]][pMember],1);

			if(PlayerInfo[DI[id][duel_id][5]][pMember] && start_work[DI[id][duel_id][5]]) {
				A_SetPlayerSkin(DI[id][duel_id][5],PlayerInfo[DI[id][duel_id][5]][pFracSkin]);
				SetPlayerColor(DI[id][duel_id][5],gFractionSpawn[PlayerInfo[DI[id][duel_id][5]][pMember]][fracColor]);
			}
			else A_SetPlayerSkin(DI[id][duel_id][5],PlayerInfo[DI[id][duel_id][5]][pSkin]);
			SetPlayerPosAC(DI[id][duel_id][5],GetPVarFloat(DI[id][duel_id][5],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][5],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][0] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][0],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][0],GetPVarFloat(DI[id][duel_id][0],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][0],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][1] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][1],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][1],GetPVarFloat(DI[id][duel_id][1],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][1],"pos_comp_z"),0,0);
		}
		if(DI[id][duel_id][2] != INVALID_PLAYER_ID) {
			ErrorMessage(DI[id][duel_id][2],"Дуэль проиграна");
			SetPlayerPosAC(DI[id][duel_id][2],GetPVarFloat(DI[id][duel_id][2],"pos_comp_x"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_y"),GetPVarFloat(DI[id][duel_id][2],"pos_comp_z"),0,0);
		}
		duel_delete(id,true);
	}
}
stock GetTheftTimelimit(playerid){ //угон
	switch(PlayerInfo[playerid][ptheftSkill]){
		case 0: return 1200;
		case 1: return 1170;
		case 2: return 1140;
		case 3: return 1110;
		case 4: return 1080;
		case 5: return 1050;
		case 6: return 1020;
		case 7: return  990;
		case 8: return 960;
		case 9: return 930;
		case 10: return 900;
		case 11: return 870;
		case 12: return 840;
		case 13: return 810;
		case 14: return 780;
		case 15: return 750;
		case 16: return 720;
		case 17: return 690;
		case 18: return 660;
		case 19: return 630;
		case 20: return 600;
		case 21: return 570;
		case 22: return 540;
		case 23: return 510;
		case 24: return 480;
		case 25: return 450;
	}
	return 0;
}
stock GetSalaryTheeft(playerid){ //угон
	switch(PlayerInfo[playerid][ptheftSkill]){
		case 0: return 500;
		case 1: return 700;
		case 2: return 1000;
		case 3: return 1500;
		case 4: return 2000;
		case 5: return 2500;
		case 6: return 3000;
		case 7: return  3500;
		case 8: return 4000;
		case 9: return 4500;
		case 10: return 5000;
		case 11: return 5500;
		case 12: return 6000;
		case 13: return 6500;
		case 14: return 7000;
		case 15: return 8000;
		case 16: return 9000;
		case 17: return 10000;
		case 18: return 11000;
		case 19: return 12000;
		case 20: return 13000;
		case 21: return 14500;
		case 22: return 16000;
		case 23: return 17500;
		case 24: return 19000;
		case 25: return 21000;
	}
	return 0;
}

stock GetLimitTheeft(playerid){ //угон
	switch(PlayerInfo[playerid][ptheftSkill]){
		case 0: return 210;
		case 1: return 240;
		case 2: return 270;
		case 3: return 300;
		case 4: return 330;
		case 5: return 360;
		case 6: return 390;
		case 7: return  420;
		case 8: return 450;
		case 9: return 480;
		case 10: return 510;
		case 11: return 540;
		case 12: return 570;
		case 13: return 600;
		case 14: return 630;
		case 15: return 660;
		case 16: return 690;
		case 17: return 720;
		case 18: return 750;
		case 19: return 780;
		case 20: return 810;
		case 21: return 840;
		case 22: return 870;
		case 23: return 900;
		case 24: return 930;
		case 25: return 960;
	}
	return 0;
}

CB: TimeReportBot() {
	new repscount = 0, queryrep[70];
	for(new repID;repID<MAX_REPORTS;repID++) {
		if(PlayerReport[repID] != -1) repscount++;
	}
	format(queryrep, sizeof(queryrep), "UPDATE `reports` SET `count` = '%d' WHERE `id` = 1",repscount);
	mysql_tquery(connects,queryrep,"","");
	return true;
}
stock srace_end(playerid,type) {
	DestroyDynamicCP(TI[playerid][tRaceCP]);
	DestroyDynamicCP(TI[TI[playerid][tRaceID]][tRaceCP]);
	DisablePlayerCheckpoint(playerid);
	DisablePlayerCheckpoint(TI[playerid][tRaceID]);
	switch(type) {
		case 0: {
			new string[128];
			format(string,sizeof(string),"Ви одержали победу в уличных гонках над "W"%s{f6f6d9}. Вознаграждение: "ORANGE"$%d",player_name[TI[playerid][tRaceID]],TI[playerid][tRaceMoney]*2);
			SendOk(playerid,string);

			format(string,sizeof(string),"Ви проиграли в уличных гонках "W"%s",player_name[playerid],TI[playerid][tRaceMoney]*2);
			ErrorMessage(TI[playerid][tRaceID],string);

			GiveMoney(playerid,TI[playerid][tRaceMoney]*2,"победа в уличных гонках");
			if(PlayerInfo[playerid][pMember]) add_gang_points(PlayerInfo[playerid][pMember],1);
		}
		case 1,2: {
			new string[128];
			if(type == 1) {
				format(string,sizeof(string),"Гравець покинул сервер. Вы одержали победу в уличных гонках над "W"%s{f6f6d9}. Вознаграждение: "ORANGE"$%d",player_name[playerid],TI[playerid][tRaceMoney]*2);
				SendOk(TI[playerid][tRaceID],string);
			}
			if(type == 2) {
				format(string,sizeof(string),"Гравець покинул Т/С. Вы одержали победу в уличных гонках над "W"%s{f6f6d9}. Вознаграждение: "ORANGE"$%d",player_name[playerid],TI[playerid][tRaceMoney]*2);
				SendOk(TI[playerid][tRaceID],string);

				format(string,sizeof(string),"Ви покинули Т/С во время гонки. Победитель гонки: "W"%s",player_name[TI[playerid][tRaceID]]);
				ErrorMessage(playerid,string);
			}
			GiveMoney(TI[playerid][tRaceID],TI[playerid][tRaceMoney]*2,"победа в уличных гонках");
			if(PlayerInfo[TI[playerid][tRaceID]][pMember]) add_gang_points(PlayerInfo[TI[playerid][tRaceID]][pMember],1);
		}
	}
	TI[playerid][tRaceMoney] = TI[TI[playerid][tRaceID]][tRaceMoney] = 0;
	TI[playerid][tRaceID] = TI[TI[playerid][tRaceID]][tRaceID] = INVALID_PLAYER_ID;
}
stock save_fracveh(slot) {
	A_DestroyVehicle(FracVehicle[slot][fvehCar]);
	FracVehicle[slot][fvehCar] = INVALID_VEHICLE_ID;
	if(FracVehicle[slot][fvehTime] > unix) {
		UpdateFractionVehicle(slot,"fvehModelNew",FracVehicle[slot][fvehModelNew]);
		FracVehicle[slot][fvehCar] = CreateOrgsVehicle(FracVehicle[slot][fvehFrac],1,FracVehicle[slot][fvehModelNew], FracVehicle[slot][fvehcCoords][0], FracVehicle[slot][fvehcCoords][1], FracVehicle[slot][fvehcCoords][2], FracVehicle[slot][fvehcCoords][3],FracVehicle[slot][fvehColor][0],FracVehicle[slot][fvehColor][1], RES_CAR_TIME);
	}
	else FracVehicle[slot][fvehCar] = CreateOrgsVehicle(FracVehicle[slot][fvehFrac],1,FracVehicle[slot][fvehModel], FracVehicle[slot][fvehcCoords][0], FracVehicle[slot][fvehcCoords][1], FracVehicle[slot][fvehcCoords][2], FracVehicle[slot][fvehcCoords][3],FracVehicle[slot][fvehColor][0],FracVehicle[slot][fvehColor][1], RES_CAR_TIME);	
	UpdateFractionVehicle(slot,"fvehTime",FracVehicle[slot][fvehTime]);
}
stock add_gang_points(member,points) {
	FI[member][fPoints] += points;
	UpdateFraction(member,"fPoints",FI[member][fPoints]);
	FI[member][fRating] += points;
	UpdateFraction(member,"fRating",FI[member][fRating]);
}
stock gangtops() {
	new Cache:result = mysql_query(connects, "SELECT `ID`, `fRating` FROM `fractions` ORDER BY `fRating` DESC LIMIT 3");
	new rows = cache_num_rows();
	new string[128],id;
	if(rows) {
		for(new i; i < rows; i ++) {
			cache_get_value_name_int(i, "ID",id);
			if(i == 0) {
				format(string,sizeof(string),"%s занимает 1 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);

				FI[id][fMats] = 1000000;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				FI[id][fBank] += 500000;
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
			if(i == 1) {
				format(string,sizeof(string),"%s занимает 2 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);

				FI[id][fMats] = 700000;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				FI[id][fBank] += 250000;
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
			if(i == 2) {
				format(string,sizeof(string),"%s занимает 3 место в Gang-Top за текущую неделю",FI[id][fName]);
				SendBand(COLOR_RED, string);

				FI[id][fMats] = 500000;
				UpdateFraction(id,"Mats",FI[id][fMats]);
				FI[id][fBank] += 100000;
				UpdateFraction(id,"Bank",FI[id][fBank]);
			}
		}
	}
	cache_delete(result);

	FI[fBALLAS][fRating] = FI[fVAGOS][fRating] = FI[fGROVE][fRating] = FI[fAZTEC][fRating] = FI[fRIFA][fRating] = 0;
	UpdateFraction(fBALLAS,"fPoints",FI[fBALLAS][fPoints]);
	UpdateFraction(fVAGOS,"fPoints",FI[fVAGOS][fPoints]);
	UpdateFraction(fGROVE,"fPoints",FI[fGROVE][fPoints]);
	UpdateFraction(fAZTEC,"fPoints",FI[fAZTEC][fPoints]);
	UpdateFraction(fRIFA,"fPoints",FI[fRIFA][fPoints]);
}
stock dialog_lmenu(playerid,listitem) {
	switch(listitem) {
		case 0..3: {
			new string[1256];
			for(new i=1; i<=FI[GetTeamID(playerid)][fMaxRang]; i++) {
				new frac_rank_check = -1;
				if(listitem == 0) frac_rank_check = FI[PlayerInfo[playerid][pMember]][fInviteRang];
				else if(listitem == 1) frac_rank_check = FI[PlayerInfo[playerid][pMember]][fUninviteRang];
				else if(listitem == 2) frac_rank_check = FI[PlayerInfo[playerid][pMember]][fGiveRang];
				else if(listitem == 3) frac_rank_check = FI[PlayerInfo[playerid][pMember]][fUseStock];
				if(frac_rank_check == -1) return true;
				format(string,sizeof(string),"%s%i. %s%s\n", string,i,(i==frac_rank_check)?(""YELLOW""):(""W""),GetRankName(PlayerInfo[playerid][pMember],i));
			}
			SetPVarInt(playerid,"leader_rank", listitem);
			D(playerid,D_LMENU_RANK,DSL,""YELLOW"Виберіть ранг",string,"Вибрати", "Закрити");
		}
		case 4: D(playerid, D_LMENU_TEXT, DSI, ""YELLOW"Сообщение фракції", "\n\n"W"Введіть повідомлення, яке буде показано членам Вашої організації при заході на сервері:\nДля видалення повідомлення введіть: "ORANGE"None\n\n", "Ввід", "Відміна");
		case 5: {
			static const f_str[] = ""W"Стан рахунку: "ORANGE"$%d\n"YELLOW"1."W" Зняти гроші";
			new string[sizeof(f_str) +1 + (-2 + 10)];
			format(string,sizeof(string),f_str,FI[PlayerInfo[playerid][pMember]][fBank]);
			D(playerid,D_LMENU_BANK,DSL,""YELLOW"Керування банком фракції",string,"Далі","Назад");
		}
		case 6: {
			for(new i = GetVehiclePoolSize()+1; --i != 0;) {
				if(!IsValidVehicle(i)) continue;
				if(VehicleInfo[i][vTeam] != PlayerInfo[playerid][pMember]) continue;
				if(IsVehicleOccupied(i)) continue;
				SetVehicleToRespawn(i);
			}
			new string[128];
			format(string,sizeof(string),"[F] %s %s заспавнил не зайняті машини", GetRankName(PlayerInfo[playerid][pMember],PlayerInfo[playerid][pRank]),player_name[playerid],playerid);
			SendFamilyMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTRED, string);
		}
		case 7: {
			if(FI[GetTeamID(playerid)][fAntiTK]) {
				FI[GetTeamID(playerid)][fAntiTK] = 0;
				SendOk(playerid,"Функція Анти Team Kill успішно відключена");
			}
			else {
				FI[GetTeamID(playerid)][fAntiTK] = 1;
				SendOk(playerid,"Функція Анти Team Kill успішно включена");
			}
			UpdateFraction(GetTeamID(playerid),"AntiTk",FI[GetTeamID(playerid)][fAntiTK]);
		}
		case 8: {
			new string[1256];
			strcat(string, ""W"");
			for(new i = 1; i <= FI[GetTeamID(playerid)][fMaxRang]; i++) {
				format(string,sizeof(string),"%s%s\n",string,GetRankName(PlayerInfo[playerid][pMember],i));
			}
			D(playerid,D_EDIT_RANK_1,DSL,""YELLOW"Виберіть ранг",string,"Вибрати","Назад");
			return 1;
		}
		case 9: {
			if(!IsAGang(playerid) && !IsAMafia(playerid)) return 1;
			dialog_diplom(playerid,true);
		}
		case 10: D(playerid,D_GANG_POINT,DSL,""YELLOW"Виберіть ранг",""YELLOW"1."W" Керування автомобілями","Вибрати","Назад");
	}
	return 1;
}
stock dialog_vip(playerid,vip) {
	static const f_str[] = "\
Найменування\tФактор\n\
"W"Кожен PayDay\t"YELLOW"+%d EXP\n\
"W"Можливість знаходження в AFK\t"YELLOW"%d\n\
"W"Получення вод. прав без проходження практики. (тільки теорія)\t"YELLOW"%s\n\
"W"Бонус при досягненні нового рівня \t"YELLOW"$%d\n\
"W"Лікування в лікарні швидше\t"YELLOW"%d x\n\
"W"Час в КПЗ та ДеМоргані проходить швидше\t"YELLOW"%d x\n\
"W"Час бан чата в проходить швидше\t"YELLOW"%d x\n\
"W"Перегляд адміністрації в online /admins\t"YELLOW"%s\n\
"W"Дія масок \t"YELLOW"%d хвилин\n\
"W"Патрони на складі армій\t"YELLOW"%d x\n\
"W"Рівень розшуку спадає швидше\t"YELLOW"%d x\n\
"W"Рюкзак гравця вміщає аптечок\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає масок\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає каністр із бензином\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає відмичок\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає боєприпасів\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає наркотиків\t"YELLOW"%d\n\
"W"Жага голоду\t"YELLOW"рідше на %f %%\n\
"W"Поінти в сім'ю кожен PayDay\t"YELLOW"%d\n\
"W"Переведення в банках\t"YELLOW"%d раз\n\
"W"Процент до зарплати кожен PayDay від організації\t"YELLOW"%d %%\n\
"W"Процент до зарплати від початкових робіт\t"YELLOW"%d %%\n\
"W"Отримання ліцензії на повітряне літання без проходження практики. (только теория)\t"YELLOW"%d\n\
"W"Безоплатна доставка авто до дому\t"YELLOW"%d\n\
"W"Знижка на аренду номера в готелі\t"YELLOW"%d %%\n\
"W"Знижка на одяг\t"YELLOW"%d %%\n\
"W"Знижка на покупку транспорта\t"YELLOW"%d %%\n\
"W"Знижка на аренду транспорта\t"YELLOW"%d %%\n\
"W"Знижка на покращення дому \t"YELLOW"%d %%\n\
"W"Знижка на вартість зміни статі\t"YELLOW"%d %%\n\
"W"Знижка на отримання номерів ТС\t"YELLOW"%d %%\n\
"W"Знижка на покращення в Perfomance Tune\t"YELLOW"%d %%\n\
"W"Знижка на тюнинг в Автомайстерні\t"YELLOW"%d %%\n\
"W"Скорочення часу бонусного кейса\t"YELLOW"на %d хвилин\n\
"W"Максимальна кількість HP\t"YELLOW"%d\n\
"W"Поповнення від однієї аптечки\t"YELLOW"%dHP\n\
"W"Безплатна зміна Nick Name в день\t"YELLOW"%d раз\n\
"W"Отримання ліцензії на зброю без мед. печатки\t"YELLOW"%s\n\
"W"При подачі оголошення в /ad Ваше оголошення буде виділятися тегом [VIP]\t"YELLOW"%s\n\
"W"Дешевий вхід в бізнес\t"YELLOW"в %d раз\n\
"W"Більше не потрібно їздити к Name Bot (/vad)\t"YELLOW"%s\n\
"W"SMS іншим гравцям бесплатные, більше не потрібно поповнювати телефон\t"YELLOW"%s\n\
"W"Лікування захворювання дешевше\t"YELLOW"в %d раз\n\
"W"Піднімається ліміт на /pay\t"YELLOW"%d\n\
"W"VIP-чат [/v]\t"YELLOW"%s\n\
"W"Дзвінки іншим гравцям безплатні, більше не потрібно поповнювати телефон\t"YELLOW"%s\n\
"W"Колір ніка в репорті буде інший\t"YELLOW"%s";
	new string[sizeof(f_str) + 80];
	format(string,sizeof(string),f_str,
	vip_status[vip][vip_payday],
	vip_status[vip][vip_afk],
	(vip_status[vip][vip_carlic] == 0) ? ("Так") : ("Ні"),
	vip_status[vip][vip_lvl],
	vip_status[vip][vip_healtime],
	vip_status[vip][vip_arrest],
	vip_status[vip][vip_mute],
	(vip_status[vip][vip_admins] == 0) ? ("Так") : ("Ні"),
	vip_status[vip][vip_mask_time],
	vip_status[vip][vip_armmats],
	vip_status[vip][vip_search],
	vip_status[vip][vip_heal],
	vip_status[vip][vip_mask],
	vip_status[vip][vip_fuel],
	vip_status[vip][vip_jimmy],
	vip_status[vip][vip_mats],
	vip_status[vip][vip_drugs],
	vip_status[vip][vip_satiety],
	vip_status[vip][vip_fam_point],
	vip_status[vip][vip_transfer_bank],
	vip_status[vip][vip_percent_job],
	vip_status[vip][vip_percent_startjob],
	vip_status[vip][vip_flylic],
	vip_status[vip][vip_fixcar],
	vip_status[vip][vip_hotel],
	vip_status[vip][vip_chose],
	vip_status[vip][vip_buycar],
	vip_status[vip][vip_rentcar],
	vip_status[vip][vip_houseupdate],
	vip_status[vip][vip_changesex],
	vip_status[vip][vip_number],
	vip_status[vip][vip_perfonans],
	vip_status[vip][vip_tune],
	vip_status[vip][vip_rulet],
	vip_status[vip][vip_hp],
	vip_status[vip][vip_useheal],
	vip_status[vip][vip_changename],
	(vip_status[vip][vip_gunlic] == 0) ? ("Так") : ("Ні"),
	(vip_status[vip][vip_ad] == 0) ? ("Так") : ("Ні"),
	vip_status[vip][vip_enterbizz],
	(vip_status[vip][vip_vad] == 0) ? ("Так") : ("Ні"),
	(vip_status[vip][vip_sms] == 0) ? ("Так") : ("Ні"),
	vip_status[vip][vip_disease],
	vip_status[vip][vip_pay],
	(vip_status[vip][vip_chat] == 0) ? ("Так") : ("Ні"),
	(vip_status[vip][vip_call] == 0) ? ("Так") : ("Ні"),
	(vip_status[vip][vip_report_color] == 0) ? ("Так") : ("Ні"));
	D(playerid, DIALOG_VIPSYSS, DSTH, ""YELLOW"Інформація",string, "Змінити", "Закрити");
}
stock show_vip(playerid,vip) {
	static const f_str[] = "\
Найменування\tФактор\n\
"W"Кожен PayDay\t"YELLOW"+%d EXP\n\
"W"Можливість знаходження в AFK\t"YELLOW"%d\n\
"W"Отримання вод. прав без проходження практичної частини. (тільки теорія)\t"YELLOW"%s\n\
"W"Бонус при досягненні нового рівня \t"YELLOW"$%d\n\
"W"Лікування в лікарні швидше\t"YELLOW"%d x\n\
"W"Час в КПЗ и ДеМоргані проходить швидше\t"YELLOW"%d x\n\
"W"Час бана чата проходить швидше\t"YELLOW"%d x\n\
"W"Перегляд адміністрації в online /admins\t"YELLOW"%s\n\
"W"Дія масок \t"YELLOW"%d хвилин\n\
"W"Патрони на складі армій\t"YELLOW"%d x\n\
"W"Рівень розшуку спадає швидше\t"YELLOW"%d x\n\
"W"Рюкзак гравця вміщає аптечок\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає масок\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає канистр с бензином\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає відмичок\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає боєприпасів\t"YELLOW"%d\n\
"W"Рюкзак гравця вміщає наркотиків\t"YELLOW"%d\n\
"W"Випробування голода\t"YELLOW"рідше на %f %%\n\
"W"Поінти в сім'ю кожен PayDay\t"YELLOW"%d\n\
"W"Переведення в банках\t"YELLOW"%d раз\n\
"W"Процент до зарплати кожен PayDay від організації\t"YELLOW"%d %%\n\
"W"Процент до зарплати від початкових робіт\t"YELLOW"%d %%\n\
"W"Отримання ліцензії на воздушний засіб без проходження практики. (тільки теорія)\t"YELLOW"%d\n\
"W"Безплатна доставка авто до дому\t"YELLOW"%d\n\
"W"Знижка на аренду номера в готелі\t"YELLOW"%d %%\n\
"W"Знижка на одяг\t"YELLOW"%d %%\n\
"W"Знижка на покупку транспорта\t"YELLOW"%d %%\n\
"W"Знижка на аренду транспорта\t"YELLOW"%d %%\n\
"W"Знижка на покращення дому \t"YELLOW"%d %%\n\
"W"Знижка на вартості зміни статі\t"YELLOW"%d %%\n\
"W"Знижка на получення номерів ТС\t"YELLOW"%d %%\n\
"W"Знижка на покращення в Perfomance Tune\t"YELLOW"%d %%\n\
"W"Знижка на тюнинг в Автомайстерні\t"YELLOW"%d %%\n\
"W"Скорочення часу отримання бонусного кейса\t"YELLOW"на %d хвилин\n\
"W"Максимальна кількістьHP\t"YELLOW"%d\n\
"W"Поповнення від одної аптечки\t"YELLOW"%dHP\n\
"W"Безплатна зміна Nick Name в день\t"YELLOW"%d раз\n\
"W"Отримання ліцензій на зброю без мед. печатки\t"YELLOW"%s\n\
"W"При подачі оголошення в /ad Ваша обьява буде відрізнятися тегом [VIP]\t"YELLOW"%s\n\
"W"Дешевий вхід в бізнес\t"YELLOW"в %d раз\n\
"W"Більше не потрібно їздити к Name Bot (/vad)\t"YELLOW"%s\n\
"W"SMS іншим гравцям бесплатні, більше не потрібно поповняти телефон\t"YELLOW"%s\n\
"W"Лікування захворювань дешевше\t"YELLOW"в %d раз\n\
"W"Піднімається ліміт на /pay\t"YELLOW"%d\n\
"W"VIP-чат [/v]\t"YELLOW"%s\n\
"W"Дзвінки іншим гравцям безплатні, більше не потрібно поповнювати телефон\t"YELLOW"%s\n\
"W"Колір ніка в репорті буде інший\t"YELLOW"%s";
	new string[sizeof(f_str) + 80];
	format(string,sizeof(string),f_str,
		vip_status[vip][vip_payday],
		vip_status[vip][vip_afk],
		(vip_status[vip][vip_carlic] == 0) ? ("Так") : ("Ні"),
		vip_status[vip][vip_lvl],
		vip_status[vip][vip_healtime],
		vip_status[vip][vip_arrest],
		vip_status[vip][vip_mute],
		(vip_status[vip][vip_admins] == 0) ? ("Так") : ("Ні"),
		vip_status[vip][vip_mask_time],
		vip_status[vip][vip_armmats],
		vip_status[vip][vip_search],
		vip_status[vip][vip_heal],
		vip_status[vip][vip_mask],
		vip_status[vip][vip_fuel],
		vip_status[vip][vip_jimmy],
		vip_status[vip][vip_mats],
		vip_status[vip][vip_drugs],
		vip_status[vip][vip_satiety],
		vip_status[vip][vip_fam_point],
		vip_status[vip][vip_transfer_bank],
		vip_status[vip][vip_percent_job],
		vip_status[vip][vip_percent_startjob],
		vip_status[vip][vip_flylic],
		vip_status[vip][vip_fixcar],
		vip_status[vip][vip_hotel],
		vip_status[vip][vip_chose],
		vip_status[vip][vip_buycar],
		vip_status[vip][vip_rentcar],
		vip_status[vip][vip_houseupdate],
		vip_status[vip][vip_changesex],
		vip_status[vip][vip_number],
		vip_status[vip][vip_perfonans],
		vip_status[vip][vip_tune],
		vip_status[vip][vip_rulet],
		vip_status[vip][vip_hp],
		vip_status[vip][vip_useheal],
		vip_status[vip][vip_changename],
		(vip_status[vip][vip_gunlic] == 0) ? ("Так") : ("Ні"),
		(vip_status[vip][vip_ad] == 0) ? ("Так") : ("Ні"),
		vip_status[vip][vip_enterbizz],
		(vip_status[vip][vip_vad] == 0) ? ("Так") : ("Ні"),
		(vip_status[vip][vip_sms] == 0) ? ("Так") : ("Ні"),
		vip_status[vip][vip_disease],
		vip_status[vip][vip_pay],
		(vip_status[vip][vip_chat] == 0) ? ("Так") : ("Ні"),
		(vip_status[vip][vip_call] == 0) ? ("Так") : ("Ні"),
		(vip_status[vip][vip_report_color] == 0) ? ("Так") : ("Ні"));
	D(playerid, DIALOG_NONE, DSTH, ""YELLOW"Інформація",string, "Закрити", "");
}

stock GetCarSpeed(model)
{
	new speed;
	switch(model)
	{
	case 429: speed = 3;
	case 505: speed = 2;
	case 551: speed = 2;
	case 494: speed = 3;
	case 477: speed = 3;
	case 445: speed = 2;
	case 560: speed = 2;
	case 587: speed = 3;
	case 602: speed = 2;
	case 503: speed = 3;
	case 400: speed = 3;
	case 502: speed = 3;
	case 506: speed = 2;
	case 559: speed = 2;
	case 579: speed = 3;
	case 604: speed = 3;
	case 410: speed = 2;
	case 475: speed = 3;
	case 405: speed = 2;
	case 402: speed = 3;//
	case 540: speed = 3;
	case 585: speed = 3;//
	case 411: speed = 3;//
	case 541: speed = 3;
	case 404: speed = 3;
	case 565: speed = 2;
	default: speed = 2;
	}
	return speed*2;
}

stock SetAlarmStatus(carid,status)
{
	GetVehicleParamsEx(carid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(carid,engine,lights,status,doors,bonnet,boot,objective);
	VehicleInfo[carid][vAlarm] = status;
	return true;
}
IsPlayerHaveCar(playerid,vehicleid)
{
	if(GetString(VehicleInfo[vehicleid][vOwner],player_name[playerid])) return true;
	return false;
}

SetAttachToSkin(playerid, type, skinid)
{
 	if(type == 58)
	{
		switch(skinid)
		{
			case 1..311:SetPlayerAttachedObject(playerid,5,2226,1,-0.015000,-0.183000,-0.097000,0.000000,27.800003,0.000000,0.759000,0.706000,0.780999);
		}
	}
	return 1;
}

StopAudioStreamForPlayerFix(playerid)
{
	if(bumreader[playerid] != 1) return true;
	StopAudioStreamForPlayer(playerid);
	bumreader[playerid] = 0;
	return true;
}

PlayAudioStreamForPlayerFix(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0)
{
	if(bumreader[playerid] != 0) return true;
	PlayAudioStreamForPlayer(playerid, url,posX,posY,posZ,distance, usepos);
	bumreader[playerid] = 1;
	return true;
}

BumboxSync(i)
{
    new ok = 0;
	foreach(Player,k)
	{
		if(bumboxx[k] == 0) continue;
		if(IsPlayerInRangeOfPoint(i,30.0, BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2]))
		{
		    ok = 1;
			switch(RadioID[k])
			{
			case 0:
				{
					StopAudioStreamForPlayerFix(i);
					break;
				}
			case 1:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Eminem-untouchable.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 2:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Eldzhey-rvanye_dzhinsy.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 3:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Maks_korzh-malinovyy_zakat.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 4:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/T-fest-uleti.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 5:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/FACE-MOI_KALASHNIKOV.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 6:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Egor_Creed-Krutoi.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 7:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Time_Belorusskih-Vitaminka.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 8:
				{
					PlayAudioStreamForPlayerFix(i, "http://http://music.arizona-rp.com/bombox/Lil_Pump-I_Love_It.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 9:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/monetochka-kazhdyy_raz.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 10:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Vremya_i_steklo-trollj.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 11:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/matrang-meduza.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 12:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/skriptonit-tsepi.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 13:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/PHARAOH-Na_Lune.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 14:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/MORGENSHTERN-Zelenoglasie_defki.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 15:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/LIZER-KORABLI.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 16:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Big_Baby_Tape-Hokage.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 17:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/DELORENZY-ZAPRETITE_ANIME.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 18:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Eldzhey-minimal.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			case 19:
				{
					PlayAudioStreamForPlayerFix(i, "http://music.arizona-rp.com/bombox/Face-ya_ronyayu_zapad.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
            case 20:
				{
					PlayAudioStreamForPlayerFix(i, "http://d.zaix.ru/coBt.mp3", BumBoxPos[k][0], BumBoxPos[k][1], BumBoxPos[k][2], 30.0, 1);
					break;
				}
			default:
				{
				    StopAudioStreamForPlayerFix(i);
				    break;
				}
			}
		}
	}
	if(ok == 0) {StopAudioStreamForPlayerFix(i);}
	return true;
}
//погода
forward SetRandomWeather();
public SetRandomWeather()
{
        new fmt_msg[200];
        new rand = random(sizeof weather);
 
        SendClientMessageToAll(0x3399FFFF, "*[ПОГОДА] "W"Синоптик Samp Ukraine");
 
        format(fmt_msg, sizeof fmt_msg, "{3399FF}*[ПОГОДА] "W"Найближчим часом в штаті очікується: %s {99CC00}(+%d °С)", weather[rand][weather_name], weather[rand][weather_degrees]);
        SendClientMessageToAll(-1, fmt_msg);
 
        SetWeather(weather[rand][weather_id]);
        return 1;
}
//Розморозкп анті дм зз
CB: UnfreezePlayer(playerid) return TogglePlayerControllable(playerid, true);

       forward UpdateVehiclePos(vehicleid, type);
       public UpdateVehiclePos(vehicleid, type)
{
       if (type == 1)
{
       BanCar[vehicleid] = false;
}
       GetVehiclePos(vehicleid, VehPos[vehicleid][0], VehPos[vehicleid][1], VehPos[vehicleid][2]);
       GetVehicleZAngle(vehicleid, VehPos[vehicleid][3]);
       return true; 
}
       stock SetVehiclePosition(vehicleid, Float:X, Float:Y, Float:Z)
{
       SetVehiclePos(vehicleid, X, Y, Z);
       UpdateVehiclePos(vehicleid, 0);
}
CB: make_youtube(playerid, name[], level)
{
   	new rows;
	cache_get_row_count(rows);
	if(!rows) return ErrorMessage(playerid,"Гравець не знайдений в базі даних!");
	
	new query[200];
	format(query, sizeof(query), "UPDATE `accounts` SET `youtube` = '%d' WHERE `Name` = '%s' LIMIT 1",level, name);
	mysql_tquery(connects, query,"","");
	
	new str[120];
	if(level == 1) format(str,sizeof(str),"Ви видали %s ютуб адмінку", name);
	else format(str,sizeof(str),"Ви забрали у %s ютуб адмінку", name);
	SendOk(playerid, str);
	
	if(GetPlayerID(name) != INVALID_PLAYER_ID)
	{
	   str[0] = EOS;
	   if(level == 1) format(str,sizeof(str),"Адміністратор %s видав вам ютуб адмінку. Команди ютубера"W" /yhelp",player_name[playerid]);
	   else format(str,sizeof(str),"Адміністратор %s забрав у вас ютуб адмінку",player_name[playerid]);
	   SendOk(GetPlayerID(name), str);
	   PlayerInfo[GetPlayerID(name)][pYoutube] = level;
	}
	return true;
}

//Відновлення на місце виходу, збереження координатів після виходу в БД
stock SaveExitPosition(playerid) {
	new string[280];
	mysql_format(connects, string, sizeof(string),"UPDATE "TABLE_ACCOUNTS" SET spawnData='%.2f,%.2f,%.2f,%.2f' WHERE `pID`='%d'", //Записуємо в базу даних координати X,Y,Z,A.
	PlayerInfo[playerid][pSpawnPos][0], PlayerInfo[playerid][pSpawnPos][1], PlayerInfo[playerid][pSpawnPos][2],
	PlayerInfo[playerid][pSpawnPos][3], PlayerInfo[playerid][pID]);
	mysql_pquery(connects, string, "", "");
}